{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LambdaParameterNameCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java",
  "functionStartLine": 102,
  "functionEndLine": 116,
  "numCommitsSeen": 5,
  "timeTaken": 474,
  "changeHistory": [
    "3835575706d8240b3ec054d17ed48f692b168611"
  ],
  "changeHistoryShort": {
    "3835575706d8240b3ec054d17ed48f692b168611": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3835575706d8240b3ec054d17ed48f692b168611": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5893: added LambdaParameterNameCheck\n",
      "commitDate": "28/06/18 5:25 AM",
      "commitName": "3835575706d8240b3ec054d17ed48f692b168611",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,15 @@\n+    public void visitToken(DetailAST ast) {\n+        final DetailAST parametersNode \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n+        if (parametersNode \u003d\u003d null) {\n+            super.visitToken(ast);\n+        }\n+        else {\n+            for (DetailAST parameterDef \u003d parametersNode.getFirstChild();\n+                 parameterDef !\u003d null;\n+                 parameterDef \u003d parameterDef.getNextSibling()) {\n+                if (parameterDef.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n+                    super.visitToken(parameterDef);\n+                }\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST parametersNode \u003d ast.findFirstToken(TokenTypes.PARAMETERS);\n        if (parametersNode \u003d\u003d null) {\n            super.visitToken(ast);\n        }\n        else {\n            for (DetailAST parameterDef \u003d parametersNode.getFirstChild();\n                 parameterDef !\u003d null;\n                 parameterDef \u003d parameterDef.getNextSibling()) {\n                if (parameterDef.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                    super.visitToken(parameterDef);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/LambdaParameterNameCheck.java"
    }
  }
}