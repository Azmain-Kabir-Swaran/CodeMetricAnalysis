{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParenPadCheck.java",
  "functionName": "visitLiteralFor",
  "functionId": "visitLiteralFor___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
  "functionStartLine": 299,
  "functionEndLine": 308,
  "numCommitsSeen": 37,
  "timeTaken": 962,
  "changeHistory": [
    "e81ca8290b4efd42c3454ffa0159b739f958ea48",
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9"
  ],
  "changeHistoryShort": {
    "e81ca8290b4efd42c3454ffa0159b739f958ea48": "Ybodychange",
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd": "Ybodychange",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e81ca8290b4efd42c3454ffa0159b739f958ea48": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Avoid reuse of local variables\n\nFixes `ReuseOfLocalVariable` inspection violation.\n\nDescription:\n\u003eReports local variables that are \"reused\", overwriting their values with new values unrelated to their original use. Such local variable reuse may be confusing, as the intended semantics of the local variable may vary with each use. It may also be prone to bugs, if code changes result in values that were thought to be overwritten actually being live. It is good practices to keep variable lifetimes as short as possible, and not reuse local variables for the sake of brevity.\n",
      "commitDate": "29/08/15 10:34 PM",
      "commitName": "e81ca8290b4efd42c3454ffa0159b739f958ea48",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:50 AM",
      "commitNameOld": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.7,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void visitLiteralFor(DetailAST ast) {\n-        DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n-        if (!isPrecedingEmptyForInit(parenAst)) {\n-            processLeft(parenAst);\n+        final DetailAST lparen \u003d ast.findFirstToken(TokenTypes.LPAREN);\n+        if (!isPrecedingEmptyForInit(lparen)) {\n+            processLeft(lparen);\n         }\n-        parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n-        if (!isFollowsEmptyForIterator(parenAst)) {\n-            processRight(parenAst);\n+        final DetailAST rparen \u003d ast.findFirstToken(TokenTypes.RPAREN);\n+        if (!isFollowsEmptyForIterator(rparen)) {\n+            processRight(rparen);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralFor(DetailAST ast) {\n        final DetailAST lparen \u003d ast.findFirstToken(TokenTypes.LPAREN);\n        if (!isPrecedingEmptyForInit(lparen)) {\n            processLeft(lparen);\n        }\n        final DetailAST rparen \u003d ast.findFirstToken(TokenTypes.RPAREN);\n        if (!isFollowsEmptyForIterator(rparen)) {\n            processRight(rparen);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "55c92042eb6986e905529de841d3d1c9a7b2b6dd": {
      "type": "Ybodychange",
      "commitMessage": "Fix various typos in Java code. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals, and fix them in one click.\n",
      "commitDate": "27/08/15 5:50 AM",
      "commitName": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "16/08/15 8:41 PM",
      "commitNameOld": "d56a2a366c6f9e3e8639d492d548ae562b75dc81",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 10.38,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void visitLiteralFor(DetailAST ast) {\n         DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n-        if (!isPreceedsEmptyForInit(parenAst)) {\n+        if (!isPrecedingEmptyForInit(parenAst)) {\n             processLeft(parenAst);\n         }\n         parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n         if (!isFollowsEmptyForIterator(parenAst)) {\n             processRight(parenAst);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralFor(DetailAST ast) {\n        DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n        if (!isPrecedingEmptyForInit(parenAst)) {\n            processLeft(parenAst);\n        }\n        parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n        if (!isFollowsEmptyForIterator(parenAst)) {\n            processRight(parenAst);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": {
      "type": "Yintroduced",
      "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
      "commitDate": "25/06/15 10:16 AM",
      "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,10 @@\n+    private void visitLiteralFor(DetailAST ast) {\n+        DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n+        if (!isPreceedsEmptyForInit(parenAst)) {\n+            processLeft(parenAst);\n+        }\n+        parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n+        if (!isFollowsEmptyForIterator(parenAst)) {\n+            processRight(parenAst);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralFor(DetailAST ast) {\n        DetailAST parenAst \u003d ast.findFirstToken(TokenTypes.LPAREN);\n        if (!isPreceedsEmptyForInit(parenAst)) {\n            processLeft(parenAst);\n        }\n        parenAst \u003d ast.findFirstToken(TokenTypes.RPAREN);\n        if (!isFollowsEmptyForIterator(parenAst)) {\n            processRight(parenAst);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java"
    }
  }
}