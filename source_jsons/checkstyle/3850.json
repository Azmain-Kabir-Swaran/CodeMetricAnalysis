{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PropertyCacheFile.java",
  "functionName": "loadExternalResources",
  "functionId": "loadExternalResources___resourceLocations-Set__String__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
  "functionStartLine": 266,
  "functionEndLine": 286,
  "numCommitsSeen": 76,
  "timeTaken": 1751,
  "changeHistory": [
    "0bb9038582406af853dd064d9c699ddc93c0994d",
    "cfeaf8c64d456eb78ac10c3b135116a772581b4d",
    "ec159c79a34b221802724a5ce8d252419b6a9139",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "7790f3104d2770ac909c61e96ae66daba8d372ec",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7"
  ],
  "changeHistoryShort": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": "Ybodychange",
    "cfeaf8c64d456eb78ac10c3b135116a772581b4d": "Ybodychange",
    "ec159c79a34b221802724a5ce8d252419b6a9139": "Ybodychange",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "7790f3104d2770ac909c61e96ae66daba8d372ec": "Ymodifierchange",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3484: removed the last of guava",
      "commitDate": "09/03/19 10:49 PM",
      "commitName": "0bb9038582406af853dd064d9c699ddc93c0994d",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/02/19 3:46 AM",
      "commitNameOld": "86dcb80041a872232b108a51cb502da082f3c640",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 14.79,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n         final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n         for (String location : resourceLocations) {\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n                 final String contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n                 resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                         contentHashSum));\n             }\n-            catch (CheckstyleException ex) {\n+            catch (CheckstyleException | IOException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n                 // available, resource is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n                 final String contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n                 resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                         contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n        for (String location : resourceLocations) {\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                        contentHashSum));\n            }\n            catch (CheckstyleException | IOException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resource is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                        contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {}
    },
    "cfeaf8c64d456eb78ac10c3b135116a772581b4d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6289: resolved final CONSTRUCTOR_CALLS mutation",
      "commitDate": "19/12/18 10:39 PM",
      "commitName": "cfeaf8c64d456eb78ac10c3b135116a772581b4d",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/12/18 7:35 AM",
      "commitNameOld": "ea7b2dd0a9060d427273bd88909e370cb9f88436",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.63,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n         final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n         for (String location : resourceLocations) {\n-            String contentHashSum \u003d null;\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n-                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n+                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n+                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n+                        contentHashSum));\n             }\n             catch (CheckstyleException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n                 // available, resource is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n-                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n-            }\n-            finally {\n+                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n                 resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                         contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n        for (String location : resourceLocations) {\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                        contentHashSum));\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resource is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                final String contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                        contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {}
    },
    "ec159c79a34b221802724a5ce8d252419b6a9139": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4101: changed external resources in cache to have special prefix",
      "commitDate": "25/05/17 5:49 PM",
      "commitName": "ec159c79a34b221802724a5ce8d252419b6a9139",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/04/17 5:37 AM",
      "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 50.51,
      "commitsBetweenForRepo": 199,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n         final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n         for (String location : resourceLocations) {\n             String contentHashSum \u003d null;\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n             }\n             catch (CheckstyleException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n                 // available, resource is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n             }\n             finally {\n-                resources.add(new ExternalResource(location, contentHashSum));\n+                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n+                        contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n        for (String location : resourceLocations) {\n            String contentHashSum \u003d null;\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resource is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n            }\n            finally {\n                resources.add(new ExternalResource(EXTERNAL_RESOURCE_KEY_PREFIX + location,\n                        contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {}
    },
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": {
      "type": "Ybodychange",
      "commitMessage": "spelling: fix some typos in code/javadoc/comments\n",
      "commitDate": "05/04/17 5:37 AM",
      "commitName": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 67.92,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n         final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n         for (String location : resourceLocations) {\n             String contentHashSum \u003d null;\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n             }\n             catch (CheckstyleException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n-                // available, resouce is broken, etc), we need to calculate hash sum based on\n+                // available, resource is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n             }\n             finally {\n                 resources.add(new ExternalResource(location, contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n        for (String location : resourceLocations) {\n            String contentHashSum \u003d null;\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resource is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n            }\n            finally {\n                resources.add(new ExternalResource(location, contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "18/09/16 2:43 PM",
      "commitNameOld": "5a4ebe6a7c99b9f83eadb8354f108e3c63632c4f",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 2.21,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n-        final Set\u003cExternalResource\u003e resources \u003d Sets.newHashSet();\n+        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n         for (String location : resourceLocations) {\n             String contentHashSum \u003d null;\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n             }\n             catch (CheckstyleException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n                 // available, resouce is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n             }\n             finally {\n                 resources.add(new ExternalResource(location, contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d new HashSet\u003c\u003e();\n        for (String location : resourceLocations) {\n            String contentHashSum \u003d null;\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resouce is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n            }\n            finally {\n                resources.add(new ExternalResource(location, contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {}
    },
    "7790f3104d2770ac909c61e96ae66daba8d372ec": {
      "type": "Ymodifierchange",
      "commitMessage": "minor: eclipse violations - methods can be static",
      "commitDate": "31/07/16 7:57 AM",
      "commitName": "7790f3104d2770ac909c61e96ae66daba8d372ec",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/06/16 10:46 AM",
      "commitNameOld": "d8e7cbd12f49569dd277630ae8a704ad99a45309",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 43.88,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-    private Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n+    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n         final Set\u003cExternalResource\u003e resources \u003d Sets.newHashSet();\n         for (String location : resourceLocations) {\n             String contentHashSum \u003d null;\n             try {\n                 final byte[] content \u003d loadExternalResource(location);\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n             }\n             catch (CheckstyleException ex) {\n                 // if exception happened (configuration resource was not found, connection is not\n                 // available, resouce is broken, etc), we need to calculate hash sum based on\n                 // exception object content in order to check whether problem is resolved later\n                 // and/or the configuration is changed.\n                 contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n             }\n             finally {\n                 resources.add(new ExternalResource(location, contentHashSum));\n             }\n         }\n         return resources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d Sets.newHashSet();\n        for (String location : resourceLocations) {\n            String contentHashSum \u003d null;\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resouce is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n            }\n            finally {\n                resources.add(new ExternalResource(location, contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": {
      "type": "Yintroduced",
      "commitMessage": "Issue #407: Fix cache usage in presence of modules which use external resources for configuration (#3092)",
      "commitDate": "16/05/16 1:53 PM",
      "commitName": "ecbeaa6e1df7cb021745e111b04395b9fbd509c7",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,21 @@\n+    private Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n+        final Set\u003cExternalResource\u003e resources \u003d Sets.newHashSet();\n+        for (String location : resourceLocations) {\n+            String contentHashSum \u003d null;\n+            try {\n+                final byte[] content \u003d loadExternalResource(location);\n+                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n+            }\n+            catch (CheckstyleException ex) {\n+                // if exception happened (configuration resource was not found, connection is not\n+                // available, resouce is broken, etc), we need to calculate hash sum based on\n+                // exception object content in order to check whether problem is resolved later\n+                // and/or the configuration is changed.\n+                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n+            }\n+            finally {\n+                resources.add(new ExternalResource(location, contentHashSum));\n+            }\n+        }\n+        return resources;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cExternalResource\u003e loadExternalResources(Set\u003cString\u003e resourceLocations) {\n        final Set\u003cExternalResource\u003e resources \u003d Sets.newHashSet();\n        for (String location : resourceLocations) {\n            String contentHashSum \u003d null;\n            try {\n                final byte[] content \u003d loadExternalResource(location);\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(content);\n            }\n            catch (CheckstyleException ex) {\n                // if exception happened (configuration resource was not found, connection is not\n                // available, resouce is broken, etc), we need to calculate hash sum based on\n                // exception object content in order to check whether problem is resolved later\n                // and/or the configuration is changed.\n                contentHashSum \u003d getHashCodeBasedOnObjectContent(ex);\n            }\n            finally {\n                resources.add(new ExternalResource(location, contentHashSum));\n            }\n        }\n        return resources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PropertyCacheFile.java"
    }
  }
}