{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocParagraphCheck.java",
  "functionName": "visitJavadocToken",
  "functionId": "visitJavadocToken___ast-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
  "functionStartLine": 168,
  "functionEndLine": 176,
  "numCommitsSeen": 41,
  "timeTaken": 1380,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "7a11dbf839178fc7e0961ed0c5014ead68f4bfe5",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "7a11dbf839178fc7e0961ed0c5014ead68f4bfe5": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": "Ybodychange",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void visitJavadocToken(DetailNode ast) {\n         if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n             checkEmptyLine(ast);\n         }\n         else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_START) {\n+                \u0026\u0026 JavadocUtil.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_START) {\n             checkParagraphTag(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitJavadocToken(DetailNode ast) {\n        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n            checkEmptyLine(ast);\n        }\n        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtil.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_START) {\n            checkParagraphTag(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "7a11dbf839178fc7e0961ed0c5014ead68f4bfe5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4448: Updated token names and rule names in javadoc grammar in accordance with the HTML specification\n",
      "commitDate": "26/07/17 10:31 PM",
      "commitName": "7a11dbf839178fc7e0961ed0c5014ead68f4bfe5",
      "commitAuthor": "Piyush Sharma",
      "commitDateOld": "01/07/17 4:17 PM",
      "commitNameOld": "dfa3cee94273bf210acc39c3910a5b936f9be42f",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 25.26,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void visitJavadocToken(DetailNode ast) {\n         if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n             checkEmptyLine(ast);\n         }\n         else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN) {\n+                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_START) {\n             checkParagraphTag(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitJavadocToken(DetailNode ast) {\n        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n            checkEmptyLine(ast);\n        }\n        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_START) {\n            checkParagraphTag(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "18/11/14 5:27 PM",
          "commitNameOld": "4ddb7df07365f216fb7c1e39c4fa49d56f8e0719",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 61.54,
          "commitsBetweenForRepo": 200,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void visitJavadocToken(DetailNode aAst)\n+    public void visitJavadocToken(DetailNode ast)\n     {\n-        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(aAst)) {\n-            checkEmptyLine(aAst);\n+        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n+            checkEmptyLine(ast);\n         }\n-        else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n+        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n+                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n         {\n-            checkParagraphTag(aAst);\n+            checkParagraphTag(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitJavadocToken(DetailNode ast)\n    {\n        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n            checkEmptyLine(ast);\n        }\n        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n        {\n            checkParagraphTag(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {
            "oldValue": "[aAst-DetailNode]",
            "newValue": "[ast-DetailNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "18/11/14 5:27 PM",
          "commitNameOld": "4ddb7df07365f216fb7c1e39c4fa49d56f8e0719",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 61.54,
          "commitsBetweenForRepo": 200,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void visitJavadocToken(DetailNode aAst)\n+    public void visitJavadocToken(DetailNode ast)\n     {\n-        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(aAst)) {\n-            checkEmptyLine(aAst);\n+        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n+            checkEmptyLine(ast);\n         }\n-        else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n+        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n+                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n         {\n-            checkParagraphTag(aAst);\n+            checkParagraphTag(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitJavadocToken(DetailNode ast)\n    {\n        if (ast.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(ast)) {\n            checkEmptyLine(ast);\n        }\n        else if (ast.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(ast).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n        {\n            checkParagraphTag(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": {
      "type": "Ybodychange",
      "commitMessage": "Fix false positives in JavadocParagraphCheck #335\n",
      "commitDate": "23/10/14 8:01 AM",
      "commitName": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": "22/10/14 11:25 AM",
      "commitNameOld": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n     public void visitJavadocToken(DetailNode aAst)\n     {\n-        final DetailNode previousSibling \u003d JavadocUtils.getPreviousSibling(aAst);\n-        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 previousSibling !\u003d null\n-            \u0026\u0026 previousSibling.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK)\n-        {\n+        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(aAst)) {\n             checkEmptyLine(aAst);\n         }\n         else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                 \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n         {\n             checkParagraphTag(aAst);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitJavadocToken(DetailNode aAst)\n    {\n        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 isEmptyLine(aAst)) {\n            checkEmptyLine(aAst);\n        }\n        else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n        {\n            checkParagraphTag(aAst);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": {
      "type": "Yintroduced",
      "commitMessage": "JavaDocParagraph #315\n",
      "commitDate": "20/10/14 11:57 PM",
      "commitName": "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1",
      "commitAuthor": "maxvetrenko",
      "diff": "@@ -0,0 +1,14 @@\n+    public void visitJavadocToken(DetailNode aAst)\n+    {\n+        final DetailNode previousSibling \u003d JavadocUtils.getPreviousSibling(aAst);\n+        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 previousSibling !\u003d null\n+            \u0026\u0026 previousSibling.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK)\n+        {\n+            checkEmptyLine(aAst);\n+        }\n+        else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n+                \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n+        {\n+            checkParagraphTag(aAst);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitJavadocToken(DetailNode aAst)\n    {\n        final DetailNode previousSibling \u003d JavadocUtils.getPreviousSibling(aAst);\n        if (aAst.getType() \u003d\u003d JavadocTokenTypes.NEWLINE \u0026\u0026 previousSibling !\u003d null\n            \u0026\u0026 previousSibling.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK)\n        {\n            checkEmptyLine(aAst);\n        }\n        else if (aAst.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(aAst).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n        {\n            checkParagraphTag(aAst);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java"
    }
  }
}