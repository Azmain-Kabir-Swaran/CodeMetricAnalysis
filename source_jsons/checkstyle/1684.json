{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalInstantiationCheck.java",
  "functionName": "isSamePackage",
  "functionId": "isSamePackage___className-String__pkgNameLen-int__illegal-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
  "functionStartLine": 305,
  "functionEndLine": 318,
  "numCommitsSeen": 83,
  "timeTaken": 1317,
  "changeHistory": [
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
    "d64bdf0caa867be3913f2665ef4fcc654524937e"
  ],
  "changeHistoryShort": {
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": "Ybodychange",
    "d64bdf0caa867be3913f2665ef4fcc654524937e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
      "commitDate": "08/08/15 7:32 PM",
      "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
          "commitDate": "08/08/15 7:32 PM",
          "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "07/08/15 10:17 PM",
          "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-    private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n-                                  String illegal, int illegalLen) {\n+    private boolean isSamePackage(String className, int pkgNameLen, String illegal) {\n         // class from same package\n \n         // the toplevel package (pkgName \u003d\u003d null) is covered by the\n         // \"illegalInsts.contains(className)\" check above\n \n         // the test is the \"no garbage\" version of\n         // illegal.equals(pkgName + \".\" + className)\n         return pkgName !\u003d null\n-                \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n+                \u0026\u0026 className.length() \u003d\u003d illegal.length() - pkgNameLen - 1\n                 \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n                 \u0026\u0026 illegal.endsWith(className)\n                 \u0026\u0026 illegal.startsWith(pkgName);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isSamePackage(String className, int pkgNameLen, String illegal) {\n        // class from same package\n\n        // the toplevel package (pkgName \u003d\u003d null) is covered by the\n        // \"illegalInsts.contains(className)\" check above\n\n        // the test is the \"no garbage\" version of\n        // illegal.equals(pkgName + \".\" + className)\n        return pkgName !\u003d null\n                \u0026\u0026 className.length() \u003d\u003d illegal.length() - pkgNameLen - 1\n                \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n                \u0026\u0026 illegal.endsWith(className)\n                \u0026\u0026 illegal.startsWith(pkgName);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {
            "oldValue": "[className-String, clsNameLen-int, pkgNameLen-int, illegal-String, illegalLen-int]",
            "newValue": "[className-String, pkgNameLen-int, illegal-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
          "commitDate": "08/08/15 7:32 PM",
          "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "07/08/15 10:17 PM",
          "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-    private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n-                                  String illegal, int illegalLen) {\n+    private boolean isSamePackage(String className, int pkgNameLen, String illegal) {\n         // class from same package\n \n         // the toplevel package (pkgName \u003d\u003d null) is covered by the\n         // \"illegalInsts.contains(className)\" check above\n \n         // the test is the \"no garbage\" version of\n         // illegal.equals(pkgName + \".\" + className)\n         return pkgName !\u003d null\n-                \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n+                \u0026\u0026 className.length() \u003d\u003d illegal.length() - pkgNameLen - 1\n                 \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n                 \u0026\u0026 illegal.endsWith(className)\n                 \u0026\u0026 illegal.startsWith(pkgName);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isSamePackage(String className, int pkgNameLen, String illegal) {\n        // class from same package\n\n        // the toplevel package (pkgName \u003d\u003d null) is covered by the\n        // \"illegalInsts.contains(className)\" check above\n\n        // the test is the \"no garbage\" version of\n        // illegal.equals(pkgName + \".\" + className)\n        return pkgName !\u003d null\n                \u0026\u0026 className.length() \u003d\u003d illegal.length() - pkgNameLen - 1\n                \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n                \u0026\u0026 illegal.endsWith(className)\n                \u0026\u0026 illegal.startsWith(pkgName);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": {
      "type": "Ybodychange",
      "commitMessage": "Update Maven PMD Plugin to 3.5. #1300\n",
      "commitDate": "07/07/15 7:40 PM",
      "commitName": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "13/06/15 11:01 PM",
      "commitNameOld": "d64bdf0caa867be3913f2665ef4fcc654524937e",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n     private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n                                   String illegal, int illegalLen) {\n         // class from same package\n \n         // the toplevel package (pkgName \u003d\u003d null) is covered by the\n         // \"illegalInsts.contains(className)\" check above\n \n         // the test is the \"no garbage\" version of\n         // illegal.equals(pkgName + \".\" + className)\n-        if (pkgName !\u003d null\n-            \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n-            \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n-            \u0026\u0026 illegal.endsWith(className)\n-            \u0026\u0026 illegal.startsWith(pkgName)) {\n-            return true;\n-        }\n-        return false;\n+        return pkgName !\u003d null\n+                \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n+                \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n+                \u0026\u0026 illegal.endsWith(className)\n+                \u0026\u0026 illegal.startsWith(pkgName);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n                                  String illegal, int illegalLen) {\n        // class from same package\n\n        // the toplevel package (pkgName \u003d\u003d null) is covered by the\n        // \"illegalInsts.contains(className)\" check above\n\n        // the test is the \"no garbage\" version of\n        // illegal.equals(pkgName + \".\" + className)\n        return pkgName !\u003d null\n                \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n                \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n                \u0026\u0026 illegal.endsWith(className)\n                \u0026\u0026 illegal.startsWith(pkgName);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "d64bdf0caa867be3913f2665ef4fcc654524937e": {
      "type": "Yintroduced",
      "commitMessage": "IllegalInstantiationCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "13/06/15 11:01 PM",
      "commitName": "d64bdf0caa867be3913f2665ef4fcc654524937e",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,18 @@\n+    private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n+                                  String illegal, int illegalLen) {\n+        // class from same package\n+\n+        // the toplevel package (pkgName \u003d\u003d null) is covered by the\n+        // \"illegalInsts.contains(className)\" check above\n+\n+        // the test is the \"no garbage\" version of\n+        // illegal.equals(pkgName + \".\" + className)\n+        if (pkgName !\u003d null\n+            \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n+            \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n+            \u0026\u0026 illegal.endsWith(className)\n+            \u0026\u0026 illegal.startsWith(pkgName)) {\n+            return true;\n+        }\n+        return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isSamePackage(String className, int clsNameLen, int pkgNameLen,\n                                  String illegal, int illegalLen) {\n        // class from same package\n\n        // the toplevel package (pkgName \u003d\u003d null) is covered by the\n        // \"illegalInsts.contains(className)\" check above\n\n        // the test is the \"no garbage\" version of\n        // illegal.equals(pkgName + \".\" + className)\n        if (pkgName !\u003d null\n            \u0026\u0026 clsNameLen \u003d\u003d illegalLen - pkgNameLen - 1\n            \u0026\u0026 illegal.charAt(pkgNameLen) \u003d\u003d \u0027.\u0027\n            \u0026\u0026 illegal.endsWith(className)\n            \u0026\u0026 illegal.startsWith(pkgName)) {\n            return true;\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
    }
  }
}