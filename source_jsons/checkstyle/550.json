{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XpathQueryGenerator.java",
  "functionName": "getMatchingAstElements",
  "functionId": "getMatchingAstElements",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
  "functionStartLine": 233,
  "functionEndLine": 249,
  "numCommitsSeen": 14,
  "timeTaken": 1721,
  "changeHistory": [
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c",
    "433f8b0577a6afb7e8552c0b2a9de1b33892b9d5",
    "f804efa4a1218632de5d25a373e1837ab98e2578",
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f"
  ],
  "changeHistoryShort": {
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c": "Ybodychange",
    "433f8b0577a6afb7e8552c0b2a9de1b33892b9d5": "Ybodychange",
    "f804efa4a1218632de5d25a373e1837ab98e2578": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6356: Xpath: change implementation of the @text attribute\n",
      "commitDate": "27/03/19 11:36 PM",
      "commitName": "a1cd7a5600843dd25318cb66cb7253be1c183a8c",
      "commitAuthor": "Timur Tibeyev",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 71.7,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     private List\u003cDetailAST\u003e getMatchingAstElements() {\n         final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n         DetailAST curNode \u003d rootAst;\n-        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n+        while (curNode !\u003d null) {\n             if (isMatchingByLineAndColumnAndTokenType(curNode)) {\n                 result.add(curNode);\n             }\n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n-                if (toVisit \u003d\u003d null) {\n-                    curNode \u003d curNode.getParent();\n-                }\n+                curNode \u003d curNode.getParent();\n             }\n \n             curNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private List\u003cDetailAST\u003e getMatchingAstElements() {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d rootAst;\n        while (curNode !\u003d null) {\n            if (isMatchingByLineAndColumnAndTokenType(curNode)) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                curNode \u003d curNode.getParent();\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
      "extendedDetails": {}
    },
    "433f8b0577a6afb7e8552c0b2a9de1b33892b9d5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #102: Generate a suppressions.xml file from the errors list\n",
      "commitDate": "29/06/18 6:58 AM",
      "commitName": "433f8b0577a6afb7e8552c0b2a9de1b33892b9d5",
      "commitAuthor": "rnveach",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 25.39,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private List\u003cDetailAST\u003e getMatchingAstElements() {\n         final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n         DetailAST curNode \u003d rootAst;\n         while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n-            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n+            if (isMatchingByLineAndColumnAndTokenType(curNode)) {\n                 result.add(curNode);\n             }\n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n \n             curNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private List\u003cDetailAST\u003e getMatchingAstElements() {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d rootAst;\n        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n            if (isMatchingByLineAndColumnAndTokenType(curNode)) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
      "extendedDetails": {}
    },
    "f804efa4a1218632de5d25a373e1837ab98e2578": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #4999: XpathQueryGenerator should consider tabWith parameter\n",
      "commitDate": "17/09/17 6:59 AM",
      "commitName": "f804efa4a1218632de5d25a373e1837ab98e2578",
      "commitAuthor": "Timur Tibeyev",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4999: XpathQueryGenerator should consider tabWith parameter\n",
          "commitDate": "17/09/17 6:59 AM",
          "commitName": "f804efa4a1218632de5d25a373e1837ab98e2578",
          "commitAuthor": "Timur Tibeyev",
          "commitDateOld": "23/08/17 10:30 AM",
          "commitNameOld": "1fb6107f1230e43a2698ca50e5267ee383fdda6f",
          "commitAuthorOld": "Timur",
          "daysBetweenCommits": 24.85,
          "commitsBetweenForRepo": 122,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,19 @@\n-    private static List\u003cDetailAST\u003e getMatchingAstElements(DetailAST root, int lineNumber,\n-                                                          int columnNumber) {\n+    private List\u003cDetailAST\u003e getMatchingAstElements() {\n         final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n-        DetailAST curNode \u003d root;\n+        DetailAST curNode \u003d rootAst;\n         while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n-            if (curNode.getLineNo() \u003d\u003d lineNumber\n-                    \u0026\u0026 curNode.getColumnNo() \u003d\u003d columnNumber\n-                    \u0026\u0026 curNode.getType() !\u003d TokenTypes.IDENT) {\n+            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                 result.add(curNode);\n             }\n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n \n             curNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailAST\u003e getMatchingAstElements() {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d rootAst;\n        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
          "extendedDetails": {
            "oldValue": "[root-DetailAST, lineNumber-int, columnNumber-int]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #4999: XpathQueryGenerator should consider tabWith parameter\n",
          "commitDate": "17/09/17 6:59 AM",
          "commitName": "f804efa4a1218632de5d25a373e1837ab98e2578",
          "commitAuthor": "Timur Tibeyev",
          "commitDateOld": "23/08/17 10:30 AM",
          "commitNameOld": "1fb6107f1230e43a2698ca50e5267ee383fdda6f",
          "commitAuthorOld": "Timur",
          "daysBetweenCommits": 24.85,
          "commitsBetweenForRepo": 122,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,19 @@\n-    private static List\u003cDetailAST\u003e getMatchingAstElements(DetailAST root, int lineNumber,\n-                                                          int columnNumber) {\n+    private List\u003cDetailAST\u003e getMatchingAstElements() {\n         final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n-        DetailAST curNode \u003d root;\n+        DetailAST curNode \u003d rootAst;\n         while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n-            if (curNode.getLineNo() \u003d\u003d lineNumber\n-                    \u0026\u0026 curNode.getColumnNo() \u003d\u003d columnNumber\n-                    \u0026\u0026 curNode.getType() !\u003d TokenTypes.IDENT) {\n+            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                 result.add(curNode);\n             }\n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n \n             curNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailAST\u003e getMatchingAstElements() {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d rootAst;\n        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4999: XpathQueryGenerator should consider tabWith parameter\n",
          "commitDate": "17/09/17 6:59 AM",
          "commitName": "f804efa4a1218632de5d25a373e1837ab98e2578",
          "commitAuthor": "Timur Tibeyev",
          "commitDateOld": "23/08/17 10:30 AM",
          "commitNameOld": "1fb6107f1230e43a2698ca50e5267ee383fdda6f",
          "commitAuthorOld": "Timur",
          "daysBetweenCommits": 24.85,
          "commitsBetweenForRepo": 122,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,19 @@\n-    private static List\u003cDetailAST\u003e getMatchingAstElements(DetailAST root, int lineNumber,\n-                                                          int columnNumber) {\n+    private List\u003cDetailAST\u003e getMatchingAstElements() {\n         final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n-        DetailAST curNode \u003d root;\n+        DetailAST curNode \u003d rootAst;\n         while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n-            if (curNode.getLineNo() \u003d\u003d lineNumber\n-                    \u0026\u0026 curNode.getColumnNo() \u003d\u003d columnNumber\n-                    \u0026\u0026 curNode.getType() !\u003d TokenTypes.IDENT) {\n+            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                 result.add(curNode);\n             }\n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n \n             curNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailAST\u003e getMatchingAstElements() {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d rootAst;\n        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n            if (isMatchingByLineAndColumnAndNotIdent(curNode)) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
          "extendedDetails": {}
        }
      ]
    },
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4901: Implement xpath query generator\n",
      "commitDate": "23/08/17 10:30 AM",
      "commitName": "1fb6107f1230e43a2698ca50e5267ee383fdda6f",
      "commitAuthor": "Timur",
      "diff": "@@ -0,0 +1,22 @@\n+    private static List\u003cDetailAST\u003e getMatchingAstElements(DetailAST root, int lineNumber,\n+                                                          int columnNumber) {\n+        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n+        DetailAST curNode \u003d root;\n+        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n+            if (curNode.getLineNo() \u003d\u003d lineNumber\n+                    \u0026\u0026 curNode.getColumnNo() \u003d\u003d columnNumber\n+                    \u0026\u0026 curNode.getType() !\u003d TokenTypes.IDENT) {\n+                result.add(curNode);\n+            }\n+            DetailAST toVisit \u003d curNode.getFirstChild();\n+            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n+                toVisit \u003d curNode.getNextSibling();\n+                if (toVisit \u003d\u003d null) {\n+                    curNode \u003d curNode.getParent();\n+                }\n+            }\n+\n+            curNode \u003d toVisit;\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cDetailAST\u003e getMatchingAstElements(DetailAST root, int lineNumber,\n                                                          int columnNumber) {\n        final List\u003cDetailAST\u003e result \u003d new ArrayList\u003c\u003e();\n        DetailAST curNode \u003d root;\n        while (curNode !\u003d null \u0026\u0026 curNode.getLineNo() \u003c\u003d lineNumber) {\n            if (curNode.getLineNo() \u003d\u003d lineNumber\n                    \u0026\u0026 curNode.getColumnNo() \u003d\u003d columnNumber\n                    \u0026\u0026 curNode.getType() !\u003d TokenTypes.IDENT) {\n                result.add(curNode);\n            }\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n\n            curNode \u003d toVisit;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java"
    }
  }
}