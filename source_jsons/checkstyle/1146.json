{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericWhitespaceCheck.java",
  "functionName": "processSingleGeneric",
  "functionId": "processSingleGeneric___ast-DetailAST__line-String__after-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
  "functionStartLine": 233,
  "functionEndLine": 243,
  "numCommitsSeen": 57,
  "timeTaken": 1656,
  "changeHistory": [
    "1a2d4c2bfbd0e9b86e51d5215f20fbecc4c20778",
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "3989e7b80324ca7da7e3620e766d650ead68a67a",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983"
  ],
  "changeHistoryShort": {
    "1a2d4c2bfbd0e9b86e51d5215f20fbecc4c20778": "Ybodychange",
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "3989e7b80324ca7da7e3620e766d650ead68a67a": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190": "Ybodychange",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a2d4c2bfbd0e9b86e51d5215f20fbecc4c20778": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6104: fix GenericWhitespaceCheck for ctor calls\n",
      "commitDate": "11/02/20 10:14 AM",
      "commitName": "1a2d4c2bfbd0e9b86e51d5215f20fbecc4c20778",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 40.73,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,11 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n-\n-        // Need to handle a number of cases. First is:\n-        //    Collections.\u003cObject\u003eemptySet();\n-        //                        ^\n-        //                        +--- whitespace not allowed\n-        if (isGenericBeforeMethod(ast)) {\n+        if (isGenericBeforeMethod(ast) || isGenericBeforeCtor(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n                 log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n             log(ast, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n        if (isGenericBeforeMethod(ast) || isGenericBeforeCtor(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n            log(ast, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5759: Update GenericWhitespaceCheck to log DetailAST\n",
      "commitDate": "17/12/18 9:47 PM",
      "commitName": "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 197.05,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n \n         // Need to handle a number of cases. First is:\n         //    Collections.\u003cObject\u003eemptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n-                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+                log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n-            log(ast.getLineNo(), after, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n+            log(ast, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n            log(ast, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": "21/01/16 6:40 AM",
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n \n         // Need to handle a number of cases. First is:\n         //    Collections.\u003cObject\u003eemptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n-            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n+            log(ast.getLineNo(), after, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n            log(ast.getLineNo(), after, MSG_WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "3989e7b80324ca7da7e3620e766d650ead68a67a": {
      "type": "Ybodychange",
      "commitMessage": "minor: Extracts isCharacterValidAfterGenericEnd method in GenericWhitespaceCheck\n",
      "commitDate": "03/12/15 5:34 AM",
      "commitName": "3989e7b80324ca7da7e3620e766d650ead68a67a",
      "commitAuthor": "liscju",
      "commitDateOld": "31/08/15 11:24 AM",
      "commitNameOld": "2b861bd6e16584e22bb115ff7abd65c35072eb92",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 93.8,
      "commitsBetweenForRepo": 570,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n \n         // Need to handle a number of cases. First is:\n         //    Collections.\u003cObject\u003eemptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n-        else if (!Character.isWhitespace(charAfter)\n-            \u0026\u0026 charAfter !\u003d \u0027(\u0027 \u0026\u0026 charAfter !\u003d \u0027)\u0027\n-            \u0026\u0026 charAfter !\u003d \u0027,\u0027 \u0026\u0026 charAfter !\u003d \u0027[\u0027\n-            \u0026\u0026 charAfter !\u003d \u0027.\u0027 \u0026\u0026 charAfter !\u003d \u0027:\u0027) {\n+        else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n             log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (!isCharacterValidAfterGenericEnd(charAfter)) {\n            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n \n         // Need to handle a number of cases. First is:\n         //    Collections.\u003cObject\u003eemptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (!Character.isWhitespace(charAfter)\n             \u0026\u0026 charAfter !\u003d \u0027(\u0027 \u0026\u0026 charAfter !\u003d \u0027)\u0027\n             \u0026\u0026 charAfter !\u003d \u0027,\u0027 \u0026\u0026 charAfter !\u003d \u0027[\u0027\n             \u0026\u0026 charAfter !\u003d \u0027.\u0027 \u0026\u0026 charAfter !\u003d \u0027:\u0027) {\n-            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \"\u003e\");\n+            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (!Character.isWhitespace(charAfter)\n            \u0026\u0026 charAfter !\u003d \u0027(\u0027 \u0026\u0026 charAfter !\u003d \u0027)\u0027\n            \u0026\u0026 charAfter !\u003d \u0027,\u0027 \u0026\u0026 charAfter !\u003d \u0027[\u0027\n            \u0026\u0026 charAfter !\u003d \u0027.\u0027 \u0026\u0026 charAfter !\u003d \u0027:\u0027) {\n            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1289: \u0027GenericWhitespaceCheck\u0027 refactored, UT coverage improved\n",
      "commitDate": "15/07/15 4:58 PM",
      "commitName": "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "14/06/15 9:56 PM",
      "commitNameOld": "7c1d239748c9a90112bf3a59b189dc31ffe41983",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 30.79,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     private void processSingleGeneric(DetailAST ast, String line, int after) {\n         final char charAfter \u003d line.charAt(after);\n \n         // Need to handle a number of cases. First is:\n         //    Collections.\u003cObject\u003eemptySet();\n         //                        ^\n         //                        +--- whitespace not allowed\n         if (isGenericBeforeMethod(ast)) {\n             if (Character.isWhitespace(charAfter)) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n             }\n         }\n         else if (!Character.isWhitespace(charAfter)\n-            \u0026\u0026 \u0027(\u0027 !\u003d charAfter \u0026\u0026 \u0027)\u0027 !\u003d charAfter\n-            \u0026\u0026 \u0027,\u0027 !\u003d charAfter \u0026\u0026 \u0027[\u0027 !\u003d charAfter\n-            \u0026\u0026 \u0027.\u0027 !\u003d charAfter \u0026\u0026 \u0027:\u0027 !\u003d charAfter\n-            \u0026\u0026 !isAfterMethodReference(ast)) {\n+            \u0026\u0026 charAfter !\u003d \u0027(\u0027 \u0026\u0026 charAfter !\u003d \u0027)\u0027\n+            \u0026\u0026 charAfter !\u003d \u0027,\u0027 \u0026\u0026 charAfter !\u003d \u0027[\u0027\n+            \u0026\u0026 charAfter !\u003d \u0027.\u0027 \u0026\u0026 charAfter !\u003d \u0027:\u0027) {\n             log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \"\u003e\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n            }\n        }\n        else if (!Character.isWhitespace(charAfter)\n            \u0026\u0026 charAfter !\u003d \u0027(\u0027 \u0026\u0026 charAfter !\u003d \u0027)\u0027\n            \u0026\u0026 charAfter !\u003d \u0027,\u0027 \u0026\u0026 charAfter !\u003d \u0027[\u0027\n            \u0026\u0026 charAfter !\u003d \u0027.\u0027 \u0026\u0026 charAfter !\u003d \u0027:\u0027) {\n            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \"\u003e\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": {
      "type": "Yintroduced",
      "commitMessage": "GenericWhitespace updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "14/06/15 9:56 PM",
      "commitName": "7c1d239748c9a90112bf3a59b189dc31ffe41983",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,20 @@\n+    private void processSingleGeneric(DetailAST ast, String line, int after) {\n+        final char charAfter \u003d line.charAt(after);\n+\n+        // Need to handle a number of cases. First is:\n+        //    Collections.\u003cObject\u003eemptySet();\n+        //                        ^\n+        //                        +--- whitespace not allowed\n+        if (isGenericBeforeMethod(ast)) {\n+            if (Character.isWhitespace(charAfter)) {\n+                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+            }\n+        }\n+        else if (!Character.isWhitespace(charAfter)\n+            \u0026\u0026 \u0027(\u0027 !\u003d charAfter \u0026\u0026 \u0027)\u0027 !\u003d charAfter\n+            \u0026\u0026 \u0027,\u0027 !\u003d charAfter \u0026\u0026 \u0027[\u0027 !\u003d charAfter\n+            \u0026\u0026 \u0027.\u0027 !\u003d charAfter \u0026\u0026 \u0027:\u0027 !\u003d charAfter\n+            \u0026\u0026 !isAfterMethodReference(ast)) {\n+            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \"\u003e\");\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processSingleGeneric(DetailAST ast, String line, int after) {\n        final char charAfter \u003d line.charAt(after);\n\n        // Need to handle a number of cases. First is:\n        //    Collections.\u003cObject\u003eemptySet();\n        //                        ^\n        //                        +--- whitespace not allowed\n        if (isGenericBeforeMethod(ast)) {\n            if (Character.isWhitespace(charAfter)) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n            }\n        }\n        else if (!Character.isWhitespace(charAfter)\n            \u0026\u0026 \u0027(\u0027 !\u003d charAfter \u0026\u0026 \u0027)\u0027 !\u003d charAfter\n            \u0026\u0026 \u0027,\u0027 !\u003d charAfter \u0026\u0026 \u0027[\u0027 !\u003d charAfter\n            \u0026\u0026 \u0027.\u0027 !\u003d charAfter \u0026\u0026 \u0027:\u0027 !\u003d charAfter\n            \u0026\u0026 !isAfterMethodReference(ast)) {\n            log(ast.getLineNo(), after, WS_ILLEGAL_FOLLOW, \"\u003e\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java"
    }
  }
}