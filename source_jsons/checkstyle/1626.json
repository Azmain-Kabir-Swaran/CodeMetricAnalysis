{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "checkClassName",
  "functionId": "checkClassName___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 569,
  "functionEndLine": 573,
  "numCommitsSeen": 101,
  "timeTaken": 2200,
  "changeHistory": [
    "fdf3438b48f8753dd2f8b806673089944149ae78",
    "b2f8bca798cedd06065fc137d2bd5e5976e73cee",
    "c91ffeaafb46d8f2558b4e3029597634029f404d",
    "27149f3504a2f350b74f456a9bffbae76a460060",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "75773acf4f256f79c8c19839aad06071950958d1"
  ],
  "changeHistoryShort": {
    "fdf3438b48f8753dd2f8b806673089944149ae78": "Ybodychange",
    "b2f8bca798cedd06065fc137d2bd5e5976e73cee": "Ybodychange",
    "c91ffeaafb46d8f2558b4e3029597634029f404d": "Ybodychange",
    "27149f3504a2f350b74f456a9bffbae76a460060": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "75773acf4f256f79c8c19839aad06071950958d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fdf3438b48f8753dd2f8b806673089944149ae78": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5118: IllegalType does not check type arguments/parameters\n",
      "commitDate": "14/10/18 8:24 AM",
      "commitName": "fdf3438b48f8753dd2f8b806673089944149ae78",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "07/10/18 11:05 AM",
      "commitNameOld": "b2f8bca798cedd06065fc137d2bd5e5976e73cee",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 6.89,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,5 @@\n     private void checkClassName(DetailAST ast) {\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n-        final FullIdent ident \u003d FullIdent.createFullIdent(type.getFirstChild());\n-\n-        if (isMatchingClassName(ident.getText())) {\n-            log(ident.getDetailAst(), MSG_KEY, ident.getText());\n-        }\n+        checkType(type);\n+        checkTypeParameters(ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST ast) {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        checkType(type);\n        checkTypeParameters(ast);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "b2f8bca798cedd06065fc137d2bd5e5976e73cee": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6121: Update FullIdent to store DetailAST instead of line/column\n",
      "commitDate": "07/10/18 11:05 AM",
      "commitName": "b2f8bca798cedd06065fc137d2bd5e5976e73cee",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "08/07/18 10:48 PM",
      "commitNameOld": "52635b354682b354672a03e32633500b89223e08",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 90.51,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n     private void checkClassName(DetailAST ast) {\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final FullIdent ident \u003d FullIdent.createFullIdent(type.getFirstChild());\n \n         if (isMatchingClassName(ident.getText())) {\n-            log(ident.getLineNo(), ident.getColumnNo(),\n-                MSG_KEY, ident.getText());\n+            log(ident.getDetailAst(), MSG_KEY, ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST ast) {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d FullIdent.createFullIdent(type.getFirstChild());\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getDetailAst(), MSG_KEY, ident.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "c91ffeaafb46d8f2558b4e3029597634029f404d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4429: IllegalType: support arrays as types\n",
      "commitDate": "04/02/18 10:58 AM",
      "commitName": "c91ffeaafb46d8f2558b4e3029597634029f404d",
      "commitAuthor": "kazachka",
      "commitDateOld": "04/01/18 7:20 AM",
      "commitNameOld": "0847a10b9430d9fb0a3f44df03e891da906bea47",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 31.15,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void checkClassName(DetailAST ast) {\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n-        final FullIdent ident \u003d CheckUtils.createFullType(type);\n+        final FullIdent ident \u003d FullIdent.createFullIdent(type.getFirstChild());\n \n         if (isMatchingClassName(ident.getText())) {\n             log(ident.getLineNo(), ident.getColumnNo(),\n                 MSG_KEY, ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST ast) {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d FullIdent.createFullIdent(type.getFirstChild());\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                MSG_KEY, ident.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "27149f3504a2f350b74f456a9bffbae76a460060": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, coding package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkClassName(DetailAST ast)\n     {\n         final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final FullIdent ident \u003d CheckUtils.createFullType(type);\n \n         if (isMatchingClassName(ident.getText())) {\n             log(ident.getLineNo(), ident.getColumnNo(),\n-                \"illegal.type\", ident.getText());\n+                MSG_KEY, ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST ast)\n    {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                MSG_KEY, ident.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private void checkClassName(DetailAST aAST)\n+    private void checkClassName(DetailAST ast)\n     {\n-        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n+        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final FullIdent ident \u003d CheckUtils.createFullType(type);\n \n         if (isMatchingClassName(ident.getText())) {\n             log(ident.getLineNo(), ident.getColumnNo(),\n                 \"illegal.type\", ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkClassName(DetailAST ast)\n    {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                \"illegal.type\", ident.getText());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private void checkClassName(DetailAST aAST)\n+    private void checkClassName(DetailAST ast)\n     {\n-        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n+        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n         final FullIdent ident \u003d CheckUtils.createFullType(type);\n \n         if (isMatchingClassName(ident.getText())) {\n             log(ident.getLineNo(), ident.getColumnNo(),\n                 \"illegal.type\", ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkClassName(DetailAST ast)\n    {\n        final DetailAST type \u003d ast.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                \"illegal.type\", ident.getText());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void checkClassName(DetailAST aAST)\n    {\n        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                \"illegal.type\", ident.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
      }
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.68,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void checkClassName(DetailAST aAST)\n     {\n         final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n-        FullIdent ident \u003d CheckUtils.createFullType(type);\n+        final FullIdent ident \u003d CheckUtils.createFullType(type);\n \n         if (isMatchingClassName(ident.getText())) {\n             log(ident.getLineNo(), ident.getColumnNo(),\n                 \"illegal.type\", ident.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST aAST)\n    {\n        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n        final FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                \"illegal.type\", ident.getText());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "75773acf4f256f79c8c19839aad06071950958d1": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalType check from Simon Harris (request 750739).\nAdded getter for illegalClassNames property of IllegalCatch check.\n",
      "commitDate": "04/09/03 11:35 AM",
      "commitName": "75773acf4f256f79c8c19839aad06071950958d1",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,10 @@\n+    private void checkClassName(DetailAST aAST)\n+    {\n+        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n+        FullIdent ident \u003d CheckUtils.createFullType(type);\n+\n+        if (isMatchingClassName(ident.getText())) {\n+            log(ident.getLineNo(), ident.getColumnNo(),\n+                \"illegal.type\", ident.getText());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkClassName(DetailAST aAST)\n    {\n        final DetailAST type \u003d aAST.findFirstToken(TokenTypes.TYPE);\n        FullIdent ident \u003d CheckUtils.createFullType(type);\n\n        if (isMatchingClassName(ident.getText())) {\n            log(ident.getLineNo(), ident.getColumnNo(),\n                \"illegal.type\", ident.getText());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}