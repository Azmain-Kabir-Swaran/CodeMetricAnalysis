{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonUtil.java",
  "functionName": "getUriByFilename",
  "functionId": "getUriByFilename___filename-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
  "functionStartLine": 500,
  "functionEndLine": 538,
  "numCommitsSeen": 43,
  "timeTaken": 1849,
  "changeHistory": [
    "9b8dea47d8a636905071e962675a644f8c5ba351",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c"
  ],
  "changeHistoryShort": {
    "9b8dea47d8a636905071e962675a644f8c5ba351": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ymultichange(Yfilerename,Ybodychange)",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b8dea47d8a636905071e962675a644f8c5ba351": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6232: Load resources relative to resources root\n",
      "commitDate": "06/06/19 6:08 PM",
      "commitName": "9b8dea47d8a636905071e962675a644f8c5ba351",
      "commitAuthor": "Peter De Maeyer",
      "commitDateOld": "07/05/19 4:48 AM",
      "commitNameOld": "45e7e369f5be02806597bbd1a61f64c50d90bae2",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 30.56,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,39 @@\n     public static URI getUriByFilename(String filename) throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final URISyntaxException | MalformedURLException ignored) {\n             uri \u003d null;\n         }\n \n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n-                    final URL configUrl \u003d CommonUtil.class\n-                            .getResource(filename);\n+                    final URL configUrl;\n+                    if (filename.charAt(0) \u003d\u003d \u0027/\u0027) {\n+                        configUrl \u003d CommonUtil.class.getResource(filename);\n+                    }\n+                    else {\n+                        configUrl \u003d ClassLoader.getSystemResource(filename);\n+                    }\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException ex) {\n                     throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                 }\n             }\n         }\n \n         return uri;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static URI getUriByFilename(String filename) throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final URISyntaxException | MalformedURLException ignored) {\n            uri \u003d null;\n        }\n\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl;\n                    if (filename.charAt(0) \u003d\u003d \u0027/\u0027) {\n                        configUrl \u003d CommonUtil.class.getResource(filename);\n                    }\n                    else {\n                        configUrl \u003d ClassLoader.getSystemResource(filename);\n                    }\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException ex) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                }\n            }\n        }\n\n        return uri;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
          "commitDate": "03/06/18 9:40 PM",
          "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "03/06/18 6:34 PM",
          "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n     public static URI getUriByFilename(String filename) throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final URISyntaxException | MalformedURLException ignored) {\n             uri \u003d null;\n         }\n \n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n-                    final URL configUrl \u003d CommonUtils.class\n+                    final URL configUrl \u003d CommonUtil.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException ex) {\n                     throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                 }\n             }\n         }\n \n         return uri;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static URI getUriByFilename(String filename) throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final URISyntaxException | MalformedURLException ignored) {\n            uri \u003d null;\n        }\n\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d CommonUtil.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException ex) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                }\n            }\n        }\n\n        return uri;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
          "commitDate": "03/06/18 9:40 PM",
          "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "03/06/18 6:34 PM",
          "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.13,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n     public static URI getUriByFilename(String filename) throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final URISyntaxException | MalformedURLException ignored) {\n             uri \u003d null;\n         }\n \n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n-                    final URL configUrl \u003d CommonUtils.class\n+                    final URL configUrl \u003d CommonUtil.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException ex) {\n                     throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                 }\n             }\n         }\n \n         return uri;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static URI getUriByFilename(String filename) throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final URISyntaxException | MalformedURLException ignored) {\n            uri \u003d null;\n        }\n\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d CommonUtil.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException ex) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                }\n            }\n        }\n\n        return uri;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": "03/12/15 3:16 PM",
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "29/10/15 9:12 PM",
      "commitNameOld": "f2c6263e151e8a7300755b36fbb41511c0a0cca1",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 34.79,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public static URI getUriByFilename(String filename) throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final URISyntaxException | MalformedURLException ignored) {\n             uri \u003d null;\n         }\n \n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n                     final URL configUrl \u003d CommonUtils.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n-                catch (final URISyntaxException e) {\n-                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, e);\n+                catch (final URISyntaxException ex) {\n+                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                 }\n             }\n         }\n \n         return uri;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static URI getUriByFilename(String filename) throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final URISyntaxException | MalformedURLException ignored) {\n            uri \u003d null;\n        }\n\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d CommonUtils.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException ex) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, ex);\n                }\n            }\n        }\n\n        return uri;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
      "extendedDetails": {}
    },
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c": {
      "type": "Yintroduced",
      "commitMessage": "Issue #46: blocks of code should not be duplicated\n",
      "commitDate": "10/09/15 5:25 PM",
      "commitName": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c",
      "commitAuthor": "Ilja Dubinin",
      "diff": "@@ -0,0 +1,34 @@\n+    public static URI getUriByFilename(String filename) throws CheckstyleException {\n+        // figure out if this is a File or a URL\n+        URI uri;\n+        try {\n+            final URL url \u003d new URL(filename);\n+            uri \u003d url.toURI();\n+        }\n+        catch (final URISyntaxException | MalformedURLException ignored) {\n+            uri \u003d null;\n+        }\n+\n+        if (uri \u003d\u003d null) {\n+            final File file \u003d new File(filename);\n+            if (file.exists()) {\n+                uri \u003d file.toURI();\n+            }\n+            else {\n+                // check to see if the file is in the classpath\n+                try {\n+                    final URL configUrl \u003d CommonUtils.class\n+                            .getResource(filename);\n+                    if (configUrl \u003d\u003d null) {\n+                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n+                    }\n+                    uri \u003d configUrl.toURI();\n+                }\n+                catch (final URISyntaxException e) {\n+                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, e);\n+                }\n+            }\n+        }\n+\n+        return uri;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static URI getUriByFilename(String filename) throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final URISyntaxException | MalformedURLException ignored) {\n            uri \u003d null;\n        }\n\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d CommonUtils.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_EXCEPTION_PREFIX + filename, e);\n                }\n            }\n        }\n\n        return uri;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java"
    }
  }
}