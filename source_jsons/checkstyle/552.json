{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XpathQueryGenerator.java",
  "functionName": "hasAtLeastOneSiblingWithSameTokenType",
  "functionId": "hasAtLeastOneSiblingWithSameTokenType___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
  "functionStartLine": 291,
  "functionEndLine": 310,
  "numCommitsSeen": 13,
  "timeTaken": 740,
  "changeHistory": [
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c",
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f"
  ],
  "changeHistoryShort": {
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c": "Ybodychange",
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a1cd7a5600843dd25318cb66cb7253be1c183a8c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6356: Xpath: change implementation of the @text attribute\n",
      "commitDate": "27/03/19 11:36 PM",
      "commitName": "a1cd7a5600843dd25318cb66cb7253be1c183a8c",
      "commitAuthor": "Timur Tibeyev",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 71.7,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,20 @@\n     private static boolean hasAtLeastOneSiblingWithSameTokenType(DetailAST ast) {\n         boolean result \u003d false;\n-        if (ast.getParent() \u003d\u003d null) {\n-            DetailAST prev \u003d ast.getPreviousSibling();\n-            while (prev !\u003d null) {\n-                if (prev.getType() \u003d\u003d ast.getType()) {\n-                    result \u003d true;\n-                    break;\n-                }\n-                prev \u003d prev.getPreviousSibling();\n+        DetailAST prev \u003d ast.getPreviousSibling();\n+        while (prev !\u003d null) {\n+            if (prev.getType() \u003d\u003d ast.getType()) {\n+                result \u003d true;\n+                break;\n             }\n-            if (!result) {\n-                DetailAST next \u003d ast.getNextSibling();\n-                while (next !\u003d null) {\n-                    if (next.getType() \u003d\u003d ast.getType()) {\n-                        result \u003d true;\n-                        break;\n-                    }\n-                    next \u003d next.getNextSibling();\n-                }\n-            }\n+            prev \u003d prev.getPreviousSibling();\n         }\n-        else {\n-            result \u003d ast.getParent().getChildCount(ast.getType()) \u003e 1;\n+        DetailAST next \u003d ast.getNextSibling();\n+        while (next !\u003d null) {\n+            if (next.getType() \u003d\u003d ast.getType()) {\n+                result \u003d true;\n+                break;\n+            }\n+            next \u003d next.getNextSibling();\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasAtLeastOneSiblingWithSameTokenType(DetailAST ast) {\n        boolean result \u003d false;\n        DetailAST prev \u003d ast.getPreviousSibling();\n        while (prev !\u003d null) {\n            if (prev.getType() \u003d\u003d ast.getType()) {\n                result \u003d true;\n                break;\n            }\n            prev \u003d prev.getPreviousSibling();\n        }\n        DetailAST next \u003d ast.getNextSibling();\n        while (next !\u003d null) {\n            if (next.getType() \u003d\u003d ast.getType()) {\n                result \u003d true;\n                break;\n            }\n            next \u003d next.getNextSibling();\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java",
      "extendedDetails": {}
    },
    "1fb6107f1230e43a2698ca50e5267ee383fdda6f": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4901: Implement xpath query generator\n",
      "commitDate": "23/08/17 10:30 AM",
      "commitName": "1fb6107f1230e43a2698ca50e5267ee383fdda6f",
      "commitAuthor": "Timur",
      "diff": "@@ -0,0 +1,27 @@\n+    private static boolean hasAtLeastOneSiblingWithSameTokenType(DetailAST ast) {\n+        boolean result \u003d false;\n+        if (ast.getParent() \u003d\u003d null) {\n+            DetailAST prev \u003d ast.getPreviousSibling();\n+            while (prev !\u003d null) {\n+                if (prev.getType() \u003d\u003d ast.getType()) {\n+                    result \u003d true;\n+                    break;\n+                }\n+                prev \u003d prev.getPreviousSibling();\n+            }\n+            if (!result) {\n+                DetailAST next \u003d ast.getNextSibling();\n+                while (next !\u003d null) {\n+                    if (next.getType() \u003d\u003d ast.getType()) {\n+                        result \u003d true;\n+                        break;\n+                    }\n+                    next \u003d next.getNextSibling();\n+                }\n+            }\n+        }\n+        else {\n+            result \u003d ast.getParent().getChildCount(ast.getType()) \u003e 1;\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasAtLeastOneSiblingWithSameTokenType(DetailAST ast) {\n        boolean result \u003d false;\n        if (ast.getParent() \u003d\u003d null) {\n            DetailAST prev \u003d ast.getPreviousSibling();\n            while (prev !\u003d null) {\n                if (prev.getType() \u003d\u003d ast.getType()) {\n                    result \u003d true;\n                    break;\n                }\n                prev \u003d prev.getPreviousSibling();\n            }\n            if (!result) {\n                DetailAST next \u003d ast.getNextSibling();\n                while (next !\u003d null) {\n                    if (next.getType() \u003d\u003d ast.getType()) {\n                        result \u003d true;\n                        break;\n                    }\n                    next \u003d next.getNextSibling();\n                }\n            }\n        }\n        else {\n            result \u003d ast.getParent().getChildCount(ast.getType()) \u003e 1;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/xpath/XpathQueryGenerator.java"
    }
  }
}