{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParenPadCheck.java",
  "functionName": "isFollowsEmptyForIterator",
  "functionId": "isFollowsEmptyForIterator___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
  "functionStartLine": 403,
  "functionEndLine": 413,
  "numCommitsSeen": 67,
  "timeTaken": 1759,
  "changeHistory": [
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "fee0ec8258a99bd81b36e109dd4c4cf73f0b7608",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2"
  ],
  "changeHistoryShort": {
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9": "Ybodychange",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": "Ymultichange(Ymodifierchange,Ybodychange)",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "fee0ec8258a99bd81b36e109dd4c4cf73f0b7608": "Ybodychange",
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7487: refactor code to use DetailAST.hasChildren()\n",
      "commitDate": "26/01/20 5:04 AM",
      "commitName": "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9",
      "commitAuthor": "pbludov",
      "commitDateOld": "10/01/20 7:54 PM",
      "commitNameOld": "1196148e5a316405870b93e2f91a1948fe087215",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 15.38,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n         boolean result \u003d false;\n         final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n         if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n-            result \u003d forIterator.getChildCount() \u003d\u003d 0;\n+            result \u003d !forIterator.hasChildren();\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n        boolean result \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            result \u003d !forIterator.hasChildren();\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
      "commitDate": "25/06/15 10:16 AM",
      "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
          "commitDate": "25/06/15 10:16 AM",
          "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "17/05/15 4:47 AM",
          "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 39.23,
          "commitsBetweenForRepo": 198,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,11 @@\n-    private boolean isFollowsEmptyForIterator(DetailAST ast) {\n-        boolean followsEmptyForIterator \u003d false;\n+    private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n+        boolean result \u003d false;\n         final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n-        if (parent !\u003d null\n-            \u0026\u0026 parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR\n-            \u0026\u0026 parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n+        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n-            followsEmptyForIterator \u003d forIterator.getChildCount() \u003d\u003d 0\n-                \u0026\u0026 ast \u003d\u003d forIterator.getNextSibling();\n+            result \u003d forIterator.getChildCount() \u003d\u003d 0;\n         }\n-        return followsEmptyForIterator;\n+        return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n        boolean result \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            result \u003d forIterator.getChildCount() \u003d\u003d 0;\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
          "commitDate": "25/06/15 10:16 AM",
          "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "17/05/15 4:47 AM",
          "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 39.23,
          "commitsBetweenForRepo": 198,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,11 @@\n-    private boolean isFollowsEmptyForIterator(DetailAST ast) {\n-        boolean followsEmptyForIterator \u003d false;\n+    private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n+        boolean result \u003d false;\n         final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n-        if (parent !\u003d null\n-            \u0026\u0026 parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR\n-            \u0026\u0026 parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n+        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n-            followsEmptyForIterator \u003d forIterator.getChildCount() \u003d\u003d 0\n-                \u0026\u0026 ast \u003d\u003d forIterator.getNextSibling();\n+            result \u003d forIterator.getChildCount() \u003d\u003d 0;\n         }\n-        return followsEmptyForIterator;\n+        return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isFollowsEmptyForIterator(DetailAST ast) {\n        boolean result \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null) {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            result \u003d forIterator.getChildCount() \u003d\u003d 0;\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "09/03/15 11:26 PM",
      "commitNameOld": "49a23751eb6bffdfba94d72454d7676c9f85adc5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private boolean isFollowsEmptyForIterator(DetailAST ast)\n     {\n         boolean followsEmptyForIterator \u003d false;\n         final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n-        if ((parent !\u003d null)\n-            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n-            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n+        if (parent !\u003d null\n+            \u0026\u0026 parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR\n+            \u0026\u0026 parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null)\n         {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n-            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n-                \u0026\u0026 (ast \u003d\u003d forIterator.getNextSibling());\n+            followsEmptyForIterator \u003d forIterator.getChildCount() \u003d\u003d 0\n+                \u0026\u0026 ast \u003d\u003d forIterator.getNextSibling();\n         }\n         return followsEmptyForIterator;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST ast)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if (parent !\u003d null\n            \u0026\u0026 parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR\n            \u0026\u0026 parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null)\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d forIterator.getChildCount() \u003d\u003d 0\n                \u0026\u0026 ast \u003d\u003d forIterator.getNextSibling();\n        }\n        return followsEmptyForIterator;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "12/08/14 12:40 AM",
          "commitNameOld": "78ccdd54ce953c433981052246e95008531f21d2",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 160.28,
          "commitsBetweenForRepo": 361,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n+    private boolean isFollowsEmptyForIterator(DetailAST ast)\n     {\n         boolean followsEmptyForIterator \u003d false;\n-        final DetailAST parent \u003d aAST.getParent();\n+        final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n         if ((parent !\u003d null)\n             \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n             \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n         {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n             followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n-                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n+                \u0026\u0026 (ast \u003d\u003d forIterator.getNextSibling());\n         }\n         return followsEmptyForIterator;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST ast)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if ((parent !\u003d null)\n            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                \u0026\u0026 (ast \u003d\u003d forIterator.getNextSibling());\n        }\n        return followsEmptyForIterator;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "12/08/14 12:40 AM",
          "commitNameOld": "78ccdd54ce953c433981052246e95008531f21d2",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 160.28,
          "commitsBetweenForRepo": 361,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n+    private boolean isFollowsEmptyForIterator(DetailAST ast)\n     {\n         boolean followsEmptyForIterator \u003d false;\n-        final DetailAST parent \u003d aAST.getParent();\n+        final DetailAST parent \u003d ast.getParent();\n         //Only traditional for statements are examined, not for-each statements\n         if ((parent !\u003d null)\n             \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n             \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n         {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n             followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n-                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n+                \u0026\u0026 (ast \u003d\u003d forIterator.getNextSibling());\n         }\n         return followsEmptyForIterator;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST ast)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d ast.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if ((parent !\u003d null)\n            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                \u0026\u0026 (ast \u003d\u003d forIterator.getNextSibling());\n        }\n        return followsEmptyForIterator;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d aAST.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if ((parent !\u003d null)\n            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n        }\n        return followsEmptyForIterator;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java"
      }
    },
    "fee0ec8258a99bd81b36e109dd4c4cf73f0b7608": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug where for-each statements caused a NPE when checking special case for for statements with empty iterator clauses in ParenPadCheck.\n",
      "commitDate": "19/12/04 3:44 PM",
      "commitName": "fee0ec8258a99bd81b36e109dd4c4cf73f0b7608",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "15/02/04 3:31 AM",
      "commitNameOld": "da2328d0f138c2d989056bc876f8698cc53bffe3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 308.51,
      "commitsBetweenForRepo": 157,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     private boolean isFollowsEmptyForIterator(DetailAST aAST)\n     {\n         boolean followsEmptyForIterator \u003d false;\n         final DetailAST parent \u003d aAST.getParent();\n+        //Only traditional for statements are examined, not for-each statements\n         if ((parent !\u003d null)\n-            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR))\n+            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n+            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n         {\n             final DetailAST forIterator \u003d\n                 parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n             followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                 \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n         }\n         return followsEmptyForIterator;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d aAST.getParent();\n        //Only traditional for statements are examined, not for-each statements\n        if ((parent !\u003d null)\n            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR)\n            \u0026\u0026 (parent.findFirstToken(TokenTypes.FOR_EACH_CLAUSE) \u003d\u003d null))\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n        }\n        return followsEmptyForIterator;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2": {
      "type": "Yintroduced",
      "commitMessage": "bug-750348: added check for typecast parens. Involved\na bit of refactoring.\n",
      "commitDate": "08/06/03 11:20 PM",
      "commitName": "99ed7a7d2c1861dbf327ea9a421ec56f10c92fc2",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,14 @@\n+    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n+    {\n+        boolean followsEmptyForIterator \u003d false;\n+        final DetailAST parent \u003d aAST.getParent();\n+        if ((parent !\u003d null)\n+            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR))\n+        {\n+            final DetailAST forIterator \u003d\n+                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n+            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n+                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n+        }\n+        return followsEmptyForIterator;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isFollowsEmptyForIterator(DetailAST aAST)\n    {\n        boolean followsEmptyForIterator \u003d false;\n        final DetailAST parent \u003d aAST.getParent();\n        if ((parent !\u003d null)\n            \u0026\u0026 (parent.getType() \u003d\u003d TokenTypes.LITERAL_FOR))\n        {\n            final DetailAST forIterator \u003d\n                parent.findFirstToken(TokenTypes.FOR_ITERATOR);\n            followsEmptyForIterator \u003d (forIterator.getChildCount() \u003d\u003d 0)\n                \u0026\u0026 (aAST \u003d\u003d forIterator.getNextSibling());\n        }\n        return followsEmptyForIterator;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java"
    }
  }
}