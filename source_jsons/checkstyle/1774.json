{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FallThroughCheck.java",
  "functionName": "checkTry",
  "functionId": "checkTry___ast-DetailAST(modifiers-final)__useBreak-boolean__useContinue-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
  "functionStartLine": 314,
  "functionEndLine": 344,
  "numCommitsSeen": 81,
  "timeTaken": 1998,
  "changeHistory": [
    "32285aadd7635960005f3bcf7ad3104ca52fd784",
    "2bd61975dfc9f6ada80ec009d46f6c95d483b5bf",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "553f3eb61ef4b3dfa22beaa37173c49d24374072"
  ],
  "changeHistoryShort": {
    "32285aadd7635960005f3bcf7ad3104ca52fd784": "Ybodychange",
    "2bd61975dfc9f6ada80ec009d46f6c95d483b5bf": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "553f3eb61ef4b3dfa22beaa37173c49d24374072": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32285aadd7635960005f3bcf7ad3104ca52fd784": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3509: fixed try with resource on FallThroughCheck",
      "commitDate": "05/01/17 3:32 PM",
      "commitName": "32285aadd7635960005f3bcf7ad3104ca52fd784",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/16 4:34 AM",
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 57.46,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,31 @@\n     private boolean checkTry(final DetailAST ast, boolean useBreak,\n                              boolean useContinue) {\n         final DetailAST finalStmt \u003d ast.getLastChild();\n         boolean isTerminated \u003d false;\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             isTerminated \u003d isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 useBreak, useContinue);\n         }\n \n         if (!isTerminated) {\n-            isTerminated \u003d isTerminated(ast.getFirstChild(),\n+            DetailAST firstChild \u003d ast.getFirstChild();\n+\n+            if (firstChild.getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n+                firstChild \u003d firstChild.getNextSibling();\n+            }\n+\n+            isTerminated \u003d isTerminated(firstChild,\n                     useBreak, useContinue);\n \n             DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n             while (catchStmt !\u003d null\n                     \u0026\u0026 isTerminated\n                     \u0026\u0026 catchStmt.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                 final DetailAST catchBody \u003d\n                         catchStmt.findFirstToken(TokenTypes.SLIST);\n                 isTerminated \u003d isTerminated(catchBody, useBreak, useContinue);\n                 catchStmt \u003d catchStmt.getNextSibling();\n             }\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST ast, boolean useBreak,\n                             boolean useContinue) {\n        final DetailAST finalStmt \u003d ast.getLastChild();\n        boolean isTerminated \u003d false;\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            isTerminated \u003d isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                useBreak, useContinue);\n        }\n\n        if (!isTerminated) {\n            DetailAST firstChild \u003d ast.getFirstChild();\n\n            if (firstChild.getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                firstChild \u003d firstChild.getNextSibling();\n            }\n\n            isTerminated \u003d isTerminated(firstChild,\n                    useBreak, useContinue);\n\n            DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n            while (catchStmt !\u003d null\n                    \u0026\u0026 isTerminated\n                    \u0026\u0026 catchStmt.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                final DetailAST catchBody \u003d\n                        catchStmt.findFirstToken(TokenTypes.SLIST);\n                isTerminated \u003d isTerminated(catchBody, useBreak, useContinue);\n                catchStmt \u003d catchStmt.getNextSibling();\n            }\n        }\n        return isTerminated;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "2bd61975dfc9f6ada80ec009d46f6c95d483b5bf": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1438: Fix handling finally in FallThroughCheck\n",
      "commitDate": "09/11/15 1:16 PM",
      "commitName": "2bd61975dfc9f6ada80ec009d46f6c95d483b5bf",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "28/08/15 10:50 PM",
      "commitNameOld": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 72.64,
      "commitsBetweenForRepo": 574,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n     private boolean checkTry(final DetailAST ast, boolean useBreak,\n                              boolean useContinue) {\n         final DetailAST finalStmt \u003d ast.getLastChild();\n+        boolean isTerminated \u003d false;\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n-            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n+            isTerminated \u003d isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 useBreak, useContinue);\n         }\n \n-        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n-                                            useBreak, useContinue);\n+        if (!isTerminated) {\n+            isTerminated \u003d isTerminated(ast.getFirstChild(),\n+                    useBreak, useContinue);\n \n-        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n-        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n-            final DetailAST catchBody \u003d\n-                catchStmt.findFirstToken(TokenTypes.SLIST);\n-            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n-            catchStmt \u003d catchStmt.getNextSibling();\n+            DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n+            while (catchStmt !\u003d null\n+                    \u0026\u0026 isTerminated\n+                    \u0026\u0026 catchStmt.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+                final DetailAST catchBody \u003d\n+                        catchStmt.findFirstToken(TokenTypes.SLIST);\n+                isTerminated \u003d isTerminated(catchBody, useBreak, useContinue);\n+                catchStmt \u003d catchStmt.getNextSibling();\n+            }\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST ast, boolean useBreak,\n                             boolean useContinue) {\n        final DetailAST finalStmt \u003d ast.getLastChild();\n        boolean isTerminated \u003d false;\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            isTerminated \u003d isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                useBreak, useContinue);\n        }\n\n        if (!isTerminated) {\n            isTerminated \u003d isTerminated(ast.getFirstChild(),\n                    useBreak, useContinue);\n\n            DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n            while (catchStmt !\u003d null\n                    \u0026\u0026 isTerminated\n                    \u0026\u0026 catchStmt.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                final DetailAST catchBody \u003d\n                        catchStmt.findFirstToken(TokenTypes.SLIST);\n                isTerminated \u003d isTerminated(catchBody, useBreak, useContinue);\n                catchStmt \u003d catchStmt.getNextSibling();\n            }\n        }\n        return isTerminated;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private boolean checkTry(final DetailAST ast, boolean useBreak,\n                              boolean useContinue)\n     {\n         final DetailAST finalStmt \u003d ast.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 useBreak, useContinue);\n         }\n \n         boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n                                             useBreak, useContinue);\n \n         DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n-        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n+        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n             final DetailAST catchBody \u003d\n                 catchStmt.findFirstToken(TokenTypes.SLIST);\n             isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n             catchStmt \u003d catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST ast, boolean useBreak,\n                             boolean useContinue)\n    {\n        final DetailAST finalStmt \u003d ast.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                useBreak, useContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n                                            useBreak, useContinue);\n\n        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n            catchStmt \u003d catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "23/11/14 2:18 PM",
          "commitNameOld": "9b17ce22d251d3f549aa6147081c08cf0b6bb005",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 56.67,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n-                             boolean aUseContinue)\n+    private boolean checkTry(final DetailAST ast, boolean useBreak,\n+                             boolean useContinue)\n     {\n-        final DetailAST finalStmt \u003d aAST.getLastChild();\n+        final DetailAST finalStmt \u003d ast.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n-                                aUseBreak, aUseContinue);\n+                                useBreak, useContinue);\n         }\n \n-        boolean isTerminated \u003d isTerminated(aAST.getFirstChild(),\n-                                            aUseBreak, aUseContinue);\n+        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n+                                            useBreak, useContinue);\n \n-        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n+        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n         while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n             final DetailAST catchBody \u003d\n                 catchStmt.findFirstToken(TokenTypes.SLIST);\n-            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n+            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n             catchStmt \u003d catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean checkTry(final DetailAST ast, boolean useBreak,\n                             boolean useContinue)\n    {\n        final DetailAST finalStmt \u003d ast.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                useBreak, useContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n                                            useBreak, useContinue);\n\n        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n            catchStmt \u003d catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST(modifiers-final), aUseBreak-boolean, aUseContinue-boolean]",
            "newValue": "[ast-DetailAST(modifiers-final), useBreak-boolean, useContinue-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "23/11/14 2:18 PM",
          "commitNameOld": "9b17ce22d251d3f549aa6147081c08cf0b6bb005",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 56.67,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n-                             boolean aUseContinue)\n+    private boolean checkTry(final DetailAST ast, boolean useBreak,\n+                             boolean useContinue)\n     {\n-        final DetailAST finalStmt \u003d aAST.getLastChild();\n+        final DetailAST finalStmt \u003d ast.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n-                                aUseBreak, aUseContinue);\n+                                useBreak, useContinue);\n         }\n \n-        boolean isTerminated \u003d isTerminated(aAST.getFirstChild(),\n-                                            aUseBreak, aUseContinue);\n+        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n+                                            useBreak, useContinue);\n \n-        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n+        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n         while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n             final DetailAST catchBody \u003d\n                 catchStmt.findFirstToken(TokenTypes.SLIST);\n-            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n+            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n             catchStmt \u003d catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean checkTry(final DetailAST ast, boolean useBreak,\n                             boolean useContinue)\n    {\n        final DetailAST finalStmt \u003d ast.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                useBreak, useContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated(ast.getFirstChild(),\n                                            useBreak, useContinue);\n\n        DetailAST catchStmt \u003d ast.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, useBreak, useContinue);\n            catchStmt \u003d catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                             boolean aUseContinue)\n    {\n        final DetailAST finalStmt \u003d aAST.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                aUseBreak, aUseContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated(aAST.getFirstChild(),\n                                            aUseBreak, aUseContinue);\n\n        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n            catchStmt \u003d catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                              boolean aUseContinue)\n     {\n         final DetailAST finalStmt \u003d aAST.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 aUseBreak, aUseContinue);\n         }\n \n-        boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n+        boolean isTerminated \u003d isTerminated(aAST.getFirstChild(),\n                                             aUseBreak, aUseContinue);\n \n         DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n         while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n             final DetailAST catchBody \u003d\n                 catchStmt.findFirstToken(TokenTypes.SLIST);\n             isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n-            catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n+            catchStmt \u003d catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                             boolean aUseContinue)\n    {\n        final DetailAST finalStmt \u003d aAST.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                aUseBreak, aUseContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated(aAST.getFirstChild(),\n                                            aUseBreak, aUseContinue);\n\n        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n            catchStmt \u003d catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "21/01/06 4:43 AM",
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                              boolean aUseContinue)\n     {\n         final DetailAST finalStmt \u003d aAST.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 aUseBreak, aUseContinue);\n         }\n \n         boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n                                             aUseBreak, aUseContinue);\n \n         DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n-        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n+        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n             final DetailAST catchBody \u003d\n                 catchStmt.findFirstToken(TokenTypes.SLIST);\n             isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n             catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                             boolean aUseContinue)\n    {\n        final DetailAST finalStmt \u003d aAST.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                aUseBreak, aUseContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n                                            aUseBreak, aUseContinue);\n\n        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while ((catchStmt !\u003d null) \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n            catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "25/01/04 2:23 AM",
      "commitNameOld": "88b72c3df7214b3cb4f4fcb73b92883007caab17",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 214.13,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                              boolean aUseContinue)\n     {\n         final DetailAST finalStmt \u003d aAST.getLastChild();\n         if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n             return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                 aUseBreak, aUseContinue);\n         }\n \n         boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n                                             aUseBreak, aUseContinue);\n \n         DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n         while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n-            DetailAST catchBody \u003d catchStmt.findFirstToken(TokenTypes.SLIST);\n+            final DetailAST catchBody \u003d\n+                catchStmt.findFirstToken(TokenTypes.SLIST);\n             isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n             catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n         }\n         return isTerminated;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                             boolean aUseContinue)\n    {\n        final DetailAST finalStmt \u003d aAST.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                aUseBreak, aUseContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n                                            aUseBreak, aUseContinue);\n\n        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n            final DetailAST catchBody \u003d\n                catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n            catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "553f3eb61ef4b3dfa22beaa37173c49d24374072": {
      "type": "Yintroduced",
      "commitMessage": "FallThrough check, request 754438.\n",
      "commitDate": "08/01/04 11:21 AM",
      "commitName": "553f3eb61ef4b3dfa22beaa37173c49d24374072",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,20 @@\n+    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n+                             boolean aUseContinue)\n+    {\n+        final DetailAST finalStmt \u003d aAST.getLastChild();\n+        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n+            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n+                                aUseBreak, aUseContinue);\n+        }\n+\n+        boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n+                                            aUseBreak, aUseContinue);\n+\n+        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n+        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n+            DetailAST catchBody \u003d catchStmt.findFirstToken(TokenTypes.SLIST);\n+            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n+            catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n+        }\n+        return isTerminated;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkTry(final DetailAST aAST, boolean aUseBreak,\n                             boolean aUseContinue)\n    {\n        final DetailAST finalStmt \u003d aAST.getLastChild();\n        if (finalStmt.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n            return isTerminated(finalStmt.findFirstToken(TokenTypes.SLIST),\n                                aUseBreak, aUseContinue);\n        }\n\n        boolean isTerminated \u003d isTerminated((DetailAST) aAST.getFirstChild(),\n                                            aUseBreak, aUseContinue);\n\n        DetailAST catchStmt \u003d aAST.findFirstToken(TokenTypes.LITERAL_CATCH);\n        while (catchStmt !\u003d null \u0026\u0026 isTerminated) {\n            DetailAST catchBody \u003d catchStmt.findFirstToken(TokenTypes.SLIST);\n            isTerminated \u0026\u003d isTerminated(catchBody, aUseBreak, aUseContinue);\n            catchStmt \u003d (DetailAST) catchStmt.getNextSibling();\n        }\n        return isTerminated;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java"
    }
  }
}