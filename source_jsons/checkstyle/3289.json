{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PackageObjectFactory.java",
  "functionName": "generateThirdPartyNameToFullModuleName",
  "functionId": "generateThirdPartyNameToFullModuleName___loader-ClassLoader",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
  "functionStartLine": 304,
  "functionEndLine": 315,
  "numCommitsSeen": 84,
  "timeTaken": 1866,
  "changeHistory": [
    "5257531c2358036679939b51a262e069e7bbe85c",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "b024af7dbc3f53863e17147692100381f4165073",
    "064cd907d7cb393a519124870e8838e41215f39e",
    "ddeb553834f10570089a033fa1ac1501b74ac358"
  ],
  "changeHistoryShort": {
    "5257531c2358036679939b51a262e069e7bbe85c": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "b024af7dbc3f53863e17147692100381f4165073": "Ymultichange(Yreturntypechange,Ybodychange)",
    "064cd907d7cb393a519124870e8838e41215f39e": "Ybodychange",
    "ddeb553834f10570089a033fa1ac1501b74ac358": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5257531c2358036679939b51a262e069e7bbe85c": {
      "type": "Ybodychange",
      "commitMessage": "minor: PackageObjectFactory stream refactoring\n",
      "commitDate": "06/12/18 5:33 AM",
      "commitName": "5257531c2358036679939b51a262e069e7bbe85c",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "02/12/18 8:23 PM",
      "commitNameOld": "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 3.38,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,12 @@\n     private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n         Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n         try {\n             returnValue \u003d ModuleReflectionUtil.getCheckstyleModules(packages, loader).stream()\n-                    .collect(Collectors.toMap(\n-                        Class::getSimpleName,\n-                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n-                        (fullNames1, fullNames2) -\u003e {\n-                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n-                            mergedNames.addAll(fullNames2);\n-                            return mergedNames;\n-                        }));\n+                .collect(Collectors.groupingBy(Class::getSimpleName,\n+                    Collectors.mapping(Class::getCanonicalName, Collectors.toSet())));\n         }\n         catch (IOException ignore) {\n-            returnValue \u003d new HashMap\u003c\u003e();\n+            returnValue \u003d Collections.emptyMap();\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtil.getCheckstyleModules(packages, loader).stream()\n                .collect(Collectors.groupingBy(Class::getSimpleName,\n                    Collectors.mapping(Class::getCanonicalName, Collectors.toSet())));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d Collections.emptyMap();\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n         Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n         try {\n-            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n+            returnValue \u003d ModuleReflectionUtil.getCheckstyleModules(packages, loader).stream()\n                     .collect(Collectors.toMap(\n                         Class::getSimpleName,\n                         cls -\u003e Collections.singleton(cls.getCanonicalName()),\n                         (fullNames1, fullNames2) -\u003e {\n                             final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n                             mergedNames.addAll(fullNames2);\n                             return mergedNames;\n                         }));\n         }\n         catch (IOException ignore) {\n             returnValue \u003d new HashMap\u003c\u003e();\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtil.getCheckstyleModules(packages, loader).stream()\n                    .collect(Collectors.toMap(\n                        Class::getSimpleName,\n                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n                        (fullNames1, fullNames2) -\u003e {\n                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n                            mergedNames.addAll(fullNames2);\n                            return mergedNames;\n                        }));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d new HashMap\u003c\u003e();\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "b024af7dbc3f53863e17147692100381f4165073": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #4414: Simple name conflict of Checks from thirdparty checks will cause exception in run time\n",
      "commitDate": "14/06/17 2:34 PM",
      "commitName": "b024af7dbc3f53863e17147692100381f4165073",
      "commitAuthor": "Luolc",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Issue #4414: Simple name conflict of Checks from thirdparty checks will cause exception in run time\n",
          "commitDate": "14/06/17 2:34 PM",
          "commitName": "b024af7dbc3f53863e17147692100381f4165073",
          "commitAuthor": "Luolc",
          "commitDateOld": "12/06/17 10:11 AM",
          "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
          "commitAuthorOld": "sagar-shah94",
          "daysBetweenCommits": 2.18,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-    private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n-        Map\u003cString, String\u003e returnValue;\n+    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n+        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n         try {\n             returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n-                .filter(clazz -\u003e !NAME_TO_FULL_MODULE_NAME.keySet().contains(clazz.getSimpleName()))\n-                .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n+                    .collect(Collectors.toMap(\n+                        Class::getSimpleName,\n+                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n+                        (fullNames1, fullNames2) -\u003e {\n+                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n+                            mergedNames.addAll(fullNames2);\n+                            return mergedNames;\n+                        }));\n         }\n         catch (IOException ignore) {\n             returnValue \u003d new HashMap\u003c\u003e();\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n                    .collect(Collectors.toMap(\n                        Class::getSimpleName,\n                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n                        (fullNames1, fullNames2) -\u003e {\n                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n                            mergedNames.addAll(fullNames2);\n                            return mergedNames;\n                        }));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d new HashMap\u003c\u003e();\n        }\n        return returnValue;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
          "extendedDetails": {
            "oldValue": "Map\u003cString,String\u003e",
            "newValue": "Map\u003cString,Set\u003cString\u003e\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4414: Simple name conflict of Checks from thirdparty checks will cause exception in run time\n",
          "commitDate": "14/06/17 2:34 PM",
          "commitName": "b024af7dbc3f53863e17147692100381f4165073",
          "commitAuthor": "Luolc",
          "commitDateOld": "12/06/17 10:11 AM",
          "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
          "commitAuthorOld": "sagar-shah94",
          "daysBetweenCommits": 2.18,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,18 @@\n-    private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n-        Map\u003cString, String\u003e returnValue;\n+    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n+        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n         try {\n             returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n-                .filter(clazz -\u003e !NAME_TO_FULL_MODULE_NAME.keySet().contains(clazz.getSimpleName()))\n-                .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n+                    .collect(Collectors.toMap(\n+                        Class::getSimpleName,\n+                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n+                        (fullNames1, fullNames2) -\u003e {\n+                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n+                            mergedNames.addAll(fullNames2);\n+                            return mergedNames;\n+                        }));\n         }\n         catch (IOException ignore) {\n             returnValue \u003d new HashMap\u003c\u003e();\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Map\u003cString, Set\u003cString\u003e\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, Set\u003cString\u003e\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n                    .collect(Collectors.toMap(\n                        Class::getSimpleName,\n                        cls -\u003e Collections.singleton(cls.getCanonicalName()),\n                        (fullNames1, fullNames2) -\u003e {\n                            final Set\u003cString\u003e mergedNames \u003d new LinkedHashSet\u003c\u003e(fullNames1);\n                            mergedNames.addAll(fullNames2);\n                            return mergedNames;\n                        }));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d new HashMap\u003c\u003e();\n        }\n        return returnValue;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "064cd907d7cb393a519124870e8838e41215f39e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4387: problem with usage of third-party Check libraries and checkstyle 7.8\n",
      "commitDate": "03/06/17 11:16 AM",
      "commitName": "064cd907d7cb393a519124870e8838e41215f39e",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "18/05/17 1:43 PM",
      "commitNameOld": "ddeb553834f10570089a033fa1ac1501b74ac358",
      "commitAuthorOld": "Luolc",
      "daysBetweenCommits": 15.9,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n         Map\u003cString, String\u003e returnValue;\n         try {\n             returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n-                    .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n+                .filter(clazz -\u003e !NAME_TO_FULL_MODULE_NAME.keySet().contains(clazz.getSimpleName()))\n+                .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n         }\n         catch (IOException ignore) {\n             returnValue \u003d new HashMap\u003c\u003e();\n         }\n         return returnValue;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, String\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n                .filter(clazz -\u003e !NAME_TO_FULL_MODULE_NAME.keySet().contains(clazz.getSimpleName()))\n                .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d new HashMap\u003c\u003e();\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "ddeb553834f10570089a033fa1ac1501b74ac358": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3607: (using Guava) Use reflection to load Checks base on checkstyle_packages.xml\n",
      "commitDate": "18/05/17 1:43 PM",
      "commitName": "ddeb553834f10570089a033fa1ac1501b74ac358",
      "commitAuthor": "Luolc",
      "diff": "@@ -0,0 +1,11 @@\n+    private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n+        Map\u003cString, String\u003e returnValue;\n+        try {\n+            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n+                    .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n+        }\n+        catch (IOException ignore) {\n+            returnValue \u003d new HashMap\u003c\u003e();\n+        }\n+        return returnValue;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Map\u003cString, String\u003e generateThirdPartyNameToFullModuleName(ClassLoader loader) {\n        Map\u003cString, String\u003e returnValue;\n        try {\n            returnValue \u003d ModuleReflectionUtils.getCheckstyleModules(packages, loader).stream()\n                    .collect(Collectors.toMap(Class::getSimpleName, Class::getCanonicalName));\n        }\n        catch (IOException ignore) {\n            returnValue \u003d new HashMap\u003c\u003e();\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java"
    }
  }
}