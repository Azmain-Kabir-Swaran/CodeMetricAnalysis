{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HeaderCheck.java",
  "functionName": "isMatch",
  "functionId": "isMatch___lineNumber-int__line-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
  "functionStartLine": 155,
  "functionEndLine": 159,
  "numCommitsSeen": 83,
  "timeTaken": 1957,
  "changeHistory": [
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
    "29027109bf962f47b6a6000fdca69b5679ce4b43",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bf16d371dab210594755d04afc4697269ed088c0",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
    "303352fe2d7b467edce0bf02064e0a519a139250",
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c"
  ],
  "changeHistoryShort": {
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": "Ymodifierchange",
    "29027109bf962f47b6a6000fdca69b5679ce4b43": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bf16d371dab210594755d04afc4697269ed088c0": "Ymultichange(Yparameterchange,Ybodychange)",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": "Yfilerename",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": "Ybodychange",
    "303352fe2d7b467edce0bf02064e0a519a139250": "Ymultichange(Yparameterchange,Ybodychange)",
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4801: fix for violations from WeakerAccess inspection\n",
      "commitDate": "10/08/17 12:56 AM",
      "commitName": "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "10/07/17 12:57 PM",
      "commitNameOld": "0c2abadbb7f2887f31011157d62edf40bea131c3",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 30.5,
      "commitsBetweenForRepo": 153,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int lineNumber, String line) {\n+    private boolean isMatch(int lineNumber, String line) {\n         // skip lines we are meant to ignore\n         return isIgnoreLine(lineNumber + 1)\n             || getHeaderLines().get(lineNumber).equals(line);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatch(int lineNumber, String line) {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(lineNumber + 1)\n            || getHeaderLines().get(lineNumber).equals(line);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "29027109bf962f47b6a6000fdca69b5679ce4b43": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, header, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    protected boolean isMatch(int aLineNumber, String aLine)\n+    protected boolean isMatch(int lineNumber, String line)\n     {\n         // skip lines we are meant to ignore\n-        return isIgnoreLine(aLineNumber + 1)\n-            || getHeaderLines().get(aLineNumber).equals(aLine);\n+        return isIgnoreLine(lineNumber + 1)\n+            || getHeaderLines().get(lineNumber).equals(line);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int lineNumber, String line)\n    {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(lineNumber + 1)\n            || getHeaderLines().get(lineNumber).equals(line);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aLineNumber-int, aLine-String]",
            "newValue": "[lineNumber-int, line-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    protected boolean isMatch(int aLineNumber, String aLine)\n+    protected boolean isMatch(int lineNumber, String line)\n     {\n         // skip lines we are meant to ignore\n-        return isIgnoreLine(aLineNumber + 1)\n-            || getHeaderLines().get(aLineNumber).equals(aLine);\n+        return isIgnoreLine(lineNumber + 1)\n+            || getHeaderLines().get(lineNumber).equals(line);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int lineNumber, String line)\n    {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(lineNumber + 1)\n            || getHeaderLines().get(lineNumber).equals(line);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected boolean isMatch(int aLineNumber, String aLine)\n    {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(aLineNumber + 1)\n            || getHeaderLines().get(aLineNumber).equals(aLine);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java"
      }
    },
    "bf16d371dab210594755d04afc4697269ed088c0": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "converting the header checks to be fileset based.\n",
      "commitDate": "16/11/08 2:30 AM",
      "commitName": "bf16d371dab210594755d04afc4697269ed088c0",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "converting the header checks to be fileset based.\n",
          "commitDate": "16/11/08 2:30 AM",
          "commitName": "bf16d371dab210594755d04afc4697269ed088c0",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "13/01/08 11:42 PM",
          "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 307.12,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-    protected boolean isMatch(int aLineNumber)\n+    protected boolean isMatch(int aLineNumber, String aLine)\n     {\n-        final String line \u003d getLines()[aLineNumber];\n         // skip lines we are meant to ignore\n         return isIgnoreLine(aLineNumber + 1)\n-            || getHeaderLines()[aLineNumber].equals(line);\n+            || getHeaderLines().get(aLineNumber).equals(aLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber, String aLine)\n    {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(aLineNumber + 1)\n            || getHeaderLines().get(aLineNumber).equals(aLine);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aLineNumber-int]",
            "newValue": "[aLineNumber-int, aLine-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "converting the header checks to be fileset based.\n",
          "commitDate": "16/11/08 2:30 AM",
          "commitName": "bf16d371dab210594755d04afc4697269ed088c0",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "13/01/08 11:42 PM",
          "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 307.12,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,6 @@\n-    protected boolean isMatch(int aLineNumber)\n+    protected boolean isMatch(int aLineNumber, String aLine)\n     {\n-        final String line \u003d getLines()[aLineNumber];\n         // skip lines we are meant to ignore\n         return isIgnoreLine(aLineNumber + 1)\n-            || getHeaderLines()[aLineNumber].equals(line);\n+            || getHeaderLines().get(aLineNumber).equals(aLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber, String aLine)\n    {\n        // skip lines we are meant to ignore\n        return isIgnoreLine(aLineNumber + 1)\n            || getHeaderLines().get(aLineNumber).equals(aLine);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": {
      "type": "Yfilerename",
      "commitMessage": "moved header checks to their own package\nremoved duplicate usage documentation in javadoc along the way\n",
      "commitDate": "30/01/05 3:32 AM",
      "commitName": "aca96ae1b180a8036cc23e93840c4161ae8f8927",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "30/01/05 3:07 AM",
      "commitNameOld": "0a60a189ed4236fd9be3c26bbb2f27be95e5d967",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String line \u003d getLines()[aLineNumber];\n        // skip lines we are meant to ignore\n        return isIgnoreLine(aLineNumber + 1)\n            || getHeaderLines()[aLineNumber].equals(line);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java"
      }
    },
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": {
      "type": "Ybodychange",
      "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
      "commitDate": "10/01/04 8:36 PM",
      "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "08/10/03 10:46 AM",
      "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 94.45,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,7 @@\n     protected boolean isMatch(int aLineNumber)\n     {\n-        final String[] lines \u003d getLines();\n-        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);\n+        final String line \u003d getLines()[aLineNumber];\n+        // skip lines we are meant to ignore\n+        return isIgnoreLine(aLineNumber + 1)\n+            || getHeaderLines()[aLineNumber].equals(line);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String line \u003d getLines()[aLineNumber];\n        // skip lines we are meant to ignore\n        return isIgnoreLine(aLineNumber + 1)\n            || getHeaderLines()[aLineNumber].equals(line);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java",
      "extendedDetails": {}
    },
    "303352fe2d7b467edce0bf02064e0a519a139250": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "fixed checkstyle errors\n",
      "commitDate": "22/11/02 5:00 AM",
      "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 5:00 AM",
          "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "17/10/02 3:52 PM",
          "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 35.59,
          "commitsBetweenForRepo": 205,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int lineNumber)\n+    protected boolean isMatch(int aLineNumber)\n     {\n         final String[] lines \u003d getLines();\n-        return mHeaderLines[lineNumber].equals(lines[lineNumber]);\n+        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[lineNumber-int]",
            "newValue": "[aLineNumber-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 5:00 AM",
          "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "17/10/02 3:52 PM",
          "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 35.59,
          "commitsBetweenForRepo": 205,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int lineNumber)\n+    protected boolean isMatch(int aLineNumber)\n     {\n         final String[] lines \u003d getLines();\n-        return mHeaderLines[lineNumber].equals(lines[lineNumber]);\n+        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderLines[aLineNumber].equals(lines[aLineNumber]);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c": {
      "type": "Yintroduced",
      "commitMessage": "implemented header checks, still need to remove old code\n",
      "commitDate": "28/09/02 12:09 PM",
      "commitName": "f24c8ee834e006c406c0538dbfccc2fe6c07279c",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,5 @@\n+    protected boolean isMatch(int lineNumber)\n+    {\n+        final String[] lines \u003d getLines();\n+        return mHeaderLines[lineNumber].equals(lines[lineNumber]);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected boolean isMatch(int lineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderLines[lineNumber].equals(lines[lineNumber]);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HeaderCheck.java"
    }
  }
}