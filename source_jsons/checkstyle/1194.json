{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParenPadCheck.java",
  "functionName": "processExpression",
  "functionId": "processExpression___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
  "functionStartLine": 316,
  "functionEndLine": 332,
  "numCommitsSeen": 37,
  "timeTaken": 1073,
  "changeHistory": [
    "bda308e37284c468c4d08c262d6c6b76f85a502c",
    "0f5b821648b86211162fc243034aeb56b2ce59d0",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9"
  ],
  "changeHistoryShort": {
    "bda308e37284c468c4d08c262d6c6b76f85a502c": "Ybodychange",
    "0f5b821648b86211162fc243034aeb56b2ce59d0": "Ybodychange",
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bda308e37284c468c4d08c262d6c6b76f85a502c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for whitespace",
      "commitDate": "06/01/19 10:33 AM",
      "commitName": "bda308e37284c468c4d08c262d6c6b76f85a502c",
      "commitAuthor": "rnveach",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 216.58,
      "commitsBetweenForRepo": 308,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     private void processExpression(DetailAST ast) {\n-        if (ast.branchContains(TokenTypes.LPAREN)) {\n-            DetailAST childAst \u003d ast.getFirstChild();\n-            while (childAst !\u003d null) {\n-                if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n-                    processLeft(childAst);\n-                }\n-                else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n-                    processRight(childAst);\n-                }\n-                else if (!isAcceptableToken(childAst)) {\n-                    //Traverse all subtree tokens which will never be configured\n-                    //to be launched in visitToken()\n-                    processExpression(childAst);\n-                }\n-                childAst \u003d childAst.getNextSibling();\n+        DetailAST childAst \u003d ast.getFirstChild();\n+        while (childAst !\u003d null) {\n+            if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n+                processLeft(childAst);\n             }\n+            else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n+                processRight(childAst);\n+            }\n+            else if (!isAcceptableToken(childAst)) {\n+                //Traverse all subtree tokens which will never be configured\n+                //to be launched in visitToken()\n+                processExpression(childAst);\n+            }\n+            childAst \u003d childAst.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processExpression(DetailAST ast) {\n        DetailAST childAst \u003d ast.getFirstChild();\n        while (childAst !\u003d null) {\n            if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n                processLeft(childAst);\n            }\n            else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n                processRight(childAst);\n            }\n            else if (!isAcceptableToken(childAst)) {\n                //Traverse all subtree tokens which will never be configured\n                //to be launched in visitToken()\n                processExpression(childAst);\n            }\n            childAst \u003d childAst.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "0f5b821648b86211162fc243034aeb56b2ce59d0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5003: remove ParenPad#processExpression call where it seems useless\n",
      "commitDate": "24/10/17 10:33 PM",
      "commitName": "0f5b821648b86211162fc243034aeb56b2ce59d0",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "08/09/17 5:37 AM",
      "commitNameOld": "c31bffe59c342dd5fdcfc8f55ca339b3520eef3e",
      "commitAuthorOld": "Liam Miller-Cushon",
      "daysBetweenCommits": 46.71,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     private void processExpression(DetailAST ast) {\n         if (ast.branchContains(TokenTypes.LPAREN)) {\n             DetailAST childAst \u003d ast.getFirstChild();\n             while (childAst !\u003d null) {\n                 if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n                     processLeft(childAst);\n-                    processExpression(childAst);\n                 }\n                 else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n                     processRight(childAst);\n                 }\n                 else if (!isAcceptableToken(childAst)) {\n                     //Traverse all subtree tokens which will never be configured\n                     //to be launched in visitToken()\n                     processExpression(childAst);\n                 }\n                 childAst \u003d childAst.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processExpression(DetailAST ast) {\n        if (ast.branchContains(TokenTypes.LPAREN)) {\n            DetailAST childAst \u003d ast.getFirstChild();\n            while (childAst !\u003d null) {\n                if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n                    processLeft(childAst);\n                }\n                else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n                    processRight(childAst);\n                }\n                else if (!isAcceptableToken(childAst)) {\n                    //Traverse all subtree tokens which will never be configured\n                    //to be launched in visitToken()\n                    processExpression(childAst);\n                }\n                childAst \u003d childAst.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java",
      "extendedDetails": {}
    },
    "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9": {
      "type": "Yintroduced",
      "commitMessage": "Add possibility to configure targets for ParenPad check, #1189",
      "commitDate": "25/06/15 10:16 AM",
      "commitName": "7f452f66c8ac18a9d0093c0cb05009ddae0b8ea9",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,20 @@\n+    private void processExpression(DetailAST ast) {\n+        if (ast.branchContains(TokenTypes.LPAREN)) {\n+            DetailAST childAst \u003d ast.getFirstChild();\n+            while (childAst !\u003d null) {\n+                if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n+                    processLeft(childAst);\n+                    processExpression(childAst);\n+                }\n+                else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n+                    processRight(childAst);\n+                }\n+                else if (!isAcceptableToken(childAst)) {\n+                    //Traverse all subtree tokens which will never be configured\n+                    //to be launched in visitToken()\n+                    processExpression(childAst);\n+                }\n+                childAst \u003d childAst.getNextSibling();\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processExpression(DetailAST ast) {\n        if (ast.branchContains(TokenTypes.LPAREN)) {\n            DetailAST childAst \u003d ast.getFirstChild();\n            while (childAst !\u003d null) {\n                if (childAst.getType() \u003d\u003d TokenTypes.LPAREN) {\n                    processLeft(childAst);\n                    processExpression(childAst);\n                }\n                else if (childAst.getType() \u003d\u003d TokenTypes.RPAREN \u0026\u0026 !isInTypecast(childAst)) {\n                    processRight(childAst);\n                }\n                else if (!isAcceptableToken(childAst)) {\n                    //Traverse all subtree tokens which will never be configured\n                    //to be launched in visitToken()\n                    processExpression(childAst);\n                }\n                childAst \u003d childAst.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/ParenPadCheck.java"
    }
  }
}