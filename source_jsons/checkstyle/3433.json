{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocUtil.java",
  "functionName": "isCorrectJavadocPosition",
  "functionId": "isCorrectJavadocPosition___blockComment-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
  "functionStartLine": 393,
  "functionEndLine": 416,
  "numCommitsSeen": 106,
  "timeTaken": 2546,
  "changeHistory": [
    "2b7b0c26ad776e0f611bc19e439bd56203107907",
    "1aa682cad1ab2e13310bc08baca18e1bc15f9d30",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "d3d36ede0d80a5a84cbf5889ad7318c0420ae25c",
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
    "c0eb205f6ab7abff2c409a387c853a8b51646c79",
    "8620ce7f3e7d62f8a124ab6ed5ee2fbefb156bf3"
  ],
  "changeHistoryShort": {
    "2b7b0c26ad776e0f611bc19e439bd56203107907": "Ymodifierchange",
    "1aa682cad1ab2e13310bc08baca18e1bc15f9d30": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "d3d36ede0d80a5a84cbf5889ad7318c0420ae25c": "Ybodychange",
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": "Ymodifierchange",
    "c0eb205f6ab7abff2c409a387c853a8b51646c79": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "8620ce7f3e7d62f8a124ab6ed5ee2fbefb156bf3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b7b0c26ad776e0f611bc19e439bd56203107907": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #6649: add InvalidJavadocPositionCheck",
      "commitDate": "26/06/19 9:13 PM",
      "commitName": "2b7b0c26ad776e0f611bc19e439bd56203107907",
      "commitAuthor": "rnveach",
      "commitDateOld": "03/03/19 8:05 PM",
      "commitNameOld": "1aa682cad1ab2e13310bc08baca18e1bc15f9d30",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 115.01,
      "commitsBetweenForRepo": 267,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n+    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n         // We must be sure that after this one there are no other documentation comments.\n         DetailAST sibling \u003d blockComment.getNextSibling();\n         while (sibling !\u003d null) {\n             if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                 if (isJavadocComment(getBlockCommentContent(sibling))) {\n                     // Found another javadoc comment, so this one should be ignored.\n                     break;\n                 }\n                 sibling \u003d sibling.getNextSibling();\n             }\n             else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                 sibling \u003d sibling.getNextSibling();\n             }\n             else {\n                 // Annotation, declaration or modifier is here. Do not check further.\n                 sibling \u003d null;\n             }\n         }\n         return sibling \u003d\u003d null\n             \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n                 || BlockCommentPosition.isOnMember(blockComment)\n                 || BlockCommentPosition.isOnPackage(blockComment));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        // We must be sure that after this one there are no other documentation comments.\n        DetailAST sibling \u003d blockComment.getNextSibling();\n        while (sibling !\u003d null) {\n            if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                if (isJavadocComment(getBlockCommentContent(sibling))) {\n                    // Found another javadoc comment, so this one should be ignored.\n                    break;\n                }\n                sibling \u003d sibling.getNextSibling();\n            }\n            else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                sibling \u003d sibling.getNextSibling();\n            }\n            else {\n                // Annotation, declaration or modifier is here. Do not check further.\n                sibling \u003d null;\n            }\n        }\n        return sibling \u003d\u003d null\n            \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n                || BlockCommentPosition.isOnMember(blockComment)\n                || BlockCommentPosition.isOnPackage(blockComment));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[public, static]"
      }
    },
    "1aa682cad1ab2e13310bc08baca18e1bc15f9d30": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5769: added package-info to list of valid javadocs",
      "commitDate": "03/03/19 8:05 PM",
      "commitName": "1aa682cad1ab2e13310bc08baca18e1bc15f9d30",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 47.6,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n         // We must be sure that after this one there are no other documentation comments.\n         DetailAST sibling \u003d blockComment.getNextSibling();\n         while (sibling !\u003d null) {\n             if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                 if (isJavadocComment(getBlockCommentContent(sibling))) {\n                     // Found another javadoc comment, so this one should be ignored.\n                     break;\n                 }\n                 sibling \u003d sibling.getNextSibling();\n             }\n             else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                 sibling \u003d sibling.getNextSibling();\n             }\n             else {\n                 // Annotation, declaration or modifier is here. Do not check further.\n                 sibling \u003d null;\n             }\n         }\n         return sibling \u003d\u003d null\n             \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n-                || BlockCommentPosition.isOnMember(blockComment));\n+                || BlockCommentPosition.isOnMember(blockComment)\n+                || BlockCommentPosition.isOnPackage(blockComment));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        // We must be sure that after this one there are no other documentation comments.\n        DetailAST sibling \u003d blockComment.getNextSibling();\n        while (sibling !\u003d null) {\n            if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                if (isJavadocComment(getBlockCommentContent(sibling))) {\n                    // Found another javadoc comment, so this one should be ignored.\n                    break;\n                }\n                sibling \u003d sibling.getNextSibling();\n            }\n            else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                sibling \u003d sibling.getNextSibling();\n            }\n            else {\n                // Annotation, declaration or modifier is here. Do not check further.\n                sibling \u003d null;\n            }\n        }\n        return sibling \u003d\u003d null\n            \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n                || BlockCommentPosition.isOnMember(blockComment)\n                || BlockCommentPosition.isOnPackage(blockComment));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        // We must be sure that after this one there are no other documentation comments.\n        DetailAST sibling \u003d blockComment.getNextSibling();\n        while (sibling !\u003d null) {\n            if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                if (isJavadocComment(getBlockCommentContent(sibling))) {\n                    // Found another javadoc comment, so this one should be ignored.\n                    break;\n                }\n                sibling \u003d sibling.getNextSibling();\n            }\n            else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                sibling \u003d sibling.getNextSibling();\n            }\n            else {\n                // Annotation, declaration or modifier is here. Do not check further.\n                sibling \u003d null;\n            }\n        }\n        return sibling \u003d\u003d null\n            \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n                || BlockCommentPosition.isOnMember(blockComment));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java"
      }
    },
    "d3d36ede0d80a5a84cbf5889ad7318c0420ae25c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4169: Javadoc on annotation fields support\n",
      "commitDate": "01/12/17 4:07 PM",
      "commitName": "d3d36ede0d80a5a84cbf5889ad7318c0420ae25c",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "20/10/17 11:38 AM",
      "commitNameOld": "7c7b1c0a86a1937db2f2f3be00c4c9d7f994f33c",
      "commitAuthorOld": "Maksim Shilin",
      "daysBetweenCommits": 42.23,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,23 @@\n     private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n-        return BlockCommentPosition.isOnClass(blockComment)\n-                || BlockCommentPosition.isOnInterface(blockComment)\n-                || BlockCommentPosition.isOnEnum(blockComment)\n-                || BlockCommentPosition.isOnMethod(blockComment)\n-                || BlockCommentPosition.isOnField(blockComment)\n-                || BlockCommentPosition.isOnConstructor(blockComment)\n-                || BlockCommentPosition.isOnEnumConstant(blockComment)\n-                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n+        // We must be sure that after this one there are no other documentation comments.\n+        DetailAST sibling \u003d blockComment.getNextSibling();\n+        while (sibling !\u003d null) {\n+            if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n+                if (isJavadocComment(getBlockCommentContent(sibling))) {\n+                    // Found another javadoc comment, so this one should be ignored.\n+                    break;\n+                }\n+                sibling \u003d sibling.getNextSibling();\n+            }\n+            else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n+                sibling \u003d sibling.getNextSibling();\n+            }\n+            else {\n+                // Annotation, declaration or modifier is here. Do not check further.\n+                sibling \u003d null;\n+            }\n+        }\n+        return sibling \u003d\u003d null\n+            \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n+                || BlockCommentPosition.isOnMember(blockComment));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        // We must be sure that after this one there are no other documentation comments.\n        DetailAST sibling \u003d blockComment.getNextSibling();\n        while (sibling !\u003d null) {\n            if (sibling.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                if (isJavadocComment(getBlockCommentContent(sibling))) {\n                    // Found another javadoc comment, so this one should be ignored.\n                    break;\n                }\n                sibling \u003d sibling.getNextSibling();\n            }\n            else if (sibling.getType() \u003d\u003d TokenTypes.SINGLE_LINE_COMMENT) {\n                sibling \u003d sibling.getNextSibling();\n            }\n            else {\n                // Annotation, declaration or modifier is here. Do not check further.\n                sibling \u003d null;\n            }\n        }\n        return sibling \u003d\u003d null\n            \u0026\u0026 (BlockCommentPosition.isOnType(blockComment)\n                || BlockCommentPosition.isOnMember(blockComment));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {}
    },
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4801: fix for violations from WeakerAccess inspection\n",
      "commitDate": "10/08/17 12:56 AM",
      "commitName": "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "10/07/17 5:35 PM",
      "commitNameOld": "d28a60c5529e182e1cdaea184415181e00b70d2a",
      "commitAuthorOld": "Nathan Naze",
      "daysBetweenCommits": 30.31,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n+    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n         return BlockCommentPosition.isOnClass(blockComment)\n                 || BlockCommentPosition.isOnInterface(blockComment)\n                 || BlockCommentPosition.isOnEnum(blockComment)\n                 || BlockCommentPosition.isOnMethod(blockComment)\n                 || BlockCommentPosition.isOnField(blockComment)\n                 || BlockCommentPosition.isOnConstructor(blockComment)\n                 || BlockCommentPosition.isOnEnumConstant(blockComment)\n                 || BlockCommentPosition.isOnAnnotationDef(blockComment);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        return BlockCommentPosition.isOnClass(blockComment)\n                || BlockCommentPosition.isOnInterface(blockComment)\n                || BlockCommentPosition.isOnEnum(blockComment)\n                || BlockCommentPosition.isOnMethod(blockComment)\n                || BlockCommentPosition.isOnField(blockComment)\n                || BlockCommentPosition.isOnConstructor(blockComment)\n                || BlockCommentPosition.isOnEnumConstant(blockComment)\n                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {
        "oldValue": "[public, static]",
        "newValue": "[private, static]"
      }
    },
    "c0eb205f6ab7abff2c409a387c853a8b51646c79": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "Issue #4405: Javadoc position to be checked before rendering ASTs\n",
      "commitDate": "26/06/17 5:34 PM",
      "commitName": "c0eb205f6ab7abff2c409a387c853a8b51646c79",
      "commitAuthor": "Piyush Sharma",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Issue #4405: Javadoc position to be checked before rendering ASTs\n",
          "commitDate": "26/06/17 5:34 PM",
          "commitName": "c0eb205f6ab7abff2c409a387c853a8b51646c79",
          "commitAuthor": "Piyush Sharma",
          "commitDateOld": "26/06/17 4:20 PM",
          "commitNameOld": "a395453d23def10d75f85328a1d8ceca884865de",
          "commitAuthorOld": "Subbu Dantu",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n+    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n         return BlockCommentPosition.isOnClass(blockComment)\n                 || BlockCommentPosition.isOnInterface(blockComment)\n                 || BlockCommentPosition.isOnEnum(blockComment)\n                 || BlockCommentPosition.isOnMethod(blockComment)\n                 || BlockCommentPosition.isOnField(blockComment)\n                 || BlockCommentPosition.isOnConstructor(blockComment)\n                 || BlockCommentPosition.isOnEnumConstant(blockComment)\n                 || BlockCommentPosition.isOnAnnotationDef(blockComment);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        return BlockCommentPosition.isOnClass(blockComment)\n                || BlockCommentPosition.isOnInterface(blockComment)\n                || BlockCommentPosition.isOnEnum(blockComment)\n                || BlockCommentPosition.isOnMethod(blockComment)\n                || BlockCommentPosition.isOnField(blockComment)\n                || BlockCommentPosition.isOnConstructor(blockComment)\n                || BlockCommentPosition.isOnEnumConstant(blockComment)\n                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
            "oldMethodName": "isCorrectJavadocPosition",
            "newMethodName": "isCorrectJavadocPosition"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #4405: Javadoc position to be checked before rendering ASTs\n",
          "commitDate": "26/06/17 5:34 PM",
          "commitName": "c0eb205f6ab7abff2c409a387c853a8b51646c79",
          "commitAuthor": "Piyush Sharma",
          "commitDateOld": "26/06/17 4:20 PM",
          "commitNameOld": "a395453d23def10d75f85328a1d8ceca884865de",
          "commitAuthorOld": "Subbu Dantu",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n+    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n         return BlockCommentPosition.isOnClass(blockComment)\n                 || BlockCommentPosition.isOnInterface(blockComment)\n                 || BlockCommentPosition.isOnEnum(blockComment)\n                 || BlockCommentPosition.isOnMethod(blockComment)\n                 || BlockCommentPosition.isOnField(blockComment)\n                 || BlockCommentPosition.isOnConstructor(blockComment)\n                 || BlockCommentPosition.isOnEnumConstant(blockComment)\n                 || BlockCommentPosition.isOnAnnotationDef(blockComment);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        return BlockCommentPosition.isOnClass(blockComment)\n                || BlockCommentPosition.isOnInterface(blockComment)\n                || BlockCommentPosition.isOnEnum(blockComment)\n                || BlockCommentPosition.isOnMethod(blockComment)\n                || BlockCommentPosition.isOnField(blockComment)\n                || BlockCommentPosition.isOnConstructor(blockComment)\n                || BlockCommentPosition.isOnEnumConstant(blockComment)\n                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        }
      ]
    },
    "8620ce7f3e7d62f8a124ab6ed5ee2fbefb156bf3": {
      "type": "Yintroduced",
      "commitMessage": "Issue #325: Check placement of Javadoc comments in AbstractJavadocCheck before parsing\n",
      "commitDate": "28/01/16 3:59 PM",
      "commitName": "8620ce7f3e7d62f8a124ab6ed5ee2fbefb156bf3",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,10 @@\n+    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n+        return BlockCommentPosition.isOnClass(blockComment)\n+                || BlockCommentPosition.isOnInterface(blockComment)\n+                || BlockCommentPosition.isOnEnum(blockComment)\n+                || BlockCommentPosition.isOnMethod(blockComment)\n+                || BlockCommentPosition.isOnField(blockComment)\n+                || BlockCommentPosition.isOnConstructor(blockComment)\n+                || BlockCommentPosition.isOnEnumConstant(blockComment)\n+                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCorrectJavadocPosition(DetailAST blockComment) {\n        return BlockCommentPosition.isOnClass(blockComment)\n                || BlockCommentPosition.isOnInterface(blockComment)\n                || BlockCommentPosition.isOnEnum(blockComment)\n                || BlockCommentPosition.isOnMethod(blockComment)\n                || BlockCommentPosition.isOnField(blockComment)\n                || BlockCommentPosition.isOnConstructor(blockComment)\n                || BlockCommentPosition.isOnEnumConstant(blockComment)\n                || BlockCommentPosition.isOnAnnotationDef(blockComment);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java"
    }
  }
}