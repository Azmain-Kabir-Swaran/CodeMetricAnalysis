{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NoWhitespaceAfterCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
  "functionStartLine": 171,
  "functionEndLine": 182,
  "numCommitsSeen": 83,
  "timeTaken": 2688,
  "changeHistory": [
    "89b4dcd4d51d0dcc0b1347bcc7f4f3c533fefaa4",
    "8385e56a5681e6627bd56179f957d0b6d81dbcc2",
    "affa9bd52f66375bf59bac720c9dbeb411b86227",
    "c56dce9222a819b4741b4c0cd664d38c58b31050",
    "b9936d973566f62a6989e7909f713abc7ff9cdb0",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "e6638c3344a90ec1716feb1830790efe430a123a",
    "1d41878f29431d9102aec57c3f0c67a2085c4974",
    "095fa6743c995a0c89056456a3724a9480c69e50",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "ea4085cd15fefe1e70a495798187c425295c74b6",
    "2e8126e99047befc39560342981b0b8e7cabea21",
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b"
  ],
  "changeHistoryShort": {
    "89b4dcd4d51d0dcc0b1347bcc7f4f3c533fefaa4": "Ybodychange",
    "8385e56a5681e6627bd56179f957d0b6d81dbcc2": "Ybodychange",
    "affa9bd52f66375bf59bac720c9dbeb411b86227": "Ybodychange",
    "c56dce9222a819b4741b4c0cd664d38c58b31050": "Ybodychange",
    "b9936d973566f62a6989e7909f713abc7ff9cdb0": "Ybodychange",
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "e6638c3344a90ec1716feb1830790efe430a123a": "Ybodychange",
    "1d41878f29431d9102aec57c3f0c67a2085c4974": "Ybodychange",
    "095fa6743c995a0c89056456a3724a9480c69e50": "Ybodychange",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "ea4085cd15fefe1e70a495798187c425295c74b6": "Ybodychange",
    "2e8126e99047befc39560342981b0b8e7cabea21": "Yfilerename",
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "89b4dcd4d51d0dcc0b1347bcc7f4f3c533fefaa4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3238: Java 8 Grammar: annotations on arrays and varargs\n",
      "commitDate": "24/01/20 3:15 PM",
      "commitName": "89b4dcd4d51d0dcc0b1347bcc7f4f3c533fefaa4",
      "commitAuthor": "Erik Silkensen",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 22.94,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n \n-        if (whitespaceFollowedAst.getNextSibling() \u003d\u003d null\n-                || whitespaceFollowedAst.getNextSibling().getType() !\u003d TokenTypes.ANNOTATIONS) {\n+        if (shouldCheckWhitespaceAfter(whitespaceFollowedAst)) {\n             final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n             final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n \n             if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n                 log(ast, MSG_KEY, whitespaceFollowedAst.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n\n        if (shouldCheckWhitespaceAfter(whitespaceFollowedAst)) {\n            final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n            final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n\n            if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n                log(ast, MSG_KEY, whitespaceFollowedAst.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "8385e56a5681e6627bd56179f957d0b6d81dbcc2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5759: Update NoWhitespace{After,Before}Check to log DetailAST\n",
      "commitDate": "19/12/18 5:43 AM",
      "commitName": "8385e56a5681e6627bd56179f957d0b6d81dbcc2",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 198.38,
      "commitsBetweenForRepo": 269,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n \n         if (whitespaceFollowedAst.getNextSibling() \u003d\u003d null\n                 || whitespaceFollowedAst.getNextSibling().getType() !\u003d TokenTypes.ANNOTATIONS) {\n             final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n             final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n \n             if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n-                log(whitespaceLineNo, whitespaceColumnNo,\n-                        MSG_KEY, whitespaceFollowedAst.getText());\n+                log(ast, MSG_KEY, whitespaceFollowedAst.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n\n        if (whitespaceFollowedAst.getNextSibling() \u003d\u003d null\n                || whitespaceFollowedAst.getNextSibling().getType() !\u003d TokenTypes.ANNOTATIONS) {\n            final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n            final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n\n            if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n                log(ast, MSG_KEY, whitespaceFollowedAst.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "affa9bd52f66375bf59bac720c9dbeb411b86227": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3300: fixed ERROR whitespace after annotation\n",
      "commitDate": "12/09/17 10:40 AM",
      "commitName": "affa9bd52f66375bf59bac720c9dbeb411b86227",
      "commitAuthor": "Ruslan Iagudin",
      "commitDateOld": "31/08/17 10:07 AM",
      "commitNameOld": "518e639d1742c16330c1529b91b6fbbb317998a2",
      "commitAuthorOld": "Ruslan Iagudin",
      "daysBetweenCommits": 12.02,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n \n-        final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n-        final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n+        if (whitespaceFollowedAst.getNextSibling() \u003d\u003d null\n+                || whitespaceFollowedAst.getNextSibling().getType() !\u003d TokenTypes.ANNOTATIONS) {\n+            final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n+            final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n \n-        if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n-            log(whitespaceLineNo, whitespaceColumnNo,\n-                MSG_KEY, whitespaceFollowedAst.getText());\n+            if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n+                log(whitespaceLineNo, whitespaceColumnNo,\n+                        MSG_KEY, whitespaceFollowedAst.getText());\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n\n        if (whitespaceFollowedAst.getNextSibling() \u003d\u003d null\n                || whitespaceFollowedAst.getNextSibling().getType() !\u003d TokenTypes.ANNOTATIONS) {\n            final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n            final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n\n            if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n                log(whitespaceLineNo, whitespaceColumnNo,\n                        MSG_KEY, whitespaceFollowedAst.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "c56dce9222a819b4741b4c0cd664d38c58b31050": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1013: Fix NoWhitespaceAfterCheck\n",
      "commitDate": "31/10/15 3:16 PM",
      "commitName": "c56dce9222a819b4741b4c0cd664d38c58b31050",
      "commitAuthor": "attatrol",
      "commitDateOld": "21/09/15 7:05 AM",
      "commitNameOld": "03f2be49f7ad3fc9d0143782b020a169f28e50a9",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 40.34,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void visitToken(DetailAST ast) {\n-        final DetailAST astNode \u003d getPreceded(ast);\n-        final String line \u003d getLine(ast.getLineNo() - 1);\n-        final int after \u003d getPositionAfter(astNode);\n+        final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n \n-        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n-                 \u0026\u0026 hasRedundantWhitespace(line, after)) {\n-            log(astNode.getLineNo(), after,\n-                MSG_KEY, astNode.getText());\n+        final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n+        final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n+\n+        if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n+            log(whitespaceLineNo, whitespaceColumnNo,\n+                MSG_KEY, whitespaceFollowedAst.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST whitespaceFollowedAst \u003d getWhitespaceFollowedNode(ast);\n\n        final int whitespaceColumnNo \u003d getPositionAfter(whitespaceFollowedAst);\n        final int whitespaceLineNo \u003d whitespaceFollowedAst.getLineNo();\n\n        if (hasTrailingWhitespace(ast, whitespaceColumnNo, whitespaceLineNo)) {\n            log(whitespaceLineNo, whitespaceColumnNo,\n                MSG_KEY, whitespaceFollowedAst.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "b9936d973566f62a6989e7909f713abc7ff9cdb0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1289: \u0027NoWhitespaceAfterCheck\u0027 refactored, UT coverage improved\n",
      "commitDate": "25/07/15 7:09 PM",
      "commitName": "b9936d973566f62a6989e7909f713abc7ff9cdb0",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 69.6,
      "commitsBetweenForRepo": 494,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,11 @@\n     public void visitToken(DetailAST ast) {\n-        DetailAST astNode \u003d ast;\n-        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n-                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST) {\n-            astNode \u003d getPreceded(ast);\n-        }\n-\n+        final DetailAST astNode \u003d getPreceded(ast);\n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int after \u003d getPositionAfter(astNode);\n \n         if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                  \u0026\u0026 hasRedundantWhitespace(line, after)) {\n             log(astNode.getLineNo(), after,\n                 MSG_KEY, astNode.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST astNode \u003d getPreceded(ast);\n        final String line \u003d getLine(ast.getLineNo() - 1);\n        final int after \u003d getPositionAfter(astNode);\n\n        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                 \u0026\u0026 hasRedundantWhitespace(line, after)) {\n            log(astNode.getLineNo(), after,\n                MSG_KEY, astNode.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, whitespace package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "4596d0b4c5a5a5db84a552ee3f6fde2e752e7adf",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public void visitToken(DetailAST ast)\n     {\n         DetailAST astNode \u003d ast;\n         if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n                  || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n         {\n             astNode \u003d getPreceded(ast);\n         }\n \n         final String line \u003d getLine(ast.getLineNo() - 1);\n         final int after \u003d getPositionAfter(astNode);\n \n         if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                  \u0026\u0026 hasRedundantWhitespace(line, after))\n         {\n             log(astNode.getLineNo(), after,\n-                \"ws.followed\", astNode.getText());\n+                MSG_KEY, astNode.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        DetailAST astNode \u003d ast;\n        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n        {\n            astNode \u003d getPreceded(ast);\n        }\n\n        final String line \u003d getLine(ast.getLineNo() - 1);\n        final int after \u003d getPositionAfter(astNode);\n\n        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                 \u0026\u0026 hasRedundantWhitespace(line, after))\n        {\n            log(astNode.getLineNo(), after,\n                MSG_KEY, astNode.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "30/12/14 9:08 AM",
          "commitNameOld": "e6638c3344a90ec1716feb1830790efe430a123a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 19.88,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        DetailAST ast \u003d aAST;\n-        if (aAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n-                 || aAST.getType() \u003d\u003d TokenTypes.TYPECAST)\n+        DetailAST astNode \u003d ast;\n+        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n+                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n         {\n-            ast \u003d getPreceded(aAST);\n+            astNode \u003d getPreceded(ast);\n         }\n \n-        final String line \u003d getLine(aAST.getLineNo() - 1);\n-        final int after \u003d getPositionAfter(ast);\n+        final String line \u003d getLine(ast.getLineNo() - 1);\n+        final int after \u003d getPositionAfter(astNode);\n \n         if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                  \u0026\u0026 hasRedundantWhitespace(line, after))\n         {\n-            log(ast.getLineNo(), after,\n-                \"ws.followed\", ast.getText());\n+            log(astNode.getLineNo(), after,\n+                \"ws.followed\", astNode.getText());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        DetailAST astNode \u003d ast;\n        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n        {\n            astNode \u003d getPreceded(ast);\n        }\n\n        final String line \u003d getLine(ast.getLineNo() - 1);\n        final int after \u003d getPositionAfter(astNode);\n\n        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                 \u0026\u0026 hasRedundantWhitespace(line, after))\n        {\n            log(astNode.getLineNo(), after,\n                \"ws.followed\", astNode.getText());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "30/12/14 9:08 AM",
          "commitNameOld": "e6638c3344a90ec1716feb1830790efe430a123a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 19.88,
          "commitsBetweenForRepo": 26,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        DetailAST ast \u003d aAST;\n-        if (aAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n-                 || aAST.getType() \u003d\u003d TokenTypes.TYPECAST)\n+        DetailAST astNode \u003d ast;\n+        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n+                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n         {\n-            ast \u003d getPreceded(aAST);\n+            astNode \u003d getPreceded(ast);\n         }\n \n-        final String line \u003d getLine(aAST.getLineNo() - 1);\n-        final int after \u003d getPositionAfter(ast);\n+        final String line \u003d getLine(ast.getLineNo() - 1);\n+        final int after \u003d getPositionAfter(astNode);\n \n         if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                  \u0026\u0026 hasRedundantWhitespace(line, after))\n         {\n-            log(ast.getLineNo(), after,\n-                \"ws.followed\", ast.getText());\n+            log(astNode.getLineNo(), after,\n+                \"ws.followed\", astNode.getText());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        DetailAST astNode \u003d ast;\n        if (ast.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n                 || ast.getType() \u003d\u003d TokenTypes.TYPECAST)\n        {\n            astNode \u003d getPreceded(ast);\n        }\n\n        final String line \u003d getLine(ast.getLineNo() - 1);\n        final int after \u003d getPositionAfter(astNode);\n\n        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                 \u0026\u0026 hasRedundantWhitespace(line, after))\n        {\n            log(astNode.getLineNo(), after,\n                \"ws.followed\", astNode.getText());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "e6638c3344a90ec1716feb1830790efe430a123a": {
      "type": "Ybodychange",
      "commitMessage": "No Whitespace After Check, fixed NPE, fixed false-positives at multidimensional arrays, issue #542\n",
      "commitDate": "30/12/14 9:08 AM",
      "commitName": "e6638c3344a90ec1716feb1830790efe430a123a",
      "commitAuthor": "alexkravin",
      "commitDateOld": "26/12/14 8:23 PM",
      "commitNameOld": "1d41878f29431d9102aec57c3f0c67a2085c4974",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 3.53,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        DetailAST targetAST \u003d aAST;\n-        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n-            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n-        }\n-        final String line \u003d getLine(aAST.getLineNo() - 1);\n-        final int after \u003d\n-            targetAST.getColumnNo() + targetAST.getText().length();\n-\n-        if ((after \u003e\u003d line.length())\n-            || Character.isWhitespace(line.charAt(after)))\n+        DetailAST ast \u003d aAST;\n+        if (aAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n+                 || aAST.getType() \u003d\u003d TokenTypes.TYPECAST)\n         {\n-            boolean flag \u003d !mAllowLineBreaks;\n-            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n-                if (!Character.isWhitespace(line.charAt(i))) {\n-                    flag \u003d true;\n-                }\n-            }\n-            if (flag) {\n-                log(targetAST.getLineNo(), after,\n-                    \"ws.followed\", targetAST.getText());\n-            }\n+            ast \u003d getPreceded(aAST);\n+        }\n+\n+        final String line \u003d getLine(aAST.getLineNo() - 1);\n+        final int after \u003d getPositionAfter(ast);\n+\n+        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n+                 \u0026\u0026 hasRedundantWhitespace(line, after))\n+        {\n+            log(ast.getLineNo(), after,\n+                \"ws.followed\", ast.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST ast \u003d aAST;\n        if (aAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR\n                 || aAST.getType() \u003d\u003d TokenTypes.TYPECAST)\n        {\n            ast \u003d getPreceded(aAST);\n        }\n\n        final String line \u003d getLine(aAST.getLineNo() - 1);\n        final int after \u003d getPositionAfter(ast);\n\n        if ((after \u003e\u003d line.length() || Character.isWhitespace(line.charAt(after)))\n                 \u0026\u0026 hasRedundantWhitespace(line, after))\n        {\n            log(ast.getLineNo(), after,\n                \"ws.followed\", ast.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "1d41878f29431d9102aec57c3f0c67a2085c4974": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"No Whitespace After Check - added support of array declarations, issue #68\"\n\nThis reverts commit 095fa6743c995a0c89056456a3724a9480c69e50.\n",
      "commitDate": "26/12/14 8:23 PM",
      "commitName": "1d41878f29431d9102aec57c3f0c67a2085c4974",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "18/12/14 11:51 AM",
      "commitNameOld": "095fa6743c995a0c89056456a3724a9480c69e50",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 8.36,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST targetAST \u003d aAST;\n         if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n         }\n-        else {\n-            if (targetAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n-                final DetailAST arrayType \u003d targetAST.getFirstChild();\n-                if (!isCstyleArrayDeclaration(targetAST)) {\n-                    targetAST \u003d arrayType;\n-                }\n-                else {\n-                    targetAST \u003d targetAST.getParent().getNextSibling();\n-                }\n-            }\n-        }\n         final String line \u003d getLine(aAST.getLineNo() - 1);\n-        int after \u003d 0;\n-        //If target of possible redundant whitespace is in method definition\n-        if (targetAST.getType() \u003d\u003d TokenTypes.IDENT\n-                \u0026\u0026 targetAST.getNextSibling().getType() \u003d\u003d TokenTypes.LPAREN)\n-        {\n-            final DetailAST methodDef \u003d targetAST.getParent();\n-            final DetailAST endOfParams \u003d methodDef.findFirstToken(TokenTypes.RPAREN);\n-            after \u003d endOfParams.getColumnNo() + 1;\n-        }\n-        else {\n-            after \u003d targetAST.getColumnNo() + targetAST.getText().length();\n-        }\n+        final int after \u003d\n+            targetAST.getColumnNo() + targetAST.getText().length();\n \n         if ((after \u003e\u003d line.length())\n             || Character.isWhitespace(line.charAt(after)))\n         {\n             boolean flag \u003d !mAllowLineBreaks;\n             for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(targetAST.getLineNo(), after,\n                     \"ws.followed\", targetAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        final String line \u003d getLine(aAST.getLineNo() - 1);\n        final int after \u003d\n            targetAST.getColumnNo() + targetAST.getText().length();\n\n        if ((after \u003e\u003d line.length())\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "095fa6743c995a0c89056456a3724a9480c69e50": {
      "type": "Ybodychange",
      "commitMessage": "No Whitespace After Check - added support of array declarations, issue #68\n",
      "commitDate": "18/12/14 11:51 AM",
      "commitName": "095fa6743c995a0c89056456a3724a9480c69e50",
      "commitAuthor": "alexkravin",
      "commitDateOld": "02/11/14 11:48 AM",
      "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthorOld": "sopov.ivan",
      "daysBetweenCommits": 46.0,
      "commitsBetweenForRepo": 173,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,46 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST targetAST \u003d aAST;\n         if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n         }\n+        else {\n+            if (targetAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n+                final DetailAST arrayType \u003d targetAST.getFirstChild();\n+                if (!isCstyleArrayDeclaration(targetAST)) {\n+                    targetAST \u003d arrayType;\n+                }\n+                else {\n+                    targetAST \u003d targetAST.getParent().getNextSibling();\n+                }\n+            }\n+        }\n         final String line \u003d getLine(aAST.getLineNo() - 1);\n-        final int after \u003d\n-            targetAST.getColumnNo() + targetAST.getText().length();\n+        int after \u003d 0;\n+        //If target of possible redundant whitespace is in method definition\n+        if (targetAST.getType() \u003d\u003d TokenTypes.IDENT\n+                \u0026\u0026 targetAST.getNextSibling().getType() \u003d\u003d TokenTypes.LPAREN)\n+        {\n+            final DetailAST methodDef \u003d targetAST.getParent();\n+            final DetailAST endOfParams \u003d methodDef.findFirstToken(TokenTypes.RPAREN);\n+            after \u003d endOfParams.getColumnNo() + 1;\n+        }\n+        else {\n+            after \u003d targetAST.getColumnNo() + targetAST.getText().length();\n+        }\n \n         if ((after \u003e\u003d line.length())\n             || Character.isWhitespace(line.charAt(after)))\n         {\n             boolean flag \u003d !mAllowLineBreaks;\n             for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(targetAST.getLineNo(), after,\n                     \"ws.followed\", targetAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        else {\n            if (targetAST.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n                final DetailAST arrayType \u003d targetAST.getFirstChild();\n                if (!isCstyleArrayDeclaration(targetAST)) {\n                    targetAST \u003d arrayType;\n                }\n                else {\n                    targetAST \u003d targetAST.getParent().getNextSibling();\n                }\n            }\n        }\n        final String line \u003d getLine(aAST.getLineNo() - 1);\n        int after \u003d 0;\n        //If target of possible redundant whitespace is in method definition\n        if (targetAST.getType() \u003d\u003d TokenTypes.IDENT\n                \u0026\u0026 targetAST.getNextSibling().getType() \u003d\u003d TokenTypes.LPAREN)\n        {\n            final DetailAST methodDef \u003d targetAST.getParent();\n            final DetailAST endOfParams \u003d methodDef.findFirstToken(TokenTypes.RPAREN);\n            after \u003d endOfParams.getColumnNo() + 1;\n        }\n        else {\n            after \u003d targetAST.getColumnNo() + targetAST.getText().length();\n        }\n\n        if ((after \u003e\u003d line.length())\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": {
      "type": "Ybodychange",
      "commitMessage": "FileContents.getLines performance fix\n",
      "commitDate": "02/11/14 11:48 AM",
      "commitName": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthor": "sopov.ivan",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 243.1,
      "commitsBetweenForRepo": 222,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST targetAST \u003d aAST;\n         if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n         }\n-        final String line \u003d getLines()[aAST.getLineNo() - 1];\n+        final String line \u003d getLine(aAST.getLineNo() - 1);\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n         if ((after \u003e\u003d line.length())\n             || Character.isWhitespace(line.charAt(after)))\n         {\n             boolean flag \u003d !mAllowLineBreaks;\n             for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(targetAST.getLineNo(), after,\n                     \"ws.followed\", targetAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        final String line \u003d getLine(aAST.getLineNo() - 1);\n        final int after \u003d\n            targetAST.getColumnNo() + targetAST.getText().length();\n\n        if ((after \u003e\u003d line.length())\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        final String line \u003d getLines()[aAST.getLineNo() - 1];\n        final int after \u003d\n            targetAST.getColumnNo() + targetAST.getText().length();\n\n        if ((after \u003e\u003d line.length())\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "17/06/06 7:51 AM",
      "commitNameOld": "103a2068a8c9e56d0202a37cfa198bca6cdc4bab",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 19.52,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n         DetailAST targetAST \u003d aAST;\n         if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n             targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n         }\n         final String line \u003d getLines()[aAST.getLineNo() - 1];\n         final int after \u003d\n             targetAST.getColumnNo() + targetAST.getText().length();\n \n-        if (after \u003e\u003d line.length()\n+        if ((after \u003e\u003d line.length())\n             || Character.isWhitespace(line.charAt(after)))\n         {\n             boolean flag \u003d !mAllowLineBreaks;\n-            for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n+            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n                 log(targetAST.getLineNo(), after,\n                     \"ws.followed\", targetAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        final String line \u003d getLines()[aAST.getLineNo() - 1];\n        final int after \u003d\n            targetAST.getColumnNo() + targetAST.getText().length();\n\n        if ((after \u003e\u003d line.length())\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 (i \u003c line.length()); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "ea4085cd15fefe1e70a495798187c425295c74b6": {
      "type": "Ybodychange",
      "commitMessage": "Fix for rfe 1248106 (TYPECAST is now accepted by NoWhitespaceAfter)\n\nFix for rfe 953266 (thanks to Paul Guyot (pguyot) for submitting patch)\nIllegalType can be configured to accept some abstract classes which\nmatches to regexp of illegal type names (property legalAbstractClassNames)\n\nTrailingComment now can be configured to accept some trailing comments\n(such as NOI18N) (property legalComment, rfe 1385344).\n",
      "commitDate": "25/12/05 8:13 AM",
      "commitName": "ea4085cd15fefe1e70a495798187c425295c74b6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 54.87,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final String[] lines \u003d getLines();\n-        final String line \u003d lines[aAST.getLineNo() - 1];\n-        final int after \u003d aAST.getColumnNo() + aAST.getText().length();\n+        DetailAST targetAST \u003d aAST;\n+        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n+            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n+        }\n+        final String line \u003d getLines()[aAST.getLineNo() - 1];\n+        final int after \u003d\n+            targetAST.getColumnNo() + targetAST.getText().length();\n \n         if (after \u003e\u003d line.length()\n             || Character.isWhitespace(line.charAt(after)))\n         {\n             boolean flag \u003d !mAllowLineBreaks;\n             for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n                 if (!Character.isWhitespace(line.charAt(i))) {\n                     flag \u003d true;\n                 }\n             }\n             if (flag) {\n-                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());\n+                log(targetAST.getLineNo(), after,\n+                    \"ws.followed\", targetAST.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        DetailAST targetAST \u003d aAST;\n        if (targetAST.getType() \u003d\u003d TokenTypes.TYPECAST) {\n            targetAST \u003d targetAST.findFirstToken(TokenTypes.RPAREN);\n        }\n        final String line \u003d getLines()[aAST.getLineNo() - 1];\n        final int after \u003d\n            targetAST.getColumnNo() + targetAST.getText().length();\n\n        if (after \u003e\u003d line.length()\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(targetAST.getLineNo(), after,\n                    \"ws.followed\", targetAST.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {}
    },
    "2e8126e99047befc39560342981b0b8e7cabea21": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Whitespace checks\n",
      "commitDate": "04/06/03 4:55 AM",
      "commitName": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/06/03 3:42 AM",
      "commitNameOld": "3bd6412e39a141b980901f291391ff1bcc4a61f3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.05,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final String[] lines \u003d getLines();\n        final String line \u003d lines[aAST.getLineNo() - 1];\n        final int after \u003d aAST.getColumnNo() + aAST.getText().length();\n\n        if (after \u003e\u003d line.length()\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceAfterCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/whitespace/NoWhitespaceAfterCheck.java"
      }
    },
    "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b": {
      "type": "Yintroduced",
      "commitMessage": "no whitespace checks for unary operators\n",
      "commitDate": "10/11/02 11:54 AM",
      "commitName": "8afddb6af3aff5ed7e17f35bebdd0718ee50d86b",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,20 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        final String[] lines \u003d getLines();\n+        final String line \u003d lines[aAST.getLineNo() - 1];\n+        final int after \u003d aAST.getColumnNo() + aAST.getText().length();\n+\n+        if (after \u003e\u003d line.length()\n+            || Character.isWhitespace(line.charAt(after)))\n+        {\n+            boolean flag \u003d !mAllowLineBreaks;\n+            for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n+                if (!Character.isWhitespace(line.charAt(i))) {\n+                    flag \u003d true;\n+                }\n+            }\n+            if (flag) {\n+                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final String[] lines \u003d getLines();\n        final String line \u003d lines[aAST.getLineNo() - 1];\n        final int after \u003d aAST.getColumnNo() + aAST.getText().length();\n\n        if (after \u003e\u003d line.length()\n            || Character.isWhitespace(line.charAt(after)))\n        {\n            boolean flag \u003d !mAllowLineBreaks;\n            for (int i \u003d after + 1; !flag \u0026\u0026 i \u003c line.length(); i++) {\n                if (!Character.isWhitespace(line.charAt(i))) {\n                    flag \u003d true;\n                }\n            }\n            if (flag) {\n                log(aAST.getLineNo(), after, \"ws.followed\", aAST.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/NoWhitespaceAfterCheck.java"
    }
  }
}