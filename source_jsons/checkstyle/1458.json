{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HiddenFieldCheck.java",
  "functionName": "processVariable",
  "functionId": "processVariable___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
  "functionStartLine": 351,
  "functionEndLine": 366,
  "numCommitsSeen": 131,
  "timeTaken": 3958,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "b0493771961c1fd89c96271b397da62699877551",
    "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676",
    "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0",
    "cc7aeaec906dc3c864477e3050510009b2a946ee",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "a265fee823c473d632b83c446b2e6bc82960b2c0",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "27149f3504a2f350b74f456a9bffbae76a460060",
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "9f39a76cd595caf08597b89c9122e2cbb5ff8684",
    "49d100f325752b15bbee56bfcf99dac223144639",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "66cc059f7129ce961b3dc833c3150b2dbd89590b",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
    "6125beffc437f970eae276b4a6542265c6547784",
    "31a9795d84272acee8e5a124e67c416c427813a5",
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055",
    "a00160b33c89916e57bf80a6256e4944407b4de4",
    "b3f216962675b06505885a2e82af150e6b12bb56",
    "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "ca5c92f2e784f66533b1074269a5226e99af6157",
    "4981978ee20649f39244d3f2003580dad28770eb",
    "4d307934ff226b8b1fd79005496b5f4eb832a68d",
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03",
    "d2a0e41072c8a97195971566c571ef84c7593627",
    "74989ba01127916157571418f5a7ad16929fcda5"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "b0493771961c1fd89c96271b397da62699877551": "Ybodychange",
    "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676": "Ybodychange",
    "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0": "Ybodychange",
    "cc7aeaec906dc3c864477e3050510009b2a946ee": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "a265fee823c473d632b83c446b2e6bc82960b2c0": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "27149f3504a2f350b74f456a9bffbae76a460060": "Ybodychange",
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "9f39a76cd595caf08597b89c9122e2cbb5ff8684": "Ybodychange",
    "49d100f325752b15bbee56bfcf99dac223144639": "Ybodychange",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ybodychange",
    "66cc059f7129ce961b3dc833c3150b2dbd89590b": "Ybodychange",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": "Ybodychange",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "31a9795d84272acee8e5a124e67c416c427813a5": "Ybodychange",
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055": "Ybodychange",
    "a00160b33c89916e57bf80a6256e4944407b4de4": "Ybodychange",
    "b3f216962675b06505885a2e82af150e6b12bb56": "Ybodychange",
    "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "ca5c92f2e784f66533b1074269a5226e99af6157": "Ybodychange",
    "4981978ee20649f39244d3f2003580dad28770eb": "Ybodychange",
    "4d307934ff226b8b1fd79005496b5f4eb832a68d": "Ybodychange",
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03": "Ybodychange",
    "d2a0e41072c8a97195971566c571ef84c7593627": "Ybodychange",
    "74989ba01127916157571418f5a7ad16929fcda5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private void processVariable(DetailAST ast) {\n-        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n-            \u0026\u0026 !CheckUtils.isReceiverParameter(ast)\n-            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n+        if (!ScopeUtil.isInInterfaceOrAnnotationBlock(ast)\n+            \u0026\u0026 !CheckUtil.isReceiverParameter(ast)\n+            \u0026\u0026 (ScopeUtil.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n             if ((frame.containsStaticField(name) || isInstanceField(ast, name))\n                     \u0026\u0026 !isMatchingRegexp(name)\n                     \u0026\u0026 !isIgnoredParam(ast, name)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtil.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 !CheckUtil.isReceiverParameter(ast)\n            \u0026\u0026 (ScopeUtil.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((frame.containsStaticField(name) || isInstanceField(ast, name))\n                    \u0026\u0026 !isMatchingRegexp(name)\n                    \u0026\u0026 !isIgnoredParam(ast, name)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "b0493771961c1fd89c96271b397da62699877551": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5008: increase coverage of pitest-checks-coding to 97%\n",
      "commitDate": "24/09/17 6:28 AM",
      "commitName": "b0493771961c1fd89c96271b397da62699877551",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "19/08/17 10:29 PM",
      "commitNameOld": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private void processVariable(DetailAST ast) {\n         if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 !CheckUtils.isReceiverParameter(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n-            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)\n-                        || isStaticOrInstanceField(ast, name))\n+            if ((frame.containsStaticField(name) || isInstanceField(ast, name))\n                     \u0026\u0026 !isMatchingRegexp(name)\n                     \u0026\u0026 !isIgnoredParam(ast, name)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 !CheckUtils.isReceiverParameter(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((frame.containsStaticField(name) || isInstanceField(ast, name))\n                    \u0026\u0026 !isMatchingRegexp(name)\n                    \u0026\u0026 !isIgnoredParam(ast, name)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3239: fixed checks that fail on new receiver parameter (#3272)\n\n",
      "commitDate": "16/06/16 2:33 PM",
      "commitName": "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/02/16 6:01 AM",
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 132.31,
      "commitsBetweenForRepo": 339,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     private void processVariable(DetailAST ast) {\n         if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n+            \u0026\u0026 !CheckUtils.isReceiverParameter(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n             if ((isStaticFieldHiddenFromAnonymousClass(ast, name)\n                         || isStaticOrInstanceField(ast, name))\n                     \u0026\u0026 !isMatchingRegexp(name)\n                     \u0026\u0026 !isIgnoredParam(ast, name)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 !CheckUtils.isReceiverParameter(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)\n                        || isStaticOrInstanceField(ast, name))\n                    \u0026\u0026 !isMatchingRegexp(name)\n                    \u0026\u0026 !isIgnoredParam(ast, name)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #382: Fix HiddenField false positive violations for anonymous classes\n",
      "commitDate": "11/09/15 10:14 AM",
      "commitName": "dba6c944cdbf9acfbb40b9a2d8e6315fb14d87f0",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "01/09/15 9:47 PM",
      "commitNameOld": "8607274a9205c5f15c33820b0efa6dc4c5ea9a23",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 9.52,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private void processVariable(DetailAST ast) {\n         if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n-            if (isStaticOrInstanceField(ast, name)\n-                \u0026\u0026 !isMatchingRegexp(name)\n-                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n-                \u0026\u0026 !isIgnoredConstructorParam(ast)\n-                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n+            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)\n+                        || isStaticOrInstanceField(ast, name))\n+                    \u0026\u0026 !isMatchingRegexp(name)\n+                    \u0026\u0026 !isIgnoredParam(ast, name)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((isStaticFieldHiddenFromAnonymousClass(ast, name)\n                        || isStaticOrInstanceField(ast, name))\n                    \u0026\u0026 !isMatchingRegexp(name)\n                    \u0026\u0026 !isIgnoredParam(ast, name)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "cc7aeaec906dc3c864477e3050510009b2a946ee": {
      "type": "Ybodychange",
      "commitMessage": "Fix some typos in coding package. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "27/08/15 10:29 PM",
      "commitName": "cc7aeaec906dc3c864477e3050510009b2a946ee",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 12:53 PM",
      "commitNameOld": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.4,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private void processVariable(DetailAST ast) {\n         if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n-            if (isStaticOrOnstanceField(ast, name)\n+            if (isStaticOrInstanceField(ast, name)\n                 \u0026\u0026 !isMatchingRegexp(name)\n                 \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                 \u0026\u0026 !isIgnoredConstructorParam(ast)\n                 \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if (isStaticOrInstanceField(ast, name)\n                \u0026\u0026 !isMatchingRegexp(name)\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "27/08/15 12:53 PM",
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private void processVariable(DetailAST ast) {\n-        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n+        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n             if (isStaticOrOnstanceField(ast, name)\n                 \u0026\u0026 !isMatchingRegexp(name)\n                 \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                 \u0026\u0026 !isIgnoredConstructorParam(ast)\n                 \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.isInInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if (isStaticOrOnstanceField(ast, name)\n                \u0026\u0026 !isMatchingRegexp(name)\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "a265fee823c473d632b83c446b2e6bc82960b2c0": {
      "type": "Ybodychange",
      "commitMessage": "HiddenFieldCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "13/06/15 11:01 PM",
      "commitName": "a265fee823c473d632b83c446b2e6bc82960b2c0",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 27.76,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n     private void processVariable(DetailAST ast) {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n-            if ((currentFrame.containsStaticField(name)\n-                || !inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name))\n-                \u0026\u0026 (regexp \u003d\u003d null || !getRegexp().matcher(name).find())\n+            if (isStaticOrOnstanceField(ast, name)\n+                \u0026\u0026 !isMatchingRegexp(name)\n                 \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                 \u0026\u0026 !isIgnoredConstructorParam(ast)\n                 \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast) {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)) {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if (isStaticOrOnstanceField(ast, name)\n                \u0026\u0026 !isMatchingRegexp(name)\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast)) {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "09/03/15 11:22 PM",
      "commitNameOld": "aef1f36b5a01b0a8da6557fd82c11a07baf350b2",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void processVariable(DetailAST ast)\n     {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n-                || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)))\n+                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n         {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n             if ((currentFrame.containsStaticField(name)\n-                || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n-                \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n+                || !inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name))\n+                \u0026\u0026 (regexp \u003d\u003d null || !getRegexp().matcher(name).find())\n                 \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                 \u0026\u0026 !isIgnoredConstructorParam(ast)\n                 \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n             {\n                 log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n        {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((currentFrame.containsStaticField(name)\n                || !inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name))\n                \u0026\u0026 (regexp \u003d\u003d null || !getRegexp().matcher(name).find())\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n            {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "27149f3504a2f350b74f456a9bffbae76a460060": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, coding package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void processVariable(DetailAST ast)\n     {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n             \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                 || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)))\n         {\n             // local variable or parameter. Does it shadow a field?\n             final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n             final String name \u003d nameAST.getText();\n \n             if ((currentFrame.containsStaticField(name)\n                 || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n                 \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n                 \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                 \u0026\u0026 !isIgnoredConstructorParam(ast)\n                 \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n             {\n-                log(nameAST, \"hidden.field\", name);\n+                log(nameAST, MSG_KEY, name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((currentFrame.containsStaticField(name)\n                || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n                \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n            {\n                log(nameAST, MSG_KEY, name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "6784e5bcd5baa6b5086bf8b63709856d685a74c8": {
      "type": "Ybodychange",
      "commitMessage": "HiddenField module can now accept setterCanReturnItsClass attribute. #598\n",
      "commitDate": "26/01/15 5:04 PM",
      "commitName": "6784e5bcd5baa6b5086bf8b63709856d685a74c8",
      "commitAuthor": "Dmitri Priimak",
      "commitDateOld": "22/01/15 4:29 AM",
      "commitNameOld": "b2eeea93c2b1c9a148a8ecf615637aeea4630638",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 4.52,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private void processVariable(DetailAST ast)\n     {\n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n-            || (!ScopeUtils.isLocalVariableDef(ast)\n-            \u0026\u0026 (ast.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n+        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n+            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n+                || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)))\n         {\n-            // do nothing\n-            return;\n-        }\n-        //local variable or pnameter. Does it shadow a field?\n-        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n-        final String name \u003d nameAST.getText();\n-        if ((currentFrame.containsStaticField(name)\n-             || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n-            \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n-            \u0026\u0026 !isIgnoredSetterParam(ast, name)\n-            \u0026\u0026 !isIgnoredConstructorParam(ast)\n-            \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n-        {\n-            log(nameAST, \"hidden.field\", name);\n+            // local variable or parameter. Does it shadow a field?\n+            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n+            final String name \u003d nameAST.getText();\n+\n+            if ((currentFrame.containsStaticField(name)\n+                || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n+                \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n+                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n+                \u0026\u0026 !isIgnoredConstructorParam(ast)\n+                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n+            {\n+                log(nameAST, \"hidden.field\", name);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST ast)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            \u0026\u0026 (ScopeUtils.isLocalVariableDef(ast)\n                || (ast.getType() \u003d\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n\n            if ((currentFrame.containsStaticField(name)\n                || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n                \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n                \u0026\u0026 !isIgnoredSetterParam(ast, name)\n                \u0026\u0026 !isIgnoredConstructorParam(ast)\n                \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n            {\n                log(nameAST, \"hidden.field\", name);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void processVariable(DetailAST aAST)\n+    private void processVariable(DetailAST ast)\n     {\n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n-            || (!ScopeUtils.isLocalVariableDef(aAST)\n-            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n+            || (!ScopeUtils.isLocalVariableDef(ast)\n+            \u0026\u0026 (ast.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n         {\n             // do nothing\n             return;\n         }\n-        //local variable or parameter. Does it shadow a field?\n-        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n+        //local variable or pnameter. Does it shadow a field?\n+        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n-        if ((mCurrentFrame.containsStaticField(name)\n-             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n-            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n-            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n-            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n-            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n+        if ((currentFrame.containsStaticField(name)\n+             || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n+            \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n+            \u0026\u0026 !isIgnoredSetterParam(ast, name)\n+            \u0026\u0026 !isIgnoredConstructorParam(ast)\n+            \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n         {\n             log(nameAST, \"hidden.field\", name);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void processVariable(DetailAST ast)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            || (!ScopeUtils.isLocalVariableDef(ast)\n            \u0026\u0026 (ast.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or pnameter. Does it shadow a field?\n        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((currentFrame.containsStaticField(name)\n             || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(ast, name)\n            \u0026\u0026 !isIgnoredConstructorParam(ast)\n            \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void processVariable(DetailAST aAST)\n+    private void processVariable(DetailAST ast)\n     {\n-        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n-            || (!ScopeUtils.isLocalVariableDef(aAST)\n-            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n+            || (!ScopeUtils.isLocalVariableDef(ast)\n+            \u0026\u0026 (ast.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n         {\n             // do nothing\n             return;\n         }\n-        //local variable or parameter. Does it shadow a field?\n-        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n+        //local variable or pnameter. Does it shadow a field?\n+        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n-        if ((mCurrentFrame.containsStaticField(name)\n-             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n-            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n-            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n-            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n-            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n+        if ((currentFrame.containsStaticField(name)\n+             || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n+            \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n+            \u0026\u0026 !isIgnoredSetterParam(ast, name)\n+            \u0026\u0026 !isIgnoredConstructorParam(ast)\n+            \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n         {\n             log(nameAST, \"hidden.field\", name);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void processVariable(DetailAST ast)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(ast)\n            || (!ScopeUtils.isLocalVariableDef(ast)\n            \u0026\u0026 (ast.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or pnameter. Does it shadow a field?\n        final DetailAST nameAST \u003d ast.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((currentFrame.containsStaticField(name)\n             || (!inStatic(ast) \u0026\u0026 currentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((regexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(ast, name)\n            \u0026\u0026 !isIgnoredConstructorParam(ast)\n            \u0026\u0026 !isIgnoredParamOfAbstractMethod(ast))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n            || (!ScopeUtils.isLocalVariableDef(aAST)\n            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or parameter. Does it shadow a field?\n        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((mCurrentFrame.containsStaticField(name)\n             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "21/01/06 4:43 AM",
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n-            || !ScopeUtils.isLocalVariableDef(aAST)\n-            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF))\n+            || (!ScopeUtils.isLocalVariableDef(aAST)\n+            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n         {\n             // do nothing\n             return;\n         }\n         //local variable or parameter. Does it shadow a field?\n         final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n         if ((mCurrentFrame.containsStaticField(name)\n              || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n             \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n             \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n             \u0026\u0026 !isIgnoredConstructorParam(aAST)\n             \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n         {\n             log(nameAST, \"hidden.field\", name);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n            || (!ScopeUtils.isLocalVariableDef(aAST)\n            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF)))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or parameter. Does it shadow a field?\n        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((mCurrentFrame.containsStaticField(name)\n             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "9f39a76cd595caf08597b89c9122e2cbb5ff8684": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 1084512 (Parameters of abstract methods hide fields)\n  Added ignoreAbstractMethods property to allow configure HiddenField\n  check to ignore params of abstract methods.\n\nNow test inputs (almost all) will be compiled as part of\nrun.test.suite and run.tests targets (this compilation requires\njdk1.5 or higher)\n",
      "commitDate": "12/06/05 12:43 PM",
      "commitName": "9f39a76cd595caf08597b89c9122e2cbb5ff8684",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "31/05/05 9:16 AM",
      "commitNameOld": "49d100f325752b15bbee56bfcf99dac223144639",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 12.14,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n             || !ScopeUtils.isLocalVariableDef(aAST)\n             \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF))\n         {\n             // do nothing\n             return;\n         }\n         //local variable or parameter. Does it shadow a field?\n         final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n         final String name \u003d nameAST.getText();\n         if ((mCurrentFrame.containsStaticField(name)\n              || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n             \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n             \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n-            \u0026\u0026 !isIgnoredConstructorParam(aAST))\n+            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n+            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n         {\n             log(nameAST, \"hidden.field\", name);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n            || !ScopeUtils.isLocalVariableDef(aAST)\n            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or parameter. Does it shadow a field?\n        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((mCurrentFrame.containsStaticField(name)\n             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n            \u0026\u0026 !isIgnoredConstructorParam(aAST)\n            \u0026\u0026 !isIgnoredParamOfAbstractMethod(aAST))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "49d100f325752b15bbee56bfcf99dac223144639": {
      "type": "Ybodychange",
      "commitMessage": "small refactoring for HiddenFieldCheck\n",
      "commitDate": "31/05/05 9:16 AM",
      "commitName": "49d100f325752b15bbee56bfcf99dac223144639",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "11/05/05 9:48 AM",
      "commitNameOld": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 19.98,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private void processVariable(DetailAST aAST)\n     {\n-        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n-            if (ScopeUtils.isLocalVariableDef(aAST)\n-                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n-            {\n-                //local variable or parameter. Does it shadow a field?\n-                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n-                final String name \u003d nameAST.getText();\n-                if ((mCurrentFrame.containsStaticField(name)\n-                     || (!inStatic(aAST)\n-                         \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n-                    \u0026\u0026 ((mRegexp \u003d\u003d null)\n-                        || (!getRegexp().matcher(name).find()))\n-                    \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n-                    \u0026\u0026 !isIgnoredConstructorParam(aAST))\n-                {\n-                    log(nameAST, \"hidden.field\", name);\n-                }\n-            }\n+        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n+            || !ScopeUtils.isLocalVariableDef(aAST)\n+            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF))\n+        {\n+            // do nothing\n+            return;\n+        }\n+        //local variable or parameter. Does it shadow a field?\n+        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n+        final String name \u003d nameAST.getText();\n+        if ((mCurrentFrame.containsStaticField(name)\n+             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n+            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n+            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n+            \u0026\u0026 !isIgnoredConstructorParam(aAST))\n+        {\n+            log(nameAST, \"hidden.field\", name);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n            || !ScopeUtils.isLocalVariableDef(aAST)\n            \u0026\u0026 (aAST.getType() !\u003d TokenTypes.PARAMETER_DEF))\n        {\n            // do nothing\n            return;\n        }\n        //local variable or parameter. Does it shadow a field?\n        final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n        final String name \u003d nameAST.getText();\n        if ((mCurrentFrame.containsStaticField(name)\n             || (!inStatic(aAST) \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n            \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().matcher(name).find()))\n            \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n            \u0026\u0026 !isIgnoredConstructorParam(aAST))\n        {\n            log(nameAST, \"hidden.field\", name);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ybodychange",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": "11/05/05 9:48 AM",
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 122.25,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 if ((mCurrentFrame.containsStaticField(name)\n                      || (!inStatic(aAST)\n                          \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n-                    \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n+                    \u0026\u0026 ((mRegexp \u003d\u003d null)\n+                        || (!getRegexp().matcher(name).find()))\n                     \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                     \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                 {\n                     log(nameAST, \"hidden.field\", name);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                if ((mCurrentFrame.containsStaticField(name)\n                     || (!inStatic(aAST)\n                         \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n                    \u0026\u0026 ((mRegexp \u003d\u003d null)\n                        || (!getRegexp().matcher(name).find()))\n                    \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                    \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                {\n                    log(nameAST, \"hidden.field\", name);\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "66cc059f7129ce961b3dc833c3150b2dbd89590b": {
      "type": "Ybodychange",
      "commitMessage": "Just minor code cleanup\n",
      "commitDate": "07/12/04 2:50 AM",
      "commitName": "66cc059f7129ce961b3dc833c3150b2dbd89590b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "05/10/04 10:11 AM",
      "commitNameOld": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 62.74,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n-                boolean inStatic \u003d inStatic(aAST);\n                 if ((mCurrentFrame.containsStaticField(name)\n                      || (!inStatic(aAST)\n                          \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n                     \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                     \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                     \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                 {\n                     log(nameAST, \"hidden.field\", name);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                if ((mCurrentFrame.containsStaticField(name)\n                     || (!inStatic(aAST)\n                         \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n                    \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                    \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                    \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                {\n                    log(nameAST, \"hidden.field\", name);\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": {
      "type": "Ybodychange",
      "commitMessage": "merging changes from v3 branch\n",
      "commitDate": "05/10/04 10:11 AM",
      "commitName": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "27/09/04 11:55 AM",
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,22 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 boolean inStatic \u003d inStatic(aAST);\n-                final ListIterator it \u003d\n-                    mFieldsStack.listIterator(mFieldsStack.size());\n-                while (it.hasPrevious()) {\n-                    final FieldFrame frame \u003d (FieldFrame) it.previous();\n-                    inStatic |\u003d frame.isStaticType();\n-                    if ((frame.containsStaticField(name)\n-                        || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n-                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n-                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n-                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n-                    {\n-                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                            \"hidden.field\", name);\n-                        break;\n-                    }\n+                if ((mCurrentFrame.containsStaticField(name)\n+                     || (!inStatic(aAST)\n+                         \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n+                    \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n+                    \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n+                    \u0026\u0026 !isIgnoredConstructorParam(aAST))\n+                {\n+                    log(nameAST, \"hidden.field\", name);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                boolean inStatic \u003d inStatic(aAST);\n                if ((mCurrentFrame.containsStaticField(name)\n                     || (!inStatic(aAST)\n                         \u0026\u0026 mCurrentFrame.containsInstanceField(name)))\n                    \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                    \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                    \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                {\n                    log(nameAST, \"hidden.field\", name);\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": "27/09/04 11:55 AM",
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "22/09/04 1:31 PM",
      "commitNameOld": "31a9795d84272acee8e5a124e67c416c427813a5",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 4.93,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private void processVariable(DetailAST aAST)\n     {\n-        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n+        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 boolean inStatic \u003d inStatic(aAST);\n                 final ListIterator it \u003d\n                     mFieldsStack.listIterator(mFieldsStack.size());\n                 while (it.hasPrevious()) {\n                     final FieldFrame frame \u003d (FieldFrame) it.previous();\n-                    inStatic |\u003d frame.isStaticClass();\n+                    inStatic |\u003d frame.isStaticType();\n                     if ((frame.containsStaticField(name)\n                         || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                         \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                         \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                         \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                     {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceOrAnnotationBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                boolean inStatic \u003d inStatic(aAST);\n                final ListIterator it \u003d\n                    mFieldsStack.listIterator(mFieldsStack.size());\n                while (it.hasPrevious()) {\n                    final FieldFrame frame \u003d (FieldFrame) it.previous();\n                    inStatic |\u003d frame.isStaticType();\n                    if ((frame.containsStaticField(name)\n                        || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                    {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "31a9795d84272acee8e5a124e67c416c427813a5": {
      "type": "Ybodychange",
      "commitMessage": "fix for 1032426\n",
      "commitDate": "22/09/04 1:31 PM",
      "commitName": "31a9795d84272acee8e5a124e67c416c427813a5",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 251.97,
      "commitsBetweenForRepo": 144,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n-                final boolean inStatic \u003d inStatic(aAST);\n-                final Iterator it \u003d mFieldsStack.iterator();\n-                while (it.hasNext()) {\n-                    final FieldFrame frame \u003d (FieldFrame) it.next();\n+                boolean inStatic \u003d inStatic(aAST);\n+                final ListIterator it \u003d\n+                    mFieldsStack.listIterator(mFieldsStack.size());\n+                while (it.hasPrevious()) {\n+                    final FieldFrame frame \u003d (FieldFrame) it.previous();\n+                    inStatic |\u003d frame.isStaticClass();\n                     if ((frame.containsStaticField(name)\n                         || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                         \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                         \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                         \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                     {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                boolean inStatic \u003d inStatic(aAST);\n                final ListIterator it \u003d\n                    mFieldsStack.listIterator(mFieldsStack.size());\n                while (it.hasPrevious()) {\n                    final FieldFrame frame \u003d (FieldFrame) it.previous();\n                    inStatic |\u003d frame.isStaticClass();\n                    if ((frame.containsStaticField(name)\n                        || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                    {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "84d33e55d9735a79f1e0e9f692dd92592aa2f055": {
      "type": "Ybodychange",
      "commitMessage": "Fixed HiddenFieldCheck error for a local variable of a static\nmethod with same name as an instance field(bug 827713)\n",
      "commitDate": "26/10/03 4:32 PM",
      "commitName": "84d33e55d9735a79f1e0e9f692dd92592aa2f055",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "08/10/03 10:46 AM",
      "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 18.28,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n+                final boolean inStatic \u003d inStatic(aAST);\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n-                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n-                    if (aFieldsSet.contains(name)\n+                    final FieldFrame frame \u003d (FieldFrame) it.next();\n+                    if ((frame.containsStaticField(name)\n+                        || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                         \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                         \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                         \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                     {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final boolean inStatic \u003d inStatic(aAST);\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final FieldFrame frame \u003d (FieldFrame) it.next();\n                    if ((frame.containsStaticField(name)\n                        || (!inStatic \u0026\u0026 frame.containsInstanceField(name)))\n                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                    {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "a00160b33c89916e57bf80a6256e4944407b4de4": {
      "type": "Ybodychange",
      "commitMessage": "Added property to HiddenFieldCheck to ignore constructor parameters (request 798240).\n",
      "commitDate": "31/08/03 2:35 PM",
      "commitName": "a00160b33c89916e57bf80a6256e4944407b4de4",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "18/08/03 10:20 PM",
      "commitNameOld": "b3f216962675b06505885a2e82af150e6b12bb56",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 12.68,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n                     if (aFieldsSet.contains(name)\n                         \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n-                        \u0026\u0026 !isIgnoredSetterParam(aAST, name))\n+                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n+                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                     {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)\n                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                        \u0026\u0026 !isIgnoredSetterParam(aAST, name)\n                        \u0026\u0026 !isIgnoredConstructorParam(aAST))\n                    {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "b3f216962675b06505885a2e82af150e6b12bb56": {
      "type": "Ybodychange",
      "commitMessage": "Fix for gump failure.\n",
      "commitDate": "18/08/03 10:20 PM",
      "commitName": "b3f216962675b06505885a2e82af150e6b12bb56",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "18/08/03 5:27 AM",
      "commitNameOld": "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n-                    if (aFieldsSet.contains(name)) {\n-                        if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n-                            if (!isIgnoredSetterParam(aAST, name)) {\n-                                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                                    \"hidden.field\", name);\n-                                break;\n-                            }\n-                        }\n+                    if (aFieldsSet.contains(name)\n+                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n+                        \u0026\u0026 !isIgnoredSetterParam(aAST, name))\n+                    {\n+                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                            \"hidden.field\", name);\n+                        break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)\n                        \u0026\u0026 ((mRegexp \u003d\u003d null) || (!getRegexp().match(name)))\n                        \u0026\u0026 !isIgnoredSetterParam(aAST, name))\n                    {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2": {
      "type": "Ybodychange",
      "commitMessage": "Added property to HiddenFieldCheck to ignore the parameter of\nproperty setter methods (request 790456).\n",
      "commitDate": "18/08/03 5:27 AM",
      "commitName": "dc3fc5fab0cb1cadd5793065d8e44bbd2c5f67e2",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "06/07/03 1:25 PM",
      "commitNameOld": "89b56ea0ea930e67468e1af466672f89bfab662b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 42.67,
      "commitsBetweenForRepo": 70,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n                     if (aFieldsSet.contains(name)) {\n                         if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n-                            log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                                \"hidden.field\", name);\n-                            break;\n+                            if (!isIgnoredSetterParam(aAST, name)) {\n+                                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                                    \"hidden.field\", name);\n+                                break;\n+                            }\n                         }\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)) {\n                        if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n                            if (!isIgnoredSetterParam(aAST, name)) {\n                                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                                    \"hidden.field\", name);\n                                break;\n                            }\n                        }\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)) {\n                        if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n                            log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                                \"hidden.field\", name);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/HiddenFieldCheck.java"
      }
    },
    "ca5c92f2e784f66533b1074269a5226e99af6157": {
      "type": "Ybodychange",
      "commitMessage": "Added ignoreFormat property to HiddenFieldCheck (request 748830).\n",
      "commitDate": "12/06/03 10:30 AM",
      "commitName": "ca5c92f2e784f66533b1074269a5226e99af6157",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "09/06/03 12:48 AM",
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.4,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,23 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.isLocalVariableDef(aAST)\n                 || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n             {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n                     if (aFieldsSet.contains(name)) {\n-                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                            \"hidden.field\", name);\n-                        break;\n+                        if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n+                            log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                                \"hidden.field\", name);\n+                            break;\n+                        }\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)) {\n                        if ((mRegexp \u003d\u003d null) || (!getRegexp().match(name))) {\n                            log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                                \"hidden.field\", name);\n                            break;\n                        }\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "4981978ee20649f39244d3f2003580dad28770eb": {
      "type": "Ybodychange",
      "commitMessage": "Corrected bug 747530, inner class fields interpreted as local variables.\nIncorporated catch parameters as local variables.\n",
      "commitDate": "02/06/03 11:06 AM",
      "commitName": "4981978ee20649f39244d3f2003580dad28770eb",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "19/05/03 10:34 AM",
      "commitNameOld": "f0edd3eaf152d377cf8ec47574cf042c0fc14543",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 14.02,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n-            if (ScopeUtils.inCodeBlock(aAST)) {\n+            if (ScopeUtils.isLocalVariableDef(aAST)\n+                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n+            {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n                 final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n                     if (aFieldsSet.contains(name)) {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.isLocalVariableDef(aAST)\n                || (aAST.getType() \u003d\u003d TokenTypes.PARAMETER_DEF))\n            {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)) {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "4d307934ff226b8b1fd79005496b5f4eb832a68d": {
      "type": "Ybodychange",
      "commitMessage": "Made check independent of order of declarations.\n",
      "commitDate": "28/11/02 2:11 AM",
      "commitName": "4d307934ff226b8b1fd79005496b5f4eb832a68d",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "27/11/02 3:46 PM",
      "commitNameOld": "c62105cfc7510892da46cb6a406b0bfa97c37672",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.43,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,19 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.inCodeBlock(aAST)) {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n-                Iterator it \u003d mFieldsStack.iterator();\n+                final Iterator it \u003d mFieldsStack.iterator();\n                 while (it.hasNext()) {\n                     final HashSet aFieldsSet \u003d (HashSet) it.next();\n                     if (aFieldsSet.contains(name)) {\n                         log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                             \"hidden.field\", name);\n                         break;\n                     }\n                 }\n             }\n-            else {\n-                //field. Add its name to the top stack element\n-                final String name \u003d\n-                    aAST.findFirstToken(TokenTypes.IDENT).getText();\n-                ((HashSet) mFieldsStack.getLast()).add(name);\n-            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.inCodeBlock(aAST)) {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet) it.next();\n                    if (aFieldsSet.contains(name)) {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "0b38b65f919bd7b3d8a440c459ce754a4a840b03": {
      "type": "Ybodychange",
      "commitMessage": "strengthened to also check  fields of outer classes, and to check\nparameters by default.\nimproved code coverage.\n",
      "commitDate": "07/11/02 4:12 PM",
      "commitName": "0b38b65f919bd7b3d8a440c459ce754a4a840b03",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "07/11/02 9:21 AM",
      "commitNameOld": "d2a0e41072c8a97195971566c571ef84c7593627",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n     private void processVariable(DetailAST aAST)\n     {\n         if (!ScopeUtils.inInterfaceBlock(aAST)) {\n             if (ScopeUtils.inCodeBlock(aAST)) {\n                 //local variable or parameter. Does it shadow a field?\n                 final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                 final String name \u003d nameAST.getText();\n-                final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n-                if (currentFieldsSet.contains(name)) {\n-                    log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                        \"hidden.field\", name);\n+                Iterator it \u003d mFieldsStack.iterator();\n+                while (it.hasNext()) {\n+                    final HashSet aFieldsSet \u003d (HashSet)it.next();\n+                    if (aFieldsSet.contains(name)) {\n+                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                            \"hidden.field\", name);\n+                        break;\n+                    }\n                 }\n             }\n             else {\n                 //field. Add its name to the top stack element\n                 final String name\n                     \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n                 ((HashSet)mFieldsStack.getLast()).add(name);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.inCodeBlock(aAST)) {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                Iterator it \u003d mFieldsStack.iterator();\n                while (it.hasNext()) {\n                    final HashSet aFieldsSet \u003d (HashSet)it.next();\n                    if (aFieldsSet.contains(name)) {\n                        log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                            \"hidden.field\", name);\n                        break;\n                    }\n                }\n            }\n            else {\n                //field. Add its name to the top stack element\n                final String name\n                    \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n                ((HashSet)mFieldsStack.getLast()).add(name);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "d2a0e41072c8a97195971566c571ef84c7593627": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug in checking an interface.\n",
      "commitDate": "07/11/02 9:21 AM",
      "commitName": "d2a0e41072c8a97195971566c571ef84c7593627",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "07/11/02 2:20 AM",
      "commitNameOld": "74989ba01127916157571418f5a7ad16929fcda5",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.29,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,21 @@\n     private void processVariable(DetailAST aAST)\n     {\n-        if (ScopeUtils.inCodeBlock(aAST)) {\n-            //local variable or parameter. Does it shadow a field?\n-            final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n-            final String name \u003d nameAST.getText();\n-            final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n-            if (currentFieldsSet.contains(name)) {\n-                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n-                    \"hidden.field\", name);\n+        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n+            if (ScopeUtils.inCodeBlock(aAST)) {\n+                //local variable or parameter. Does it shadow a field?\n+                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n+                final String name \u003d nameAST.getText();\n+                final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n+                if (currentFieldsSet.contains(name)) {\n+                    log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                        \"hidden.field\", name);\n+                }\n             }\n-        }\n-        else if (!ScopeUtils.inInterfaceBlock(aAST)){\n-            //field. Add its name to the top stack element\n-            final String name\n-                \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n-            ((HashSet)mFieldsStack.getLast()).add(name);\n+            else {\n+                //field. Add its name to the top stack element\n+                final String name\n+                    \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n+                ((HashSet)mFieldsStack.getLast()).add(name);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (!ScopeUtils.inInterfaceBlock(aAST)) {\n            if (ScopeUtils.inCodeBlock(aAST)) {\n                //local variable or parameter. Does it shadow a field?\n                final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n                final String name \u003d nameAST.getText();\n                final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n                if (currentFieldsSet.contains(name)) {\n                    log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                        \"hidden.field\", name);\n                }\n            }\n            else {\n                //field. Add its name to the top stack element\n                final String name\n                    \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n                ((HashSet)mFieldsStack.getLast()).add(name);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java",
      "extendedDetails": {}
    },
    "74989ba01127916157571418f5a7ad16929fcda5": {
      "type": "Yintroduced",
      "commitMessage": "Checks whether a local variable or parameter shadows a field.\nThis is the cause for one of the most common logic errors of beginners.\n",
      "commitDate": "07/11/02 2:20 AM",
      "commitName": "74989ba01127916157571418f5a7ad16929fcda5",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,19 @@\n+    private void processVariable(DetailAST aAST)\n+    {\n+        if (ScopeUtils.inCodeBlock(aAST)) {\n+            //local variable or parameter. Does it shadow a field?\n+            final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n+            final String name \u003d nameAST.getText();\n+            final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n+            if (currentFieldsSet.contains(name)) {\n+                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n+                    \"hidden.field\", name);\n+            }\n+        }\n+        else if (!ScopeUtils.inInterfaceBlock(aAST)){\n+            //field. Add its name to the top stack element\n+            final String name\n+                \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n+            ((HashSet)mFieldsStack.getLast()).add(name);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariable(DetailAST aAST)\n    {\n        if (ScopeUtils.inCodeBlock(aAST)) {\n            //local variable or parameter. Does it shadow a field?\n            final DetailAST nameAST \u003d aAST.findFirstToken(TokenTypes.IDENT);\n            final String name \u003d nameAST.getText();\n            final HashSet currentFieldsSet \u003d (HashSet)mFieldsStack.getLast();\n            if (currentFieldsSet.contains(name)) {\n                log(nameAST.getLineNo(), nameAST.getColumnNo(),\n                    \"hidden.field\", name);\n            }\n        }\n        else if (!ScopeUtils.inInterfaceBlock(aAST)){\n            //field. Add its name to the top stack element\n            final String name\n                \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n            ((HashSet)mFieldsStack.getLast()).add(name);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/HiddenFieldCheck.java"
    }
  }
}