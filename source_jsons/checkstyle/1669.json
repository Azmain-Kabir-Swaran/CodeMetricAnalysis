{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExplicitInitializationCheck.java",
  "functionName": "isNumericType",
  "functionId": "isNumericType___type-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
  "functionStartLine": 220,
  "functionEndLine": 227,
  "numCommitsSeen": 71,
  "timeTaken": 1421,
  "changeHistory": [
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "03c3efabf3b36fd1b8dd4da30678365c7506370c"
  ],
  "changeHistoryShort": {
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "03c3efabf3b36fd1b8dd4da30678365c7506370c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/07/15 7:40 PM",
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-    private boolean isNumericType(int type) {\n+    private static boolean isNumericType(int type) {\n         return type \u003d\u003d TokenTypes.LITERAL_BYTE\n                 || type \u003d\u003d TokenTypes.LITERAL_SHORT\n                 || type \u003d\u003d TokenTypes.LITERAL_INT\n                 || type \u003d\u003d TokenTypes.LITERAL_FLOAT\n                 || type \u003d\u003d TokenTypes.LITERAL_LONG\n                 || type \u003d\u003d TokenTypes.LITERAL_DOUBLE;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isNumericType(int type) {\n        return type \u003d\u003d TokenTypes.LITERAL_BYTE\n                || type \u003d\u003d TokenTypes.LITERAL_SHORT\n                || type \u003d\u003d TokenTypes.LITERAL_INT\n                || type \u003d\u003d TokenTypes.LITERAL_FLOAT\n                || type \u003d\u003d TokenTypes.LITERAL_LONG\n                || type \u003d\u003d TokenTypes.LITERAL_DOUBLE;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private boolean isNumericType(int type)\n     {\n-        return ((type \u003d\u003d TokenTypes.LITERAL_BYTE)\n-                || (type \u003d\u003d TokenTypes.LITERAL_SHORT)\n-                || (type \u003d\u003d TokenTypes.LITERAL_INT)\n-                || (type \u003d\u003d TokenTypes.LITERAL_FLOAT)\n-                || (type \u003d\u003d TokenTypes.LITERAL_LONG)\n-                || (type \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n+        return type \u003d\u003d TokenTypes.LITERAL_BYTE\n+                || type \u003d\u003d TokenTypes.LITERAL_SHORT\n+                || type \u003d\u003d TokenTypes.LITERAL_INT\n+                || type \u003d\u003d TokenTypes.LITERAL_FLOAT\n+                || type \u003d\u003d TokenTypes.LITERAL_LONG\n+                || type \u003d\u003d TokenTypes.LITERAL_DOUBLE;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isNumericType(int type)\n    {\n        return type \u003d\u003d TokenTypes.LITERAL_BYTE\n                || type \u003d\u003d TokenTypes.LITERAL_SHORT\n                || type \u003d\u003d TokenTypes.LITERAL_INT\n                || type \u003d\u003d TokenTypes.LITERAL_FLOAT\n                || type \u003d\u003d TokenTypes.LITERAL_LONG\n                || type \u003d\u003d TokenTypes.LITERAL_DOUBLE;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private boolean isNumericType(int aType)\n+    private boolean isNumericType(int type)\n     {\n-        return ((aType \u003d\u003d TokenTypes.LITERAL_BYTE)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_SHORT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_INT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_FLOAT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_LONG)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n+        return ((type \u003d\u003d TokenTypes.LITERAL_BYTE)\n+                || (type \u003d\u003d TokenTypes.LITERAL_SHORT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_INT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_FLOAT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_LONG)\n+                || (type \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isNumericType(int type)\n    {\n        return ((type \u003d\u003d TokenTypes.LITERAL_BYTE)\n                || (type \u003d\u003d TokenTypes.LITERAL_SHORT)\n                || (type \u003d\u003d TokenTypes.LITERAL_INT)\n                || (type \u003d\u003d TokenTypes.LITERAL_FLOAT)\n                || (type \u003d\u003d TokenTypes.LITERAL_LONG)\n                || (type \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
          "extendedDetails": {
            "oldValue": "[aType-int]",
            "newValue": "[type-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private boolean isNumericType(int aType)\n+    private boolean isNumericType(int type)\n     {\n-        return ((aType \u003d\u003d TokenTypes.LITERAL_BYTE)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_SHORT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_INT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_FLOAT)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_LONG)\n-                || (aType \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n+        return ((type \u003d\u003d TokenTypes.LITERAL_BYTE)\n+                || (type \u003d\u003d TokenTypes.LITERAL_SHORT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_INT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_FLOAT)\n+                || (type \u003d\u003d TokenTypes.LITERAL_LONG)\n+                || (type \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isNumericType(int type)\n    {\n        return ((type \u003d\u003d TokenTypes.LITERAL_BYTE)\n                || (type \u003d\u003d TokenTypes.LITERAL_SHORT)\n                || (type \u003d\u003d TokenTypes.LITERAL_INT)\n                || (type \u003d\u003d TokenTypes.LITERAL_FLOAT)\n                || (type \u003d\u003d TokenTypes.LITERAL_LONG)\n                || (type \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isNumericType(int aType)\n    {\n        return ((aType \u003d\u003d TokenTypes.LITERAL_BYTE)\n                || (aType \u003d\u003d TokenTypes.LITERAL_SHORT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_INT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_FLOAT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_LONG)\n                || (aType \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 543.69,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private boolean isNumericType(int aType)\n     {\n-        return (aType \u003d\u003d TokenTypes.LITERAL_BYTE\n-                || aType \u003d\u003d TokenTypes.LITERAL_SHORT\n-                || aType \u003d\u003d TokenTypes.LITERAL_INT\n-                || aType \u003d\u003d TokenTypes.LITERAL_FLOAT\n-                || aType \u003d\u003d TokenTypes.LITERAL_LONG\n-                || aType \u003d\u003d TokenTypes.LITERAL_DOUBLE);\n+        return ((aType \u003d\u003d TokenTypes.LITERAL_BYTE)\n+                || (aType \u003d\u003d TokenTypes.LITERAL_SHORT)\n+                || (aType \u003d\u003d TokenTypes.LITERAL_INT)\n+                || (aType \u003d\u003d TokenTypes.LITERAL_FLOAT)\n+                || (aType \u003d\u003d TokenTypes.LITERAL_LONG)\n+                || (aType \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isNumericType(int aType)\n    {\n        return ((aType \u003d\u003d TokenTypes.LITERAL_BYTE)\n                || (aType \u003d\u003d TokenTypes.LITERAL_SHORT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_INT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_FLOAT)\n                || (aType \u003d\u003d TokenTypes.LITERAL_LONG)\n                || (aType \u003d\u003d TokenTypes.LITERAL_DOUBLE));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java",
      "extendedDetails": {}
    },
    "03c3efabf3b36fd1b8dd4da30678365c7506370c": {
      "type": "Yintroduced",
      "commitMessage": "Check for variable explicit initialization (request 614387)\n",
      "commitDate": "04/10/03 10:01 AM",
      "commitName": "03c3efabf3b36fd1b8dd4da30678365c7506370c",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,9 @@\n+    private boolean isNumericType(int aType)\n+    {\n+        return (aType \u003d\u003d TokenTypes.LITERAL_BYTE\n+                || aType \u003d\u003d TokenTypes.LITERAL_SHORT\n+                || aType \u003d\u003d TokenTypes.LITERAL_INT\n+                || aType \u003d\u003d TokenTypes.LITERAL_FLOAT\n+                || aType \u003d\u003d TokenTypes.LITERAL_LONG\n+                || aType \u003d\u003d TokenTypes.LITERAL_DOUBLE);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isNumericType(int aType)\n    {\n        return (aType \u003d\u003d TokenTypes.LITERAL_BYTE\n                || aType \u003d\u003d TokenTypes.LITERAL_SHORT\n                || aType \u003d\u003d TokenTypes.LITERAL_INT\n                || aType \u003d\u003d TokenTypes.LITERAL_FLOAT\n                || aType \u003d\u003d TokenTypes.LITERAL_LONG\n                || aType \u003d\u003d TokenTypes.LITERAL_DOUBLE);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ExplicitInitializationCheck.java"
    }
  }
}