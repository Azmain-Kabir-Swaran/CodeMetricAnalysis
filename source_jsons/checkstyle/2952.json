{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FinalParametersCheck.java",
  "functionName": "visitMethod",
  "functionId": "visitMethod___method-DetailAST(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
  "functionStartLine": 171,
  "functionEndLine": 189,
  "numCommitsSeen": 68,
  "timeTaken": 2305,
  "changeHistory": [
    "a262bad94bb4aa5786a2c47582021dc1189208ec",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "48c8e6003017dc81417bb1a805a2db82d1b461ce",
    "c3674faad8a38656e910750fb22a7eef714fb8a7",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "2af259b791c8655a2b9862099763f860d3d7ae42",
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8"
  ],
  "changeHistoryShort": {
    "a262bad94bb4aa5786a2c47582021dc1189208ec": "Ybodychange",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": "Ybodychange",
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "48c8e6003017dc81417bb1a805a2db82d1b461ce": "Ybodychange",
    "c3674faad8a38656e910750fb22a7eef714fb8a7": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "2af259b791c8655a2b9862099763f860d3d7ae42": "Ybodychange",
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a262bad94bb4aa5786a2c47582021dc1189208ec": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for misc",
      "commitDate": "02/01/19 8:09 PM",
      "commitName": "a262bad94bb4aa5786a2c47582021dc1189208ec",
      "commitAuthor": "rnveach",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 212.98,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,19 @@\n     private void visitMethod(final DetailAST method) {\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n-        // exit on fast lane if there is nothing to check here\n \n-        if (method.findFirstToken(TokenTypes.PARAMETERS)\n-                .findFirstToken(TokenTypes.PARAMETER_DEF) !\u003d null\n-                // ignore abstract and native methods\n-                \u0026\u0026 modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n+        // ignore abstract and native methods\n+        if (modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n                 \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n-            // we can now be sure that there is at least one parameter\n             final DetailAST parameters \u003d\n                 method.findFirstToken(TokenTypes.PARAMETERS);\n             DetailAST child \u003d parameters.getFirstChild();\n             while (child !\u003d null) {\n                 // children are PARAMETER_DEF and COMMA\n                 if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                     checkParam(child);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n\n        // ignore abstract and native methods\n        if (modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n                \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n            final DetailAST parameters \u003d\n                method.findFirstToken(TokenTypes.PARAMETERS);\n            DetailAST child \u003d parameters.getFirstChild();\n            while (child !\u003d null) {\n                // children are PARAMETER_DEF and COMMA\n                if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                    checkParam(child);\n                }\n                child \u003d child.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for simple cases",
      "commitDate": "09/11/17 6:45 AM",
      "commitName": "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
      "commitAuthor": "rnveach",
      "commitDateOld": "30/10/17 6:16 PM",
      "commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 9.56,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     private void visitMethod(final DetailAST method) {\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n         // exit on fast lane if there is nothing to check here\n \n-        if (method.branchContains(TokenTypes.PARAMETER_DEF)\n+        if (method.findFirstToken(TokenTypes.PARAMETERS)\n+                .findFirstToken(TokenTypes.PARAMETER_DEF) !\u003d null\n                 // ignore abstract and native methods\n                 \u0026\u0026 modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n                 \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n             // we can now be sure that there is at least one parameter\n             final DetailAST parameters \u003d\n                 method.findFirstToken(TokenTypes.PARAMETERS);\n             DetailAST child \u003d parameters.getFirstChild();\n             while (child !\u003d null) {\n                 // children are PARAMETER_DEF and COMMA\n                 if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                     checkParam(child);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        // exit on fast lane if there is nothing to check here\n\n        if (method.findFirstToken(TokenTypes.PARAMETERS)\n                .findFirstToken(TokenTypes.PARAMETER_DEF) !\u003d null\n                // ignore abstract and native methods\n                \u0026\u0026 modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n                \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n            // we can now be sure that there is at least one parameter\n            final DetailAST parameters \u003d\n                method.findFirstToken(TokenTypes.PARAMETERS);\n            DetailAST child \u003d parameters.getFirstChild();\n            while (child !\u003d null) {\n                // children are PARAMETER_DEF and COMMA\n                if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                    checkParam(child);\n                }\n                child \u003d child.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": "25/10/17 7:54 PM",
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": "25/02/17 6:55 AM",
      "commitNameOld": "55aa8cedc60d4faa776d7a36f8ae2d0bed0ada45",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 242.5,
      "commitsBetweenForRepo": 915,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void visitMethod(final DetailAST method) {\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n         // exit on fast lane if there is nothing to check here\n \n         if (method.branchContains(TokenTypes.PARAMETER_DEF)\n                 // ignore abstract and native methods\n-                \u0026\u0026 !modifiers.branchContains(TokenTypes.ABSTRACT)\n-                \u0026\u0026 !modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n+                \u0026\u0026 modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n+                \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n             // we can now be sure that there is at least one parameter\n             final DetailAST parameters \u003d\n                 method.findFirstToken(TokenTypes.PARAMETERS);\n             DetailAST child \u003d parameters.getFirstChild();\n             while (child !\u003d null) {\n                 // children are PARAMETER_DEF and COMMA\n                 if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                     checkParam(child);\n                 }\n                 child \u003d child.getNextSibling();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        // exit on fast lane if there is nothing to check here\n\n        if (method.branchContains(TokenTypes.PARAMETER_DEF)\n                // ignore abstract and native methods\n                \u0026\u0026 modifiers.findFirstToken(TokenTypes.ABSTRACT) \u003d\u003d null\n                \u0026\u0026 modifiers.findFirstToken(TokenTypes.LITERAL_NATIVE) \u003d\u003d null) {\n            // we can now be sure that there is at least one parameter\n            final DetailAST parameters \u003d\n                method.findFirstToken(TokenTypes.PARAMETERS);\n            DetailAST child \u003d parameters.getFirstChild();\n            while (child !\u003d null) {\n                // children are PARAMETER_DEF and COMMA\n                if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                    checkParam(child);\n                }\n                child \u003d child.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/03/16 6:39 AM",
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 71.0,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,22 @@\n     private void visitMethod(final DetailAST method) {\n-        // exit on fast lane if there is nothing to check here\n-        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n-            return;\n-        }\n-\n-        // ignore abstract and native methods\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiers.branchContains(TokenTypes.ABSTRACT)\n-                || modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n-            return;\n-        }\n+        // exit on fast lane if there is nothing to check here\n \n-        // we can now be sure that there is at least one parameter\n-        final DetailAST parameters \u003d\n-            method.findFirstToken(TokenTypes.PARAMETERS);\n-        DetailAST child \u003d parameters.getFirstChild();\n-        while (child !\u003d null) {\n-            // children are PARAMETER_DEF and COMMA\n-            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n-                checkParam(child);\n+        if (method.branchContains(TokenTypes.PARAMETER_DEF)\n+                // ignore abstract and native methods\n+                \u0026\u0026 !modifiers.branchContains(TokenTypes.ABSTRACT)\n+                \u0026\u0026 !modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n+            // we can now be sure that there is at least one parameter\n+            final DetailAST parameters \u003d\n+                method.findFirstToken(TokenTypes.PARAMETERS);\n+            DetailAST child \u003d parameters.getFirstChild();\n+            while (child !\u003d null) {\n+                // children are PARAMETER_DEF and COMMA\n+                if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n+                    checkParam(child);\n+                }\n+                child \u003d child.getNextSibling();\n             }\n-            child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        // exit on fast lane if there is nothing to check here\n\n        if (method.branchContains(TokenTypes.PARAMETER_DEF)\n                // ignore abstract and native methods\n                \u0026\u0026 !modifiers.branchContains(TokenTypes.ABSTRACT)\n                \u0026\u0026 !modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n            // we can now be sure that there is at least one parameter\n            final DetailAST parameters \u003d\n                method.findFirstToken(TokenTypes.PARAMETERS);\n            DetailAST child \u003d parameters.getFirstChild();\n            while (child !\u003d null) {\n                // children are PARAMETER_DEF and COMMA\n                if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                    checkParam(child);\n                }\n                child \u003d child.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "48c8e6003017dc81417bb1a805a2db82d1b461ce": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2981: added skip native methods for FinalParametersCheck",
      "commitDate": "01/03/16 6:26 AM",
      "commitName": "48c8e6003017dc81417bb1a805a2db82d1b461ce",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/02/16 6:01 AM",
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 25.02,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n     private void visitMethod(final DetailAST method) {\n         // exit on fast lane if there is nothing to check here\n         if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n-        // ignore abstract method\n+        // ignore abstract and native methods\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n+        if (modifiers.branchContains(TokenTypes.ABSTRACT)\n+                || modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n         final DetailAST parameters \u003d\n             method.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d parameters.getFirstChild();\n         while (child !\u003d null) {\n             // children are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        // exit on fast lane if there is nothing to check here\n        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract and native methods\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)\n                || modifiers.branchContains(TokenTypes.LITERAL_NATIVE)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            method.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // children are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "c3674faad8a38656e910750fb22a7eef714fb8a7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Fix some typos in checks package\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "28/08/15 10:59 PM",
      "commitName": "c3674faad8a38656e910750fb22a7eef714fb8a7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.74,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private void visitMethod(final DetailAST method) {\n         // exit on fast lane if there is nothing to check here\n         if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // ignore abstract method\n         final DetailAST modifiers \u003d\n             method.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n         final DetailAST parameters \u003d\n             method.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d parameters.getFirstChild();\n         while (child !\u003d null) {\n-            // childs are PARAMETER_DEF and COMMA\n+            // children are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST method) {\n        // exit on fast lane if there is nothing to check here\n        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            method.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // children are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/12/14 8:09 AM",
          "commitNameOld": "49ae6cf81b5acd6ad427806ab13629e45f6a5ece",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 27.94,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    private void visitMethod(final DetailAST aMethod)\n+    private void visitMethod(final DetailAST method)\n     {\n         // exit on fast lane if there is nothing to check here\n-        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n+        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // ignore abstract method\n         final DetailAST modifiers \u003d\n-            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n+            method.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n         final DetailAST parameters \u003d\n-            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+            method.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitMethod(final DetailAST method)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            method.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
          "extendedDetails": {
            "oldValue": "[aMethod-DetailAST(modifiers-final)]",
            "newValue": "[method-DetailAST(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/12/14 8:09 AM",
          "commitNameOld": "49ae6cf81b5acd6ad427806ab13629e45f6a5ece",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 27.94,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    private void visitMethod(final DetailAST aMethod)\n+    private void visitMethod(final DetailAST method)\n     {\n         // exit on fast lane if there is nothing to check here\n-        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n+        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // ignore abstract method\n         final DetailAST modifiers \u003d\n-            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n+            method.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n         final DetailAST parameters \u003d\n-            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+            method.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitMethod(final DetailAST method)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!method.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            method.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            method.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void visitMethod(final DetailAST aMethod)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private void visitMethod(final DetailAST aMethod)\n     {\n         // exit on fast lane if there is nothing to check here\n         if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // ignore abstract method\n         final DetailAST modifiers \u003d\n             aMethod.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n         final DetailAST parameters \u003d\n             aMethod.findFirstToken(TokenTypes.PARAMETERS);\n-        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n+        DetailAST child \u003d parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n-            child \u003d (DetailAST) child.getNextSibling();\n+            child \u003d child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST aMethod)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d child.getNextSibling();\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/08/04 4:17 AM",
      "commitNameOld": "2af259b791c8655a2b9862099763f860d3d7ae42",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 22.09,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n     private void visitMethod(final DetailAST aMethod)\n     {\n         // exit on fast lane if there is nothing to check here\n         if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // ignore abstract method\n         final DetailAST modifiers \u003d\n             aMethod.findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n-        DetailAST parameters \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        final DetailAST parameters \u003d\n+            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d (DetailAST) child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST aMethod)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        final DetailAST parameters \u003d\n            aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d (DetailAST) child.getNextSibling();\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "2af259b791c8655a2b9862099763f860d3d7ae42": {
      "type": "Ybodychange",
      "commitMessage": "FinalParametersCheck and FinalLocalVariablesCheck ignore abstract methods (bug 1002849)\n",
      "commitDate": "04/08/04 4:17 AM",
      "commitName": "2af259b791c8655a2b9862099763f860d3d7ae42",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 202.59,
      "commitsBetweenForRepo": 133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,25 @@\n     private void visitMethod(final DetailAST aMethod)\n     {\n         // exit on fast lane if there is nothing to check here\n         if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n+        // ignore abstract method\n+        final DetailAST modifiers \u003d\n+            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n+        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n+            return;\n+        }\n+\n         // we can now be sure that there is at least one parameter\n         DetailAST parameters \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                 checkParam(child);\n             }\n             child \u003d (DetailAST) child.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST aMethod)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // ignore abstract method\n        final DetailAST modifiers \u003d\n            aMethod.findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiers.branchContains(TokenTypes.ABSTRACT)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        DetailAST parameters \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d (DetailAST) child.getNextSibling();\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8": {
      "type": "Yintroduced",
      "commitMessage": "Several improvements of FinalParameter check.\nFixed bug #864900 - Wrong column for method parameters in FinalParametersCheck\nAdded I18N support.\nImplemented FRE #848820 - Final Catch Parameter.\n",
      "commitDate": "29/12/03 8:16 PM",
      "commitName": "0b4c120056f3b1f0a1780fe19932f4015223d0a8",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,18 @@\n+    private void visitMethod(final DetailAST aMethod)\n+    {\n+        // exit on fast lane if there is nothing to check here\n+        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n+            return;\n+        }\n+\n+        // we can now be sure that there is at least one parameter\n+        DetailAST parameters \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n+        while (child !\u003d null) {\n+            // childs are PARAMETER_DEF and COMMA\n+            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n+                checkParam(child);\n+            }\n+            child \u003d (DetailAST) child.getNextSibling();\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitMethod(final DetailAST aMethod)\n    {\n        // exit on fast lane if there is nothing to check here\n        if (!aMethod.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n        DetailAST parameters \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF) {\n                checkParam(child);\n            }\n            child \u003d (DetailAST) child.getNextSibling();\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java"
    }
  }
}