{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "visitTypeDef",
  "functionId": "visitTypeDef___typeDef-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 467,
  "functionEndLine": 479,
  "numCommitsSeen": 76,
  "timeTaken": 627,
  "changeHistory": [
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b"
  ],
  "changeHistoryShort": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": {
      "type": "Yintroduced",
      "commitMessage": "Issue #6118: IllegalType should check extends \u0026 implements\n",
      "commitDate": "23/10/18 1:37 PM",
      "commitName": "22fab018ad719cf35a58ab99d0daddfb8d29da7b",
      "commitAuthor": "Pavel Bludov",
      "diff": "@@ -0,0 +1,13 @@\n+    private void visitTypeDef(DetailAST typeDef) {\n+        if (isVerifiable(typeDef)) {\n+            checkTypeParameters(typeDef);\n+            final DetailAST extendsClause \u003d typeDef.findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n+            if (extendsClause !\u003d null) {\n+                checkBaseTypes(extendsClause);\n+            }\n+            final DetailAST implementsClause \u003d typeDef.findFirstToken(TokenTypes.IMPLEMENTS_CLAUSE);\n+            if (implementsClause !\u003d null) {\n+                checkBaseTypes(implementsClause);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitTypeDef(DetailAST typeDef) {\n        if (isVerifiable(typeDef)) {\n            checkTypeParameters(typeDef);\n            final DetailAST extendsClause \u003d typeDef.findFirstToken(TokenTypes.EXTENDS_CLAUSE);\n            if (extendsClause !\u003d null) {\n                checkBaseTypes(extendsClause);\n            }\n            final DetailAST implementsClause \u003d typeDef.findFirstToken(TokenTypes.IMPLEMENTS_CLAUSE);\n            if (implementsClause !\u003d null) {\n                checkBaseTypes(implementsClause);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}