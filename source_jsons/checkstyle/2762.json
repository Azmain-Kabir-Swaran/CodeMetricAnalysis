{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractExpressionHandler.java",
  "functionName": "checkExpressionSubtree",
  "functionId": "checkExpressionSubtree___tree-DetailAST__indentLevel-IndentLevel__firstLineMatches-boolean__allowNesting-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
  "functionStartLine": 387,
  "functionEndLine": 402,
  "numCommitsSeen": 109,
  "timeTaken": 2486,
  "changeHistory": [
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "4409b0f2432b479bd43ca274f91d1aabd6060575"
  ],
  "changeHistoryShort": {
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ymultichange(Yparameterchange,Ybodychange)",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yfilerename",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "4409b0f2432b479bd43ca274f91d1aabd6060575": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": "11/08/15 10:19 PM",
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n     protected final void checkExpressionSubtree(\n         DetailAST tree,\n-        IndentLevel level,\n+        IndentLevel indentLevel,\n         boolean firstLineMatches,\n         boolean allowNesting\n     ) {\n         final LineSet subtreeLines \u003d new LineSet();\n         final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n         if (firstLineMatches \u0026\u0026 !allowNesting) {\n             subtreeLines.addLineAndCol(firstLine,\n                 getLineStart(indentCheck.getLine(firstLine - 1)));\n         }\n         findSubtreeLines(subtreeLines, tree, allowNesting);\n \n-        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n+        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST tree,\n        IndentLevel indentLevel,\n        boolean firstLineMatches,\n        boolean allowNesting\n    ) {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n        if (firstLineMatches \u0026\u0026 !allowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(indentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, tree, allowNesting);\n\n        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {
            "oldValue": "[tree-DetailAST, level-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]",
            "newValue": "[tree-DetailAST, indentLevel-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n     protected final void checkExpressionSubtree(\n         DetailAST tree,\n-        IndentLevel level,\n+        IndentLevel indentLevel,\n         boolean firstLineMatches,\n         boolean allowNesting\n     ) {\n         final LineSet subtreeLines \u003d new LineSet();\n         final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n         if (firstLineMatches \u0026\u0026 !allowNesting) {\n             subtreeLines.addLineAndCol(firstLine,\n                 getLineStart(indentCheck.getLine(firstLine - 1)));\n         }\n         findSubtreeLines(subtreeLines, tree, allowNesting);\n \n-        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n+        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST tree,\n        IndentLevel indentLevel,\n        boolean firstLineMatches,\n        boolean allowNesting\n    ) {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n        if (firstLineMatches \u0026\u0026 !allowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(indentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, tree, allowNesting);\n\n        checkLinesIndent(subtreeLines, indentLevel, firstLineMatches, firstLine);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yfilerename",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/06/15 11:20 PM",
      "commitNameOld": "0382b7907b54e95408344863915a847dabc37f12",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST tree,\n        IndentLevel level,\n        boolean firstLineMatches,\n        boolean allowNesting\n    ) {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n        if (firstLineMatches \u0026\u0026 !allowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(indentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, tree, allowNesting);\n\n        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java"
      }
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n     protected final void checkExpressionSubtree(\n-        DetailAST aTree,\n-        IndentLevel aLevel,\n-        boolean aFirstLineMatches,\n-        boolean aAllowNesting\n+        DetailAST tree,\n+        IndentLevel level,\n+        boolean firstLineMatches,\n+        boolean allowNesting\n     )\n     {\n         final LineSet subtreeLines \u003d new LineSet();\n-        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n-        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n+        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n+        if (firstLineMatches \u0026\u0026 !allowNesting) {\n             subtreeLines.addLineAndCol(firstLine,\n-                getLineStart(mIndentCheck.getLine(firstLine - 1)));\n+                getLineStart(indentCheck.getLine(firstLine - 1)));\n         }\n-        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n+        findSubtreeLines(subtreeLines, tree, allowNesting);\n \n-        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n+        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST tree,\n        IndentLevel level,\n        boolean firstLineMatches,\n        boolean allowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n        if (firstLineMatches \u0026\u0026 !allowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(indentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, tree, allowNesting);\n\n        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
          "extendedDetails": {
            "oldValue": "[aTree-DetailAST, aLevel-IndentLevel, aFirstLineMatches-boolean, aAllowNesting-boolean]",
            "newValue": "[tree-DetailAST, level-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n     protected final void checkExpressionSubtree(\n-        DetailAST aTree,\n-        IndentLevel aLevel,\n-        boolean aFirstLineMatches,\n-        boolean aAllowNesting\n+        DetailAST tree,\n+        IndentLevel level,\n+        boolean firstLineMatches,\n+        boolean allowNesting\n     )\n     {\n         final LineSet subtreeLines \u003d new LineSet();\n-        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n-        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n+        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n+        if (firstLineMatches \u0026\u0026 !allowNesting) {\n             subtreeLines.addLineAndCol(firstLine,\n-                getLineStart(mIndentCheck.getLine(firstLine - 1)));\n+                getLineStart(indentCheck.getLine(firstLine - 1)));\n         }\n-        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n+        findSubtreeLines(subtreeLines, tree, allowNesting);\n \n-        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n+        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST tree,\n        IndentLevel level,\n        boolean firstLineMatches,\n        boolean allowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, tree);\n        if (firstLineMatches \u0026\u0026 !allowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(indentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, tree, allowNesting);\n\n        checkLinesIndent(subtreeLines, level, firstLineMatches, firstLine);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "cba6fc8b0a653a795107566f895d2b8f73e2c6c9": {
      "type": "Ybodychange",
      "commitMessage": "FileContents.getLines performance fix\n",
      "commitDate": "02/11/14 11:48 AM",
      "commitName": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
      "commitAuthor": "sopov.ivan",
      "commitDateOld": "13/10/14 4:21 PM",
      "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 19.85,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     protected final void checkExpressionSubtree(\n         DetailAST aTree,\n         IndentLevel aLevel,\n         boolean aFirstLineMatches,\n         boolean aAllowNesting\n     )\n     {\n         final LineSet subtreeLines \u003d new LineSet();\n         final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n         if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n             subtreeLines.addLineAndCol(firstLine,\n-                getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n+                getLineStart(mIndentCheck.getLine(firstLine - 1)));\n         }\n         findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n \n         checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST aTree,\n        IndentLevel aLevel,\n        boolean aFirstLineMatches,\n        boolean aAllowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(mIndentCheck.getLine(firstLine - 1)));\n        }\n        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n\n        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST aTree,\n        IndentLevel aLevel,\n        boolean aFirstLineMatches,\n        boolean aAllowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n        }\n        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n\n        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java"
      }
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": "20/12/07 3:36 AM",
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "20/12/07 3:08 AM",
      "commitNameOld": "ef58eba6d1b95443ff240ed05634c7e373b3445a",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     protected final void checkExpressionSubtree(\n         DetailAST aTree,\n         IndentLevel aLevel,\n         boolean aFirstLineMatches,\n         boolean aAllowNesting\n     )\n     {\n         final LineSet subtreeLines \u003d new LineSet();\n         final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n         if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n-            subtreeLines.addLineAndCol(new Integer(firstLine),\n+            subtreeLines.addLineAndCol(firstLine,\n                 getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n         }\n         findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n \n         checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST aTree,\n        IndentLevel aLevel,\n        boolean aFirstLineMatches,\n        boolean aAllowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n            subtreeLines.addLineAndCol(firstLine,\n                getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n        }\n        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n\n        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     protected final void checkExpressionSubtree(\n         DetailAST aTree,\n         IndentLevel aLevel,\n         boolean aFirstLineMatches,\n         boolean aAllowNesting\n     )\n     {\n-        LineSet subtreeLines \u003d new LineSet();\n-        int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n+        final LineSet subtreeLines \u003d new LineSet();\n+        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n         if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n             subtreeLines.addLineAndCol(new Integer(firstLine),\n                 getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n         }\n         findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n \n         checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST aTree,\n        IndentLevel aLevel,\n        boolean aFirstLineMatches,\n        boolean aAllowNesting\n    )\n    {\n        final LineSet subtreeLines \u003d new LineSet();\n        final int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n            subtreeLines.addLineAndCol(new Integer(firstLine),\n                getLineStart(mIndentCheck.getLines()[firstLine - 1]));\n        }\n        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n\n        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {}
    },
    "4409b0f2432b479bd43ca274f91d1aabd6060575": {
      "type": "Yintroduced",
      "commitMessage": "Indentation.\nNow the check allows both\nnew int[] {1,\n           2}\nand\nnew int[] {1,\n    2}\nIndent styles.\n",
      "commitDate": "02/06/03 8:37 PM",
      "commitName": "4409b0f2432b479bd43ca274f91d1aabd6060575",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,18 @@\n+    protected final void checkExpressionSubtree(\n+        DetailAST aTree,\n+        IndentLevel aLevel,\n+        boolean aFirstLineMatches,\n+        boolean aAllowNesting\n+    )\n+    {\n+        LineSet subtreeLines \u003d new LineSet();\n+        int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n+        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n+            subtreeLines.addLineAndCol(new Integer(firstLine),\n+                getLineStart(\n+                    mIndentCheck.getLines()[firstLine - 1]));\n+        }\n+        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n+\n+        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkExpressionSubtree(\n        DetailAST aTree,\n        IndentLevel aLevel,\n        boolean aFirstLineMatches,\n        boolean aAllowNesting\n    )\n    {\n        LineSet subtreeLines \u003d new LineSet();\n        int firstLine \u003d getFirstLine(Integer.MAX_VALUE, aTree);\n        if (aFirstLineMatches \u0026\u0026 !aAllowNesting) {\n            subtreeLines.addLineAndCol(new Integer(firstLine),\n                getLineStart(\n                    mIndentCheck.getLines()[firstLine - 1]));\n        }\n        findSubtreeLines(subtreeLines, aTree, aAllowNesting);\n\n        checkLinesIndent(subtreeLines, aLevel, aFirstLineMatches, firstLine);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java"
    }
  }
}