{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TryHandler.java",
  "functionName": "checkTryResources",
  "functionId": "checkTryResources___resourcesSpecAst-DetailAST(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler.java",
  "functionStartLine": 130,
  "functionEndLine": 163,
  "numCommitsSeen": 22,
  "timeTaken": 1068,
  "changeHistory": [
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
    "133f9cfdb3ccba1a01438975eb144333c11c3710"
  ],
  "changeHistoryShort": {
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": "Ybodychange",
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": "Ymodifierchange",
    "133f9cfdb3ccba1a01438975eb144333c11c3710": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": {
      "type": "Ybodychange",
      "commitMessage": "minor: fix typos\n",
      "commitDate": "23/12/17 9:13 PM",
      "commitName": "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "22/08/17 5:00 AM",
      "commitNameOld": "8174ea2a778fbd3e75c790f89f83f979ad8e3c9a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 123.72,
      "commitsBetweenForRepo": 332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     private void checkTryResources(final DetailAST resourcesSpecAst) {\n         final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n-        final int indetation \u003d getIndent().getFirstIndentLevel()\n+        final int indentation \u003d getIndent().getFirstIndentLevel()\n             + getIndentCheck().getLineWrappingIndentation();\n-        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indetation);\n+        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indentation);\n \n         final String subType \u003d \"resource\";\n \n         DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n         while (resourceAst !\u003d null) {\n             if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n                 final DetailAST nextSibling;\n                 if (resourceAst.getNextSibling() \u003d\u003d null) {\n                     nextSibling \u003d getTryResRparen();\n                 }\n                 else {\n                     nextSibling \u003d resourceAst.getNextSibling();\n                 }\n                 if (isOnStartOfLine(resourceAst)) {\n                     checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n                     checkWrappingIndentation(\n                         resourceAst,\n                         nextSibling,\n                         getIndentCheck().getLineWrappingIndentation(),\n                         expectedResourceIndent.getFirstIndentLevel(),\n                         true);\n                 }\n                 else {\n                     checkWrappingIndentation(resourceAst, nextSibling);\n                 }\n             }\n             resourceAst \u003d resourceAst.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkTryResources(final DetailAST resourcesSpecAst) {\n        final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n        final int indentation \u003d getIndent().getFirstIndentLevel()\n            + getIndentCheck().getLineWrappingIndentation();\n        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indentation);\n\n        final String subType \u003d \"resource\";\n\n        DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n        while (resourceAst !\u003d null) {\n            if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n                final DetailAST nextSibling;\n                if (resourceAst.getNextSibling() \u003d\u003d null) {\n                    nextSibling \u003d getTryResRparen();\n                }\n                else {\n                    nextSibling \u003d resourceAst.getNextSibling();\n                }\n                if (isOnStartOfLine(resourceAst)) {\n                    checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n                    checkWrappingIndentation(\n                        resourceAst,\n                        nextSibling,\n                        getIndentCheck().getLineWrappingIndentation(),\n                        expectedResourceIndent.getFirstIndentLevel(),\n                        true);\n                }\n                else {\n                    checkWrappingIndentation(resourceAst, nextSibling);\n                }\n            }\n            resourceAst \u003d resourceAst.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler.java",
      "extendedDetails": {}
    },
    "d243badf77c9c70a4e4ecde28a34ca8802de41b6": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4801: fix for violations from WeakerAccess inspection\n",
      "commitDate": "10/08/17 12:56 AM",
      "commitName": "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "30/07/17 10:40 PM",
      "commitNameOld": "133f9cfdb3ccba1a01438975eb144333c11c3710",
      "commitAuthorOld": "Vikramaditya Kukreja",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n-    protected void checkTryResources(final DetailAST resourcesSpecAst) {\n+    private void checkTryResources(final DetailAST resourcesSpecAst) {\n         final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n         final int indetation \u003d getIndent().getFirstIndentLevel()\n             + getIndentCheck().getLineWrappingIndentation();\n         final IndentLevel expectedResourceIndent \u003d new IndentLevel(indetation);\n \n         final String subType \u003d \"resource\";\n \n         DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n         while (resourceAst !\u003d null) {\n             if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n                 final DetailAST nextSibling;\n                 if (resourceAst.getNextSibling() \u003d\u003d null) {\n                     nextSibling \u003d getTryResRparen();\n                 }\n                 else {\n                     nextSibling \u003d resourceAst.getNextSibling();\n                 }\n                 if (isOnStartOfLine(resourceAst)) {\n                     checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n                     checkWrappingIndentation(\n                         resourceAst,\n                         nextSibling,\n                         getIndentCheck().getLineWrappingIndentation(),\n                         expectedResourceIndent.getFirstIndentLevel(),\n                         true);\n                 }\n                 else {\n                     checkWrappingIndentation(resourceAst, nextSibling);\n                 }\n             }\n             resourceAst \u003d resourceAst.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkTryResources(final DetailAST resourcesSpecAst) {\n        final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n        final int indetation \u003d getIndent().getFirstIndentLevel()\n            + getIndentCheck().getLineWrappingIndentation();\n        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indetation);\n\n        final String subType \u003d \"resource\";\n\n        DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n        while (resourceAst !\u003d null) {\n            if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n                final DetailAST nextSibling;\n                if (resourceAst.getNextSibling() \u003d\u003d null) {\n                    nextSibling \u003d getTryResRparen();\n                }\n                else {\n                    nextSibling \u003d resourceAst.getNextSibling();\n                }\n                if (isOnStartOfLine(resourceAst)) {\n                    checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n                    checkWrappingIndentation(\n                        resourceAst,\n                        nextSibling,\n                        getIndentCheck().getLineWrappingIndentation(),\n                        expectedResourceIndent.getFirstIndentLevel(),\n                        true);\n                }\n                else {\n                    checkWrappingIndentation(resourceAst, nextSibling);\n                }\n            }\n            resourceAst \u003d resourceAst.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "133f9cfdb3ccba1a01438975eb144333c11c3710": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3131: Add support for try resources\n",
      "commitDate": "30/07/17 10:40 PM",
      "commitName": "133f9cfdb3ccba1a01438975eb144333c11c3710",
      "commitAuthor": "Vikramaditya Kukreja",
      "diff": "@@ -0,0 +1,34 @@\n+    protected void checkTryResources(final DetailAST resourcesSpecAst) {\n+        final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n+        final int indetation \u003d getIndent().getFirstIndentLevel()\n+            + getIndentCheck().getLineWrappingIndentation();\n+        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indetation);\n+\n+        final String subType \u003d \"resource\";\n+\n+        DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n+        while (resourceAst !\u003d null) {\n+            if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n+                final DetailAST nextSibling;\n+                if (resourceAst.getNextSibling() \u003d\u003d null) {\n+                    nextSibling \u003d getTryResRparen();\n+                }\n+                else {\n+                    nextSibling \u003d resourceAst.getNextSibling();\n+                }\n+                if (isOnStartOfLine(resourceAst)) {\n+                    checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n+                    checkWrappingIndentation(\n+                        resourceAst,\n+                        nextSibling,\n+                        getIndentCheck().getLineWrappingIndentation(),\n+                        expectedResourceIndent.getFirstIndentLevel(),\n+                        true);\n+                }\n+                else {\n+                    checkWrappingIndentation(resourceAst, nextSibling);\n+                }\n+            }\n+            resourceAst \u003d resourceAst.getNextSibling();\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void checkTryResources(final DetailAST resourcesSpecAst) {\n        final DetailAST resourcesAst \u003d resourcesSpecAst.findFirstToken(TokenTypes.RESOURCES);\n        final int indetation \u003d getIndent().getFirstIndentLevel()\n            + getIndentCheck().getLineWrappingIndentation();\n        final IndentLevel expectedResourceIndent \u003d new IndentLevel(indetation);\n\n        final String subType \u003d \"resource\";\n\n        DetailAST resourceAst \u003d resourcesAst.getFirstChild();\n        while (resourceAst !\u003d null) {\n            if (resourceAst.getType() \u003d\u003d TokenTypes.RESOURCE) {\n                final DetailAST nextSibling;\n                if (resourceAst.getNextSibling() \u003d\u003d null) {\n                    nextSibling \u003d getTryResRparen();\n                }\n                else {\n                    nextSibling \u003d resourceAst.getNextSibling();\n                }\n                if (isOnStartOfLine(resourceAst)) {\n                    checkChildIndentation(resourceAst, subType, expectedResourceIndent);\n                    checkWrappingIndentation(\n                        resourceAst,\n                        nextSibling,\n                        getIndentCheck().getLineWrappingIndentation(),\n                        expectedResourceIndent.getFirstIndentLevel(),\n                        true);\n                }\n                else {\n                    checkWrappingIndentation(resourceAst, nextSibling);\n                }\n            }\n            resourceAst \u003d resourceAst.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/TryHandler.java"
    }
  }
}