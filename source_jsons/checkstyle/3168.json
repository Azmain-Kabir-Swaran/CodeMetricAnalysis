{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocParagraphCheck.java",
  "functionName": "getNearestNode",
  "functionId": "getNearestNode___node-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
  "functionStartLine": 212,
  "functionEndLine": 219,
  "numCommitsSeen": 43,
  "timeTaken": 1497,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "7088d5c3c244721db87ecee91949acc895d5ff62",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "7088d5c3c244721db87ecee91949acc895d5ff62": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": "Ymultichange(Yrename,Ybodychange)",
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private static DetailNode getNearestNode(DetailNode node) {\n-        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n+        DetailNode tag \u003d JavadocUtil.getNextSibling(node);\n         while (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                 || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n-            tag \u003d JavadocUtils.getNextSibling(tag);\n+            tag \u003d JavadocUtil.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailNode getNearestNode(DetailNode node) {\n        DetailNode tag \u003d JavadocUtil.getNextSibling(node);\n        while (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n            tag \u003d JavadocUtil.getNextSibling(tag);\n        }\n        return tag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "7088d5c3c244721db87ecee91949acc895d5ff62": {
      "type": "Ybodychange",
      "commitMessage": "Refactor and add test cases to JavadocParagraph check. #1308\n",
      "commitDate": "24/07/15 5:03 PM",
      "commitName": "7088d5c3c244721db87ecee91949acc895d5ff62",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/07/15 7:20 AM",
      "commitNameOld": "bb3f80410619472799c401651c43afb761f7906e",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 5.4,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private static DetailNode getNearestNode(DetailNode node) {\n         DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n-        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n-                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE)) {\n+        while (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n+                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailNode getNearestNode(DetailNode node) {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n        while (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-    private DetailNode getNearestNode(DetailNode node) {\n+    private static DetailNode getNearestNode(DetailNode node) {\n         DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n         while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                 || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE)) {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailNode getNearestNode(DetailNode node) {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE)) {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "18/11/14 5:27 PM",
          "commitNameOld": "4ddb7df07365f216fb7c1e39c4fa49d56f8e0719",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 61.54,
          "commitsBetweenForRepo": 200,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private DetailNode getNearestNode(DetailNode aNode)\n+    private DetailNode getNearestNode(DetailNode node)\n     {\n-        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n+        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n         while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                 || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n         {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailNode getNearestNode(DetailNode node)\n    {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n        {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {
            "oldValue": "[aNode-DetailNode]",
            "newValue": "[node-DetailNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "18/11/14 5:27 PM",
          "commitNameOld": "4ddb7df07365f216fb7c1e39c4fa49d56f8e0719",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 61.54,
          "commitsBetweenForRepo": 200,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private DetailNode getNearestNode(DetailNode aNode)\n+    private DetailNode getNearestNode(DetailNode node)\n     {\n-        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n+        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n         while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                 || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n         {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailNode getNearestNode(DetailNode node)\n    {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(node);\n        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n        {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Fix false positives in JavadocParagraphCheck #335\n",
      "commitDate": "23/10/14 8:01 AM",
      "commitName": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
      "commitAuthor": "maxvetrenko",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Fix false positives in JavadocParagraphCheck #335\n",
          "commitDate": "23/10/14 8:01 AM",
          "commitName": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
          "commitAuthor": "maxvetrenko",
          "commitDateOld": "22/10/14 11:25 AM",
          "commitNameOld": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 0.86,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,10 @@\n-    private DetailNode getNearestToken(DetailNode aNode)\n+    private DetailNode getNearestNode(DetailNode aNode)\n     {\n         DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n-        while (tag !\u003d null) {\n-            if (tag.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(tag).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n-            {\n-                break;\n-            }\n+        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n+                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n+        {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailNode getNearestNode(DetailNode aNode)\n    {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n        {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {
            "oldValue": "getNearestToken",
            "newValue": "getNearestNode"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix false positives in JavadocParagraphCheck #335\n",
          "commitDate": "23/10/14 8:01 AM",
          "commitName": "54ed230519fc78c7a5ca48d9dd05cce4f4ff4b1b",
          "commitAuthor": "maxvetrenko",
          "commitDateOld": "22/10/14 11:25 AM",
          "commitNameOld": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 0.86,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,10 @@\n-    private DetailNode getNearestToken(DetailNode aNode)\n+    private DetailNode getNearestNode(DetailNode aNode)\n     {\n         DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n-        while (tag !\u003d null) {\n-            if (tag.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                \u0026\u0026 JavadocUtils.getFirstChild(tag).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n-            {\n-                break;\n-            }\n+        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n+                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n+        {\n             tag \u003d JavadocUtils.getNextSibling(tag);\n         }\n         return tag;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailNode getNearestNode(DetailNode aNode)\n    {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n        while (tag !\u003d null \u0026\u0026 (tag.getType() \u003d\u003d JavadocTokenTypes.LEADING_ASTERISK\n                || tag.getType() \u003d\u003d JavadocTokenTypes.NEWLINE))\n        {\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1": {
      "type": "Yintroduced",
      "commitMessage": "JavaDocParagraph #315\n",
      "commitDate": "20/10/14 11:57 PM",
      "commitName": "d9c4e779fbb7f9ab0c5c1d40ecffb001a817dbe1",
      "commitAuthor": "maxvetrenko",
      "diff": "@@ -0,0 +1,13 @@\n+    private DetailNode getNearestToken(DetailNode aNode)\n+    {\n+        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n+        while (tag !\u003d null) {\n+            if (tag.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n+                \u0026\u0026 JavadocUtils.getFirstChild(tag).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n+            {\n+                break;\n+            }\n+            tag \u003d JavadocUtils.getNextSibling(tag);\n+        }\n+        return tag;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private DetailNode getNearestToken(DetailNode aNode)\n    {\n        DetailNode tag \u003d JavadocUtils.getNextSibling(aNode);\n        while (tag !\u003d null) {\n            if (tag.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                \u0026\u0026 JavadocUtils.getFirstChild(tag).getType() \u003d\u003d JavadocTokenTypes.P_TAG_OPEN)\n            {\n                break;\n            }\n            tag \u003d JavadocUtils.getNextSibling(tag);\n        }\n        return tag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java"
    }
  }
}