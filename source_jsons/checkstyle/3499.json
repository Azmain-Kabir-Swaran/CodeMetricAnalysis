{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Checker.java",
  "functionName": "setupChild",
  "functionId": "setupChild___childConf-Configuration",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionStartLine": 466,
  "functionEndLine": 505,
  "numCommitsSeen": 252,
  "timeTaken": 3187,
  "changeHistory": [
    "fbaabe83cf78bcaf563443a3fb866931239eb15b",
    "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd",
    "864cf936cfa75116153e5f195a833edaf64a90cf",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "f55fcd5462624e611212b0b6c41e842d1adfa9f2",
    "21f0b07bd031f022d14106150af66ceddb4c06b8",
    "a4222b86ea273554e5f42c834dd81a029a069ac1",
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a",
    "10330437ddd4be125cb4109702d0d0b96ffe3303",
    "2a71cac7e02c012add5e75f35aaf6aca7c561401",
    "88e89a138aa39f50f7642106cde6568f6e07783f",
    "fedf99f9a85f1a9db30f14ae072769d4ab6ac010",
    "08d6efe49d2960d9bd61bfb9cca65910f0c19b58"
  ],
  "changeHistoryShort": {
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": "Ybodychange",
    "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd": "Ybodychange",
    "864cf936cfa75116153e5f195a833edaf64a90cf": "Ybodychange",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "f55fcd5462624e611212b0b6c41e842d1adfa9f2": "Ybodychange",
    "21f0b07bd031f022d14106150af66ceddb4c06b8": "Ybodychange",
    "a4222b86ea273554e5f42c834dd81a029a069ac1": "Ybodychange",
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0": "Ybodychange",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": "Ybodychange",
    "10330437ddd4be125cb4109702d0d0b96ffe3303": "Ybodychange",
    "2a71cac7e02c012add5e75f35aaf6aca7c561401": "Ybodychange",
    "88e89a138aa39f50f7642106cde6568f6e07783f": "Ybodychange",
    "fedf99f9a85f1a9db30f14ae072769d4ab6ac010": "Ybodychange",
    "08d6efe49d2960d9bd61bfb9cca65910f0c19b58": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2866: added before execution and exclusion file filters",
      "commitDate": "22/10/16 3:53 PM",
      "commitName": "fbaabe83cf78bcaf563443a3fb866931239eb15b",
      "commitAuthor": "rnveach",
      "commitDateOld": "13/10/16 5:27 PM",
      "commitNameOld": "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n     protected void setupChild(Configuration childConf)\n             throws CheckstyleException {\n         final String name \u003d childConf.getName();\n         final Object child;\n \n         try {\n             child \u003d moduleFactory.createModule(name);\n \n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(childContext);\n                 bean.configure(childConf);\n             }\n         }\n         catch (final CheckstyleException ex) {\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n         if (child instanceof FileSetCheck) {\n             final FileSetCheck fsc \u003d (FileSetCheck) child;\n             fsc.init();\n             addFileSetCheck(fsc);\n         }\n+        else if (child instanceof BeforeExecutionFileFilter) {\n+            final BeforeExecutionFileFilter filter \u003d (BeforeExecutionFileFilter) child;\n+            addBeforeExecutionFileFilter(filter);\n+        }\n         else if (child instanceof Filter) {\n             final Filter filter \u003d (Filter) child;\n             addFilter(filter);\n         }\n         else if (child instanceof AuditListener) {\n             final AuditListener listener \u003d (AuditListener) child;\n             addListener(listener);\n         }\n         else {\n             throw new CheckstyleException(name\n                     + \" is not allowed as a child in Checker\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration childConf)\n            throws CheckstyleException {\n        final String name \u003d childConf.getName();\n        final Object child;\n\n        try {\n            child \u003d moduleFactory.createModule(name);\n\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n        }\n        catch (final CheckstyleException ex) {\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n        if (child instanceof FileSetCheck) {\n            final FileSetCheck fsc \u003d (FileSetCheck) child;\n            fsc.init();\n            addFileSetCheck(fsc);\n        }\n        else if (child instanceof BeforeExecutionFileFilter) {\n            final BeforeExecutionFileFilter filter \u003d (BeforeExecutionFileFilter) child;\n            addBeforeExecutionFileFilter(filter);\n        }\n        else if (child instanceof Filter) {\n            final Filter filter \u003d (Filter) child;\n            addFilter(filter);\n        }\n        else if (child instanceof AuditListener) {\n            final AuditListener listener \u003d (AuditListener) child;\n            addListener(listener);\n        }\n        else {\n            throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: IllegalCatch violations fixed for Checker\n",
      "commitDate": "30/08/15 10:02 PM",
      "commitName": "d740f2e1cdb05f20a48bf7d5dcebdcd0faae6ddd",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "28/08/15 10:50 PM",
      "commitNameOld": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.97,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n     protected void setupChild(Configuration childConf)\n         throws CheckstyleException {\n         final String name \u003d childConf.getName();\n+        final Object child;\n+\n         try {\n-            final Object child \u003d moduleFactory.createModule(name);\n+            child \u003d moduleFactory.createModule(name);\n+\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(childContext);\n                 bean.configure(childConf);\n             }\n-            if (child instanceof FileSetCheck) {\n-                final FileSetCheck fsc \u003d (FileSetCheck) child;\n-                fsc.init();\n-                addFileSetCheck(fsc);\n-            }\n-            else if (child instanceof Filter) {\n-                final Filter filter \u003d (Filter) child;\n-                addFilter(filter);\n-            }\n-            else if (child instanceof AuditListener) {\n-                final AuditListener listener \u003d (AuditListener) child;\n-                addListener(listener);\n-            }\n-            else {\n-                throw new CheckstyleException(name\n-                        + \" is not allowed as a child in Checker\");\n-            }\n         }\n-        catch (final Exception ex) {\n+        catch (final CheckstyleException ex) {\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n+        if (child instanceof FileSetCheck) {\n+            final FileSetCheck fsc \u003d (FileSetCheck) child;\n+            fsc.init();\n+            addFileSetCheck(fsc);\n+        }\n+        else if (child instanceof Filter) {\n+            final Filter filter \u003d (Filter) child;\n+            addFilter(filter);\n+        }\n+        else if (child instanceof AuditListener) {\n+            final AuditListener listener \u003d (AuditListener) child;\n+            addListener(listener);\n+        }\n+        else {\n+            throw new CheckstyleException(name\n+                    + \" is not allowed as a child in Checker\");\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration childConf)\n        throws CheckstyleException {\n        final String name \u003d childConf.getName();\n        final Object child;\n\n        try {\n            child \u003d moduleFactory.createModule(name);\n\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n        }\n        catch (final CheckstyleException ex) {\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n        if (child instanceof FileSetCheck) {\n            final FileSetCheck fsc \u003d (FileSetCheck) child;\n            fsc.init();\n            addFileSetCheck(fsc);\n        }\n        else if (child instanceof Filter) {\n            final Filter filter \u003d (Filter) child;\n            addFilter(filter);\n        }\n        else if (child instanceof AuditListener) {\n            final AuditListener listener \u003d (AuditListener) child;\n            addListener(listener);\n        }\n        else {\n            throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "864cf936cfa75116153e5f195a833edaf64a90cf": {
      "type": "Ybodychange",
      "commitMessage": "AbstractFileSetCheck is 100% covered by UTs. #1295\n",
      "commitDate": "22/07/15 3:38 PM",
      "commitName": "864cf936cfa75116153e5f195a833edaf64a90cf",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 66.45,
      "commitsBetweenForRepo": 446,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     protected void setupChild(Configuration childConf)\n         throws CheckstyleException {\n         final String name \u003d childConf.getName();\n         try {\n             final Object child \u003d moduleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(childContext);\n                 bean.configure(childConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n+                fsc.init();\n                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                         + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (final Exception ex) {\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration childConf)\n        throws CheckstyleException {\n        final String name \u003d childConf.getName();\n        try {\n            final Object child \u003d moduleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                fsc.init();\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                        + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": {
      "type": "Ybodychange",
      "commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
      "commitDate": "23/04/15 10:38 AM",
      "commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "13/04/15 2:43 PM",
      "commitNameOld": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 9.83,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,33 @@\n     protected void setupChild(Configuration childConf)\n         throws CheckstyleException\n     {\n         final String name \u003d childConf.getName();\n         try {\n             final Object child \u003d moduleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(childContext);\n                 bean.configure(childConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                         + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (final Exception ex) {\n-            // TODO i18n\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration childConf)\n        throws CheckstyleException\n    {\n        final String name \u003d childConf.getName();\n        try {\n            final Object child \u003d moduleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                        + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/01/15 10:10 AM",
          "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
          "commitAuthorOld": "Lars Ködderitzsch",
          "daysBetweenCommits": 7.85,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-    protected void setupChild(Configuration aChildConf)\n+    protected void setupChild(Configuration childConf)\n         throws CheckstyleException\n     {\n-        final String name \u003d aChildConf.getName();\n+        final String name \u003d childConf.getName();\n         try {\n-            final Object child \u003d mModuleFactory.createModule(name);\n+            final Object child \u003d moduleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n-                bean.contextualize(mChildContext);\n-                bean.configure(aChildConf);\n+                bean.contextualize(childContext);\n+                bean.configure(childConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                         + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (final Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void setupChild(Configuration childConf)\n        throws CheckstyleException\n    {\n        final String name \u003d childConf.getName();\n        try {\n            final Object child \u003d moduleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                        + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
          "extendedDetails": {
            "oldValue": "[aChildConf-Configuration]",
            "newValue": "[childConf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/01/15 10:10 AM",
          "commitNameOld": "8ec1a1a97188c112f4af5cc00caffae2ac0cc530",
          "commitAuthorOld": "Lars Ködderitzsch",
          "daysBetweenCommits": 7.85,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,34 @@\n-    protected void setupChild(Configuration aChildConf)\n+    protected void setupChild(Configuration childConf)\n         throws CheckstyleException\n     {\n-        final String name \u003d aChildConf.getName();\n+        final String name \u003d childConf.getName();\n         try {\n-            final Object child \u003d mModuleFactory.createModule(name);\n+            final Object child \u003d moduleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n-                bean.contextualize(mChildContext);\n-                bean.configure(aChildConf);\n+                bean.contextualize(childContext);\n+                bean.configure(childConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                         + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (final Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\"cannot initialize module \" + name\n                     + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void setupChild(Configuration childConf)\n        throws CheckstyleException\n    {\n        final String name \u003d childConf.getName();\n        try {\n            final Object child \u003d moduleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(childContext);\n                bean.configure(childConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                        + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(mChildContext);\n                bean.configure(aChildConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                        + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\"cannot initialize module \" + name\n                    + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java"
      }
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     protected void setupChild(Configuration aChildConf)\n         throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object child \u003d mModuleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(mChildContext);\n                 bean.configure(aChildConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                     + \" is not allowed as a child in Checker\");\n             }\n         }\n-        catch (Exception ex) {\n+        catch (final Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(mChildContext);\n                bean.configure(aChildConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (final Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "f55fcd5462624e611212b0b6c41e842d1adfa9f2": {
      "type": "Ybodychange",
      "commitMessage": "Removed clutter: empty abstract class AuditEventFilter.\n",
      "commitDate": "14/07/03 3:58 AM",
      "commitName": "f55fcd5462624e611212b0b6c41e842d1adfa9f2",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "14/07/03 1:22 AM",
      "commitNameOld": "21f0b07bd031f022d14106150af66ceddb4c06b8",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.11,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     protected void setupChild(Configuration aChildConf)\n         throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object child \u003d mModuleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(mChildContext);\n                 bean.configure(aChildConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n-            else if (child instanceof AuditEventFilter) {\n-                final AuditEventFilter filter \u003d (AuditEventFilter) child;\n+            else if (child instanceof Filter) {\n+                final Filter filter \u003d (Filter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                     + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(mChildContext);\n                bean.configure(aChildConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "21f0b07bd031f022d14106150af66ceddb4c06b8": {
      "type": "Ybodychange",
      "commitMessage": "Refactor and extend filters to filter chains.\nAdd suppression filters.\n",
      "commitDate": "14/07/03 1:22 AM",
      "commitName": "21f0b07bd031f022d14106150af66ceddb4c06b8",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "13/07/03 3:30 AM",
      "commitNameOld": "8dc1a8ab994076f3fc10bab9248a2439ee54b443",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     protected void setupChild(Configuration aChildConf)\n         throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object child \u003d mModuleFactory.createModule(name);\n             if (child instanceof AutomaticBean) {\n                 final AutomaticBean bean \u003d (AutomaticBean) child;\n                 bean.contextualize(mChildContext);\n                 bean.configure(aChildConf);\n             }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n             }\n-            else if (child instanceof Filter) {\n-                final Filter filter \u003d (Filter) child;\n+            else if (child instanceof AuditEventFilter) {\n+                final AuditEventFilter filter \u003d (AuditEventFilter) child;\n                 addFilter(filter);\n             }\n             else if (child instanceof AuditListener) {\n                 final AuditListener listener \u003d (AuditListener) child;\n                 addListener(listener);\n             }\n             else {\n                 throw new CheckstyleException(name\n                     + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(mChildContext);\n                bean.configure(aChildConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof AuditEventFilter) {\n                final AuditEventFilter filter \u003d (AuditEventFilter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "a4222b86ea273554e5f42c834dd81a029a069ac1": {
      "type": "Ybodychange",
      "commitMessage": "Enable addition of AuditListener modules in configuration.\n",
      "commitDate": "11/07/03 4:00 PM",
      "commitName": "a4222b86ea273554e5f42c834dd81a029a069ac1",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "11/07/03 11:41 AM",
      "commitNameOld": "343250f12c479f304ff382cfd74919cbe050381e",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,35 @@\n     protected void setupChild(Configuration aChildConf)\n         throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object child \u003d mModuleFactory.createModule(name);\n+            if (child instanceof AutomaticBean) {\n+                final AutomaticBean bean \u003d (AutomaticBean) child;\n+                bean.contextualize(mChildContext);\n+                bean.configure(aChildConf);\n+            }\n             if (child instanceof FileSetCheck) {\n                 final FileSetCheck fsc \u003d (FileSetCheck) child;\n-                fsc.contextualize(mChildContext);\n-                fsc.configure(aChildConf);\n-                addFileSetCheck(fsc);\n+                 addFileSetCheck(fsc);\n             }\n             else if (child instanceof Filter) {\n                 final Filter filter \u003d (Filter) child;\n-                filter.contextualize(mChildContext);\n-                filter.configure(aChildConf);\n                 addFilter(filter);\n             }\n+            else if (child instanceof AuditListener) {\n+                final AuditListener listener \u003d (AuditListener) child;\n+                addListener(listener);\n+            }\n             else {\n                 throw new CheckstyleException(name\n                     + \" is not allowed as a child in Checker\");\n             }\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof AutomaticBean) {\n                final AutomaticBean bean \u003d (AutomaticBean) child;\n                bean.contextualize(mChildContext);\n                bean.configure(aChildConf);\n            }\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                 addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                addFilter(filter);\n            }\n            else if (child instanceof AuditListener) {\n                final AuditListener listener \u003d (AuditListener) child;\n                addListener(listener);\n            }\n            else {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0": {
      "type": "Ybodychange",
      "commitMessage": "Added filter feature to Checker.\n",
      "commitDate": "11/07/03 11:35 AM",
      "commitName": "c3baa3fa77f4ed8e475ab52db6d0f2f860d93ef0",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "27/06/03 4:04 AM",
      "commitNameOld": "768256c32a3e397f837ce27602bda49e3c5e0062",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 14.31,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,30 @@\n     protected void setupChild(Configuration aChildConf)\n         throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n-            final Object module \u003d mModuleFactory.createModule(name);\n-            if (!(module instanceof FileSetCheck)) {\n-                throw new CheckstyleException(name\n-                    + \" is not allowed as a module in Checker\");\n+            final Object child \u003d mModuleFactory.createModule(name);\n+            if (child instanceof FileSetCheck) {\n+                final FileSetCheck fsc \u003d (FileSetCheck) child;\n+                fsc.contextualize(mChildContext);\n+                fsc.configure(aChildConf);\n+                addFileSetCheck(fsc);\n             }\n-            final FileSetCheck fsc \u003d (FileSetCheck) module;\n-            fsc.contextualize(mChildContext);\n-            fsc.configure(aChildConf);\n-            addFileSetCheck(fsc);\n+            else if (child instanceof Filter) {\n+                final Filter filter \u003d (Filter) child;\n+                filter.contextualize(mChildContext);\n+                filter.configure(aChildConf);\n+                addFilter(filter);\n+            }\n+            else {\n+                throw new CheckstyleException(name\n+                    + \" is not allowed as a child in Checker\");\n+            }\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n        throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object child \u003d mModuleFactory.createModule(name);\n            if (child instanceof FileSetCheck) {\n                final FileSetCheck fsc \u003d (FileSetCheck) child;\n                fsc.contextualize(mChildContext);\n                fsc.configure(aChildConf);\n                addFileSetCheck(fsc);\n            }\n            else if (child instanceof Filter) {\n                final Filter filter \u003d (Filter) child;\n                filter.contextualize(mChildContext);\n                filter.configure(aChildConf);\n                addFilter(filter);\n            }\n            else {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a child in Checker\");\n            }\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": {
      "type": "Ybodychange",
      "commitMessage": "CheckstyleException now supports nested exceptions\n",
      "commitDate": "04/02/03 11:32 AM",
      "commitName": "eeba08c1028a79bdc2140476b24ce8d60f04657a",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "28/01/03 12:50 PM",
      "commitNameOld": "10330437ddd4be125cb4109702d0d0b96ffe3303",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 6.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     protected void setupChild(Configuration aChildConf)\n             throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object module \u003d mModuleFactory.createModule(name);\n             if (!(module instanceof FileSetCheck)) {\n                 throw new CheckstyleException(name\n                     + \" is not allowed as a module in Checker\");\n             }\n             final FileSetCheck fsc \u003d (FileSetCheck) module;\n             fsc.contextualize(mChildContext);\n             fsc.configure(aChildConf);\n             addFileSetCheck(fsc);\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize module \"\n-                    + name + \" - \" + ex.getMessage());\n+                    + name + \" - \" + ex.getMessage(), ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object module \u003d mModuleFactory.createModule(name);\n            if (!(module instanceof FileSetCheck)) {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a module in Checker\");\n            }\n            final FileSetCheck fsc \u003d (FileSetCheck) module;\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage(), ex);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "10330437ddd4be125cb4109702d0d0b96ffe3303": {
      "type": "Ybodychange",
      "commitMessage": "improved error messages so a user can understand them\n",
      "commitDate": "28/01/03 12:50 PM",
      "commitName": "10330437ddd4be125cb4109702d0d0b96ffe3303",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "03/01/03 2:49 AM",
      "commitNameOld": "feda6ebbfbe510a7572d403f581e8c5f78a6d987",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 25.42,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     protected void setupChild(Configuration aChildConf)\n             throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n             final Object module \u003d mModuleFactory.createModule(name);\n             if (!(module instanceof FileSetCheck)) {\n-                throw new CheckstyleException(name + \" is not a FileSetCheck\");\n+                throw new CheckstyleException(name\n+                    + \" is not allowed as a module in Checker\");\n             }\n             final FileSetCheck fsc \u003d (FileSetCheck) module;\n             fsc.contextualize(mChildContext);\n             fsc.configure(aChildConf);\n             addFileSetCheck(fsc);\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n-                    \"cannot initialize filesetcheck with name \"\n+                    \"cannot initialize module \"\n                     + name + \" - \" + ex.getMessage());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object module \u003d mModuleFactory.createModule(name);\n            if (!(module instanceof FileSetCheck)) {\n                throw new CheckstyleException(name\n                    + \" is not allowed as a module in Checker\");\n            }\n            final FileSetCheck fsc \u003d (FileSetCheck) module;\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize module \"\n                    + name + \" - \" + ex.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "2a71cac7e02c012add5e75f35aaf6aca7c561401": {
      "type": "Ybodychange",
      "commitMessage": "improved end user error message for module hierarchy problems\n",
      "commitDate": "26/12/02 9:21 AM",
      "commitName": "2a71cac7e02c012add5e75f35aaf6aca7c561401",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "15/12/02 10:26 PM",
      "commitNameOld": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 10.45,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,21 @@\n     protected void setupChild(Configuration aChildConf)\n             throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n-            final FileSetCheck fsc \u003d\n-            (FileSetCheck) mModuleFactory.createModule(name);\n+            final Object module \u003d mModuleFactory.createModule(name);\n+            if (!(module instanceof FileSetCheck)) {\n+                throw new CheckstyleException(name + \" is not a FileSetCheck\");\n+            }\n+            final FileSetCheck fsc \u003d (FileSetCheck) module;\n             fsc.contextualize(mChildContext);\n             fsc.configure(aChildConf);\n             addFileSetCheck(fsc);\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize filesetcheck with name \"\n                     + name + \" - \" + ex.getMessage());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final Object module \u003d mModuleFactory.createModule(name);\n            if (!(module instanceof FileSetCheck)) {\n                throw new CheckstyleException(name + \" is not a FileSetCheck\");\n            }\n            final FileSetCheck fsc \u003d (FileSetCheck) module;\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize filesetcheck with name \"\n                    + name + \" - \" + ex.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "88e89a138aa39f50f7642106cde6568f6e07783f": {
      "type": "Ybodychange",
      "commitMessage": "Changed implementation of module name resolution from inheritance to delegation approach\n",
      "commitDate": "15/12/02 10:26 PM",
      "commitName": "88e89a138aa39f50f7642106cde6568f6e07783f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "15/12/02 4:11 AM",
      "commitNameOld": "fedf99f9a85f1a9db30f14ae072769d4ab6ac010",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.76,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,18 @@\n     protected void setupChild(Configuration aChildConf)\n             throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n-            final String[] packageNames \u003d getPackageNames();\n             final FileSetCheck fsc \u003d\n-                    (FileSetCheck) PackageObjectFactory.makeObject(\n-                            packageNames,\n-                            getClass().getClassLoader(),\n-                            name);\n-            fsc.setPackageNames(packageNames);\n+            (FileSetCheck) mModuleFactory.createModule(name);\n             fsc.contextualize(mChildContext);\n             fsc.configure(aChildConf);\n             addFileSetCheck(fsc);\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize filesetcheck with name \"\n                     + name + \" - \" + ex.getMessage());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final FileSetCheck fsc \u003d\n            (FileSetCheck) mModuleFactory.createModule(name);\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize filesetcheck with name \"\n                    + name + \" - \" + ex.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "fedf99f9a85f1a9db30f14ae072769d4ab6ac010": {
      "type": "Ybodychange",
      "commitMessage": "Minor cleanup. Uncomfortable with duplication in TreeWalker.\n",
      "commitDate": "15/12/02 4:11 AM",
      "commitName": "fedf99f9a85f1a9db30f14ae072769d4ab6ac010",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "10/12/02 11:13 AM",
      "commitNameOld": "08d6efe49d2960d9bd61bfb9cca65910f0c19b58",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 4.71,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     protected void setupChild(Configuration aChildConf)\n             throws CheckstyleException\n     {\n         final String name \u003d aChildConf.getName();\n         try {\n+            final String[] packageNames \u003d getPackageNames();\n             final FileSetCheck fsc \u003d\n                     (FileSetCheck) PackageObjectFactory.makeObject(\n-                            getPackageNames(),\n+                            packageNames,\n                             getClass().getClassLoader(),\n                             name);\n-            fsc.setPackageNames(getPackageNames());\n+            fsc.setPackageNames(packageNames);\n             fsc.contextualize(mChildContext);\n             fsc.configure(aChildConf);\n             addFileSetCheck(fsc);\n         }\n         catch (Exception ex) {\n             // TODO i18n\n             throw new CheckstyleException(\n                     \"cannot initialize filesetcheck with name \"\n                     + name + \" - \" + ex.getMessage());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final String[] packageNames \u003d getPackageNames();\n            final FileSetCheck fsc \u003d\n                    (FileSetCheck) PackageObjectFactory.makeObject(\n                            packageNames,\n                            getClass().getClassLoader(),\n                            name);\n            fsc.setPackageNames(packageNames);\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize filesetcheck with name \"\n                    + name + \" - \" + ex.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "08d6efe49d2960d9bd61bfb9cca65910f0c19b58": {
      "type": "Yintroduced",
      "commitMessage": "make AutomaticBean.configure() final and provide defined extension points\nto prevent programming errors in user classes.\n",
      "commitDate": "10/12/02 11:13 AM",
      "commitName": "08d6efe49d2960d9bd61bfb9cca65910f0c19b58",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,22 @@\n+    protected void setupChild(Configuration aChildConf)\n+            throws CheckstyleException\n+    {\n+        final String name \u003d aChildConf.getName();\n+        try {\n+            final FileSetCheck fsc \u003d\n+                    (FileSetCheck) PackageObjectFactory.makeObject(\n+                            getPackageNames(),\n+                            getClass().getClassLoader(),\n+                            name);\n+            fsc.setPackageNames(getPackageNames());\n+            fsc.contextualize(mChildContext);\n+            fsc.configure(aChildConf);\n+            addFileSetCheck(fsc);\n+        }\n+        catch (Exception ex) {\n+            // TODO i18n\n+            throw new CheckstyleException(\n+                    \"cannot initialize filesetcheck with name \"\n+                    + name + \" - \" + ex.getMessage());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void setupChild(Configuration aChildConf)\n            throws CheckstyleException\n    {\n        final String name \u003d aChildConf.getName();\n        try {\n            final FileSetCheck fsc \u003d\n                    (FileSetCheck) PackageObjectFactory.makeObject(\n                            getPackageNames(),\n                            getClass().getClassLoader(),\n                            name);\n            fsc.setPackageNames(getPackageNames());\n            fsc.contextualize(mChildContext);\n            fsc.configure(aChildConf);\n            addFileSetCheck(fsc);\n        }\n        catch (Exception ex) {\n            // TODO i18n\n            throw new CheckstyleException(\n                    \"cannot initialize filesetcheck with name \"\n                    + name + \" - \" + ex.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Checker.java"
    }
  }
}