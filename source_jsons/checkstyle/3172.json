{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocParagraphCheck.java",
  "functionName": "isImmediatelyFollowedByText",
  "functionId": "isImmediatelyFollowedByText___tag-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
  "functionStartLine": 285,
  "functionEndLine": 290,
  "numCommitsSeen": 37,
  "timeTaken": 1065,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "f92ea5787d148f17fbebe085e7a9ed00b5e98677",
    "bb3f80410619472799c401651c43afb761f7906e"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "f92ea5787d148f17fbebe085e7a9ed00b5e98677": "Ybodychange",
    "bb3f80410619472799c401651c43afb761f7906e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n-        final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n+        final DetailNode nextSibling \u003d JavadocUtil.getNextSibling(tag);\n         return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                 || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n-                || CommonUtils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n+                || CommonUtil.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n        final DetailNode nextSibling \u003d JavadocUtil.getNextSibling(tag);\n        return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n                || CommonUtil.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n         final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n         return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                 || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n-                || Utils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n+                || CommonUtils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n        final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n        return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n                || CommonUtils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "f92ea5787d148f17fbebe085e7a9ed00b5e98677": {
      "type": "Ybodychange",
      "commitMessage": "Optimize single character starts with. #1555\n\nFixes `SingleCharacterStartsWith` inspection violations.\n\nFalse-negative reported to PMD: https://sourceforge.net/p/pmd/bugs/1392\n",
      "commitDate": "08/08/15 6:48 PM",
      "commitName": "f92ea5787d148f17fbebe085e7a9ed00b5e98677",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "24/07/15 5:03 PM",
      "commitNameOld": "7088d5c3c244721db87ecee91949acc895d5ff62",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 15.07,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n         final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n         return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                 || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n-                || nextSibling.getText().startsWith(\" \");\n+                || Utils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n        final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n        return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n                || Utils.startsWithChar(nextSibling.getText(), \u0027 \u0027);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java",
      "extendedDetails": {}
    },
    "bb3f80410619472799c401651c43afb761f7906e": {
      "type": "Yintroduced",
      "commitMessage": "fix JavadocParagraph allows new line before the next paragraph, #1332",
      "commitDate": "19/07/15 7:20 AM",
      "commitName": "bb3f80410619472799c401651c43afb761f7906e",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,6 @@\n+    private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n+        final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n+        return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n+                || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n+                || nextSibling.getText().startsWith(\" \");\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isImmediatelyFollowedByText(DetailNode tag) {\n        final DetailNode nextSibling \u003d JavadocUtils.getNextSibling(tag);\n        return nextSibling.getType() \u003d\u003d JavadocTokenTypes.NEWLINE\n                || nextSibling.getType() \u003d\u003d JavadocTokenTypes.EOF\n                || nextSibling.getText().startsWith(\" \");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocParagraphCheck.java"
    }
  }
}