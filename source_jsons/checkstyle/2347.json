{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FinalClassCheck.java",
  "functionName": "extractQualifiedName",
  "functionId": "extractQualifiedName___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java",
  "functionStartLine": 148,
  "functionEndLine": 150,
  "numCommitsSeen": 93,
  "timeTaken": 1599,
  "changeHistory": [
    "85749a05bec9fa31c1167c88a76da2cf36a9219b",
    "9eafaedfc010a179c284df98162c4d3ab8ab2645",
    "167dd96d8ca503a472bf003f187191d6b0ce586c",
    "88925a79c11f0b57744bae869a28959c70113e2a"
  ],
  "changeHistoryShort": {
    "85749a05bec9fa31c1167c88a76da2cf36a9219b": "Ymultichange(Yparameterchange,Ybodychange)",
    "9eafaedfc010a179c284df98162c4d3ab8ab2645": "Ybodychange",
    "167dd96d8ca503a472bf003f187191d6b0ce586c": "Ybodychange",
    "88925a79c11f0b57744bae869a28959c70113e2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "85749a05bec9fa31c1167c88a76da2cf36a9219b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #5706: fixed FinalClassCheck extracting qualified names",
      "commitDate": "10/04/18 7:15 PM",
      "commitName": "85749a05bec9fa31c1167c88a76da2cf36a9219b",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #5706: fixed FinalClassCheck extracting qualified names",
          "commitDate": "10/04/18 7:15 PM",
          "commitName": "85749a05bec9fa31c1167c88a76da2cf36a9219b",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/01/18 7:20 AM",
          "commitNameOld": "746a9d69125211ff44af1cb37732e919368ba620",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 96.45,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,3 @@\n-    private static String extractQualifiedName(DetailAST classExtend) {\n-        final String className;\n-\n-        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n-            // Name specified with packages, have to traverse DOT\n-            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n-            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n-\n-            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n-            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n-            while (traverse !\u003d null) {\n-                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n-                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n-            }\n-            className \u003d String.join(PACKAGE_SEPARATOR, qualifiedNameParts);\n-        }\n-        else {\n-            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n-        }\n-\n-        return className;\n+    private static String extractQualifiedName(DetailAST ast) {\n+        return FullIdent.createFullIdent(ast).getText();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String extractQualifiedName(DetailAST ast) {\n        return FullIdent.createFullIdent(ast).getText();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java",
          "extendedDetails": {
            "oldValue": "[classExtend-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5706: fixed FinalClassCheck extracting qualified names",
          "commitDate": "10/04/18 7:15 PM",
          "commitName": "85749a05bec9fa31c1167c88a76da2cf36a9219b",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/01/18 7:20 AM",
          "commitNameOld": "746a9d69125211ff44af1cb37732e919368ba620",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 96.45,
          "commitsBetweenForRepo": 208,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,3 @@\n-    private static String extractQualifiedName(DetailAST classExtend) {\n-        final String className;\n-\n-        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n-            // Name specified with packages, have to traverse DOT\n-            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n-            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n-\n-            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n-            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n-            while (traverse !\u003d null) {\n-                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n-                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n-            }\n-            className \u003d String.join(PACKAGE_SEPARATOR, qualifiedNameParts);\n-        }\n-        else {\n-            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n-        }\n-\n-        return className;\n+    private static String extractQualifiedName(DetailAST ast) {\n+        return FullIdent.createFullIdent(ast).getText();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String extractQualifiedName(DetailAST ast) {\n        return FullIdent.createFullIdent(ast).getText();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "9eafaedfc010a179c284df98162c4d3ab8ab2645": {
      "type": "Ybodychange",
      "commitMessage": "Pull #3406: Replace Guava\u0027s Joiner with Java 8 native approach\n\n",
      "commitDate": "06/09/16 5:14 PM",
      "commitName": "9eafaedfc010a179c284df98162c4d3ab8ab2645",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "31/07/16 7:57 AM",
      "commitNameOld": "7790f3104d2770ac909c61e96ae66daba8d372ec",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 37.39,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private static String extractQualifiedName(DetailAST classExtend) {\n         final String className;\n \n         if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n             // Name specified with packages, have to traverse DOT\n             final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n             final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n \n             qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n             DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n             while (traverse !\u003d null) {\n                 qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n                 traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n             }\n-            className \u003d Joiner.on(PACKAGE_SEPARATOR).join(qualifiedNameParts);\n+            className \u003d String.join(PACKAGE_SEPARATOR, qualifiedNameParts);\n         }\n         else {\n             className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n         }\n \n         return className;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String extractQualifiedName(DetailAST classExtend) {\n        final String className;\n\n        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n            // Name specified with packages, have to traverse DOT\n            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n\n            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n            while (traverse !\u003d null) {\n                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n            }\n            className \u003d String.join(PACKAGE_SEPARATOR, qualifiedNameParts);\n        }\n        else {\n            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n        }\n\n        return className;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java",
      "extendedDetails": {}
    },
    "167dd96d8ca503a472bf003f187191d6b0ce586c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2428: remove dependency to commons-lang3 library\n",
      "commitDate": "17/03/16 6:39 AM",
      "commitName": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthor": "Rasmus Kaj",
      "commitDateOld": "12/02/16 8:14 PM",
      "commitNameOld": "88925a79c11f0b57744bae869a28959c70113e2a",
      "commitAuthorOld": "liscju",
      "daysBetweenCommits": 33.39,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private static String extractQualifiedName(DetailAST classExtend) {\n         final String className;\n \n         if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n             // Name specified with packages, have to traverse DOT\n             final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n             final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n \n             qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n             DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n             while (traverse !\u003d null) {\n                 qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n                 traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n             }\n-            className \u003d StringUtils.join(qualifiedNameParts, PACKAGE_SEPARATOR);\n+            className \u003d Joiner.on(PACKAGE_SEPARATOR).join(qualifiedNameParts);\n         }\n         else {\n             className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n         }\n \n         return className;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String extractQualifiedName(DetailAST classExtend) {\n        final String className;\n\n        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n            // Name specified with packages, have to traverse DOT\n            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n\n            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n            while (traverse !\u003d null) {\n                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n            }\n            className \u003d Joiner.on(PACKAGE_SEPARATOR).join(qualifiedNameParts);\n        }\n        else {\n            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n        }\n\n        return className;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java",
      "extendedDetails": {}
    },
    "88925a79c11f0b57744bae869a28959c70113e2a": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2822: Makes FinalClass doesnt recognise as final classes with nested subclasses\n",
      "commitDate": "12/02/16 8:14 PM",
      "commitName": "88925a79c11f0b57744bae869a28959c70113e2a",
      "commitAuthor": "liscju",
      "diff": "@@ -0,0 +1,22 @@\n+    private static String extractQualifiedName(DetailAST classExtend) {\n+        final String className;\n+\n+        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n+            // Name specified with packages, have to traverse DOT\n+            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n+            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n+\n+            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n+            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n+            while (traverse !\u003d null) {\n+                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n+                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n+            }\n+            className \u003d StringUtils.join(qualifiedNameParts, PACKAGE_SEPARATOR);\n+        }\n+        else {\n+            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n+        }\n+\n+        return className;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static String extractQualifiedName(DetailAST classExtend) {\n        final String className;\n\n        if (classExtend.findFirstToken(TokenTypes.IDENT) \u003d\u003d null) {\n            // Name specified with packages, have to traverse DOT\n            final DetailAST firstChild \u003d classExtend.findFirstToken(TokenTypes.DOT);\n            final List\u003cString\u003e qualifiedNameParts \u003d new LinkedList\u003c\u003e();\n\n            qualifiedNameParts.add(0, firstChild.findFirstToken(TokenTypes.IDENT).getText());\n            DetailAST traverse \u003d firstChild.findFirstToken(TokenTypes.DOT);\n            while (traverse !\u003d null) {\n                qualifiedNameParts.add(0, traverse.findFirstToken(TokenTypes.IDENT).getText());\n                traverse \u003d traverse.findFirstToken(TokenTypes.DOT);\n            }\n            className \u003d StringUtils.join(qualifiedNameParts, PACKAGE_SEPARATOR);\n        }\n        else {\n            className \u003d classExtend.findFirstToken(TokenTypes.IDENT).getText();\n        }\n\n        return className;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/FinalClassCheck.java"
    }
  }
}