{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfigurationLoader.java",
  "functionName": "loadConfiguration",
  "functionId": "loadConfiguration___config-String__overridePropsResolver-PropertyResolver",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
  "functionStartLine": 209,
  "functionEndLine": 212,
  "numCommitsSeen": 218,
  "timeTaken": 2694,
  "changeHistory": [
    "dc88a9954baf88df6543cf73baabed710f882363",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "adce874628730a881c533bb04db2688d03a60fc6",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "b59648d60599bc197de618af5406c5e46978bbda",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72",
    "e853ed726fc5ea30084202fa72c8117147fedb2b",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a",
    "f8459eb6742402c5c33f7b80e4c5844998a258ac",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
    "2debda611fe487021711aa4acce56651799a778f",
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5"
  ],
  "changeHistoryShort": {
    "dc88a9954baf88df6543cf73baabed710f882363": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "adce874628730a881c533bb04db2688d03a60fc6": "Ybodychange",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "b59648d60599bc197de618af5406c5e46978bbda": "Ybodychange",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": "Ymultichange(Yparameterchange,Ybodychange)",
    "e853ed726fc5ea30084202fa72c8117147fedb2b": "Ymultichange(Yparameterchange,Ybodychange)",
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": "Ybodychange",
    "f8459eb6742402c5c33f7b80e4c5844998a258ac": "Ybodychange",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": "Ybodychange",
    "2debda611fe487021711aa4acce56651799a778f": "Ymultichange(Yparameterchange,Ybodychange)",
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dc88a9954baf88df6543cf73baabed710f882363": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4709: fix avoid boolean parameters for public methods\n",
      "commitDate": "09/08/17 4:54 AM",
      "commitName": "dc88a9954baf88df6543cf73baabed710f882363",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "29/07/17 6:40 PM",
      "commitNameOld": "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 10.43,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n     public static Configuration loadConfiguration(String config,\n             PropertyResolver overridePropsResolver) throws CheckstyleException {\n-        return loadConfiguration(config, overridePropsResolver, false);\n+        return loadConfiguration(config, overridePropsResolver, IgnoredModulesOptions.EXECUTE);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String config,\n            PropertyResolver overridePropsResolver) throws CheckstyleException {\n        return loadConfiguration(config, overridePropsResolver, IgnoredModulesOptions.EXECUTE);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    public static Configuration loadConfiguration(String aConfig,\n-            PropertyResolver aOverridePropsResolver) throws CheckstyleException\n+    public static Configuration loadConfiguration(String config,\n+            PropertyResolver overridePropsResolver) throws CheckstyleException\n     {\n-        return loadConfiguration(aConfig, aOverridePropsResolver, false);\n+        return loadConfiguration(config, overridePropsResolver, false);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(String config,\n            PropertyResolver overridePropsResolver) throws CheckstyleException\n    {\n        return loadConfiguration(config, overridePropsResolver, false);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aConfig-String, aOverridePropsResolver-PropertyResolver]",
            "newValue": "[config-String, overridePropsResolver-PropertyResolver]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    public static Configuration loadConfiguration(String aConfig,\n-            PropertyResolver aOverridePropsResolver) throws CheckstyleException\n+    public static Configuration loadConfiguration(String config,\n+            PropertyResolver overridePropsResolver) throws CheckstyleException\n     {\n-        return loadConfiguration(aConfig, aOverridePropsResolver, false);\n+        return loadConfiguration(config, overridePropsResolver, false);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(String config,\n            PropertyResolver overridePropsResolver) throws CheckstyleException\n    {\n        return loadConfiguration(config, overridePropsResolver, false);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static Configuration loadConfiguration(String aConfig,\n            PropertyResolver aOverridePropsResolver) throws CheckstyleException\n    {\n        return loadConfiguration(aConfig, aOverridePropsResolver, false);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java"
      }
    },
    "adce874628730a881c533bb04db2688d03a60fc6": {
      "type": "Ybodychange",
      "commitMessage": "Added patch (id 1193251) to suppress processing of checks with \u0027ignore\u0027\nseverity. From Lars Koedderitzsch.\n",
      "commitDate": "17/07/05 4:03 AM",
      "commitName": "adce874628730a881c533bb04db2688d03a60fc6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 189.01,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,5 @@\n-    public static Configuration loadConfiguration(\n-        String aConfig, PropertyResolver aOverridePropsResolver)\n-        throws CheckstyleException\n+    public static Configuration loadConfiguration(String aConfig,\n+            PropertyResolver aOverridePropsResolver) throws CheckstyleException\n     {\n-        try {\n-            final ConfigurationLoader loader \u003d\n-                new ConfigurationLoader(aOverridePropsResolver);\n-            // figure out if this is a File or a URL\n-            InputStream configStream;\n-            try {\n-                final URL url \u003d new URL(aConfig);\n-                configStream \u003d url.openStream();\n-            }\n-            catch (MalformedURLException ex) {\n-                configStream \u003d new FileInputStream(aConfig);\n-            }\n-            final InputStream bufferedStream \u003d\n-                new BufferedInputStream(configStream);\n-            loader.parseInputStream(bufferedStream);\n-            bufferedStream.close();\n-            return loader.getConfiguration();\n-        }\n-        catch (FileNotFoundException e) {\n-            throw new CheckstyleException(\n-                \"unable to find \" + aConfig, e);\n-        }\n-        catch (ParserConfigurationException e) {\n-            throw new CheckstyleException(\n-                \"unable to parse \" + aConfig, e);\n-        }\n-        catch (SAXParseException e) {\n-            throw new CheckstyleException(\"unable to parse \"\n-                    + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()\n-                    + \":\" + e.getColumnNumber(), e);\n-        }\n-        catch (SAXException e) {\n-            throw new CheckstyleException(\"unable to parse \"\n-                    + aConfig + \" - \" + e.getMessage(), e);\n-        }\n-        catch (IOException e) {\n-            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n-        }\n+        return loadConfiguration(aConfig, aOverridePropsResolver, false);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String aConfig,\n            PropertyResolver aOverridePropsResolver) throws CheckstyleException\n    {\n        return loadConfiguration(aConfig, aOverridePropsResolver, false);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "07/03/04 3:05 AM",
      "commitNameOld": "f5bb7772afa26f7758baa6b6f8f289b699c2c984",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 172.1,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n     public static Configuration loadConfiguration(\n         String aConfig, PropertyResolver aOverridePropsResolver)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n                 new ConfigurationLoader(aOverridePropsResolver);\n             // figure out if this is a File or a URL\n             InputStream configStream;\n             try {\n-                URL url \u003d new URL(aConfig);\n+                final URL url \u003d new URL(aConfig);\n                 configStream \u003d url.openStream();\n             }\n             catch (MalformedURLException ex) {\n                 configStream \u003d new FileInputStream(aConfig);\n             }\n             final InputStream bufferedStream \u003d\n                 new BufferedInputStream(configStream);\n             loader.parseInputStream(bufferedStream);\n             bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n                 \"unable to parse \" + aConfig, e);\n         }\n         catch (SAXParseException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()\n                     + \":\" + e.getColumnNumber(), e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, PropertyResolver aOverridePropsResolver)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverridePropsResolver);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                final URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXParseException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()\n                    + \":\" + e.getColumnNumber(), e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "b59648d60599bc197de618af5406c5e46978bbda": {
      "type": "Ybodychange",
      "commitMessage": "Added line and column numbers to configuration parse exceptions\n(request 714962).\n",
      "commitDate": "10/05/03 8:17 AM",
      "commitName": "b59648d60599bc197de618af5406c5e46978bbda",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "18/04/03 1:50 AM",
      "commitNameOld": "55fcf189eb1c1c4d776ce3b3ad7835fb404b21d8",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 22.27,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,43 @@\n     public static Configuration loadConfiguration(\n         String aConfig, PropertyResolver aOverridePropsResolver)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n                 new ConfigurationLoader(aOverridePropsResolver);\n             // figure out if this is a File or a URL\n             InputStream configStream;\n             try {\n                 URL url \u003d new URL(aConfig);\n                 configStream \u003d url.openStream();\n             }\n             catch (MalformedURLException ex) {\n                 configStream \u003d new FileInputStream(aConfig);\n             }\n             final InputStream bufferedStream \u003d\n                 new BufferedInputStream(configStream);\n             loader.parseInputStream(bufferedStream);\n             bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n                 \"unable to parse \" + aConfig, e);\n         }\n+        catch (SAXParseException e) {\n+            throw new CheckstyleException(\"unable to parse \"\n+                    + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()\n+                    + \":\" + e.getColumnNumber(), e);\n+        }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, PropertyResolver aOverridePropsResolver)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverridePropsResolver);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXParseException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage() + \":\" + e.getLineNumber()\n                    + \":\" + e.getColumnNumber(), e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
      "commitDate": "23/02/03 4:29 AM",
      "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
      "commitAuthor": "Lars KÃ¼hne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
          "commitDate": "23/02/03 4:29 AM",
          "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "23/02/03 12:20 AM",
          "commitNameOld": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n     public static Configuration loadConfiguration(\n-        String aConfig, Properties aOverrideProps)\n+        String aConfig, PropertyResolver aOverridePropsResolver)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n-                new ConfigurationLoader(aOverrideProps);\n+                new ConfigurationLoader(aOverridePropsResolver);\n             // figure out if this is a File or a URL\n             InputStream configStream;\n             try {\n                 URL url \u003d new URL(aConfig);\n                 configStream \u003d url.openStream();\n             }\n             catch (MalformedURLException ex) {\n                 configStream \u003d new FileInputStream(aConfig);\n             }\n             final InputStream bufferedStream \u003d\n                 new BufferedInputStream(configStream);\n             loader.parseInputStream(bufferedStream);\n             bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n                 \"unable to parse \" + aConfig, e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, PropertyResolver aOverridePropsResolver)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverridePropsResolver);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aConfig-String, aOverrideProps-Properties]",
            "newValue": "[aConfig-String, aOverridePropsResolver-PropertyResolver]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
          "commitDate": "23/02/03 4:29 AM",
          "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "23/02/03 12:20 AM",
          "commitNameOld": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,38 +1,38 @@\n     public static Configuration loadConfiguration(\n-        String aConfig, Properties aOverrideProps)\n+        String aConfig, PropertyResolver aOverridePropsResolver)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n-                new ConfigurationLoader(aOverrideProps);\n+                new ConfigurationLoader(aOverridePropsResolver);\n             // figure out if this is a File or a URL\n             InputStream configStream;\n             try {\n                 URL url \u003d new URL(aConfig);\n                 configStream \u003d url.openStream();\n             }\n             catch (MalformedURLException ex) {\n                 configStream \u003d new FileInputStream(aConfig);\n             }\n             final InputStream bufferedStream \u003d\n                 new BufferedInputStream(configStream);\n             loader.parseInputStream(bufferedStream);\n             bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n                 \"unable to parse \" + aConfig, e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, PropertyResolver aOverridePropsResolver)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverridePropsResolver);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "e853ed726fc5ea30084202fa72c8117147fedb2b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "added configuration loading from URLs, RFE #682140\n",
      "commitDate": "08/02/03 9:57 AM",
      "commitName": "e853ed726fc5ea30084202fa72c8117147fedb2b",
      "commitAuthor": "Lars KÃ¼hne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "added configuration loading from URLs, RFE #682140\n",
          "commitDate": "08/02/03 9:57 AM",
          "commitName": "e853ed726fc5ea30084202fa72c8117147fedb2b",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "08/02/03 2:04 AM",
          "commitNameOld": "9b3c6b1be571a0c008e6b7b72a3fe31a3e88f931",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,38 @@\n-    public static Configuration loadConfiguration(String aConfigFname,\n-                                                  Properties aOverrideProps)\n+    public static Configuration loadConfiguration(\n+        String aConfig, Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n                 new ConfigurationLoader(aOverrideProps);\n-            loader.parseFile(aConfigFname);\n+            // figure out if this is a File or a URL\n+            InputStream configStream;\n+            try {\n+                URL url \u003d new URL(aConfig);\n+                configStream \u003d url.openStream();\n+            }\n+            catch (MalformedURLException ex) {\n+                configStream \u003d new FileInputStream(aConfig);\n+            }\n+            final InputStream bufferedStream \u003d\n+                new BufferedInputStream(configStream);\n+            loader.parseInputStream(bufferedStream);\n+            bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n-                \"unable to find \" + aConfigFname, e);\n+                \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n-                \"unable to parse \" + aConfigFname, e);\n+                \"unable to parse \" + aConfig, e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n-                    + aConfigFname + \" - \" + e.getMessage(), e);\n+                    + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n-            throw new CheckstyleException(\"unable to read \" + aConfigFname, e);\n+            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverrideProps);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aConfigFname-String, aOverrideProps-Properties]",
            "newValue": "[aConfig-String, aOverrideProps-Properties]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "added configuration loading from URLs, RFE #682140\n",
          "commitDate": "08/02/03 9:57 AM",
          "commitName": "e853ed726fc5ea30084202fa72c8117147fedb2b",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "08/02/03 2:04 AM",
          "commitNameOld": "9b3c6b1be571a0c008e6b7b72a3fe31a3e88f931",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 0.33,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,38 @@\n-    public static Configuration loadConfiguration(String aConfigFname,\n-                                                  Properties aOverrideProps)\n+    public static Configuration loadConfiguration(\n+        String aConfig, Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n                 new ConfigurationLoader(aOverrideProps);\n-            loader.parseFile(aConfigFname);\n+            // figure out if this is a File or a URL\n+            InputStream configStream;\n+            try {\n+                URL url \u003d new URL(aConfig);\n+                configStream \u003d url.openStream();\n+            }\n+            catch (MalformedURLException ex) {\n+                configStream \u003d new FileInputStream(aConfig);\n+            }\n+            final InputStream bufferedStream \u003d\n+                new BufferedInputStream(configStream);\n+            loader.parseInputStream(bufferedStream);\n+            bufferedStream.close();\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n-                \"unable to find \" + aConfigFname, e);\n+                \"unable to find \" + aConfig, e);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\n-                \"unable to parse \" + aConfigFname, e);\n+                \"unable to parse \" + aConfig, e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n-                    + aConfigFname + \" - \" + e.getMessage(), e);\n+                    + aConfig + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n-            throw new CheckstyleException(\"unable to read \" + aConfigFname, e);\n+            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(\n        String aConfig, Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverrideProps);\n            // figure out if this is a File or a URL\n            InputStream configStream;\n            try {\n                URL url \u003d new URL(aConfig);\n                configStream \u003d url.openStream();\n            }\n            catch (MalformedURLException ex) {\n                configStream \u003d new FileInputStream(aConfig);\n            }\n            final InputStream bufferedStream \u003d\n                new BufferedInputStream(configStream);\n            loader.parseInputStream(bufferedStream);\n            bufferedStream.close();\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfig, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfig, e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfig + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfig, e);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "eeba08c1028a79bdc2140476b24ce8d60f04657a": {
      "type": "Ybodychange",
      "commitMessage": "CheckstyleException now supports nested exceptions\n",
      "commitDate": "04/02/03 11:32 AM",
      "commitName": "eeba08c1028a79bdc2140476b24ce8d60f04657a",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "28/01/03 11:56 AM",
      "commitNameOld": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 6.98,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n     public static Configuration loadConfiguration(String aConfigFname,\n                                                   Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d\n                 new ConfigurationLoader(aOverrideProps);\n             loader.parseFile(aConfigFname);\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n-            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n+            throw new CheckstyleException(\n+                \"unable to find \" + aConfigFname, e);\n         }\n         catch (ParserConfigurationException e) {\n-            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n+            throw new CheckstyleException(\n+                \"unable to parse \" + aConfigFname, e);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n-                    + aConfigFname + \" - \" + e.getMessage());\n+                    + aConfigFname + \" - \" + e.getMessage(), e);\n         }\n         catch (IOException e) {\n-            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n+            throw new CheckstyleException(\"unable to read \" + aConfigFname, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String aConfigFname,\n                                                  Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverrideProps);\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aConfigFname, e);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\n                \"unable to parse \" + aConfigFname, e);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfigFname + \" - \" + e.getMessage(), e);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname, e);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "f8459eb6742402c5c33f7b80e4c5844998a258ac": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring after re-reading the code\n",
      "commitDate": "07/12/02 4:16 AM",
      "commitName": "f8459eb6742402c5c33f7b80e4c5844998a258ac",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "07/12/02 3:50 AM",
      "commitNameOld": "a0054eede02fe6109973ab4b94f3657d1ed187a3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public static Configuration loadConfiguration(String aConfigFname,\n                                                   Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n-            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n-            loader.mOverrideProps \u003d aOverrideProps;\n+            final ConfigurationLoader loader \u003d\n+                new ConfigurationLoader(aOverrideProps);\n             loader.parseFile(aConfigFname);\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\"unable to find \" + aConfigFname);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \"\n                     + aConfigFname + \" - \" + e.getMessage());\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfigFname);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String aConfigFname,\n                                                  Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d\n                new ConfigurationLoader(aOverrideProps);\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfigFname + \" - \" + e.getMessage());\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": {
      "type": "Ybodychange",
      "commitMessage": "avalonization\n",
      "commitDate": "30/11/02 10:29 AM",
      "commitName": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "30/11/02 8:58 AM",
      "commitNameOld": "085befb3adfaed30db6623bfc04fa7b1e8755d3a",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n     public static Configuration loadConfiguration(String aConfigFname,\n                                                    Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d new ConfigurationLoader();\n             loader.mOverrideProps \u003d aOverrideProps;\n             loader.parseFile(aConfigFname);\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\"unable to find \" + aConfigFname);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (SAXException e) {\n-            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n+            throw new CheckstyleException(\"unable to parse \"\n+                    + aConfigFname + \" - \" + e.getMessage());\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfigFname);\n         }\n-        catch (RESyntaxException e) {\n-            throw new CheckstyleException(\n-                \"A regular expression error exists in \" + aConfigFname);\n-        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String aConfigFname,\n                                                   Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n            loader.mOverrideProps \u003d aOverrideProps;\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \"\n                    + aConfigFname + \" - \" + e.getMessage());\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "2debda611fe487021711aa4acce56651799a778f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added overriding global properties\nNeeds testing, especially in ant with CheckstyleTask.\n",
      "commitDate": "16/11/02 11:38 AM",
      "commitName": "2debda611fe487021711aa4acce56651799a778f",
      "commitAuthor": "Rick Giles",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added overriding global properties\nNeeds testing, especially in ant with CheckstyleTask.\n",
          "commitDate": "16/11/02 11:38 AM",
          "commitName": "2debda611fe487021711aa4acce56651799a778f",
          "commitAuthor": "Rick Giles",
          "commitDateOld": "15/11/02 10:18 AM",
          "commitNameOld": "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
          "commitAuthorOld": "Rick Giles",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    public static Configuration loadConfiguration(String aConfigFname)\n+    public static Configuration loadConfiguration(String aConfigFname,\n+                                                   Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d new ConfigurationLoader();\n+            loader.mOverrideProps \u003d aOverrideProps;\n             loader.parseFile(aConfigFname);\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\"unable to find \" + aConfigFname);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfigFname);\n         }\n         catch (RESyntaxException e) {\n             throw new CheckstyleException(\n                 \"A regular expression error exists in \" + aConfigFname);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(String aConfigFname,\n                                                   Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n            loader.mOverrideProps \u003d aOverrideProps;\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n        }\n        catch (RESyntaxException e) {\n            throw new CheckstyleException(\n                \"A regular expression error exists in \" + aConfigFname);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aConfigFname-String]",
            "newValue": "[aConfigFname-String, aOverrideProps-Properties]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added overriding global properties\nNeeds testing, especially in ant with CheckstyleTask.\n",
          "commitDate": "16/11/02 11:38 AM",
          "commitName": "2debda611fe487021711aa4acce56651799a778f",
          "commitAuthor": "Rick Giles",
          "commitDateOld": "15/11/02 10:18 AM",
          "commitNameOld": "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
          "commitAuthorOld": "Rick Giles",
          "daysBetweenCommits": 1.06,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,27 @@\n-    public static Configuration loadConfiguration(String aConfigFname)\n+    public static Configuration loadConfiguration(String aConfigFname,\n+                                                   Properties aOverrideProps)\n         throws CheckstyleException\n     {\n         try {\n             final ConfigurationLoader loader \u003d new ConfigurationLoader();\n+            loader.mOverrideProps \u003d aOverrideProps;\n             loader.parseFile(aConfigFname);\n             return loader.getConfiguration();\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\"unable to find \" + aConfigFname);\n         }\n         catch (ParserConfigurationException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (SAXException e) {\n             throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to read \" + aConfigFname);\n         }\n         catch (RESyntaxException e) {\n             throw new CheckstyleException(\n                 \"A regular expression error exists in \" + aConfigFname);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Configuration loadConfiguration(String aConfigFname,\n                                                   Properties aOverrideProps)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n            loader.mOverrideProps \u003d aOverrideProps;\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n        }\n        catch (RESyntaxException e) {\n            throw new CheckstyleException(\n                \"A regular expression error exists in \" + aConfigFname);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5": {
      "type": "Yintroduced",
      "commitMessage": "Wrapped GlobalProperties and CheckConfiguration[] into a Configuration\nclass. TODO: Integrate with CheckStyleTask\n",
      "commitDate": "15/11/02 10:18 AM",
      "commitName": "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,25 @@\n+    public static Configuration loadConfiguration(String aConfigFname)\n+        throws CheckstyleException\n+    {\n+        try {\n+            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n+            loader.parseFile(aConfigFname);\n+            return loader.getConfiguration();\n+        }\n+        catch (FileNotFoundException e) {\n+            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n+        }\n+        catch (ParserConfigurationException e) {\n+            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n+        }\n+        catch (SAXException e) {\n+            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n+        }\n+        catch (IOException e) {\n+            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n+        }\n+        catch (RESyntaxException e) {\n+            throw new CheckstyleException(\n+                \"A regular expression error exists in \" + aConfigFname);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static Configuration loadConfiguration(String aConfigFname)\n        throws CheckstyleException\n    {\n        try {\n            final ConfigurationLoader loader \u003d new ConfigurationLoader();\n            loader.parseFile(aConfigFname);\n            return loader.getConfiguration();\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aConfigFname);\n        }\n        catch (ParserConfigurationException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (SAXException e) {\n            throw new CheckstyleException(\"unable to parse \" + aConfigFname);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to read \" + aConfigFname);\n        }\n        catch (RESyntaxException e) {\n            throw new CheckstyleException(\n                \"A regular expression error exists in \" + aConfigFname);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java"
    }
  }
}