{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Main.java",
  "functionName": "getExclusions",
  "functionId": "getExclusions",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
  "functionStartLine": 779,
  "functionEndLine": 787,
  "numCommitsSeen": 220,
  "timeTaken": 1919,
  "changeHistory": [
    "58513c6e79da541491b4a6395f08b6c17446190d",
    "f3143fa28a339d6409932362307e906741b8c6f9",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6"
  ],
  "changeHistoryShort": {
    "58513c6e79da541491b4a6395f08b6c17446190d": "Ybodychange",
    "f3143fa28a339d6409932362307e906741b8c6f9": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "58513c6e79da541491b4a6395f08b6c17446190d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3837: report lambda with no braces when contents span multiple lines\n",
      "commitDate": "01/08/19 2:45 PM",
      "commitName": "58513c6e79da541491b4a6395f08b6c17446190d",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "13/03/19 11:16 PM",
      "commitNameOld": "87a3357169fa8e91ebfae23b4dcccad60943abd7",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 140.64,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n         private List\u003cPattern\u003e getExclusions() {\n-            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n-            exclude.forEach(file -\u003e result.add(\n-                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n+            final List\u003cPattern\u003e result \u003d exclude.stream()\n+                    .map(File::getAbsolutePath)\n+                    .map(Pattern::quote)\n+                    .map(pattern -\u003e Pattern.compile(\"^\" + pattern + \"$\"))\n+                    .collect(Collectors.toCollection(ArrayList::new));\n             result.addAll(excludeRegex);\n             return result;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private List\u003cPattern\u003e getExclusions() {\n            final List\u003cPattern\u003e result \u003d exclude.stream()\n                    .map(File::getAbsolutePath)\n                    .map(Pattern::quote)\n                    .map(pattern -\u003e Pattern.compile(\"^\" + pattern + \"$\"))\n                    .collect(Collectors.toCollection(ArrayList::new));\n            result.addAll(excludeRegex);\n            return result;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "f3143fa28a339d6409932362307e906741b8c6f9": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
      "commitDate": "29/10/18 4:33 PM",
      "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
      "commitAuthor": "Remko Popma",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
          "commitDate": "29/10/18 4:33 PM",
          "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
          "commitAuthor": "Remko Popma",
          "commitDateOld": "05/09/18 5:54 AM",
          "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
          "commitAuthorOld": "Boxuan Li",
          "daysBetweenCommits": 54.44,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,7 @@\n-    private static List\u003cPattern\u003e getExclusions(CommandLine commandLine) {\n-        final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n-\n-        if (commandLine.hasOption(OPTION_E_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_E_NAME)) {\n-                result.add(Pattern.compile(\"^\" + Pattern.quote(new File(value).getAbsolutePath())\n-                        + \"$\"));\n-            }\n-        }\n-        if (commandLine.hasOption(OPTION_X_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_X_NAME)) {\n-                result.add(Pattern.compile(value));\n-            }\n-        }\n-\n-        return result;\n-    }\n\\ No newline at end of file\n+        private List\u003cPattern\u003e getExclusions() {\n+            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n+            exclude.forEach(file -\u003e result.add(\n+                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n+            result.addAll(excludeRegex);\n+            return result;\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        private List\u003cPattern\u003e getExclusions() {\n            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n            exclude.forEach(file -\u003e result.add(\n                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n            result.addAll(excludeRegex);\n            return result;\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[commandLine-CommandLine]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
          "commitDate": "29/10/18 4:33 PM",
          "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
          "commitAuthor": "Remko Popma",
          "commitDateOld": "05/09/18 5:54 AM",
          "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
          "commitAuthorOld": "Boxuan Li",
          "daysBetweenCommits": 54.44,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,7 @@\n-    private static List\u003cPattern\u003e getExclusions(CommandLine commandLine) {\n-        final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n-\n-        if (commandLine.hasOption(OPTION_E_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_E_NAME)) {\n-                result.add(Pattern.compile(\"^\" + Pattern.quote(new File(value).getAbsolutePath())\n-                        + \"$\"));\n-            }\n-        }\n-        if (commandLine.hasOption(OPTION_X_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_X_NAME)) {\n-                result.add(Pattern.compile(value));\n-            }\n-        }\n-\n-        return result;\n-    }\n\\ No newline at end of file\n+        private List\u003cPattern\u003e getExclusions() {\n+            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n+            exclude.forEach(file -\u003e result.add(\n+                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n+            result.addAll(excludeRegex);\n+            return result;\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        private List\u003cPattern\u003e getExclusions() {\n            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n            exclude.forEach(file -\u003e result.add(\n                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n            result.addAll(excludeRegex);\n            return result;\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
          "commitDate": "29/10/18 4:33 PM",
          "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
          "commitAuthor": "Remko Popma",
          "commitDateOld": "05/09/18 5:54 AM",
          "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
          "commitAuthorOld": "Boxuan Li",
          "daysBetweenCommits": 54.44,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,7 @@\n-    private static List\u003cPattern\u003e getExclusions(CommandLine commandLine) {\n-        final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n-\n-        if (commandLine.hasOption(OPTION_E_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_E_NAME)) {\n-                result.add(Pattern.compile(\"^\" + Pattern.quote(new File(value).getAbsolutePath())\n-                        + \"$\"));\n-            }\n-        }\n-        if (commandLine.hasOption(OPTION_X_NAME)) {\n-            for (String value : commandLine.getOptionValues(OPTION_X_NAME)) {\n-                result.add(Pattern.compile(value));\n-            }\n-        }\n-\n-        return result;\n-    }\n\\ No newline at end of file\n+        private List\u003cPattern\u003e getExclusions() {\n+            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n+            exclude.forEach(file -\u003e result.add(\n+                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n+            result.addAll(excludeRegex);\n+            return result;\n+        }\n\\ No newline at end of file\n",
          "actualSource": "        private List\u003cPattern\u003e getExclusions() {\n            final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n            exclude.forEach(file -\u003e result.add(\n                    Pattern.compile(\"^\" + Pattern.quote(file.getAbsolutePath()) + \"$\")));\n            result.addAll(excludeRegex);\n            return result;\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
      "commitDate": "26/07/16 7:55 PM",
      "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
      "commitAuthor": "rnveach",
      "diff": "@@ -0,0 +1,17 @@\n+    private static List\u003cPattern\u003e getExclusions(CommandLine commandLine) {\n+        final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n+\n+        if (commandLine.hasOption(OPTION_E_NAME)) {\n+            for (String value : commandLine.getOptionValues(OPTION_E_NAME)) {\n+                result.add(Pattern.compile(\"^\" + Pattern.quote(new File(value).getAbsolutePath())\n+                        + \"$\"));\n+            }\n+        }\n+        if (commandLine.hasOption(OPTION_X_NAME)) {\n+            for (String value : commandLine.getOptionValues(OPTION_X_NAME)) {\n+                result.add(Pattern.compile(value));\n+            }\n+        }\n+\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cPattern\u003e getExclusions(CommandLine commandLine) {\n        final List\u003cPattern\u003e result \u003d new ArrayList\u003c\u003e();\n\n        if (commandLine.hasOption(OPTION_E_NAME)) {\n            for (String value : commandLine.getOptionValues(OPTION_E_NAME)) {\n                result.add(Pattern.compile(\"^\" + Pattern.quote(new File(value).getAbsolutePath())\n                        + \"$\"));\n            }\n        }\n        if (commandLine.hasOption(OPTION_X_NAME)) {\n            for (String value : commandLine.getOptionValues(OPTION_X_NAME)) {\n                result.add(Pattern.compile(value));\n            }\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java"
    }
  }
}