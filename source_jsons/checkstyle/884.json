{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParseTreeTableModel.java",
  "functionName": "fireTreeStructureChanged",
  "functionId": "fireTreeStructureChanged___source-Object__path-Object[]__childIndices-int[]__children-Object",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java",
  "functionStartLine": 173,
  "functionEndLine": 191,
  "numCommitsSeen": 52,
  "timeTaken": 2209,
  "changeHistory": [
    "c2d5b41fb48cc2b913a2a04d2b68aa4369acac6a",
    "8d5807a3dcbeb32b2289c7adea8ddd011588253f",
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
    "5f5142b2325051f9ed31130167c73d154d547211",
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b6d3766e73e2b1c2f7d2069c4e50c8071624e62a",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8"
  ],
  "changeHistoryShort": {
    "c2d5b41fb48cc2b913a2a04d2b68aa4369acac6a": "Ymodifierchange",
    "8d5807a3dcbeb32b2289c7adea8ddd011588253f": "Ymodifierchange",
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33": "Ymovefromfile",
    "5f5142b2325051f9ed31130167c73d154d547211": "Ybodychange",
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": "Ymodifierchange",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": "Yparameterchange",
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b6d3766e73e2b1c2f7d2069c4e50c8071624e62a": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2d5b41fb48cc2b913a2a04d2b68aa4369acac6a": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #957: Resolve PMD DefaultPackage rule problems in gui package\n",
      "commitDate": "16/02/16 1:34 PM",
      "commitName": "c2d5b41fb48cc2b913a2a04d2b68aa4369acac6a",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "08/02/16 12:56 PM",
      "commitNameOld": "07523b8de2b62b79677574b7528355763cd211f9",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 8.03,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    final void fireTreeStructureChanged(Object source, Object[] path,\n+    private void fireTreeStructureChanged(Object source, Object[] path,\n                                   int[] childIndices,\n                                   Object... children) {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent event \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (event \u003d\u003d null) {\n                     event \u003d new TreeModelEvent(source, path,\n                         childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void fireTreeStructureChanged(Object source, Object[] path,\n                                  int[] childIndices,\n                                  Object... children) {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent event \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (event \u003d\u003d null) {\n                    event \u003d new TreeModelEvent(source, path,\n                        childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java",
      "extendedDetails": {
        "oldValue": "[final]",
        "newValue": "[private]"
      }
    },
    "8d5807a3dcbeb32b2289c7adea8ddd011588253f": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #2661: Enforce OverridableMethodInConstructor of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "19/12/15 5:31 AM",
      "commitName": "8d5807a3dcbeb32b2289c7adea8ddd011588253f",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "08/12/15 5:39 AM",
      "commitNameOld": "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 10.99,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    void fireTreeStructureChanged(Object source, Object[] path,\n+    final void fireTreeStructureChanged(Object source, Object[] path,\n                                   int[] childIndices,\n                                   Object... children) {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent event \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (event \u003d\u003d null) {\n                     event \u003d new TreeModelEvent(source, path,\n                         childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    final void fireTreeStructureChanged(Object source, Object[] path,\n                                  int[] childIndices,\n                                  Object... children) {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent event \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (event \u003d\u003d null) {\n                    event \u003d new TreeModelEvent(source, path,\n                        childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[final]"
      }
    },
    "af4ecbf9b557808a05c7b84820b4ffd28990ee33": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #2609: Drop abstract class and interface in gui package\n",
      "commitDate": "08/12/15 5:39 AM",
      "commitName": "af4ecbf9b557808a05c7b84820b4ffd28990ee33",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "08/12/15 5:34 AM",
      "commitNameOld": "6ca2d5279ea5b03dfa91167a9001d55cca5db65d",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     void fireTreeStructureChanged(Object source, Object[] path,\n-            int[] childIndices,\n-            Object... children) {\n+                                  int[] childIndices,\n+                                  Object... children) {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent event \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (event \u003d\u003d null) {\n                     event \u003d new TreeModelEvent(source, path,\n-                            childIndices, children);\n+                        childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void fireTreeStructureChanged(Object source, Object[] path,\n                                  int[] childIndices,\n                                  Object... children) {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent event \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (event \u003d\u003d null) {\n                    event \u003d new TreeModelEvent(source, path,\n                        childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ParseTreeTableModel.java",
        "oldMethodName": "fireTreeStructureChanged",
        "newMethodName": "fireTreeStructureChanged"
      }
    },
    "5f5142b2325051f9ed31130167c73d154d547211": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": "06/10/15 7:33 PM",
      "commitName": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "31/08/15 9:37 PM",
      "commitNameOld": "3cef81032c4d94b80c7d0780a934f94a988b7290",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 35.91,
      "commitsBetweenForRepo": 217,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n             Object... children) {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n-        TreeModelEvent e \u003d null;\n+        TreeModelEvent event \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n-                if (e \u003d\u003d null) {\n-                    e \u003d new TreeModelEvent(source, path,\n+                if (event \u003d\u003d null) {\n+                    event \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n                 }\n-                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n+                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object... children) {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent event \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (event \u003d\u003d null) {\n                    event \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(event);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {}
    },
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": {
      "type": "Ymodifierchange",
      "commitMessage": "Decrease visibility of fields and methods where applicable. #1555\n\nFixes some `WeakerAccess` inspection violations.\n\nDescription:\n\u003eThis inspection reports all fields, methods or classes, found in the specified inspection scope, that may have their access modifier narrowed down.\n",
      "commitDate": "27/08/15 12:52 PM",
      "commitName": "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "25/08/15 4:39 AM",
      "commitNameOld": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    protected void fireTreeStructureChanged(Object source, Object[] path,\n+    void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n             Object... children) {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent e \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (e \u003d\u003d null) {\n                     e \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object... children) {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null) {\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[]"
      }
    },
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations from UseVarargs rule, issue #999\n\nThe changes are fully backward-compatible. Method with vararg can be invoked both using array and list of parameters.\n",
      "commitDate": "29/04/15 5:21 PM",
      "commitName": "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/03/15 12:07 PM",
      "commitNameOld": "a8a721f278e9ccf120cc7bce6f337ca5a98aaf88",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 42.22,
      "commitsBetweenForRepo": 187,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     protected void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n-            Object[] children)\n+            Object... children)\n     {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent e \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (e \u003d\u003d null) {\n                     e \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object... children)\n    {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null) {\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {
        "oldValue": "[source-Object, path-Object[], childIndices-int[], children-Object[]]",
        "newValue": "[source-Object, path-Object[], childIndices-int[], children-Object]"
      }
    },
    "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, gui, #512\n",
      "commitDate": "19/01/15 6:27 AM",
      "commitName": "eddd0de3702b944a07cc8d2fbfb5744b7cc70bea",
      "commitAuthor": "alexkravin",
      "commitDateOld": "14/12/14 10:33 PM",
      "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 35.33,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     protected void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n             Object[] children)\n     {\n         // Guaranteed to return a non-null array\n-        final Object[] listeners \u003d mListenerList.getListenerList();\n+        final Object[] listeners \u003d listenerList.getListenerList();\n         TreeModelEvent e \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (e \u003d\u003d null) {\n                     e \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n                 }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object[] children)\n    {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d listenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null) {\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object[] children)\n    {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d mListenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null) {\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java"
      }
    },
    "b6d3766e73e2b1c2f7d2069c4e50c8071624e62a": {
      "type": "Ybodychange",
      "commitMessage": "updated Sun license for bug #2778850\n",
      "commitDate": "05/05/09 4:55 PM",
      "commitName": "b6d3766e73e2b1c2f7d2069c4e50c8071624e62a",
      "commitAuthor": "Travis Schneeberger",
      "commitDateOld": "01/07/08 8:16 PM",
      "commitNameOld": "d2af4accdde3eac0a2103353f490e97bf62f61d2",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 307.86,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     protected void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n             Object[] children)\n     {\n         // Guaranteed to return a non-null array\n         final Object[] listeners \u003d mListenerList.getListenerList();\n         TreeModelEvent e \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n-                if (e \u003d\u003d null)\n+                if (e \u003d\u003d null) {\n                     e \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n+                }\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object[] children)\n    {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d mListenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null) {\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                }\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:33 PM",
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     protected void fireTreeStructureChanged(Object source, Object[] path,\n             int[] childIndices,\n             Object[] children)\n     {\n         // Guaranteed to return a non-null array\n-        Object[] listeners \u003d mListenerList.getListenerList();\n+        final Object[] listeners \u003d mListenerList.getListenerList();\n         TreeModelEvent e \u003d null;\n         // Process the listeners last to first, notifying\n         // those that are interested in this event\n         for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n             if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                 // Lazily create the event:\n                 if (e \u003d\u003d null)\n                     e \u003d new TreeModelEvent(source, path,\n                             childIndices, children);\n                 ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object[] children)\n    {\n        // Guaranteed to return a non-null array\n        final Object[] listeners \u003d mListenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null)\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java",
      "extendedDetails": {}
    },
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8": {
      "type": "Yintroduced",
      "commitMessage": "Added initial GUI.\n\nOliver, please check that the file headers do not\nlead to license problems with Sun - maybe we need to remove\nour own header and exclude the gui package from the run.checkstyle\ntarget?\n",
      "commitDate": "16/10/02 5:13 PM",
      "commitName": "d3433c91e0a791b0d1f44bf1975e930e15ed74b8",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,19 @@\n+    protected void fireTreeStructureChanged(Object source, Object[] path,\n+            int[] childIndices,\n+            Object[] children)\n+    {\n+        // Guaranteed to return a non-null array\n+        Object[] listeners \u003d mListenerList.getListenerList();\n+        TreeModelEvent e \u003d null;\n+        // Process the listeners last to first, notifying\n+        // those that are interested in this event\n+        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n+            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n+                // Lazily create the event:\n+                if (e \u003d\u003d null)\n+                    e \u003d new TreeModelEvent(source, path,\n+                            childIndices, children);\n+                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void fireTreeStructureChanged(Object source, Object[] path,\n            int[] childIndices,\n            Object[] children)\n    {\n        // Guaranteed to return a non-null array\n        Object[] listeners \u003d mListenerList.getListenerList();\n        TreeModelEvent e \u003d null;\n        // Process the listeners last to first, notifying\n        // those that are interested in this event\n        for (int i \u003d listeners.length - 2; i \u003e\u003d 0; i -\u003d 2) {\n            if (listeners[i] \u003d\u003d TreeModelListener.class) {\n                // Lazily create the event:\n                if (e \u003d\u003d null)\n                    e \u003d new TreeModelEvent(source, path,\n                            childIndices, children);\n                ((TreeModelListener) listeners[i + 1]).treeStructureChanged(e);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/AbstractTreeTableModel.java"
    }
  }
}