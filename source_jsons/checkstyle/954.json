{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaParser.java",
  "functionName": "createSlCommentNode",
  "functionId": "createSlCommentNode___token-Token",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
  "functionStartLine": 227,
  "functionEndLine": 247,
  "numCommitsSeen": 125,
  "timeTaken": 3065,
  "changeHistory": [
    "45e7e369f5be02806597bbd1a61f64c50d90bae2",
    "58327e1dd9707b09f82ae2d4d4ce14c253247154",
    "7fb0cf6870124032136b06eb7572a1de1b92e87a",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d"
  ],
  "changeHistoryShort": {
    "45e7e369f5be02806597bbd1a61f64c50d90bae2": "Ybodychange",
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": "Ymovefromfile",
    "7fb0cf6870124032136b06eb7572a1de1b92e87a": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "45e7e369f5be02806597bbd1a61f64c50d90bae2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3417: split DetailAST between interface and implementation",
      "commitDate": "07/05/19 4:48 AM",
      "commitName": "45e7e369f5be02806597bbd1a61f64c50d90bae2",
      "commitAuthor": "rnveach",
      "commitDateOld": "16/03/19 10:12 AM",
      "commitNameOld": "2d090fea7d388d22aac510a859dcced5b4ab13c0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 51.78,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static DetailAST createSlCommentNode(Token token) {\n-        final DetailAST slComment \u003d new DetailAST();\n+        final DetailAstImpl slComment \u003d new DetailAstImpl();\n         slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n         slComment.setText(\"//\");\n \n         // column counting begins from 0\n         slComment.setColumnNo(token.getColumn() - 1);\n         slComment.setLineNo(token.getLine());\n \n-        final DetailAST slCommentContent \u003d new DetailAST();\n+        final DetailAstImpl slCommentContent \u003d new DetailAstImpl();\n         slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n \n         // column counting begins from 0\n         // plus length of \u0027//\u0027\n         slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n         slCommentContent.setLineNo(token.getLine());\n         slCommentContent.setText(token.getText());\n \n         slComment.addChild(slCommentContent);\n         return slComment;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST createSlCommentNode(Token token) {\n        final DetailAstImpl slComment \u003d new DetailAstImpl();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(token.getColumn() - 1);\n        slComment.setLineNo(token.getLine());\n\n        final DetailAstImpl slCommentContent \u003d new DetailAstImpl();\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(token.getLine());\n        slCommentContent.setText(token.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
      "extendedDetails": {}
    },
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
      "commitDate": "23/01/18 10:39 PM",
      "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "22/01/18 5:54 PM",
      "commitNameOld": "9bcb6bffd03dc4f42f402bd126f22c730007861a",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static DetailAST createSlCommentNode(Token token) {\n        final DetailAST slComment \u003d new DetailAST();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(token.getColumn() - 1);\n        slComment.setLineNo(token.getLine());\n\n        final DetailAST slCommentContent \u003d new DetailAST();\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(token.getLine());\n        slCommentContent.setText(token.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
        "oldMethodName": "createSlCommentNode",
        "newMethodName": "createSlCommentNode"
      }
    },
    "7fb0cf6870124032136b06eb7572a1de1b92e87a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4398: increase coverage of pitest-checkstyle-tree-walker profile to 94%\n",
      "commitDate": "07/07/17 5:59 AM",
      "commitName": "7fb0cf6870124032136b06eb7572a1de1b92e87a",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "06/07/17 1:22 PM",
      "commitNameOld": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 0.69,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private static DetailAST createSlCommentNode(Token token) {\n         final DetailAST slComment \u003d new DetailAST();\n         slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n         slComment.setText(\"//\");\n \n         // column counting begins from 0\n         slComment.setColumnNo(token.getColumn() - 1);\n         slComment.setLineNo(token.getLine());\n \n         final DetailAST slCommentContent \u003d new DetailAST();\n-        slCommentContent.initialize(token);\n         slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n \n         // column counting begins from 0\n         // plus length of \u0027//\u0027\n         slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n         slCommentContent.setLineNo(token.getLine());\n         slCommentContent.setText(token.getText());\n \n         slComment.addChild(slCommentContent);\n         return slComment;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST createSlCommentNode(Token token) {\n        final DetailAST slComment \u003d new DetailAST();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(token.getColumn() - 1);\n        slComment.setLineNo(token.getLine());\n\n        final DetailAST slCommentContent \u003d new DetailAST();\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(token.getLine());\n        slCommentContent.setText(token.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-    private static DetailAST createSlCommentNode(Token aToken)\n+    private static DetailAST createSlCommentNode(Token token)\n     {\n         final DetailAST slComment \u003d new DetailAST();\n         slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n         slComment.setText(\"//\");\n \n         // column counting begins from 0\n-        slComment.setColumnNo(aToken.getColumn() - 1);\n-        slComment.setLineNo(aToken.getLine());\n+        slComment.setColumnNo(token.getColumn() - 1);\n+        slComment.setLineNo(token.getLine());\n \n         final DetailAST slCommentContent \u003d new DetailAST();\n-        slCommentContent.initialize(aToken);\n+        slCommentContent.initialize(token);\n         slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n \n         // column counting begins from 0\n         // plus length of \u0027//\u0027\n-        slCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);\n-        slCommentContent.setLineNo(aToken.getLine());\n-        slCommentContent.setText(aToken.getText());\n+        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n+        slCommentContent.setLineNo(token.getLine());\n+        slCommentContent.setText(token.getText());\n \n         slComment.addChild(slCommentContent);\n         return slComment;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST createSlCommentNode(Token token)\n    {\n        final DetailAST slComment \u003d new DetailAST();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(token.getColumn() - 1);\n        slComment.setLineNo(token.getLine());\n\n        final DetailAST slCommentContent \u003d new DetailAST();\n        slCommentContent.initialize(token);\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(token.getLine());\n        slCommentContent.setText(token.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {
            "oldValue": "[aToken-Token]",
            "newValue": "[token-Token]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-    private static DetailAST createSlCommentNode(Token aToken)\n+    private static DetailAST createSlCommentNode(Token token)\n     {\n         final DetailAST slComment \u003d new DetailAST();\n         slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n         slComment.setText(\"//\");\n \n         // column counting begins from 0\n-        slComment.setColumnNo(aToken.getColumn() - 1);\n-        slComment.setLineNo(aToken.getLine());\n+        slComment.setColumnNo(token.getColumn() - 1);\n+        slComment.setLineNo(token.getLine());\n \n         final DetailAST slCommentContent \u003d new DetailAST();\n-        slCommentContent.initialize(aToken);\n+        slCommentContent.initialize(token);\n         slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n \n         // column counting begins from 0\n         // plus length of \u0027//\u0027\n-        slCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);\n-        slCommentContent.setLineNo(aToken.getLine());\n-        slCommentContent.setText(aToken.getText());\n+        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n+        slCommentContent.setLineNo(token.getLine());\n+        slCommentContent.setText(token.getText());\n \n         slComment.addChild(slCommentContent);\n         return slComment;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST createSlCommentNode(Token token)\n    {\n        final DetailAST slComment \u003d new DetailAST();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(token.getColumn() - 1);\n        slComment.setLineNo(token.getLine());\n\n        final DetailAST slCommentContent \u003d new DetailAST();\n        slCommentContent.initialize(token);\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(token.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(token.getLine());\n        slCommentContent.setText(token.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {}
        }
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": "17/10/14 10:19 PM",
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,23 @@\n+    private static DetailAST createSlCommentNode(Token aToken)\n+    {\n+        final DetailAST slComment \u003d new DetailAST();\n+        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n+        slComment.setText(\"//\");\n+\n+        // column counting begins from 0\n+        slComment.setColumnNo(aToken.getColumn() - 1);\n+        slComment.setLineNo(aToken.getLine());\n+\n+        final DetailAST slCommentContent \u003d new DetailAST();\n+        slCommentContent.initialize(aToken);\n+        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n+\n+        // column counting begins from 0\n+        // plus length of \u0027//\u0027\n+        slCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);\n+        slCommentContent.setLineNo(aToken.getLine());\n+        slCommentContent.setText(aToken.getText());\n+\n+        slComment.addChild(slCommentContent);\n+        return slComment;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST createSlCommentNode(Token aToken)\n    {\n        final DetailAST slComment \u003d new DetailAST();\n        slComment.setType(TokenTypes.SINGLE_LINE_COMMENT);\n        slComment.setText(\"//\");\n\n        // column counting begins from 0\n        slComment.setColumnNo(aToken.getColumn() - 1);\n        slComment.setLineNo(aToken.getLine());\n\n        final DetailAST slCommentContent \u003d new DetailAST();\n        slCommentContent.initialize(aToken);\n        slCommentContent.setType(TokenTypes.COMMENT_CONTENT);\n\n        // column counting begins from 0\n        // plus length of \u0027//\u0027\n        slCommentContent.setColumnNo(aToken.getColumn() - 1 + 2);\n        slCommentContent.setLineNo(aToken.getLine());\n        slCommentContent.setText(aToken.getText());\n\n        slComment.addChild(slCommentContent);\n        return slComment;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java"
    }
  }
}