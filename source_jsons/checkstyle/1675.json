{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalInstantiationCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
  "functionStartLine": 141,
  "functionEndLine": 158,
  "numCommitsSeen": 113,
  "timeTaken": 1797,
  "changeHistory": [
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "5382d84917662340da1d4c52c4e20af4f39a793e",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3"
  ],
  "changeHistoryShort": {
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "5382d84917662340da1d4c52c4e20af4f39a793e": "Ybodychange",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.LITERAL_NEW:\n-            processLiteralNew(aAST);\n+            processLiteralNew(ast);\n             break;\n         case TokenTypes.PACKAGE_DEF:\n-            processPackageDef(aAST);\n+            processPackageDef(ast);\n             break;\n         case TokenTypes.IMPORT:\n-            processImport(aAST);\n+            processImport(ast);\n             break;\n         case TokenTypes.CLASS_DEF:\n-            processClassDef(aAST);\n+            processClassDef(ast);\n             break;\n         default:\n-            throw new IllegalArgumentException(\"Unknown type \" + aAST);\n+            throw new IllegalArgumentException(\"Unknown type \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.LITERAL_NEW:\n            processLiteralNew(ast);\n            break;\n        case TokenTypes.PACKAGE_DEF:\n            processPackageDef(ast);\n            break;\n        case TokenTypes.IMPORT:\n            processImport(ast);\n            break;\n        case TokenTypes.CLASS_DEF:\n            processClassDef(ast);\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unknown type \" + ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.LITERAL_NEW:\n-            processLiteralNew(aAST);\n+            processLiteralNew(ast);\n             break;\n         case TokenTypes.PACKAGE_DEF:\n-            processPackageDef(aAST);\n+            processPackageDef(ast);\n             break;\n         case TokenTypes.IMPORT:\n-            processImport(aAST);\n+            processImport(ast);\n             break;\n         case TokenTypes.CLASS_DEF:\n-            processClassDef(aAST);\n+            processClassDef(ast);\n             break;\n         default:\n-            throw new IllegalArgumentException(\"Unknown type \" + aAST);\n+            throw new IllegalArgumentException(\"Unknown type \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.LITERAL_NEW:\n            processLiteralNew(ast);\n            break;\n        case TokenTypes.PACKAGE_DEF:\n            processPackageDef(ast);\n            break;\n        case TokenTypes.IMPORT:\n            processImport(ast);\n            break;\n        case TokenTypes.CLASS_DEF:\n            processClassDef(ast);\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unknown type \" + ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.LITERAL_NEW:\n            processLiteralNew(aAST);\n            break;\n        case TokenTypes.PACKAGE_DEF:\n            processPackageDef(aAST);\n            break;\n        case TokenTypes.IMPORT:\n            processImport(aAST);\n            break;\n        case TokenTypes.CLASS_DEF:\n            processClassDef(aAST);\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unknown type \" + aAST);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
      }
    },
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug #772832, Confusion about class named \u0027Boolean\u0027\n",
      "commitDate": "03/08/03 6:22 AM",
      "commitName": "bb1db4938ccae0f7149461ea372398fb8a53f2a8",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "23/06/03 6:31 AM",
      "commitNameOld": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 40.99,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n         case TokenTypes.LITERAL_NEW:\n             processLiteralNew(aAST);\n             break;\n         case TokenTypes.PACKAGE_DEF:\n             processPackageDef(aAST);\n             break;\n         case TokenTypes.IMPORT:\n             processImport(aAST);\n             break;\n+        case TokenTypes.CLASS_DEF:\n+            processClassDef(aAST);\n+            break;\n         default:\n             throw new IllegalArgumentException(\"Unknown type \" + aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.LITERAL_NEW:\n            processLiteralNew(aAST);\n            break;\n        case TokenTypes.PACKAGE_DEF:\n            processPackageDef(aAST);\n            break;\n        case TokenTypes.IMPORT:\n            processImport(aAST);\n            break;\n        case TokenTypes.CLASS_DEF:\n            processClassDef(aAST);\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unknown type \" + aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.LITERAL_NEW:\n            processLiteralNew(aAST);\n            break;\n        case TokenTypes.PACKAGE_DEF:\n            processPackageDef(aAST);\n            break;\n        case TokenTypes.IMPORT:\n            processImport(aAST);\n            break;\n        default:\n            throw new IllegalArgumentException(\"Unknown type \" + aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
      }
    },
    "5382d84917662340da1d4c52c4e20af4f39a793e": {
      "type": "Ybodychange",
      "commitMessage": "Fix errors found by the new check.\n",
      "commitDate": "18/04/03 4:22 AM",
      "commitName": "5382d84917662340da1d4c52c4e20af4f39a793e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "18/04/03 4:14 AM",
      "commitNameOld": "cd6e8a32d28ec94eefbf016638f6cc7d2662517a",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n             case TokenTypes.LITERAL_NEW:\n                 processLiteralNew(aAST);\n                 break;\n             case TokenTypes.PACKAGE_DEF:\n                 processPackageDef(aAST);\n                 break;\n             case TokenTypes.IMPORT:\n                 processImport(aAST);\n                 break;\n+            default:\n+                throw new IllegalArgumentException(\"Unknown type \" + aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n            case TokenTypes.LITERAL_NEW:\n                processLiteralNew(aAST);\n                break;\n            case TokenTypes.PACKAGE_DEF:\n                processPackageDef(aAST);\n                break;\n            case TokenTypes.IMPORT:\n                processImport(aAST);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type \" + aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": "18/10/02 11:28 PM",
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/10/02 4:41 PM",
      "commitNameOld": "63664e0b012593e18c5bb93ba528f27fd93fe0d4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.28,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n-            case JavaTokenTypes.LITERAL_new:\n+            case TokenTypes.LITERAL_NEW:\n                 processLiteralNew(aAST);\n                 break;\n-            case JavaTokenTypes.PACKAGE_DEF:\n+            case TokenTypes.PACKAGE_DEF:\n                 processPackageDef(aAST);\n                 break;\n-            case JavaTokenTypes.IMPORT:\n+            case TokenTypes.IMPORT:\n                 processImport(aAST);\n                 break;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n            case TokenTypes.LITERAL_NEW:\n                processLiteralNew(aAST);\n                break;\n            case TokenTypes.PACKAGE_DEF:\n                processPackageDef(aAST);\n                break;\n            case TokenTypes.IMPORT:\n                processImport(aAST);\n                break;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3": {
      "type": "Yintroduced",
      "commitMessage": "ported the illegal instantiations check\nstill need to remove the old code\n",
      "commitDate": "29/09/02 12:43 PM",
      "commitName": "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,14 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+            case JavaTokenTypes.LITERAL_new:\n+                processLiteralNew(aAST);\n+                break;\n+            case JavaTokenTypes.PACKAGE_DEF:\n+                processPackageDef(aAST);\n+                break;\n+            case JavaTokenTypes.IMPORT:\n+                processImport(aAST);\n+                break;\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n            case JavaTokenTypes.LITERAL_new:\n                processLiteralNew(aAST);\n                break;\n            case JavaTokenTypes.PACKAGE_DEF:\n                processPackageDef(aAST);\n                break;\n            case JavaTokenTypes.IMPORT:\n                processImport(aAST);\n                break;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java"
    }
  }
}