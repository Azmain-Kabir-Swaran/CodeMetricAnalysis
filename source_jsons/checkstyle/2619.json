{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HandlerFactory.java",
  "functionName": "register",
  "functionId": "register___type-int__handlerClass-Class__T__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
  "functionStartLine": 91,
  "functionEndLine": 100,
  "numCommitsSeen": 134,
  "timeTaken": 3325,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "727d730733cdcb8073754e12997bc36cdefda981",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "8f19f1d70630f210f33ebd51d42d04ca9727ff36",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "0855fff95e4aac170ac5ab74cd1872f20555a214",
    "e464c231eccec72f964131d9aeb5e49982c4b3bb",
    "d1f564190c0e9b57d7534b1a8e2b9d7c35d439e2",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "727d730733cdcb8073754e12997bc36cdefda981": "Ymultichange(Yparameterchange,Ybodychange)",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "8f19f1d70630f210f33ebd51d42d04ca9727ff36": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Ybodychange",
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": "Ybodychange",
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ymultichange(Yparameterchange,Ybodychange)",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "0855fff95e4aac170ac5ab74cd1872f20555a214": "Ybodychange",
    "e464c231eccec72f964131d9aeb5e49982c4b3bb": "Ybodychange",
    "d1f564190c0e9b57d7534b1a8e2b9d7c35d439e2": "Ybodychange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymovefromfile",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n-        final Constructor\u003cT\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n+        final Constructor\u003cT\u003e ctor \u003d CommonUtil.getConstructor(handlerClass,\n                 IndentationCheck.class,\n                 // current AST\n                 DetailAST.class,\n                 // parent\n                 AbstractExpressionHandler.class\n         );\n         typeHandlers.put(type, ctor);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n        final Constructor\u003cT\u003e ctor \u003d CommonUtil.getConstructor(handlerClass,\n                IndentationCheck.class,\n                // current AST\n                DetailAST.class,\n                // parent\n                AbstractExpressionHandler.class\n        );\n        typeHandlers.put(type, ctor);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "727d730733cdcb8073754e12997bc36cdefda981": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #2661: Enforce ForbidWildcardAsReturnType of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "22/12/15 12:39 PM",
      "commitName": "727d730733cdcb8073754e12997bc36cdefda981",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #2661: Enforce ForbidWildcardAsReturnType of sevntu-checkstyle over Checkstyle source code\n",
          "commitDate": "22/12/15 12:39 PM",
          "commitName": "727d730733cdcb8073754e12997bc36cdefda981",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "18/10/15 6:04 AM",
          "commitNameOld": "f14025ac008f8a2ef506b9e7cfcc820c637d28d5",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 65.32,
          "commitsBetweenForRepo": 337,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private void register(int type, Class\u003c?\u003e handlerClass) {\n-        final Constructor\u003c?\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n+    private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n+        final Constructor\u003cT\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                 IndentationCheck.class,\n                 // current AST\n                 DetailAST.class,\n                 // parent\n                 AbstractExpressionHandler.class\n         );\n         typeHandlers.put(type, ctor);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n        final Constructor\u003cT\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                IndentationCheck.class,\n                // current AST\n                DetailAST.class,\n                // parent\n                AbstractExpressionHandler.class\n        );\n        typeHandlers.put(type, ctor);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {
            "oldValue": "[type-int, handlerClass-Class\u003c?\u003e]",
            "newValue": "[type-int, handlerClass-Class\u003cT\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #2661: Enforce ForbidWildcardAsReturnType of sevntu-checkstyle over Checkstyle source code\n",
          "commitDate": "22/12/15 12:39 PM",
          "commitName": "727d730733cdcb8073754e12997bc36cdefda981",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "18/10/15 6:04 AM",
          "commitNameOld": "f14025ac008f8a2ef506b9e7cfcc820c637d28d5",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 65.32,
          "commitsBetweenForRepo": 337,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private void register(int type, Class\u003c?\u003e handlerClass) {\n-        final Constructor\u003c?\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n+    private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n+        final Constructor\u003cT\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                 IndentationCheck.class,\n                 // current AST\n                 DetailAST.class,\n                 // parent\n                 AbstractExpressionHandler.class\n         );\n         typeHandlers.put(type, ctor);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private \u003cT\u003e void register(int type, Class\u003cT\u003e handlerClass) {\n        final Constructor\u003cT\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                IndentationCheck.class,\n                // current AST\n                DetailAST.class,\n                // parent\n                AbstractExpressionHandler.class\n        );\n        typeHandlers.put(type, ctor);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private void register(int type, Class\u003c?\u003e handlerClass) {\n-        final Constructor\u003c?\u003e ctor \u003d Utils.getConstructor(handlerClass,\n+        final Constructor\u003c?\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                 IndentationCheck.class,\n                 // current AST\n                 DetailAST.class,\n                 // parent\n                 AbstractExpressionHandler.class\n         );\n         typeHandlers.put(type, ctor);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass) {\n        final Constructor\u003c?\u003e ctor \u003d CommonUtils.getConstructor(handlerClass,\n                IndentationCheck.class,\n                // current AST\n                DetailAST.class,\n                // parent\n                AbstractExpressionHandler.class\n        );\n        typeHandlers.put(type, ctor);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "8f19f1d70630f210f33ebd51d42d04ca9727ff36": {
      "type": "Ybodychange",
      "commitMessage": "Remove non-testable reflection code from HandlerFactory. #1270\n\nIn `HandlerFactory` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new methods in utils are provided to wrap any checked exceptions into unchecked ones.\n",
      "commitDate": "08/07/15 6:32 PM",
      "commitName": "8f19f1d70630f210f33ebd51d42d04ca9727ff36",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/06/15 10:52 AM",
      "commitNameOld": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 20.32,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,8 @@\n     private void register(int type, Class\u003c?\u003e handlerClass) {\n-        try {\n-            final Constructor\u003c?\u003e ctor \u003d handlerClass\n-                .getConstructor(new Class[] {IndentationCheck.class,\n-                    DetailAST.class, // current AST\n-                    AbstractExpressionHandler.class, // parent\n-                });\n-            typeHandlers.put(type, ctor);\n-        }\n-        catch (final NoSuchMethodException | SecurityException e) {\n-            final String message \u003d \"couldn\u0027t find ctor for \" + handlerClass;\n-            LOG.debug(message, e);\n-            throw new RuntimeException(message);\n-        }\n+        final Constructor\u003c?\u003e ctor \u003d Utils.getConstructor(handlerClass,\n+                IndentationCheck.class,\n+                DetailAST.class, // current AST\n+                AbstractExpressionHandler.class // parent\n+        );\n+        typeHandlers.put(type, ctor);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass) {\n        final Constructor\u003c?\u003e ctor \u003d Utils.getConstructor(handlerClass,\n                IndentationCheck.class,\n                DetailAST.class, // current AST\n                AbstractExpressionHandler.class // parent\n        );\n        typeHandlers.put(type, ctor);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 32.25,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void register(int type, Class\u003c?\u003e handlerClass) {\n         try {\n             final Constructor\u003c?\u003e ctor \u003d handlerClass\n                 .getConstructor(new Class[] {IndentationCheck.class,\n                     DetailAST.class, // current AST\n-                    ExpressionHandler.class, // parent\n+                    AbstractExpressionHandler.class, // parent\n                 });\n             typeHandlers.put(type, ctor);\n         }\n         catch (final NoSuchMethodException | SecurityException e) {\n             final String message \u003d \"couldn\u0027t find ctor for \" + handlerClass;\n             LOG.debug(message, e);\n             throw new RuntimeException(message);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass) {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                .getConstructor(new Class[] {IndentationCheck.class,\n                    DetailAST.class, // current AST\n                    AbstractExpressionHandler.class, // parent\n                });\n            typeHandlers.put(type, ctor);\n        }\n        catch (final NoSuchMethodException | SecurityException e) {\n            final String message \u003d \"couldn\u0027t find ctor for \" + handlerClass;\n            LOG.debug(message, e);\n            throw new RuntimeException(message);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027logging-jakarta\u0027 ruleset, issue #871\n",
      "commitDate": "13/04/15 2:43 PM",
      "commitName": "ee518dfe86b29d1fa4d76f0dc0c11fb83afafda1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "21/03/15 3:35 PM",
      "commitNameOld": "91d979ef8eab8d8f6fe5e5b64ec0586b49ea0315",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 22.96,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,16 @@\n     private void register(int type, Class\u003c?\u003e handlerClass)\n     {\n         try {\n             final Constructor\u003c?\u003e ctor \u003d handlerClass\n                     .getConstructor(new Class[] {IndentationCheck.class,\n                         DetailAST.class, // current AST\n                         ExpressionHandler.class, // parent\n                     });\n             typeHandlers.put(type, ctor);\n         }\n-        catch (final NoSuchMethodException e) {\n-            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + handlerClass);\n-        }\n-        catch (final SecurityException e) {\n-            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n-            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + handlerClass);\n+        catch (final NoSuchMethodException | SecurityException e) {\n+            final String message \u003d \"couldn\u0027t find ctor for \" + handlerClass;\n+            LOG.debug(message, e);\n+            throw new RuntimeException(message);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            typeHandlers.put(type, ctor);\n        }\n        catch (final NoSuchMethodException | SecurityException e) {\n            final String message \u003d \"couldn\u0027t find ctor for \" + handlerClass;\n            LOG.debug(message, e);\n            throw new RuntimeException(message);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "9f2bf96b2001eb2e3886950a41e076c8a01d57d8": {
      "type": "Ybodychange",
      "commitMessage": "Delete ///CLOVER comments\n\nIssue #823\n",
      "commitDate": "20/03/15 12:57 PM",
      "commitName": "9f2bf96b2001eb2e3886950a41e076c8a01d57d8",
      "commitAuthor": "Damian Szczepanik",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 9.93,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     private void register(int type, Class\u003c?\u003e handlerClass)\n     {\n         try {\n             final Constructor\u003c?\u003e ctor \u003d handlerClass\n                     .getConstructor(new Class[] {IndentationCheck.class,\n                         DetailAST.class, // current AST\n                         ExpressionHandler.class, // parent\n                     });\n             typeHandlers.put(type, ctor);\n         }\n-        ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + handlerClass);\n         }\n         catch (final SecurityException e) {\n             LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + handlerClass);\n         }\n-        ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            typeHandlers.put(type, ctor);\n        }\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/10/14 4:21 PM",
          "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 97.63,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n+    private void register(int type, Class\u003c?\u003e handlerClass)\n     {\n         try {\n-            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n+            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                     .getConstructor(new Class[] {IndentationCheck.class,\n                         DetailAST.class, // current AST\n                         ExpressionHandler.class, // parent\n                     });\n-            mTypeHandlers.put(aType, ctor);\n+            typeHandlers.put(type, ctor);\n         }\n         ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + aHandlerClass);\n+                                       + handlerClass);\n         }\n         catch (final SecurityException e) {\n-            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n+            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + aHandlerClass);\n+                                       + handlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            typeHandlers.put(type, ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n        ///CLOVER:ON\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {
            "oldValue": "[aType-int, aHandlerClass-Class\u003c?\u003e]",
            "newValue": "[type-int, handlerClass-Class\u003c?\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/10/14 4:21 PM",
          "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 97.63,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n+    private void register(int type, Class\u003c?\u003e handlerClass)\n     {\n         try {\n-            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n+            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                     .getConstructor(new Class[] {IndentationCheck.class,\n                         DetailAST.class, // current AST\n                         ExpressionHandler.class, // parent\n                     });\n-            mTypeHandlers.put(aType, ctor);\n+            typeHandlers.put(type, ctor);\n         }\n         ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + aHandlerClass);\n+                                       + handlerClass);\n         }\n         catch (final SecurityException e) {\n-            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n+            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + aHandlerClass);\n+                                       + handlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void register(int type, Class\u003c?\u003e handlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d handlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            typeHandlers.put(type, ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + handlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + handlerClass);\n        }\n        ///CLOVER:ON\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            mTypeHandlers.put(aType, ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java"
      }
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": "20/12/07 3:36 AM",
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "20/12/07 3:08 AM",
      "commitNameOld": "ef58eba6d1b95443ff240ed05634c7e373b3445a",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void register(int aType, Class\u003c?\u003e aHandlerClass)\n     {\n         try {\n             final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n                     .getConstructor(new Class[] {IndentationCheck.class,\n                         DetailAST.class, // current AST\n                         ExpressionHandler.class, // parent\n                     });\n-            mTypeHandlers.put(new Integer(aType), ctor);\n+            mTypeHandlers.put(aType, ctor);\n         }\n         ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         catch (final SecurityException e) {\n             LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            mTypeHandlers.put(aType, ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "15/12/07 12:14 AM",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Finish of adding generics.\n",
          "commitDate": "15/12/07 12:14 AM",
          "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/01/07 6:51 AM",
          "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 321.72,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void register(int aType, Class aHandlerClass)\n+    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n     {\n         try {\n-            final Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n-                IndentationCheck.class,\n-                DetailAST.class,             // current AST\n-                ExpressionHandler.class,     // parent\n-            });\n+            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n+                    .getConstructor(new Class[] {IndentationCheck.class,\n+                        DetailAST.class, // current AST\n+                        ExpressionHandler.class, // parent\n+                    });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n         ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         catch (final SecurityException e) {\n             LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {
            "oldValue": "[aType-int, aHandlerClass-Class]",
            "newValue": "[aType-int, aHandlerClass-Class\u003c?\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Finish of adding generics.\n",
          "commitDate": "15/12/07 12:14 AM",
          "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/01/07 6:51 AM",
          "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 321.72,
          "commitsBetweenForRepo": 33,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void register(int aType, Class aHandlerClass)\n+    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n     {\n         try {\n-            final Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n-                IndentationCheck.class,\n-                DetailAST.class,             // current AST\n-                ExpressionHandler.class,     // parent\n-            });\n+            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n+                    .getConstructor(new Class[] {IndentationCheck.class,\n+                        DetailAST.class, // current AST\n+                        ExpressionHandler.class, // parent\n+                    });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n         ///CLOVER:OFF\n         catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         catch (final SecurityException e) {\n             LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void register(int aType, Class\u003c?\u003e aHandlerClass)\n    {\n        try {\n            final Constructor\u003c?\u003e ctor \u003d aHandlerClass\n                    .getConstructor(new Class[] {IndentationCheck.class,\n                        DetailAST.class, // current AST\n                        ExpressionHandler.class, // parent\n                    });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
          "extendedDetails": {}
        }
      ]
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:33 PM",
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void register(int aType, Class aHandlerClass)\n     {\n         try {\n-            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n+            final Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                 IndentationCheck.class,\n                 DetailAST.class,             // current AST\n                 ExpressionHandler.class,     // parent\n             });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n         ///CLOVER:OFF\n-        catch (NoSuchMethodException e) {\n+        catch (final NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n-        catch (SecurityException e) {\n+        catch (final SecurityException e) {\n             LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class aHandlerClass)\n    {\n        try {\n            final Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                IndentationCheck.class,\n                DetailAST.class,             // current AST\n                ExpressionHandler.class,     // parent\n            });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        ///CLOVER:OFF\n        catch (final NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (final SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "0855fff95e4aac170ac5ab74cd1872f20555a214": {
      "type": "Ybodychange",
      "commitMessage": "Fix for NoSuchMethodError when line wrapped at dot operator (bug 790209)\n",
      "commitDate": "18/08/03 9:54 PM",
      "commitName": "0855fff95e4aac170ac5ab74cd1872f20555a214",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "14/07/03 5:31 AM",
      "commitNameOld": "51dae59b8dcfb5a34f2a8a5b3e788eb6599a1df3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 35.68,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void register(int aType, Class aHandlerClass)\n     {\n         try {\n             Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                 IndentationCheck.class,\n                 DetailAST.class,             // current AST\n                 ExpressionHandler.class,     // parent\n             });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n         ///CLOVER:OFF\n         catch (NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         catch (SecurityException e) {\n+            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n-                                       + aHandlerClass,\n-                                       e);\n+                                       + aHandlerClass);\n         }\n         ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class aHandlerClass)\n    {\n        try {\n            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                IndentationCheck.class,\n                DetailAST.class,             // current AST\n                ExpressionHandler.class,     // parent\n            });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        ///CLOVER:OFF\n        catch (NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (SecurityException e) {\n            LOG.debug(\"couldn\u0027t find ctor for \" + aHandlerClass, e);\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        ///CLOVER:ON\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "e464c231eccec72f964131d9aeb5e49982c4b3bb": {
      "type": "Ybodychange",
      "commitMessage": "Indentation:\nFixes for several TODO comments.\nAdded AssignHandler.\n",
      "commitDate": "14/06/03 10:47 AM",
      "commitName": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/06/03 12:48 AM",
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.42,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n     private void register(int aType, Class aHandlerClass)\n     {\n         try {\n             Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                 IndentationCheck.class,\n                 DetailAST.class,             // current AST\n                 ExpressionHandler.class,     // parent\n             });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n+        ///CLOVER:OFF\n         catch (NoSuchMethodException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass);\n         }\n         catch (SecurityException e) {\n             throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                        + aHandlerClass,\n                                        e);\n         }\n+        ///CLOVER:ON\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class aHandlerClass)\n    {\n        try {\n            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                IndentationCheck.class,\n                DetailAST.class,             // current AST\n                ExpressionHandler.class,     // parent\n            });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        ///CLOVER:OFF\n        catch (NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (SecurityException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass,\n                                       e);\n        }\n        ///CLOVER:ON\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "d1f564190c0e9b57d7534b1a8e2b9d7c35d439e2": {
      "type": "Ybodychange",
      "commitMessage": "Replace error loggin (using System.out) with throwing exception,\nbecause these are real exceptions.\n",
      "commitDate": "16/05/03 11:39 AM",
      "commitName": "d1f564190c0e9b57d7534b1a8e2b9d7c35d439e2",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "14/05/03 1:11 AM",
      "commitNameOld": "a4d63db21d57ab53aff8a467f89df3867518ab91",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.44,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     private void register(int aType, Class aHandlerClass)\n     {\n         try {\n             Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                 IndentationCheck.class,\n                 DetailAST.class,            // current AST\n                 ExpressionHandler.class     // parent\n             });\n             mTypeHandlers.put(new Integer(aType), ctor);\n         }\n         catch (NoSuchMethodException e) {\n-            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n-            System.out.println(\"methods are: \" + Arrays.asList(\n-                aHandlerClass.getConstructors()).toString());\n-            e.printStackTrace();\n+            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n+                                       + aHandlerClass);\n         }\n         catch (SecurityException e) {\n-            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n-            e.printStackTrace();\n+            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n+                                       + aHandlerClass,\n+                                       e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class aHandlerClass)\n    {\n        try {\n            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                IndentationCheck.class,\n                DetailAST.class,            // current AST\n                ExpressionHandler.class     // parent\n            });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        }\n        catch (NoSuchMethodException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass);\n        }\n        catch (SecurityException e) {\n            throw new RuntimeException(\"couldn\u0027t find ctor for \"\n                                       + aHandlerClass,\n                                       e);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {}
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymovefromfile",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": "11/05/03 12:53 AM",
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "11/05/03 12:31 AM",
      "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-        private void register(int aType, Class aHandlerClass) \n-        {\n-            try {\n-                Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n-                    IndentationCheck.class,\n-                    DetailAST.class,            // current AST\n-                    ExpressionHandler.class     // parent\n-                });\n-                mTypeHandlers.put(new Integer(aType), ctor);\n-            } \n-            catch (NoSuchMethodException e) {\n-                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n-                System.out.println(\"methods are: \" + Arrays.asList(\n-                    aHandlerClass.getConstructors()).toString());\n-                e.printStackTrace();\n-            } \n-            catch (SecurityException e) {\n-                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n-                e.printStackTrace();\n-            }\n-        }\n\\ No newline at end of file\n+    private void register(int aType, Class aHandlerClass) \n+    {\n+        try {\n+            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n+                IndentationCheck.class,\n+                DetailAST.class,            // current AST\n+                ExpressionHandler.class     // parent\n+            });\n+            mTypeHandlers.put(new Integer(aType), ctor);\n+        } \n+        catch (NoSuchMethodException e) {\n+            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n+            System.out.println(\"methods are: \" + Arrays.asList(\n+                aHandlerClass.getConstructors()).toString());\n+            e.printStackTrace();\n+        } \n+        catch (SecurityException e) {\n+            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n+            e.printStackTrace();\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void register(int aType, Class aHandlerClass) \n    {\n        try {\n            Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                IndentationCheck.class,\n                DetailAST.class,            // current AST\n                ExpressionHandler.class     // parent\n            });\n            mTypeHandlers.put(new Integer(aType), ctor);\n        } \n        catch (NoSuchMethodException e) {\n            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n            System.out.println(\"methods are: \" + Arrays.asList(\n                aHandlerClass.getConstructors()).toString());\n            e.printStackTrace();\n        } \n        catch (SecurityException e) {\n            System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n            e.printStackTrace();\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/HandlerFactory.java",
        "oldMethodName": "register",
        "newMethodName": "register"
      }
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": "24/04/03 10:21 PM",
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,21 @@\n+        private void register(int aType, Class aHandlerClass) \n+        {\n+            try {\n+                Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n+                    IndentationCheck.class,\n+                    DetailAST.class,            // current AST\n+                    ExpressionHandler.class     // parent\n+                });\n+                mTypeHandlers.put(new Integer(aType), ctor);\n+            } \n+            catch (NoSuchMethodException e) {\n+                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n+                System.out.println(\"methods are: \" + Arrays.asList(\n+                    aHandlerClass.getConstructors()).toString());\n+                e.printStackTrace();\n+            } \n+            catch (SecurityException e) {\n+                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n+                e.printStackTrace();\n+            }\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private void register(int aType, Class aHandlerClass) \n        {\n            try {\n                Constructor ctor \u003d aHandlerClass.getConstructor(new Class[] {\n                    IndentationCheck.class,\n                    DetailAST.class,            // current AST\n                    ExpressionHandler.class     // parent\n                });\n                mTypeHandlers.put(new Integer(aType), ctor);\n            } \n            catch (NoSuchMethodException e) {\n                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n                System.out.println(\"methods are: \" + Arrays.asList(\n                    aHandlerClass.getConstructors()).toString());\n                e.printStackTrace();\n            } \n            catch (SecurityException e) {\n                System.out.println(\"couldn\u0027t find ctor for \" + aHandlerClass);\n                e.printStackTrace();\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java"
    }
  }
}