{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FinalLocalVariableCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
  "functionStartLine": 247,
  "functionEndLine": 301,
  "numCommitsSeen": 111,
  "timeTaken": 5599,
  "changeHistory": [
    "705e0f67579ca9e159bc7facc55678f690bbb774",
    "63afcb8a76cb73ae198afe87bcf01765e84fc713",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
    "8fef90609bcf29c84823f4a9affae013ded9379d",
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
    "4d214096fcc798a2bc4e71287339e6a8e08784c4",
    "ed76401d3bd039d684d6de21c4894d3ab62a3076",
    "bf69cf167c9432daabc7b6e4a426fff33650a057",
    "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44",
    "55aa50d8f09d28521f0d0004ce475fa09082faea",
    "628e893f24cf41ad122c5adf656832a89168e766",
    "9c3b17b9db6c0884d4d456b4d6219abc03a453d4",
    "36b91a59d62c9505b835717f00f470c499cf9b30",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "b097b3f002ca40474b729c27c531787bc2e79f04",
    "c9c475a6c7a8cb728ba1c091b386db46f11a781f",
    "11ff590ba5cc717cbe00d88eb0b578e805572bc8",
    "3831aa913e25d2bd424ccbeb239bd06439867a58",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3",
    "5512e6fdba69ea486a21e299f7b134f4d9d60431",
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f",
    "a6b47597067d3456c894435a8fdc52b1c7060bed",
    "c6019cd352aff6919a61b40fa8efce3567141206",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "08638b5f739d9929698860048c052da2d5f80209",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "43fe1ad269809f293b375dc4d0a4313798bf2124",
    "9bcd88cf20db457966d0a83d2728a7c51a7d8623",
    "2af259b791c8655a2b9862099763f860d3d7ae42",
    "62179e05f3f4a7214eb1fd7775a2012c8870e4a8",
    "0c717ef2abd068366612d44280633a1c7ac9efac"
  ],
  "changeHistoryShort": {
    "705e0f67579ca9e159bc7facc55678f690bbb774": "Ybodychange",
    "63afcb8a76cb73ae198afe87bcf01765e84fc713": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": "Ybodychange",
    "8fef90609bcf29c84823f4a9affae013ded9379d": "Ybodychange",
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2": "Ybodychange",
    "4d214096fcc798a2bc4e71287339e6a8e08784c4": "Ybodychange",
    "ed76401d3bd039d684d6de21c4894d3ab62a3076": "Ybodychange",
    "bf69cf167c9432daabc7b6e4a426fff33650a057": "Ybodychange",
    "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44": "Ybodychange",
    "55aa50d8f09d28521f0d0004ce475fa09082faea": "Ybodychange",
    "628e893f24cf41ad122c5adf656832a89168e766": "Ybodychange",
    "9c3b17b9db6c0884d4d456b4d6219abc03a453d4": "Ybodychange",
    "36b91a59d62c9505b835717f00f470c499cf9b30": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "b097b3f002ca40474b729c27c531787bc2e79f04": "Ybodychange",
    "c9c475a6c7a8cb728ba1c091b386db46f11a781f": "Ybodychange",
    "11ff590ba5cc717cbe00d88eb0b578e805572bc8": "Ybodychange",
    "3831aa913e25d2bd424ccbeb239bd06439867a58": "Ybodychange",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": "Ybodychange",
    "5512e6fdba69ea486a21e299f7b134f4d9d60431": "Ybodychange",
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f": "Ybodychange",
    "a6b47597067d3456c894435a8fdc52b1c7060bed": "Ybodychange",
    "c6019cd352aff6919a61b40fa8efce3567141206": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "deb4d7a38805032ea8c9e2476eff5e00e38f1015": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "08638b5f739d9929698860048c052da2d5f80209": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "43fe1ad269809f293b375dc4d0a4313798bf2124": "Ybodychange",
    "9bcd88cf20db457966d0a83d2728a7c51a7d8623": "Ybodychange",
    "2af259b791c8655a2b9862099763f860d3d7ae42": "Ybodychange",
    "62179e05f3f4a7214eb1fd7775a2012c8870e4a8": "Ybodychange",
    "0c717ef2abd068366612d44280633a1c7ac9efac": "Yintroduced"
  },
  "changeHistoryDetails": {
    "705e0f67579ca9e159bc7facc55678f690bbb774": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6377: FinalLocalVariable: IllegalStateException\n",
      "commitDate": "14/02/19 5:28 PM",
      "commitName": "705e0f67579ca9e159bc7facc55678f690bbb774",
      "commitAuthor": "Erik Silkensen",
      "commitDateOld": "26/01/19 5:50 PM",
      "commitNameOld": "63afcb8a76cb73ae198afe87bcf01765e84fc713",
      "commitAuthorOld": "Erik Silkensen",
      "daysBetweenCommits": 18.98,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,55 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n+            case TokenTypes.LITERAL_FOR:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n                         \u0026\u0026 !isMultipleTypeCatch(ast)\n                         \u0026\u0026 !CheckUtil.isReceiverParameter(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak \u003d true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.LITERAL_FOR:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)\n                        \u0026\u0026 !CheckUtil.isReceiverParameter(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "63afcb8a76cb73ae198afe87bcf01765e84fc713": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6375: FinalLocalVariable: NPE\n",
      "commitDate": "26/01/19 5:50 PM",
      "commitName": "63afcb8a76cb73ae198afe87bcf01765e84fc713",
      "commitAuthor": "Erik Silkensen",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 11.5,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,54 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n-                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n+                        \u0026\u0026 !isMultipleTypeCatch(ast)\n+                        \u0026\u0026 !CheckUtil.isReceiverParameter(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak \u003d true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)\n                        \u0026\u0026 !CheckUtil.isReceiverParameter(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "07/05/18 6:56 PM",
      "commitNameOld": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 27.11,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n-                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n+                        \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n                         \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak \u003d true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtil.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for simple cases",
      "commitDate": "09/11/17 6:45 AM",
      "commitName": "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
      "commitAuthor": "rnveach",
      "commitDateOld": "30/10/17 6:16 PM",
      "commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 9.56,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,53 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n-                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n+                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n+                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                         \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                             .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak \u003d true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "8fef90609bcf29c84823f4a9affae013ded9379d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4727: fixed FinalLocalVariable scanning anonymous classes",
      "commitDate": "29/07/17 7:50 PM",
      "commitName": "8fef90609bcf29c84823f4a9affae013ded9379d",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/07/17 1:48 PM",
      "commitNameOld": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,52 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                         \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n-                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n+                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n+                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                         currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n             case TokenTypes.LITERAL_BREAK:\n                 scopeStack.peek().containsBreak \u003d true;\n                 break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 ast.findFirstToken(TokenTypes.MODIFIERS)\n                            .findFirstToken(TokenTypes.FINAL) \u003d\u003d null\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4082: Take \"break\" into consideration in FinalLocalVariable\n",
      "commitDate": "18/04/17 12:54 PM",
      "commitName": "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
      "commitAuthor": "Luolc",
      "commitDateOld": "05/04/17 5:37 AM",
      "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 13.3,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,51 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n+                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                         \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n-\n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n+                        currentScopeAssignedVariables.peek().add(ast);\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n-\n+            case TokenTypes.LITERAL_BREAK:\n+                scopeStack.peek().containsBreak \u003d true;\n+                break;\n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                currentScopeAssignedVariables.push(new ArrayDeque\u003c\u003e());\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                        currentScopeAssignedVariables.peek().add(ast);\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n            case TokenTypes.LITERAL_BREAK:\n                scopeStack.peek().containsBreak \u003d true;\n                break;\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "4d214096fcc798a2bc4e71287339e6a8e08784c4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3617: make FinalLocalVariable not check multi-catch vars\n",
      "commitDate": "07/12/16 1:22 PM",
      "commitName": "4d214096fcc798a2bc4e71287339e6a8e08784c4",
      "commitAuthor": "liscju",
      "commitDateOld": "14/09/16 1:58 PM",
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 84.02,
      "commitsBetweenForRepo": 130,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,48 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n-                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n+                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n+                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n                         determineAssignmentConditions(ast, candidate.get());\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)\n                        \u0026\u0026 !isMultipleTypeCatch(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "ed76401d3bd039d684d6de21c4894d3ab62a3076": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3074: Fix FinalLocalVariable false positive when variable is assigned inside and outside switch-block (#3366)\n\n",
      "commitDate": "22/07/16 10:09 PM",
      "commitName": "ed76401d3bd039d684d6de21c4894d3ab62a3076",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "22/07/16 9:49 PM",
      "commitNameOld": "2bf2138d04ebbb969c6c26d27f01ef0a572a64c8",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,47 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                     final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                     if (candidate.isPresent()) {\n-                        if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF)) {\n-                            candidate.get().assignInIfBlock \u003d true;\n-                            if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n-                                candidate.get().assignInIfBlockWhichIsInsideCaseBlock \u003d true;\n-                            }\n-                        }\n-                        else {\n-                            candidate.get().assignOutsideConditionalBlock \u003d true;\n-                        }\n+                        determineAssignmentConditions(ast, candidate.get());\n                     }\n                     removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        determineAssignmentConditions(ast, candidate.get());\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "bf69cf167c9432daabc7b6e4a426fff33650a057": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3006: Refactoring of FinalLocalVariableCheck to increase readability\n",
      "commitDate": "29/03/16 3:47 PM",
      "commitName": "bf69cf167c9432daabc7b6e4a426fff33650a057",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "29/03/16 3:47 PM",
      "commitNameOld": "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,55 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n-                if (isAssignOperator(parentType)\n-                        \u0026\u0026 isFirstChild(ast)) {\n-                    if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF))\n-                    {\n-                        markFinalVariableCandidateAsAssignedInIfBlock(ast);\n-                        if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n-                            markFinalVariableCandidateAsAssignedInCaseBlock(ast);\n+                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n+                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n+                    if (candidate.isPresent()) {\n+                        if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF)) {\n+                            candidate.get().assignInIfBlock \u003d true;\n+                            if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n+                                candidate.get().assignInIfBlockWhichIsInsideCaseBlock \u003d true;\n+                            }\n+                        }\n+                        else {\n+                            candidate.get().assignOutsideConditionalBlock \u003d true;\n                         }\n                     }\n-                    else if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_ELSE))\n-                    {\n-                        markFinalVariableCandidateAsAssignedInElseBlock(ast);\n-                    }\n-                    else\n-                    {\n-                        markFinalVariableCandidateAsAssignedOutsideIfOrElseBlock(ast);\n-                    }\n-                    removeVariable(ast);\n+                    removeFinalVariableCandidateFromStack(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType) \u0026\u0026 isFirstChild(ast)) {\n                    final Optional\u003cFinalVariableCandidate\u003e candidate \u003d getFinalCandidate(ast);\n                    if (candidate.isPresent()) {\n                        if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF)) {\n                            candidate.get().assignInIfBlock \u003d true;\n                            if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n                                candidate.get().assignInIfBlockWhichIsInsideCaseBlock \u003d true;\n                            }\n                        }\n                        else {\n                            candidate.get().assignOutsideConditionalBlock \u003d true;\n                        }\n                    }\n                    removeFinalVariableCandidateFromStack(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3006: Fix false positive when variable is assigned in if block which is inside catch block\n",
      "commitDate": "29/03/16 3:47 PM",
      "commitName": "0a1a4c6e94c9b3b73b21b323f14ae7b7337b1b44",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "29/03/16 3:47 PM",
      "commitNameOld": "55aa50d8f09d28521f0d0004ce475fa09082faea",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,59 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 isFirstChild(ast)) {\n-                    if (isInIfBlock(ast))\n+                    if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF))\n                     {\n-                        markFinalVariableCandidateAsAssignInIfBlock(ast);\n+                        markFinalVariableCandidateAsAssignedInIfBlock(ast);\n+                        if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n+                            markFinalVariableCandidateAsAssignedInCaseBlock(ast);\n+                        }\n                     }\n-                    else if (isInElseBlock(ast))\n+                    else if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_ELSE))\n                     {\n-                        markFinalVariableCandidateAsAssignInElseBlock(ast);\n+                        markFinalVariableCandidateAsAssignedInElseBlock(ast);\n                     }\n                     else\n                     {\n-                        markFinalVariableCandidateAsAssignOutsideIfOrElseBlock(ast);\n+                        markFinalVariableCandidateAsAssignedOutsideIfOrElseBlock(ast);\n                     }\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 isFirstChild(ast)) {\n                    if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_IF))\n                    {\n                        markFinalVariableCandidateAsAssignedInIfBlock(ast);\n                        if (isInSpecificCodeBlock(ast, TokenTypes.CASE_GROUP)) {\n                            markFinalVariableCandidateAsAssignedInCaseBlock(ast);\n                        }\n                    }\n                    else if (isInSpecificCodeBlock(ast, TokenTypes.LITERAL_ELSE))\n                    {\n                        markFinalVariableCandidateAsAssignedInElseBlock(ast);\n                    }\n                    else\n                    {\n                        markFinalVariableCandidateAsAssignedOutsideIfOrElseBlock(ast);\n                    }\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "55aa50d8f09d28521f0d0004ce475fa09082faea": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3006: Fix false positive when variable is assigned multiple times\n",
      "commitDate": "29/03/16 3:47 PM",
      "commitName": "55aa50d8f09d28521f0d0004ce475fa09082faea",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "29/03/16 3:47 PM",
      "commitNameOld": "11210350f58660d96012cea051f0fbc3bc462cb1",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,56 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n                     storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 isFirstChild(ast)) {\n+                    if (isInIfBlock(ast))\n+                    {\n+                        markFinalVariableCandidateAsAssignInIfBlock(ast);\n+                    }\n+                    else if (isInElseBlock(ast))\n+                    {\n+                        markFinalVariableCandidateAsAssignInElseBlock(ast);\n+                    }\n+                    else\n+                    {\n+                        markFinalVariableCandidateAsAssignOutsideIfOrElseBlock(ast);\n+                    }\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 isFirstChild(ast)) {\n                    if (isInIfBlock(ast))\n                    {\n                        markFinalVariableCandidateAsAssignInIfBlock(ast);\n                    }\n                    else if (isInElseBlock(ast))\n                    {\n                        markFinalVariableCandidateAsAssignInElseBlock(ast);\n                    }\n                    else\n                    {\n                        markFinalVariableCandidateAsAssignOutsideIfOrElseBlock(ast);\n                    }\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "628e893f24cf41ad122c5adf656832a89168e766": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2807: FinalLocalVariable doesn\u0027t report variable when condition separates 2 assignments\n",
      "commitDate": "24/01/16 6:35 AM",
      "commitName": "628e893f24cf41ad122c5adf656832a89168e766",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,44 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n             case TokenTypes.SLIST:\n                 if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                     || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                     \u003d\u003d ast.getParent()) {\n+                    storePrevScopeUninitializedVariableData();\n                     scopeStack.push(new ScopeData());\n                 }\n                 break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    storePrevScopeUninitializedVariableData();\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 isFirstChild(ast)) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "9c3b17b9db6c0884d4d456b4d6219abc03a453d4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2405: FinalLocalVariable false-positive in SWITCH solved\n",
      "commitDate": "26/12/15 7:31 AM",
      "commitName": "9c3b17b9db6c0884d4d456b4d6219abc03a453d4",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "14/12/15 5:17 PM",
      "commitNameOld": "1ef123bf60e8f4ba348f2e6399175dee62f016b2",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 11.59,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,43 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n-            case TokenTypes.SLIST:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n                 scopeStack.push(new ScopeData());\n                 break;\n-\n+            case TokenTypes.SLIST:\n+                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n+                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n+                    \u003d\u003d ast.getParent()) {\n+                    scopeStack.push(new ScopeData());\n+                }\n+                break;\n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n            case TokenTypes.SLIST:\n                if (ast.getParent().getType() !\u003d TokenTypes.CASE_GROUP\n                    || ast.getParent().getParent().findFirstToken(TokenTypes.CASE_GROUP)\n                    \u003d\u003d ast.getParent()) {\n                    scopeStack.push(new ScopeData());\n                }\n                break;\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 isFirstChild(ast)) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "36b91a59d62c9505b835717f00f470c499cf9b30": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1551: Fix FinalLocalVariable false-negative",
      "commitDate": "01/11/15 5:41 AM",
      "commitName": "36b91a59d62c9505b835717f00f470c499cf9b30",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "25/09/15 5:55 AM",
      "commitNameOld": "fbd04a537a209f84407fd3695171213f4e011e33",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 37.03,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,38 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n-            case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n-            case TokenTypes.STATIC_INIT:\n-            case TokenTypes.INSTANCE_INIT:\n-                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n+                scopeStack.push(new ScopeData());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n-                    insertVariable(ast);\n+                    insertParameter(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n+                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !isVariableInForInit(ast)\n-                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n-                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n+                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n-                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n+                        \u0026\u0026 isFirstChild(ast)) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n                scopeStack.push(new ScopeData());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertParameter(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 isFirstChild(ast)) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "27/08/15 12:53 PM",
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n-                if (!inLambda(ast)\n+                if (!isInLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n-                        \u0026\u0026 !inAbstractOrNativeMethod(ast)\n-                        \u0026\u0026 !ScopeUtils.inInterfaceBlock(ast)) {\n+                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n+                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                         \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n                 throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (!isInLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !isInAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.isInInterfaceBlock(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "b097b3f002ca40474b729c27c531787bc2e79f04": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for FinalLocalVariableCheck\n",
      "commitDate": "02/08/15 6:27 PM",
      "commitName": "b097b3f002ca40474b729c27c531787bc2e79f04",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "01/08/15 9:42 AM",
      "commitNameOld": "f8ba0d727928aaa1275758fa09114155faab0b9e",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 1.36,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,41 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (!inLambda(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                         \u0026\u0026 !inAbstractOrNativeMethod(ast)\n                         \u0026\u0026 !ScopeUtils.inInterfaceBlock(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n-                        \u0026\u0026 isVariableInForInit(ast)\n+                        \u0026\u0026 !isVariableInForInit(ast)\n                         \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n+                throw new IllegalStateException(\"Incorrect token type\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (!inLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !inAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.inInterfaceBlock(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 !isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n                throw new IllegalStateException(\"Incorrect token type\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "c9c475a6c7a8cb728ba1c091b386db46f11a781f": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring of FinalLocalVariableCheck to avoid \u0027fall through\u0027 violation, issue #1395.\n",
      "commitDate": "20/07/15 10:02 AM",
      "commitName": "c9c475a6c7a8cb728ba1c091b386db46f11a781f",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "17/07/15 9:51 PM",
      "commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.51,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,40 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n-                if (ScopeUtils.inInterfaceBlock(ast)\n-                    || inAbstractOrNativeMethod(ast)\n-                    || inLambda(ast)) {\n-                    break;\n+                if (!inLambda(ast)\n+                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n+                        \u0026\u0026 !inAbstractOrNativeMethod(ast)\n+                        \u0026\u0026 !ScopeUtils.inInterfaceBlock(ast)) {\n+                    insertVariable(ast);\n                 }\n+                break;\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n-                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                         \u0026\u0026 isVariableInForInit(ast)\n+                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                         \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (!inLambda(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)\n                        \u0026\u0026 !inAbstractOrNativeMethod(ast)\n                        \u0026\u0026 !ScopeUtils.inInterfaceBlock(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 isVariableInForInit(ast)\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "11ff590ba5cc717cbe00d88eb0b578e805572bc8": {
      "type": "Ybodychange",
      "commitMessage": "Solution to wrong variable reported because of name shadowing in FinalLocalVariableCheck. solves #1142\n",
      "commitDate": "18/06/15 2:42 PM",
      "commitName": "11ff590ba5cc717cbe00d88eb0b578e805572bc8",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "13/06/15 11:01 PM",
      "commitNameOld": "3831aa913e25d2bd424ccbeb239bd06439867a58",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.65,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast)) {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n-                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n-                    \u0026\u0026 isVariableInForInit(ast)) {\n+                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n+                        \u0026\u0026 isVariableInForInit(ast)\n+                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if (isAssignOperator(parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast)\n                    || inLambda(ast)) {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                        \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                        \u0026\u0026 isVariableInForInit(ast)\n                        \u0026\u0026 !ast.branchContains(TokenTypes.FINAL)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "3831aa913e25d2bd424ccbeb239bd06439867a58": {
      "type": "Ybodychange",
      "commitMessage": "FinalLocalVariableCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "13/06/15 11:01 PM",
      "commitName": "3831aa913e25d2bd424ccbeb239bd06439867a58",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 27.76,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,37 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast)) {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                     \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast)) {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n-                if ((TokenTypes.POST_DEC \u003d\u003d parentType\n-                        || TokenTypes.DEC \u003d\u003d parentType\n-                        || TokenTypes.POST_INC \u003d\u003d parentType\n-                        || TokenTypes.INC \u003d\u003d parentType\n-                        || TokenTypes.ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n-                        || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n+                if (isAssignOperator(parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast)\n                    || inLambda(ast)) {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast)) {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (isAssignOperator(parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": {
      "type": "Ybodychange",
      "commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
      "commitDate": "23/04/15 10:38 AM",
      "commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "15/03/15 8:45 PM",
      "commitNameOld": "5512e6fdba69ea486a21e299f7b134f4d9d60431",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 38.58,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,56 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast)\n                     || inLambda(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                     \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n-                // TODO: is there better way to check is ast\n-                // in left part of assignment?\n                 if ((TokenTypes.POST_DEC \u003d\u003d parentType\n                         || TokenTypes.DEC \u003d\u003d parentType\n                         || TokenTypes.POST_INC \u003d\u003d parentType\n                         || TokenTypes.INC \u003d\u003d parentType\n                         || TokenTypes.ASSIGN \u003d\u003d parentType\n                         || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                 {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast)\n                    || inLambda(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if ((TokenTypes.POST_DEC \u003d\u003d parentType\n                        || TokenTypes.DEC \u003d\u003d parentType\n                        || TokenTypes.POST_INC \u003d\u003d parentType\n                        || TokenTypes.INC \u003d\u003d parentType\n                        || TokenTypes.ASSIGN \u003d\u003d parentType\n                        || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "5512e6fdba69ea486a21e299f7b134f4d9d60431": {
      "type": "Ybodychange",
      "commitMessage": "Final Local Variable Name Check, fixed bug with lambda\u0027s params, issue #747\n",
      "commitDate": "15/03/15 8:45 PM",
      "commitName": "5512e6fdba69ea486a21e299f7b134f4d9d60431",
      "commitAuthor": "alexkravin",
      "commitDateOld": "14/03/15 2:56 PM",
      "commitNameOld": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.24,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n-                    || inAbstractOrNativeMethod(ast))\n+                    || inAbstractOrNativeMethod(ast)\n+                    || inLambda(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                     \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 // TODO: is there better way to check is ast\n                 // in left part of assignment?\n                 if ((TokenTypes.POST_DEC \u003d\u003d parentType\n                         || TokenTypes.DEC \u003d\u003d parentType\n                         || TokenTypes.POST_INC \u003d\u003d parentType\n                         || TokenTypes.INC \u003d\u003d parentType\n                         || TokenTypes.ASSIGN \u003d\u003d parentType\n                         || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n                         || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n                         \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                 {\n                     removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast)\n                    || inLambda(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                // TODO: is there better way to check is ast\n                // in left part of assignment?\n                if ((TokenTypes.POST_DEC \u003d\u003d parentType\n                        || TokenTypes.DEC \u003d\u003d parentType\n                        || TokenTypes.POST_INC \u003d\u003d parentType\n                        || TokenTypes.INC \u003d\u003d parentType\n                        || TokenTypes.ASSIGN \u003d\u003d parentType\n                        || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac": {
      "type": "Ybodychange",
      "commitMessage": "Combine nested if statements, issue #744\n\nAll violations of PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements) are fixed.\n",
      "commitDate": "14/03/15 2:56 PM",
      "commitName": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "12/03/15 1:07 PM",
      "commitNameOld": "fe6158d4106f713438e769d0ab77289910cfe5bd",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 2.08,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,57 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                     \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n-                if (TokenTypes.POST_DEC        \u003d\u003d parentType\n-                    || TokenTypes.DEC          \u003d\u003d parentType\n-                    || TokenTypes.POST_INC     \u003d\u003d parentType\n-                    || TokenTypes.INC          \u003d\u003d parentType\n-                    || TokenTypes.ASSIGN       \u003d\u003d parentType\n-                    || TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType\n-                    || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n-                    || TokenTypes.DIV_ASSIGN   \u003d\u003d parentType\n-                    || TokenTypes.STAR_ASSIGN  \u003d\u003d parentType\n-                    || TokenTypes.MOD_ASSIGN   \u003d\u003d parentType\n-                    || TokenTypes.SR_ASSIGN    \u003d\u003d parentType\n-                    || TokenTypes.BSR_ASSIGN   \u003d\u003d parentType\n-                    || TokenTypes.SL_ASSIGN    \u003d\u003d parentType\n-                    || TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType\n-                    || TokenTypes.BOR_ASSIGN   \u003d\u003d parentType\n-                    || TokenTypes.BAND_ASSIGN  \u003d\u003d parentType)\n+                // TODO: is there better way to check is ast\n+                // in left part of assignment?\n+                if ((TokenTypes.POST_DEC \u003d\u003d parentType\n+                        || TokenTypes.DEC \u003d\u003d parentType\n+                        || TokenTypes.POST_INC \u003d\u003d parentType\n+                        || TokenTypes.INC \u003d\u003d parentType\n+                        || TokenTypes.ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n+                        || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n+                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                 {\n-                    // TODO: is there better way to check is ast\n-                    // in left part of assignment?\n-                    if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n-                        removeVariable(ast);\n-                    }\n+                    removeVariable(ast);\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                // TODO: is there better way to check is ast\n                // in left part of assignment?\n                if ((TokenTypes.POST_DEC \u003d\u003d parentType\n                        || TokenTypes.DEC \u003d\u003d parentType\n                        || TokenTypes.POST_INC \u003d\u003d parentType\n                        || TokenTypes.INC \u003d\u003d parentType\n                        || TokenTypes.ASSIGN \u003d\u003d parentType\n                        || TokenTypes.PLUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.DIV_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.STAR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.MOD_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BSR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.SL_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BXOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BOR_ASSIGN \u003d\u003d parentType\n                        || TokenTypes.BAND_ASSIGN \u003d\u003d parentType)\n                        \u0026\u0026 ast.getParent().getFirstChild() \u003d\u003d ast)\n                {\n                    removeVariable(ast);\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "05/03/15 9:39 PM",
      "commitNameOld": "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 4.66,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n-                if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n+                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                     \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n-                if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n-                    || (TokenTypes.DEC          \u003d\u003d parentType)\n-                    || (TokenTypes.POST_INC     \u003d\u003d parentType)\n-                    || (TokenTypes.INC          \u003d\u003d parentType)\n-                    || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n-                    || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n-                    || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n-                    || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n-                    || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n-                    || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n-                    || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n-                    || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n-                    || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n-                    || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n-                    || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n-                    || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n+                if (TokenTypes.POST_DEC        \u003d\u003d parentType\n+                    || TokenTypes.DEC          \u003d\u003d parentType\n+                    || TokenTypes.POST_INC     \u003d\u003d parentType\n+                    || TokenTypes.INC          \u003d\u003d parentType\n+                    || TokenTypes.ASSIGN       \u003d\u003d parentType\n+                    || TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType\n+                    || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n+                    || TokenTypes.DIV_ASSIGN   \u003d\u003d parentType\n+                    || TokenTypes.STAR_ASSIGN  \u003d\u003d parentType\n+                    || TokenTypes.MOD_ASSIGN   \u003d\u003d parentType\n+                    || TokenTypes.SR_ASSIGN    \u003d\u003d parentType\n+                    || TokenTypes.BSR_ASSIGN   \u003d\u003d parentType\n+                    || TokenTypes.SL_ASSIGN    \u003d\u003d parentType\n+                    || TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType\n+                    || TokenTypes.BOR_ASSIGN   \u003d\u003d parentType\n+                    || TokenTypes.BAND_ASSIGN  \u003d\u003d parentType)\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if (ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if (TokenTypes.POST_DEC        \u003d\u003d parentType\n                    || TokenTypes.DEC          \u003d\u003d parentType\n                    || TokenTypes.POST_INC     \u003d\u003d parentType\n                    || TokenTypes.INC          \u003d\u003d parentType\n                    || TokenTypes.ASSIGN       \u003d\u003d parentType\n                    || TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType\n                    || TokenTypes.MINUS_ASSIGN \u003d\u003d parentType\n                    || TokenTypes.DIV_ASSIGN   \u003d\u003d parentType\n                    || TokenTypes.STAR_ASSIGN  \u003d\u003d parentType\n                    || TokenTypes.MOD_ASSIGN   \u003d\u003d parentType\n                    || TokenTypes.SR_ASSIGN    \u003d\u003d parentType\n                    || TokenTypes.BSR_ASSIGN   \u003d\u003d parentType\n                    || TokenTypes.SL_ASSIGN    \u003d\u003d parentType\n                    || TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType\n                    || TokenTypes.BOR_ASSIGN   \u003d\u003d parentType\n                    || TokenTypes.BAND_ASSIGN  \u003d\u003d parentType)\n                {\n                    // TODO: is there better way to check is ast\n                    // in left part of assignment?\n                    if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                        removeVariable(ast);\n                    }\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f": {
      "type": "Ybodychange",
      "commitMessage": "fix for FinalLocalVariableCheck - FOR_EACH_CLAUSE variable is not reported. issue #20\n",
      "commitDate": "05/03/15 9:39 PM",
      "commitName": "93a33df5bda022b29fa6f4d6f3ad2d8b5f0a2b6f",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 13.69,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n-                    \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n+                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                     \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                     || (TokenTypes.DEC          \u003d\u003d parentType)\n                     || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                     || (TokenTypes.INC          \u003d\u003d parentType)\n                     || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                     || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                     || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                    \u0026\u0026 shouldCheckEnhancedForLoopVariable(ast)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                    || (TokenTypes.DEC          \u003d\u003d parentType)\n                    || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                    || (TokenTypes.INC          \u003d\u003d parentType)\n                    || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                    || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                    || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                {\n                    // TODO: is there better way to check is ast\n                    // in left part of assignment?\n                    if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                        removeVariable(ast);\n                    }\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "a6b47597067d3456c894435a8fdc52b1c7060bed": {
      "type": "Ybodychange",
      "commitMessage": "Final Local Variable Check, fixed false-positive, issue #258\n",
      "commitDate": "18/02/15 10:07 PM",
      "commitName": "a6b47597067d3456c894435a8fdc52b1c7060bed",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.37,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                     \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n-                    \u0026\u0026 isFirstVariableInForInit(ast))\n+                    \u0026\u0026 isVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                     || (TokenTypes.DEC          \u003d\u003d parentType)\n                     || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                     || (TokenTypes.INC          \u003d\u003d parentType)\n                     || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                     || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                     || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                    \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n                    \u0026\u0026 isVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                    || (TokenTypes.DEC          \u003d\u003d parentType)\n                    || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                    || (TokenTypes.INC          \u003d\u003d parentType)\n                    || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                    || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                    || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                {\n                    // TODO: is there better way to check is ast\n                    // in left part of assignment?\n                    if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                        removeVariable(ast);\n                    }\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "c6019cd352aff6919a61b40fa8efce3567141206": {
      "type": "Ybodychange",
      "commitMessage": "Final Local Variable Check, fixed false-positive, issue #258\n",
      "commitDate": "26/01/15 6:43 PM",
      "commitName": "c6019cd352aff6919a61b40fa8efce3567141206",
      "commitAuthor": "alexkravin",
      "commitDateOld": "22/01/15 4:29 AM",
      "commitNameOld": "b2eeea93c2b1c9a148a8ecf615637aeea4630638",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 4.59,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,58 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.OBJBLOCK:\n             case TokenTypes.SLIST:\n             case TokenTypes.LITERAL_FOR:\n             case TokenTypes.METHOD_DEF:\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.STATIC_INIT:\n             case TokenTypes.INSTANCE_INIT:\n                 scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                 break;\n \n             case TokenTypes.PARAMETER_DEF:\n                 if (ScopeUtils.inInterfaceBlock(ast)\n                     || inAbstractOrNativeMethod(ast))\n                 {\n                     break;\n                 }\n             case TokenTypes.VARIABLE_DEF:\n                 if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n-                    \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n+                    \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n+                    \u0026\u0026 isFirstVariableInForInit(ast))\n                 {\n                     insertVariable(ast);\n                 }\n                 break;\n \n             case TokenTypes.IDENT:\n                 final int parentType \u003d ast.getParent().getType();\n                 if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                     || (TokenTypes.DEC          \u003d\u003d parentType)\n                     || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                     || (TokenTypes.INC          \u003d\u003d parentType)\n                     || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                     || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                     || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                     || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                     || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                     || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                 {\n                     // TODO: is there better way to check is ast\n                     // in left part of assignment?\n                     if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                         removeVariable(ast);\n                     }\n                 }\n                 break;\n \n             default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.OBJBLOCK:\n            case TokenTypes.SLIST:\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.METHOD_DEF:\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.STATIC_INIT:\n            case TokenTypes.INSTANCE_INIT:\n                scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n                break;\n\n            case TokenTypes.PARAMETER_DEF:\n                if (ScopeUtils.inInterfaceBlock(ast)\n                    || inAbstractOrNativeMethod(ast))\n                {\n                    break;\n                }\n            case TokenTypes.VARIABLE_DEF:\n                if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                    \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n                    \u0026\u0026 isFirstVariableInForInit(ast))\n                {\n                    insertVariable(ast);\n                }\n                break;\n\n            case TokenTypes.IDENT:\n                final int parentType \u003d ast.getParent().getType();\n                if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                    || (TokenTypes.DEC          \u003d\u003d parentType)\n                    || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                    || (TokenTypes.INC          \u003d\u003d parentType)\n                    || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                    || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                    || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                    || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                    || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                    || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n                {\n                    // TODO: is there better way to check is ast\n                    // in left part of assignment?\n                    if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                        removeVariable(ast);\n                    }\n                }\n                break;\n\n            default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "15/12/14 10:09 PM",
          "commitNameOld": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 34.34,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,57 +1,57 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n+            scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractOrNativeMethod(aAST))\n+            if (ScopeUtils.inInterfaceBlock(ast)\n+                || inAbstractOrNativeMethod(ast))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n-                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n+            if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n+                \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n             {\n-                insertVariable(aAST);\n+                insertVariable(ast);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n-            final int parentType \u003d aAST.getParent().getType();\n+            final int parentType \u003d ast.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n-                // TODO: is there better way to check is aAST\n+                // TODO: is there better way to check is ast\n                 // in left part of assignment?\n-                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n-                    removeVariable(aAST);\n+                if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n+                    removeVariable(ast);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(ast)\n                || inAbstractOrNativeMethod(ast))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(ast);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d ast.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is ast\n                // in left part of assignment?\n                if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "15/12/14 10:09 PM",
          "commitNameOld": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 34.34,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,57 +1,57 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n+            scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractOrNativeMethod(aAST))\n+            if (ScopeUtils.inInterfaceBlock(ast)\n+                || inAbstractOrNativeMethod(ast))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n-                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n+            if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n+                \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n             {\n-                insertVariable(aAST);\n+                insertVariable(ast);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n-            final int parentType \u003d aAST.getParent().getType();\n+            final int parentType \u003d ast.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n-                // TODO: is there better way to check is aAST\n+                // TODO: is there better way to check is ast\n                 // in left part of assignment?\n-                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n-                    removeVariable(aAST);\n+                if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n+                    removeVariable(ast);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            scopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(ast)\n                || inAbstractOrNativeMethod(ast))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((ast.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (ast.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(ast);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d ast.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is ast\n                // in left part of assignment?\n                if (ast.getParent().getFirstChild() \u003d\u003d ast) {\n                    removeVariable(ast);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "deb4d7a38805032ea8c9e2476eff5e00e38f1015": {
      "type": "Ybodychange",
      "commitMessage": "Final Local Variable Check, fixed false-positive - native method\u0027s param should be declared final, issue #158\n",
      "commitDate": "15/12/14 10:09 PM",
      "commitName": "deb4d7a38805032ea8c9e2476eff5e00e38f1015",
      "commitAuthor": "alexkravin",
      "commitDateOld": "08/07/14 6:17 PM",
      "commitNameOld": "8c1b62313ffba68c246e61820a904edbf3c61335",
      "commitAuthorOld": "Maroontress Fast Software",
      "daysBetweenCommits": 160.2,
      "commitsBetweenForRepo": 344,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n-                || inAbstractMethod(aAST))\n+                || inAbstractOrNativeMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                 \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractOrNativeMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is aAST\n                // in left part of assignment?\n                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                    removeVariable(aAST);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is aAST\n                // in left part of assignment?\n                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                    removeVariable(aAST);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java"
      }
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": "14/12/07 10:36 PM",
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n-            mScopeStack.push(new HashMap());\n+            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                 \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap\u003cString, DetailAST\u003e());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is aAST\n                // in left part of assignment?\n                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                    removeVariable(aAST);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n-                \u0026\u0026 aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n+            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n+                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 // TODO: is there better way to check is aAST\n                 // in left part of assignment?\n                 if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                     removeVariable(aAST);\n                 }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if ((aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK)\n                \u0026\u0026 (aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE))\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is aAST\n                // in left part of assignment?\n                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                    removeVariable(aAST);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "43fe1ad269809f293b375dc4d0a4313798bf2124": {
      "type": "Ybodychange",
      "commitMessage": "FinalLocalVariable should check if variable is used in left side of assignment (bug 1241722)\n",
      "commitDate": "21/07/05 6:25 AM",
      "commitName": "43fe1ad269809f293b375dc4d0a4313798bf2124",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 193.11,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,57 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                 \u0026\u0026 aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n             {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n-                removeVariable(aAST);\n+                // TODO: is there better way to check is aAST\n+                // in left part of assignment?\n+                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n+                    removeVariable(aAST);\n+                }\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                \u0026\u0026 aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                // TODO: is there better way to check is aAST\n                // in left part of assignment?\n                if (aAST.getParent().getFirstChild() \u003d\u003d aAST) {\n                    removeVariable(aAST);\n                }\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "9bcd88cf20db457966d0a83d2728a7c51a7d8623": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug where local variables to for-each clauses where flagged as requiring the final modifier.\n",
      "commitDate": "19/12/04 3:10 PM",
      "commitName": "9bcd88cf20db457966d0a83d2728a7c51a7d8623",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "04/08/04 4:17 AM",
      "commitNameOld": "2af259b791c8655a2b9862099763f860d3d7ae42",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 137.5,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,53 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n             if (ScopeUtils.inInterfaceBlock(aAST)\n                 || inAbstractMethod(aAST))\n             {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n-            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n+            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n+                \u0026\u0026 aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n+            {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK\n                \u0026\u0026 aAST.getParent().getType() !\u003d TokenTypes.FOR_EACH_CLAUSE)\n            {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                removeVariable(aAST);\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "2af259b791c8655a2b9862099763f860d3d7ae42": {
      "type": "Ybodychange",
      "commitMessage": "FinalParametersCheck and FinalLocalVariablesCheck ignore abstract methods (bug 1002849)\n",
      "commitDate": "04/08/04 4:17 AM",
      "commitName": "2af259b791c8655a2b9862099763f860d3d7ae42",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "25/07/04 12:11 PM",
      "commitNameOld": "62179e05f3f4a7214eb1fd7775a2012c8870e4a8",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 9.67,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,51 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n-            if (ScopeUtils.inInterfaceBlock(aAST)) {\n+            if (ScopeUtils.inInterfaceBlock(aAST)\n+                || inAbstractMethod(aAST))\n+            {\n                 break;\n             }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)\n                || inAbstractMethod(aAST))\n            {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                removeVariable(aAST);\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "62179e05f3f4a7214eb1fd7775a2012c8870e4a8": {
      "type": "Ybodychange",
      "commitMessage": "FinalLocalVariable ignores parameters of interface methods (request 993922)\n",
      "commitDate": "25/07/04 12:11 PM",
      "commitName": "62179e05f3f4a7214eb1fd7775a2012c8870e4a8",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "26/04/04 9:17 PM",
      "commitNameOld": "e95d9b668ff5d6fbc64ac13d7cd349a41367e830",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 89.62,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,49 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch(aAST.getType()) {\n         case TokenTypes.OBJBLOCK:\n         case TokenTypes.SLIST:\n         case TokenTypes.LITERAL_FOR:\n         case TokenTypes.METHOD_DEF:\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.STATIC_INIT:\n         case TokenTypes.INSTANCE_INIT:\n             mScopeStack.push(new HashMap());\n             break;\n \n         case TokenTypes.PARAMETER_DEF:\n+            if (ScopeUtils.inInterfaceBlock(aAST)) {\n+                break;\n+            }\n         case TokenTypes.VARIABLE_DEF:\n             if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n                 insertVariable(aAST);\n             }\n             break;\n \n         case TokenTypes.IDENT:\n             final int parentType \u003d aAST.getParent().getType();\n             if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                 || (TokenTypes.DEC          \u003d\u003d parentType)\n                 || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                 || (TokenTypes.INC          \u003d\u003d parentType)\n                 || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                 || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                 || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                 || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                 || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                 || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n             {\n                 removeVariable(aAST);\n             }\n             break;\n \n         default:\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n            if (ScopeUtils.inInterfaceBlock(aAST)) {\n                break;\n            }\n        case TokenTypes.VARIABLE_DEF:\n            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                removeVariable(aAST);\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "0c717ef2abd068366612d44280633a1c7ac9efac": {
      "type": "Yintroduced",
      "commitMessage": "Added FinalLocalVariable check from Roland Auckenthaler and Kevin Gibbs.\n",
      "commitDate": "11/09/03 5:01 AM",
      "commitName": "0c717ef2abd068366612d44280633a1c7ac9efac",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,46 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch(aAST.getType()) {\n+        case TokenTypes.OBJBLOCK:\n+        case TokenTypes.SLIST:\n+        case TokenTypes.LITERAL_FOR:\n+        case TokenTypes.METHOD_DEF:\n+        case TokenTypes.CTOR_DEF:\n+        case TokenTypes.STATIC_INIT:\n+        case TokenTypes.INSTANCE_INIT:\n+            mScopeStack.push(new HashMap());\n+            break;\n+\n+        case TokenTypes.PARAMETER_DEF:\n+        case TokenTypes.VARIABLE_DEF:\n+            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n+                insertVariable(aAST);\n+            }\n+            break;\n+\n+        case TokenTypes.IDENT:\n+            final int parentType \u003d aAST.getParent().getType();\n+            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n+                || (TokenTypes.DEC          \u003d\u003d parentType)\n+                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n+                || (TokenTypes.INC          \u003d\u003d parentType)\n+                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n+                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n+                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n+                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n+                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n+                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n+                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n+                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n+                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n+                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n+                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n+                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n+            {\n+                removeVariable(aAST);\n+            }\n+            break;\n+\n+        default:\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch(aAST.getType()) {\n        case TokenTypes.OBJBLOCK:\n        case TokenTypes.SLIST:\n        case TokenTypes.LITERAL_FOR:\n        case TokenTypes.METHOD_DEF:\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.STATIC_INIT:\n        case TokenTypes.INSTANCE_INIT:\n            mScopeStack.push(new HashMap());\n            break;\n\n        case TokenTypes.PARAMETER_DEF:\n        case TokenTypes.VARIABLE_DEF:\n            if (aAST.getParent().getType() !\u003d TokenTypes.OBJBLOCK) {\n                insertVariable(aAST);\n            }\n            break;\n\n        case TokenTypes.IDENT:\n            final int parentType \u003d aAST.getParent().getType();\n            if ((TokenTypes.POST_DEC        \u003d\u003d parentType)\n                || (TokenTypes.DEC          \u003d\u003d parentType)\n                || (TokenTypes.POST_INC     \u003d\u003d parentType)\n                || (TokenTypes.INC          \u003d\u003d parentType)\n                || (TokenTypes.ASSIGN       \u003d\u003d parentType)\n                || (TokenTypes.PLUS_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MINUS_ASSIGN \u003d\u003d parentType)\n                || (TokenTypes.DIV_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.STAR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.MOD_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SR_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BSR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.SL_ASSIGN    \u003d\u003d parentType)\n                || (TokenTypes.BXOR_ASSIGN  \u003d\u003d parentType)\n                || (TokenTypes.BOR_ASSIGN   \u003d\u003d parentType)\n                || (TokenTypes.BAND_ASSIGN  \u003d\u003d parentType))\n            {\n                removeVariable(aAST);\n            }\n            break;\n\n        default:\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java"
    }
  }
}