{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommonUtil.java",
  "functionName": "countLinesColumns",
  "functionId": "countLinesColumns___text-String__initialLinesCnt-int__initialColumnsCnt-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
  "functionStartLine": 194,
  "functionEndLine": 222,
  "numCommitsSeen": 151,
  "timeTaken": 3532,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "9b383e05bb3b14318c5ec5794ba2df0952a30f8a",
    "9a733ed7985274aadb75dad8bce405749d7e61d6",
    "193474f51804bf6255bfcec58befcb1dc8ff8329",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "9b383e05bb3b14318c5ec5794ba2df0952a30f8a": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "9a733ed7985274aadb75dad8bce405749d7e61d6": "Ybodychange",
    "193474f51804bf6255bfcec58befcb1dc8ff8329": "Ybodychange",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt) {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        boolean foundCr \u003d false;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                foundCr \u003d false;\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                if (foundCr) {\n                    foundCr \u003d false;\n                    lines++;\n                    columns \u003d 0;\n                }\n                if (c \u003d\u003d \u0027\\r\u0027) {\n                    foundCr \u003d true;\n                }\n                columns++;\n            }\n        }\n        if (foundCr) {\n            lines++;\n            columns \u003d 0;\n        }\n        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtil.java"
      }
    },
    "9b383e05bb3b14318c5ec5794ba2df0952a30f8a": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #4785: Method createBlockCommentNode was created in CommonUtils\n",
      "commitDate": "20/10/17 10:40 AM",
      "commitName": "9b383e05bb3b14318c5ec5794ba2df0952a30f8a",
      "commitAuthor": "Turkin Ivan",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Issue #4785: Method createBlockCommentNode was created in CommonUtils\n",
          "commitDate": "20/10/17 10:40 AM",
          "commitName": "9b383e05bb3b14318c5ec5794ba2df0952a30f8a",
          "commitAuthor": "Turkin Ivan",
          "commitDateOld": "19/10/17 8:23 AM",
          "commitNameOld": "37264397e4902bfc28c57aec4852daf334fb48a1",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n+    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt) {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n         boolean foundCr \u003d false;\n         for (char c : text.toCharArray()) {\n             if (c \u003d\u003d \u0027\\n\u0027) {\n                 foundCr \u003d false;\n                 lines++;\n                 columns \u003d 0;\n             }\n             else {\n                 if (foundCr) {\n                     foundCr \u003d false;\n                     lines++;\n                     columns \u003d 0;\n                 }\n                 if (c \u003d\u003d \u0027\\r\u0027) {\n                     foundCr \u003d true;\n                 }\n                 columns++;\n             }\n         }\n         if (foundCr) {\n             lines++;\n             columns \u003d 0;\n         }\n-        return new SimpleEntry\u003c\u003e(lines, columns);\n+        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt) {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        boolean foundCr \u003d false;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                foundCr \u003d false;\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                if (foundCr) {\n                    foundCr \u003d false;\n                    lines++;\n                    columns \u003d 0;\n                }\n                if (c \u003d\u003d \u0027\\r\u0027) {\n                    foundCr \u003d true;\n                }\n                columns++;\n            }\n        }\n        if (foundCr) {\n            lines++;\n            columns \u003d 0;\n        }\n        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
            "oldMethodName": "countLinesColumns",
            "newMethodName": "countLinesColumns"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Issue #4785: Method createBlockCommentNode was created in CommonUtils\n",
          "commitDate": "20/10/17 10:40 AM",
          "commitName": "9b383e05bb3b14318c5ec5794ba2df0952a30f8a",
          "commitAuthor": "Turkin Ivan",
          "commitDateOld": "19/10/17 8:23 AM",
          "commitNameOld": "37264397e4902bfc28c57aec4852daf334fb48a1",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n+    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt) {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n         boolean foundCr \u003d false;\n         for (char c : text.toCharArray()) {\n             if (c \u003d\u003d \u0027\\n\u0027) {\n                 foundCr \u003d false;\n                 lines++;\n                 columns \u003d 0;\n             }\n             else {\n                 if (foundCr) {\n                     foundCr \u003d false;\n                     lines++;\n                     columns \u003d 0;\n                 }\n                 if (c \u003d\u003d \u0027\\r\u0027) {\n                     foundCr \u003d true;\n                 }\n                 columns++;\n             }\n         }\n         if (foundCr) {\n             lines++;\n             columns \u003d 0;\n         }\n-        return new SimpleEntry\u003c\u003e(lines, columns);\n+        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt) {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        boolean foundCr \u003d false;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                foundCr \u003d false;\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                if (foundCr) {\n                    foundCr \u003d false;\n                    lines++;\n                    columns \u003d 0;\n                }\n                if (c \u003d\u003d \u0027\\r\u0027) {\n                    foundCr \u003d true;\n                }\n                columns++;\n            }\n        }\n        if (foundCr) {\n            lines++;\n            columns \u003d 0;\n        }\n        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
          "extendedDetails": {
            "oldValue": "Entry\u003cInteger,Integer\u003e",
            "newValue": "Map.Entry\u003cInteger,Integer\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4785: Method createBlockCommentNode was created in CommonUtils\n",
          "commitDate": "20/10/17 10:40 AM",
          "commitName": "9b383e05bb3b14318c5ec5794ba2df0952a30f8a",
          "commitAuthor": "Turkin Ivan",
          "commitDateOld": "19/10/17 8:23 AM",
          "commitNameOld": "37264397e4902bfc28c57aec4852daf334fb48a1",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,29 @@\n-    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n+    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt) {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n         boolean foundCr \u003d false;\n         for (char c : text.toCharArray()) {\n             if (c \u003d\u003d \u0027\\n\u0027) {\n                 foundCr \u003d false;\n                 lines++;\n                 columns \u003d 0;\n             }\n             else {\n                 if (foundCr) {\n                     foundCr \u003d false;\n                     lines++;\n                     columns \u003d 0;\n                 }\n                 if (c \u003d\u003d \u0027\\r\u0027) {\n                     foundCr \u003d true;\n                 }\n                 columns++;\n             }\n         }\n         if (foundCr) {\n             lines++;\n             columns \u003d 0;\n         }\n-        return new SimpleEntry\u003c\u003e(lines, columns);\n+        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Map.Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt) {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        boolean foundCr \u003d false;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                foundCr \u003d false;\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                if (foundCr) {\n                    foundCr \u003d false;\n                    lines++;\n                    columns \u003d 0;\n                }\n                if (c \u003d\u003d \u0027\\r\u0027) {\n                    foundCr \u003d true;\n                }\n                columns++;\n            }\n        }\n        if (foundCr) {\n            lines++;\n            columns \u003d 0;\n        }\n        return new AbstractMap.SimpleEntry\u003c\u003e(lines, columns);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/CommonUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "9a733ed7985274aadb75dad8bce405749d7e61d6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3225: fixed cr lines in TreeWalker (#3226)",
      "commitDate": "28/05/16 5:47 AM",
      "commitName": "9a733ed7985274aadb75dad8bce405749d7e61d6",
      "commitAuthor": "rnveach",
      "commitDateOld": "27/05/16 6:42 AM",
      "commitNameOld": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.96,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,29 @@\n     private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt) {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n+        boolean foundCr \u003d false;\n         for (char c : text.toCharArray()) {\n             if (c \u003d\u003d \u0027\\n\u0027) {\n+                foundCr \u003d false;\n                 lines++;\n                 columns \u003d 0;\n             }\n             else {\n+                if (foundCr) {\n+                    foundCr \u003d false;\n+                    lines++;\n+                    columns \u003d 0;\n+                }\n+                if (c \u003d\u003d \u0027\\r\u0027) {\n+                    foundCr \u003d true;\n+                }\n                 columns++;\n             }\n         }\n+        if (foundCr) {\n+            lines++;\n+            columns \u003d 0;\n+        }\n         return new SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt) {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        boolean foundCr \u003d false;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                foundCr \u003d false;\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                if (foundCr) {\n                    foundCr \u003d false;\n                    lines++;\n                    columns \u003d 0;\n                }\n                if (c \u003d\u003d \u0027\\r\u0027) {\n                    foundCr \u003d true;\n                }\n                columns++;\n            }\n        }\n        if (foundCr) {\n            lines++;\n            columns \u003d 0;\n        }\n        return new SimpleEntry\u003c\u003e(lines, columns);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "193474f51804bf6255bfcec58befcb1dc8ff8329": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from TooFewBranchesForASwitchStatement rule, issue #998\n",
      "commitDate": "01/05/15 7:29 AM",
      "commitName": "193474f51804bf6255bfcec58befcb1dc8ff8329",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "30/04/15 4:21 PM",
      "commitNameOld": "aeef83ee58cce5b5bf0f10a8793fc37514751ef5",
      "commitAuthorOld": "Michał Kordas",
      "daysBetweenCommits": 0.63,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt)\n     {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n         for (char c : text.toCharArray()) {\n-            switch (c) {\n-                case \u0027\\n\u0027:\n-                    lines++;\n-                    columns \u003d 0;\n-                    break;\n-                default:\n-                    columns++;\n+            if (c \u003d\u003d \u0027\\n\u0027) {\n+                lines++;\n+                columns \u003d 0;\n+            }\n+            else {\n+                columns++;\n             }\n         }\n         return new SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt)\n    {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        for (char c : text.toCharArray()) {\n            if (c \u003d\u003d \u0027\\n\u0027) {\n                lines++;\n                columns \u003d 0;\n            }\n            else {\n                columns++;\n            }\n        }\n        return new SimpleEntry\u003c\u003e(lines, columns);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": {
      "type": "Ybodychange",
      "commitMessage": "Replace verbose type arguments with diamond type \u003c\u003e\n\nThis syntax is not supported under Java 6 or earlier, but Checkstyle codebase uses Java 7 already.\n",
      "commitDate": "15/02/15 8:22 AM",
      "commitName": "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/02/15 1:46 PM",
      "commitNameOld": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 6.77,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n             String text, int initialLinesCnt, int initialColumnsCnt)\n     {\n         int lines \u003d initialLinesCnt;\n         int columns \u003d initialColumnsCnt;\n         for (char c : text.toCharArray()) {\n             switch (c) {\n                 case \u0027\\n\u0027:\n                     lines++;\n                     columns \u003d 0;\n                     break;\n                 default:\n                     columns++;\n             }\n         }\n-        return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n+        return new SimpleEntry\u003c\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt)\n    {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        for (char c : text.toCharArray()) {\n            switch (c) {\n                case \u0027\\n\u0027:\n                    lines++;\n                    columns \u003d 0;\n                    break;\n                default:\n                    columns++;\n            }\n        }\n        return new SimpleEntry\u003c\u003e(lines, columns);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n     private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n-            String aText, int aInitialLinesCnt, int aInitialColumnsCnt)\n+            String text, int initialLinesCnt, int initialColumnsCnt)\n     {\n-        int lines \u003d aInitialLinesCnt;\n-        int columns \u003d aInitialColumnsCnt;\n-        for (char c : aText.toCharArray()) {\n+        int lines \u003d initialLinesCnt;\n+        int columns \u003d initialColumnsCnt;\n+        for (char c : text.toCharArray()) {\n             switch (c) {\n             case \u0027\\n\u0027:\n                 lines++;\n                 columns \u003d 0;\n                 break;\n             default:\n                 columns++;\n             }\n         }\n         return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt)\n    {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        for (char c : text.toCharArray()) {\n            switch (c) {\n            case \u0027\\n\u0027:\n                lines++;\n                columns \u003d 0;\n                break;\n            default:\n                columns++;\n            }\n        }\n        return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {
            "oldValue": "[aText-String, aInitialLinesCnt-int, aInitialColumnsCnt-int]",
            "newValue": "[text-String, initialLinesCnt-int, initialColumnsCnt-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n     private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n-            String aText, int aInitialLinesCnt, int aInitialColumnsCnt)\n+            String text, int initialLinesCnt, int initialColumnsCnt)\n     {\n-        int lines \u003d aInitialLinesCnt;\n-        int columns \u003d aInitialColumnsCnt;\n-        for (char c : aText.toCharArray()) {\n+        int lines \u003d initialLinesCnt;\n+        int columns \u003d initialColumnsCnt;\n+        for (char c : text.toCharArray()) {\n             switch (c) {\n             case \u0027\\n\u0027:\n                 lines++;\n                 columns \u003d 0;\n                 break;\n             default:\n                 columns++;\n             }\n         }\n         return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String text, int initialLinesCnt, int initialColumnsCnt)\n    {\n        int lines \u003d initialLinesCnt;\n        int columns \u003d initialColumnsCnt;\n        for (char c : text.toCharArray()) {\n            switch (c) {\n            case \u0027\\n\u0027:\n                lines++;\n                columns \u003d 0;\n                break;\n            default:\n                columns++;\n            }\n        }\n        return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {}
        }
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": "17/10/14 10:19 PM",
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,17 @@\n+    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n+            String aText, int aInitialLinesCnt, int aInitialColumnsCnt)\n+    {\n+        int lines \u003d aInitialLinesCnt;\n+        int columns \u003d aInitialColumnsCnt;\n+        for (char c : aText.toCharArray()) {\n+            switch (c) {\n+            case \u0027\\n\u0027:\n+                lines++;\n+                columns \u003d 0;\n+                break;\n+            default:\n+                columns++;\n+            }\n+        }\n+        return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static Entry\u003cInteger, Integer\u003e countLinesColumns(\n            String aText, int aInitialLinesCnt, int aInitialColumnsCnt)\n    {\n        int lines \u003d aInitialLinesCnt;\n        int columns \u003d aInitialColumnsCnt;\n        for (char c : aText.toCharArray()) {\n            switch (c) {\n            case \u0027\\n\u0027:\n                lines++;\n                columns \u003d 0;\n                break;\n            default:\n                columns++;\n            }\n        }\n        return new SimpleEntry\u003cInteger, Integer\u003e(lines, columns);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java"
    }
  }
}