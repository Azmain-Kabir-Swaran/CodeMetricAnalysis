{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PkgImportControl.java",
  "functionName": "locateFinest",
  "functionId": "locateFinest___forPkg-String__forFileName-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java",
  "functionStartLine": 188,
  "functionEndLine": 204,
  "numCommitsSeen": 56,
  "timeTaken": 3614,
  "changeHistory": [
    "e018b2d6622efa4f1897244856974c45efeda99c",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
    "5530d4c27d508c513b68af67aadede84b4cfa102",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
    "3b970321aa2fa100376cd7a19a12e408664030e9",
    "aab0718232e060bd8f289770ab81780b3a2705a2",
    "044889b26a868b1b7200526ceeb40cdbe1e903fc",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "e018b2d6622efa4f1897244856974c45efeda99c": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": "Yparametermetachange",
    "5530d4c27d508c513b68af67aadede84b4cfa102": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": "Ybodychange",
    "3b970321aa2fa100376cd7a19a12e408664030e9": "Ymodifierchange",
    "aab0718232e060bd8f289770ab81780b3a2705a2": "Ybodychange",
    "044889b26a868b1b7200526ceeb40cdbe1e903fc": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e018b2d6622efa4f1897244856974c45efeda99c": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange,Yparameterchange)",
      "commitMessage": "Issue #3492: add ability to control imports in certain files",
      "commitDate": "20/04/18 5:56 PM",
      "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public ImportControl locateFinest(String forPkg) {\n-        ImportControl finestMatch \u003d null;\n+    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n+        AbstractImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (ImportControl child : children) {\n-                final ImportControl match \u003d child.locateFinest(forPkg);\n+            for (AbstractImportControl child : children) {\n+                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n        AbstractImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (AbstractImportControl child : children) {\n                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public ImportControl locateFinest(String forPkg) {\n-        ImportControl finestMatch \u003d null;\n+    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n+        AbstractImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (ImportControl child : children) {\n-                final ImportControl match \u003d child.locateFinest(forPkg);\n+            for (AbstractImportControl child : children) {\n+                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n        AbstractImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (AbstractImportControl child : children) {\n                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java",
          "extendedDetails": {
            "oldValue": "ImportControl",
            "newValue": "AbstractImportControl"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public ImportControl locateFinest(String forPkg) {\n-        ImportControl finestMatch \u003d null;\n+    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n+        AbstractImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (ImportControl child : children) {\n-                final ImportControl match \u003d child.locateFinest(forPkg);\n+            for (AbstractImportControl child : children) {\n+                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n        AbstractImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (AbstractImportControl child : children) {\n                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public ImportControl locateFinest(String forPkg) {\n-        ImportControl finestMatch \u003d null;\n+    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n+        AbstractImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (ImportControl child : children) {\n-                final ImportControl match \u003d child.locateFinest(forPkg);\n+            for (AbstractImportControl child : children) {\n+                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public AbstractImportControl locateFinest(String forPkg, String forFileName) {\n        AbstractImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (AbstractImportControl child : children) {\n                final AbstractImportControl match \u003d child.locateFinest(forPkg, forFileName);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgImportControl.java",
          "extendedDetails": {
            "oldValue": "[forPkg-String]",
            "newValue": "[forPkg-String, forFileName-String]"
          }
        }
      ]
    },
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": {
      "type": "Yparametermetachange",
      "commitMessage": "Issue #4353: refactoring: remove \u0027final\u0027 modifier from all arguments of method/c-tor at ImportControlCheck and around\n",
      "commitDate": "23/06/17 9:34 AM",
      "commitName": "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
      "commitAuthor": "sharang108",
      "commitDateOld": "12/06/17 10:11 AM",
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 10.97,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    public ImportControl locateFinest(final String forPkg) {\n+    public ImportControl locateFinest(String forPkg) {\n         ImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n             for (ImportControl child : children) {\n                 final ImportControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public ImportControl locateFinest(String forPkg) {\n        ImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (ImportControl child : children) {\n                final ImportControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
      "extendedDetails": {
        "oldValue": "[forPkg-String(modifiers-final)]",
        "newValue": "[forPkg-String]"
      }
    },
    "5530d4c27d508c513b68af67aadede84b4cfa102": {
      "type": "Ymultichange(Yfilerename,Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
      "commitDate": "25/10/16 9:46 PM",
      "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthor": "Jochen Van de Velde",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
          "commitDate": "25/10/16 9:46 PM",
          "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
          "commitAuthor": "Jochen Van de Velde",
          "commitDateOld": "23/10/16 12:12 PM",
          "commitNameOld": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
          "commitAuthorOld": "Jochen Van de Velde",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public PkgControl locateFinest(final String forPkg) {\n-        PkgControl finestMatch \u003d null;\n+    public ImportControl locateFinest(final String forPkg) {\n+        ImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (PkgControl child : children) {\n-                final PkgControl match \u003d child.locateFinest(forPkg);\n+            for (ImportControl child : children) {\n+                final ImportControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public ImportControl locateFinest(final String forPkg) {\n        ImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (ImportControl child : children) {\n                final ImportControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
          "commitDate": "25/10/16 9:46 PM",
          "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
          "commitAuthor": "Jochen Van de Velde",
          "commitDateOld": "23/10/16 12:12 PM",
          "commitNameOld": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
          "commitAuthorOld": "Jochen Van de Velde",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public PkgControl locateFinest(final String forPkg) {\n-        PkgControl finestMatch \u003d null;\n+    public ImportControl locateFinest(final String forPkg) {\n+        ImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (PkgControl child : children) {\n-                final PkgControl match \u003d child.locateFinest(forPkg);\n+            for (ImportControl child : children) {\n+                final ImportControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public ImportControl locateFinest(final String forPkg) {\n        ImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (ImportControl child : children) {\n                final ImportControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
          "extendedDetails": {
            "oldValue": "PkgControl",
            "newValue": "ImportControl"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
          "commitDate": "25/10/16 9:46 PM",
          "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
          "commitAuthor": "Jochen Van de Velde",
          "commitDateOld": "23/10/16 12:12 PM",
          "commitNameOld": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
          "commitAuthorOld": "Jochen Van de Velde",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public PkgControl locateFinest(final String forPkg) {\n-        PkgControl finestMatch \u003d null;\n+    public ImportControl locateFinest(final String forPkg) {\n+        ImportControl finestMatch \u003d null;\n         // Check if we are a match.\n         if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (PkgControl child : children) {\n-                final PkgControl match \u003d child.locateFinest(forPkg);\n+            for (ImportControl child : children) {\n+                final ImportControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public ImportControl locateFinest(final String forPkg) {\n        ImportControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (ImportControl child : children) {\n                final ImportControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
          "extendedDetails": {}
        }
      ]
    },
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2999: allow regex in subpackage and importcontrol element\n",
      "commitDate": "18/10/16 3:40 PM",
      "commitName": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthor": "Volker Boerchers",
      "commitDateOld": "20/09/16 7:52 PM",
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 27.83,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     public PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n-        // This algorithm should be improved to check for a trailing \".\"\n-        // or nothing following.\n-        if (forPkg.startsWith(fullPackage)) {\n+        if (matchesAtFront(forPkg)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n             for (PkgControl child : children) {\n                 final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public PkgControl locateFinest(final String forPkg) {\n        PkgControl finestMatch \u003d null;\n        // Check if we are a match.\n        if (matchesAtFront(forPkg)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (PkgControl child : children) {\n                final PkgControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "3b970321aa2fa100376cd7a19a12e408664030e9": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #957: Resolve PMD DefaultPackage rule problems in imports package\n",
      "commitDate": "18/02/16 6:54 AM",
      "commitName": "3b970321aa2fa100376cd7a19a12e408664030e9",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "24/01/16 6:35 AM",
      "commitNameOld": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 25.01,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    PkgControl locateFinest(final String forPkg) {\n+    public PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n         // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (forPkg.startsWith(fullPackage)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n             for (PkgControl child : children) {\n                 final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public PkgControl locateFinest(final String forPkg) {\n        PkgControl finestMatch \u003d null;\n        // Check if we are a match.\n        // This algorithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (forPkg.startsWith(fullPackage)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (PkgControl child : children) {\n                final PkgControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[public]"
      }
    },
    "aab0718232e060bd8f289770ab81780b3a2705a2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2604: Update regexp pattern for LocalVariableName\n",
      "commitDate": "06/12/15 4:02 PM",
      "commitName": "aab0718232e060bd8f289770ab81780b3a2705a2",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "16/10/15 4:35 PM",
      "commitNameOld": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 51.02,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n         PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n         // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (forPkg.startsWith(fullPackage)) {\n             // If there won\u0027t be match so I am the best there is.\n             finestMatch \u003d this;\n             // Check if any of the children match.\n-            for (PkgControl pc : children) {\n-                final PkgControl match \u003d pc.locateFinest(forPkg);\n+            for (PkgControl child : children) {\n+                final PkgControl match \u003d child.locateFinest(forPkg);\n                 if (match !\u003d null) {\n                     finestMatch \u003d match;\n                     break;\n                 }\n             }\n         }\n         return finestMatch;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    PkgControl locateFinest(final String forPkg) {\n        PkgControl finestMatch \u003d null;\n        // Check if we are a match.\n        // This algorithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (forPkg.startsWith(fullPackage)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (PkgControl child : children) {\n                final PkgControl match \u003d child.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "044889b26a868b1b7200526ceeb40cdbe1e903fc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: partial fix of ReturnCount violations\n",
      "commitDate": "27/08/15 5:30 AM",
      "commitName": "044889b26a868b1b7200526ceeb40cdbe1e903fc",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "22/08/15 4:32 AM",
      "commitNameOld": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.04,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n+        PkgControl finestMatch \u003d null;\n         // Check if we are a match.\n-        // This algormithm should be improved to check for a trailing \".\"\n+        // This algorithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!forPkg.startsWith(fullPackage)) {\n-            return null;\n-        }\n-\n-        // Check if any of the children match.\n-        for (PkgControl pc : children) {\n-            final PkgControl match \u003d pc.locateFinest(forPkg);\n-            if (match !\u003d null) {\n-                return match;\n+        if (forPkg.startsWith(fullPackage)) {\n+            // If there won\u0027t be match so I am the best there is.\n+            finestMatch \u003d this;\n+            // Check if any of the children match.\n+            for (PkgControl pc : children) {\n+                final PkgControl match \u003d pc.locateFinest(forPkg);\n+                if (match !\u003d null) {\n+                    finestMatch \u003d match;\n+                    break;\n+                }\n             }\n         }\n-\n-        // No match so I am the best there is.\n-        return this;\n+        return finestMatch;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    PkgControl locateFinest(final String forPkg) {\n        PkgControl finestMatch \u003d null;\n        // Check if we are a match.\n        // This algorithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (forPkg.startsWith(fullPackage)) {\n            // If there won\u0027t be match so I am the best there is.\n            finestMatch \u003d this;\n            // Check if any of the children match.\n            for (PkgControl pc : children) {\n                final PkgControl match \u003d pc.locateFinest(forPkg);\n                if (match !\u003d null) {\n                    finestMatch \u003d match;\n                    break;\n                }\n            }\n        }\n        return finestMatch;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": "22/08/15 4:32 AM",
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "6fd60de0a4363b806d37d4129d9a430f8f3dee6b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     PkgControl locateFinest(final String forPkg) {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!forPkg.startsWith(getFullPackage())) {\n+        if (!forPkg.startsWith(fullPackage)) {\n             return null;\n         }\n \n         // Check if any of the children match.\n         for (PkgControl pc : children) {\n             final PkgControl match \u003d pc.locateFinest(forPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    PkgControl locateFinest(final String forPkg) {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!forPkg.startsWith(fullPackage)) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        for (PkgControl pc : children) {\n            final PkgControl match \u003d pc.locateFinest(forPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    PkgControl locateFinest(final String aForPkg)\n+    PkgControl locateFinest(final String forPkg)\n     {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!aForPkg.startsWith(getFullPackage())) {\n+        if (!forPkg.startsWith(getFullPackage())) {\n             return null;\n         }\n \n         // Check if any of the children match.\n-        for (PkgControl pc : mChildren) {\n-            final PkgControl match \u003d pc.locateFinest(aForPkg);\n+        for (PkgControl pc : children) {\n+            final PkgControl match \u003d pc.locateFinest(forPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    PkgControl locateFinest(final String forPkg)\n    {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!forPkg.startsWith(getFullPackage())) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        for (PkgControl pc : children) {\n            final PkgControl match \u003d pc.locateFinest(forPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {
            "oldValue": "[aForPkg-String(modifiers-final)]",
            "newValue": "[forPkg-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    PkgControl locateFinest(final String aForPkg)\n+    PkgControl locateFinest(final String forPkg)\n     {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n-        if (!aForPkg.startsWith(getFullPackage())) {\n+        if (!forPkg.startsWith(getFullPackage())) {\n             return null;\n         }\n \n         // Check if any of the children match.\n-        for (PkgControl pc : mChildren) {\n-            final PkgControl match \u003d pc.locateFinest(aForPkg);\n+        for (PkgControl pc : children) {\n+            final PkgControl match \u003d pc.locateFinest(forPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    PkgControl locateFinest(final String forPkg)\n    {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!forPkg.startsWith(getFullPackage())) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        for (PkgControl pc : children) {\n            final PkgControl match \u003d pc.locateFinest(forPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    PkgControl locateFinest(final String aForPkg)\n    {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!aForPkg.startsWith(getFullPackage())) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        for (PkgControl pc : mChildren) {\n            final PkgControl match \u003d pc.locateFinest(aForPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java"
      }
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "15/12/07 12:14 AM",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n     PkgControl locateFinest(final String aForPkg)\n     {\n         // Check if we are a match.\n         // This algormithm should be improved to check for a trailing \".\"\n         // or nothing following.\n         if (!aForPkg.startsWith(getFullPackage())) {\n             return null;\n         }\n \n         // Check if any of the children match.\n-        final Iterator it \u003d mChildren.iterator();\n-        while (it.hasNext()) {\n-            final PkgControl pc \u003d (PkgControl) it.next();\n+        for (PkgControl pc : mChildren) {\n             final PkgControl match \u003d pc.locateFinest(aForPkg);\n             if (match !\u003d null) {\n                 return match;\n             }\n         }\n \n         // No match so I am the best there is.\n         return this;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    PkgControl locateFinest(final String aForPkg)\n    {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!aForPkg.startsWith(getFullPackage())) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        for (PkgControl pc : mChildren) {\n            final PkgControl match \u003d pc.locateFinest(aForPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": "27/07/05 1:29 PM",
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,22 @@\n+    PkgControl locateFinest(final String aForPkg)\n+    {\n+        // Check if we are a match.\n+        // This algormithm should be improved to check for a trailing \".\"\n+        // or nothing following.\n+        if (!aForPkg.startsWith(getFullPackage())) {\n+            return null;\n+        }\n+\n+        // Check if any of the children match.\n+        final Iterator it \u003d mChildren.iterator();\n+        while (it.hasNext()) {\n+            final PkgControl pc \u003d (PkgControl) it.next();\n+            final PkgControl match \u003d pc.locateFinest(aForPkg);\n+            if (match !\u003d null) {\n+                return match;\n+            }\n+        }\n+\n+        // No match so I am the best there is.\n+        return this;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    PkgControl locateFinest(final String aForPkg)\n    {\n        // Check if we are a match.\n        // This algormithm should be improved to check for a trailing \".\"\n        // or nothing following.\n        if (!aForPkg.startsWith(getFullPackage())) {\n            return null;\n        }\n\n        // Check if any of the children match.\n        final Iterator it \u003d mChildren.iterator();\n        while (it.hasNext()) {\n            final PkgControl pc \u003d (PkgControl) it.next();\n            final PkgControl match \u003d pc.locateFinest(aForPkg);\n            if (match !\u003d null) {\n                return match;\n            }\n        }\n\n        // No match so I am the best there is.\n        return this;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java"
    }
  }
}