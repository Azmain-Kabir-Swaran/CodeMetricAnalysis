{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImportOrderCheck.java",
  "functionName": "doVisitToken",
  "functionId": "doVisitToken___ident-FullIdent__isStatic-boolean__previous-boolean__ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
  "functionStartLine": 663,
  "functionEndLine": 686,
  "numCommitsSeen": 273,
  "timeTaken": 4647,
  "changeHistory": [
    "57c244fcf81bf0ed6658e7cabb82d5091075e591",
    "4e07bd654bddb2f1063a5aae956a0b81826c34f8",
    "1a6dafadd522b48c59289afd780a1df007f72819",
    "f4e6424cd5892b72c96d35d7625560959583ea0d",
    "6e74c7d42d90264899ef5ab78712755a3ef1811f",
    "acfe3c0ad96616bee811de28528aaeac74a62319",
    "a736d191a9d240a3a8b3a90b5651eb98b3af7d18",
    "1b91687d6ac114dd0354dd9df70ea53a1765bdc6",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab",
    "c09131defe36dde56b2d9767d1953d93e20bd200",
    "ad42ed29799a13b9426a05cc94b4a4aaba709c2c",
    "290ae38a14021785018fbfa7c2651200534a88ca",
    "b69e47845e1903966ddf39efdf49e103ff5a5248",
    "5bd22fd6136bd16e82d32c5a386bcf033004d8eb",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "22136c67e9c83494e7aa977ffe7a79beee1b4175"
  ],
  "changeHistoryShort": {
    "57c244fcf81bf0ed6658e7cabb82d5091075e591": "Ymultichange(Yparameterchange,Ybodychange)",
    "4e07bd654bddb2f1063a5aae956a0b81826c34f8": "Ybodychange",
    "1a6dafadd522b48c59289afd780a1df007f72819": "Ybodychange",
    "f4e6424cd5892b72c96d35d7625560959583ea0d": "Ymultichange(Yparameterchange,Ybodychange)",
    "6e74c7d42d90264899ef5ab78712755a3ef1811f": "Ybodychange",
    "acfe3c0ad96616bee811de28528aaeac74a62319": "Ybodychange",
    "a736d191a9d240a3a8b3a90b5651eb98b3af7d18": "Ybodychange",
    "1b91687d6ac114dd0354dd9df70ea53a1765bdc6": "Ybodychange",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": "Ybodychange",
    "c09131defe36dde56b2d9767d1953d93e20bd200": "Ybodychange",
    "ad42ed29799a13b9426a05cc94b4a4aaba709c2c": "Ybodychange",
    "290ae38a14021785018fbfa7c2651200534a88ca": "Ybodychange",
    "b69e47845e1903966ddf39efdf49e103ff5a5248": "Ybodychange",
    "5bd22fd6136bd16e82d32c5a386bcf033004d8eb": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "22136c67e9c83494e7aa977ffe7a79beee1b4175": "Yintroduced"
  },
  "changeHistoryDetails": {
    "57c244fcf81bf0ed6658e7cabb82d5091075e591": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder\n",
      "commitDate": "19/03/20 10:54 AM",
      "commitName": "57c244fcf81bf0ed6658e7cabb82d5091075e591",
      "commitAuthor": "kaustubh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder\n",
          "commitDate": "19/03/20 10:54 AM",
          "commitName": "57c244fcf81bf0ed6658e7cabb82d5091075e591",
          "commitAuthor": "kaustubh",
          "commitDateOld": "01/01/20 4:38 PM",
          "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 77.72,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n+    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, DetailAST ast) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n \n         if (groupIdx \u003e lastGroup) {\n-            if (!beforeFirstImport \u0026\u0026 line - lastImportLine \u003c 2 \u0026\u0026 needSeparator(isStatic)) {\n-                log(line, MSG_SEPARATION, name);\n+            if (!beforeFirstImport\n+                \u0026\u0026 ast.getLineNo() - lastImportLine \u003c 2\n+                \u0026\u0026 needSeparator(isStatic)) {\n+                log(ast, MSG_SEPARATION, name);\n             }\n         }\n         else if (groupIdx \u003d\u003d lastGroup) {\n-            doVisitTokenInSameGroup(isStatic, previous, name, line);\n+            doVisitTokenInSameGroup(isStatic, previous, name, ast);\n         }\n         else {\n-            log(line, MSG_ORDERING, name);\n+            log(ast, MSG_ORDERING, name);\n         }\n-        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n-            log(line, MSG_SEPARATED_IN_GROUP, name);\n+        if (isSeparatorInGroup(groupIdx, isStatic, ast.getLineNo())) {\n+            log(ast, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, DetailAST ast) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport\n                \u0026\u0026 ast.getLineNo() - lastImportLine \u003c 2\n                \u0026\u0026 needSeparator(isStatic)) {\n                log(ast, MSG_SEPARATION, name);\n            }\n        }\n        else if (groupIdx \u003d\u003d lastGroup) {\n            doVisitTokenInSameGroup(isStatic, previous, name, ast);\n        }\n        else {\n            log(ast, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, ast.getLineNo())) {\n            log(ast, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[ident-FullIdent, isStatic-boolean, previous-boolean, line-int]",
            "newValue": "[ident-FullIdent, isStatic-boolean, previous-boolean, ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #7733: Update AbstractChecks to log DetailAST - ImportOrder\n",
          "commitDate": "19/03/20 10:54 AM",
          "commitName": "57c244fcf81bf0ed6658e7cabb82d5091075e591",
          "commitAuthor": "kaustubh",
          "commitDateOld": "01/01/20 4:38 PM",
          "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 77.72,
          "commitsBetweenForRepo": 180,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n+    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, DetailAST ast) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n \n         if (groupIdx \u003e lastGroup) {\n-            if (!beforeFirstImport \u0026\u0026 line - lastImportLine \u003c 2 \u0026\u0026 needSeparator(isStatic)) {\n-                log(line, MSG_SEPARATION, name);\n+            if (!beforeFirstImport\n+                \u0026\u0026 ast.getLineNo() - lastImportLine \u003c 2\n+                \u0026\u0026 needSeparator(isStatic)) {\n+                log(ast, MSG_SEPARATION, name);\n             }\n         }\n         else if (groupIdx \u003d\u003d lastGroup) {\n-            doVisitTokenInSameGroup(isStatic, previous, name, line);\n+            doVisitTokenInSameGroup(isStatic, previous, name, ast);\n         }\n         else {\n-            log(line, MSG_ORDERING, name);\n+            log(ast, MSG_ORDERING, name);\n         }\n-        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n-            log(line, MSG_SEPARATED_IN_GROUP, name);\n+        if (isSeparatorInGroup(groupIdx, isStatic, ast.getLineNo())) {\n+            log(ast, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, DetailAST ast) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport\n                \u0026\u0026 ast.getLineNo() - lastImportLine \u003c 2\n                \u0026\u0026 needSeparator(isStatic)) {\n                log(ast, MSG_SEPARATION, name);\n            }\n        }\n        else if (groupIdx \u003d\u003d lastGroup) {\n            doVisitTokenInSameGroup(isStatic, previous, name, ast);\n        }\n        else {\n            log(ast, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, ast.getLineNo())) {\n            log(ast, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "4e07bd654bddb2f1063a5aae956a0b81826c34f8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5279: static imports can be separated by local groups when they are at the top/bottom\n",
      "commitDate": "11/07/18 8:17 PM",
      "commitName": "4e07bd654bddb2f1063a5aae956a0b81826c34f8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "01/07/18 7:45 AM",
      "commitNameOld": "1a6dafadd522b48c59289afd780a1df007f72819",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 10.52,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n         final String name \u003d ident.getText();\n-        final boolean staticImportsIndependent \u003d\n-                option \u003d\u003d ImportOrderOption.TOP || option \u003d\u003d ImportOrderOption.BOTTOM;\n-        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsIndependent, name);\n+        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n \n         if (groupIdx \u003e lastGroup) {\n-            if (!beforeFirstImport \u0026\u0026 !isStatic \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n+            if (!beforeFirstImport \u0026\u0026 line - lastImportLine \u003c 2 \u0026\u0026 needSeparator(isStatic)) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else if (groupIdx \u003d\u003d lastGroup) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n-        if (isSeparatorInGroup(groupIdx, line)) {\n+        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsApart, name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 line - lastImportLine \u003c 2 \u0026\u0026 needSeparator(isStatic)) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (groupIdx \u003d\u003d lastGroup) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "1a6dafadd522b48c59289afd780a1df007f72819": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5724: Groups for static imports\n",
      "commitDate": "01/07/18 7:45 AM",
      "commitName": "1a6dafadd522b48c59289afd780a1df007f72819",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "04/06/18 9:52 PM",
      "commitNameOld": "f4e6424cd5892b72c96d35d7625560959583ea0d",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 26.41,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n         final String name \u003d ident.getText();\n-        final int groupIdx \u003d getGroupNumber(name);\n+        final boolean staticImportsIndependent \u003d\n+                option \u003d\u003d ImportOrderOption.TOP || option \u003d\u003d ImportOrderOption.BOTTOM;\n+        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsIndependent, name);\n \n         if (groupIdx \u003e lastGroup) {\n-            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n-                \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n+            if (!beforeFirstImport \u0026\u0026 !isStatic \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n-        else if (isInSameGroup(groupIdx, isStatic)) {\n+        else if (groupIdx \u003d\u003d lastGroup) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n-        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n+        if (isSeparatorInGroup(groupIdx, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n        final String name \u003d ident.getText();\n        final boolean staticImportsIndependent \u003d\n                option \u003d\u003d ImportOrderOption.TOP || option \u003d\u003d ImportOrderOption.BOTTOM;\n        final int groupIdx \u003d getGroupNumber(isStatic \u0026\u0026 staticImportsIndependent, name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 !isStatic \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (groupIdx \u003d\u003d lastGroup) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "f4e6424cd5892b72c96d35d7625560959583ea0d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #5881: False positive for multiline imports\n",
      "commitDate": "04/06/18 9:52 PM",
      "commitName": "f4e6424cd5892b72c96d35d7625560959583ea0d",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #5881: False positive for multiline imports\n",
          "commitDate": "04/06/18 9:52 PM",
          "commitName": "f4e6424cd5892b72c96d35d7625560959583ea0d",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "03/06/18 9:40 PM",
          "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,23 @@\n-    private void doVisitToken(FullIdent ident, boolean isStatic,\n-            boolean previous) {\n+    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n-        final int line \u003d ident.getLineNo();\n \n         if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n                 \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else if (isInSameGroup(groupIdx, isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n         if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n                \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (isInSameGroup(groupIdx, isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[ident-FullIdent, isStatic-boolean, previous-boolean]",
            "newValue": "[ident-FullIdent, isStatic-boolean, previous-boolean, line-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5881: False positive for multiline imports\n",
          "commitDate": "04/06/18 9:52 PM",
          "commitName": "f4e6424cd5892b72c96d35d7625560959583ea0d",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "03/06/18 9:40 PM",
          "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 1.01,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,23 @@\n-    private void doVisitToken(FullIdent ident, boolean isStatic,\n-            boolean previous) {\n+    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n-        final int line \u003d ident.getLineNo();\n \n         if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n                 \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else if (isInSameGroup(groupIdx, isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n         if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic, boolean previous, int line) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n                \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (isInSameGroup(groupIdx, isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "6e74c7d42d90264899ef5ab78712755a3ef1811f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4981: ImportOrder with order\u003dbottom should disallow non-static import after a static import\n",
      "commitDate": "25/12/17 12:49 PM",
      "commitName": "6e74c7d42d90264899ef5ab78712755a3ef1811f",
      "commitAuthor": "Julian Hyde",
      "commitDateOld": "23/11/17 7:47 PM",
      "commitNameOld": "7faa54908ee013e10a04676f91218ffb0d2d827a",
      "commitAuthorOld": "BBG",
      "daysBetweenCommits": 31.71,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n-        if (isInSameGroup(groupIdx, isStatic)) {\n-            doVisitTokenInSameGroup(isStatic, previous, name, line);\n-        }\n-        else if (groupIdx \u003e lastGroup) {\n-            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n+        if (groupIdx \u003e lastGroup) {\n+            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n+                \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n+        else if (isInSameGroup(groupIdx, isStatic)) {\n+            doVisitTokenInSameGroup(isStatic, previous, name, line);\n+        }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n         if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2\n                \u0026\u0026 !isInSameGroup(groupIdx, isStatic)) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (isInSameGroup(groupIdx, isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "acfe3c0ad96616bee811de28528aaeac74a62319": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5176: adjacent static import groups ones became impossible in 8.3\n",
      "commitDate": "23/11/17 7:47 PM",
      "commitName": "acfe3c0ad96616bee811de28528aaeac74a62319",
      "commitAuthor": "BBG",
      "commitDateOld": "30/10/17 6:16 PM",
      "commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 24.11,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n-        if (groupIdx \u003d\u003d lastGroup\n-            || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n+        if (isInSameGroup(groupIdx, isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n         if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (isInSameGroup(groupIdx, isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "a736d191a9d240a3a8b3a90b5651eb98b3af7d18": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5065: No violation before or after changes for static import list\n",
      "commitDate": "20/09/17 7:12 PM",
      "commitName": "a736d191a9d240a3a8b3a90b5651eb98b3af7d18",
      "commitAuthor": "BBG",
      "commitDateOld": "21/08/17 6:24 AM",
      "commitNameOld": "30aa3ef654917d43dafef038f62b9a6eda634273",
      "commitAuthorOld": "Piyush Sharma",
      "daysBetweenCommits": 30.53,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n         if (groupIdx \u003d\u003d lastGroup\n             || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n-        if (checkSeparatorInGroup(groupIdx, isStatic, line)) {\n+        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n             log(line, MSG_SEPARATED_IN_GROUP, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (groupIdx \u003d\u003d lastGroup\n            || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (isSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "1b91687d6ac114dd0354dd9df70ea53a1765bdc6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2143: add check extra separation in group\n",
      "commitDate": "28/11/16 3:55 PM",
      "commitName": "1b91687d6ac114dd0354dd9df70ea53a1765bdc6",
      "commitAuthor": "linelect",
      "commitDateOld": "14/09/16 1:58 PM",
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 75.12,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n         if (groupIdx \u003d\u003d lastGroup\n             || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n+        if (checkSeparatorInGroup(groupIdx, isStatic, line)) {\n+            log(line, MSG_SEPARATED_IN_GROUP, name);\n+        }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (groupIdx \u003d\u003d lastGroup\n            || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n        if (checkSeparatorInGroup(groupIdx, isStatic, line)) {\n            log(line, MSG_SEPARATED_IN_GROUP, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce LogicConditionNeedOptimizationCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "24/12/15 1:59 PM",
      "commitName": "6ee4a0f805d528cdee03cfc175502d15b5722dab",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "22/12/15 8:55 AM",
      "commitNameOld": "2c23e07558b15944638601a2620fa6aefd12ec2a",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 2.21,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n-        if (!beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)\n-                || groupIdx \u003d\u003d lastGroup) {\n+        if (groupIdx \u003d\u003d lastGroup\n+            || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n             doVisitTokenInSameGroup(isStatic, previous, name, line);\n         }\n         else if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (groupIdx \u003d\u003d lastGroup\n            || !beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "c09131defe36dde56b2d9767d1953d93e20bd200": {
      "type": "Ybodychange",
      "commitMessage": "ImportOrderCheck. Fix separation for static imports #1398\n",
      "commitDate": "20/07/15 9:11 PM",
      "commitName": "c09131defe36dde56b2d9767d1953d93e20bd200",
      "commitAuthor": "Aleksandr Ivanov",
      "commitDateOld": "16/07/15 5:23 PM",
      "commitNameOld": "f6cb72258856fdae0b89c66a0ba750712674cdee",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 4.16,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n         final String name \u003d ident.getText();\n         final int groupIdx \u003d getGroupNumber(name);\n         final int line \u003d ident.getLineNo();\n \n-        if (groupIdx \u003e lastGroup) {\n-            // This check should be made more robust to handle\n-            // comments and imports that span more than one line.\n+        if (!beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)\n+                || groupIdx \u003d\u003d lastGroup) {\n+            doVisitTokenInSameGroup(isStatic, previous, name, line);\n+        }\n+        else if (groupIdx \u003e lastGroup) {\n             if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                 log(line, MSG_SEPARATION, name);\n             }\n         }\n-        else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n-                 \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n-            doVisitTokenInSameGroup(isStatic, previous, name, line);\n-        }\n         else {\n             log(line, MSG_ORDERING, name);\n         }\n \n         lastGroup \u003d groupIdx;\n         lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (!beforeFirstImport \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)\n                || groupIdx \u003d\u003d lastGroup) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else if (groupIdx \u003e lastGroup) {\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "ad42ed29799a13b9426a05cc94b4a4aaba709c2c": {
      "type": "Ybodychange",
      "commitMessage": "UT coverage improved for ImportOrderCheck #1128\n",
      "commitDate": "11/07/15 10:10 PM",
      "commitName": "ad42ed29799a13b9426a05cc94b4a4aaba709c2c",
      "commitAuthor": "Aleksandr Ivanov",
      "commitDateOld": "15/06/15 8:51 PM",
      "commitNameOld": "3ba66c7d22f0d75412a851717d976f875ef9c4d0",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 26.05,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous) {\n-        if (ident !\u003d null) {\n-            final String name \u003d ident.getText();\n-            final int groupIdx \u003d getGroupNumber(name);\n-            final int line \u003d ident.getLineNo();\n+        final String name \u003d ident.getText();\n+        final int groupIdx \u003d getGroupNumber(name);\n+        final int line \u003d ident.getLineNo();\n \n-            if (groupIdx \u003e lastGroup) {\n-                // This check should be made more robust to handle\n-                // comments and imports that span more than one line.\n-                if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n-                    log(line, MSG_SEPARATION, name);\n-                }\n+        if (groupIdx \u003e lastGroup) {\n+            // This check should be made more robust to handle\n+            // comments and imports that span more than one line.\n+            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n+                log(line, MSG_SEPARATION, name);\n             }\n-            else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n-                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n-                doVisitTokenInSameGroup(isStatic, previous, name, line);\n-            }\n-            else {\n-                log(line, MSG_ORDERING, name);\n-            }\n-\n-            lastGroup \u003d groupIdx;\n-            lastImport \u003d name;\n         }\n+        else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n+                 \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n+            doVisitTokenInSameGroup(isStatic, previous, name, line);\n+        }\n+        else {\n+            log(line, MSG_ORDERING, name);\n+        }\n+\n+        lastGroup \u003d groupIdx;\n+        lastImport \u003d name;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous) {\n        final String name \u003d ident.getText();\n        final int groupIdx \u003d getGroupNumber(name);\n        final int line \u003d ident.getLineNo();\n\n        if (groupIdx \u003e lastGroup) {\n            // This check should be made more robust to handle\n            // comments and imports that span more than one line.\n            if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                log(line, MSG_SEPARATION, name);\n            }\n        }\n        else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n                 \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)) {\n            doVisitTokenInSameGroup(isStatic, previous, name, line);\n        }\n        else {\n            log(line, MSG_ORDERING, name);\n        }\n\n        lastGroup \u003d groupIdx;\n        lastImport \u003d name;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "290ae38a14021785018fbfa7c2651200534a88ca": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nAdditional fix for [UselessParentheses](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/unnecessary.html#UselessParentheses) rule.\n",
      "commitDate": "24/03/15 12:58 PM",
      "commitName": "290ae38a14021785018fbfa7c2651200534a88ca",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "24/03/15 12:58 PM",
      "commitNameOld": "b69e47845e1903966ddf39efdf49e103ff5a5248",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous)\n     {\n         if (ident !\u003d null) {\n             final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d ident.getLineNo();\n \n             if (groupIdx \u003e lastGroup) {\n                 // This check should be made more robust to handle\n                 // comments and imports that span more than one line.\n                 if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                     log(line, MSG_SEPARATION, name);\n                 }\n             }\n-            else if (groupIdx \u003d\u003d lastGroup || (sortStaticImportsAlphabetically\n-                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)))\n+            else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n+                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic))\n             {\n                 doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, MSG_ORDERING, name);\n             }\n \n             lastGroup \u003d groupIdx;\n             lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                // This check should be made more robust to handle\n                // comments and imports that span more than one line.\n                if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                    log(line, MSG_SEPARATION, name);\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup || sortStaticImportsAlphabetically\n                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic))\n            {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, MSG_ORDERING, name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "b69e47845e1903966ddf39efdf49e103ff5a5248": {
      "type": "Ybodychange",
      "commitMessage": "Combine nested if statements, issue #744\n\nAdditional fixes for PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements).\n",
      "commitDate": "24/03/15 12:58 PM",
      "commitName": "b69e47845e1903966ddf39efdf49e103ff5a5248",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "16/03/15 10:44 PM",
      "commitNameOld": "5bd22fd6136bd16e82d32c5a386bcf033004d8eb",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 7.59,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,28 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous)\n     {\n         if (ident !\u003d null) {\n             final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d ident.getLineNo();\n \n             if (groupIdx \u003e lastGroup) {\n-                if (!beforeFirstImport \u0026\u0026 separated) {\n-                    // This check should be made more robust to handle\n-                    // comments and imports that span more than one line.\n-                    if (line - lastImportLine \u003c 2) {\n-                        log(line, MSG_SEPARATION, name);\n-                    }\n+                // This check should be made more robust to handle\n+                // comments and imports that span more than one line.\n+                if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n+                    log(line, MSG_SEPARATION, name);\n                 }\n             }\n             else if (groupIdx \u003d\u003d lastGroup || (sortStaticImportsAlphabetically\n                      \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)))\n             {\n                 doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, MSG_ORDERING, name);\n             }\n \n             lastGroup \u003d groupIdx;\n             lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                // This check should be made more robust to handle\n                // comments and imports that span more than one line.\n                if (!beforeFirstImport \u0026\u0026 separated \u0026\u0026 line - lastImportLine \u003c 2) {\n                    log(line, MSG_SEPARATION, name);\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup || (sortStaticImportsAlphabetically\n                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)))\n            {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, MSG_ORDERING, name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "5bd22fd6136bd16e82d32c5a386bcf033004d8eb": {
      "type": "Ybodychange",
      "commitMessage": "Import Order Check, added option allows alphabetical grouping order in static group, issue #12\n",
      "commitDate": "16/03/15 10:44 PM",
      "commitName": "5bd22fd6136bd16e82d32c5a386bcf033004d8eb",
      "commitAuthor": "alexkravin",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 6.34,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous)\n     {\n         if (ident !\u003d null) {\n             final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d ident.getLineNo();\n \n             if (groupIdx \u003e lastGroup) {\n                 if (!beforeFirstImport \u0026\u0026 separated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n                     if (line - lastImportLine \u003c 2) {\n                         log(line, MSG_SEPARATION, name);\n                     }\n                 }\n             }\n-            else if (groupIdx \u003d\u003d lastGroup) {\n+            else if (groupIdx \u003d\u003d lastGroup || (sortStaticImportsAlphabetically\n+                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)))\n+            {\n                 doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, MSG_ORDERING, name);\n             }\n \n             lastGroup \u003d groupIdx;\n             lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                if (!beforeFirstImport \u0026\u0026 separated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if (line - lastImportLine \u003c 2) {\n                        log(line, MSG_SEPARATION, name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup || (sortStaticImportsAlphabetically\n                     \u0026\u0026 isAlphabeticallySortableStaticImport(isStatic)))\n            {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, MSG_ORDERING, name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "10/03/15 7:46 AM",
      "commitNameOld": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous)\n     {\n         if (ident !\u003d null) {\n             final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d ident.getLineNo();\n \n             if (groupIdx \u003e lastGroup) {\n                 if (!beforeFirstImport \u0026\u0026 separated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n-                    if ((line - lastImportLine) \u003c 2) {\n+                    if (line - lastImportLine \u003c 2) {\n                         log(line, MSG_SEPARATION, name);\n                     }\n                 }\n             }\n             else if (groupIdx \u003d\u003d lastGroup) {\n                 doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, MSG_ORDERING, name);\n             }\n \n             lastGroup \u003d groupIdx;\n             lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                if (!beforeFirstImport \u0026\u0026 separated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if (line - lastImportLine \u003c 2) {\n                        log(line, MSG_SEPARATION, name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup) {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, MSG_ORDERING, name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, imports package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void doVisitToken(FullIdent ident, boolean isStatic,\n             boolean previous)\n     {\n         if (ident !\u003d null) {\n             final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d ident.getLineNo();\n \n             if (groupIdx \u003e lastGroup) {\n                 if (!beforeFirstImport \u0026\u0026 separated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n                     if ((line - lastImportLine) \u003c 2) {\n-                        log(line, \"import.separation\", name);\n+                        log(line, MSG_SEPARATION, name);\n                     }\n                 }\n             }\n             else if (groupIdx \u003d\u003d lastGroup) {\n                 doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n-                log(line, \"import.ordering\", name);\n+                log(line, MSG_ORDERING, name);\n             }\n \n             lastGroup \u003d groupIdx;\n             lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                if (!beforeFirstImport \u0026\u0026 separated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - lastImportLine) \u003c 2) {\n                        log(line, MSG_SEPARATION, name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup) {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, MSG_ORDERING, name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n-            boolean aPrevious)\n+    private void doVisitToken(FullIdent ident, boolean isStatic,\n+            boolean previous)\n     {\n-        if (aIdent !\u003d null) {\n-            final String name \u003d aIdent.getText();\n+        if (ident !\u003d null) {\n+            final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n-            final int line \u003d aIdent.getLineNo();\n+            final int line \u003d ident.getLineNo();\n \n-            if (groupIdx \u003e mLastGroup) {\n-                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n+            if (groupIdx \u003e lastGroup) {\n+                if (!beforeFirstImport \u0026\u0026 separated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n-                    if ((line - mLastImportLine) \u003c 2) {\n+                    if ((line - lastImportLine) \u003c 2) {\n                         log(line, \"import.separation\", name);\n                     }\n                 }\n             }\n-            else if (groupIdx \u003d\u003d mLastGroup) {\n-                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);\n+            else if (groupIdx \u003d\u003d lastGroup) {\n+                doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, \"import.ordering\", name);\n             }\n \n-            mLastGroup \u003d groupIdx;\n-            mLastImport \u003d name;\n+            lastGroup \u003d groupIdx;\n+            lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                if (!beforeFirstImport \u0026\u0026 separated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - lastImportLine) \u003c 2) {\n                        log(line, \"import.separation\", name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup) {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, \"import.ordering\", name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aIdent-FullIdent, aIsStatic-boolean, aPrevious-boolean]",
            "newValue": "[ident-FullIdent, isStatic-boolean, previous-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n-            boolean aPrevious)\n+    private void doVisitToken(FullIdent ident, boolean isStatic,\n+            boolean previous)\n     {\n-        if (aIdent !\u003d null) {\n-            final String name \u003d aIdent.getText();\n+        if (ident !\u003d null) {\n+            final String name \u003d ident.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n-            final int line \u003d aIdent.getLineNo();\n+            final int line \u003d ident.getLineNo();\n \n-            if (groupIdx \u003e mLastGroup) {\n-                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n+            if (groupIdx \u003e lastGroup) {\n+                if (!beforeFirstImport \u0026\u0026 separated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n-                    if ((line - mLastImportLine) \u003c 2) {\n+                    if ((line - lastImportLine) \u003c 2) {\n                         log(line, \"import.separation\", name);\n                     }\n                 }\n             }\n-            else if (groupIdx \u003d\u003d mLastGroup) {\n-                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);\n+            else if (groupIdx \u003d\u003d lastGroup) {\n+                doVisitTokenInSameGroup(isStatic, previous, name, line);\n             }\n             else {\n                 log(line, \"import.ordering\", name);\n             }\n \n-            mLastGroup \u003d groupIdx;\n-            mLastImport \u003d name;\n+            lastGroup \u003d groupIdx;\n+            lastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void doVisitToken(FullIdent ident, boolean isStatic,\n            boolean previous)\n    {\n        if (ident !\u003d null) {\n            final String name \u003d ident.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d ident.getLineNo();\n\n            if (groupIdx \u003e lastGroup) {\n                if (!beforeFirstImport \u0026\u0026 separated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - lastImportLine) \u003c 2) {\n                        log(line, \"import.separation\", name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d lastGroup) {\n                doVisitTokenInSameGroup(isStatic, previous, name, line);\n            }\n            else {\n                log(line, \"import.ordering\", name);\n            }\n\n            lastGroup \u003d groupIdx;\n            lastImport \u003d name;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n            boolean aPrevious)\n    {\n        if (aIdent !\u003d null) {\n            final String name \u003d aIdent.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d aIdent.getLineNo();\n\n            if (groupIdx \u003e mLastGroup) {\n                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - mLastImportLine) \u003c 2) {\n                        log(line, \"import.separation\", name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d mLastGroup) {\n                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);\n            }\n            else {\n                log(line, \"import.ordering\", name);\n            }\n\n            mLastGroup \u003d groupIdx;\n            mLastImport \u003d name;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java"
      }
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": "05/12/13 9:12 AM",
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "04/10/13 9:22 PM",
      "commitNameOld": "788f87df4db1368ee0563e1ba1199177618cc01f",
      "commitAuthorOld": "picomancer",
      "daysBetweenCommits": 61.54,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,28 @@\n     private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n             boolean aPrevious)\n     {\n         if (aIdent !\u003d null) {\n             final String name \u003d aIdent.getText();\n             final int groupIdx \u003d getGroupNumber(name);\n             final int line \u003d aIdent.getLineNo();\n \n             if (groupIdx \u003e mLastGroup) {\n                 if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n                     // This check should be made more robust to handle\n                     // comments and imports that span more than one line.\n                     if ((line - mLastImportLine) \u003c 2) {\n                         log(line, \"import.separation\", name);\n                     }\n                 }\n             }\n             else if (groupIdx \u003d\u003d mLastGroup) {\n-                doVisitTokenInSameGroup(aIdent, aIsStatic, aPrevious, name,\n-                        line);\n+                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);\n             }\n             else {\n                 log(line, \"import.ordering\", name);\n             }\n \n             mLastGroup \u003d groupIdx;\n             mLastImport \u003d name;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n            boolean aPrevious)\n    {\n        if (aIdent !\u003d null) {\n            final String name \u003d aIdent.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d aIdent.getLineNo();\n\n            if (groupIdx \u003e mLastGroup) {\n                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - mLastImportLine) \u003c 2) {\n                        log(line, \"import.separation\", name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d mLastGroup) {\n                doVisitTokenInSameGroup(aIsStatic, aPrevious, name, line);\n            }\n            else {\n                log(line, \"import.ordering\", name);\n            }\n\n            mLastGroup \u003d groupIdx;\n            mLastImport \u003d name;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "22136c67e9c83494e7aa977ffe7a79beee1b4175": {
      "type": "Yintroduced",
      "commitMessage": "Add new options to the ImportOrderCheck to make it more flexible. Thanks to David Didier for providing patch #1854213.\n",
      "commitDate": "07/09/08 4:28 AM",
      "commitName": "22136c67e9c83494e7aa977ffe7a79beee1b4175",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,29 @@\n+    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n+            boolean aPrevious)\n+    {\n+        if (aIdent !\u003d null) {\n+            final String name \u003d aIdent.getText();\n+            final int groupIdx \u003d getGroupNumber(name);\n+            final int line \u003d aIdent.getLineNo();\n+\n+            if (groupIdx \u003e mLastGroup) {\n+                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n+                    // This check should be made more robust to handle\n+                    // comments and imports that span more than one line.\n+                    if ((line - mLastImportLine) \u003c 2) {\n+                        log(line, \"import.separation\", name);\n+                    }\n+                }\n+            }\n+            else if (groupIdx \u003d\u003d mLastGroup) {\n+                doVisitTokenInSameGroup(aIdent, aIsStatic, aPrevious, name,\n+                        line);\n+            }\n+            else {\n+                log(line, \"import.ordering\", name);\n+            }\n+\n+            mLastGroup \u003d groupIdx;\n+            mLastImport \u003d name;\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void doVisitToken(FullIdent aIdent, boolean aIsStatic,\n            boolean aPrevious)\n    {\n        if (aIdent !\u003d null) {\n            final String name \u003d aIdent.getText();\n            final int groupIdx \u003d getGroupNumber(name);\n            final int line \u003d aIdent.getLineNo();\n\n            if (groupIdx \u003e mLastGroup) {\n                if (!mBeforeFirstImport \u0026\u0026 mSeparated) {\n                    // This check should be made more robust to handle\n                    // comments and imports that span more than one line.\n                    if ((line - mLastImportLine) \u003c 2) {\n                        log(line, \"import.separation\", name);\n                    }\n                }\n            }\n            else if (groupIdx \u003d\u003d mLastGroup) {\n                doVisitTokenInSameGroup(aIdent, aIsStatic, aPrevious, name,\n                        line);\n            }\n            else {\n                log(line, \"import.ordering\", name);\n            }\n\n            mLastGroup \u003d groupIdx;\n            mLastImport \u003d name;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java"
    }
  }
}