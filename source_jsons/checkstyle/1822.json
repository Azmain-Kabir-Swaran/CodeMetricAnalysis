{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RequireThisCheck.java",
  "functionName": "isUserDefinedArrangementOfThis",
  "functionId": "isUserDefinedArrangementOfThis___currentFrame-AbstractFrame__ident-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
  "functionStartLine": 686,
  "functionEndLine": 708,
  "numCommitsSeen": 91,
  "timeTaken": 1802,
  "changeHistory": [
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
    "81c030e322201085e463b9cc97e3e8dbce0e38d4",
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25"
  ],
  "changeHistoryShort": {
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": "Ybodychange",
    "81c030e322201085e463b9cc97e3e8dbce0e38d4": "Ybodychange",
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e": "Ybodychange",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4102: changed loops to end execution early",
      "commitDate": "05/04/17 4:59 AM",
      "commitName": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthor": "rnveach",
      "commitDateOld": "28/02/17 10:49 AM",
      "commitNameOld": "1a49cdac6fca0c130e212b49f790865f9ad2c267",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 35.72,
      "commitsBetweenForRepo": 86,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n         boolean userDefinedArrangementOfThis \u003d false;\n \n         final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n             getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n                 blockEndToken.getLineNo());\n \n         for (DetailAST variableUsage : variableUsagesInsideBlock) {\n             final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n             if (prevSibling !\u003d null\n                     \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                 userDefinedArrangementOfThis \u003d true;\n+                break;\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                          DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        boolean userDefinedArrangementOfThis \u003d false;\n\n        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n            getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n                blockEndToken.getLineNo());\n\n        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n            if (prevSibling !\u003d null\n                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                userDefinedArrangementOfThis \u003d true;\n                break;\n            }\n        }\n        return userDefinedArrangementOfThis;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
      "extendedDetails": {}
    },
    "81c030e322201085e463b9cc97e3e8dbce0e38d4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3335: prevented static variables being checked for RequireThis (#3355)\n\n",
      "commitDate": "25/07/16 9:51 PM",
      "commitName": "81c030e322201085e463b9cc97e3e8dbce0e38d4",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/07/16 9:56 AM",
      "commitNameOld": "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 20.5,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n         boolean userDefinedArrangementOfThis \u003d false;\n \n-        if (blockEndToken !\u003d null) {\n-            final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n-                getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n-                    blockEndToken.getLineNo());\n+        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n+            getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n+                blockEndToken.getLineNo());\n \n-            for (DetailAST variableUsage : variableUsagesInsideBlock) {\n-                final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n-                if (prevSibling !\u003d null\n-                        \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n-                    userDefinedArrangementOfThis \u003d true;\n-                }\n+        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n+            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n+            if (prevSibling !\u003d null\n+                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n+                userDefinedArrangementOfThis \u003d true;\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                          DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        boolean userDefinedArrangementOfThis \u003d false;\n\n        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n            getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n                blockEndToken.getLineNo());\n\n        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n            if (prevSibling !\u003d null\n                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                userDefinedArrangementOfThis \u003d true;\n            }\n        }\n        return userDefinedArrangementOfThis;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
      "extendedDetails": {}
    },
    "0a85131b141a185ec3d7bb92df8ccbd92d38570e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3334: fixed RequireThis when can\u0027t find end block token (#3336)\n\n",
      "commitDate": "05/07/16 9:56 AM",
      "commitName": "0a85131b141a185ec3d7bb92df8ccbd92d38570e",
      "commitAuthor": "rnveach",
      "commitDateOld": "16/06/16 2:33 PM",
      "commitNameOld": "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 18.81,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                           DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n-        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n-            getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo());\n-\n         boolean userDefinedArrangementOfThis \u003d false;\n-        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n-            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n-            if (prevSibling !\u003d null\n-                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n-                userDefinedArrangementOfThis \u003d true;\n+\n+        if (blockEndToken !\u003d null) {\n+            final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n+                getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n+                    blockEndToken.getLineNo());\n+\n+            for (DetailAST variableUsage : variableUsagesInsideBlock) {\n+                final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n+                if (prevSibling !\u003d null\n+                        \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n+                    userDefinedArrangementOfThis \u003d true;\n+                }\n             }\n         }\n         return userDefinedArrangementOfThis;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                          DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        boolean userDefinedArrangementOfThis \u003d false;\n\n        if (blockEndToken !\u003d null) {\n            final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n                getAllTokensWhichAreEqualToCurrent(definitionToken, ident,\n                    blockEndToken.getLineNo());\n\n            for (DetailAST variableUsage : variableUsagesInsideBlock) {\n                final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n                if (prevSibling !\u003d null\n                        \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                    userDefinedArrangementOfThis \u003d true;\n                }\n            }\n        }\n        return userDefinedArrangementOfThis;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
      "extendedDetails": {}
    },
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2362: Add \u0027validateOnlyOverlapping\u0027 option for RequireThisCheck\n",
      "commitDate": "04/03/16 6:34 AM",
      "commitName": "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,20 @@\n+    private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n+                                                          DetailAST ident) {\n+        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n+        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n+        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n+        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n+\n+        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n+            getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo());\n+\n+        boolean userDefinedArrangementOfThis \u003d false;\n+        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n+            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n+            if (prevSibling !\u003d null\n+                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n+                userDefinedArrangementOfThis \u003d true;\n+            }\n+        }\n+        return userDefinedArrangementOfThis;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isUserDefinedArrangementOfThis(AbstractFrame currentFrame,\n                                                          DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        final Set\u003cDetailAST\u003e variableUsagesInsideBlock \u003d\n            getAllTokensWhichAreEqualToCurrent(definitionToken, ident, blockEndToken.getLineNo());\n\n        boolean userDefinedArrangementOfThis \u003d false;\n        for (DetailAST variableUsage : variableUsagesInsideBlock) {\n            final DetailAST prevSibling \u003d variableUsage.getPreviousSibling();\n            if (prevSibling !\u003d null\n                    \u0026\u0026 prevSibling.getType() \u003d\u003d TokenTypes.LITERAL_THIS) {\n                userDefinedArrangementOfThis \u003d true;\n            }\n        }\n        return userDefinedArrangementOfThis;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java"
    }
  }
}