{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ModifierOrderCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
  "functionStartLine": 116,
  "functionEndLine": 139,
  "numCommitsSeen": 82,
  "timeTaken": 2351,
  "changeHistory": [
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "bf9325be913ce46a1427232c455f4830b574ba44",
    "0b98c0389e2cf745cb125a89dece57538fc672b7",
    "0fcae24380f86386ada6b2bb017c2ffe98ecb17e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "262209477f39964a63103613f3e2c985da083371",
    "7c20c36cea276a2b9abb09e8b19eb5825e6a921a",
    "f38937b575880adfae6cf427d7203f04f294114d",
    "6125beffc437f970eae276b4a6542265c6547784",
    "5ce6ad4df6ccdd575168b54e712707e9f77bb524",
    "6d191d438b5a23efd62dacca2a33a3a3bdedecc7",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "bf9325be913ce46a1427232c455f4830b574ba44": "Ybodychange",
    "0b98c0389e2cf745cb125a89dece57538fc672b7": "Ybodychange",
    "0fcae24380f86386ada6b2bb017c2ffe98ecb17e": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "262209477f39964a63103613f3e2c985da083371": "Ybodychange",
    "7c20c36cea276a2b9abb09e8b19eb5825e6a921a": "Ybodychange",
    "f38937b575880adfae6cf427d7203f04f294114d": "Yfilerename",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "5ce6ad4df6ccdd575168b54e712707e9f77bb524": "Yfilerename",
    "6d191d438b5a23efd62dacca2a33a3a3bdedecc7": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     public void visitToken(DetailAST ast) {\n         final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003c\u003e();\n         DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n-                    log(error.getLineNo(), error.getColumnNo(),\n+                    log(error,\n                             MSG_ANNOTATION_ORDER,\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n-                    log(error.getLineNo(), error.getColumnNo(),\n-                            MSG_MODIFIER_ORDER, error.getText());\n+                    log(error, MSG_MODIFIER_ORDER, error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003c\u003e();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error,\n                            MSG_ANNOTATION_ORDER,\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error, MSG_MODIFIER_ORDER, error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "21/02/16 9:02 AM",
      "commitNameOld": "63c85593a57d75e82ed076576d0f3718c1fb4833",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 212.41,
      "commitsBetweenForRepo": 416,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void visitToken(DetailAST ast) {\n-        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n+        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003c\u003e();\n         DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             MSG_ANNOTATION_ORDER,\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             MSG_MODIFIER_ORDER, error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003c\u003e();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_ANNOTATION_ORDER,\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_MODIFIER_ORDER, error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "bf9325be913ce46a1427232c455f4830b574ba44": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2639: adjust AbbreviationAsWordInName in checkstyle_checks.xml to catch unexpected abbreviations\n",
      "commitDate": "21/11/15 5:51 PM",
      "commitName": "bf9325be913ce46a1427232c455f4830b574ba44",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "13/10/15 2:53 PM",
      "commitNameOld": "e04cbbf23e9273cca31b1cc12142e34fae753542",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 39.17,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void visitToken(DetailAST ast) {\n         final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n         DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n-            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n+            final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             MSG_ANNOTATION_ORDER,\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             MSG_MODIFIER_ORDER, error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJls(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_ANNOTATION_ORDER,\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_MODIFIER_ORDER, error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "0b98c0389e2cf745cb125a89dece57538fc672b7": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, modifier package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "0b98c0389e2cf745cb125a89dece57538fc672b7",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST ast)\n     {\n         final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n         DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n-                            \"annotation.order\",\n+                            MSG_ANNOTATION_ORDER,\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n-                            \"mod.order\", error.getText());\n+                            MSG_MODIFIER_ORDER, error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_ANNOTATION_ORDER,\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            MSG_MODIFIER_ORDER, error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "0fcae24380f86386ada6b2bb017c2ffe98ecb17e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, modifier, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, modifier, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n         final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n-        DetailAST modifier \u003d aAST.getFirstChild();\n+        DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, modifier, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "0fcae24380f86386ada6b2bb017c2ffe98ecb17e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 28,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n         final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n-        DetailAST modifier \u003d aAST.getFirstChild();\n+        DetailAST modifier \u003d ast.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d ast.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "22/04/08 5:28 AM",
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n-        AST modifier \u003d aAST.getFirstChild();\n+        DetailAST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n-            mods.add((DetailAST) modifier);\n+            mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        DetailAST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": "22/04/08 5:28 AM",
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 99.2,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003cDetailAST\u003e();\n+        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n         AST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add((DetailAST) modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List\u003cDetailAST\u003e mods \u003d Lists.newArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add((DetailAST) modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "262209477f39964a63103613f3e2c985da083371": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": "14/12/07 9:40 PM",
      "commitName": "262209477f39964a63103613f3e2c985da083371",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/12/07 9:01 PM",
      "commitNameOld": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final List\u003cAST\u003e mods \u003d new ArrayList();\n+        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003cDetailAST\u003e();\n         AST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n-            mods.add(modifier);\n+            mods.add((DetailAST) modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List\u003cDetailAST\u003e mods \u003d new ArrayList\u003cDetailAST\u003e();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add((DetailAST) modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "7c20c36cea276a2b9abb09e8b19eb5825e6a921a": {
      "type": "Ybodychange",
      "commitMessage": "Turn off all checks for Generated code. Fixes issue with using Eclipse plug-in as this is the only way to ignore certain files.\n",
      "commitDate": "14/12/07 9:01 PM",
      "commitName": "7c20c36cea276a2b9abb09e8b19eb5825e6a921a",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.59,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        final List mods \u003d new ArrayList();\n+        final List\u003cAST\u003e mods \u003d new ArrayList();\n         AST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n                 if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"annotation.order\",\n                              error.getFirstChild().getText()\n                              + error.getFirstChild().getNextSibling()\n                                 .getText());\n                 }\n                 else {\n                     log(error.getLineNo(), error.getColumnNo(),\n                             \"mod.order\", error.getText());\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List\u003cAST\u003e mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "f38937b575880adfae6cf427d7203f04f294114d": {
      "type": "Yfilerename",
      "commitMessage": "Moved the ModifierOrderCheck.\n",
      "commitDate": "23/03/05 9:35 PM",
      "commitName": "f38937b575880adfae6cf427d7203f04f294114d",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "23/03/05 4:15 AM",
      "commitNameOld": "bc66e150c2654deb6dcf1806b02e8f816e533d83",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierOrderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/modifier/ModifierOrderCheck.java"
      }
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": "27/09/04 11:55 AM",
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 256.91,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final List mods \u003d new ArrayList();\n         AST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n-                log(error.getLineNo(), error.getColumnNo(),\n-                        \"mod.order\", error.getText());\n+                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+                    log(error.getLineNo(), error.getColumnNo(),\n+                            \"annotation.order\",\n+                             error.getFirstChild().getText()\n+                             + error.getFirstChild().getNextSibling()\n+                                .getText());\n+                }\n+                else {\n+                    log(error.getLineNo(), error.getColumnNo(),\n+                            \"mod.order\", error.getText());\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                if (error.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"annotation.order\",\n                             error.getFirstChild().getText()\n                             + error.getFirstChild().getNextSibling()\n                                .getText());\n                }\n                else {\n                    log(error.getLineNo(), error.getColumnNo(),\n                            \"mod.order\", error.getText());\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierOrderCheck.java",
      "extendedDetails": {}
    },
    "5ce6ad4df6ccdd575168b54e712707e9f77bb524": {
      "type": "Yfilerename",
      "commitMessage": "ModifierCheck to ModifierOrderCheck\n",
      "commitDate": "29/12/02 12:46 AM",
      "commitName": "5ce6ad4df6ccdd575168b54e712707e9f77bb524",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "28/12/02 4:19 AM",
      "commitNameOld": "8ec36bc770a78f423f6c0d0c37b9efd7981815ed",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                log(error.getLineNo(), error.getColumnNo(),\n                        \"mod.order\", error.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierOrderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierOrderCheck.java"
      }
    },
    "6d191d438b5a23efd62dacca2a33a3a3bdedecc7": {
      "type": "Ybodychange",
      "commitMessage": "completed port of modifier order check, removed old code\n",
      "commitDate": "29/09/02 7:28 AM",
      "commitName": "6d191d438b5a23efd62dacca2a33a3a3bdedecc7",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "26/09/02 11:41 PM",
      "commitNameOld": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.32,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final List mods \u003d new ArrayList();\n         AST modifier \u003d aAST.getFirstChild();\n         while (modifier !\u003d null) {\n             mods.add(modifier);\n             modifier \u003d modifier.getNextSibling();\n         }\n \n         if (!mods.isEmpty()) {\n             final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n             if (error !\u003d null) {\n-                log(error.getLineNo(), \"OUT OF ORDER \" + error.getText());\n+                log(error.getLineNo(), error.getColumnNo(),\n+                        \"mod.order\", error.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                log(error.getLineNo(), error.getColumnNo(),\n                        \"mod.order\", error.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierCheck.java",
      "extendedDetails": {}
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": "15/09/02 9:35 AM",
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,16 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        final List mods \u003d new ArrayList();\n+        AST modifier \u003d aAST.getFirstChild();\n+        while (modifier !\u003d null) {\n+            mods.add(modifier);\n+            modifier \u003d modifier.getNextSibling();\n+        }\n+\n+        if (!mods.isEmpty()) {\n+            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n+            if (error !\u003d null) {\n+                log(error.getLineNo(), \"OUT OF ORDER \" + error.getText());\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final List mods \u003d new ArrayList();\n        AST modifier \u003d aAST.getFirstChild();\n        while (modifier !\u003d null) {\n            mods.add(modifier);\n            modifier \u003d modifier.getNextSibling();\n        }\n\n        if (!mods.isEmpty()) {\n            final DetailAST error \u003d checkOrderSuggestedByJLS(mods);\n            if (error !\u003d null) {\n                log(error.getLineNo(), \"OUT OF ORDER \" + error.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ModifierCheck.java"
    }
  }
}