{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "isMatchingClassName",
  "functionId": "isMatchingClassName___className-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 668,
  "functionEndLine": 675,
  "numCommitsSeen": 101,
  "timeTaken": 2645,
  "changeHistory": [
    "96483bdc428bfad0028114de470d5f442464e1a4",
    "e3d7e02826b34ad0ff593bb5568c28cd1eabfcaf",
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
    "91a49a90d40c6adad5f973f792c6b80003a69263",
    "751805442819ae5f08f32347faf44f4c1b214eb3",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "ea4085cd15fefe1e70a495798187c425295c74b6",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "75773acf4f256f79c8c19839aad06071950958d1"
  ],
  "changeHistoryShort": {
    "96483bdc428bfad0028114de470d5f442464e1a4": "Ybodychange",
    "e3d7e02826b34ad0ff593bb5568c28cd1eabfcaf": "Ybodychange",
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": "Ybodychange",
    "91a49a90d40c6adad5f973f792c6b80003a69263": "Ybodychange",
    "751805442819ae5f08f32347faf44f4c1b214eb3": "Ybodychange",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "ea4085cd15fefe1e70a495798187c425295c74b6": "Ybodychange",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ybodychange",
    "75773acf4f256f79c8c19839aad06071950958d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96483bdc428bfad0028114de470d5f442464e1a4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5900: renamed format property to illegalAbstractClassNameFormat",
      "commitDate": "21/02/19 9:26 PM",
      "commitName": "96483bdc428bfad0028114de470d5f442464e1a4",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 37.65,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className) {\n         final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n                 || illegalShortClassNames.contains(shortName)\n                 || validateAbstractClassNames\n                     \u0026\u0026 !legalAbstractClassNames.contains(className)\n-                    \u0026\u0026 format.matcher(className).find();\n+                    \u0026\u0026 illegalAbstractClassNameFormat.matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className) {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalShortClassNames.contains(shortName)\n                || validateAbstractClassNames\n                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 illegalAbstractClassNameFormat.matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "e3d7e02826b34ad0ff593bb5568c28cd1eabfcaf": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4947: split illegalClassNames for IllegalType for short names",
      "commitDate": "26/08/17 4:31 PM",
      "commitName": "e3d7e02826b34ad0ff593bb5568c28cd1eabfcaf",
      "commitAuthor": "rnveach",
      "commitDateOld": "10/08/17 12:56 AM",
      "commitNameOld": "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.65,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className) {\n         final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n-                || illegalClassNames.contains(shortName)\n+                || illegalShortClassNames.contains(shortName)\n                 || validateAbstractClassNames\n                     \u0026\u0026 !legalAbstractClassNames.contains(className)\n                     \u0026\u0026 format.matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className) {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalShortClassNames.contains(shortName)\n                || validateAbstractClassNames\n                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 format.matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3255: removed unnecessary string fields for patterns",
      "commitDate": "10/11/16 10:34 AM",
      "commitName": "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/16 4:34 AM",
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className) {\n         final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n                 || illegalClassNames.contains(shortName)\n                 || validateAbstractClassNames\n                     \u0026\u0026 !legalAbstractClassNames.contains(className)\n-                    \u0026\u0026 regexp.matcher(className).find();\n+                    \u0026\u0026 format.matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className) {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName)\n                || validateAbstractClassNames\n                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 format.matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "91a49a90d40c6adad5f973f792c6b80003a69263": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2451: removed excess hierarchy from IllegalTypeCheck\n",
      "commitDate": "31/10/15 5:18 AM",
      "commitName": "91a49a90d40c6adad5f973f792c6b80003a69263",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/09/15 2:48 PM",
      "commitNameOld": "31f6765fdcf2233ca6c53730c2fc196576557f66",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 56.6,
      "commitsBetweenForRepo": 337,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className) {\n         final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n                 || illegalClassNames.contains(shortName)\n                 || validateAbstractClassNames\n                     \u0026\u0026 !legalAbstractClassNames.contains(className)\n-                    \u0026\u0026 getRegexp().matcher(className).find();\n+                    \u0026\u0026 regexp.matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className) {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName)\n                || validateAbstractClassNames\n                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 regexp.matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "751805442819ae5f08f32347faf44f4c1b214eb3": {
      "type": "Ybodychange",
      "commitMessage": "Added \u0027validateAbstractClassNames\u0027 option for IllegalTypeCheck, issue #1805\n",
      "commitDate": "28/08/15 10:47 AM",
      "commitName": "751805442819ae5f08f32347faf44f4c1b214eb3",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "27/08/15 10:29 PM",
      "commitNameOld": "cc7aeaec906dc3c864477e3050510009b2a946ee",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.51,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n     private boolean isMatchingClassName(String className) {\n         final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n                 || illegalClassNames.contains(shortName)\n-                || !legalAbstractClassNames.contains(className)\n+                || validateAbstractClassNames\n+                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                     \u0026\u0026 getRegexp().matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className) {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName)\n                || validateAbstractClassNames\n                    \u0026\u0026 !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 getRegexp().matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027strings\u0027 ruleset, issue #873\n",
      "commitDate": "15/04/15 8:56 AM",
      "commitName": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 35.76,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className)\n     {\n-        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n+        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n         return illegalClassNames.contains(className)\n                 || illegalClassNames.contains(shortName)\n                 || !legalAbstractClassNames.contains(className)\n                     \u0026\u0026 getRegexp().matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className)\n    {\n        final String shortName \u003d className.substring(className.lastIndexOf(\u0027.\u0027) + 1);\n        return illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName)\n                || !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 getRegexp().matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "23/02/15 10:40 PM",
      "commitNameOld": "e508f61a11d9c30f9063b9d19dd9cd10bdfe9e7f",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 14.62,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean isMatchingClassName(String className)\n     {\n         final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n-        return (illegalClassNames.contains(className)\n-                || illegalClassNames.contains(shortName))\n-            || (!legalAbstractClassNames.contains(className)\n-                \u0026\u0026 getRegexp().matcher(className).find());\n+        return illegalClassNames.contains(className)\n+                || illegalClassNames.contains(shortName)\n+                || !legalAbstractClassNames.contains(className)\n+                    \u0026\u0026 getRegexp().matcher(className).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String className)\n    {\n        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n        return illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName)\n                || !legalAbstractClassNames.contains(className)\n                    \u0026\u0026 getRegexp().matcher(className).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    private boolean isMatchingClassName(String aClassName)\n+    private boolean isMatchingClassName(String className)\n     {\n-        final String shortName \u003d aClassName.substring(aClassName.lastIndexOf(\".\") + 1);\n-        return (mIllegalClassNames.contains(aClassName)\n-                || mIllegalClassNames.contains(shortName))\n-            || (!mLegalAbstractClassNames.contains(aClassName)\n-                \u0026\u0026 getRegexp().matcher(aClassName).find());\n+        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n+        return (illegalClassNames.contains(className)\n+                || illegalClassNames.contains(shortName))\n+            || (!legalAbstractClassNames.contains(className)\n+                \u0026\u0026 getRegexp().matcher(className).find());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatchingClassName(String className)\n    {\n        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n        return (illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName))\n            || (!legalAbstractClassNames.contains(className)\n                \u0026\u0026 getRegexp().matcher(className).find());\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {
            "oldValue": "[aClassName-String]",
            "newValue": "[className-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    private boolean isMatchingClassName(String aClassName)\n+    private boolean isMatchingClassName(String className)\n     {\n-        final String shortName \u003d aClassName.substring(aClassName.lastIndexOf(\".\") + 1);\n-        return (mIllegalClassNames.contains(aClassName)\n-                || mIllegalClassNames.contains(shortName))\n-            || (!mLegalAbstractClassNames.contains(aClassName)\n-                \u0026\u0026 getRegexp().matcher(aClassName).find());\n+        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n+        return (illegalClassNames.contains(className)\n+                || illegalClassNames.contains(shortName))\n+            || (!legalAbstractClassNames.contains(className)\n+                \u0026\u0026 getRegexp().matcher(className).find());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatchingClassName(String className)\n    {\n        final String shortName \u003d className.substring(className.lastIndexOf(\".\") + 1);\n        return (illegalClassNames.contains(className)\n                || illegalClassNames.contains(shortName))\n            || (!legalAbstractClassNames.contains(className)\n                \u0026\u0026 getRegexp().matcher(className).find());\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782": {
      "type": "Ybodychange",
      "commitMessage": "Illegal Type Check, fixed false positives on same file names, added support of analyzing imports, issue #78\n",
      "commitDate": "06/01/15 3:01 PM",
      "commitName": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
      "commitAuthor": "alexkravin",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 308.24,
      "commitsBetweenForRepo": 442,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,8 @@\n     private boolean isMatchingClassName(String aClassName)\n     {\n-        return mIllegalClassNames.contains(aClassName)\n+        final String shortName \u003d aClassName.substring(aClassName.lastIndexOf(\".\") + 1);\n+        return (mIllegalClassNames.contains(aClassName)\n+                || mIllegalClassNames.contains(shortName))\n             || (!mLegalAbstractClassNames.contains(aClassName)\n                 \u0026\u0026 getRegexp().matcher(aClassName).find());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String aClassName)\n    {\n        final String shortName \u003d aClassName.substring(aClassName.lastIndexOf(\".\") + 1);\n        return (mIllegalClassNames.contains(aClassName)\n                || mIllegalClassNames.contains(shortName))\n            || (!mLegalAbstractClassNames.contains(aClassName)\n                \u0026\u0026 getRegexp().matcher(aClassName).find());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMatchingClassName(String aClassName)\n    {\n        return mIllegalClassNames.contains(aClassName)\n            || (!mLegalAbstractClassNames.contains(aClassName)\n                \u0026\u0026 getRegexp().matcher(aClassName).find());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
      }
    },
    "ea4085cd15fefe1e70a495798187c425295c74b6": {
      "type": "Ybodychange",
      "commitMessage": "Fix for rfe 1248106 (TYPECAST is now accepted by NoWhitespaceAfter)\n\nFix for rfe 953266 (thanks to Paul Guyot (pguyot) for submitting patch)\nIllegalType can be configured to accept some abstract classes which\nmatches to regexp of illegal type names (property legalAbstractClassNames)\n\nTrailingComment now can be configured to accept some trailing comments\n(such as NOI18N) (property legalComment, rfe 1385344).\n",
      "commitDate": "25/12/05 8:13 AM",
      "commitName": "ea4085cd15fefe1e70a495798187c425295c74b6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "11/05/05 9:48 AM",
      "commitNameOld": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 227.98,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n     private boolean isMatchingClassName(String aClassName)\n     {\n         return mIllegalClassNames.contains(aClassName)\n-            || getRegexp().matcher(aClassName).find();\n+            || (!mLegalAbstractClassNames.contains(aClassName)\n+                \u0026\u0026 getRegexp().matcher(aClassName).find());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String aClassName)\n    {\n        return mIllegalClassNames.contains(aClassName)\n            || (!mLegalAbstractClassNames.contains(aClassName)\n                \u0026\u0026 getRegexp().matcher(aClassName).find());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ybodychange",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": "11/05/05 9:48 AM",
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 122.25,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     private boolean isMatchingClassName(String aClassName)\n     {\n         return mIllegalClassNames.contains(aClassName)\n-            || getRegexp().match(aClassName);\n+            || getRegexp().matcher(aClassName).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String aClassName)\n    {\n        return mIllegalClassNames.contains(aClassName)\n            || getRegexp().matcher(aClassName).find();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "75773acf4f256f79c8c19839aad06071950958d1": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalType check from Simon Harris (request 750739).\nAdded getter for illegalClassNames property of IllegalCatch check.\n",
      "commitDate": "04/09/03 11:35 AM",
      "commitName": "75773acf4f256f79c8c19839aad06071950958d1",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,5 @@\n+    private boolean isMatchingClassName(String aClassName)\n+    {\n+        return mIllegalClassNames.contains(aClassName)\n+            || getRegexp().match(aClassName);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatchingClassName(String aClassName)\n    {\n        return mIllegalClassNames.contains(aClassName)\n            || getRegexp().match(aClassName);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}