{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EqualsHashCodeCheck.java",
  "functionName": "isObjectParam",
  "functionId": "isObjectParam___paramNode-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
  "functionStartLine": 204,
  "functionEndLine": 209,
  "numCommitsSeen": 98,
  "timeTaken": 1881,
  "changeHistory": [
    "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
    "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5"
  ],
  "changeHistoryShort": {
    "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7": "Ymultichange(Yparameterchange,Ybodychange)",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": "Ybodychange",
    "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3308: fixed EqualsHashCode equals method parameter test (#3407)\n\n",
      "commitDate": "29/09/16 4:10 AM",
      "commitName": "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3308: fixed EqualsHashCode equals method parameter test (#3407)\n\n",
          "commitDate": "29/09/16 4:10 AM",
          "commitName": "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/16 7:52 PM",
          "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
          "commitAuthorOld": "Andrei Selkin",
          "daysBetweenCommits": 8.35,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,6 @@\n-    private static boolean isObjectParam(AST firstChild) {\n-        final AST modifiers \u003d firstChild.getFirstChild();\n-        final AST type \u003d modifiers.getNextSibling();\n-        switch (type.getFirstChild().getType()) {\n-            case TokenTypes.LITERAL_BOOLEAN:\n-            case TokenTypes.LITERAL_BYTE:\n-            case TokenTypes.LITERAL_CHAR:\n-            case TokenTypes.LITERAL_DOUBLE:\n-            case TokenTypes.LITERAL_FLOAT:\n-            case TokenTypes.LITERAL_INT:\n-            case TokenTypes.LITERAL_LONG:\n-            case TokenTypes.LITERAL_SHORT:\n-                return false;\n-            default:\n-                return true;\n-        }\n+    private static boolean isObjectParam(DetailAST paramNode) {\n+        final DetailAST typeNode \u003d paramNode.findFirstToken(TokenTypes.TYPE);\n+        final FullIdent fullIdent \u003d FullIdent.createFullIdentBelow(typeNode);\n+        final String name \u003d fullIdent.getText();\n+        return \"Object\".equals(name) || \"java.lang.Object\".equals(name);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isObjectParam(DetailAST paramNode) {\n        final DetailAST typeNode \u003d paramNode.findFirstToken(TokenTypes.TYPE);\n        final FullIdent fullIdent \u003d FullIdent.createFullIdentBelow(typeNode);\n        final String name \u003d fullIdent.getText();\n        return \"Object\".equals(name) || \"java.lang.Object\".equals(name);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
          "extendedDetails": {
            "oldValue": "[firstChild-AST]",
            "newValue": "[paramNode-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3308: fixed EqualsHashCode equals method parameter test (#3407)\n\n",
          "commitDate": "29/09/16 4:10 AM",
          "commitName": "dd4999dc38fe2b17bb4fd4872d553b9ed0970aa7",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/16 7:52 PM",
          "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
          "commitAuthorOld": "Andrei Selkin",
          "daysBetweenCommits": 8.35,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,6 @@\n-    private static boolean isObjectParam(AST firstChild) {\n-        final AST modifiers \u003d firstChild.getFirstChild();\n-        final AST type \u003d modifiers.getNextSibling();\n-        switch (type.getFirstChild().getType()) {\n-            case TokenTypes.LITERAL_BOOLEAN:\n-            case TokenTypes.LITERAL_BYTE:\n-            case TokenTypes.LITERAL_CHAR:\n-            case TokenTypes.LITERAL_DOUBLE:\n-            case TokenTypes.LITERAL_FLOAT:\n-            case TokenTypes.LITERAL_INT:\n-            case TokenTypes.LITERAL_LONG:\n-            case TokenTypes.LITERAL_SHORT:\n-                return false;\n-            default:\n-                return true;\n-        }\n+    private static boolean isObjectParam(DetailAST paramNode) {\n+        final DetailAST typeNode \u003d paramNode.findFirstToken(TokenTypes.TYPE);\n+        final FullIdent fullIdent \u003d FullIdent.createFullIdentBelow(typeNode);\n+        final String name \u003d fullIdent.getText();\n+        return \"Object\".equals(name) || \"java.lang.Object\".equals(name);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isObjectParam(DetailAST paramNode) {\n        final DetailAST typeNode \u003d paramNode.findFirstToken(TokenTypes.TYPE);\n        final FullIdent fullIdent \u003d FullIdent.createFullIdentBelow(typeNode);\n        final String name \u003d fullIdent.getText();\n        return \"Object\".equals(name) || \"java.lang.Object\".equals(name);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private boolean isObjectParam(AST firstChild) {\n+    private static boolean isObjectParam(AST firstChild) {\n         final AST modifiers \u003d firstChild.getFirstChild();\n         final AST type \u003d modifiers.getNextSibling();\n         switch (type.getFirstChild().getType()) {\n             case TokenTypes.LITERAL_BOOLEAN:\n             case TokenTypes.LITERAL_BYTE:\n             case TokenTypes.LITERAL_CHAR:\n             case TokenTypes.LITERAL_DOUBLE:\n             case TokenTypes.LITERAL_FLOAT:\n             case TokenTypes.LITERAL_INT:\n             case TokenTypes.LITERAL_LONG:\n             case TokenTypes.LITERAL_SHORT:\n                 return false;\n             default:\n                 return true;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isObjectParam(AST firstChild) {\n        final AST modifiers \u003d firstChild.getFirstChild();\n        final AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n            case TokenTypes.LITERAL_BOOLEAN:\n            case TokenTypes.LITERAL_BYTE:\n            case TokenTypes.LITERAL_CHAR:\n            case TokenTypes.LITERAL_DOUBLE:\n            case TokenTypes.LITERAL_FLOAT:\n            case TokenTypes.LITERAL_INT:\n            case TokenTypes.LITERAL_LONG:\n            case TokenTypes.LITERAL_SHORT:\n                return false;\n            default:\n                return true;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private boolean isObjectParam(AST aFirstChild)\n+    private boolean isObjectParam(AST firstChild)\n     {\n-        final AST modifiers \u003d aFirstChild.getFirstChild();\n+        final AST modifiers \u003d firstChild.getFirstChild();\n         final AST type \u003d modifiers.getNextSibling();\n         switch (type.getFirstChild().getType()) {\n         case TokenTypes.LITERAL_BOOLEAN:\n         case TokenTypes.LITERAL_BYTE:\n         case TokenTypes.LITERAL_CHAR:\n         case TokenTypes.LITERAL_DOUBLE:\n         case TokenTypes.LITERAL_FLOAT:\n         case TokenTypes.LITERAL_INT:\n         case TokenTypes.LITERAL_LONG:\n         case TokenTypes.LITERAL_SHORT:\n             return false;\n         default:\n             return true;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isObjectParam(AST firstChild)\n    {\n        final AST modifiers \u003d firstChild.getFirstChild();\n        final AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n        case TokenTypes.LITERAL_BOOLEAN:\n        case TokenTypes.LITERAL_BYTE:\n        case TokenTypes.LITERAL_CHAR:\n        case TokenTypes.LITERAL_DOUBLE:\n        case TokenTypes.LITERAL_FLOAT:\n        case TokenTypes.LITERAL_INT:\n        case TokenTypes.LITERAL_LONG:\n        case TokenTypes.LITERAL_SHORT:\n            return false;\n        default:\n            return true;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
          "extendedDetails": {
            "oldValue": "[aFirstChild-AST]",
            "newValue": "[firstChild-AST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private boolean isObjectParam(AST aFirstChild)\n+    private boolean isObjectParam(AST firstChild)\n     {\n-        final AST modifiers \u003d aFirstChild.getFirstChild();\n+        final AST modifiers \u003d firstChild.getFirstChild();\n         final AST type \u003d modifiers.getNextSibling();\n         switch (type.getFirstChild().getType()) {\n         case TokenTypes.LITERAL_BOOLEAN:\n         case TokenTypes.LITERAL_BYTE:\n         case TokenTypes.LITERAL_CHAR:\n         case TokenTypes.LITERAL_DOUBLE:\n         case TokenTypes.LITERAL_FLOAT:\n         case TokenTypes.LITERAL_INT:\n         case TokenTypes.LITERAL_LONG:\n         case TokenTypes.LITERAL_SHORT:\n             return false;\n         default:\n             return true;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isObjectParam(AST firstChild)\n    {\n        final AST modifiers \u003d firstChild.getFirstChild();\n        final AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n        case TokenTypes.LITERAL_BOOLEAN:\n        case TokenTypes.LITERAL_BYTE:\n        case TokenTypes.LITERAL_CHAR:\n        case TokenTypes.LITERAL_DOUBLE:\n        case TokenTypes.LITERAL_FLOAT:\n        case TokenTypes.LITERAL_INT:\n        case TokenTypes.LITERAL_LONG:\n        case TokenTypes.LITERAL_SHORT:\n            return false;\n        default:\n            return true;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isObjectParam(AST aFirstChild)\n    {\n        final AST modifiers \u003d aFirstChild.getFirstChild();\n        final AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n        case TokenTypes.LITERAL_BOOLEAN:\n        case TokenTypes.LITERAL_BYTE:\n        case TokenTypes.LITERAL_CHAR:\n        case TokenTypes.LITERAL_DOUBLE:\n        case TokenTypes.LITERAL_FLOAT:\n        case TokenTypes.LITERAL_INT:\n        case TokenTypes.LITERAL_LONG:\n        case TokenTypes.LITERAL_SHORT:\n            return false;\n        default:\n            return true;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java"
      }
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "25/01/04 2:23 AM",
      "commitNameOld": "88b72c3df7214b3cb4f4fcb73b92883007caab17",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 214.13,
      "commitsBetweenForRepo": 123,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private boolean isObjectParam(AST aFirstChild)\n     {\n         final AST modifiers \u003d aFirstChild.getFirstChild();\n-        AST type \u003d modifiers.getNextSibling();\n+        final AST type \u003d modifiers.getNextSibling();\n         switch (type.getFirstChild().getType()) {\n         case TokenTypes.LITERAL_BOOLEAN:\n         case TokenTypes.LITERAL_BYTE:\n         case TokenTypes.LITERAL_CHAR:\n         case TokenTypes.LITERAL_DOUBLE:\n         case TokenTypes.LITERAL_FLOAT:\n         case TokenTypes.LITERAL_INT:\n         case TokenTypes.LITERAL_LONG:\n         case TokenTypes.LITERAL_SHORT:\n             return false;\n         default:\n             return true;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isObjectParam(AST aFirstChild)\n    {\n        final AST modifiers \u003d aFirstChild.getFirstChild();\n        final AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n        case TokenTypes.LITERAL_BOOLEAN:\n        case TokenTypes.LITERAL_BYTE:\n        case TokenTypes.LITERAL_CHAR:\n        case TokenTypes.LITERAL_DOUBLE:\n        case TokenTypes.LITERAL_FLOAT:\n        case TokenTypes.LITERAL_INT:\n        case TokenTypes.LITERAL_LONG:\n        case TokenTypes.LITERAL_SHORT:\n            return false;\n        default:\n            return true;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isObjectParam(AST aFirstChild)\n    {\n        final AST modifiers \u003d aFirstChild.getFirstChild();\n        AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n        case TokenTypes.LITERAL_BOOLEAN:\n        case TokenTypes.LITERAL_BYTE:\n        case TokenTypes.LITERAL_CHAR:\n        case TokenTypes.LITERAL_DOUBLE:\n        case TokenTypes.LITERAL_FLOAT:\n        case TokenTypes.LITERAL_INT:\n        case TokenTypes.LITERAL_LONG:\n        case TokenTypes.LITERAL_SHORT:\n            return false;\n        default:\n            return true;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/EqualsHashCodeCheck.java"
      }
    },
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": {
      "type": "Ybodychange",
      "commitMessage": "removed paranoia checks to increase code coverage\n",
      "commitDate": "07/11/02 11:10 AM",
      "commitName": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "02/11/02 4:22 AM",
      "commitNameOld": "3288a81e30ddea194f76bd74f3b509500b864163",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.28,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,18 @@\n     private boolean isObjectParam(AST aFirstChild)\n     {\n-        if (aFirstChild.getType() !\u003d TokenTypes.PARAMETER_DEF) {\n-            return false;\n-        }\n-\n         final AST modifiers \u003d aFirstChild.getFirstChild();\n         AST type \u003d modifiers.getNextSibling();\n         switch (type.getFirstChild().getType()) {\n             case TokenTypes.LITERAL_BOOLEAN:\n             case TokenTypes.LITERAL_BYTE:\n             case TokenTypes.LITERAL_CHAR:\n             case TokenTypes.LITERAL_DOUBLE:\n             case TokenTypes.LITERAL_FLOAT:\n             case TokenTypes.LITERAL_INT:\n             case TokenTypes.LITERAL_LONG:\n             case TokenTypes.LITERAL_SHORT:\n                 return false;\n             default:\n                 return true;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isObjectParam(AST aFirstChild)\n    {\n        final AST modifiers \u003d aFirstChild.getFirstChild();\n        AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType()) {\n            case TokenTypes.LITERAL_BOOLEAN:\n            case TokenTypes.LITERAL_BYTE:\n            case TokenTypes.LITERAL_CHAR:\n            case TokenTypes.LITERAL_DOUBLE:\n            case TokenTypes.LITERAL_FLOAT:\n            case TokenTypes.LITERAL_INT:\n            case TokenTypes.LITERAL_LONG:\n            case TokenTypes.LITERAL_SHORT:\n                return false;\n            default:\n                return true;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheck.java",
      "extendedDetails": {}
    },
    "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5": {
      "type": "Yintroduced",
      "commitMessage": "added check for equals() vs. hashCode, RFE #554373\nsee also Item 8 of \"Bloch, Effective Java\"\n",
      "commitDate": "21/10/02 11:04 AM",
      "commitName": "fc24f5f8b689ce613cdd0bb2c00e8e50cddc7da5",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,23 @@\n+    private boolean isObjectParam(AST aFirstChild)\n+    {\n+        if (aFirstChild.getType() !\u003d TokenTypes.PARAMETER_DEF) {\n+            return false;\n+        }\n+\n+        final AST modifiers \u003d aFirstChild.getFirstChild();\n+        AST type \u003d modifiers.getNextSibling();\n+        switch (type.getFirstChild().getType())\n+        {\n+            case TokenTypes.LITERAL_BOOLEAN:\n+            case TokenTypes.LITERAL_BYTE:\n+            case TokenTypes.LITERAL_CHAR:\n+            case TokenTypes.LITERAL_DOUBLE:\n+            case TokenTypes.LITERAL_FLOAT:\n+            case TokenTypes.LITERAL_INT:\n+            case TokenTypes.LITERAL_LONG:\n+            case TokenTypes.LITERAL_SHORT:\n+                return false;\n+            default:\n+                return true;\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isObjectParam(AST aFirstChild)\n    {\n        if (aFirstChild.getType() !\u003d TokenTypes.PARAMETER_DEF) {\n            return false;\n        }\n\n        final AST modifiers \u003d aFirstChild.getFirstChild();\n        AST type \u003d modifiers.getNextSibling();\n        switch (type.getFirstChild().getType())\n        {\n            case TokenTypes.LITERAL_BOOLEAN:\n            case TokenTypes.LITERAL_BYTE:\n            case TokenTypes.LITERAL_CHAR:\n            case TokenTypes.LITERAL_DOUBLE:\n            case TokenTypes.LITERAL_FLOAT:\n            case TokenTypes.LITERAL_INT:\n            case TokenTypes.LITERAL_LONG:\n            case TokenTypes.LITERAL_SHORT:\n                return false;\n            default:\n                return true;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/EqualsHashCodeCheck.java"
    }
  }
}