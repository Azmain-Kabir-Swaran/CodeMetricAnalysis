{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisibilityModifierCheck.java",
  "functionName": "getModifiers",
  "functionId": "getModifiers___defAST-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
  "functionStartLine": 774,
  "functionEndLine": 785,
  "numCommitsSeen": 129,
  "timeTaken": 2723,
  "changeHistory": [
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
    "f9f60d3142533c3eebff775e8eb1159935faaba1",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "08638b5f739d9929698860048c052da2d5f80209",
    "32d19d680144540a83c5dde5588f5a7ac302f8e1",
    "303352fe2d7b467edce0bf02064e0a519a139250",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "220f6cb5d992429a1d71f867088c8e7ab39a453a"
  ],
  "changeHistoryShort": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": "Ybodychange",
    "f9f60d3142533c3eebff775e8eb1159935faaba1": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "08638b5f739d9929698860048c052da2d5f80209": "Ymultichange(Yreturntypechange,Ybodychange)",
    "32d19d680144540a83c5dde5588f5a7ac302f8e1": "Yfilerename",
    "303352fe2d7b467edce0bf02064e0a519a139250": "Ymultichange(Yparameterchange,Ybodychange)",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "220f6cb5d992429a1d71f867088c8e7ab39a453a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": {
      "type": "Ybodychange",
      "commitMessage": "minor: remove unnecessary antlr classes from main code",
      "commitDate": "30/03/19 5:55 AM",
      "commitName": "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
      "commitAuthor": "rnveach",
      "commitDateOld": "07/03/19 6:29 PM",
      "commitNameOld": "2cba6a6f3674cc658c80f3280fe898484f773c7f",
      "commitAuthorOld": "Bj√∂rn Kautler",
      "daysBetweenCommits": 22.43,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private static Set\u003cString\u003e getModifiers(DetailAST defAST) {\n-        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final DetailAST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n         if (modifiersAST !\u003d null) {\n-            AST modifier \u003d modifiersAST.getFirstChild();\n+            DetailAST modifier \u003d modifiersAST.getFirstChild();\n             while (modifier !\u003d null) {\n                 modifiersSet.add(modifier.getText());\n                 modifier \u003d modifier.getNextSibling();\n             }\n         }\n         return modifiersSet;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cString\u003e getModifiers(DetailAST defAST) {\n        final DetailAST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n        if (modifiersAST !\u003d null) {\n            DetailAST modifier \u003d modifiersAST.getFirstChild();\n            while (modifier !\u003d null) {\n                modifiersSet.add(modifier.getText());\n                modifier \u003d modifier.getNextSibling();\n            }\n        }\n        return modifiersSet;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "f9f60d3142533c3eebff775e8eb1159935faaba1": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
      "commitDate": "26/02/15 12:35 PM",
      "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
          "commitDate": "26/02/15 12:35 PM",
          "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/02/15 5:02 AM",
          "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 6.31,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n+    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n     {\n-        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n-        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n-            throw new IllegalStateException(\"Strange parse tree\");\n+        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n+        if (modifiersAST !\u003d null) {\n+            AST modifier \u003d modifiersAST.getFirstChild();\n+            while (modifier !\u003d null) {\n+                modifiersSet.add(modifier.getText());\n+                modifier \u003d modifier.getNextSibling();\n+            }\n         }\n-        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n-        AST modifier \u003d modifiersAST.getFirstChild();\n-        while (modifier !\u003d null) {\n-            retVal.add(modifier.getText());\n-            modifier \u003d modifier.getNextSibling();\n-        }\n-        return retVal;\n+        return modifiersSet;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n    {\n        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n        if (modifiersAST !\u003d null) {\n            AST modifier \u003d modifiersAST.getFirstChild();\n            while (modifier !\u003d null) {\n                modifiersSet.add(modifier.getText());\n                modifier \u003d modifier.getNextSibling();\n            }\n        }\n        return modifiersSet;\n\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[variableDefAST-DetailAST]",
            "newValue": "[defAST-DetailAST]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
          "commitDate": "26/02/15 12:35 PM",
          "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/02/15 5:02 AM",
          "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 6.31,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n+    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n     {\n-        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n-        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n-            throw new IllegalStateException(\"Strange parse tree\");\n+        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n+        if (modifiersAST !\u003d null) {\n+            AST modifier \u003d modifiersAST.getFirstChild();\n+            while (modifier !\u003d null) {\n+                modifiersSet.add(modifier.getText());\n+                modifier \u003d modifier.getNextSibling();\n+            }\n         }\n-        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n-        AST modifier \u003d modifiersAST.getFirstChild();\n-        while (modifier !\u003d null) {\n-            retVal.add(modifier.getText());\n-            modifier \u003d modifier.getNextSibling();\n-        }\n-        return retVal;\n+        return modifiersSet;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n    {\n        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n        if (modifiersAST !\u003d null) {\n            AST modifier \u003d modifiersAST.getFirstChild();\n            while (modifier !\u003d null) {\n                modifiersSet.add(modifier.getText());\n                modifier \u003d modifier.getNextSibling();\n            }\n        }\n        return modifiersSet;\n\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
          "commitDate": "26/02/15 12:35 PM",
          "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/02/15 5:02 AM",
          "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 6.31,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,14 @@\n-    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n+    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n     {\n-        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n-        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n-            throw new IllegalStateException(\"Strange parse tree\");\n+        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n+        if (modifiersAST !\u003d null) {\n+            AST modifier \u003d modifiersAST.getFirstChild();\n+            while (modifier !\u003d null) {\n+                modifiersSet.add(modifier.getText());\n+                modifier \u003d modifier.getNextSibling();\n+            }\n         }\n-        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n-        AST modifier \u003d modifiersAST.getFirstChild();\n-        while (modifier !\u003d null) {\n-            retVal.add(modifier.getText());\n-            modifier \u003d modifier.getNextSibling();\n-        }\n-        return retVal;\n+        return modifiersSet;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static Set\u003cString\u003e getModifiers(DetailAST defAST)\n    {\n        final AST modifiersAST \u003d defAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Set\u003cString\u003e modifiersSet \u003d new HashSet\u003c\u003e();\n        if (modifiersAST !\u003d null) {\n            AST modifier \u003d modifiersAST.getFirstChild();\n            while (modifier !\u003d null) {\n                modifiersSet.add(modifier.getText());\n                modifier \u003d modifier.getNextSibling();\n            }\n        }\n        return modifiersSet;\n\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n+    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n     {\n-        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n+        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n         final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n    {\n        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[aVariableDefAST-DetailAST]",
            "newValue": "[variableDefAST-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n+    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n     {\n-        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n+        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n         final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST variableDefAST)\n    {\n        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java"
      }
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": "22/04/08 5:28 AM",
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 99.2,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n     {\n         final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n-        final Set\u003cString\u003e retVal \u003d new HashSet\u003cString\u003e();\n+        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d Sets.newHashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": "14/12/07 10:36 PM",
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Start of adding generics.\n",
          "commitDate": "14/12/07 10:36 PM",
          "commitName": "08638b5f739d9929698860048c052da2d5f80209",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/01/07 6:51 AM",
          "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
          "commitAuthorOld": "Lars K√ºhne",
          "daysBetweenCommits": 321.66,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set getModifiers(DetailAST aVariableDefAST)\n+    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n     {\n         final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n-        final Set retVal \u003d new HashSet();\n+        final Set\u003cString\u003e retVal \u003d new HashSet\u003cString\u003e();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d new HashSet\u003cString\u003e();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "Set",
            "newValue": "Set\u003cString\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Start of adding generics.\n",
          "commitDate": "14/12/07 10:36 PM",
          "commitName": "08638b5f739d9929698860048c052da2d5f80209",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/01/07 6:51 AM",
          "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
          "commitAuthorOld": "Lars K√ºhne",
          "daysBetweenCommits": 321.66,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set getModifiers(DetailAST aVariableDefAST)\n+    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n     {\n         final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n-        final Set retVal \u003d new HashSet();\n+        final Set\u003cString\u003e retVal \u003d new HashSet\u003cString\u003e();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set\u003cString\u003e retVal \u003d new HashSet\u003cString\u003e();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "32d19d680144540a83c5dde5588f5a7ac302f8e1": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Design checks\n",
      "commitDate": "04/06/03 4:52 PM",
      "commitName": "32d19d680144540a83c5dde5588f5a7ac302f8e1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/06/03 9:08 AM",
      "commitNameOld": "679f818267161d9501a73ffdcc0d991537233633",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private Set getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set retVal \u003d new HashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java"
      }
    },
    "303352fe2d7b467edce0bf02064e0a519a139250": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "fixed checkstyle errors\n",
      "commitDate": "22/11/02 5:00 AM",
      "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 5:00 AM",
          "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "28/10/02 8:27 AM",
          "commitNameOld": "59c9c64381dd92bc877f5a834dae7856603d5546",
          "commitAuthorOld": "Lars K√ºhne",
          "daysBetweenCommits": 24.86,
          "commitsBetweenForRepo": 166,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set getModifiers(DetailAST variableDefAST)\n+    private Set getModifiers(DetailAST aVariableDefAST)\n     {\n-        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n+        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n         final Set retVal \u003d new HashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set retVal \u003d new HashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[variableDefAST-DetailAST]",
            "newValue": "[aVariableDefAST-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 5:00 AM",
          "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "28/10/02 8:27 AM",
          "commitNameOld": "59c9c64381dd92bc877f5a834dae7856603d5546",
          "commitAuthorOld": "Lars K√ºhne",
          "daysBetweenCommits": 24.86,
          "commitsBetweenForRepo": 166,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private Set getModifiers(DetailAST variableDefAST)\n+    private Set getModifiers(DetailAST aVariableDefAST)\n     {\n-        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n+        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n         if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n         final Set retVal \u003d new HashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set getModifiers(DetailAST aVariableDefAST)\n    {\n        final AST modifiersAST \u003d aVariableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set retVal \u003d new HashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": "18/10/02 11:28 PM",
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "17/10/02 3:52 PM",
      "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
      "commitAuthorOld": "Lars K√ºhne",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private Set getModifiers(DetailAST variableDefAST)\n     {\n-        AST modifiersAST \u003d variableDefAST.getFirstChild();\n-        if (modifiersAST.getType() !\u003d JavaTokenTypes.MODIFIERS) {\n+        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n+        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n             throw new IllegalStateException(\"Strange parse tree\");\n         }\n-        Set retVal \u003d new HashSet();\n+        final Set retVal \u003d new HashSet();\n         AST modifier \u003d modifiersAST.getFirstChild();\n         while (modifier !\u003d null) {\n             retVal.add(modifier.getText());\n             modifier \u003d modifier.getNextSibling();\n         }\n         return retVal;\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Set getModifiers(DetailAST variableDefAST)\n    {\n        final AST modifiersAST \u003d variableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d TokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        final Set retVal \u003d new HashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "220f6cb5d992429a1d71f867088c8e7ab39a453a": {
      "type": "Yintroduced",
      "commitMessage": "ported member visibility checks\n",
      "commitDate": "16/10/02 5:07 PM",
      "commitName": "220f6cb5d992429a1d71f867088c8e7ab39a453a",
      "commitAuthor": "Lars K√ºhne",
      "diff": "@@ -0,0 +1,15 @@\n+    private Set getModifiers(DetailAST variableDefAST)\n+    {\n+        AST modifiersAST \u003d variableDefAST.getFirstChild();\n+        if (modifiersAST.getType() !\u003d JavaTokenTypes.MODIFIERS) {\n+            throw new IllegalStateException(\"Strange parse tree\");\n+        }\n+        Set retVal \u003d new HashSet();\n+        AST modifier \u003d modifiersAST.getFirstChild();\n+        while (modifier !\u003d null) {\n+            retVal.add(modifier.getText());\n+            modifier \u003d modifier.getNextSibling();\n+        }\n+        return retVal;\n+\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set getModifiers(DetailAST variableDefAST)\n    {\n        AST modifiersAST \u003d variableDefAST.getFirstChild();\n        if (modifiersAST.getType() !\u003d JavaTokenTypes.MODIFIERS) {\n            throw new IllegalStateException(\"Strange parse tree\");\n        }\n        Set retVal \u003d new HashSet();\n        AST modifier \u003d modifiersAST.getFirstChild();\n        while (modifier !\u003d null) {\n            retVal.add(modifier.getText());\n            modifier \u003d modifier.getNextSibling();\n        }\n        return retVal;\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java"
    }
  }
}