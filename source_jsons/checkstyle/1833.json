{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RequireThisCheck.java",
  "functionName": "getAllTokensOfType",
  "functionId": "getAllTokensOfType___ast-DetailAST__tokenType-int__endLineNumber-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
  "functionStartLine": 963,
  "functionEndLine": 984,
  "numCommitsSeen": 91,
  "timeTaken": 1430,
  "changeHistory": [
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25"
  ],
  "changeHistoryShort": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "14/09/16 1:58 PM",
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     private static Set\u003cDetailAST\u003e getAllTokensOfType(DetailAST ast, int tokenType,\n                                                      int endLineNumber) {\n         DetailAST vertex \u003d ast;\n-        final Set\u003cDetailAST\u003e result \u003d Sets.newHashSet();\n-        final Deque\u003cDetailAST\u003e stack \u003d Queues.newArrayDeque();\n+        final Set\u003cDetailAST\u003e result \u003d new HashSet\u003c\u003e();\n+        final Deque\u003cDetailAST\u003e stack \u003d new ArrayDeque\u003c\u003e();\n         while (vertex !\u003d null || !stack.isEmpty()) {\n             if (!stack.isEmpty()) {\n                 vertex \u003d stack.pop();\n             }\n             while (vertex !\u003d null) {\n                 if (tokenType \u003d\u003d vertex.getType()\n                     \u0026\u0026 vertex.getLineNo() \u003c\u003d endLineNumber) {\n                     result.add(vertex);\n                 }\n                 if (vertex.getNextSibling() !\u003d null) {\n                     stack.push(vertex.getNextSibling());\n                 }\n                 vertex \u003d vertex.getFirstChild();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cDetailAST\u003e getAllTokensOfType(DetailAST ast, int tokenType,\n                                                     int endLineNumber) {\n        DetailAST vertex \u003d ast;\n        final Set\u003cDetailAST\u003e result \u003d new HashSet\u003c\u003e();\n        final Deque\u003cDetailAST\u003e stack \u003d new ArrayDeque\u003c\u003e();\n        while (vertex !\u003d null || !stack.isEmpty()) {\n            if (!stack.isEmpty()) {\n                vertex \u003d stack.pop();\n            }\n            while (vertex !\u003d null) {\n                if (tokenType \u003d\u003d vertex.getType()\n                    \u0026\u0026 vertex.getLineNo() \u003c\u003d endLineNumber) {\n                    result.add(vertex);\n                }\n                if (vertex.getNextSibling() !\u003d null) {\n                    stack.push(vertex.getNextSibling());\n                }\n                vertex \u003d vertex.getFirstChild();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
      "extendedDetails": {}
    },
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2362: Add \u0027validateOnlyOverlapping\u0027 option for RequireThisCheck\n",
      "commitDate": "04/03/16 6:34 AM",
      "commitName": "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,22 @@\n+    private static Set\u003cDetailAST\u003e getAllTokensOfType(DetailAST ast, int tokenType,\n+                                                     int endLineNumber) {\n+        DetailAST vertex \u003d ast;\n+        final Set\u003cDetailAST\u003e result \u003d Sets.newHashSet();\n+        final Deque\u003cDetailAST\u003e stack \u003d Queues.newArrayDeque();\n+        while (vertex !\u003d null || !stack.isEmpty()) {\n+            if (!stack.isEmpty()) {\n+                vertex \u003d stack.pop();\n+            }\n+            while (vertex !\u003d null) {\n+                if (tokenType \u003d\u003d vertex.getType()\n+                    \u0026\u0026 vertex.getLineNo() \u003c\u003d endLineNumber) {\n+                    result.add(vertex);\n+                }\n+                if (vertex.getNextSibling() !\u003d null) {\n+                    stack.push(vertex.getNextSibling());\n+                }\n+                vertex \u003d vertex.getFirstChild();\n+            }\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cDetailAST\u003e getAllTokensOfType(DetailAST ast, int tokenType,\n                                                     int endLineNumber) {\n        DetailAST vertex \u003d ast;\n        final Set\u003cDetailAST\u003e result \u003d Sets.newHashSet();\n        final Deque\u003cDetailAST\u003e stack \u003d Queues.newArrayDeque();\n        while (vertex !\u003d null || !stack.isEmpty()) {\n            if (!stack.isEmpty()) {\n                vertex \u003d stack.pop();\n            }\n            while (vertex !\u003d null) {\n                if (tokenType \u003d\u003d vertex.getType()\n                    \u0026\u0026 vertex.getLineNo() \u003c\u003d endLineNumber) {\n                    result.add(vertex);\n                }\n                if (vertex.getNextSibling() !\u003d null) {\n                    stack.push(vertex.getNextSibling());\n                }\n                vertex \u003d vertex.getFirstChild();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java"
    }
  }
}