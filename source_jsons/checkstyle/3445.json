{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenUtil.java",
  "functionName": "forEachChild",
  "functionId": "forEachChild___root-DetailAST__type-int__action-Consumer__DetailAST__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java",
  "functionStartLine": 252,
  "functionEndLine": 258,
  "numCommitsSeen": 7,
  "timeTaken": 590,
  "changeHistory": [
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b"
  ],
  "changeHistoryShort": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": {
      "type": "Yintroduced",
      "commitMessage": "Issue #6118: IllegalType should check extends \u0026 implements\n",
      "commitDate": "23/10/18 1:37 PM",
      "commitName": "22fab018ad719cf35a58ab99d0daddfb8d29da7b",
      "commitAuthor": "Pavel Bludov",
      "diff": "@@ -0,0 +1,7 @@\n+    public static void forEachChild(DetailAST root, int type, Consumer\u003cDetailAST\u003e action) {\n+        for (DetailAST ast \u003d root.getFirstChild(); ast !\u003d null; ast \u003d ast.getNextSibling()) {\n+            if (ast.getType() \u003d\u003d type) {\n+                action.accept(ast);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static void forEachChild(DetailAST root, int type, Consumer\u003cDetailAST\u003e action) {\n        for (DetailAST ast \u003d root.getFirstChild(); ast !\u003d null; ast \u003d ast.getNextSibling()) {\n            if (ast.getType() \u003d\u003d type) {\n                action.accept(ast);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java"
    }
  }
}