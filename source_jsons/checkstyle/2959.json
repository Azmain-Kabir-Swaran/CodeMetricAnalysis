{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OrderedPropertiesCheck.java",
  "functionName": "getIndex",
  "functionId": "getIndex___startLineNo-int__fileText-FileText__keyName-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OrderedPropertiesCheck.java",
  "functionStartLine": 168,
  "functionEndLine": 181,
  "numCommitsSeen": 5,
  "timeTaken": 529,
  "changeHistory": [
    "ebb79ada7904404d800a761cb07f5d4e9d649878"
  ],
  "changeHistoryShort": {
    "ebb79ada7904404d800a761cb07f5d4e9d649878": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ebb79ada7904404d800a761cb07f5d4e9d649878": {
      "type": "Yintroduced",
      "commitMessage": "Issue #6311: OrderedPropertiesCheck check that properties are ordered\n",
      "commitDate": "21/06/19 8:34 AM",
      "commitName": "ebb79ada7904404d800a761cb07f5d4e9d649878",
      "commitAuthor": "Thomas Senger",
      "diff": "@@ -0,0 +1,14 @@\n+    private static int getIndex(int startLineNo, FileText fileText, String keyName) {\n+        final Pattern keyPattern \u003d getKeyPattern(keyName);\n+        int indexNumber \u003d 0;\n+        final Matcher matcher \u003d keyPattern.matcher(\"\");\n+        for (int index \u003d startLineNo; index \u003c fileText.size(); index++) {\n+            final String line \u003d fileText.get(index);\n+            matcher.reset(line);\n+            if (matcher.matches()) {\n+                indexNumber \u003d index;\n+                break;\n+            }\n+        }\n+        return indexNumber;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getIndex(int startLineNo, FileText fileText, String keyName) {\n        final Pattern keyPattern \u003d getKeyPattern(keyName);\n        int indexNumber \u003d 0;\n        final Matcher matcher \u003d keyPattern.matcher(\"\");\n        for (int index \u003d startLineNo; index \u003c fileText.size(); index++) {\n            final String line \u003d fileText.get(index);\n            matcher.reset(line);\n            if (matcher.matches()) {\n                indexNumber \u003d index;\n                break;\n            }\n        }\n        return indexNumber;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/OrderedPropertiesCheck.java"
    }
  }
}