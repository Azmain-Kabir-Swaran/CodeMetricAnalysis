{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UncommentedMainCheck.java",
  "functionName": "checkParams",
  "functionId": "checkParams___method-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
  "functionStartLine": 279,
  "functionEndLine": 298,
  "numCommitsSeen": 74,
  "timeTaken": 2248,
  "changeHistory": [
    "eb5b977a475c2240db5efc83aec8973d734895eb",
    "1edc81225c9d700685f5ed980a55b5a23d914d9e",
    "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5",
    "12bd8334067b18d9d1ed5039dd4dc673f3a1f560",
    "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "1878e21451499ee852bf1e45af1653439d7a4c8d"
  ],
  "changeHistoryShort": {
    "eb5b977a475c2240db5efc83aec8973d734895eb": "Ybodychange",
    "1edc81225c9d700685f5ed980a55b5a23d914d9e": "Ybodychange",
    "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5": "Ybodychange",
    "12bd8334067b18d9d1ed5039dd4dc673f3a1f560": "Ybodychange",
    "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "1878e21451499ee852bf1e45af1653439d7a4c8d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eb5b977a475c2240db5efc83aec8973d734895eb": {
      "type": "Ybodychange",
      "commitMessage": "Pull #3293: Replace Guava\u0027s Optional with Java\u0027s native (#3293)\n\n",
      "commitDate": "23/06/16 5:38 AM",
      "commitName": "eb5b977a475c2240db5efc83aec8973d734895eb",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "27/05/16 6:42 AM",
      "commitNameOld": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 26.96,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private static boolean checkParams(DetailAST method) {\n         boolean checkPassed \u003d false;\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n \n         if (params.getChildCount() \u003d\u003d 1) {\n             final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n-            final Optional\u003cDetailAST\u003e arrayDecl \u003d Optional.fromNullable(\n+            final Optional\u003cDetailAST\u003e arrayDecl \u003d Optional.ofNullable(\n                 parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR));\n-            final Optional\u003cDetailAST\u003e varargs \u003d Optional.fromNullable(\n+            final Optional\u003cDetailAST\u003e varargs \u003d Optional.ofNullable(\n                 params.getFirstChild().findFirstToken(TokenTypes.ELLIPSIS));\n \n             if (arrayDecl.isPresent()) {\n                 checkPassed \u003d isStringType(arrayDecl.get().getFirstChild());\n             }\n             else if (varargs.isPresent()) {\n                 checkPassed \u003d isStringType(parameterType.getFirstChild());\n             }\n         }\n         return checkPassed;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        boolean checkPassed \u003d false;\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n\n        if (params.getChildCount() \u003d\u003d 1) {\n            final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n            final Optional\u003cDetailAST\u003e arrayDecl \u003d Optional.ofNullable(\n                parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR));\n            final Optional\u003cDetailAST\u003e varargs \u003d Optional.ofNullable(\n                params.getFirstChild().findFirstToken(TokenTypes.ELLIPSIS));\n\n            if (arrayDecl.isPresent()) {\n                checkPassed \u003d isStringType(arrayDecl.get().getFirstChild());\n            }\n            else if (varargs.isPresent()) {\n                checkPassed \u003d isStringType(parameterType.getFirstChild());\n            }\n        }\n        return checkPassed;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "1edc81225c9d700685f5ed980a55b5a23d914d9e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2647: Add check for varargs in UncommentedMain\n",
      "commitDate": "06/12/15 6:04 AM",
      "commitName": "1edc81225c9d700685f5ed980a55b5a23d914d9e",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "21/09/15 3:02 PM",
      "commitNameOld": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 75.67,
      "commitsBetweenForRepo": 419,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n     private static boolean checkParams(DetailAST method) {\n         boolean checkPassed \u003d false;\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n \n         if (params.getChildCount() \u003d\u003d 1) {\n             final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n-            final DetailAST arrayDecl \u003d parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n+            final Optional\u003cDetailAST\u003e arrayDecl \u003d Optional.fromNullable(\n+                parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR));\n+            final Optional\u003cDetailAST\u003e varargs \u003d Optional.fromNullable(\n+                params.getFirstChild().findFirstToken(TokenTypes.ELLIPSIS));\n \n-            if (arrayDecl !\u003d null) {\n-                final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n-                final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n-                checkPassed \u003d \"String\".equals(type.getText())\n-                        || \"java.lang.String\".equals(type.getText());\n+            if (arrayDecl.isPresent()) {\n+                checkPassed \u003d isStringType(arrayDecl.get().getFirstChild());\n+            }\n+            else if (varargs.isPresent()) {\n+                checkPassed \u003d isStringType(parameterType.getFirstChild());\n             }\n         }\n         return checkPassed;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        boolean checkPassed \u003d false;\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n\n        if (params.getChildCount() \u003d\u003d 1) {\n            final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n            final Optional\u003cDetailAST\u003e arrayDecl \u003d Optional.fromNullable(\n                parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR));\n            final Optional\u003cDetailAST\u003e varargs \u003d Optional.fromNullable(\n                params.getFirstChild().findFirstToken(TokenTypes.ELLIPSIS));\n\n            if (arrayDecl.isPresent()) {\n                checkPassed \u003d isStringType(arrayDecl.get().getFirstChild());\n            }\n            else if (varargs.isPresent()) {\n                checkPassed \u003d isStringType(parameterType.getFirstChild());\n            }\n        }\n        return checkPassed;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": "21/09/15 3:02 PM",
      "commitName": "0c2a64d9f02ab5b94bbf4213cb2978f7b459b6f5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "31/08/15 11:24 AM",
      "commitNameOld": "2b861bd6e16584e22bb115ff7abd65c35072eb92",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 21.15,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private static boolean checkParams(DetailAST method) {\n         boolean checkPassed \u003d false;\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n \n         if (params.getChildCount() \u003d\u003d 1) {\n-            final DetailAST paratype \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n-            final DetailAST arrayDecl \u003d paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n+            final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n+            final DetailAST arrayDecl \u003d parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n \n             if (arrayDecl !\u003d null) {\n                 final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n                 final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n                 checkPassed \u003d \"String\".equals(type.getText())\n                         || \"java.lang.String\".equals(type.getText());\n             }\n         }\n         return checkPassed;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        boolean checkPassed \u003d false;\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n\n        if (params.getChildCount() \u003d\u003d 1) {\n            final DetailAST parameterType \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n            final DetailAST arrayDecl \u003d parameterType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n\n            if (arrayDecl !\u003d null) {\n                final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n                final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n                checkPassed \u003d \"String\".equals(type.getText())\n                        || \"java.lang.String\".equals(type.getText());\n            }\n        }\n        return checkPassed;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "12bd8334067b18d9d1ed5039dd4dc673f3a1f560": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for UncommentedMainCheck\n",
      "commitDate": "27/08/15 10:34 PM",
      "commitName": "12bd8334067b18d9d1ed5039dd4dc673f3a1f560",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     private static boolean checkParams(DetailAST method) {\n+        boolean checkPassed \u003d false;\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n-        if (params.getChildCount() !\u003d 1) {\n-            return false;\n-        }\n-        final DetailAST paratype \u003d params.getFirstChild()\n-            .findFirstToken(TokenTypes.TYPE);\n-        final DetailAST arrayDecl \u003d\n-            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n-        if (arrayDecl \u003d\u003d null) {\n-            return false;\n-        }\n \n-        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n+        if (params.getChildCount() \u003d\u003d 1) {\n+            final DetailAST paratype \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n+            final DetailAST arrayDecl \u003d paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n \n-        final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n-        return \"String\".equals(type.getText())\n-                || \"java.lang.String\".equals(type.getText());\n+            if (arrayDecl !\u003d null) {\n+                final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n+                final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n+                checkPassed \u003d \"String\".equals(type.getText())\n+                        || \"java.lang.String\".equals(type.getText());\n+            }\n+        }\n+        return checkPassed;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        boolean checkPassed \u003d false;\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n\n        if (params.getChildCount() \u003d\u003d 1) {\n            final DetailAST paratype \u003d params.getFirstChild().findFirstToken(TokenTypes.TYPE);\n            final DetailAST arrayDecl \u003d paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n\n            if (arrayDecl !\u003d null) {\n                final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n                final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n                checkPassed \u003d \"String\".equals(type.getText())\n                        || \"java.lang.String\".equals(type.getText());\n            }\n        }\n        return checkPassed;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe": {
      "type": "Ybodychange",
      "commitMessage": "Coverage has been increased to 100% in UncommentedMainCheck. Issue #1290\n",
      "commitDate": "30/07/15 4:50 PM",
      "commitName": "dcd7085ce2412a00ca97cd4fbaf7e8bf4fd4cfbe",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 7.74,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,19 @@\n     private static boolean checkParams(DetailAST method) {\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n         final DetailAST paratype \u003d params.getFirstChild()\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n             paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n-        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n-            || arrayType.getType() \u003d\u003d TokenTypes.DOT) {\n-            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n-            return \"String\".equals(type.getText())\n-                    || \"java.lang.String\".equals(type.getText());\n-        }\n-\n-        return false;\n+        final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n+        return \"String\".equals(type.getText())\n+                || \"java.lang.String\".equals(type.getText());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paratype \u003d params.getFirstChild()\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n        return \"String\".equals(type.getText())\n                || \"java.lang.String\".equals(type.getText());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    private boolean checkParams(DetailAST method) {\n+    private static boolean checkParams(DetailAST method) {\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n         final DetailAST paratype \u003d params.getFirstChild()\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n             paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n         if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n             || arrayType.getType() \u003d\u003d TokenTypes.DOT) {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return \"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText());\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean checkParams(DetailAST method) {\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paratype \u003d params.getFirstChild()\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n            || arrayType.getType() \u003d\u003d TokenTypes.DOT) {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return \"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText());\n        }\n\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "5ede09997c283b4c418f0f540848e006be04fa87",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private boolean checkParams(DetailAST method)\n     {\n         final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n-        final DetailAST paratype \u003d (params.getFirstChild())\n+        final DetailAST paratype \u003d params.getFirstChild()\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n             paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n-        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n-            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n+        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n+            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n         {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n-            return (\"String\".equals(type.getText())\n-                    || \"java.lang.String\".equals(type.getText()));\n+            return \"String\".equals(type.getText())\n+                    || \"java.lang.String\".equals(type.getText());\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkParams(DetailAST method)\n    {\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paratype \u003d params.getFirstChild()\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return \"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText());\n        }\n\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 475,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    private boolean checkParams(DetailAST aMethod)\n+    private boolean checkParams(DetailAST method)\n     {\n-        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n-        final DetailAST paramType \u003d (params.getFirstChild())\n+        final DetailAST paratype \u003d (params.getFirstChild())\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n-            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n+            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n         if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n             || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n         {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return (\"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText()));\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean checkParams(DetailAST method)\n    {\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paratype \u003d (params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
          "extendedDetails": {
            "oldValue": "[aMethod-DetailAST]",
            "newValue": "[method-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 475,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,26 @@\n-    private boolean checkParams(DetailAST aMethod)\n+    private boolean checkParams(DetailAST method)\n     {\n-        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n-        final DetailAST paramType \u003d (params.getFirstChild())\n+        final DetailAST paratype \u003d (params.getFirstChild())\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n-            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n+            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n         if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n             || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n         {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return (\"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText()));\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean checkParams(DetailAST method)\n    {\n        final DetailAST params \u003d method.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paratype \u003d (params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paratype.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean checkParams(DetailAST aMethod)\n    {\n        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paramType \u003d (params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private boolean checkParams(DetailAST aMethod)\n     {\n         final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n-        final DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n+        final DetailAST paramType \u003d (params.getFirstChild())\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n             paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n-        final DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n+        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n \n         if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n             || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n         {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return (\"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText()));\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkParams(DetailAST aMethod)\n    {\n        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paramType \u003d (params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d arrayDecl.getFirstChild();\n\n        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "21/01/06 4:43 AM",
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.61,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private boolean checkParams(DetailAST aMethod)\n     {\n         final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n         final DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n             .findFirstToken(TokenTypes.TYPE);\n         final DetailAST arrayDecl \u003d\n             paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n         final DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n \n-        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n-            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n+        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n+            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n         {\n             final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return (\"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText()));\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkParams(DetailAST aMethod)\n    {\n        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n\n        if ((arrayType.getType() \u003d\u003d TokenTypes.IDENT)\n            || (arrayType.getType() \u003d\u003d TokenTypes.DOT))\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.68,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     private boolean checkParams(DetailAST aMethod)\n     {\n-        DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n         if (params.getChildCount() !\u003d 1) {\n             return false;\n         }\n-        DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n+        final DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n             .findFirstToken(TokenTypes.TYPE);\n-        DetailAST arrayDecl \u003d\n+        final DetailAST arrayDecl \u003d\n             paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n         if (arrayDecl \u003d\u003d null) {\n             return false;\n         }\n \n-        DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n+        final DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n \n         if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n             || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n         {\n-            FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n+            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n             return (\"String\".equals(type.getText())\n                     || \"java.lang.String\".equals(type.getText()));\n         }\n \n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkParams(DetailAST aMethod)\n    {\n        final DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        final DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        final DetailAST arrayDecl \u003d\n            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        final DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n\n        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n        {\n            final FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java",
      "extendedDetails": {}
    },
    "1878e21451499ee852bf1e45af1653439d7a4c8d": {
      "type": "Yintroduced",
      "commitMessage": "Added check for uncommented main methods (debugging leftovers). (module UncommentedMain,request 732257)\n",
      "commitDate": "30/05/03 12:35 PM",
      "commitName": "1878e21451499ee852bf1e45af1653439d7a4c8d",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,26 @@\n+    private boolean checkParams(DetailAST aMethod)\n+    {\n+        DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n+        if (params.getChildCount() !\u003d 1) {\n+            return false;\n+        }\n+        DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n+            .findFirstToken(TokenTypes.TYPE);\n+        DetailAST arrayDecl \u003d\n+            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n+        if (arrayDecl \u003d\u003d null) {\n+            return false;\n+        }\n+\n+        DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n+\n+        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n+            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n+        {\n+            FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n+            return (\"String\".equals(type.getText())\n+                    || \"java.lang.String\".equals(type.getText()));\n+        }\n+\n+        return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean checkParams(DetailAST aMethod)\n    {\n        DetailAST params \u003d aMethod.findFirstToken(TokenTypes.PARAMETERS);\n        if (params.getChildCount() !\u003d 1) {\n            return false;\n        }\n        DetailAST paramType \u003d ((DetailAST) params.getFirstChild())\n            .findFirstToken(TokenTypes.TYPE);\n        DetailAST arrayDecl \u003d\n            paramType.findFirstToken(TokenTypes.ARRAY_DECLARATOR);\n        if (arrayDecl \u003d\u003d null) {\n            return false;\n        }\n\n        DetailAST arrayType \u003d (DetailAST) arrayDecl.getFirstChild();\n\n        if (arrayType.getType() \u003d\u003d TokenTypes.IDENT\n            || arrayType.getType() \u003d\u003d TokenTypes.DOT)\n        {\n            FullIdent type \u003d FullIdent.createFullIdent(arrayType);\n            return (\"String\".equals(type.getText())\n                    || \"java.lang.String\".equals(type.getText()));\n        }\n\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/UncommentedMainCheck.java"
    }
  }
}