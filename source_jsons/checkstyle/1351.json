{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyBlockCheck.java",
  "functionName": "findLeftCurly",
  "functionId": "findLeftCurly___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java",
  "functionStartLine": 283,
  "functionEndLine": 300,
  "numCommitsSeen": 54,
  "timeTaken": 952,
  "changeHistory": [
    "a40685f8b2bdfd1fd1b2eea48810033e5821219c",
    "8da98a9d3dc762c4dd026756eb5cc5533571a39b",
    "350801597ccce93d019ab03f5f171d5acc27e3d9"
  ],
  "changeHistoryShort": {
    "a40685f8b2bdfd1fd1b2eea48810033e5821219c": "Ybodychange",
    "8da98a9d3dc762c4dd026756eb5cc5533571a39b": "Ybodychange",
    "350801597ccce93d019ab03f5f171d5acc27e3d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a40685f8b2bdfd1fd1b2eea48810033e5821219c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4472: Fix EmptyBlockCheck NPE with annotation default keyword\n",
      "commitDate": "04/07/17 7:05 AM",
      "commitName": "a40685f8b2bdfd1fd1b2eea48810033e5821219c",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": "23/06/17 8:55 AM",
      "commitNameOld": "fdb2140878cd476d8e71ed3a4e483baa30c98348",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 10.92,
      "commitsBetweenForRepo": 76,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     private static DetailAST findLeftCurly(DetailAST ast) {\n         final DetailAST leftCurly;\n         final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n         if ((ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n                 || ast.getType() \u003d\u003d TokenTypes.LITERAL_DEFAULT)\n                 \u0026\u0026 ast.getNextSibling() !\u003d null\n+                \u0026\u0026 ast.getNextSibling().getFirstChild() !\u003d null\n                 \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n             leftCurly \u003d ast.getNextSibling().getFirstChild();\n         }\n         else if (slistAST \u003d\u003d null) {\n             leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n         }\n         else {\n             leftCurly \u003d slistAST;\n         }\n         return leftCurly;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST findLeftCurly(DetailAST ast) {\n        final DetailAST leftCurly;\n        final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n        if ((ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n                || ast.getType() \u003d\u003d TokenTypes.LITERAL_DEFAULT)\n                \u0026\u0026 ast.getNextSibling() !\u003d null\n                \u0026\u0026 ast.getNextSibling().getFirstChild() !\u003d null\n                \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n            leftCurly \u003d ast.getNextSibling().getFirstChild();\n        }\n        else if (slistAST \u003d\u003d null) {\n            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n        }\n        else {\n            leftCurly \u003d slistAST;\n        }\n        return leftCurly;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java",
      "extendedDetails": {}
    },
    "8da98a9d3dc762c4dd026756eb5cc5533571a39b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4159: LITERAL_DEFAULT is now processed by EmptyBlockCheck. Corresponding UTs added\n",
      "commitDate": "21/04/17 5:35 AM",
      "commitName": "8da98a9d3dc762c4dd026756eb5cc5533571a39b",
      "commitAuthor": "Piyush Sharma",
      "commitDateOld": "05/04/17 8:41 AM",
      "commitNameOld": "350801597ccce93d019ab03f5f171d5acc27e3d9",
      "commitAuthorOld": "Piyush Sharma",
      "daysBetweenCommits": 15.87,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     private static DetailAST findLeftCurly(DetailAST ast) {\n         final DetailAST leftCurly;\n         final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n-        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n+        if ((ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n+                || ast.getType() \u003d\u003d TokenTypes.LITERAL_DEFAULT)\n                 \u0026\u0026 ast.getNextSibling() !\u003d null\n                 \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n             leftCurly \u003d ast.getNextSibling().getFirstChild();\n         }\n         else if (slistAST \u003d\u003d null) {\n             leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n         }\n         else {\n             leftCurly \u003d slistAST;\n         }\n         return leftCurly;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST findLeftCurly(DetailAST ast) {\n        final DetailAST leftCurly;\n        final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n        if ((ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n                || ast.getType() \u003d\u003d TokenTypes.LITERAL_DEFAULT)\n                \u0026\u0026 ast.getNextSibling() !\u003d null\n                \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n            leftCurly \u003d ast.getNextSibling().getFirstChild();\n        }\n        else if (slistAST \u003d\u003d null) {\n            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n        }\n        else {\n            leftCurly \u003d slistAST;\n        }\n        return leftCurly;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java",
      "extendedDetails": {}
    },
    "350801597ccce93d019ab03f5f171d5acc27e3d9": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3839: One new method to optimise design and detect empty LITERAL_CASE. Added corresponding UTs. Updated documentation\n",
      "commitDate": "05/04/17 8:41 AM",
      "commitName": "350801597ccce93d019ab03f5f171d5acc27e3d9",
      "commitAuthor": "Piyush Sharma",
      "diff": "@@ -0,0 +1,16 @@\n+    private static DetailAST findLeftCurly(DetailAST ast) {\n+        final DetailAST leftCurly;\n+        final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n+        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n+                \u0026\u0026 ast.getNextSibling() !\u003d null\n+                \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n+            leftCurly \u003d ast.getNextSibling().getFirstChild();\n+        }\n+        else if (slistAST \u003d\u003d null) {\n+            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n+        }\n+        else {\n+            leftCurly \u003d slistAST;\n+        }\n+        return leftCurly;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST findLeftCurly(DetailAST ast) {\n        final DetailAST leftCurly;\n        final DetailAST slistAST \u003d ast.findFirstToken(TokenTypes.SLIST);\n        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CASE\n                \u0026\u0026 ast.getNextSibling() !\u003d null\n                \u0026\u0026 ast.getNextSibling().getFirstChild().getType() \u003d\u003d TokenTypes.SLIST) {\n            leftCurly \u003d ast.getNextSibling().getFirstChild();\n        }\n        else if (slistAST \u003d\u003d null) {\n            leftCurly \u003d ast.findFirstToken(TokenTypes.LCURLY);\n        }\n        else {\n            leftCurly \u003d slistAST;\n        }\n        return leftCurly;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java"
    }
  }
}