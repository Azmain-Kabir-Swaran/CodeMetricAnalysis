{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MethodDefHandler.java",
  "functionName": "getMethodDefLineStart",
  "functionId": "getMethodDefLineStart___mainAst-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java",
  "functionStartLine": 81,
  "functionEndLine": 106,
  "numCommitsSeen": 30,
  "timeTaken": 917,
  "changeHistory": [
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
    "9e9a0b424551418e80c5a7e7badadfe80958ec82"
  ],
  "changeHistoryShort": {
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": "Ymodifierchange",
    "9e9a0b424551418e80c5a7e7badadfe80958ec82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4726: fix MethodMayBeStatic idea violations\n",
      "commitDate": "23/07/17 1:48 PM",
      "commitName": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "26/06/17 6:06 PM",
      "commitNameOld": "e103e3dc10554c90e0c5ed7abe6ea84d8de14304",
      "commitAuthorOld": "Vikramaditya Kukreja",
      "daysBetweenCommits": 26.82,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n-    private int getMethodDefLineStart(DetailAST mainAst) {\n+    private static int getMethodDefLineStart(DetailAST mainAst) {\n         // get first type position\n         int lineStart \u003d mainAst.findFirstToken(TokenTypes.IDENT).getLineNo();\n \n         // check if there is a type before the indent\n         final DetailAST typeNode \u003d mainAst.findFirstToken(TokenTypes.TYPE);\n         if (typeNode !\u003d null) {\n             lineStart \u003d getFirstLine(lineStart, typeNode);\n         }\n \n         // check if there is a modifier before the type\n         for (DetailAST node \u003d mainAst.findFirstToken(TokenTypes.MODIFIERS).getFirstChild();\n                 node !\u003d null;\n                 node \u003d node.getNextSibling()) {\n             // skip annotations as we check them else where as outside the method\n             if (node.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                 continue;\n             }\n \n             if (node.getLineNo() \u003c lineStart) {\n                 lineStart \u003d node.getLineNo();\n             }\n         }\n \n         return lineStart;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getMethodDefLineStart(DetailAST mainAst) {\n        // get first type position\n        int lineStart \u003d mainAst.findFirstToken(TokenTypes.IDENT).getLineNo();\n\n        // check if there is a type before the indent\n        final DetailAST typeNode \u003d mainAst.findFirstToken(TokenTypes.TYPE);\n        if (typeNode !\u003d null) {\n            lineStart \u003d getFirstLine(lineStart, typeNode);\n        }\n\n        // check if there is a modifier before the type\n        for (DetailAST node \u003d mainAst.findFirstToken(TokenTypes.MODIFIERS).getFirstChild();\n                node !\u003d null;\n                node \u003d node.getNextSibling()) {\n            // skip annotations as we check them else where as outside the method\n            if (node.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                continue;\n            }\n\n            if (node.getLineNo() \u003c lineStart) {\n                lineStart \u003d node.getLineNo();\n            }\n        }\n\n        return lineStart;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "9e9a0b424551418e80c5a7e7badadfe80958ec82": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2763: restored indentation\u0027s throwsIndent logic",
      "commitDate": "07/05/16 6:37 AM",
      "commitName": "9e9a0b424551418e80c5a7e7badadfe80958ec82",
      "commitAuthor": "rnveach",
      "diff": "@@ -0,0 +1,26 @@\n+    private int getMethodDefLineStart(DetailAST mainAst) {\n+        // get first type position\n+        int lineStart \u003d mainAst.findFirstToken(TokenTypes.IDENT).getLineNo();\n+\n+        // check if there is a type before the indent\n+        final DetailAST typeNode \u003d mainAst.findFirstToken(TokenTypes.TYPE);\n+        if (typeNode !\u003d null) {\n+            lineStart \u003d getFirstLine(lineStart, typeNode);\n+        }\n+\n+        // check if there is a modifier before the type\n+        for (DetailAST node \u003d mainAst.findFirstToken(TokenTypes.MODIFIERS).getFirstChild();\n+                node !\u003d null;\n+                node \u003d node.getNextSibling()) {\n+            // skip annotations as we check them else where as outside the method\n+            if (node.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+                continue;\n+            }\n+\n+            if (node.getLineNo() \u003c lineStart) {\n+                lineStart \u003d node.getLineNo();\n+            }\n+        }\n+\n+        return lineStart;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int getMethodDefLineStart(DetailAST mainAst) {\n        // get first type position\n        int lineStart \u003d mainAst.findFirstToken(TokenTypes.IDENT).getLineNo();\n\n        // check if there is a type before the indent\n        final DetailAST typeNode \u003d mainAst.findFirstToken(TokenTypes.TYPE);\n        if (typeNode !\u003d null) {\n            lineStart \u003d getFirstLine(lineStart, typeNode);\n        }\n\n        // check if there is a modifier before the type\n        for (DetailAST node \u003d mainAst.findFirstToken(TokenTypes.MODIFIERS).getFirstChild();\n                node !\u003d null;\n                node \u003d node.getNextSibling()) {\n            // skip annotations as we check them else where as outside the method\n            if (node.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                continue;\n            }\n\n            if (node.getLineNo() \u003c lineStart) {\n                lineStart \u003d node.getLineNo();\n            }\n        }\n\n        return lineStart;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodDefHandler.java"
    }
  }
}