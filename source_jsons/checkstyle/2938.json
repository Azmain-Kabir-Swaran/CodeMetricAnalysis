{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TranslationCheck.java",
  "functionName": "checkFilesForConsistencyRegardingTheirKeys",
  "functionId": "checkFilesForConsistencyRegardingTheirKeys___fileKeys-Map__File,Set__String______keysThatMustExist-Set__String__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
  "functionStartLine": 553,
  "functionEndLine": 570,
  "numCommitsSeen": 147,
  "timeTaken": 2873,
  "changeHistory": [
    "c409ec8e3bd00eeb11520e8bb4395fc1775ae94c",
    "a262bad94bb4aa5786a2c47582021dc1189208ec",
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
    "0461a0f839c8cd2306354912b4956267c1d0ec20",
    "e454ccdc73d393bed3fbd3713249b5f8d8219a3b",
    "3363faeeea40d77fa7f8ad600e741514e5f3d367",
    "9b2f177a03d5696671c2b705d2b1b686f127dcce",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "d843dd8439cc5163bcd743443f970c392f4ae30e"
  ],
  "changeHistoryShort": {
    "c409ec8e3bd00eeb11520e8bb4395fc1775ae94c": "Ybodychange",
    "a262bad94bb4aa5786a2c47582021dc1189208ec": "Ybodychange",
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": "Ybodychange",
    "0461a0f839c8cd2306354912b4956267c1d0ec20": "Ymultichange(Yparameterchange,Ybodychange)",
    "e454ccdc73d393bed3fbd3713249b5f8d8219a3b": "Ybodychange",
    "3363faeeea40d77fa7f8ad600e741514e5f3d367": "Ybodychange",
    "9b2f177a03d5696671c2b705d2b1b686f127dcce": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "d843dd8439cc5163bcd743443f970c392f4ae30e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c409ec8e3bd00eeb11520e8bb4395fc1775ae94c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5103: fixed multi-file reporting in TranslationCheck",
      "commitDate": "17/04/19 3:51 AM",
      "commitName": "c409ec8e3bd00eeb11520e8bb4395fc1775ae94c",
      "commitAuthor": "rnveach",
      "commitDateOld": "13/03/19 11:08 PM",
      "commitNameOld": "aef7c727ba4a3872e7094f287dc9a506ec172592",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 34.2,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final String path \u003d fileKey.getKey().getPath();\n-            dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n-            for (Object key : missingKeys) {\n-                log(1, MSG_KEY, key);\n+            if (!missingKeys.isEmpty()) {\n+                final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n+                final String path \u003d fileKey.getKey().getAbsolutePath();\n+                dispatcher.fireFileStarted(path);\n+                for (Object key : missingKeys) {\n+                    log(1, MSG_KEY, key);\n+                }\n+                fireErrors(path);\n+                dispatcher.fireFileFinished(path);\n             }\n-            fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n                final String path \u003d fileKey.getKey().getAbsolutePath();\n                dispatcher.fireFileStarted(path);\n                for (Object key : missingKeys) {\n                    log(1, MSG_KEY, key);\n                }\n                fireErrors(path);\n                dispatcher.fireFileFinished(path);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "a262bad94bb4aa5786a2c47582021dc1189208ec": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for misc",
      "commitDate": "02/01/19 8:09 PM",
      "commitName": "a262bad94bb4aa5786a2c47582021dc1189208ec",
      "commitAuthor": "rnveach",
      "commitDateOld": "02/12/18 8:23 PM",
      "commitNameOld": "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final String path \u003d fileKey.getKey().getPath();\n             dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n-            if (!missingKeys.isEmpty()) {\n-                for (Object key : missingKeys) {\n-                    log(1, MSG_KEY, key);\n-                }\n+            for (Object key : missingKeys) {\n+                log(1, MSG_KEY, key);\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d fileKey.getKey().getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            for (Object key : missingKeys) {\n                log(1, MSG_KEY, key);\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6000: Fix zero line violations\n",
      "commitDate": "05/09/18 5:54 AM",
      "commitName": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthor": "Boxuan Li",
      "commitDateOld": "08/07/18 8:00 AM",
      "commitNameOld": "5ff596b55216218592e13248bb1c1d09ba606bac",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 58.91,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final String path \u003d fileKey.getKey().getPath();\n             dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n-                    log(0, MSG_KEY, key);\n+                    log(1, MSG_KEY, key);\n                 }\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d fileKey.getKey().getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(1, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "0461a0f839c8cd2306354912b4956267c1d0ec20": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3484: removed instances of guava immutables",
      "commitDate": "07/05/18 6:47 PM",
      "commitName": "0461a0f839c8cd2306354912b4956267c1d0ec20",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3484: removed instances of guava immutables",
          "commitDate": "07/05/18 6:47 PM",
          "commitName": "0461a0f839c8cd2306354912b4956267c1d0ec20",
          "commitAuthor": "rnveach",
          "commitDateOld": "03/05/18 2:28 PM",
          "commitNameOld": "e454ccdc73d393bed3fbd3713249b5f8d8219a3b",
          "commitAuthorOld": "kazachka",
          "daysBetweenCommits": 4.18,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n+    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n-        for (File currentFile : fileKeys.keySet()) {\n+        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final String path \u003d currentFile.getPath();\n+            final String path \u003d fileKey.getKey().getPath();\n             dispatcher.fireFileStarted(path);\n-            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n+            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d fileKey.getKey().getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
          "extendedDetails": {
            "oldValue": "[fileKeys-SetMultimap\u003cFile,String\u003e, keysThatMustExist-Set\u003cString\u003e]",
            "newValue": "[fileKeys-Map\u003cFile,Set\u003cString\u003e\u003e, keysThatMustExist-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3484: removed instances of guava immutables",
          "commitDate": "07/05/18 6:47 PM",
          "commitName": "0461a0f839c8cd2306354912b4956267c1d0ec20",
          "commitAuthor": "rnveach",
          "commitDateOld": "03/05/18 2:28 PM",
          "commitNameOld": "e454ccdc73d393bed3fbd3713249b5f8d8219a3b",
          "commitAuthorOld": "kazachka",
          "daysBetweenCommits": 4.18,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n+    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n-        for (File currentFile : fileKeys.keySet()) {\n+        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final String path \u003d currentFile.getPath();\n+            final String path \u003d fileKey.getKey().getPath();\n             dispatcher.fireFileStarted(path);\n-            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n+            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(Map\u003cFile, Set\u003cString\u003e\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (Entry\u003cFile, Set\u003cString\u003e\u003e fileKey : fileKeys.entrySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d fileKey.getKey().getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKey.getValue();\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "e454ccdc73d393bed3fbd3713249b5f8d8219a3b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5412: change lambda parameter names\n",
      "commitDate": "03/05/18 2:28 PM",
      "commitName": "e454ccdc73d393bed3fbd3713249b5f8d8219a3b",
      "commitAuthor": "kazachka",
      "commitDateOld": "20/04/18 11:55 AM",
      "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 13.11,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (File currentFile : fileKeys.keySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final String path \u003d currentFile.getPath();\n             dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n-                .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n+                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (File currentFile : fileKeys.keySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d currentFile.getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(key -\u003e !currentFileKeys.contains(key)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "3363faeeea40d77fa7f8ad600e741514e5f3d367": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5057: fixed xml violations/exceptions with file started/finished",
      "commitDate": "30/12/17 6:58 AM",
      "commitName": "3363faeeea40d77fa7f8ad600e741514e5f3d367",
      "commitAuthor": "rnveach",
      "commitDateOld": "27/12/17 3:37 PM",
      "commitNameOld": "cbbcbad89962eb6727e57ad9baa9cd0ac0e19e72",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 2.64,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (File currentFile : fileKeys.keySet()) {\n+            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n+            final String path \u003d currentFile.getPath();\n+            dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n-            final String path \u003d currentFile.getPath();\n             fireErrors(path);\n-            getMessageDispatcher().fireFileFinished(path);\n+            dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (File currentFile : fileKeys.keySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d currentFile.getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "9b2f177a03d5696671c2b705d2b1b686f127dcce": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4675: increase coverage of pitest-checks-misc to 100%\n",
      "commitDate": "20/09/17 6:10 PM",
      "commitName": "9b2f177a03d5696671c2b705d2b1b686f127dcce",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "21/08/17 5:47 AM",
      "commitNameOld": "74c41b3aaa97a1b013656d04bba3835920008bbd",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 30.52,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (File currentFile : fileKeys.keySet()) {\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final String path \u003d currentFile.getPath();\n-            dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n             final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                 .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n+            final String path \u003d currentFile.getPath();\n             fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n+            getMessageDispatcher().fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (File currentFile : fileKeys.keySet()) {\n            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            final String path \u003d currentFile.getPath();\n            fireErrors(path);\n            getMessageDispatcher().fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "04/07/16 11:09 AM",
      "commitNameOld": "a2117301def721fe628b15e5e5d06a353ef03fef",
      "commitAuthorOld": "Michael Simons",
      "daysBetweenCommits": 78.36,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                             Set\u003cString\u003e keysThatMustExist) {\n         for (File currentFile : fileKeys.keySet()) {\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final String path \u003d currentFile.getPath();\n             dispatcher.fireFileStarted(path);\n             final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n-            final Set\u003cString\u003e missingKeys \u003d Sets.difference(keysThatMustExist, currentFileKeys);\n+            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n+                .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n             if (!missingKeys.isEmpty()) {\n                 for (Object key : missingKeys) {\n                     log(0, MSG_KEY, key);\n                 }\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (File currentFile : fileKeys.keySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d currentFile.getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n            final Set\u003cString\u003e missingKeys \u003d keysThatMustExist.stream()\n                .filter(e -\u003e !currentFileKeys.contains(e)).collect(Collectors.toSet());\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "d843dd8439cc5163bcd743443f970c392f4ae30e": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2204: Add \u0027baseName\u0027 option for TranslationCheck\n",
      "commitDate": "12/03/16 9:31 AM",
      "commitName": "d843dd8439cc5163bcd743443f970c392f4ae30e",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,17 @@\n+    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n+                                                            Set\u003cString\u003e keysThatMustExist) {\n+        for (File currentFile : fileKeys.keySet()) {\n+            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n+            final String path \u003d currentFile.getPath();\n+            dispatcher.fireFileStarted(path);\n+            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n+            final Set\u003cString\u003e missingKeys \u003d Sets.difference(keysThatMustExist, currentFileKeys);\n+            if (!missingKeys.isEmpty()) {\n+                for (Object key : missingKeys) {\n+                    log(0, MSG_KEY, key);\n+                }\n+            }\n+            fireErrors(path);\n+            dispatcher.fireFileFinished(path);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkFilesForConsistencyRegardingTheirKeys(SetMultimap\u003cFile, String\u003e fileKeys,\n                                                            Set\u003cString\u003e keysThatMustExist) {\n        for (File currentFile : fileKeys.keySet()) {\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final String path \u003d currentFile.getPath();\n            dispatcher.fireFileStarted(path);\n            final Set\u003cString\u003e currentFileKeys \u003d fileKeys.get(currentFile);\n            final Set\u003cString\u003e missingKeys \u003d Sets.difference(keysThatMustExist, currentFileKeys);\n            if (!missingKeys.isEmpty()) {\n                for (Object key : missingKeys) {\n                    log(0, MSG_KEY, key);\n                }\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java"
    }
  }
}