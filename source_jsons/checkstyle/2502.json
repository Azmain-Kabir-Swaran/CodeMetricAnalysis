{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CustomImportOrderCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
  "functionStartLine": 538,
  "functionEndLine": 552,
  "numCommitsSeen": 104,
  "timeTaken": 2173,
  "changeHistory": [
    "2705595ee9925dfd2bfe691aa119658206557240",
    "018b52126dd3ddf58a47dadbe5f1b7ca5c7ffd3d",
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "2a3be6769c4a97d090970ed52ca2333cb9aea706"
  ],
  "changeHistoryShort": {
    "2705595ee9925dfd2bfe691aa119658206557240": "Ybodychange",
    "018b52126dd3ddf58a47dadbe5f1b7ca5c7ffd3d": "Ybodychange",
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "2a3be6769c4a97d090970ed52ca2333cb9aea706": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2705595ee9925dfd2bfe691aa119658206557240": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7805: Resolve Pitest Issues - CustomImportOrderCheck (4)\n",
      "commitDate": "20/03/20 4:49 AM",
      "commitName": "2705595ee9925dfd2bfe691aa119658206557240",
      "commitAuthor": "malintha1996",
      "commitDateOld": "04/02/20 1:04 AM",
      "commitNameOld": "dbac7fb8e605c3f29172d7f4a894b1b91e380edc",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 45.11,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {\n-                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n-                        samePackageMatchingDepth, ast);\n-            }\n+            samePackageDomainsRegExp \u003d createSamePackageRegexp(\n+                    samePackageMatchingDepth, ast);\n         }\n         else {\n             final String importFullPath \u003d getFullImportIdent(ast);\n             final int lineNo \u003d ast.getLineNo();\n             final int endLineNo \u003d ast.getLastChild().getLineNo();\n             final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n             importToGroupList.add(new ImportDetails(importFullPath,\n                     lineNo, endLineNo, getImportGroup(isStatic, importFullPath),\n                     isStatic));\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                    samePackageMatchingDepth, ast);\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(ast);\n            final int lineNo \u003d ast.getLineNo();\n            final int endLineNo \u003d ast.getLastChild().getLineNo();\n            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            importToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, endLineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "018b52126dd3ddf58a47dadbe5f1b7ca5c7ffd3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7314: check empty line separator between import statements\n",
      "commitDate": "21/12/19 10:55 AM",
      "commitName": "018b52126dd3ddf58a47dadbe5f1b7ca5c7ffd3d",
      "commitAuthor": "Zhenlei Huang",
      "commitDateOld": "14/12/19 3:23 PM",
      "commitNameOld": "baa250c454de5845151b64ae940173744f4d0435",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 6.81,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {\n                 samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                         samePackageMatchingDepth, ast);\n             }\n         }\n         else {\n             final String importFullPath \u003d getFullImportIdent(ast);\n             final int lineNo \u003d ast.getLineNo();\n+            final int endLineNo \u003d ast.getLastChild().getLineNo();\n             final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n             importToGroupList.add(new ImportDetails(importFullPath,\n-                    lineNo, getImportGroup(isStatic, importFullPath),\n+                    lineNo, endLineNo, getImportGroup(isStatic, importFullPath),\n                     isStatic));\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {\n                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                        samePackageMatchingDepth, ast);\n            }\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(ast);\n            final int lineNo \u003d ast.getLineNo();\n            final int endLineNo \u003d ast.getLastChild().getLineNo();\n            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            importToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, endLineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8": {
      "type": "Ybodychange",
      "commitMessage": "Improved UT coverage for CustomImportOrder #1128\n",
      "commitDate": "07/07/15 7:37 PM",
      "commitName": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
      "commitAuthor": "Aleksandr Ivanov",
      "commitDateOld": "05/07/15 11:58 AM",
      "commitNameOld": "ac5dbc736320f6e5807cef97964a8a2928123687",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 2.32,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     public void visitToken(DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n-                    \u0026\u0026 samePackageMatchingDepth !\u003d -1) {\n+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {\n                 samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                         samePackageMatchingDepth, ast);\n             }\n         }\n         else {\n             final String importFullPath \u003d getFullImportIdent(ast);\n             final int lineNo \u003d ast.getLineNo();\n             final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n             importToGroupList.add(new ImportDetails(importFullPath,\n                     lineNo, getImportGroup(isStatic, importFullPath),\n                     isStatic));\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)) {\n                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                        samePackageMatchingDepth, ast);\n            }\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(ast);\n            final int lineNo \u003d ast.getLineNo();\n            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            importToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n-                    \u0026\u0026 mSamePackageMatchingDepth !\u003d -1)\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n+                    \u0026\u0026 samePackageMatchingDepth !\u003d -1)\n             {\n-                mSamePackageDomainsRegExp \u003d createSamePackageRegexp(\n-                        mSamePackageMatchingDepth, aAST);\n+                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n+                        samePackageMatchingDepth, ast);\n             }\n         }\n         else {\n-            final String importFullPath \u003d getFullImportIdent(aAST);\n-            final int lineNo \u003d aAST.getLineNo();\n-            final boolean isStatic \u003d aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n-            mImportToGroupList.add(new ImportDetails(importFullPath,\n+            final String importFullPath \u003d getFullImportIdent(ast);\n+            final int lineNo \u003d ast.getLineNo();\n+            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n+            importToGroupList.add(new ImportDetails(importFullPath,\n                     lineNo, getImportGroup(isStatic, importFullPath),\n                     isStatic));\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n                    \u0026\u0026 samePackageMatchingDepth !\u003d -1)\n            {\n                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                        samePackageMatchingDepth, ast);\n            }\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(ast);\n            final int lineNo \u003d ast.getLineNo();\n            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            importToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n-                    \u0026\u0026 mSamePackageMatchingDepth !\u003d -1)\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n+                    \u0026\u0026 samePackageMatchingDepth !\u003d -1)\n             {\n-                mSamePackageDomainsRegExp \u003d createSamePackageRegexp(\n-                        mSamePackageMatchingDepth, aAST);\n+                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n+                        samePackageMatchingDepth, ast);\n             }\n         }\n         else {\n-            final String importFullPath \u003d getFullImportIdent(aAST);\n-            final int lineNo \u003d aAST.getLineNo();\n-            final boolean isStatic \u003d aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n-            mImportToGroupList.add(new ImportDetails(importFullPath,\n+            final String importFullPath \u003d getFullImportIdent(ast);\n+            final int lineNo \u003d ast.getLineNo();\n+            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n+            importToGroupList.add(new ImportDetails(importFullPath,\n                     lineNo, getImportGroup(isStatic, importFullPath),\n                     isStatic));\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (customImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n                    \u0026\u0026 samePackageMatchingDepth !\u003d -1)\n            {\n                samePackageDomainsRegExp \u003d createSamePackageRegexp(\n                        samePackageMatchingDepth, ast);\n            }\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(ast);\n            final int lineNo \u003d ast.getLineNo();\n            final boolean isStatic \u003d ast.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            importToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "2a3be6769c4a97d090970ed52ca2333cb9aea706": {
      "type": "Yintroduced",
      "commitMessage": "CustomImportOrder was introduced #231\n",
      "commitDate": "10/08/14 4:52 AM",
      "commitName": "2a3be6769c4a97d090970ed52ca2333cb9aea706",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,19 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n+                    \u0026\u0026 mSamePackageMatchingDepth !\u003d -1)\n+            {\n+                mSamePackageDomainsRegExp \u003d createSamePackageRegexp(\n+                        mSamePackageMatchingDepth, aAST);\n+            }\n+        }\n+        else {\n+            final String importFullPath \u003d getFullImportIdent(aAST);\n+            final int lineNo \u003d aAST.getLineNo();\n+            final boolean isStatic \u003d aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n+            mImportToGroupList.add(new ImportDetails(importFullPath,\n+                    lineNo, getImportGroup(isStatic, importFullPath),\n+                    isStatic));\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (mCustomImportOrderRules.contains(SAME_PACKAGE_RULE_GROUP)\n                    \u0026\u0026 mSamePackageMatchingDepth !\u003d -1)\n            {\n                mSamePackageDomainsRegExp \u003d createSamePackageRegexp(\n                        mSamePackageMatchingDepth, aAST);\n            }\n        }\n        else {\n            final String importFullPath \u003d getFullImportIdent(aAST);\n            final int lineNo \u003d aAST.getLineNo();\n            final boolean isStatic \u003d aAST.getType() \u003d\u003d TokenTypes.STATIC_IMPORT;\n            mImportToGroupList.add(new ImportDetails(importFullPath,\n                    lineNo, getImportGroup(isStatic, importFullPath),\n                    isStatic));\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java"
    }
  }
}