{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MissingOverrideCheck.java",
  "functionName": "containsJavadocTag",
  "functionId": "containsJavadocTag___javadoc-TextBlock(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
  "functionStartLine": 249,
  "functionEndLine": 266,
  "numCommitsSeen": 60,
  "timeTaken": 1520,
  "changeHistory": [
    "07b24dd81c7648f093f2a789a7fa288d8e7eeef4",
    "f981e5845436464b45fc937e601f7fc9fdbc5a7c",
    "82d8e91024a57a96fbb6410dacb29d6a3f582903",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767"
  ],
  "changeHistoryShort": {
    "07b24dd81c7648f093f2a789a7fa288d8e7eeef4": "Ybodychange",
    "f981e5845436464b45fc937e601f7fc9fdbc5a7c": "Ybodychange",
    "82d8e91024a57a96fbb6410dacb29d6a3f582903": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": "Yintroduced"
  },
  "changeHistoryDetails": {
    "07b24dd81c7648f093f2a789a7fa288d8e7eeef4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Fix various typos\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "28/08/15 10:53 PM",
      "commitName": "07b24dd81c7648f093f2a789a7fa288d8e7eeef4",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:26 AM",
      "commitNameOld": "f981e5845436464b45fc937e601f7fc9fdbc5a7c",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.73,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static boolean containsJavadocTag(final TextBlock javadoc) {\n         boolean javadocTag \u003d false;\n \n         if (javadoc !\u003d null) {\n             final String[] lines \u003d javadoc.getText();\n \n             for (final String line : lines) {\n                 final Matcher matchInheritDoc \u003d\n-                    MATCH_INHERITDOC.matcher(line);\n+                    MATCH_INHERIT_DOC.matcher(line);\n \n                 if (matchInheritDoc.find()) {\n                     javadocTag \u003d true;\n                     break;\n                 }\n             }\n         }\n         return javadocTag;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean containsJavadocTag(final TextBlock javadoc) {\n        boolean javadocTag \u003d false;\n\n        if (javadoc !\u003d null) {\n            final String[] lines \u003d javadoc.getText();\n\n            for (final String line : lines) {\n                final Matcher matchInheritDoc \u003d\n                    MATCH_INHERIT_DOC.matcher(line);\n\n                if (matchInheritDoc.find()) {\n                    javadocTag \u003d true;\n                    break;\n                }\n            }\n        }\n        return javadocTag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
      "extendedDetails": {}
    },
    "f981e5845436464b45fc937e601f7fc9fdbc5a7c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: partial fix of ReturnCount violations\n",
      "commitDate": "27/08/15 5:26 AM",
      "commitName": "f981e5845436464b45fc937e601f7fc9fdbc5a7c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     private static boolean containsJavadocTag(final TextBlock javadoc) {\n-        if (javadoc \u003d\u003d null) {\n-            return false;\n-        }\n+        boolean javadocTag \u003d false;\n \n-        final String[] lines \u003d javadoc.getText();\n+        if (javadoc !\u003d null) {\n+            final String[] lines \u003d javadoc.getText();\n \n-        for (final String line : lines) {\n-            final Matcher matchInheritDoc \u003d\n-                MATCH_INHERITDOC.matcher(line);\n+            for (final String line : lines) {\n+                final Matcher matchInheritDoc \u003d\n+                    MATCH_INHERITDOC.matcher(line);\n \n-            if (matchInheritDoc.find()) {\n-                return true;\n+                if (matchInheritDoc.find()) {\n+                    javadocTag \u003d true;\n+                    break;\n+                }\n             }\n         }\n-        return false;\n+        return javadocTag;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean containsJavadocTag(final TextBlock javadoc) {\n        boolean javadocTag \u003d false;\n\n        if (javadoc !\u003d null) {\n            final String[] lines \u003d javadoc.getText();\n\n            for (final String line : lines) {\n                final Matcher matchInheritDoc \u003d\n                    MATCH_INHERITDOC.matcher(line);\n\n                if (matchInheritDoc.find()) {\n                    javadocTag \u003d true;\n                    break;\n                }\n            }\n        }\n        return javadocTag;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
      "extendedDetails": {}
    },
    "82d8e91024a57a96fbb6410dacb29d6a3f582903": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary qualifiers. #1555\n\nFixes `UnnecessarilyQualifiedStaticUsage` inspection violations.\n\nDescription:\n\u003eReports calls to static methods or accesses of static fields on the current class which are qualified with the class name. Such qualification is unnecessary, and may be safely removed.\n",
      "commitDate": "11/08/15 1:14 PM",
      "commitName": "82d8e91024a57a96fbb6410dacb29d6a3f582903",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "11/08/15 5:22 AM",
      "commitNameOld": "f5f1d754e28ee1e3c5472fd4d5292f24a335e64e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.33,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private static boolean containsJavadocTag(final TextBlock javadoc) {\n         if (javadoc \u003d\u003d null) {\n             return false;\n         }\n \n         final String[] lines \u003d javadoc.getText();\n \n         for (final String line : lines) {\n             final Matcher matchInheritDoc \u003d\n-                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n+                MATCH_INHERITDOC.matcher(line);\n \n             if (matchInheritDoc.find()) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean containsJavadocTag(final TextBlock javadoc) {\n        if (javadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d javadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private boolean containsJavadocTag(final TextBlock javadoc) {\n+    private static boolean containsJavadocTag(final TextBlock javadoc) {\n         if (javadoc \u003d\u003d null) {\n             return false;\n         }\n \n         final String[] lines \u003d javadoc.getText();\n \n         for (final String line : lines) {\n             final Matcher matchInheritDoc \u003d\n                 MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n \n             if (matchInheritDoc.find()) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean containsJavadocTag(final TextBlock javadoc) {\n        if (javadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d javadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "1bd7f9bdf3dc678b70e79481971aebc50db69dc7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, annotation, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, annotation, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
          "commitAuthor": "alexkravin",
          "commitDateOld": "28/12/14 3:14 PM",
          "commitNameOld": "09a7ca60414ea04b64f45bb190eaa26c767086be",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 21.64,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private boolean containsJavadocTag(final TextBlock aJavadoc)\n+    private boolean containsJavadocTag(final TextBlock javadoc)\n     {\n-        if (aJavadoc \u003d\u003d null) {\n+        if (javadoc \u003d\u003d null) {\n             return false;\n         }\n \n-        final String[] lines \u003d aJavadoc.getText();\n+        final String[] lines \u003d javadoc.getText();\n \n         for (final String line : lines) {\n             final Matcher matchInheritDoc \u003d\n                 MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n \n             if (matchInheritDoc.find()) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean containsJavadocTag(final TextBlock javadoc)\n    {\n        if (javadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d javadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
          "extendedDetails": {
            "oldValue": "[aJavadoc-TextBlock(modifiers-final)]",
            "newValue": "[javadoc-TextBlock(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, annotation, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "1bd7f9bdf3dc678b70e79481971aebc50db69dc7",
          "commitAuthor": "alexkravin",
          "commitDateOld": "28/12/14 3:14 PM",
          "commitNameOld": "09a7ca60414ea04b64f45bb190eaa26c767086be",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 21.64,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    private boolean containsJavadocTag(final TextBlock aJavadoc)\n+    private boolean containsJavadocTag(final TextBlock javadoc)\n     {\n-        if (aJavadoc \u003d\u003d null) {\n+        if (javadoc \u003d\u003d null) {\n             return false;\n         }\n \n-        final String[] lines \u003d aJavadoc.getText();\n+        final String[] lines \u003d javadoc.getText();\n \n         for (final String line : lines) {\n             final Matcher matchInheritDoc \u003d\n                 MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n \n             if (matchInheritDoc.find()) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean containsJavadocTag(final TextBlock javadoc)\n    {\n        if (javadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d javadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean containsJavadocTag(final TextBlock aJavadoc)\n    {\n        if (aJavadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d aJavadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java"
      }
    },
    "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767": {
      "type": "Yintroduced",
      "commitMessage": "record work on patch #2534038 from Travis for new annotation checks. Very good patch as usual from Travis. Shame on me for taking so long to apply it.\n",
      "commitDate": "23/03/09 3:49 AM",
      "commitName": "8a7713b4f7890e2f6493eacc5806b5eb8cfbe767",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,18 @@\n+    private boolean containsJavadocTag(final TextBlock aJavadoc)\n+    {\n+        if (aJavadoc \u003d\u003d null) {\n+            return false;\n+        }\n+\n+        final String[] lines \u003d aJavadoc.getText();\n+\n+        for (final String line : lines) {\n+            final Matcher matchInheritDoc \u003d\n+                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n+\n+            if (matchInheritDoc.find()) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean containsJavadocTag(final TextBlock aJavadoc)\n    {\n        if (aJavadoc \u003d\u003d null) {\n            return false;\n        }\n\n        final String[] lines \u003d aJavadoc.getText();\n\n        for (final String line : lines) {\n            final Matcher matchInheritDoc \u003d\n                MissingOverrideCheck.MATCH_INHERITDOC.matcher(line);\n\n            if (matchInheritDoc.find()) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/annotation/MissingOverrideCheck.java"
    }
  }
}