{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ThrowsCountCheck.java",
  "functionName": "visitLiteralThrows",
  "functionId": "visitLiteralThrows___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
  "functionStartLine": 249,
  "functionEndLine": 258,
  "numCommitsSeen": 58,
  "timeTaken": 1833,
  "changeHistory": [
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "5f047efa20b47b4ff65e42a8f6989832d01d4b34",
    "e6f4dad587d318233ff9343c5b66d831b7035fcf",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb"
  ],
  "changeHistoryShort": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "5f047efa20b47b4ff65e42a8f6989832d01d4b34": "Ybodychange",
    "e6f4dad587d318233ff9343c5b66d831b7035fcf": "Ybodychange",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": "Ybodychange",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": "Ybodychange",
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private void visitLiteralThrows(DetailAST ast) {\n         if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n                 \u0026\u0026 !isOverriding(ast)) {\n             // Account for all the commas!\n             final int count \u003d (ast.getChildCount() + 1) / 2;\n             if (count \u003e max) {\n-                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY,\n-                    count, max);\n+                log(ast, MSG_KEY, count, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST ast) {\n        if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n                \u0026\u0026 !isOverriding(ast)) {\n            // Account for all the commas!\n            final int count \u003d (ast.getChildCount() + 1) / 2;\n            if (count \u003e max) {\n                log(ast, MSG_KEY, count, max);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": "22/08/15 4:32 AM",
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/08/15 8:29 PM",
      "commitNameOld": "083c9eb1dc214cfe6de4dc4f9f83ff163ff6b79e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void visitLiteralThrows(DetailAST ast) {\n         if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n                 \u0026\u0026 !isOverriding(ast)) {\n             // Account for all the commas!\n             final int count \u003d (ast.getChildCount() + 1) / 2;\n-            if (count \u003e getMax()) {\n+            if (count \u003e max) {\n                 log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n-                    count, getMax());\n+                    count, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST ast) {\n        if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n                \u0026\u0026 !isOverriding(ast)) {\n            // Account for all the commas!\n            final int count \u003d (ast.getChildCount() + 1) / 2;\n            if (count \u003e max) {\n                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                    count, max);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "5f047efa20b47b4ff65e42a8f6989832d01d4b34": {
      "type": "Ybodychange",
      "commitMessage": "ThrowCountCheck should have option to skip private methods, #1136",
      "commitDate": "27/05/15 7:17 AM",
      "commitName": "5f047efa20b47b4ff65e42a8f6989832d01d4b34",
      "commitAuthor": "vlad",
      "commitDateOld": "26/05/15 3:01 PM",
      "commitNameOld": "e6f4dad587d318233ff9343c5b66d831b7035fcf",
      "commitAuthorOld": "vlad",
      "daysBetweenCommits": 0.68,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,11 @@\n     private void visitLiteralThrows(DetailAST ast) {\n-        if (!isOverriding(ast)) {\n+        if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n+                \u0026\u0026 !isOverriding(ast)) {\n             // Account for all the commas!\n             final int count \u003d (ast.getChildCount() + 1) / 2;\n             if (count \u003e getMax()) {\n                 log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                     count, getMax());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST ast) {\n        if ((!ignorePrivateMethods || !isInPrivateMethod(ast))\n                \u0026\u0026 !isOverriding(ast)) {\n            // Account for all the commas!\n            final int count \u003d (ast.getChildCount() + 1) / 2;\n            if (count \u003e getMax()) {\n                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                    count, getMax());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "e6f4dad587d318233ff9343c5b66d831b7035fcf": {
      "type": "Ybodychange",
      "commitMessage": "Do not verify overriding methods in ThrowsCount check, #1085",
      "commitDate": "26/05/15 3:01 PM",
      "commitName": "e6f4dad587d318233ff9343c5b66d831b7035fcf",
      "commitAuthor": "vlad",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 9.43,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n     private void visitLiteralThrows(DetailAST ast) {\n-        // Account for all the commas!\n-        final int count \u003d (ast.getChildCount() + 1) / 2;\n-        if (count \u003e getMax()) {\n-            log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n-                count, getMax());\n+        if (!isOverriding(ast)) {\n+            // Account for all the commas!\n+            final int count \u003d (ast.getChildCount() + 1) / 2;\n+            if (count \u003e getMax()) {\n+                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n+                    count, getMax());\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST ast) {\n        if (!isOverriding(ast)) {\n            // Account for all the commas!\n            final int count \u003d (ast.getChildCount() + 1) / 2;\n            if (count \u003e getMax()) {\n                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                    count, getMax());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, design package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void visitLiteralThrows(DetailAST ast)\n     {\n         // Account for all the commas!\n         final int count \u003d (ast.getChildCount() + 1) / 2;\n         if (count \u003e getMax()) {\n-            log(ast.getLineNo(),  ast.getColumnNo(), \"throws.count\",\n+            log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                 count, getMax());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST ast)\n    {\n        // Account for all the commas!\n        final int count \u003d (ast.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                count, getMax());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private void visitLiteralThrows(DetailAST aAST)\n+    private void visitLiteralThrows(DetailAST ast)\n     {\n         // Account for all the commas!\n-        final int count \u003d (aAST.getChildCount() + 1) / 2;\n+        final int count \u003d (ast.getChildCount() + 1) / 2;\n         if (count \u003e getMax()) {\n-            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n+            log(ast.getLineNo(),  ast.getColumnNo(), \"throws.count\",\n                 count, getMax());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitLiteralThrows(DetailAST ast)\n    {\n        // Account for all the commas!\n        final int count \u003d (ast.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(ast.getLineNo(),  ast.getColumnNo(), \"throws.count\",\n                count, getMax());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private void visitLiteralThrows(DetailAST aAST)\n+    private void visitLiteralThrows(DetailAST ast)\n     {\n         // Account for all the commas!\n-        final int count \u003d (aAST.getChildCount() + 1) / 2;\n+        final int count \u003d (ast.getChildCount() + 1) / 2;\n         if (count \u003e getMax()) {\n-            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n+            log(ast.getLineNo(),  ast.getColumnNo(), \"throws.count\",\n                 count, getMax());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitLiteralThrows(DetailAST ast)\n    {\n        // Account for all the commas!\n        final int count \u003d (ast.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(ast.getLineNo(),  ast.getColumnNo(), \"throws.count\",\n                count, getMax());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void visitLiteralThrows(DetailAST aAST)\n    {\n        // Account for all the commas!\n        final int count \u003d (aAST.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n                count, getMax());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java"
      }
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": "20/12/07 3:36 AM",
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "19/12/07 10:21 PM",
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void visitLiteralThrows(DetailAST aAST)\n     {\n         // Account for all the commas!\n         final int count \u003d (aAST.getChildCount() + 1) / 2;\n         if (count \u003e getMax()) {\n             log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n-                new Integer(count), new Integer(getMax()));\n+                count, getMax());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST aAST)\n    {\n        // Account for all the commas!\n        final int count \u003d (aAST.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n                count, getMax());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:47 AM",
      "commitName": "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.69,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void visitLiteralThrows(DetailAST aAST)\n     {\n         // Account for all the commas!\n-        int count \u003d (aAST.getChildCount() + 1) / 2;\n+        final int count \u003d (aAST.getChildCount() + 1) / 2;\n         if (count \u003e getMax()) {\n             log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n                 new Integer(count), new Integer(getMax()));\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST aAST)\n    {\n        // Account for all the commas!\n        final int count \u003d (aAST.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n                new Integer(count), new Integer(getMax()));\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb": {
      "type": "Yintroduced",
      "commitMessage": "Added ThrowsCount check from Simon Harris (request 750742).\nAdded ReturnCount check from Simon Harris (request 750745).\nMinor fixes in release notes.\n",
      "commitDate": "28/08/03 12:18 PM",
      "commitName": "9bc9f418278ed8782e473b2dbf4d7669e886bfcb",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,9 @@\n+    private void visitLiteralThrows(DetailAST aAST)\n+    {\n+        // Account for all the commas!\n+        int count \u003d (aAST.getChildCount() + 1) / 2;\n+        if (count \u003e getMax()) {\n+            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n+                new Integer(count), new Integer(getMax()));\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitLiteralThrows(DetailAST aAST)\n    {\n        // Account for all the commas!\n        int count \u003d (aAST.getChildCount() + 1) / 2;\n        if (count \u003e getMax()) {\n            log(aAST.getLineNo(),  aAST.getColumnNo(), \"throws.count\",\n                new Integer(count), new Integer(getMax()));\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java"
    }
  }
}