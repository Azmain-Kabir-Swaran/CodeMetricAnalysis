{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableExceptionCheck.java",
  "functionName": "visitVariableDef",
  "functionId": "visitVariableDef___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
  "functionStartLine": 164,
  "functionEndLine": 173,
  "numCommitsSeen": 64,
  "timeTaken": 1764,
  "changeHistory": [
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "4297ca50a95bd01c236ee1f4aeb13488298b104f",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
    "5245c14883aa9ddf9930804c09c13df1f34e70bc"
  ],
  "changeHistoryShort": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": "Ybodychange",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "4297ca50a95bd01c236ee1f4aeb13488298b104f": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": "Ybodychange",
    "5245c14883aa9ddf9930804c09c13df1f34e70bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private void visitVariableDef(DetailAST ast) {\n         if (checking \u0026\u0026 ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n             final DetailAST modifiersAST \u003d\n                 ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n-                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY,\n-                        ast.findFirstToken(TokenTypes.IDENT).getText());\n+                log(ast, MSG_KEY, ast.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST ast) {\n        if (checking \u0026\u0026 ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n            final DetailAST modifiersAST \u003d\n                ast.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(ast, MSG_KEY, ast.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void visitVariableDef(DetailAST ast)\n     {\n-        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n+        if (checking \u0026\u0026 ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n             final DetailAST modifiersAST \u003d\n                 ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                 log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                         ast.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST ast)\n    {\n        if (checking \u0026\u0026 ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n            final DetailAST modifiersAST \u003d\n                ast.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                        ast.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "e912c46b5bb5c085323930bd1e500b180c1bea8d": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, design package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void visitVariableDef(DetailAST ast)\n     {\n         if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n             final DetailAST modifiersAST \u003d\n                 ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n-                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",\n+                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                         ast.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST ast)\n    {\n        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                ast.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(ast.getLineNo(),  ast.getColumnNo(), MSG_KEY,\n                        ast.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 10:12 AM",
          "commitNameOld": "4297ca50a95bd01c236ee1f4aeb13488298b104f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 29.84,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void visitVariableDef(DetailAST aAST)\n+    private void visitVariableDef(DetailAST ast)\n     {\n-        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n+        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n             final DetailAST modifiersAST \u003d\n-                aAST.findFirstToken(TokenTypes.MODIFIERS);\n+                ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n-                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n-                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n+                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",\n+                        ast.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitVariableDef(DetailAST ast)\n    {\n        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                ast.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",\n                        ast.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 10:12 AM",
          "commitNameOld": "4297ca50a95bd01c236ee1f4aeb13488298b104f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 29.84,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void visitVariableDef(DetailAST aAST)\n+    private void visitVariableDef(DetailAST ast)\n     {\n-        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n+        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n             final DetailAST modifiersAST \u003d\n-                aAST.findFirstToken(TokenTypes.MODIFIERS);\n+                ast.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n-                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n-                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n+                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",\n+                        ast.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitVariableDef(DetailAST ast)\n    {\n        if (checking \u0026\u0026 (ast.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                ast.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(ast.getLineNo(),  ast.getColumnNo(), \"mutable.exception\",\n                        ast.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "4297ca50a95bd01c236ee1f4aeb13488298b104f": {
      "type": "Ybodychange",
      "commitMessage": "MutableException check requires class to explicitly extend some other class (for issue #60)\n",
      "commitDate": "20/12/14 10:12 AM",
      "commitName": "4297ca50a95bd01c236ee1f4aeb13488298b104f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 291.04,
      "commitsBetweenForRepo": 404,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void visitVariableDef(DetailAST aAST)\n     {\n         if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n             final DetailAST modifiersAST \u003d\n                 aAST.findFirstToken(TokenTypes.MODIFIERS);\n \n-            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n+            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                 log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                         aAST.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST aAST)\n    {\n        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                aAST.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (modifiersAST.findFirstToken(TokenTypes.FINAL) \u003d\u003d null) {\n                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void visitVariableDef(DetailAST aAST)\n    {\n        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                aAST.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void visitVariableDef(DetailAST aAST)\n     {\n-        if (mChecking \u0026\u0026 aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n+        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n             final DetailAST modifiersAST \u003d\n                 aAST.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                 log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                         aAST.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST aAST)\n    {\n        if (mChecking \u0026\u0026 (aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK)) {\n            final DetailAST modifiersAST \u003d\n                aAST.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:47 AM",
      "commitName": "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.69,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     private void visitVariableDef(DetailAST aAST)\n     {\n         if (mChecking \u0026\u0026 aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n-            DetailAST modifiersAST \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n+            final DetailAST modifiersAST \u003d\n+                aAST.findFirstToken(TokenTypes.MODIFIERS);\n \n             if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                 log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                         aAST.findFirstToken(TokenTypes.IDENT).getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST aAST)\n    {\n        if (mChecking \u0026\u0026 aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n            final DetailAST modifiersAST \u003d\n                aAST.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java",
      "extendedDetails": {}
    },
    "5245c14883aa9ddf9930804c09c13df1f34e70bc": {
      "type": "Yintroduced",
      "commitMessage": "Added MutableException check (request 750750).\nThis is a very simple algorithm, but, I believe, it catches most of\nreal-life problems.\n",
      "commitDate": "26/08/03 1:06 PM",
      "commitName": "5245c14883aa9ddf9930804c09c13df1f34e70bc",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,11 @@\n+    private void visitVariableDef(DetailAST aAST)\n+    {\n+        if (mChecking \u0026\u0026 aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n+            DetailAST modifiersAST \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n+\n+            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n+                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n+                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitVariableDef(DetailAST aAST)\n    {\n        if (mChecking \u0026\u0026 aAST.getParent().getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n            DetailAST modifiersAST \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n\n            if (!(modifiersAST.findFirstToken(TokenTypes.FINAL) !\u003d null)) {\n                log(aAST.getLineNo(),  aAST.getColumnNo(), \"mutable.exception\",\n                        aAST.findFirstToken(TokenTypes.IDENT).getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/MutableExceptionCheck.java"
    }
  }
}