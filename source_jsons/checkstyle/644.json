{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SuppressionsLoader.java",
  "functionName": "loadSuppressions",
  "functionId": "loadSuppressions___filename-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
  "functionStartLine": 219,
  "functionEndLine": 225,
  "numCommitsSeen": 79,
  "timeTaken": 2847,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c",
    "57b908199dfa5c2c9bf9388d92925ccfb312812f",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f",
    "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a",
    "e794bd04c76a7beb55ebcdf1241d65187903c1c4",
    "fca6580f48d852d7cc416612e206df99e35d3fc2",
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "795234dba5ed1ba32827051748d3c92657ad287d",
    "a72e93613b8151d683fa83e5636212ed2f1413af",
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "70f4568a3d4109db189a6815ff11964a91bfb042",
    "433209f256f2f87310b4546cb08218dbdb110556",
    "1e7d8eef0641edcf97316618c8fab40bd248133d",
    "21f0b07bd031f022d14106150af66ceddb4c06b8"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c": "Ybodychange",
    "57b908199dfa5c2c9bf9388d92925ccfb312812f": "Ybodychange",
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": "Ybodychange",
    "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a": "Ybodychange",
    "e794bd04c76a7beb55ebcdf1241d65187903c1c4": "Ybodychange",
    "fca6580f48d852d7cc416612e206df99e35d3fc2": "Ybodychange",
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "795234dba5ed1ba32827051748d3c92657ad287d": "Ybodychange",
    "a72e93613b8151d683fa83e5636212ed2f1413af": "Ybodychange",
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "70f4568a3d4109db189a6815ff11964a91bfb042": "Ybodychange",
    "433209f256f2f87310b4546cb08218dbdb110556": "Yfilerename",
    "1e7d8eef0641edcf97316618c8fab40bd248133d": "Yreturntypechange",
    "21f0b07bd031f022d14106150af66ceddb4c06b8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public static FilterSet loadSuppressions(String filename)\n             throws CheckstyleException {\n         // figure out if this is a File or a URL\n-        final URI uri \u003d CommonUtils.getUriByFilename(filename);\n+        final URI uri \u003d CommonUtil.getUriByFilename(filename);\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n            throws CheckstyleException {\n        // figure out if this is a File or a URL\n        final URI uri \u003d CommonUtil.getUriByFilename(filename);\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #46: blocks of code should not be duplicated\n",
      "commitDate": "10/09/15 5:25 PM",
      "commitName": "526c9d0cbabd8ed8f3a26c45a7a6bc0a5c158c0c",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "31/08/15 11:24 AM",
      "commitNameOld": "2b861bd6e16584e22bb115ff7abd65c35072eb92",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 10.25,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,7 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n         // figure out if this is a File or a URL\n-        URI uri;\n-        try {\n-            final URL url \u003d new URL(filename);\n-            uri \u003d url.toURI();\n-        }\n-        catch (final MalformedURLException | URISyntaxException ignored) {\n-            // URL violating RFC 2396\n-            uri \u003d null;\n-        }\n-        if (uri \u003d\u003d null) {\n-            final File file \u003d new File(filename);\n-            if (file.exists()) {\n-                uri \u003d file.toURI();\n-            }\n-            else {\n-                // check to see if the file is in the classpath\n-                try {\n-                    final URL configUrl \u003d SuppressionsLoader.class\n-                            .getResource(filename);\n-                    if (configUrl \u003d\u003d null) {\n-                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);\n-                    }\n-                    uri \u003d configUrl.toURI();\n-                }\n-                catch (final URISyntaxException e) {\n-                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);\n-                }\n-            }\n-        }\n+        final URI uri \u003d CommonUtils.getUriByFilename(filename);\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        final URI uri \u003d CommonUtils.getUriByFilename(filename);\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "57b908199dfa5c2c9bf9388d92925ccfb312812f": {
      "type": "Ybodychange",
      "commitMessage": "String literals should not be duplicated. Issue #46\n",
      "commitDate": "19/08/15 8:54 PM",
      "commitName": "57b908199dfa5c2c9bf9388d92925ccfb312812f",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final MalformedURLException | URISyntaxException ignored) {\n             // URL violating RFC 2396\n             uri \u003d null;\n         }\n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n                     final URL configUrl \u003d SuppressionsLoader.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n-                        throw new CheckstyleException(\"unable to find \" + filename);\n+                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException e) {\n-                    throw new CheckstyleException(\"unable to find \" + filename, e);\n+                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);\n                 }\n             }\n         }\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final MalformedURLException | URISyntaxException ignored) {\n            // URL violating RFC 2396\n            uri \u003d null;\n        }\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d SuppressionsLoader.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(UNABLE_TO_FIND_ERROR_MESSAGE + filename, e);\n                }\n            }\n        }\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "4fd298b00126d60147dce7631c6e0d3e0921f82f": {
      "type": "Ybodychange",
      "commitMessage": "Rename ignored catch parameters. #1555\n\nFixes `UnusedCatchParameter` inspection violations.\n\nDescription:\nReports any catch parameters that are unused in their corresponding blocks. This inspection will not report any catch parameters named \"ignore\" or \"ignored\". Conversely this inspection will warn on any catch parameters named \"ignore\" or \"ignored\" that are actually used.\n",
      "commitDate": "07/08/15 10:17 PM",
      "commitName": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.14,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,35 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n-        catch (final MalformedURLException | URISyntaxException ex) {\n+        catch (final MalformedURLException | URISyntaxException ignored) {\n             // URL violating RFC 2396\n             uri \u003d null;\n         }\n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n                     final URL configUrl \u003d SuppressionsLoader.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(\"unable to find \" + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException e) {\n                     throw new CheckstyleException(\"unable to find \" + filename, e);\n                 }\n             }\n         }\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final MalformedURLException | URISyntaxException ignored) {\n            // URL violating RFC 2396\n            uri \u003d null;\n        }\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d SuppressionsLoader.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(\"unable to find \" + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(\"unable to find \" + filename, e);\n                }\n            }\n        }\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a": {
      "type": "Ybodychange",
      "commitMessage": "Collapse \u0027catch\u0027 blocks. #1538\n",
      "commitDate": "02/08/15 6:48 PM",
      "commitName": "111bd4b1df19e62bb76bbf83cfefa9ac5066c98a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 8:04 AM",
      "commitNameOld": "e794bd04c76a7beb55ebcdf1241d65187903c1c4",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,35 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n-        catch (final MalformedURLException ex) {\n-            uri \u003d null;\n-        }\n-        catch (final URISyntaxException ex) {\n+        catch (final MalformedURLException | URISyntaxException ex) {\n             // URL violating RFC 2396\n             uri \u003d null;\n         }\n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n                     final URL configUrl \u003d SuppressionsLoader.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(\"unable to find \" + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException e) {\n                     throw new CheckstyleException(\"unable to find \" + filename, e);\n                 }\n             }\n         }\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final MalformedURLException | URISyntaxException ex) {\n            // URL violating RFC 2396\n            uri \u003d null;\n        }\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d SuppressionsLoader.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(\"unable to find \" + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(\"unable to find \" + filename, e);\n                }\n            }\n        }\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "e794bd04c76a7beb55ebcdf1241d65187903c1c4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1296: \u0027SuppressionsLoader\u0027 refactored, UT coverage improved\n",
      "commitDate": "02/08/15 8:04 AM",
      "commitName": "e794bd04c76a7beb55ebcdf1241d65187903c1c4",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "03/06/15 6:25 PM",
      "commitNameOld": "fca6580f48d852d7cc416612e206df99e35d3fc2",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 59.57,
      "commitsBetweenForRepo": 483,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n         // figure out if this is a File or a URL\n         URI uri;\n         try {\n             final URL url \u003d new URL(filename);\n             uri \u003d url.toURI();\n         }\n         catch (final MalformedURLException ex) {\n             uri \u003d null;\n         }\n         catch (final URISyntaxException ex) {\n             // URL violating RFC 2396\n             uri \u003d null;\n         }\n         if (uri \u003d\u003d null) {\n             final File file \u003d new File(filename);\n             if (file.exists()) {\n                 uri \u003d file.toURI();\n             }\n             else {\n                 // check to see if the file is in the classpath\n                 try {\n                     final URL configUrl \u003d SuppressionsLoader.class\n                             .getResource(filename);\n                     if (configUrl \u003d\u003d null) {\n                         throw new CheckstyleException(\"unable to find \" + filename);\n                     }\n                     uri \u003d configUrl.toURI();\n                 }\n                 catch (final URISyntaxException e) {\n-                    throw new CheckstyleException(\"unable to find \" + filename);\n+                    throw new CheckstyleException(\"unable to find \" + filename, e);\n                 }\n             }\n         }\n         final InputSource source \u003d new InputSource(uri.toString());\n         return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final MalformedURLException ex) {\n            uri \u003d null;\n        }\n        catch (final URISyntaxException ex) {\n            // URL violating RFC 2396\n            uri \u003d null;\n        }\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d SuppressionsLoader.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(\"unable to find \" + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(\"unable to find \" + filename, e);\n                }\n            }\n        }\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "fca6580f48d852d7cc416612e206df99e35d3fc2": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations of ExceptionAsFlowControl rule. #962\n",
      "commitDate": "03/06/15 6:25 PM",
      "commitName": "fca6580f48d852d7cc416612e206df99e35d3fc2",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 17.57,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,38 @@\n     public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException {\n+        // figure out if this is a File or a URL\n+        URI uri;\n         try {\n-            // figure out if this is a File or a URL\n-            URI uri;\n-            try {\n-                final URL url \u003d new URL(filename);\n-                uri \u003d url.toURI();\n+            final URL url \u003d new URL(filename);\n+            uri \u003d url.toURI();\n+        }\n+        catch (final MalformedURLException ex) {\n+            uri \u003d null;\n+        }\n+        catch (final URISyntaxException ex) {\n+            // URL violating RFC 2396\n+            uri \u003d null;\n+        }\n+        if (uri \u003d\u003d null) {\n+            final File file \u003d new File(filename);\n+            if (file.exists()) {\n+                uri \u003d file.toURI();\n             }\n-            catch (final MalformedURLException ex) {\n-                uri \u003d null;\n-            }\n-            catch (final URISyntaxException ex) {\n-                // URL violating RFC 2396\n-                uri \u003d null;\n-            }\n-            if (uri \u003d\u003d null) {\n-                final File file \u003d new File(filename);\n-                if (file.exists()) {\n-                    uri \u003d file.toURI();\n+            else {\n+                // check to see if the file is in the classpath\n+                try {\n+                    final URL configUrl \u003d SuppressionsLoader.class\n+                            .getResource(filename);\n+                    if (configUrl \u003d\u003d null) {\n+                        throw new CheckstyleException(\"unable to find \" + filename);\n+                    }\n+                    uri \u003d configUrl.toURI();\n                 }\n-                else {\n-                    // check to see if the file is in the classpath\n-                    try {\n-                        final URL configUrl \u003d SuppressionsLoader.class\n-                                .getResource(filename);\n-                        if (configUrl \u003d\u003d null) {\n-                            throw new FileNotFoundException(filename);\n-                        }\n-                        uri \u003d configUrl.toURI();\n-                    }\n-                    catch (final URISyntaxException e) {\n-                        throw new FileNotFoundException(filename);\n-                    }\n+                catch (final URISyntaxException e) {\n+                    throw new CheckstyleException(\"unable to find \" + filename);\n                 }\n             }\n-            final InputSource source \u003d new InputSource(uri.toString());\n-            return loadSuppressions(source, filename);\n         }\n-        catch (final FileNotFoundException e) {\n-            throw new CheckstyleException(\"unable to find \" + filename, e);\n-        }\n+        final InputSource source \u003d new InputSource(uri.toString());\n+        return loadSuppressions(source, filename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException {\n        // figure out if this is a File or a URL\n        URI uri;\n        try {\n            final URL url \u003d new URL(filename);\n            uri \u003d url.toURI();\n        }\n        catch (final MalformedURLException ex) {\n            uri \u003d null;\n        }\n        catch (final URISyntaxException ex) {\n            // URL violating RFC 2396\n            uri \u003d null;\n        }\n        if (uri \u003d\u003d null) {\n            final File file \u003d new File(filename);\n            if (file.exists()) {\n                uri \u003d file.toURI();\n            }\n            else {\n                // check to see if the file is in the classpath\n                try {\n                    final URL configUrl \u003d SuppressionsLoader.class\n                            .getResource(filename);\n                    if (configUrl \u003d\u003d null) {\n                        throw new CheckstyleException(\"unable to find \" + filename);\n                    }\n                    uri \u003d configUrl.toURI();\n                }\n                catch (final URISyntaxException e) {\n                    throw new CheckstyleException(\"unable to find \" + filename);\n                }\n            }\n        }\n        final InputSource source \u003d new InputSource(uri.toString());\n        return loadSuppressions(source, filename);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, filters, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, filters, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 458,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,44 @@\n-    public static FilterSet loadSuppressions(String aFilename)\n+    public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException\n     {\n         try {\n             // figure out if this is a File or a URL\n             URI uri;\n             try {\n-                final URL url \u003d new URL(aFilename);\n+                final URL url \u003d new URL(filename);\n                 uri \u003d url.toURI();\n             }\n             catch (final MalformedURLException ex) {\n                 uri \u003d null;\n             }\n             catch (final URISyntaxException ex) {\n                 // URL violating RFC 2396\n                 uri \u003d null;\n             }\n             if (uri \u003d\u003d null) {\n-                final File file \u003d new File(aFilename);\n+                final File file \u003d new File(filename);\n                 if (file.exists()) {\n                     uri \u003d file.toURI();\n                 }\n                 else {\n                     // check to see if the file is in the classpath\n                     try {\n                         final URL configUrl \u003d SuppressionsLoader.class\n-                                .getResource(aFilename);\n+                                .getResource(filename);\n                         if (configUrl \u003d\u003d null) {\n-                            throw new FileNotFoundException(aFilename);\n+                            throw new FileNotFoundException(filename);\n                         }\n                         uri \u003d configUrl.toURI();\n                     }\n                     catch (final URISyntaxException e) {\n-                        throw new FileNotFoundException(aFilename);\n+                        throw new FileNotFoundException(filename);\n                     }\n                 }\n             }\n             final InputSource source \u003d new InputSource(uri.toString());\n-            return loadSuppressions(source, aFilename);\n+            return loadSuppressions(source, filename);\n         }\n         catch (final FileNotFoundException e) {\n-            throw new CheckstyleException(\"unable to find \" + aFilename, e);\n+            throw new CheckstyleException(\"unable to find \" + filename, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException\n    {\n        try {\n            // figure out if this is a File or a URL\n            URI uri;\n            try {\n                final URL url \u003d new URL(filename);\n                uri \u003d url.toURI();\n            }\n            catch (final MalformedURLException ex) {\n                uri \u003d null;\n            }\n            catch (final URISyntaxException ex) {\n                // URL violating RFC 2396\n                uri \u003d null;\n            }\n            if (uri \u003d\u003d null) {\n                final File file \u003d new File(filename);\n                if (file.exists()) {\n                    uri \u003d file.toURI();\n                }\n                else {\n                    // check to see if the file is in the classpath\n                    try {\n                        final URL configUrl \u003d SuppressionsLoader.class\n                                .getResource(filename);\n                        if (configUrl \u003d\u003d null) {\n                            throw new FileNotFoundException(filename);\n                        }\n                        uri \u003d configUrl.toURI();\n                    }\n                    catch (final URISyntaxException e) {\n                        throw new FileNotFoundException(filename);\n                    }\n                }\n            }\n            final InputSource source \u003d new InputSource(uri.toString());\n            return loadSuppressions(source, filename);\n        }\n        catch (final FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + filename, e);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
          "extendedDetails": {
            "oldValue": "[aFilename-String]",
            "newValue": "[filename-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, filters, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 458,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,44 @@\n-    public static FilterSet loadSuppressions(String aFilename)\n+    public static FilterSet loadSuppressions(String filename)\n         throws CheckstyleException\n     {\n         try {\n             // figure out if this is a File or a URL\n             URI uri;\n             try {\n-                final URL url \u003d new URL(aFilename);\n+                final URL url \u003d new URL(filename);\n                 uri \u003d url.toURI();\n             }\n             catch (final MalformedURLException ex) {\n                 uri \u003d null;\n             }\n             catch (final URISyntaxException ex) {\n                 // URL violating RFC 2396\n                 uri \u003d null;\n             }\n             if (uri \u003d\u003d null) {\n-                final File file \u003d new File(aFilename);\n+                final File file \u003d new File(filename);\n                 if (file.exists()) {\n                     uri \u003d file.toURI();\n                 }\n                 else {\n                     // check to see if the file is in the classpath\n                     try {\n                         final URL configUrl \u003d SuppressionsLoader.class\n-                                .getResource(aFilename);\n+                                .getResource(filename);\n                         if (configUrl \u003d\u003d null) {\n-                            throw new FileNotFoundException(aFilename);\n+                            throw new FileNotFoundException(filename);\n                         }\n                         uri \u003d configUrl.toURI();\n                     }\n                     catch (final URISyntaxException e) {\n-                        throw new FileNotFoundException(aFilename);\n+                        throw new FileNotFoundException(filename);\n                     }\n                 }\n             }\n             final InputSource source \u003d new InputSource(uri.toString());\n-            return loadSuppressions(source, aFilename);\n+            return loadSuppressions(source, filename);\n         }\n         catch (final FileNotFoundException e) {\n-            throw new CheckstyleException(\"unable to find \" + aFilename, e);\n+            throw new CheckstyleException(\"unable to find \" + filename, e);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static FilterSet loadSuppressions(String filename)\n        throws CheckstyleException\n    {\n        try {\n            // figure out if this is a File or a URL\n            URI uri;\n            try {\n                final URL url \u003d new URL(filename);\n                uri \u003d url.toURI();\n            }\n            catch (final MalformedURLException ex) {\n                uri \u003d null;\n            }\n            catch (final URISyntaxException ex) {\n                // URL violating RFC 2396\n                uri \u003d null;\n            }\n            if (uri \u003d\u003d null) {\n                final File file \u003d new File(filename);\n                if (file.exists()) {\n                    uri \u003d file.toURI();\n                }\n                else {\n                    // check to see if the file is in the classpath\n                    try {\n                        final URL configUrl \u003d SuppressionsLoader.class\n                                .getResource(filename);\n                        if (configUrl \u003d\u003d null) {\n                            throw new FileNotFoundException(filename);\n                        }\n                        uri \u003d configUrl.toURI();\n                    }\n                    catch (final URISyntaxException e) {\n                        throw new FileNotFoundException(filename);\n                    }\n                }\n            }\n            final InputSource source \u003d new InputSource(uri.toString());\n            return loadSuppressions(source, filename);\n        }\n        catch (final FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + filename, e);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        try {\n            // figure out if this is a File or a URL\n            URI uri;\n            try {\n                final URL url \u003d new URL(aFilename);\n                uri \u003d url.toURI();\n            }\n            catch (final MalformedURLException ex) {\n                uri \u003d null;\n            }\n            catch (final URISyntaxException ex) {\n                // URL violating RFC 2396\n                uri \u003d null;\n            }\n            if (uri \u003d\u003d null) {\n                final File file \u003d new File(aFilename);\n                if (file.exists()) {\n                    uri \u003d file.toURI();\n                }\n                else {\n                    // check to see if the file is in the classpath\n                    try {\n                        final URL configUrl \u003d SuppressionsLoader.class\n                                .getResource(aFilename);\n                        if (configUrl \u003d\u003d null) {\n                            throw new FileNotFoundException(aFilename);\n                        }\n                        uri \u003d configUrl.toURI();\n                    }\n                    catch (final URISyntaxException e) {\n                        throw new FileNotFoundException(aFilename);\n                    }\n                }\n            }\n            final InputSource source \u003d new InputSource(uri.toString());\n            return loadSuppressions(source, aFilename);\n        }\n        catch (final FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aFilename, e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java"
      }
    },
    "795234dba5ed1ba32827051748d3c92657ad287d": {
      "type": "Ybodychange",
      "commitMessage": "#240 Allow additional URL schemes for SuppressionFilter configuration loading.\n",
      "commitDate": "18/07/13 3:33 AM",
      "commitName": "795234dba5ed1ba32827051748d3c92657ad287d",
      "commitAuthor": "tnarake",
      "commitDateOld": "18/09/12 3:57 AM",
      "commitNameOld": "68f1a6fa63b635da214ce6cfffd9f8c283248f60",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 302.98,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,44 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n-        InputStream fis;\n         try {\n-            fis \u003d new FileInputStream(aFilename);\n+            // figure out if this is a File or a URL\n+            URI uri;\n+            try {\n+                final URL url \u003d new URL(aFilename);\n+                uri \u003d url.toURI();\n+            }\n+            catch (final MalformedURLException ex) {\n+                uri \u003d null;\n+            }\n+            catch (final URISyntaxException ex) {\n+                // URL violating RFC 2396\n+                uri \u003d null;\n+            }\n+            if (uri \u003d\u003d null) {\n+                final File file \u003d new File(aFilename);\n+                if (file.exists()) {\n+                    uri \u003d file.toURI();\n+                }\n+                else {\n+                    // check to see if the file is in the classpath\n+                    try {\n+                        final URL configUrl \u003d SuppressionsLoader.class\n+                                .getResource(aFilename);\n+                        if (configUrl \u003d\u003d null) {\n+                            throw new FileNotFoundException(aFilename);\n+                        }\n+                        uri \u003d configUrl.toURI();\n+                    }\n+                    catch (final URISyntaxException e) {\n+                        throw new FileNotFoundException(aFilename);\n+                    }\n+                }\n+            }\n+            final InputSource source \u003d new InputSource(uri.toString());\n+            return loadSuppressions(source, aFilename);\n         }\n         catch (final FileNotFoundException e) {\n-            if (aFilename.matches(\"^https?://.+\")) {\n-                // this is a URL, load it as such\n-                try {\n-                    fis \u003d new URL(aFilename).openStream();\n-                }\n-                catch (MalformedURLException e1) {\n-                    throw new CheckstyleException(\n-                        \"Invalid URL: \" + aFilename, e1);\n-                }\n-                catch (IOException e1) {\n-                    throw new CheckstyleException(\n-                        \"unable to read \" + aFilename, e1);\n-                }\n-            }\n-            else {\n-                // check for the file in the classpath\n-                fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n-            }\n-            if (fis \u003d\u003d null) {\n-                throw new CheckstyleException(\"unable to find \" + aFilename, e);\n-            }\n+            throw new CheckstyleException(\"unable to find \" + aFilename, e);\n         }\n-        final InputSource source \u003d new InputSource(fis);\n-        return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        try {\n            // figure out if this is a File or a URL\n            URI uri;\n            try {\n                final URL url \u003d new URL(aFilename);\n                uri \u003d url.toURI();\n            }\n            catch (final MalformedURLException ex) {\n                uri \u003d null;\n            }\n            catch (final URISyntaxException ex) {\n                // URL violating RFC 2396\n                uri \u003d null;\n            }\n            if (uri \u003d\u003d null) {\n                final File file \u003d new File(aFilename);\n                if (file.exists()) {\n                    uri \u003d file.toURI();\n                }\n                else {\n                    // check to see if the file is in the classpath\n                    try {\n                        final URL configUrl \u003d SuppressionsLoader.class\n                                .getResource(aFilename);\n                        if (configUrl \u003d\u003d null) {\n                            throw new FileNotFoundException(aFilename);\n                        }\n                        uri \u003d configUrl.toURI();\n                    }\n                    catch (final URISyntaxException e) {\n                        throw new FileNotFoundException(aFilename);\n                    }\n                }\n            }\n            final InputSource source \u003d new InputSource(uri.toString());\n            return loadSuppressions(source, aFilename);\n        }\n        catch (final FileNotFoundException e) {\n            throw new CheckstyleException(\"unable to find \" + aFilename, e);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "a72e93613b8151d683fa83e5636212ed2f1413af": {
      "type": "Ybodychange",
      "commitMessage": "Apply patch #3485185 to load SuppressionFilter from a URL\n",
      "commitDate": "09/02/12 3:42 AM",
      "commitName": "a72e93613b8151d683fa83e5636212ed2f1413af",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/07/11 9:46 PM",
      "commitNameOld": "a9c2910a9d58a4b1b8c2d5555fff9cea297c6df5",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 210.29,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,33 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n         InputStream fis;\n         try {\n             fis \u003d new FileInputStream(aFilename);\n         }\n         catch (final FileNotFoundException e) {\n-            // check for the file in the classpath\n-            fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n-\n+            if (aFilename.matches(\"^https?://.+\")) {\n+                // this is a URL, load it as such\n+                try {\n+                    fis \u003d new URL(aFilename).openStream();\n+                }\n+                catch (MalformedURLException e1) {\n+                    throw new CheckstyleException(\n+                        \"Invalid URL: \" + aFilename, e1);\n+                }\n+                catch (IOException e1) {\n+                    throw new CheckstyleException(\n+                        \"unable to read \" + aFilename, e1);\n+                }\n+            }\n+            else {\n+                // check for the file in the classpath\n+                fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n+            }\n             if (fis \u003d\u003d null) {\n                 throw new CheckstyleException(\"unable to find \" + aFilename, e);\n             }\n         }\n-\n         final InputSource source \u003d new InputSource(fis);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        InputStream fis;\n        try {\n            fis \u003d new FileInputStream(aFilename);\n        }\n        catch (final FileNotFoundException e) {\n            if (aFilename.matches(\"^https?://.+\")) {\n                // this is a URL, load it as such\n                try {\n                    fis \u003d new URL(aFilename).openStream();\n                }\n                catch (MalformedURLException e1) {\n                    throw new CheckstyleException(\n                        \"Invalid URL: \" + aFilename, e1);\n                }\n                catch (IOException e1) {\n                    throw new CheckstyleException(\n                        \"unable to read \" + aFilename, e1);\n                }\n            }\n            else {\n                // check for the file in the classpath\n                fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n            }\n            if (fis \u003d\u003d null) {\n                throw new CheckstyleException(\"unable to find \" + aFilename, e);\n            }\n        }\n        final InputSource source \u003d new InputSource(fis);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced the ANT task, Command Line and Suppression Filter to be able to load\ntheir configuration file from either the filesystem or the classpath as a\nresource. Thanks to Tracy Snell for patch #3307526.\n",
      "commitDate": "11/07/11 3:58 AM",
      "commitName": "be8127a604bfdd91ff7cd32a1f825c9851d791ec",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/09/10 8:36 PM",
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 284.31,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,19 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n-        final FileInputStream fis;\n+        InputStream fis;\n         try {\n             fis \u003d new FileInputStream(aFilename);\n         }\n         catch (final FileNotFoundException e) {\n-            throw new CheckstyleException(\n-                \"unable to find \" + aFilename, e);\n+            // check for the file in the classpath\n+            fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n+\n+            if (fis \u003d\u003d null) {\n+                throw new CheckstyleException(\"unable to find \" + aFilename, e);\n+            }\n         }\n+\n         final InputSource source \u003d new InputSource(fis);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        InputStream fis;\n        try {\n            fis \u003d new FileInputStream(aFilename);\n        }\n        catch (final FileNotFoundException e) {\n            // check for the file in the classpath\n            fis \u003d SuppressionsLoader.class.getResourceAsStream(aFilename);\n\n            if (fis \u003d\u003d null) {\n                throw new CheckstyleException(\"unable to find \" + aFilename, e);\n            }\n        }\n\n        final InputSource source \u003d new InputSource(fis);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "21/01/06 4:43 AM",
      "commitNameOld": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 166.63,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n         final FileInputStream fis;\n         try {\n             fis \u003d new FileInputStream(aFilename);\n         }\n-        catch (FileNotFoundException e) {\n+        catch (final FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aFilename, e);\n         }\n         final InputSource source \u003d new InputSource(fis);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        final FileInputStream fis;\n        try {\n            fis \u003d new FileInputStream(aFilename);\n        }\n        catch (final FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(fis);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": "21/01/06 4:43 AM",
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/12/05 4:35 AM",
      "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 23.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n-        FileInputStream fis \u003d null;\n+        final FileInputStream fis;\n         try {\n             fis \u003d new FileInputStream(aFilename);\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aFilename, e);\n         }\n         final InputSource source \u003d new InputSource(fis);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        final FileInputStream fis;\n        try {\n            fis \u003d new FileInputStream(aFilename);\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(fis);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "70f4568a3d4109db189a6815ff11964a91bfb042": {
      "type": "Ybodychange",
      "commitMessage": "Fix encoding problems when parsing XML (patch 1320132)\n",
      "commitDate": "19/10/05 5:44 AM",
      "commitName": "70f4568a3d4109db189a6815ff11964a91bfb042",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "11/05/05 9:48 AM",
      "commitNameOld": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 160.83,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n-        FileReader reader \u003d null;\n+        FileInputStream fis \u003d null;\n         try {\n-            reader \u003d new FileReader(aFilename);\n+            fis \u003d new FileInputStream(aFilename);\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aFilename, e);\n         }\n-        final InputSource source \u003d new InputSource(reader);\n+        final InputSource source \u003d new InputSource(fis);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        FileInputStream fis \u003d null;\n        try {\n            fis \u003d new FileInputStream(aFilename);\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(fis);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {}
    },
    "433209f256f2f87310b4546cb08218dbdb110556": {
      "type": "Yfilerename",
      "commitMessage": "A refactoring to remove the circular dependency between the checkstyle and\ncheckstyle.filters packages. I moved AbstractLoader to the checkstyle.api\npackage. I moved the SuppressionsLoader to the checkstyle.filters package.\n\nI found the dependencies using the neat Pasta tool which I recommend. It is\navailable from http://javacentral.compuware.com/pasta/ for free.\n",
      "commitDate": "26/01/04 2:39 AM",
      "commitName": "433209f256f2f87310b4546cb08218dbdb110556",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "25/01/04 6:17 AM",
      "commitNameOld": "74b57239f50c2596574541202a007f98faf917d4",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.85,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        FileReader reader \u003d null;\n        try {\n            reader \u003d new FileReader(aFilename);\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(reader);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/SuppressionsLoader.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressionsLoader.java"
      }
    },
    "1e7d8eef0641edcf97316618c8fab40bd248133d": {
      "type": "Yreturntypechange",
      "commitMessage": "Refactored Filters to the way Checkstyle uses them;\ni.e. a Filter accepts or rejects an Object,\nand a FilterSet, not a FilterChain, aggregates Filters.\n",
      "commitDate": "15/07/03 1:18 PM",
      "commitName": "1e7d8eef0641edcf97316618c8fab40bd248133d",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "14/07/03 11:43 AM",
      "commitNameOld": "524a7eca739f86e704c6a83ab44c433ec73d095b",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    public static FilterChain loadSuppressions(String aFilename)\n+    public static FilterSet loadSuppressions(String aFilename)\n         throws CheckstyleException\n     {\n         FileReader reader \u003d null;\n         try {\n             reader \u003d new FileReader(aFilename);\n         }\n         catch (FileNotFoundException e) {\n             throw new CheckstyleException(\n                 \"unable to find \" + aFilename, e);\n         }\n         final InputSource source \u003d new InputSource(reader);\n         return loadSuppressions(source, aFilename);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterSet loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        FileReader reader \u003d null;\n        try {\n            reader \u003d new FileReader(aFilename);\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(reader);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/SuppressionsLoader.java",
      "extendedDetails": {
        "oldValue": "FilterChain",
        "newValue": "FilterSet"
      }
    },
    "21f0b07bd031f022d14106150af66ceddb4c06b8": {
      "type": "Yintroduced",
      "commitMessage": "Refactor and extend filters to filter chains.\nAdd suppression filters.\n",
      "commitDate": "14/07/03 1:22 AM",
      "commitName": "21f0b07bd031f022d14106150af66ceddb4c06b8",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,14 @@\n+    public static FilterChain loadSuppressions(String aFilename)\n+        throws CheckstyleException\n+    {\n+        FileReader reader \u003d null;\n+        try {\n+            reader \u003d new FileReader(aFilename);\n+        }\n+        catch (FileNotFoundException e) {\n+            throw new CheckstyleException(\n+                \"unable to find \" + aFilename, e);\n+        }\n+        final InputSource source \u003d new InputSource(reader);\n+        return loadSuppressions(source, aFilename);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static FilterChain loadSuppressions(String aFilename)\n        throws CheckstyleException\n    {\n        FileReader reader \u003d null;\n        try {\n            reader \u003d new FileReader(aFilename);\n        }\n        catch (FileNotFoundException e) {\n            throw new CheckstyleException(\n                \"unable to find \" + aFilename, e);\n        }\n        final InputSource source \u003d new InputSource(reader);\n        return loadSuppressions(source, aFilename);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/SuppressionsLoader.java"
    }
  }
}