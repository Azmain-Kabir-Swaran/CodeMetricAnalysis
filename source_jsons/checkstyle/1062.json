{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BooleanExpressionComplexityCheck.java",
  "functionName": "isPassedInParameter",
  "functionId": "isPassedInParameter___logicalOperator-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
  "functionStartLine": 251,
  "functionEndLine": 253,
  "numCommitsSeen": 38,
  "timeTaken": 913,
  "changeHistory": [
    "d288cd03f33554c42093e884e4744e0f00d9aa38",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2"
  ],
  "changeHistoryShort": {
    "d288cd03f33554c42093e884e4744e0f00d9aa38": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d288cd03f33554c42093e884e4744e0f00d9aa38": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for metrics",
      "commitDate": "29/12/18 8:25 PM",
      "commitName": "d288cd03f33554c42093e884e4744e0f00d9aa38",
      "commitAuthor": "rnveach",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 208.99,
      "commitsBetweenForRepo": 295,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,3 @@\n     private static boolean isPassedInParameter(DetailAST logicalOperator) {\n-        return logicalOperator.getParent().getType() \u003d\u003d TokenTypes.EXPR\n-            \u0026\u0026 logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n+        return logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isPassedInParameter(DetailAST logicalOperator) {\n        return logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    private boolean isPassedInParameter(DetailAST logicalOperator) {\n+    private static boolean isPassedInParameter(DetailAST logicalOperator) {\n         return logicalOperator.getParent().getType() \u003d\u003d TokenTypes.EXPR\n             \u0026\u0026 logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isPassedInParameter(DetailAST logicalOperator) {\n        return logicalOperator.getParent().getType() \u003d\u003d TokenTypes.EXPR\n            \u0026\u0026 logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2": {
      "type": "Yintroduced",
      "commitMessage": "Issue #572 BooleanExpressionComplexity misidentifies integer expression as boolean expression\n",
      "commitDate": "25/02/15 3:19 PM",
      "commitName": "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2",
      "commitAuthor": "ychulovskyy",
      "diff": "@@ -0,0 +1,5 @@\n+    private boolean isPassedInParameter(DetailAST logicalOperator)\n+    {\n+        return logicalOperator.getParent().getType() \u003d\u003d TokenTypes.EXPR\n+            \u0026\u0026 logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isPassedInParameter(DetailAST logicalOperator)\n    {\n        return logicalOperator.getParent().getType() \u003d\u003d TokenTypes.EXPR\n            \u0026\u0026 logicalOperator.getParent().getParent().getType() \u003d\u003d TokenTypes.ELIST;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java"
    }
  }
}