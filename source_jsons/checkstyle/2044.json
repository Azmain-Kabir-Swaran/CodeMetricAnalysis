{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultilineDetector.java",
  "functionName": "finish",
  "functionId": "finish",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
  "functionStartLine": 124,
  "functionEndLine": 134,
  "numCommitsSeen": 43,
  "timeTaken": 1362,
  "changeHistory": [
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
    "545237e358cd5ec1492f128f500b345d0f1718a9",
    "075b3084de3934dbf73f108110b36e01dcf10d1e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4"
  ],
  "changeHistoryShort": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": "Ybodychange",
    "545237e358cd5ec1492f128f500b345d0f1718a9": "Ybodychange",
    "075b3084de3934dbf73f108110b36e01dcf10d1e": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6000: Fix zero line violations\n",
      "commitDate": "05/09/18 5:54 AM",
      "commitName": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthor": "Boxuan Li",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 139.7,
      "commitsBetweenForRepo": 306,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void finish() {\n         if (currentMatches \u003c options.getMinimum()) {\n             if (options.getMessage().isEmpty()) {\n-                options.getReporter().log(0, MSG_REGEXP_MINIMUM,\n+                options.getReporter().log(1, MSG_REGEXP_MINIMUM,\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n-                options.getReporter().log(0, options.getMessage());\n+                options.getReporter().log(1, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish() {\n        if (currentMatches \u003c options.getMinimum()) {\n            if (options.getMessage().isEmpty()) {\n                options.getReporter().log(1, MSG_REGEXP_MINIMUM,\n                        options.getMinimum(), options.getFormat());\n            }\n            else {\n                options.getReporter().log(1, options.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": "21/01/16 6:40 AM",
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void finish() {\n         if (currentMatches \u003c options.getMinimum()) {\n             if (options.getMessage().isEmpty()) {\n-                options.getReporter().log(0, REGEXP_MINIMUM,\n+                options.getReporter().log(0, MSG_REGEXP_MINIMUM,\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n                 options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish() {\n        if (currentMatches \u003c options.getMinimum()) {\n            if (options.getMessage().isEmpty()) {\n                options.getReporter().log(0, MSG_REGEXP_MINIMUM,\n                        options.getMinimum(), options.getFormat());\n            }\n            else {\n                options.getReporter().log(0, options.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "084809c3b9e0d039c818cc4d8c5e640ea9e26525": {
      "type": "Ybodychange",
      "commitMessage": "Simplify empty string check. #1555\n\nFixes `Simplify empty string check` inspection violations.\n\nDescription:\n\u003eReports .equals() being called to compare a String with an empty string. It is normally more performant to test a String for emptiness by comparing its .length() to zero instead.\n",
      "commitDate": "07/08/15 10:11 PM",
      "commitName": "084809c3b9e0d039c818cc4d8c5e640ea9e26525",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/08/15 9:11 PM",
      "commitNameOld": "7d513f08c27c741105f712dc882fd4c3553f71e7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private void finish() {\n         if (currentMatches \u003c options.getMinimum()) {\n-            if (\"\".equals(options.getMessage())) {\n+            if (options.getMessage().isEmpty()) {\n                 options.getReporter().log(0, REGEXP_MINIMUM,\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n                 options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish() {\n        if (currentMatches \u003c options.getMinimum()) {\n            if (options.getMessage().isEmpty()) {\n                options.getReporter().log(0, REGEXP_MINIMUM,\n                        options.getMinimum(), options.getFormat());\n            }\n            else {\n                options.getReporter().log(0, options.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "545237e358cd5ec1492f128f500b345d0f1718a9": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, regexp package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "545237e358cd5ec1492f128f500b345d0f1718a9",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void finish()\n     {\n         if (currentMatches \u003c options.getMinimum()) {\n             if (\"\".equals(options.getMessage())) {\n-                options.getReporter().log(0, \"regexp.minimum\",\n+                options.getReporter().log(0, REGEXP_MINIMUM,\n                         options.getMinimum(), options.getFormat());\n             }\n             else {\n                 options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish()\n    {\n        if (currentMatches \u003c options.getMinimum()) {\n            if (\"\".equals(options.getMessage())) {\n                options.getReporter().log(0, REGEXP_MINIMUM,\n                        options.getMinimum(), options.getFormat());\n            }\n            else {\n                options.getReporter().log(0, options.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "075b3084de3934dbf73f108110b36e01dcf10d1e": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, regexp, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
      "commitAuthor": "alexkravin",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 320.88,
      "commitsBetweenForRepo": 462,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void finish()\n     {\n-        if (mCurrentMatches \u003c mOptions.getMinimum()) {\n-            if (\"\".equals(mOptions.getMessage())) {\n-                mOptions.getReporter().log(0, \"regexp.minimum\",\n-                        mOptions.getMinimum(), mOptions.getFormat());\n+        if (currentMatches \u003c options.getMinimum()) {\n+            if (\"\".equals(options.getMessage())) {\n+                options.getReporter().log(0, \"regexp.minimum\",\n+                        options.getMinimum(), options.getFormat());\n             }\n             else {\n-                mOptions.getReporter().log(0, mOptions.getMessage());\n+                options.getReporter().log(0, options.getMessage());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish()\n    {\n        if (currentMatches \u003c options.getMinimum()) {\n            if (\"\".equals(options.getMessage())) {\n                options.getReporter().log(0, \"regexp.minimum\",\n                        options.getMinimum(), options.getFormat());\n            }\n            else {\n                options.getReporter().log(0, options.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void finish()\n    {\n        if (mCurrentMatches \u003c mOptions.getMinimum()) {\n            if (\"\".equals(mOptions.getMessage())) {\n                mOptions.getReporter().log(0, \"regexp.minimum\",\n                        mOptions.getMinimum(), mOptions.getFormat());\n            }\n            else {\n                mOptions.getReporter().log(0, mOptions.getMessage());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java"
      }
    },
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": {
      "type": "Yintroduced",
      "commitMessage": "snapshot of a work in progress\n",
      "commitDate": "10/01/09 7:29 PM",
      "commitName": "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,12 @@\n+    private void finish()\n+    {\n+        if (mCurrentMatches \u003c mOptions.getMinimum()) {\n+            if (\"\".equals(mOptions.getMessage())) {\n+                mOptions.getReporter().log(0, \"regexp.minimum\",\n+                        mOptions.getMinimum(), mOptions.getFormat());\n+            }\n+            else {\n+                mOptions.getReporter().log(0, mOptions.getMessage());\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void finish()\n    {\n        if (mCurrentMatches \u003c mOptions.getMinimum()) {\n            if (\"\".equals(mOptions.getMessage())) {\n                mOptions.getReporter().log(0, \"regexp.minimum\",\n                        mOptions.getMinimum(), mOptions.getFormat());\n            }\n            else {\n                mOptions.getReporter().log(0, mOptions.getMessage());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java"
    }
  }
}