{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "isCheckedMethod",
  "functionId": "isCheckedMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 746,
  "functionEndLine": 751,
  "numCommitsSeen": 101,
  "timeTaken": 1841,
  "changeHistory": [
    "efe83affe3f8781293c64b3969ace667e0ad606a",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "75773acf4f256f79c8c19839aad06071950958d1"
  ],
  "changeHistoryShort": {
    "efe83affe3f8781293c64b3969ace667e0ad606a": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "75773acf4f256f79c8c19839aad06071950958d1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "efe83affe3f8781293c64b3969ace667e0ad606a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6612: do not complain about illegal types as parameters or return types of methods with @Override annotation\n",
      "commitDate": "27/04/19 9:15 AM",
      "commitName": "efe83affe3f8781293c64b3969ace667e0ad606a",
      "commitAuthor": "Bj√∂rn Kautler",
      "commitDateOld": "16/04/19 4:42 AM",
      "commitNameOld": "a4412b93e9eac93dbdd938c5613ebceb190a3774",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 11.19,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n     private boolean isCheckedMethod(DetailAST ast) {\n         final String methodName \u003d\n             ast.findFirstToken(TokenTypes.IDENT).getText();\n-        return !ignoredMethodNames.contains(methodName);\n+        return isVerifiable(ast) \u0026\u0026 !ignoredMethodNames.contains(methodName)\n+                \u0026\u0026 !AnnotationUtil.containsAnnotation(ast, \"Override\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCheckedMethod(DetailAST ast) {\n        final String methodName \u003d\n            ast.findFirstToken(TokenTypes.IDENT).getText();\n        return isVerifiable(ast) \u0026\u0026 !ignoredMethodNames.contains(methodName)\n                \u0026\u0026 !AnnotationUtil.containsAnnotation(ast, \"Override\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    private boolean isCheckedMethod(DetailAST aAST)\n+    private boolean isCheckedMethod(DetailAST ast)\n     {\n         final String methodName \u003d\n-            aAST.findFirstToken(TokenTypes.IDENT).getText();\n-        return !mIgnoredMethodNames.contains(methodName);\n+            ast.findFirstToken(TokenTypes.IDENT).getText();\n+        return !ignoredMethodNames.contains(methodName);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isCheckedMethod(DetailAST ast)\n    {\n        final String methodName \u003d\n            ast.findFirstToken(TokenTypes.IDENT).getText();\n        return !ignoredMethodNames.contains(methodName);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,6 @@\n-    private boolean isCheckedMethod(DetailAST aAST)\n+    private boolean isCheckedMethod(DetailAST ast)\n     {\n         final String methodName \u003d\n-            aAST.findFirstToken(TokenTypes.IDENT).getText();\n-        return !mIgnoredMethodNames.contains(methodName);\n+            ast.findFirstToken(TokenTypes.IDENT).getText();\n+        return !ignoredMethodNames.contains(methodName);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isCheckedMethod(DetailAST ast)\n    {\n        final String methodName \u003d\n            ast.findFirstToken(TokenTypes.IDENT).getText();\n        return !ignoredMethodNames.contains(methodName);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isCheckedMethod(DetailAST aAST)\n    {\n        final String methodName \u003d\n            aAST.findFirstToken(TokenTypes.IDENT).getText();\n        return !mIgnoredMethodNames.contains(methodName);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
      }
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.68,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n     private boolean isCheckedMethod(DetailAST aAST)\n     {\n-        String methodName \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n+        final String methodName \u003d\n+            aAST.findFirstToken(TokenTypes.IDENT).getText();\n         return !mIgnoredMethodNames.contains(methodName);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCheckedMethod(DetailAST aAST)\n    {\n        final String methodName \u003d\n            aAST.findFirstToken(TokenTypes.IDENT).getText();\n        return !mIgnoredMethodNames.contains(methodName);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "75773acf4f256f79c8c19839aad06071950958d1": {
      "type": "Yintroduced",
      "commitMessage": "Added IllegalType check from Simon Harris (request 750739).\nAdded getter for illegalClassNames property of IllegalCatch check.\n",
      "commitDate": "04/09/03 11:35 AM",
      "commitName": "75773acf4f256f79c8c19839aad06071950958d1",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,5 @@\n+    private boolean isCheckedMethod(DetailAST aAST)\n+    {\n+        String methodName \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n+        return !mIgnoredMethodNames.contains(methodName);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCheckedMethod(DetailAST aAST)\n    {\n        String methodName \u003d aAST.findFirstToken(TokenTypes.IDENT).getText();\n        return !mIgnoredMethodNames.contains(methodName);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}