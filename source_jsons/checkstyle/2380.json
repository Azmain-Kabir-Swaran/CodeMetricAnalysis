{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ThrowsCountCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
  "functionStartLine": 235,
  "functionEndLine": 242,
  "numCommitsSeen": 58,
  "timeTaken": 1181,
  "changeHistory": [
    "193474f51804bf6255bfcec58befcb1dc8ff8329",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb"
  ],
  "changeHistoryShort": {
    "193474f51804bf6255bfcec58befcb1dc8ff8329": "Ybodychange",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "193474f51804bf6255bfcec58befcb1dc8ff8329": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from TooFewBranchesForASwitchStatement rule, issue #998\n",
      "commitDate": "01/05/15 7:29 AM",
      "commitName": "193474f51804bf6255bfcec58befcb1dc8ff8329",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 70.06,
      "commitsBetweenForRepo": 350,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n     public void visitToken(DetailAST ast)\n     {\n-        switch (ast.getType()) {\n-            case TokenTypes.LITERAL_THROWS:\n-                visitLiteralThrows(ast);\n-                break;\n-            default:\n-                throw new IllegalStateException(ast.toString());\n+        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_THROWS) {\n+            visitLiteralThrows(ast);\n+        }\n+        else {\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_THROWS) {\n            visitLiteralThrows(ast);\n        }\n        else {\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {}
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.LITERAL_THROWS:\n-            visitLiteralThrows(aAST);\n+            visitLiteralThrows(ast);\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.LITERAL_THROWS:\n            visitLiteralThrows(ast);\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.LITERAL_THROWS:\n-            visitLiteralThrows(aAST);\n+            visitLiteralThrows(ast);\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.LITERAL_THROWS:\n            visitLiteralThrows(ast);\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.LITERAL_THROWS:\n            visitLiteralThrows(aAST);\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java"
      }
    },
    "9bc9f418278ed8782e473b2dbf4d7669e886bfcb": {
      "type": "Yintroduced",
      "commitMessage": "Added ThrowsCount check from Simon Harris (request 750742).\nAdded ReturnCount check from Simon Harris (request 750745).\nMinor fixes in release notes.\n",
      "commitDate": "28/08/03 12:18 PM",
      "commitName": "9bc9f418278ed8782e473b2dbf4d7669e886bfcb",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,10 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+        case TokenTypes.LITERAL_THROWS:\n+            visitLiteralThrows(aAST);\n+            break;\n+        default:\n+            throw new IllegalStateException(aAST.toString());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.LITERAL_THROWS:\n            visitLiteralThrows(aAST);\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/ThrowsCountCheck.java"
    }
  }
}