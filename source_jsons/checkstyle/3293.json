{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PackageObjectFactory.java",
  "functionName": "createModuleByTryInEachPackage",
  "functionId": "createModuleByTryInEachPackage___name-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
  "functionStartLine": 385,
  "functionEndLine": 398,
  "numCommitsSeen": 84,
  "timeTaken": 1096,
  "changeHistory": [
    "5257531c2358036679939b51a262e069e7bbe85c",
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1"
  ],
  "changeHistoryShort": {
    "5257531c2358036679939b51a262e069e7bbe85c": "Ybodychange",
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5257531c2358036679939b51a262e069e7bbe85c": {
      "type": "Ybodychange",
      "commitMessage": "minor: PackageObjectFactory stream refactoring\n",
      "commitDate": "06/12/18 5:33 AM",
      "commitName": "5257531c2358036679939b51a262e069e7bbe85c",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "02/12/18 8:23 PM",
      "commitNameOld": "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 3.38,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n     private Object createModuleByTryInEachPackage(String name) throws CheckstyleException {\n-        final Set\u003cString\u003e possibleNames \u003d packages.stream()\n-                .map(packageName -\u003e packageName + PACKAGE_SEPARATOR + name)\n-                .collect(Collectors.toSet());\n-        possibleNames.addAll(possibleNames.stream()\n-                .map(possibleName -\u003e possibleName + CHECK_SUFFIX)\n-                .collect(Collectors.toSet()));\n+        final List\u003cString\u003e possibleNames \u003d packages.stream()\n+            .map(packageName -\u003e packageName + PACKAGE_SEPARATOR + name)\n+            .flatMap(className -\u003e Stream.of(className, className + CHECK_SUFFIX))\n+            .collect(Collectors.toList());\n         Object instance \u003d null;\n         for (String possibleName : possibleNames) {\n             instance \u003d createObject(possibleName);\n             if (instance !\u003d null) {\n                 break;\n             }\n         }\n         return instance;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Object createModuleByTryInEachPackage(String name) throws CheckstyleException {\n        final List\u003cString\u003e possibleNames \u003d packages.stream()\n            .map(packageName -\u003e packageName + PACKAGE_SEPARATOR + name)\n            .flatMap(className -\u003e Stream.of(className, className + CHECK_SUFFIX))\n            .collect(Collectors.toList());\n        Object instance \u003d null;\n        for (String possibleName : possibleNames) {\n            instance \u003d createObject(possibleName);\n            if (instance !\u003d null) {\n                break;\n            }\n        }\n        return instance;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "620a340c16dc4a77b4d7f81e30cac83d70af49b1": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4916: Adding ability to force load\n",
      "commitDate": "25/11/17 6:17 PM",
      "commitName": "620a340c16dc4a77b4d7f81e30cac83d70af49b1",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,16 @@\n+    private Object createModuleByTryInEachPackage(String name) throws CheckstyleException {\n+        final Set\u003cString\u003e possibleNames \u003d packages.stream()\n+                .map(packageName -\u003e packageName + PACKAGE_SEPARATOR + name)\n+                .collect(Collectors.toSet());\n+        possibleNames.addAll(possibleNames.stream()\n+                .map(possibleName -\u003e possibleName + CHECK_SUFFIX)\n+                .collect(Collectors.toSet()));\n+        Object instance \u003d null;\n+        for (String possibleName : possibleNames) {\n+            instance \u003d createObject(possibleName);\n+            if (instance !\u003d null) {\n+                break;\n+            }\n+        }\n+        return instance;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Object createModuleByTryInEachPackage(String name) throws CheckstyleException {\n        final Set\u003cString\u003e possibleNames \u003d packages.stream()\n                .map(packageName -\u003e packageName + PACKAGE_SEPARATOR + name)\n                .collect(Collectors.toSet());\n        possibleNames.addAll(possibleNames.stream()\n                .map(possibleName -\u003e possibleName + CHECK_SUFFIX)\n                .collect(Collectors.toSet()));\n        Object instance \u003d null;\n        for (String possibleName : possibleNames) {\n            instance \u003d createObject(possibleName);\n            if (instance !\u003d null) {\n                break;\n            }\n        }\n        return instance;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java"
    }
  }
}