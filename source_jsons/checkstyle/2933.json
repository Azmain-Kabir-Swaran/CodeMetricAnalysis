{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TranslationCheck.java",
  "functionName": "groupFilesIntoBundles",
  "functionId": "groupFilesIntoBundles___files-Set__File____baseNameRegexp-Pattern",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
  "functionStartLine": 436,
  "functionEndLine": 458,
  "numCommitsSeen": 82,
  "timeTaken": 1584,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "ee66d82723cb6f2f4c74f6d91dd9c4f58beb5775",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "8e50f26cf033b31f541676541f26662880a2b4ca",
    "d843dd8439cc5163bcd743443f970c392f4ae30e"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "ee66d82723cb6f2f4c74f6d91dd9c4f58beb5775": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "8e50f26cf033b31f541676541f26662880a2b4ca": "Ymodifierchange",
    "d843dd8439cc5163bcd743443f970c392f4ae30e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "07/05/18 6:47 PM",
      "commitNameOld": "0461a0f839c8cd2306354912b4956267c1d0ec20",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 27.12,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                              Pattern baseNameRegexp) {\n         final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n         for (File currentFile : files) {\n             final String fileName \u003d currentFile.getName();\n             final String baseName \u003d extractBaseName(fileName);\n             final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n             if (baseNameMatcher.matches()) {\n-                final String extension \u003d CommonUtils.getFileExtension(fileName);\n+                final String extension \u003d CommonUtil.getFileExtension(fileName);\n                 final String path \u003d getPath(currentFile.getAbsolutePath());\n                 final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                 final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                 if (bundle.isPresent()) {\n                     bundle.get().addFile(currentFile);\n                 }\n                 else {\n                     newBundle.addFile(currentFile);\n                     resourceBundles.add(newBundle);\n                 }\n             }\n         }\n         return resourceBundles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                             Pattern baseNameRegexp) {\n        final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n        for (File currentFile : files) {\n            final String fileName \u003d currentFile.getName();\n            final String baseName \u003d extractBaseName(fileName);\n            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n            if (baseNameMatcher.matches()) {\n                final String extension \u003d CommonUtil.getFileExtension(fileName);\n                final String path \u003d getPath(currentFile.getAbsolutePath());\n                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                if (bundle.isPresent()) {\n                    bundle.get().addFile(currentFile);\n                }\n                else {\n                    newBundle.addFile(currentFile);\n                    resourceBundles.add(newBundle);\n                }\n            }\n        }\n        return resourceBundles;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "ee66d82723cb6f2f4c74f6d91dd9c4f58beb5775": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 3) (#3458)\n\n",
      "commitDate": "21/09/16 3:35 PM",
      "commitName": "ee66d82723cb6f2f4c74f6d91dd9c4f58beb5775",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "20/09/16 7:52 PM",
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.82,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                              Pattern baseNameRegexp) {\n         final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n         for (File currentFile : files) {\n             final String fileName \u003d currentFile.getName();\n             final String baseName \u003d extractBaseName(fileName);\n             final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n             if (baseNameMatcher.matches()) {\n-                final String extension \u003d Files.getFileExtension(fileName);\n+                final String extension \u003d CommonUtils.getFileExtension(fileName);\n                 final String path \u003d getPath(currentFile.getAbsolutePath());\n                 final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                 final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                 if (bundle.isPresent()) {\n                     bundle.get().addFile(currentFile);\n                 }\n                 else {\n                     newBundle.addFile(currentFile);\n                     resourceBundles.add(newBundle);\n                 }\n             }\n         }\n         return resourceBundles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                             Pattern baseNameRegexp) {\n        final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n        for (File currentFile : files) {\n            final String fileName \u003d currentFile.getName();\n            final String baseName \u003d extractBaseName(fileName);\n            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n            if (baseNameMatcher.matches()) {\n                final String extension \u003d CommonUtils.getFileExtension(fileName);\n                final String path \u003d getPath(currentFile.getAbsolutePath());\n                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                if (bundle.isPresent()) {\n                    bundle.get().addFile(currentFile);\n                }\n                else {\n                    newBundle.addFile(currentFile);\n                    resourceBundles.add(newBundle);\n                }\n            }\n        }\n        return resourceBundles;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "04/07/16 11:09 AM",
      "commitNameOld": "a2117301def721fe628b15e5e5d06a353ef03fef",
      "commitAuthorOld": "Michael Simons",
      "daysBetweenCommits": 78.36,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                              Pattern baseNameRegexp) {\n-        final Set\u003cResourceBundle\u003e resourceBundles \u003d Sets.newHashSet();\n+        final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n         for (File currentFile : files) {\n             final String fileName \u003d currentFile.getName();\n             final String baseName \u003d extractBaseName(fileName);\n             final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n             if (baseNameMatcher.matches()) {\n                 final String extension \u003d Files.getFileExtension(fileName);\n                 final String path \u003d getPath(currentFile.getAbsolutePath());\n                 final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                 final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                 if (bundle.isPresent()) {\n                     bundle.get().addFile(currentFile);\n                 }\n                 else {\n                     newBundle.addFile(currentFile);\n                     resourceBundles.add(newBundle);\n                 }\n             }\n         }\n         return resourceBundles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                             Pattern baseNameRegexp) {\n        final Set\u003cResourceBundle\u003e resourceBundles \u003d new HashSet\u003c\u003e();\n        for (File currentFile : files) {\n            final String fileName \u003d currentFile.getName();\n            final String baseName \u003d extractBaseName(fileName);\n            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n            if (baseNameMatcher.matches()) {\n                final String extension \u003d Files.getFileExtension(fileName);\n                final String path \u003d getPath(currentFile.getAbsolutePath());\n                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                if (bundle.isPresent()) {\n                    bundle.get().addFile(currentFile);\n                }\n                else {\n                    newBundle.addFile(currentFile);\n                    resourceBundles.add(newBundle);\n                }\n            }\n        }\n        return resourceBundles;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {}
    },
    "8e50f26cf033b31f541676541f26662880a2b4ca": {
      "type": "Ymodifierchange",
      "commitMessage": "minor: Refactoring of TranslationCheck\n",
      "commitDate": "16/03/16 11:30 AM",
      "commitName": "8e50f26cf033b31f541676541f26662880a2b4ca",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "12/03/16 9:31 AM",
      "commitNameOld": "d843dd8439cc5163bcd743443f970c392f4ae30e",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 4.04,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,23 @@\n-    private Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files, Pattern baseNameRegexp) {\n+    private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n+                                                             Pattern baseNameRegexp) {\n         final Set\u003cResourceBundle\u003e resourceBundles \u003d Sets.newHashSet();\n         for (File currentFile : files) {\n             final String fileName \u003d currentFile.getName();\n             final String baseName \u003d extractBaseName(fileName);\n             final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n             if (baseNameMatcher.matches()) {\n                 final String extension \u003d Files.getFileExtension(fileName);\n                 final String path \u003d getPath(currentFile.getAbsolutePath());\n                 final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                 final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                 if (bundle.isPresent()) {\n                     bundle.get().addFile(currentFile);\n                 }\n                 else {\n                     newBundle.addFile(currentFile);\n                     resourceBundles.add(newBundle);\n                 }\n             }\n         }\n         return resourceBundles;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files,\n                                                             Pattern baseNameRegexp) {\n        final Set\u003cResourceBundle\u003e resourceBundles \u003d Sets.newHashSet();\n        for (File currentFile : files) {\n            final String fileName \u003d currentFile.getName();\n            final String baseName \u003d extractBaseName(fileName);\n            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n            if (baseNameMatcher.matches()) {\n                final String extension \u003d Files.getFileExtension(fileName);\n                final String path \u003d getPath(currentFile.getAbsolutePath());\n                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                if (bundle.isPresent()) {\n                    bundle.get().addFile(currentFile);\n                }\n                else {\n                    newBundle.addFile(currentFile);\n                    resourceBundles.add(newBundle);\n                }\n            }\n        }\n        return resourceBundles;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "d843dd8439cc5163bcd743443f970c392f4ae30e": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2204: Add \u0027baseName\u0027 option for TranslationCheck\n",
      "commitDate": "12/03/16 9:31 AM",
      "commitName": "d843dd8439cc5163bcd743443f970c392f4ae30e",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,22 @@\n+    private Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files, Pattern baseNameRegexp) {\n+        final Set\u003cResourceBundle\u003e resourceBundles \u003d Sets.newHashSet();\n+        for (File currentFile : files) {\n+            final String fileName \u003d currentFile.getName();\n+            final String baseName \u003d extractBaseName(fileName);\n+            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n+            if (baseNameMatcher.matches()) {\n+                final String extension \u003d Files.getFileExtension(fileName);\n+                final String path \u003d getPath(currentFile.getAbsolutePath());\n+                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n+                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n+                if (bundle.isPresent()) {\n+                    bundle.get().addFile(currentFile);\n+                }\n+                else {\n+                    newBundle.addFile(currentFile);\n+                    resourceBundles.add(newBundle);\n+                }\n+            }\n+        }\n+        return resourceBundles;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cResourceBundle\u003e groupFilesIntoBundles(Set\u003cFile\u003e files, Pattern baseNameRegexp) {\n        final Set\u003cResourceBundle\u003e resourceBundles \u003d Sets.newHashSet();\n        for (File currentFile : files) {\n            final String fileName \u003d currentFile.getName();\n            final String baseName \u003d extractBaseName(fileName);\n            final Matcher baseNameMatcher \u003d baseNameRegexp.matcher(baseName);\n            if (baseNameMatcher.matches()) {\n                final String extension \u003d Files.getFileExtension(fileName);\n                final String path \u003d getPath(currentFile.getAbsolutePath());\n                final ResourceBundle newBundle \u003d new ResourceBundle(baseName, path, extension);\n                final Optional\u003cResourceBundle\u003e bundle \u003d findBundle(resourceBundles, newBundle);\n                if (bundle.isPresent()) {\n                    bundle.get().addFile(currentFile);\n                }\n                else {\n                    newBundle.addFile(currentFile);\n                    resourceBundles.add(newBundle);\n                }\n            }\n        }\n        return resourceBundles;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TranslationCheck.java"
    }
  }
}