{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "findClassAlias",
  "functionId": "findClassAlias___name-String(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 1176,
  "functionEndLine": 1188,
  "numCommitsSeen": 244,
  "timeTaken": 4348,
  "changeHistory": [
    "9844131cef5b7fba66af3137284d90ba31e8c7e3",
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "53eddca5d166d828a4835fc3000a97a97ddd5efe",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154",
    "08638b5f739d9929698860048c052da2d5f80209",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94"
  ],
  "changeHistoryShort": {
    "9844131cef5b7fba66af3137284d90ba31e8c7e3": "Ymultichange(Yreturntypechange,Ybodychange)",
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": "Yfilerename",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Ymultichange(Yreturntypechange,Ybodychange)",
    "53eddca5d166d828a4835fc3000a97a97ddd5efe": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154": "Ybodychange",
    "08638b5f739d9929698860048c052da2d5f80209": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9844131cef5b7fba66af3137284d90ba31e8c7e3": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Issue #7329: remove class loading and all related properties in JavadocMethodCheck\n",
      "commitDate": "17/12/19 9:52 AM",
      "commitName": "9844131cef5b7fba66af3137284d90ba31e8c7e3",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Issue #7329: remove class loading and all related properties in JavadocMethodCheck\n",
          "commitDate": "17/12/19 9:52 AM",
          "commitName": "9844131cef5b7fba66af3137284d90ba31e8c7e3",
          "commitAuthor": "rnveach",
          "commitDateOld": "07/11/19 6:02 AM",
          "commitNameOld": "cadb16735273de8f1a796c846827cbb10fde206f",
          "commitAuthorOld": "pbludov",
          "daysBetweenCommits": 40.16,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private AbstractClassInfo findClassAlias(final String name) {\n-        AbstractClassInfo classInfo \u003d null;\n-        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n+    private ClassInfo findClassAlias(final String name) {\n+        ClassInfo classInfo \u003d null;\n+        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                 .descendingIterator();\n         while (iterator.hasNext()) {\n-            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n             classInfo \u003d paramMap.get(name);\n             if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n         return classInfo;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ClassInfo findClassAlias(final String name) {\n        ClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                .descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldValue": "AbstractClassInfo",
            "newValue": "ClassInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #7329: remove class loading and all related properties in JavadocMethodCheck\n",
          "commitDate": "17/12/19 9:52 AM",
          "commitName": "9844131cef5b7fba66af3137284d90ba31e8c7e3",
          "commitAuthor": "rnveach",
          "commitDateOld": "07/11/19 6:02 AM",
          "commitNameOld": "cadb16735273de8f1a796c846827cbb10fde206f",
          "commitAuthorOld": "pbludov",
          "daysBetweenCommits": 40.16,
          "commitsBetweenForRepo": 104,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private AbstractClassInfo findClassAlias(final String name) {\n-        AbstractClassInfo classInfo \u003d null;\n-        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n+    private ClassInfo findClassAlias(final String name) {\n+        ClassInfo classInfo \u003d null;\n+        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                 .descendingIterator();\n         while (iterator.hasNext()) {\n-            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n             classInfo \u003d paramMap.get(name);\n             if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n         return classInfo;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private ClassInfo findClassAlias(final String name) {\n        ClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                .descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod",
      "commitDate": "13/10/19 7:03 AM",
      "commitName": "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod",
          "commitDate": "13/10/19 7:03 AM",
          "commitName": "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
          "commitAuthor": "rnveach",
          "commitDateOld": "11/10/19 11:09 PM",
          "commitNameOld": "145160f5e21b80c27dc93a1904fe33b9afd4f212",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 1.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-    protected final AbstractClassInfo findClassAlias(final String name) {\n+    private AbstractClassInfo findClassAlias(final String name) {\n         AbstractClassInfo classInfo \u003d null;\n-        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n+                .descendingIterator();\n         while (iterator.hasNext()) {\n             final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n             classInfo \u003d paramMap.get(name);\n             if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n         return classInfo;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                .descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
            "oldMethodName": "findClassAlias",
            "newMethodName": "findClassAlias"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod",
          "commitDate": "13/10/19 7:03 AM",
          "commitName": "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
          "commitAuthor": "rnveach",
          "commitDateOld": "11/10/19 11:09 PM",
          "commitNameOld": "145160f5e21b80c27dc93a1904fe33b9afd4f212",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 1.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-    protected final AbstractClassInfo findClassAlias(final String name) {\n+    private AbstractClassInfo findClassAlias(final String name) {\n         AbstractClassInfo classInfo \u003d null;\n-        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n+                .descendingIterator();\n         while (iterator.hasNext()) {\n             final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n             classInfo \u003d paramMap.get(name);\n             if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n         return classInfo;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                .descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldValue": "[protected, final]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod",
          "commitDate": "13/10/19 7:03 AM",
          "commitName": "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
          "commitAuthor": "rnveach",
          "commitDateOld": "11/10/19 11:09 PM",
          "commitNameOld": "145160f5e21b80c27dc93a1904fe33b9afd4f212",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 1.33,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,13 @@\n-    protected final AbstractClassInfo findClassAlias(final String name) {\n+    private AbstractClassInfo findClassAlias(final String name) {\n         AbstractClassInfo classInfo \u003d null;\n-        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n+                .descendingIterator();\n         while (iterator.hasNext()) {\n             final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n             classInfo \u003d paramMap.get(name);\n             if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n         return classInfo;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d currentTypeParams\n                .descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4676: move AbstractTypeAwareCheck and ClassResolver to javadoc\n",
      "commitDate": "05/08/17 7:51 PM",
      "commitName": "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/08/17 7:09 PM",
      "commitNameOld": "6cdae0ff01b436cfe387d18b5e1206c6f078376b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java"
      }
    },
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": "06/10/15 5:46 PM",
      "commitName": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "31/08/15 12:58 PM",
      "commitNameOld": "49a0ee81710e0c43ed06a01f1d64ac7f5598a934",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 36.2,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final AbstractClassInfo findClassAlias(final String name) {\n-        AbstractClassInfo ci \u003d null;\n+        AbstractClassInfo classInfo \u003d null;\n         final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n         while (iterator.hasNext()) {\n             final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n-            ci \u003d paramMap.get(name);\n-            if (ci !\u003d null) {\n+            classInfo \u003d paramMap.get(name);\n+            if (classInfo !\u003d null) {\n                 break;\n             }\n         }\n-        return ci;\n+        return classInfo;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo classInfo \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            classInfo \u003d paramMap.get(name);\n            if (classInfo !\u003d null) {\n                break;\n            }\n        }\n        return classInfo;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
          "commitDate": "18/06/15 10:52 AM",
          "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
          "commitAuthor": "Bhavik Patel",
          "commitDateOld": "17/05/15 4:47 AM",
          "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 32.25,
          "commitsBetweenForRepo": 181,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    protected final ClassInfo findClassAlias(final String name) {\n-        ClassInfo ci \u003d null;\n-        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+    protected final AbstractClassInfo findClassAlias(final String name) {\n+        AbstractClassInfo ci \u003d null;\n+        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n         while (iterator.hasNext()) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n+            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n             ci \u003d paramMap.get(name);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo ci \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            ci \u003d paramMap.get(name);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {
            "oldValue": "ClassInfo",
            "newValue": "AbstractClassInfo"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
          "commitDate": "18/06/15 10:52 AM",
          "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
          "commitAuthor": "Bhavik Patel",
          "commitDateOld": "17/05/15 4:47 AM",
          "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 32.25,
          "commitsBetweenForRepo": 181,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    protected final ClassInfo findClassAlias(final String name) {\n-        ClassInfo ci \u003d null;\n-        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+    protected final AbstractClassInfo findClassAlias(final String name) {\n+        AbstractClassInfo ci \u003d null;\n+        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n         while (iterator.hasNext()) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n+            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n             ci \u003d paramMap.get(name);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final AbstractClassInfo findClassAlias(final String name) {\n        AbstractClassInfo ci \u003d null;\n        final Iterator\u003cMap\u003cString, AbstractClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, AbstractClassInfo\u003e paramMap \u003d iterator.next();\n            ci \u003d paramMap.get(name);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "53eddca5d166d828a4835fc3000a97a97ddd5efe": {
      "type": "Ybodychange",
      "commitMessage": "Replace all occurrences of FastStack with ArrayDeque, issue #86\n",
      "commitDate": "25/04/15 4:35 PM",
      "commitName": "53eddca5d166d828a4835fc3000a97a97ddd5efe",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "23/04/15 3:52 PM",
      "commitNameOld": "e30fa27dc496891a037c9104d280070a0fd73888",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 2.03,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     protected final ClassInfo findClassAlias(final String name)\n     {\n         ClassInfo ci \u003d null;\n-        for (int i \u003d typeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d typeParams.peek(i);\n+        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n+        while (iterator.hasNext()) {\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n             ci \u003d paramMap.get(name);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final ClassInfo findClassAlias(final String name)\n    {\n        ClassInfo ci \u003d null;\n        final Iterator\u003cMap\u003cString, ClassInfo\u003e\u003e iterator \u003d typeParams.descendingIterator();\n        while (iterator.hasNext()) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d iterator.next();\n            ci \u003d paramMap.get(name);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    protected final ClassInfo findClassAlias(final String aName)\n+    protected final ClassInfo findClassAlias(final String name)\n     {\n         ClassInfo ci \u003d null;\n-        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.peek(i);\n-            ci \u003d paramMap.get(aName);\n+        for (int i \u003d typeParams.size() - 1; i \u003e\u003d 0; i--) {\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d typeParams.peek(i);\n+            ci \u003d paramMap.get(name);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final ClassInfo findClassAlias(final String name)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d typeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d typeParams.peek(i);\n            ci \u003d paramMap.get(name);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {
            "oldValue": "[aName-String(modifiers-final)]",
            "newValue": "[name-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    protected final ClassInfo findClassAlias(final String aName)\n+    protected final ClassInfo findClassAlias(final String name)\n     {\n         ClassInfo ci \u003d null;\n-        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.peek(i);\n-            ci \u003d paramMap.get(aName);\n+        for (int i \u003d typeParams.size() - 1; i \u003e\u003d 0; i--) {\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d typeParams.peek(i);\n+            ci \u003d paramMap.get(name);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final ClassInfo findClassAlias(final String name)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d typeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d typeParams.peek(i);\n            ci \u003d paramMap.get(name);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final ClassInfo findClassAlias(final String aName)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.peek(i);\n            ci \u003d paramMap.get(aName);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java"
      }
    },
    "ff6c49e6a715d8372ac77a34aa77d9eaff6db154": {
      "type": "Ybodychange",
      "commitMessage": "This change makes a lot of sense.\n",
      "commitDate": "24/04/08 7:49 AM",
      "commitName": "ff6c49e6a715d8372ac77a34aa77d9eaff6db154",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "22/04/08 5:28 AM",
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.1,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final ClassInfo findClassAlias(final String aName)\n     {\n         ClassInfo ci \u003d null;\n         for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.get(i);\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.peek(i);\n             ci \u003d paramMap.get(aName);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final ClassInfo findClassAlias(final String aName)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.peek(i);\n            ci \u003d paramMap.get(aName);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Ybodychange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": "14/12/07 10:36 PM",
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final ClassInfo findClassAlias(final String aName)\n     {\n         ClassInfo ci \u003d null;\n         for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            final Map paramMap \u003d (Map) mTypeParams.get(i);\n-            ci \u003d (ClassInfo) paramMap.get(aName);\n+            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.get(i);\n+            ci \u003d paramMap.get(aName);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final ClassInfo findClassAlias(final String aName)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map\u003cString, ClassInfo\u003e paramMap \u003d mTypeParams.get(i);\n            ci \u003d paramMap.get(aName);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:33 PM",
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     protected final ClassInfo findClassAlias(final String aName)\n     {\n         ClassInfo ci \u003d null;\n         for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n-            Map paramMap \u003d (Map) mTypeParams.get(i);\n+            final Map paramMap \u003d (Map) mTypeParams.get(i);\n             ci \u003d (ClassInfo) paramMap.get(aName);\n             if (ci !\u003d null) {\n                 break;\n             }\n         }\n         return ci;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final ClassInfo findClassAlias(final String aName)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n            final Map paramMap \u003d (Map) mTypeParams.get(i);\n            ci \u003d (ClassInfo) paramMap.get(aName);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": {
      "type": "Yintroduced",
      "commitMessage": "Fixed 1249707: AbstractTypeAwareCheck doesn\u0027t work with types from typeparm\n\nSome pretty big refactoring for typeaware checks performed.\nAlso added handling for type params.  Current handling algorithm\nhas some preconditions and restriction, but it works for most cases\n(not sure I\u0027ve covered all situation when type param will have name\nof real exception, but I do not think it is critical for now :)\n\nAlso, I\u0027ve added column number for JavadocTag (mainly to be able use\nClassInfo for it).  So, JavadocTypeCheck also affected.\n\nAnd I\u0027ve added new logger for TreeWalker (if we have loggers we should\nuse them :)\n",
      "commitDate": "05/08/05 6:33 AM",
      "commitName": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,12 @@\n+    protected final ClassInfo findClassAlias(final String aName)\n+    {\n+        ClassInfo ci \u003d null;\n+        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n+            Map paramMap \u003d (Map) mTypeParams.get(i);\n+            ci \u003d (ClassInfo) paramMap.get(aName);\n+            if (ci !\u003d null) {\n+                break;\n+            }\n+        }\n+        return ci;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected final ClassInfo findClassAlias(final String aName)\n    {\n        ClassInfo ci \u003d null;\n        for (int i \u003d mTypeParams.size() - 1; i \u003e\u003d 0; i--) {\n            Map paramMap \u003d (Map) mTypeParams.get(i);\n            ci \u003d (ClassInfo) paramMap.get(aName);\n            if (ci !\u003d null) {\n                break;\n            }\n        }\n        return ci;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java"
    }
  }
}