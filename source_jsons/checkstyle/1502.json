{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EqualsAvoidNullCheck.java",
  "functionName": "leaveToken",
  "functionId": "leaveToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
  "functionStartLine": 179,
  "functionEndLine": 198,
  "numCommitsSeen": 58,
  "timeTaken": 1270,
  "changeHistory": [
    "eae1de67fff3ec77f58dab7d05275532d0be0042",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
    "0024de5711531372850e883c970414563ab8e3ad"
  ],
  "changeHistoryShort": {
    "eae1de67fff3ec77f58dab7d05275532d0be0042": "Ybodychange",
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": "Ybodychange",
    "0024de5711531372850e883c970414563ab8e3ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eae1de67fff3ec77f58dab7d05275532d0be0042": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6373: fixed frame tracking for EqualsAvoidNull",
      "commitDate": "12/01/19 4:16 PM",
      "commitName": "eae1de67fff3ec77f58dab7d05275532d0be0042",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/12/18 7:35 AM",
      "commitNameOld": "ea7b2dd0a9060d427273bd88909e370cb9f88436",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 25.36,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,20 @@\n     public void leaveToken(DetailAST ast) {\n         final int astType \u003d ast.getType();\n-        if (astType !\u003d TokenTypes.VARIABLE_DEF\n-                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n-                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL\n-                \u0026\u0026 astType !\u003d TokenTypes.SLIST\n-                \u0026\u0026 astType !\u003d TokenTypes.LITERAL_NEW\n-                || astType \u003d\u003d TokenTypes.LITERAL_NEW\n-                    \u0026\u0026 ast.findFirstToken(TokenTypes.OBJBLOCK) !\u003d null) {\n-            currentFrame \u003d currentFrame.getParent();\n-        }\n-        else if (astType \u003d\u003d TokenTypes.SLIST) {\n+        if (astType \u003d\u003d TokenTypes.SLIST) {\n             leaveSlist(ast);\n         }\n+        else if (astType \u003d\u003d TokenTypes.LITERAL_NEW) {\n+            leaveLiteralNew(ast);\n+        }\n+        else if (astType \u003d\u003d TokenTypes.OBJBLOCK) {\n+            final int parentType \u003d ast.getParent().getType();\n+            if (parentType !\u003d TokenTypes.CLASS_DEF \u0026\u0026 parentType !\u003d TokenTypes.ENUM_DEF) {\n+                currentFrame \u003d currentFrame.getParent();\n+            }\n+        }\n+        else if (astType !\u003d TokenTypes.VARIABLE_DEF\n+                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n+                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL) {\n+            currentFrame \u003d currentFrame.getParent();\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        final int astType \u003d ast.getType();\n        if (astType \u003d\u003d TokenTypes.SLIST) {\n            leaveSlist(ast);\n        }\n        else if (astType \u003d\u003d TokenTypes.LITERAL_NEW) {\n            leaveLiteralNew(ast);\n        }\n        else if (astType \u003d\u003d TokenTypes.OBJBLOCK) {\n            final int parentType \u003d ast.getParent().getType();\n            if (parentType !\u003d TokenTypes.CLASS_DEF \u0026\u0026 parentType !\u003d TokenTypes.ENUM_DEF) {\n                currentFrame \u003d currentFrame.getParent();\n            }\n        }\n        else if (astType !\u003d TokenTypes.VARIABLE_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL) {\n            currentFrame \u003d currentFrame.getParent();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "f0ed29b5cfef6adcec791cfdc236a5b850b685ee": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for simple cases",
      "commitDate": "09/11/17 6:45 AM",
      "commitName": "f0ed29b5cfef6adcec791cfdc236a5b850b685ee",
      "commitAuthor": "rnveach",
      "commitDateOld": "30/10/17 6:16 PM",
      "commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 9.56,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void leaveToken(DetailAST ast) {\n         final int astType \u003d ast.getType();\n         if (astType !\u003d TokenTypes.VARIABLE_DEF\n                 \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n                 \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL\n                 \u0026\u0026 astType !\u003d TokenTypes.SLIST\n                 \u0026\u0026 astType !\u003d TokenTypes.LITERAL_NEW\n                 || astType \u003d\u003d TokenTypes.LITERAL_NEW\n-                    \u0026\u0026 ast.branchContains(TokenTypes.LCURLY)) {\n+                    \u0026\u0026 ast.findFirstToken(TokenTypes.OBJBLOCK) !\u003d null) {\n             currentFrame \u003d currentFrame.getParent();\n         }\n         else if (astType \u003d\u003d TokenTypes.SLIST) {\n             leaveSlist(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        final int astType \u003d ast.getType();\n        if (astType !\u003d TokenTypes.VARIABLE_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL\n                \u0026\u0026 astType !\u003d TokenTypes.SLIST\n                \u0026\u0026 astType !\u003d TokenTypes.LITERAL_NEW\n                || astType \u003d\u003d TokenTypes.LITERAL_NEW\n                    \u0026\u0026 ast.findFirstToken(TokenTypes.OBJBLOCK) !\u003d null) {\n            currentFrame \u003d currentFrame.getParent();\n        }\n        else if (astType \u003d\u003d TokenTypes.SLIST) {\n            leaveSlist(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "0024de5711531372850e883c970414563ab8e3ad": {
      "type": "Yintroduced",
      "commitMessage": "reimplement EqualsAvoidNullCheck, #1377",
      "commitDate": "28/08/15 3:41 AM",
      "commitName": "0024de5711531372850e883c970414563ab8e3ad",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,15 @@\n+    public void leaveToken(DetailAST ast) {\n+        final int astType \u003d ast.getType();\n+        if (astType !\u003d TokenTypes.VARIABLE_DEF\n+                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n+                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL\n+                \u0026\u0026 astType !\u003d TokenTypes.SLIST\n+                \u0026\u0026 astType !\u003d TokenTypes.LITERAL_NEW\n+                || astType \u003d\u003d TokenTypes.LITERAL_NEW\n+                    \u0026\u0026 ast.branchContains(TokenTypes.LCURLY)) {\n+            currentFrame \u003d currentFrame.getParent();\n+        }\n+        else if (astType \u003d\u003d TokenTypes.SLIST) {\n+            leaveSlist(ast);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        final int astType \u003d ast.getType();\n        if (astType !\u003d TokenTypes.VARIABLE_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.PARAMETER_DEF\n                \u0026\u0026 astType !\u003d TokenTypes.METHOD_CALL\n                \u0026\u0026 astType !\u003d TokenTypes.SLIST\n                \u0026\u0026 astType !\u003d TokenTypes.LITERAL_NEW\n                || astType \u003d\u003d TokenTypes.LITERAL_NEW\n                    \u0026\u0026 ast.branchContains(TokenTypes.LCURLY)) {\n            currentFrame \u003d currentFrame.getParent();\n        }\n        else if (astType \u003d\u003d TokenTypes.SLIST) {\n            leaveSlist(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java"
    }
  }
}