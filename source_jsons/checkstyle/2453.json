{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnusedImportsCheck.java",
  "functionName": "matchPattern",
  "functionId": "matchPattern___identifier-String__pattern-Pattern",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
  "functionStartLine": 341,
  "functionEndLine": 348,
  "numCommitsSeen": 53,
  "timeTaken": 1404,
  "changeHistory": [
    "01c205b252a17606e0ff28c05c71bc00d73c7c81",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "e196edcf8b06f6c287c06f01748dafa7fd9892e4"
  ],
  "changeHistoryShort": {
    "01c205b252a17606e0ff28c05c71bc00d73c7c81": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "e196edcf8b06f6c287c06f01748dafa7fd9892e4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "01c205b252a17606e0ff28c05c71bc00d73c7c81": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3453: UnusedImportsCheck: handle qualified names in javadoc\n",
      "commitDate": "02/09/17 9:32 AM",
      "commitName": "01c205b252a17606e0ff28c05c71bc00d73c7c81",
      "commitAuthor": "Liam Miller-Cushon",
      "commitDateOld": "17/08/17 5:06 PM",
      "commitNameOld": "4acf7a786285d95d2c544f6d7daf6b31b86e0b44",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 15.68,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private static Set\u003cString\u003e matchPattern(String identifier, Pattern pattern) {\n         final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n         final Matcher matcher \u003d pattern.matcher(identifier);\n         while (matcher.find()) {\n-            references.add(matcher.group(1));\n+            references.add(topLevelType(matcher.group(1)));\n         }\n         return references;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cString\u003e matchPattern(String identifier, Pattern pattern) {\n        final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n        final Matcher matcher \u003d pattern.matcher(identifier);\n        while (matcher.find()) {\n            references.add(topLevelType(matcher.group(1)));\n        }\n        return references;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern) {\n+    private static Set\u003cString\u003e matchPattern(String identifier, Pattern pattern) {\n         final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n         final Matcher matcher \u003d pattern.matcher(identifier);\n         while (matcher.find()) {\n             references.add(matcher.group(1));\n         }\n         return references;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static Set\u003cString\u003e matchPattern(String identifier, Pattern pattern) {\n        final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n        final Matcher matcher \u003d pattern.matcher(identifier);\n        while (matcher.find()) {\n            references.add(matcher.group(1));\n        }\n        return references;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": {
      "type": "Ybodychange",
      "commitMessage": "Replace verbose type arguments with diamond type \u003c\u003e\n\nThis syntax is not supported under Java 6 or earlier, but Checkstyle codebase uses Java 7 already.\n",
      "commitDate": "15/02/15 8:22 AM",
      "commitName": "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/02/15 1:46 PM",
      "commitNameOld": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 6.77,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n     {\n-        final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n+        final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n         final Matcher matcher \u003d pattern.matcher(identifier);\n         while (matcher.find()) {\n             references.add(matcher.group(1));\n         }\n         return references;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n    {\n        final Set\u003cString\u003e references \u003d new HashSet\u003c\u003e();\n        final Matcher matcher \u003d pattern.matcher(identifier);\n        while (matcher.find()) {\n            references.add(matcher.group(1));\n        }\n        return references;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/06/14 10:01 PM",
          "commitNameOld": "e196edcf8b06f6c287c06f01748dafa7fd9892e4",
          "commitAuthorOld": "James Gorman",
          "daysBetweenCommits": 222.4,
          "commitsBetweenForRepo": 455,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private Set\u003cString\u003e matchPattern(String aIdentifier, Pattern aPattern)\n+    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n     {\n         final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n-        final Matcher matcher \u003d aPattern.matcher(aIdentifier);\n+        final Matcher matcher \u003d pattern.matcher(identifier);\n         while (matcher.find()) {\n             references.add(matcher.group(1));\n         }\n         return references;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n    {\n        final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n        final Matcher matcher \u003d pattern.matcher(identifier);\n        while (matcher.find()) {\n            references.add(matcher.group(1));\n        }\n        return references;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
          "extendedDetails": {
            "oldValue": "[aIdentifier-String, aPattern-Pattern]",
            "newValue": "[identifier-String, pattern-Pattern]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/06/14 10:01 PM",
          "commitNameOld": "e196edcf8b06f6c287c06f01748dafa7fd9892e4",
          "commitAuthorOld": "James Gorman",
          "daysBetweenCommits": 222.4,
          "commitsBetweenForRepo": 455,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private Set\u003cString\u003e matchPattern(String aIdentifier, Pattern aPattern)\n+    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n     {\n         final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n-        final Matcher matcher \u003d aPattern.matcher(aIdentifier);\n+        final Matcher matcher \u003d pattern.matcher(identifier);\n         while (matcher.find()) {\n             references.add(matcher.group(1));\n         }\n         return references;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private Set\u003cString\u003e matchPattern(String identifier, Pattern pattern)\n    {\n        final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n        final Matcher matcher \u003d pattern.matcher(identifier);\n        while (matcher.find()) {\n            references.add(matcher.group(1));\n        }\n        return references;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "e196edcf8b06f6c287c06f01748dafa7fd9892e4": {
      "type": "Yintroduced",
      "commitMessage": "Update UnusedImportsCheck to correctly detect classes in parameters and inline tags nested within block tags.\nfixing checkstyle issues\nFixing even more checkstyle issues\n",
      "commitDate": "10/06/14 10:01 PM",
      "commitName": "e196edcf8b06f6c287c06f01748dafa7fd9892e4",
      "commitAuthor": "James Gorman",
      "diff": "@@ -0,0 +1,9 @@\n+    private Set\u003cString\u003e matchPattern(String aIdentifier, Pattern aPattern)\n+    {\n+        final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n+        final Matcher matcher \u003d aPattern.matcher(aIdentifier);\n+        while (matcher.find()) {\n+            references.add(matcher.group(1));\n+        }\n+        return references;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e matchPattern(String aIdentifier, Pattern aPattern)\n    {\n        final Set\u003cString\u003e references \u003d new HashSet\u003cString\u003e();\n        final Matcher matcher \u003d aPattern.matcher(aIdentifier);\n        while (matcher.find()) {\n            references.add(matcher.group(1));\n        }\n        return references;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/UnusedImportsCheck.java"
    }
  }
}