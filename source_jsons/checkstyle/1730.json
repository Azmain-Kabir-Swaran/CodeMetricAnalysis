{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipleStringLiteralsCheck.java",
  "functionName": "isInIgnoreOccurrenceContext",
  "functionId": "isInIgnoreOccurrenceContext___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
  "functionStartLine": 207,
  "functionEndLine": 219,
  "numCommitsSeen": 76,
  "timeTaken": 1339,
  "changeHistory": [
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "a501b8d95ac2840ce201549e552f2cc540fde4ce"
  ],
  "changeHistoryShort": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "a501b8d95ac2840ce201549e552f2cc540fde4ce": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": "19/08/17 10:29 PM",
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "10/08/17 12:56 AM",
      "commitNameOld": "d243badf77c9c70a4e4ecde28a34ca8802de41b6",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 9.9,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,13 @@\n     private boolean isInIgnoreOccurrenceContext(DetailAST ast) {\n+        boolean isInIgnoreOccurrenceContext \u003d false;\n         for (DetailAST token \u003d ast;\n              token.getParent() !\u003d null;\n              token \u003d token.getParent()) {\n             final int type \u003d token.getType();\n             if (ignoreOccurrenceContext.get(type)) {\n-                return true;\n+                isInIgnoreOccurrenceContext \u003d true;\n+                break;\n             }\n         }\n-        return false;\n+        return isInIgnoreOccurrenceContext;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isInIgnoreOccurrenceContext(DetailAST ast) {\n        boolean isInIgnoreOccurrenceContext \u003d false;\n        for (DetailAST token \u003d ast;\n             token.getParent() !\u003d null;\n             token \u003d token.getParent()) {\n            final int type \u003d token.getType();\n            if (ignoreOccurrenceContext.get(type)) {\n                isInIgnoreOccurrenceContext \u003d true;\n                break;\n            }\n        }\n        return isInIgnoreOccurrenceContext;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.77,
          "commitsBetweenForRepo": 396,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)\n+    private boolean isInIgnoreOccurrenceContext(DetailAST ast)\n     {\n-        for (DetailAST token \u003d aAST;\n+        for (DetailAST token \u003d ast;\n              token.getParent() !\u003d null;\n              token \u003d token.getParent())\n         {\n             final int type \u003d token.getType();\n-            if (mIgnoreOccurrenceContext.get(type)) {\n+            if (ignoreOccurrenceContext.get(type)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isInIgnoreOccurrenceContext(DetailAST ast)\n    {\n        for (DetailAST token \u003d ast;\n             token.getParent() !\u003d null;\n             token \u003d token.getParent())\n        {\n            final int type \u003d token.getType();\n            if (ignoreOccurrenceContext.get(type)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.77,
          "commitsBetweenForRepo": 396,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)\n+    private boolean isInIgnoreOccurrenceContext(DetailAST ast)\n     {\n-        for (DetailAST token \u003d aAST;\n+        for (DetailAST token \u003d ast;\n              token.getParent() !\u003d null;\n              token \u003d token.getParent())\n         {\n             final int type \u003d token.getType();\n-            if (mIgnoreOccurrenceContext.get(type)) {\n+            if (ignoreOccurrenceContext.get(type)) {\n                 return true;\n             }\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isInIgnoreOccurrenceContext(DetailAST ast)\n    {\n        for (DetailAST token \u003d ast;\n             token.getParent() !\u003d null;\n             token \u003d token.getParent())\n        {\n            final int type \u003d token.getType();\n            if (ignoreOccurrenceContext.get(type)) {\n                return true;\n            }\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)\n    {\n        for (DetailAST token \u003d aAST;\n             token.getParent() !\u003d null;\n             token \u003d token.getParent())\n        {\n            final int type \u003d token.getType();\n            if (mIgnoreOccurrenceContext.get(type)) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java"
      }
    },
    "a501b8d95ac2840ce201549e552f2cc540fde4ce": {
      "type": "Yintroduced",
      "commitMessage": "fix for bug 1560940: MultipleStringLiteralCheck now ignores annotations by default. It is possible to retain the old behaviour by setting the new check property ignoreOccurrenceContext to an empty value.\n",
      "commitDate": "11/02/07 5:37 AM",
      "commitName": "a501b8d95ac2840ce201549e552f2cc540fde4ce",
      "commitAuthor": "Lars KÃ¼hne",
      "diff": "@@ -0,0 +1,13 @@\n+    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)\n+    {\n+        for (DetailAST token \u003d aAST;\n+             token.getParent() !\u003d null;\n+             token \u003d token.getParent())\n+        {\n+            final int type \u003d token.getType();\n+            if (mIgnoreOccurrenceContext.get(type)) {\n+                return true;\n+            }\n+        }\n+        return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isInIgnoreOccurrenceContext(DetailAST aAST)\n    {\n        for (DetailAST token \u003d aAST;\n             token.getParent() !\u003d null;\n             token \u003d token.getParent())\n        {\n            final int type \u003d token.getType();\n            if (mIgnoreOccurrenceContext.get(type)) {\n                return true;\n            }\n        }\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java"
    }
  }
}