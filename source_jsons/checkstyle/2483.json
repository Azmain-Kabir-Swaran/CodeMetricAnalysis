{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImportOrderCheck.java",
  "functionName": "getGroupNumber",
  "functionId": "getGroupNumber___patterns-Pattern[]__name-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
  "functionStartLine": 897,
  "functionEndLine": 919,
  "numCommitsSeen": 188,
  "timeTaken": 2984,
  "changeHistory": [
    "1a6dafadd522b48c59289afd780a1df007f72819",
    "7faa54908ee013e10a04676f91218ffb0d2d827a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "8d800ef546e11c6d593154f4071e39cdc4f66f34",
    "efccc132cea8ce1efad0e5318b8419cc603f8957",
    "2a1705e70d334700734b3df3ebefea0be878127a"
  ],
  "changeHistoryShort": {
    "1a6dafadd522b48c59289afd780a1df007f72819": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "7faa54908ee013e10a04676f91218ffb0d2d827a": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "8d800ef546e11c6d593154f4071e39cdc4f66f34": "Ybodychange",
    "efccc132cea8ce1efad0e5318b8419cc603f8957": "Ybodychange",
    "2a1705e70d334700734b3df3ebefea0be878127a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a6dafadd522b48c59289afd780a1df007f72819": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #5724: Groups for static imports\n",
      "commitDate": "01/07/18 7:45 AM",
      "commitName": "1a6dafadd522b48c59289afd780a1df007f72819",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #5724: Groups for static imports\n",
          "commitDate": "01/07/18 7:45 AM",
          "commitName": "1a6dafadd522b48c59289afd780a1df007f72819",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "04/06/18 9:52 PM",
          "commitNameOld": "f4e6424cd5892b72c96d35d7625560959583ea0d",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 26.41,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-    private int getGroupNumber(String name) {\n-        int bestIndex \u003d groups.length;\n+    private static int getGroupNumber(Pattern[] patterns, String name) {\n+        int bestIndex \u003d patterns.length;\n         int bestEnd \u003d -1;\n         int bestPos \u003d Integer.MAX_VALUE;\n \n         // find out what group this belongs in\n-        // loop over groups and get index\n-        for (int i \u003d 0; i \u003c groups.length; i++) {\n-            final Matcher matcher \u003d groups[i].matcher(name);\n+        // loop over patterns and get index\n+        for (int i \u003d 0; i \u003c patterns.length; i++) {\n+            final Matcher matcher \u003d patterns[i].matcher(name);\n             if (matcher.find()) {\n                 if (matcher.start() \u003c bestPos) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                     bestPos \u003d matcher.start();\n                 }\n                 else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                 }\n             }\n         }\n-\n         return bestIndex;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static int getGroupNumber(Pattern[] patterns, String name) {\n        int bestIndex \u003d patterns.length;\n        int bestEnd \u003d -1;\n        int bestPos \u003d Integer.MAX_VALUE;\n\n        // find out what group this belongs in\n        // loop over patterns and get index\n        for (int i \u003d 0; i \u003c patterns.length; i++) {\n            final Matcher matcher \u003d patterns[i].matcher(name);\n            if (matcher.find()) {\n                if (matcher.start() \u003c bestPos) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                    bestPos \u003d matcher.start();\n                }\n                else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                }\n            }\n        }\n        return bestIndex;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[name-String]",
            "newValue": "[patterns-Pattern[], name-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #5724: Groups for static imports\n",
          "commitDate": "01/07/18 7:45 AM",
          "commitName": "1a6dafadd522b48c59289afd780a1df007f72819",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "04/06/18 9:52 PM",
          "commitNameOld": "f4e6424cd5892b72c96d35d7625560959583ea0d",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 26.41,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-    private int getGroupNumber(String name) {\n-        int bestIndex \u003d groups.length;\n+    private static int getGroupNumber(Pattern[] patterns, String name) {\n+        int bestIndex \u003d patterns.length;\n         int bestEnd \u003d -1;\n         int bestPos \u003d Integer.MAX_VALUE;\n \n         // find out what group this belongs in\n-        // loop over groups and get index\n-        for (int i \u003d 0; i \u003c groups.length; i++) {\n-            final Matcher matcher \u003d groups[i].matcher(name);\n+        // loop over patterns and get index\n+        for (int i \u003d 0; i \u003c patterns.length; i++) {\n+            final Matcher matcher \u003d patterns[i].matcher(name);\n             if (matcher.find()) {\n                 if (matcher.start() \u003c bestPos) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                     bestPos \u003d matcher.start();\n                 }\n                 else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                 }\n             }\n         }\n-\n         return bestIndex;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static int getGroupNumber(Pattern[] patterns, String name) {\n        int bestIndex \u003d patterns.length;\n        int bestEnd \u003d -1;\n        int bestPos \u003d Integer.MAX_VALUE;\n\n        // find out what group this belongs in\n        // loop over patterns and get index\n        for (int i \u003d 0; i \u003c patterns.length; i++) {\n            final Matcher matcher \u003d patterns[i].matcher(name);\n            if (matcher.find()) {\n                if (matcher.start() \u003c bestPos) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                    bestPos \u003d matcher.start();\n                }\n                else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                }\n            }\n        }\n        return bestIndex;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5724: Groups for static imports\n",
          "commitDate": "01/07/18 7:45 AM",
          "commitName": "1a6dafadd522b48c59289afd780a1df007f72819",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "04/06/18 9:52 PM",
          "commitNameOld": "f4e6424cd5892b72c96d35d7625560959583ea0d",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 26.41,
          "commitsBetweenForRepo": 75,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,23 @@\n-    private int getGroupNumber(String name) {\n-        int bestIndex \u003d groups.length;\n+    private static int getGroupNumber(Pattern[] patterns, String name) {\n+        int bestIndex \u003d patterns.length;\n         int bestEnd \u003d -1;\n         int bestPos \u003d Integer.MAX_VALUE;\n \n         // find out what group this belongs in\n-        // loop over groups and get index\n-        for (int i \u003d 0; i \u003c groups.length; i++) {\n-            final Matcher matcher \u003d groups[i].matcher(name);\n+        // loop over patterns and get index\n+        for (int i \u003d 0; i \u003c patterns.length; i++) {\n+            final Matcher matcher \u003d patterns[i].matcher(name);\n             if (matcher.find()) {\n                 if (matcher.start() \u003c bestPos) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                     bestPos \u003d matcher.start();\n                 }\n                 else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                     bestIndex \u003d i;\n                     bestEnd \u003d matcher.end();\n                 }\n             }\n         }\n-\n         return bestIndex;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static int getGroupNumber(Pattern[] patterns, String name) {\n        int bestIndex \u003d patterns.length;\n        int bestEnd \u003d -1;\n        int bestPos \u003d Integer.MAX_VALUE;\n\n        // find out what group this belongs in\n        // loop over patterns and get index\n        for (int i \u003d 0; i \u003c patterns.length; i++) {\n            final Matcher matcher \u003d patterns[i].matcher(name);\n            if (matcher.find()) {\n                if (matcher.start() \u003c bestPos) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                    bestPos \u003d matcher.start();\n                }\n                else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                }\n            }\n        }\n        return bestIndex;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "7faa54908ee013e10a04676f91218ffb0d2d827a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5176: increase pitest coverage of import order to 100%\n",
      "commitDate": "23/11/17 7:47 PM",
      "commitName": "7faa54908ee013e10a04676f91218ffb0d2d827a",
      "commitAuthor": "BBG",
      "commitDateOld": "23/11/17 7:47 PM",
      "commitNameOld": "acfe3c0ad96616bee811de28528aaeac74a62319",
      "commitAuthorOld": "BBG",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,24 @@\n     private int getGroupNumber(String name) {\n         int bestIndex \u003d groups.length;\n-        int bestLength \u003d -1;\n-        int bestPos \u003d 0;\n+        int bestEnd \u003d -1;\n+        int bestPos \u003d Integer.MAX_VALUE;\n \n         // find out what group this belongs in\n         // loop over groups and get index\n         for (int i \u003d 0; i \u003c groups.length; i++) {\n             final Matcher matcher \u003d groups[i].matcher(name);\n-            while (matcher.find()) {\n-                final int length \u003d matcher.end() - matcher.start();\n-                if (length \u003e bestLength\n-                    || length \u003d\u003d bestLength \u0026\u0026 matcher.start() \u003c bestPos) {\n+            if (matcher.find()) {\n+                if (matcher.start() \u003c bestPos) {\n                     bestIndex \u003d i;\n-                    bestLength \u003d length;\n+                    bestEnd \u003d matcher.end();\n                     bestPos \u003d matcher.start();\n                 }\n+                else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n+                    bestIndex \u003d i;\n+                    bestEnd \u003d matcher.end();\n+                }\n             }\n         }\n \n         return bestIndex;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private int getGroupNumber(String name) {\n        int bestIndex \u003d groups.length;\n        int bestEnd \u003d -1;\n        int bestPos \u003d Integer.MAX_VALUE;\n\n        // find out what group this belongs in\n        // loop over groups and get index\n        for (int i \u003d 0; i \u003c groups.length; i++) {\n            final Matcher matcher \u003d groups[i].matcher(name);\n            if (matcher.find()) {\n                if (matcher.start() \u003c bestPos) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                    bestPos \u003d matcher.start();\n                }\n                else if (matcher.start() \u003d\u003d bestPos \u0026\u0026 matcher.end() \u003e bestEnd) {\n                    bestIndex \u003d i;\n                    bestEnd \u003d matcher.end();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "10/03/15 7:46 AM",
      "commitNameOld": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private int getGroupNumber(String name)\n     {\n         int bestIndex \u003d groups.length;\n         int bestLength \u003d -1;\n         int bestPos \u003d 0;\n \n         // find out what group this belongs in\n         // loop over groups and get index\n         for (int i \u003d 0; i \u003c groups.length; i++) {\n             final Matcher matcher \u003d groups[i].matcher(name);\n             while (matcher.find()) {\n                 final int length \u003d matcher.end() - matcher.start();\n-                if ((length \u003e bestLength)\n-                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n+                if (length \u003e bestLength\n+                    || length \u003d\u003d bestLength \u0026\u0026 matcher.start() \u003c bestPos)\n                 {\n                     bestIndex \u003d i;\n                     bestLength \u003d length;\n                     bestPos \u003d matcher.start();\n                 }\n             }\n         }\n \n         return bestIndex;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private int getGroupNumber(String name)\n    {\n        int bestIndex \u003d groups.length;\n        int bestLength \u003d -1;\n        int bestPos \u003d 0;\n\n        // find out what group this belongs in\n        // loop over groups and get index\n        for (int i \u003d 0; i \u003c groups.length; i++) {\n            final Matcher matcher \u003d groups[i].matcher(name);\n            while (matcher.find()) {\n                final int length \u003d matcher.end() - matcher.start();\n                if (length \u003e bestLength\n                    || length \u003d\u003d bestLength \u0026\u0026 matcher.start() \u003c bestPos)\n                {\n                    bestIndex \u003d i;\n                    bestLength \u003d length;\n                    bestPos \u003d matcher.start();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    private int getGroupNumber(String aName)\n+    private int getGroupNumber(String name)\n     {\n-        int bestIndex \u003d mGroups.length;\n+        int bestIndex \u003d groups.length;\n         int bestLength \u003d -1;\n         int bestPos \u003d 0;\n \n         // find out what group this belongs in\n-        // loop over mGroups and get index\n-        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n-            final Matcher matcher \u003d mGroups[i].matcher(aName);\n+        // loop over groups and get index\n+        for (int i \u003d 0; i \u003c groups.length; i++) {\n+            final Matcher matcher \u003d groups[i].matcher(name);\n             while (matcher.find()) {\n                 final int length \u003d matcher.end() - matcher.start();\n                 if ((length \u003e bestLength)\n                     || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                 {\n                     bestIndex \u003d i;\n                     bestLength \u003d length;\n                     bestPos \u003d matcher.start();\n                 }\n             }\n         }\n \n         return bestIndex;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private int getGroupNumber(String name)\n    {\n        int bestIndex \u003d groups.length;\n        int bestLength \u003d -1;\n        int bestPos \u003d 0;\n\n        // find out what group this belongs in\n        // loop over groups and get index\n        for (int i \u003d 0; i \u003c groups.length; i++) {\n            final Matcher matcher \u003d groups[i].matcher(name);\n            while (matcher.find()) {\n                final int length \u003d matcher.end() - matcher.start();\n                if ((length \u003e bestLength)\n                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                {\n                    bestIndex \u003d i;\n                    bestLength \u003d length;\n                    bestPos \u003d matcher.start();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aName-String]",
            "newValue": "[name-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    private int getGroupNumber(String aName)\n+    private int getGroupNumber(String name)\n     {\n-        int bestIndex \u003d mGroups.length;\n+        int bestIndex \u003d groups.length;\n         int bestLength \u003d -1;\n         int bestPos \u003d 0;\n \n         // find out what group this belongs in\n-        // loop over mGroups and get index\n-        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n-            final Matcher matcher \u003d mGroups[i].matcher(aName);\n+        // loop over groups and get index\n+        for (int i \u003d 0; i \u003c groups.length; i++) {\n+            final Matcher matcher \u003d groups[i].matcher(name);\n             while (matcher.find()) {\n                 final int length \u003d matcher.end() - matcher.start();\n                 if ((length \u003e bestLength)\n                     || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                 {\n                     bestIndex \u003d i;\n                     bestLength \u003d length;\n                     bestPos \u003d matcher.start();\n                 }\n             }\n         }\n \n         return bestIndex;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private int getGroupNumber(String name)\n    {\n        int bestIndex \u003d groups.length;\n        int bestLength \u003d -1;\n        int bestPos \u003d 0;\n\n        // find out what group this belongs in\n        // loop over groups and get index\n        for (int i \u003d 0; i \u003c groups.length; i++) {\n            final Matcher matcher \u003d groups[i].matcher(name);\n            while (matcher.find()) {\n                final int length \u003d matcher.end() - matcher.start();\n                if ((length \u003e bestLength)\n                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                {\n                    bestIndex \u003d i;\n                    bestLength \u003d length;\n                    bestPos \u003d matcher.start();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private int getGroupNumber(String aName)\n    {\n        int bestIndex \u003d mGroups.length;\n        int bestLength \u003d -1;\n        int bestPos \u003d 0;\n\n        // find out what group this belongs in\n        // loop over mGroups and get index\n        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n            final Matcher matcher \u003d mGroups[i].matcher(aName);\n            while (matcher.find()) {\n                final int length \u003d matcher.end() - matcher.start();\n                if ((length \u003e bestLength)\n                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                {\n                    bestIndex \u003d i;\n                    bestLength \u003d length;\n                    bestPos \u003d matcher.start();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java"
      }
    },
    "8d800ef546e11c6d593154f4071e39cdc4f66f34": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced ImportOrder  to support using regular expressions for defining groups. Thanks to Martin von Gagern for patch #2782118.\n",
      "commitDate": "13/09/10 8:49 PM",
      "commitName": "8d800ef546e11c6d593154f4071e39cdc4f66f34",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "18/02/10 3:16 AM",
      "commitNameOld": "139609ac5d073ecb04381466f075f174b0aec8c9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 207.69,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,24 @@\n     private int getGroupNumber(String aName)\n     {\n+        int bestIndex \u003d mGroups.length;\n+        int bestLength \u003d -1;\n+        int bestPos \u003d 0;\n+\n         // find out what group this belongs in\n         // loop over mGroups and get index\n         for (int i \u003d 0; i \u003c mGroups.length; i++) {\n-            if (aName.startsWith(mGroups[i])) {\n-                return i;\n+            final Matcher matcher \u003d mGroups[i].matcher(aName);\n+            while (matcher.find()) {\n+                final int length \u003d matcher.end() - matcher.start();\n+                if ((length \u003e bestLength)\n+                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n+                {\n+                    bestIndex \u003d i;\n+                    bestLength \u003d length;\n+                    bestPos \u003d matcher.start();\n+                }\n             }\n         }\n \n-        // no match, so we return the wildcard group\n-        return mWildcardGroupIndex;\n+        return bestIndex;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private int getGroupNumber(String aName)\n    {\n        int bestIndex \u003d mGroups.length;\n        int bestLength \u003d -1;\n        int bestPos \u003d 0;\n\n        // find out what group this belongs in\n        // loop over mGroups and get index\n        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n            final Matcher matcher \u003d mGroups[i].matcher(aName);\n            while (matcher.find()) {\n                final int length \u003d matcher.end() - matcher.start();\n                if ((length \u003e bestLength)\n                    || ((length \u003d\u003d bestLength) \u0026\u0026 (matcher.start() \u003c bestPos)))\n                {\n                    bestIndex \u003d i;\n                    bestLength \u003d length;\n                    bestPos \u003d matcher.start();\n                }\n            }\n        }\n\n        return bestIndex;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "efccc132cea8ce1efad0e5318b8419cc603f8957": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced ImportOrder check to support wildcard (\u0027*\u0027) groups. Thanks to Steve McKay for patch #2891032.\n",
      "commitDate": "11/12/09 9:42 PM",
      "commitName": "efccc132cea8ce1efad0e5318b8419cc603f8957",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "21/03/09 9:16 PM",
      "commitNameOld": "216fcb79f9f5bbd05244364e926f261a90e697d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 265.06,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     private int getGroupNumber(String aName)\n     {\n-        int i \u003d 0;\n-\n         // find out what group this belongs in\n         // loop over mGroups and get index\n-        for (; i \u003c mGroups.length; i++) {\n+        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n             if (aName.startsWith(mGroups[i])) {\n-                break;\n+                return i;\n             }\n         }\n \n-        return i;\n+        // no match, so we return the wildcard group\n+        return mWildcardGroupIndex;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private int getGroupNumber(String aName)\n    {\n        // find out what group this belongs in\n        // loop over mGroups and get index\n        for (int i \u003d 0; i \u003c mGroups.length; i++) {\n            if (aName.startsWith(mGroups[i])) {\n                return i;\n            }\n        }\n\n        // no match, so we return the wildcard group\n        return mWildcardGroupIndex;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java",
      "extendedDetails": {}
    },
    "2a1705e70d334700734b3df3ebefea0be878127a": {
      "type": "Yintroduced",
      "commitMessage": "ImportOrder check from Bill Schneider (request 745548)docs/releasenotes.html\n",
      "commitDate": "16/09/03 11:37 AM",
      "commitName": "2a1705e70d334700734b3df3ebefea0be878127a",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,14 @@\n+    private int getGroupNumber(String aName)\n+    {\n+        int i \u003d 0;\n+\n+        // find out what group this belongs in\n+        // loop over mGroups and get index\n+        for (; i \u003c mGroups.length; i++) {\n+            if (aName.startsWith(mGroups[i])) {\n+                break;\n+            }\n+        }\n+\n+        return i;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private int getGroupNumber(String aName)\n    {\n        int i \u003d 0;\n\n        // find out what group this belongs in\n        // loop over mGroups and get index\n        for (; i \u003c mGroups.length; i++) {\n            if (aName.startsWith(mGroups[i])) {\n                break;\n            }\n        }\n\n        return i;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportOrderCheck.java"
    }
  }
}