{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "combineExceptionInfo",
  "functionId": "combineExceptionInfo___list1-List__ExceptionInfo____list2-List__ExceptionInfo__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 817,
  "functionEndLine": 826,
  "numCommitsSeen": 121,
  "timeTaken": 967,
  "changeHistory": [
    "901e713030f194cce682dc98b2ae0d3447af9c97",
    "331b136df4615f1ca02716446503f97165455f3e"
  ],
  "changeHistoryShort": {
    "901e713030f194cce682dc98b2ae0d3447af9c97": "Ybodychange",
    "331b136df4615f1ca02716446503f97165455f3e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "901e713030f194cce682dc98b2ae0d3447af9c97": {
      "type": "Ybodychange",
      "commitMessage": "spelling: Fix typo in JavadocMethodCheck\n",
      "commitDate": "18/04/20 5:30 AM",
      "commitName": "901e713030f194cce682dc98b2ae0d3447af9c97",
      "commitAuthor": "wltan",
      "commitDateOld": "16/04/20 8:10 AM",
      "commitNameOld": "0294924e4066aaa00080a876ab1268a4c8fd7cb3",
      "commitAuthorOld": "Shrey Kumar Singh",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private static List\u003cExceptionInfo\u003e combineExceptionInfo(List\u003cExceptionInfo\u003e list1,\n                                                      List\u003cExceptionInfo\u003e list2) {\n         final List\u003cExceptionInfo\u003e result \u003d new ArrayList\u003c\u003e(list1);\n-        for (ExceptionInfo expectionInfo : list2) {\n-            if (result.stream().noneMatch(item -\u003e isExceptionInfoSame(item, expectionInfo))) {\n-                result.add(expectionInfo);\n+        for (ExceptionInfo exceptionInfo : list2) {\n+            if (result.stream().noneMatch(item -\u003e isExceptionInfoSame(item, exceptionInfo))) {\n+                result.add(exceptionInfo);\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cExceptionInfo\u003e combineExceptionInfo(List\u003cExceptionInfo\u003e list1,\n                                                     List\u003cExceptionInfo\u003e list2) {\n        final List\u003cExceptionInfo\u003e result \u003d new ArrayList\u003c\u003e(list1);\n        for (ExceptionInfo exceptionInfo : list2) {\n            if (result.stream().noneMatch(item -\u003e isExceptionInfoSame(item, exceptionInfo))) {\n                result.add(exceptionInfo);\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "331b136df4615f1ca02716446503f97165455f3e": {
      "type": "Yintroduced",
      "commitMessage": "Issue #7380: JavadocMethod should detect explicit throw in methods\n",
      "commitDate": "17/12/19 9:52 AM",
      "commitName": "331b136df4615f1ca02716446503f97165455f3e",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,10 @@\n+    private static List\u003cExceptionInfo\u003e combineExceptionInfo(List\u003cExceptionInfo\u003e list1,\n+                                                     List\u003cExceptionInfo\u003e list2) {\n+        final List\u003cExceptionInfo\u003e result \u003d new ArrayList\u003c\u003e(list1);\n+        for (ExceptionInfo expectionInfo : list2) {\n+            if (result.stream().noneMatch(item -\u003e isExceptionInfoSame(item, expectionInfo))) {\n+                result.add(expectionInfo);\n+            }\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cExceptionInfo\u003e combineExceptionInfo(List\u003cExceptionInfo\u003e list1,\n                                                     List\u003cExceptionInfo\u003e list2) {\n        final List\u003cExceptionInfo\u003e result \u003d new ArrayList\u003c\u003e(list1);\n        for (ExceptionInfo expectionInfo : list2) {\n            if (result.stream().noneMatch(item -\u003e isExceptionInfoSame(item, expectionInfo))) {\n                result.add(expectionInfo);\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java"
    }
  }
}