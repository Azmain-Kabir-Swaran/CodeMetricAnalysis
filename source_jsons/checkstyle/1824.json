{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RequireThisCheck.java",
  "functionName": "isReturnedVariable",
  "functionId": "isReturnedVariable___currentFrame-AbstractFrame__ident-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
  "functionStartLine": 743,
  "functionEndLine": 760,
  "numCommitsSeen": 91,
  "timeTaken": 1487,
  "changeHistory": [
    "77d1c444a343407b1a92b7491f33ba27162badb5",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25"
  ],
  "changeHistoryShort": {
    "77d1c444a343407b1a92b7491f33ba27162badb5": "Ybodychange",
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77d1c444a343407b1a92b7491f33ba27162badb5": {
      "type": "Ybodychange",
      "commitMessage": "minor: remove usage of antlr specific method in RequireThisCheck",
      "commitDate": "27/03/19 11:32 PM",
      "commitName": "77d1c444a343407b1a92b7491f33ba27162badb5",
      "commitAuthor": "rnveach",
      "commitDateOld": "25/03/19 12:28 PM",
      "commitNameOld": "7d2bf16884baafd8fd8c47d6b92e13187211d97e",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 2.46,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static boolean isReturnedVariable(AbstractFrame currentFrame, DetailAST ident) {\n         final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n         final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n         final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n         final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n \n         final Set\u003cDetailAST\u003e returnsInsideBlock \u003d getAllTokensOfType(definitionToken,\n             TokenTypes.LITERAL_RETURN, blockEndToken.getLineNo());\n \n         boolean returnedVariable \u003d false;\n         for (DetailAST returnToken : returnsInsideBlock) {\n-            returnedVariable \u003d returnToken.findAll(ident).hasMoreNodes();\n+            returnedVariable \u003d isAstInside(returnToken, ident);\n             if (returnedVariable) {\n                 break;\n             }\n         }\n         return returnedVariable;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isReturnedVariable(AbstractFrame currentFrame, DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        final Set\u003cDetailAST\u003e returnsInsideBlock \u003d getAllTokensOfType(definitionToken,\n            TokenTypes.LITERAL_RETURN, blockEndToken.getLineNo());\n\n        boolean returnedVariable \u003d false;\n        for (DetailAST returnToken : returnsInsideBlock) {\n            returnedVariable \u003d isAstInside(returnToken, ident);\n            if (returnedVariable) {\n                break;\n            }\n        }\n        return returnedVariable;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java",
      "extendedDetails": {}
    },
    "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2362: Add \u0027validateOnlyOverlapping\u0027 option for RequireThisCheck\n",
      "commitDate": "04/03/16 6:34 AM",
      "commitName": "d274db7b321e4624fbdc86f6f3d5cbf9c0830a25",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,18 @@\n+    private static boolean isReturnedVariable(AbstractFrame currentFrame, DetailAST ident) {\n+        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n+        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n+        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n+        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n+\n+        final Set\u003cDetailAST\u003e returnsInsideBlock \u003d getAllTokensOfType(definitionToken,\n+            TokenTypes.LITERAL_RETURN, blockEndToken.getLineNo());\n+\n+        boolean returnedVariable \u003d false;\n+        for (DetailAST returnToken : returnsInsideBlock) {\n+            returnedVariable \u003d returnToken.findAll(ident).hasMoreNodes();\n+            if (returnedVariable) {\n+                break;\n+            }\n+        }\n+        return returnedVariable;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isReturnedVariable(AbstractFrame currentFrame, DetailAST ident) {\n        final DetailAST blockFrameNameIdent \u003d currentFrame.getFrameNameIdent();\n        final DetailAST definitionToken \u003d blockFrameNameIdent.getParent();\n        final DetailAST blockStartToken \u003d definitionToken.findFirstToken(TokenTypes.SLIST);\n        final DetailAST blockEndToken \u003d getBlockEndToken(blockFrameNameIdent, blockStartToken);\n\n        final Set\u003cDetailAST\u003e returnsInsideBlock \u003d getAllTokensOfType(definitionToken,\n            TokenTypes.LITERAL_RETURN, blockEndToken.getLineNo());\n\n        boolean returnedVariable \u003d false;\n        for (DetailAST returnToken : returnsInsideBlock) {\n            returnedVariable \u003d returnToken.findAll(ident).hasMoreNodes();\n            if (returnedVariable) {\n                break;\n            }\n        }\n        return returnedVariable;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/RequireThisCheck.java"
    }
  }
}