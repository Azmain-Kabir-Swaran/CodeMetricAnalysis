{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParameterNameCheck.java",
  "functionName": "isOverriddenMethod",
  "functionId": "isOverriddenMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
  "functionStartLine": 289,
  "functionEndLine": 304,
  "numCommitsSeen": 42,
  "timeTaken": 1274,
  "changeHistory": [
    "d05e96f082e1a42c510b3dd21da82ef6316b088a",
    "eb5b977a475c2240db5efc83aec8973d734895eb",
    "75bbb441800de900e268cfa5ee82a64966b405b2",
    "8381754587bee0de49489e9bfb11e5912f664e87",
    "c9b625bcf0e456e4f9cc99a249860129cdae3df4"
  ],
  "changeHistoryShort": {
    "d05e96f082e1a42c510b3dd21da82ef6316b088a": "Ybodychange",
    "eb5b977a475c2240db5efc83aec8973d734895eb": "Ybodychange",
    "75bbb441800de900e268cfa5ee82a64966b405b2": "Ybodychange",
    "8381754587bee0de49489e9bfb11e5912f664e87": "Ybodychange",
    "c9b625bcf0e456e4f9cc99a249860129cdae3df4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d05e96f082e1a42c510b3dd21da82ef6316b088a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for naming",
      "commitDate": "28/12/18 11:11 AM",
      "commitName": "d05e96f082e1a42c510b3dd21da82ef6316b088a",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/07/18 12:10 PM",
      "commitNameOld": "6d6bcc02779c140cad181dd0c99ff5c7b645a54c",
      "commitAuthorOld": "kazachka",
      "daysBetweenCommits": 158.0,
      "commitsBetweenForRepo": 172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private static boolean isOverriddenMethod(DetailAST ast) {\n         boolean overridden \u003d false;\n \n         final DetailAST parent \u003d ast.getParent().getParent();\n         final Optional\u003cDetailAST\u003e annotation \u003d\n             Optional.ofNullable(parent.getFirstChild().getFirstChild());\n \n-        if (annotation.isPresent()\n-                \u0026\u0026 annotation.get().getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+        if (annotation.isPresent()) {\n             final Optional\u003cDetailAST\u003e overrideToken \u003d\n                 Optional.ofNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n             if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n                 overridden \u003d true;\n             }\n         }\n         return overridden;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isOverriddenMethod(DetailAST ast) {\n        boolean overridden \u003d false;\n\n        final DetailAST parent \u003d ast.getParent().getParent();\n        final Optional\u003cDetailAST\u003e annotation \u003d\n            Optional.ofNullable(parent.getFirstChild().getFirstChild());\n\n        if (annotation.isPresent()) {\n            final Optional\u003cDetailAST\u003e overrideToken \u003d\n                Optional.ofNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n            if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n                overridden \u003d true;\n            }\n        }\n        return overridden;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "eb5b977a475c2240db5efc83aec8973d734895eb": {
      "type": "Ybodychange",
      "commitMessage": "Pull #3293: Replace Guava\u0027s Optional with Java\u0027s native (#3293)\n\n",
      "commitDate": "23/06/16 5:38 AM",
      "commitName": "eb5b977a475c2240db5efc83aec8973d734895eb",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "16/06/16 2:33 PM",
      "commitNameOld": "40a0b5dcf7f9b45ae98ddcb1dec6e9e7c4eec676",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.63,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private static boolean isOverriddenMethod(DetailAST ast) {\n         boolean overridden \u003d false;\n \n         final DetailAST parent \u003d ast.getParent().getParent();\n         final Optional\u003cDetailAST\u003e annotation \u003d\n-            Optional.fromNullable(parent.getFirstChild().getFirstChild());\n+            Optional.ofNullable(parent.getFirstChild().getFirstChild());\n \n         if (annotation.isPresent() \u0026\u0026 annotation.get().getType() \u003d\u003d TokenTypes.ANNOTATION) {\n             final Optional\u003cDetailAST\u003e overrideToken \u003d\n-                Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n+                Optional.ofNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n             if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n                 overridden \u003d true;\n             }\n         }\n         return overridden;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isOverriddenMethod(DetailAST ast) {\n        boolean overridden \u003d false;\n\n        final DetailAST parent \u003d ast.getParent().getParent();\n        final Optional\u003cDetailAST\u003e annotation \u003d\n            Optional.ofNullable(parent.getFirstChild().getFirstChild());\n\n        if (annotation.isPresent() \u0026\u0026 annotation.get().getType() \u003d\u003d TokenTypes.ANNOTATION) {\n            final Optional\u003cDetailAST\u003e overrideToken \u003d\n                Optional.ofNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n            if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n                overridden \u003d true;\n            }\n        }\n        return overridden;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "75bbb441800de900e268cfa5ee82a64966b405b2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2678: Fix NPE in ParameterNameCheck\n",
      "commitDate": "09/12/15 11:59 AM",
      "commitName": "75bbb441800de900e268cfa5ee82a64966b405b2",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "18/11/15 5:53 AM",
      "commitNameOld": "c324b05dfdeb0ce41af355db95b7da3149f8f98a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 21.25,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n     private static boolean isOverriddenMethod(DetailAST ast) {\n         boolean overridden \u003d false;\n+\n         final DetailAST parent \u003d ast.getParent().getParent();\n-        if (parent.getFirstChild().getFirstChild() !\u003d null) {\n-            final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n-            if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n-                final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n-                if (\"Override\".equals(overrideToken.getText())) {\n-                    overridden \u003d true;\n-                }\n+        final Optional\u003cDetailAST\u003e annotation \u003d\n+            Optional.fromNullable(parent.getFirstChild().getFirstChild());\n+\n+        if (annotation.isPresent() \u0026\u0026 annotation.get().getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+            final Optional\u003cDetailAST\u003e overrideToken \u003d\n+                Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n+            if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n+                overridden \u003d true;\n             }\n         }\n         return overridden;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isOverriddenMethod(DetailAST ast) {\n        boolean overridden \u003d false;\n\n        final DetailAST parent \u003d ast.getParent().getParent();\n        final Optional\u003cDetailAST\u003e annotation \u003d\n            Optional.fromNullable(parent.getFirstChild().getFirstChild());\n\n        if (annotation.isPresent() \u0026\u0026 annotation.get().getType() \u003d\u003d TokenTypes.ANNOTATION) {\n            final Optional\u003cDetailAST\u003e overrideToken \u003d\n                Optional.fromNullable(annotation.get().findFirstToken(TokenTypes.IDENT));\n            if (overrideToken.isPresent() \u0026\u0026 \"Override\".equals(overrideToken.get().getText())) {\n                overridden \u003d true;\n            }\n        }\n        return overridden;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "8381754587bee0de49489e9bfb11e5912f664e87": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2290: Fix NPE in isOverriddenMethod during validation of methods with implicit modifiers\n",
      "commitDate": "05/11/15 8:59 PM",
      "commitName": "8381754587bee0de49489e9bfb11e5912f664e87",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "04/11/15 1:44 PM",
      "commitNameOld": "c9b625bcf0e456e4f9cc99a249860129cdae3df4",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 1.3,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,14 @@\n     private static boolean isOverriddenMethod(DetailAST ast) {\n         boolean overridden \u003d false;\n         final DetailAST parent \u003d ast.getParent().getParent();\n-        final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n-        if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n-            final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n-            if (\"Override\".equals(overrideToken.getText())) {\n-                overridden \u003d true;\n+        if (parent.getFirstChild().getFirstChild() !\u003d null) {\n+            final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n+            if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+                final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n+                if (\"Override\".equals(overrideToken.getText())) {\n+                    overridden \u003d true;\n+                }\n             }\n         }\n         return overridden;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isOverriddenMethod(DetailAST ast) {\n        boolean overridden \u003d false;\n        final DetailAST parent \u003d ast.getParent().getParent();\n        if (parent.getFirstChild().getFirstChild() !\u003d null) {\n            final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n            if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n                if (\"Override\".equals(overrideToken.getText())) {\n                    overridden \u003d true;\n                }\n            }\n        }\n        return overridden;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "c9b625bcf0e456e4f9cc99a249860129cdae3df4": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2290: Add \u0027ignoreOverridden\u0027 option to skip methods with @Override annotation\n",
      "commitDate": "04/11/15 1:44 PM",
      "commitName": "c9b625bcf0e456e4f9cc99a249860129cdae3df4",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,12 @@\n+    private static boolean isOverriddenMethod(DetailAST ast) {\n+        boolean overridden \u003d false;\n+        final DetailAST parent \u003d ast.getParent().getParent();\n+        final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n+        if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+            final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n+            if (\"Override\".equals(overrideToken.getText())) {\n+                overridden \u003d true;\n+            }\n+        }\n+        return overridden;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isOverriddenMethod(DetailAST ast) {\n        boolean overridden \u003d false;\n        final DetailAST parent \u003d ast.getParent().getParent();\n        final DetailAST annotation \u003d parent.getFirstChild().getFirstChild();\n        if (annotation.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n            final DetailAST overrideToken \u003d annotation.findFirstToken(TokenTypes.IDENT);\n            if (\"Override\".equals(overrideToken.getText())) {\n                overridden \u003d true;\n            }\n        }\n        return overridden;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java"
    }
  }
}