{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnnotationUtil.java",
  "functionName": "containsAnnotation",
  "functionId": "containsAnnotation___ast-DetailAST__annotations-List__String__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtil.java",
  "functionStartLine": 104,
  "functionEndLine": 129,
  "numCommitsSeen": 6,
  "timeTaken": 637,
  "changeHistory": [
    "20e7c597f4ddfdbd8b1025f909d354b9ddfcf3bb"
  ],
  "changeHistoryShort": {
    "20e7c597f4ddfdbd8b1025f909d354b9ddfcf3bb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "20e7c597f4ddfdbd8b1025f909d354b9ddfcf3bb": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5608: Adding support for allowedAnnotations in javadocTypeCheck\n",
      "commitDate": "13/11/18 9:09 PM",
      "commitName": "20e7c597f4ddfdbd8b1025f909d354b9ddfcf3bb",
      "commitAuthor": "Nikolaos Georgiou",
      "diff": "@@ -0,0 +1,26 @@\n+    public static boolean containsAnnotation(DetailAST ast, List\u003cString\u003e annotations) {\n+        if (ast \u003d\u003d null) {\n+            throw new IllegalArgumentException(THE_AST_IS_NULL);\n+        }\n+\n+        if (annotations \u003d\u003d null) {\n+            throw new IllegalArgumentException(\"annotations cannot be null\");\n+        }\n+\n+        boolean result \u003d false;\n+\n+        if (!annotations.isEmpty()) {\n+            final DetailAST firstMatchingAnnotation \u003d findFirstAnnotation(ast, annotationNode -\u003e {\n+                DetailAST identNode \u003d annotationNode.findFirstToken(TokenTypes.IDENT);\n+                if (identNode \u003d\u003d null) {\n+                    identNode \u003d annotationNode.findFirstToken(TokenTypes.DOT)\n+                            .findFirstToken(TokenTypes.IDENT);\n+                }\n+\n+                return annotations.contains(identNode.getText());\n+            });\n+            result \u003d firstMatchingAnnotation !\u003d null;\n+        }\n+\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static boolean containsAnnotation(DetailAST ast, List\u003cString\u003e annotations) {\n        if (ast \u003d\u003d null) {\n            throw new IllegalArgumentException(THE_AST_IS_NULL);\n        }\n\n        if (annotations \u003d\u003d null) {\n            throw new IllegalArgumentException(\"annotations cannot be null\");\n        }\n\n        boolean result \u003d false;\n\n        if (!annotations.isEmpty()) {\n            final DetailAST firstMatchingAnnotation \u003d findFirstAnnotation(ast, annotationNode -\u003e {\n                DetailAST identNode \u003d annotationNode.findFirstToken(TokenTypes.IDENT);\n                if (identNode \u003d\u003d null) {\n                    identNode \u003d annotationNode.findFirstToken(TokenTypes.DOT)\n                            .findFirstToken(TokenTypes.IDENT);\n                }\n\n                return annotations.contains(identNode.getText());\n            });\n            result \u003d firstMatchingAnnotation !\u003d null;\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/AnnotationUtil.java"
    }
  }
}