{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocPackageCheck.java",
  "functionName": "processFiltered",
  "functionId": "processFiltered___file-File__fileText-FileText",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
  "functionStartLine": 100,
  "functionEndLine": 125,
  "numCommitsSeen": 61,
  "timeTaken": 3288,
  "changeHistory": [
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
    "5d376284ef0c7b6cb292f206e52f948f3ada331d",
    "ff85e714498a63c4060121f0625be5c76b741a5a",
    "82979737c4201b4913ea30b9c9431e71783d1c02",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "2e4762f1716c8d12c9652aad68cb4558181bb60c",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
    "f38d8abd42c3e824635e542e6031b3da1997c02e",
    "49216b21a1c5fbff3ad93102891abffcda06f4c9",
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960"
  ],
  "changeHistoryShort": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": "Ybodychange",
    "5d376284ef0c7b6cb292f206e52f948f3ada331d": "Ymultichange(Yexceptionschange,Ybodychange)",
    "ff85e714498a63c4060121f0625be5c76b741a5a": "Ybodychange",
    "82979737c4201b4913ea30b9c9431e71783d1c02": "Yparameterchange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "2e4762f1716c8d12c9652aad68cb4558181bb60c": "Ybodychange",
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "f38d8abd42c3e824635e542e6031b3da1997c02e": "Ymultichange(Yparameterchange,Ybodychange)",
    "49216b21a1c5fbff3ad93102891abffcda06f4c9": "Ybodychange",
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6000: Fix zero line violations\n",
      "commitDate": "05/09/18 5:54 AM",
      "commitName": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthor": "Boxuan Li",
      "commitDateOld": "08/07/18 8:00 AM",
      "commitNameOld": "5ff596b55216218592e13248bb1c1d09ba606bac",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 58.91,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n     protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n         // Check if already processed directory\n         final File dir;\n         try {\n             dir \u003d file.getCanonicalFile().getParentFile();\n         }\n         catch (IOException ex) {\n             throw new CheckstyleException(\n                     \"Exception while getting canonical path to file \" + file.getPath(), ex);\n         }\n         final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n         if (!isDirChecked) {\n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n-                    log(0, MSG_LEGACY_PACKAGE_HTML);\n+                    log(1, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n-                log(0, MSG_PACKAGE_INFO);\n+                log(1, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n        // Check if already processed directory\n        final File dir;\n        try {\n            dir \u003d file.getCanonicalFile().getParentFile();\n        }\n        catch (IOException ex) {\n            throw new CheckstyleException(\n                    \"Exception while getting canonical path to file \" + file.getPath(), ex);\n        }\n        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n        if (!isDirChecked) {\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(1, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(1, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "5d376284ef0c7b6cb292f206e52f948f3ada331d": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #5127: Fixed NPE in JavadocPackageCheck when relative path is used to run checkstyle CLI\n",
      "commitDate": "23/11/17 10:23 AM",
      "commitName": "5d376284ef0c7b6cb292f206e52f948f3ada331d",
      "commitAuthor": "Artem Dudkin",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Issue #5127: Fixed NPE in JavadocPackageCheck when relative path is used to run checkstyle CLI\n",
          "commitDate": "23/11/17 10:23 AM",
          "commitName": "5d376284ef0c7b6cb292f206e52f948f3ada331d",
          "commitAuthor": "Artem Dudkin",
          "commitDateOld": "17/08/17 6:25 AM",
          "commitNameOld": "ff85e714498a63c4060121f0625be5c76b741a5a",
          "commitAuthorOld": "Andrew Kuchev",
          "daysBetweenCommits": 98.21,
          "commitsBetweenForRepo": 260,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,26 @@\n-    protected void processFiltered(File file, FileText fileText) {\n+    protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n         // Check if already processed directory\n-        final File dir \u003d file.getParentFile();\n+        final File dir;\n+        try {\n+            dir \u003d file.getCanonicalFile().getParentFile();\n+        }\n+        catch (IOException ex) {\n+            throw new CheckstyleException(\n+                    \"Exception while getting canonical path to file \" + file.getPath(), ex);\n+        }\n         final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n         if (!isDirChecked) {\n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n        // Check if already processed directory\n        final File dir;\n        try {\n            dir \u003d file.getCanonicalFile().getParentFile();\n        }\n        catch (IOException ex) {\n            throw new CheckstyleException(\n                    \"Exception while getting canonical path to file \" + file.getPath(), ex);\n        }\n        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n        if (!isDirChecked) {\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(0, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(0, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[CheckstyleException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5127: Fixed NPE in JavadocPackageCheck when relative path is used to run checkstyle CLI\n",
          "commitDate": "23/11/17 10:23 AM",
          "commitName": "5d376284ef0c7b6cb292f206e52f948f3ada331d",
          "commitAuthor": "Artem Dudkin",
          "commitDateOld": "17/08/17 6:25 AM",
          "commitNameOld": "ff85e714498a63c4060121f0625be5c76b741a5a",
          "commitAuthorOld": "Andrew Kuchev",
          "daysBetweenCommits": 98.21,
          "commitsBetweenForRepo": 260,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,26 @@\n-    protected void processFiltered(File file, FileText fileText) {\n+    protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n         // Check if already processed directory\n-        final File dir \u003d file.getParentFile();\n+        final File dir;\n+        try {\n+            dir \u003d file.getCanonicalFile().getParentFile();\n+        }\n+        catch (IOException ex) {\n+            throw new CheckstyleException(\n+                    \"Exception while getting canonical path to file \" + file.getPath(), ex);\n+        }\n         final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n         if (!isDirChecked) {\n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, FileText fileText) throws CheckstyleException {\n        // Check if already processed directory\n        final File dir;\n        try {\n            dir \u003d file.getCanonicalFile().getParentFile();\n        }\n        catch (IOException ex) {\n            throw new CheckstyleException(\n                    \"Exception while getting canonical path to file \" + file.getPath(), ex);\n        }\n        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n        if (!isDirChecked) {\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(0, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(0, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff85e714498a63c4060121f0625be5c76b741a5a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4945: JavadocPackageCheck should be thread-safe\n",
      "commitDate": "17/08/17 6:25 AM",
      "commitName": "ff85e714498a63c4060121f0625be5c76b741a5a",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": "06/07/17 1:22 PM",
      "commitNameOld": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 41.71,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     protected void processFiltered(File file, FileText fileText) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n-        if (!directoriesChecked.contains(dir)) {\n-            directoriesChecked.add(dir);\n-\n+        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n+        if (!isDirChecked) {\n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, FileText fileText) {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        final boolean isDirChecked \u003d !directoriesChecked.add(dir);\n        if (!isDirChecked) {\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(0, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(0, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "82979737c4201b4913ea30b9c9431e71783d1c02": {
      "type": "Yparameterchange",
      "commitMessage": "Issue #3034: FileText should not extends AbstractList\n",
      "commitDate": "06/07/17 1:22 PM",
      "commitName": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthor": "Timur",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 160.24,
      "commitsBetweenForRepo": 584,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    protected void processFiltered(File file, List\u003cString\u003e lines) {\n+    protected void processFiltered(File file, FileText fileText) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n         if (!directoriesChecked.contains(dir)) {\n             directoriesChecked.add(dir);\n \n             // Check for the preferred file.\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n \n             if (packageInfo.exists()) {\n                 if (packageHtml.exists()) {\n                     log(0, MSG_LEGACY_PACKAGE_HTML);\n                 }\n             }\n             else if (!allowLegacy || !packageHtml.exists()) {\n                 log(0, MSG_PACKAGE_INFO);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, FileText fileText) {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        if (!directoriesChecked.contains(dir)) {\n            directoriesChecked.add(dir);\n\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(0, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(0, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {
        "oldValue": "[file-File, lines-List\u003cString\u003e]",
        "newValue": "[file-File, fileText-FileText]"
      }
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 143.55,
      "commitsBetweenForRepo": 343,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines) {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n-        if (directoriesChecked.contains(dir)) {\n-            return;\n-        }\n-        directoriesChecked.add(dir);\n+        if (!directoriesChecked.contains(dir)) {\n+            directoriesChecked.add(dir);\n \n-        // Check for the preferred file.\n-        final File packageInfo \u003d new File(dir, \"package-info.java\");\n-        final File packageHtml \u003d new File(dir, \"package.html\");\n+            // Check for the preferred file.\n+            final File packageInfo \u003d new File(dir, \"package-info.java\");\n+            final File packageHtml \u003d new File(dir, \"package.html\");\n \n-        if (packageInfo.exists()) {\n-            if (packageHtml.exists()) {\n-                log(0, MSG_LEGACY_PACKAGE_HTML);\n+            if (packageInfo.exists()) {\n+                if (packageHtml.exists()) {\n+                    log(0, MSG_LEGACY_PACKAGE_HTML);\n+                }\n             }\n-        }\n-        else if (!allowLegacy || !packageHtml.exists()) {\n-            log(0, MSG_PACKAGE_INFO);\n+            else if (!allowLegacy || !packageHtml.exists()) {\n+                log(0, MSG_PACKAGE_INFO);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines) {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        if (!directoriesChecked.contains(dir)) {\n            directoriesChecked.add(dir);\n\n            // Check for the preferred file.\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n\n            if (packageInfo.exists()) {\n                if (packageHtml.exists()) {\n                    log(0, MSG_LEGACY_PACKAGE_HTML);\n                }\n            }\n            else if (!allowLegacy || !packageHtml.exists()) {\n                log(0, MSG_PACKAGE_INFO);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n         // Check if already processed directory\n         final File dir \u003d file.getParentFile();\n         if (directoriesChecked.contains(dir)) {\n             return;\n         }\n         directoriesChecked.add(dir);\n \n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n-                log(0, \"javadoc.legacyPackageHtml\");\n+                log(0, MSG_LEGACY_PACKAGE_HTML);\n             }\n         }\n         else if (!allowLegacy || !packageHtml.exists()) {\n-            log(0, \"javadoc.packageInfo\");\n+            log(0, MSG_PACKAGE_INFO);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        if (directoriesChecked.contains(dir)) {\n            return;\n        }\n        directoriesChecked.add(dir);\n\n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, MSG_LEGACY_PACKAGE_HTML);\n            }\n        }\n        else if (!allowLegacy || !packageHtml.exists()) {\n            log(0, MSG_PACKAGE_INFO);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 460,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n+    protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n         // Check if already processed directory\n-        final File dir \u003d aFile.getParentFile();\n-        if (mDirectoriesChecked.contains(dir)) {\n+        final File dir \u003d file.getParentFile();\n+        if (directoriesChecked.contains(dir)) {\n             return;\n         }\n-        mDirectoriesChecked.add(dir);\n+        directoriesChecked.add(dir);\n \n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n                 log(0, \"javadoc.legacyPackageHtml\");\n             }\n         }\n-        else if (!mAllowLegacy || !packageHtml.exists()) {\n+        else if (!allowLegacy || !packageHtml.exists()) {\n             log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        if (directoriesChecked.contains(dir)) {\n            return;\n        }\n        directoriesChecked.add(dir);\n\n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }\n        else if (!allowLegacy || !packageHtml.exists()) {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "[aFile-File, aLines-List\u003cString\u003e]",
            "newValue": "[file-File, lines-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 460,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n+    protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n         // Check if already processed directory\n-        final File dir \u003d aFile.getParentFile();\n-        if (mDirectoriesChecked.contains(dir)) {\n+        final File dir \u003d file.getParentFile();\n+        if (directoriesChecked.contains(dir)) {\n             return;\n         }\n-        mDirectoriesChecked.add(dir);\n+        directoriesChecked.add(dir);\n \n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n                 log(0, \"javadoc.legacyPackageHtml\");\n             }\n         }\n-        else if (!mAllowLegacy || !packageHtml.exists()) {\n+        else if (!allowLegacy || !packageHtml.exists()) {\n             log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        // Check if already processed directory\n        final File dir \u003d file.getParentFile();\n        if (directoriesChecked.contains(dir)) {\n            return;\n        }\n        directoriesChecked.add(dir);\n\n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }\n        else if (!allowLegacy || !packageHtml.exists()) {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n\n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }\n        else if (!mAllowLegacy || !packageHtml.exists()) {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java"
      }
    },
    "2e4762f1716c8d12c9652aad68cb4558181bb60c": {
      "type": "Ybodychange",
      "commitMessage": "consolidate charset handling.\n",
      "commitDate": "09/11/08 2:19 AM",
      "commitName": "2e4762f1716c8d12c9652aad68cb4558181bb60c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "09/11/08 1:37 AM",
      "commitNameOld": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,22 @@\n     protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n         // Check if already processed directory\n         final File dir \u003d aFile.getParentFile();\n         if (mDirectoriesChecked.contains(dir)) {\n             return;\n         }\n         mDirectoriesChecked.add(dir);\n-        \n+\n         // Check for the preferred file.\n         final File packageInfo \u003d new File(dir, \"package-info.java\");\n         final File packageHtml \u003d new File(dir, \"package.html\");\n \n         if (packageInfo.exists()) {\n             if (packageHtml.exists()) {\n                 log(0, \"javadoc.legacyPackageHtml\");\n             }\n-        }   \n-        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n         }\n-        else {\n+        else if (!mAllowLegacy || !packageHtml.exists()) {\n             log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n\n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }\n        else if (!mAllowLegacy || !packageHtml.exists()) {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "13b7c634337e38d20daa92ca9d5e069a2e72ec55": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
      "commitDate": "09/11/08 1:37 AM",
      "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
          "commitDate": "09/11/08 1:37 AM",
          "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "22/04/08 5:28 AM",
          "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 200.88,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,24 @@\n-    public void process(List\u003cFile\u003e aFiles)\n+    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n-        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n-        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n-        for (File dir : directories) {\n-            // Check for the preferred file.\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final File packageInfo \u003d new File(dir, \"package-info.java\");\n-            final File packageHtml \u003d new File(dir, \"package.html\");\n-            final String path;\n+        // Check if already processed directory\n+        final File dir \u003d aFile.getParentFile();\n+        if (mDirectoriesChecked.contains(dir)) {\n+            return;\n+        }\n+        mDirectoriesChecked.add(dir);\n+        \n+        // Check for the preferred file.\n+        final File packageInfo \u003d new File(dir, \"package-info.java\");\n+        final File packageHtml \u003d new File(dir, \"package.html\");\n \n-            if (packageInfo.exists()) {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                if (packageHtml.exists()) {\n-                    log(0, \"javadoc.legacyPackageHtml\");\n-                }\n+        if (packageInfo.exists()) {\n+            if (packageHtml.exists()) {\n+                log(0, \"javadoc.legacyPackageHtml\");\n             }\n-            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n-                path \u003d packageHtml.getPath();\n-                dispatcher.fireFileStarted(path);\n-            }\n-            else {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                log(0, \"javadoc.packageInfo\");\n-            }\n-            fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n+        }   \n+        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n+        }\n+        else {\n+            log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n        \n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }   \n        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n        }\n        else {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "process",
            "newValue": "processFiltered"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
          "commitDate": "09/11/08 1:37 AM",
          "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "22/04/08 5:28 AM",
          "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 200.88,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,24 @@\n-    public void process(List\u003cFile\u003e aFiles)\n+    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n-        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n-        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n-        for (File dir : directories) {\n-            // Check for the preferred file.\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final File packageInfo \u003d new File(dir, \"package-info.java\");\n-            final File packageHtml \u003d new File(dir, \"package.html\");\n-            final String path;\n+        // Check if already processed directory\n+        final File dir \u003d aFile.getParentFile();\n+        if (mDirectoriesChecked.contains(dir)) {\n+            return;\n+        }\n+        mDirectoriesChecked.add(dir);\n+        \n+        // Check for the preferred file.\n+        final File packageInfo \u003d new File(dir, \"package-info.java\");\n+        final File packageHtml \u003d new File(dir, \"package.html\");\n \n-            if (packageInfo.exists()) {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                if (packageHtml.exists()) {\n-                    log(0, \"javadoc.legacyPackageHtml\");\n-                }\n+        if (packageInfo.exists()) {\n+            if (packageHtml.exists()) {\n+                log(0, \"javadoc.legacyPackageHtml\");\n             }\n-            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n-                path \u003d packageHtml.getPath();\n-                dispatcher.fireFileStarted(path);\n-            }\n-            else {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                log(0, \"javadoc.packageInfo\");\n-            }\n-            fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n+        }   \n+        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n+        }\n+        else {\n+            log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n        \n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }   \n        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n        }\n        else {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "[aFiles-List\u003cFile\u003e]",
            "newValue": "[aFile-File, aLines-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
          "commitDate": "09/11/08 1:37 AM",
          "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "22/04/08 5:28 AM",
          "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 200.88,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,24 @@\n-    public void process(List\u003cFile\u003e aFiles)\n+    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n-        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n-        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n-        for (File dir : directories) {\n-            // Check for the preferred file.\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final File packageInfo \u003d new File(dir, \"package-info.java\");\n-            final File packageHtml \u003d new File(dir, \"package.html\");\n-            final String path;\n+        // Check if already processed directory\n+        final File dir \u003d aFile.getParentFile();\n+        if (mDirectoriesChecked.contains(dir)) {\n+            return;\n+        }\n+        mDirectoriesChecked.add(dir);\n+        \n+        // Check for the preferred file.\n+        final File packageInfo \u003d new File(dir, \"package-info.java\");\n+        final File packageHtml \u003d new File(dir, \"package.html\");\n \n-            if (packageInfo.exists()) {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                if (packageHtml.exists()) {\n-                    log(0, \"javadoc.legacyPackageHtml\");\n-                }\n+        if (packageInfo.exists()) {\n+            if (packageHtml.exists()) {\n+                log(0, \"javadoc.legacyPackageHtml\");\n             }\n-            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n-                path \u003d packageHtml.getPath();\n-                dispatcher.fireFileStarted(path);\n-            }\n-            else {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                log(0, \"javadoc.packageInfo\");\n-            }\n-            fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n+        }   \n+        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n+        }\n+        else {\n+            log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n        \n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }   \n        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n        }\n        else {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "A large refactoring to move the functionality of open/reporting on files into Checker and out of FileSetCheck. The advantages are:\n\n- reduces the logic required in each implementation of FileSetCheck.\n\n- reduces, but not eliminates, the number of times a file is reported as being audited.\n\n- reduces the amount of times a file needs to be read in from the file system.\n\nThe motivation is the desire to move more checks to be purely FileSetCheck based, like the TabCharacter check.\n\nI still need to do some tidying up of the documentation, and make Checker support \"charset\".\n",
          "commitDate": "09/11/08 1:37 AM",
          "commitName": "13b7c634337e38d20daa92ca9d5e069a2e72ec55",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "22/04/08 5:28 AM",
          "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 200.88,
          "commitsBetweenForRepo": 55,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,24 @@\n-    public void process(List\u003cFile\u003e aFiles)\n+    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n     {\n-        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n-        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n-        for (File dir : directories) {\n-            // Check for the preferred file.\n-            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n-            final File packageInfo \u003d new File(dir, \"package-info.java\");\n-            final File packageHtml \u003d new File(dir, \"package.html\");\n-            final String path;\n+        // Check if already processed directory\n+        final File dir \u003d aFile.getParentFile();\n+        if (mDirectoriesChecked.contains(dir)) {\n+            return;\n+        }\n+        mDirectoriesChecked.add(dir);\n+        \n+        // Check for the preferred file.\n+        final File packageInfo \u003d new File(dir, \"package-info.java\");\n+        final File packageHtml \u003d new File(dir, \"package.html\");\n \n-            if (packageInfo.exists()) {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                if (packageHtml.exists()) {\n-                    log(0, \"javadoc.legacyPackageHtml\");\n-                }\n+        if (packageInfo.exists()) {\n+            if (packageHtml.exists()) {\n+                log(0, \"javadoc.legacyPackageHtml\");\n             }\n-            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n-                path \u003d packageHtml.getPath();\n-                dispatcher.fireFileStarted(path);\n-            }\n-            else {\n-                path \u003d packageInfo.getPath();\n-                dispatcher.fireFileStarted(path);\n-                log(0, \"javadoc.packageInfo\");\n-            }\n-            fireErrors(path);\n-            dispatcher.fireFileFinished(path);\n+        }   \n+        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n+        }\n+        else {\n+            log(0, \"javadoc.packageInfo\");\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        // Check if already processed directory\n        final File dir \u003d aFile.getParentFile();\n        if (mDirectoriesChecked.contains(dir)) {\n            return;\n        }\n        mDirectoriesChecked.add(dir);\n        \n        // Check for the preferred file.\n        final File packageInfo \u003d new File(dir, \"package-info.java\");\n        final File packageHtml \u003d new File(dir, \"package.html\");\n\n        if (packageInfo.exists()) {\n            if (packageHtml.exists()) {\n                log(0, \"javadoc.legacyPackageHtml\");\n            }\n        }   \n        else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n        }\n        else {\n            log(0, \"javadoc.packageInfo\");\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f38d8abd42c3e824635e542e6031b3da1997c02e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Removed a native array in favour of a List\u003cFile\u003e -- was it worth it??\n\nAdded @Override where possible -- did this as I got bitten by a subtle bug when making the first change. The @Override would have prevented it.\n",
      "commitDate": "19/12/07 10:21 PM",
      "commitName": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Removed a native array in favour of a List\u003cFile\u003e -- was it worth it??\n\nAdded @Override where possible -- did this as I got bitten by a subtle bug when making the first change. The @Override would have prevented it.\n",
          "commitDate": "19/12/07 10:21 PM",
          "commitName": "f38d8abd42c3e824635e542e6031b3da1997c02e",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "18/12/07 8:46 PM",
          "commitNameOld": "49216b21a1c5fbff3ad93102891abffcda06f4c9",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 1.07,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-    public void process(File[] aFiles)\n+    public void process(List\u003cFile\u003e aFiles)\n     {\n-        final File[] javaFiles \u003d filter(aFiles);\n+        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n         final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n         for (File dir : directories) {\n             // Check for the preferred file.\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n             final String path;\n \n             if (packageInfo.exists()) {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 if (packageHtml.exists()) {\n                     log(0, \"javadoc.legacyPackageHtml\");\n                 }\n             }\n             else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                 path \u003d packageHtml.getPath();\n                 dispatcher.fireFileStarted(path);\n             }\n             else {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 log(0, \"javadoc.packageInfo\");\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void process(List\u003cFile\u003e aFiles)\n    {\n        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n        for (File dir : directories) {\n            // Check for the preferred file.\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n            final String path;\n\n            if (packageInfo.exists()) {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                if (packageHtml.exists()) {\n                    log(0, \"javadoc.legacyPackageHtml\");\n                }\n            }\n            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                path \u003d packageHtml.getPath();\n                dispatcher.fireFileStarted(path);\n            }\n            else {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                log(0, \"javadoc.packageInfo\");\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "[aFiles-File[]]",
            "newValue": "[aFiles-List\u003cFile\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Removed a native array in favour of a List\u003cFile\u003e -- was it worth it??\n\nAdded @Override where possible -- did this as I got bitten by a subtle bug when making the first change. The @Override would have prevented it.\n",
          "commitDate": "19/12/07 10:21 PM",
          "commitName": "f38d8abd42c3e824635e542e6031b3da1997c02e",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "18/12/07 8:46 PM",
          "commitNameOld": "49216b21a1c5fbff3ad93102891abffcda06f4c9",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 1.07,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,31 @@\n-    public void process(File[] aFiles)\n+    public void process(List\u003cFile\u003e aFiles)\n     {\n-        final File[] javaFiles \u003d filter(aFiles);\n+        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n         final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n         for (File dir : directories) {\n             // Check for the preferred file.\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n             final String path;\n \n             if (packageInfo.exists()) {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 if (packageHtml.exists()) {\n                     log(0, \"javadoc.legacyPackageHtml\");\n                 }\n             }\n             else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                 path \u003d packageHtml.getPath();\n                 dispatcher.fireFileStarted(path);\n             }\n             else {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 log(0, \"javadoc.packageInfo\");\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void process(List\u003cFile\u003e aFiles)\n    {\n        final List\u003cFile\u003e javaFiles \u003d filter(aFiles);\n        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n        for (File dir : directories) {\n            // Check for the preferred file.\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n            final String path;\n\n            if (packageInfo.exists()) {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                if (packageHtml.exists()) {\n                    log(0, \"javadoc.legacyPackageHtml\");\n                }\n            }\n            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                path \u003d packageHtml.getPath();\n                dispatcher.fireFileStarted(path);\n            }\n            else {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                log(0, \"javadoc.packageInfo\");\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "49216b21a1c5fbff3ad93102891abffcda06f4c9": {
      "type": "Ybodychange",
      "commitMessage": "100% code coverage achieved. Not common. :-)\n",
      "commitDate": "18/12/07 8:46 PM",
      "commitName": "49216b21a1c5fbff3ad93102891abffcda06f4c9",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "18/12/07 8:21 PM",
      "commitNameOld": "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,31 @@\n     public void process(File[] aFiles)\n     {\n         final File[] javaFiles \u003d filter(aFiles);\n         final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n         for (File dir : directories) {\n             // Check for the preferred file.\n             final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n             final File packageInfo \u003d new File(dir, \"package-info.java\");\n             final File packageHtml \u003d new File(dir, \"package.html\");\n             final String path;\n \n             if (packageInfo.exists()) {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 if (packageHtml.exists()) {\n                     log(0, \"javadoc.legacyPackageHtml\");\n-                    System.out.println(\"PANIC\");\n                 }\n             }\n             else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                 path \u003d packageHtml.getPath();\n                 dispatcher.fireFileStarted(path);\n             }\n             else {\n                 path \u003d packageInfo.getPath();\n                 dispatcher.fireFileStarted(path);\n                 log(0, \"javadoc.packageInfo\");\n             }\n             fireErrors(path);\n             dispatcher.fireFileFinished(path);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void process(File[] aFiles)\n    {\n        final File[] javaFiles \u003d filter(aFiles);\n        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n        for (File dir : directories) {\n            // Check for the preferred file.\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n            final String path;\n\n            if (packageInfo.exists()) {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                if (packageHtml.exists()) {\n                    log(0, \"javadoc.legacyPackageHtml\");\n                }\n            }\n            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                path \u003d packageHtml.getPath();\n                dispatcher.fireFileStarted(path);\n            }\n            else {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                log(0, \"javadoc.packageInfo\");\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java",
      "extendedDetails": {}
    },
    "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960": {
      "type": "Yintroduced",
      "commitMessage": "Implementation of a new JavadocPackageCheck - still need the test and the documentation.\n",
      "commitDate": "18/12/07 8:21 PM",
      "commitName": "d4e32973ad400ec7b4d2b908c6eb5ad3a621b960",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,32 @@\n+    public void process(File[] aFiles)\n+    {\n+        final File[] javaFiles \u003d filter(aFiles);\n+        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n+        for (File dir : directories) {\n+            // Check for the preferred file.\n+            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n+            final File packageInfo \u003d new File(dir, \"package-info.java\");\n+            final File packageHtml \u003d new File(dir, \"package.html\");\n+            final String path;\n+\n+            if (packageInfo.exists()) {\n+                path \u003d packageInfo.getPath();\n+                dispatcher.fireFileStarted(path);\n+                if (packageHtml.exists()) {\n+                    log(0, \"javadoc.legacyPackageHtml\");\n+                    System.out.println(\"PANIC\");\n+                }\n+            }\n+            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n+                path \u003d packageHtml.getPath();\n+                dispatcher.fireFileStarted(path);\n+            }\n+            else {\n+                path \u003d packageInfo.getPath();\n+                dispatcher.fireFileStarted(path);\n+                log(0, \"javadoc.packageInfo\");\n+            }\n+            fireErrors(path);\n+            dispatcher.fireFileFinished(path);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void process(File[] aFiles)\n    {\n        final File[] javaFiles \u003d filter(aFiles);\n        final Set\u003cFile\u003e directories \u003d getParentDirs(javaFiles);\n        for (File dir : directories) {\n            // Check for the preferred file.\n            final MessageDispatcher dispatcher \u003d getMessageDispatcher();\n            final File packageInfo \u003d new File(dir, \"package-info.java\");\n            final File packageHtml \u003d new File(dir, \"package.html\");\n            final String path;\n\n            if (packageInfo.exists()) {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                if (packageHtml.exists()) {\n                    log(0, \"javadoc.legacyPackageHtml\");\n                    System.out.println(\"PANIC\");\n                }\n            }\n            else if (mAllowLegacy \u0026\u0026 packageHtml.exists()) {\n                path \u003d packageHtml.getPath();\n                dispatcher.fireFileStarted(path);\n            }\n            else {\n                path \u003d packageInfo.getPath();\n                dispatcher.fireFileStarted(path);\n                log(0, \"javadoc.packageInfo\");\n            }\n            fireErrors(path);\n            dispatcher.fireFileFinished(path);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocPackageCheck.java"
    }
  }
}