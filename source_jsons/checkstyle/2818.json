{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommentsIndentationCheck.java",
  "functionName": "findPreviousStatement",
  "functionId": "findPreviousStatement___comment-DetailAST__root-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
  "functionStartLine": 809,
  "functionEndLine": 838,
  "numCommitsSeen": 78,
  "timeTaken": 1536,
  "changeHistory": [
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad"
  ],
  "changeHistoryShort": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": {
      "type": "Ymultichange(Yrename,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
      "commitDate": "30/05/16 6:08 AM",
      "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    private static DetailAST findPreviousStatementOfSingleLineComment(DetailAST comment,\n-                                                                      DetailAST root) {\n+    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n         DetailAST previousStatement \u003d null;\n         if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n             // ATTENTION: parent of the comment is below the comment in case block\n             // See https://github.com/checkstyle/checkstyle/issues/851\n             previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n         }\n         final DetailAST tokenWhichBeginsTheLine;\n         if (root.getType() \u003d\u003d TokenTypes.EXPR\n                 \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n             if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                 tokenWhichBeginsTheLine \u003d root.getFirstChild();\n             }\n             else {\n                 tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n             }\n         }\n         else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n             tokenWhichBeginsTheLine \u003d root.getFirstChild();\n         }\n         else {\n             tokenWhichBeginsTheLine \u003d root;\n         }\n         if (tokenWhichBeginsTheLine !\u003d null\n-                \u0026\u0026 isOnPreviousLine(comment, tokenWhichBeginsTheLine)\n-            ) {\n+                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n+                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n             previousStatement \u003d tokenWhichBeginsTheLine;\n         }\n         return previousStatement;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n        DetailAST previousStatement \u003d null;\n        if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n            // ATTENTION: parent of the comment is below the comment in case block\n            // See https://github.com/checkstyle/checkstyle/issues/851\n            previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n        }\n        final DetailAST tokenWhichBeginsTheLine;\n        if (root.getType() \u003d\u003d TokenTypes.EXPR\n                \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n            if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                tokenWhichBeginsTheLine \u003d root.getFirstChild();\n            }\n            else {\n                tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n            }\n        }\n        else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n            tokenWhichBeginsTheLine \u003d root.getFirstChild();\n        }\n        else {\n            tokenWhichBeginsTheLine \u003d root;\n        }\n        if (tokenWhichBeginsTheLine !\u003d null\n                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n            previousStatement \u003d tokenWhichBeginsTheLine;\n        }\n        return previousStatement;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "findPreviousStatementOfSingleLineComment",
            "newValue": "findPreviousStatement"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    private static DetailAST findPreviousStatementOfSingleLineComment(DetailAST comment,\n-                                                                      DetailAST root) {\n+    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n         DetailAST previousStatement \u003d null;\n         if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n             // ATTENTION: parent of the comment is below the comment in case block\n             // See https://github.com/checkstyle/checkstyle/issues/851\n             previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n         }\n         final DetailAST tokenWhichBeginsTheLine;\n         if (root.getType() \u003d\u003d TokenTypes.EXPR\n                 \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n             if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                 tokenWhichBeginsTheLine \u003d root.getFirstChild();\n             }\n             else {\n                 tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n             }\n         }\n         else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n             tokenWhichBeginsTheLine \u003d root.getFirstChild();\n         }\n         else {\n             tokenWhichBeginsTheLine \u003d root;\n         }\n         if (tokenWhichBeginsTheLine !\u003d null\n-                \u0026\u0026 isOnPreviousLine(comment, tokenWhichBeginsTheLine)\n-            ) {\n+                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n+                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n             previousStatement \u003d tokenWhichBeginsTheLine;\n         }\n         return previousStatement;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n        DetailAST previousStatement \u003d null;\n        if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n            // ATTENTION: parent of the comment is below the comment in case block\n            // See https://github.com/checkstyle/checkstyle/issues/851\n            previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n        }\n        final DetailAST tokenWhichBeginsTheLine;\n        if (root.getType() \u003d\u003d TokenTypes.EXPR\n                \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n            if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                tokenWhichBeginsTheLine \u003d root.getFirstChild();\n            }\n            else {\n                tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n            }\n        }\n        else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n            tokenWhichBeginsTheLine \u003d root.getFirstChild();\n        }\n        else {\n            tokenWhichBeginsTheLine \u003d root;\n        }\n        if (tokenWhichBeginsTheLine !\u003d null\n                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n            previousStatement \u003d tokenWhichBeginsTheLine;\n        }\n        return previousStatement;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    private static DetailAST findPreviousStatementOfSingleLineComment(DetailAST comment,\n-                                                                      DetailAST root) {\n+    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n         DetailAST previousStatement \u003d null;\n         if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n             // ATTENTION: parent of the comment is below the comment in case block\n             // See https://github.com/checkstyle/checkstyle/issues/851\n             previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n         }\n         final DetailAST tokenWhichBeginsTheLine;\n         if (root.getType() \u003d\u003d TokenTypes.EXPR\n                 \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n             if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                 tokenWhichBeginsTheLine \u003d root.getFirstChild();\n             }\n             else {\n                 tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n             }\n         }\n         else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n             tokenWhichBeginsTheLine \u003d root.getFirstChild();\n         }\n         else {\n             tokenWhichBeginsTheLine \u003d root;\n         }\n         if (tokenWhichBeginsTheLine !\u003d null\n-                \u0026\u0026 isOnPreviousLine(comment, tokenWhichBeginsTheLine)\n-            ) {\n+                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n+                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n             previousStatement \u003d tokenWhichBeginsTheLine;\n         }\n         return previousStatement;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private DetailAST findPreviousStatement(DetailAST comment, DetailAST root) {\n        DetailAST previousStatement \u003d null;\n        if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n            // ATTENTION: parent of the comment is below the comment in case block\n            // See https://github.com/checkstyle/checkstyle/issues/851\n            previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n        }\n        final DetailAST tokenWhichBeginsTheLine;\n        if (root.getType() \u003d\u003d TokenTypes.EXPR\n                \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n            if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                tokenWhichBeginsTheLine \u003d root.getFirstChild();\n            }\n            else {\n                tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n            }\n        }\n        else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n            tokenWhichBeginsTheLine \u003d root.getFirstChild();\n        }\n        else {\n            tokenWhichBeginsTheLine \u003d root;\n        }\n        if (tokenWhichBeginsTheLine !\u003d null\n                \u0026\u0026 !isComment(tokenWhichBeginsTheLine)\n                \u0026\u0026 isOnPreviousLineIgnoringComments(comment, tokenWhichBeginsTheLine)) {\n            previousStatement \u003d tokenWhichBeginsTheLine;\n        }\n        return previousStatement;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2078: Fix FP violations at the end of the block and in the middle of the method\n",
      "commitDate": "31/10/15 3:48 PM",
      "commitName": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,30 @@\n+    private static DetailAST findPreviousStatementOfSingleLineComment(DetailAST comment,\n+                                                                      DetailAST root) {\n+        DetailAST previousStatement \u003d null;\n+        if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n+            // ATTENTION: parent of the comment is below the comment in case block\n+            // See https://github.com/checkstyle/checkstyle/issues/851\n+            previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n+        }\n+        final DetailAST tokenWhichBeginsTheLine;\n+        if (root.getType() \u003d\u003d TokenTypes.EXPR\n+                \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n+            if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n+                tokenWhichBeginsTheLine \u003d root.getFirstChild();\n+            }\n+            else {\n+                tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n+            }\n+        }\n+        else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n+            tokenWhichBeginsTheLine \u003d root.getFirstChild();\n+        }\n+        else {\n+            tokenWhichBeginsTheLine \u003d root;\n+        }\n+        if (tokenWhichBeginsTheLine !\u003d null\n+                \u0026\u0026 isOnPreviousLine(comment, tokenWhichBeginsTheLine)) {\n+            previousStatement \u003d tokenWhichBeginsTheLine;\n+        }\n+        return previousStatement;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST findPreviousStatementOfSingleLineComment(DetailAST comment,\n                                                                      DetailAST root) {\n        DetailAST previousStatement \u003d null;\n        if (root.getLineNo() \u003e\u003d comment.getLineNo()) {\n            // ATTENTION: parent of the comment is below the comment in case block\n            // See https://github.com/checkstyle/checkstyle/issues/851\n            previousStatement \u003d getPrevStatementFromSwitchBlock(comment);\n        }\n        final DetailAST tokenWhichBeginsTheLine;\n        if (root.getType() \u003d\u003d TokenTypes.EXPR\n                \u0026\u0026 root.getFirstChild().getFirstChild() !\u003d null) {\n            if (root.getFirstChild().getType() \u003d\u003d TokenTypes.LITERAL_NEW) {\n                tokenWhichBeginsTheLine \u003d root.getFirstChild();\n            }\n            else {\n                tokenWhichBeginsTheLine \u003d findTokenWhichBeginsTheLine(root);\n            }\n        }\n        else if (root.getType() \u003d\u003d TokenTypes.PLUS) {\n            tokenWhichBeginsTheLine \u003d root.getFirstChild();\n        }\n        else {\n            tokenWhichBeginsTheLine \u003d root;\n        }\n        if (tokenWhichBeginsTheLine !\u003d null\n                \u0026\u0026 isOnPreviousLine(comment, tokenWhichBeginsTheLine)) {\n            previousStatement \u003d tokenWhichBeginsTheLine;\n        }\n        return previousStatement;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java"
    }
  }
}