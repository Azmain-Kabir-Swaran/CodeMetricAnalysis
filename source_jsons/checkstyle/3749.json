{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AutomaticBean.java",
  "functionName": "tryCopyProperty",
  "functionId": "tryCopyProperty___key-String__value-Object__recheck-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
  "functionStartLine": 213,
  "functionEndLine": 248,
  "numCommitsSeen": 119,
  "timeTaken": 1705,
  "changeHistory": [
    "906adae57d549bef09d8839f19376053b041f7e7",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "050d1e55a819d639fe9116ec3ebd99902530c3f9"
  ],
  "changeHistoryShort": {
    "906adae57d549bef09d8839f19376053b041f7e7": "Ymultichange(Yparameterchange,Ybodychange)",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": "Ybodychange",
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "050d1e55a819d639fe9116ec3ebd99902530c3f9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "906adae57d549bef09d8839f19376053b041f7e7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #4814: added try/catch to setting up TreeWalker children",
      "commitDate": "23/02/19 3:54 AM",
      "commitName": "906adae57d549bef09d8839f19376053b041f7e7",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4814: added try/catch to setting up TreeWalker children",
          "commitDate": "23/02/19 3:54 AM",
          "commitName": "906adae57d549bef09d8839f19376053b041f7e7",
          "commitAuthor": "rnveach",
          "commitDateOld": "15/01/19 5:46 AM",
          "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 38.92,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n+    private void tryCopyProperty(String key, Object value, boolean recheck)\n             throws CheckstyleException {\n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n-                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n-                            + \"does not exist, please check the documentation\", key, moduleName);\n+                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 \"\n+                            + \"does not exist, please check the documentation\", key);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException ex) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(Locale.ROOT,\n-                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n+                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027\", key, value);\n             throw new CheckstyleException(message, ex);\n         }\n         catch (final IllegalArgumentException | ConversionException ex) {\n             final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n-                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n+                    + \"\u0027%s\u0027\", value, key);\n             throw new CheckstyleException(message, ex);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void tryCopyProperty(String key, Object value, boolean recheck)\n            throws CheckstyleException {\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor descriptor \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (descriptor \u003d\u003d null) {\n                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 \"\n                            + \"does not exist, please check the documentation\", key);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException ex) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(Locale.ROOT,\n                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027\", key, value);\n            throw new CheckstyleException(message, ex);\n        }\n        catch (final IllegalArgumentException | ConversionException ex) {\n            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                    + \"\u0027%s\u0027\", value, key);\n            throw new CheckstyleException(message, ex);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
          "extendedDetails": {
            "oldValue": "[moduleName-String, key-String, value-Object, recheck-boolean]",
            "newValue": "[key-String, value-Object, recheck-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4814: added try/catch to setting up TreeWalker children",
          "commitDate": "23/02/19 3:54 AM",
          "commitName": "906adae57d549bef09d8839f19376053b041f7e7",
          "commitAuthor": "rnveach",
          "commitDateOld": "15/01/19 5:46 AM",
          "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 38.92,
          "commitsBetweenForRepo": 45,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n+    private void tryCopyProperty(String key, Object value, boolean recheck)\n             throws CheckstyleException {\n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n-                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n-                            + \"does not exist, please check the documentation\", key, moduleName);\n+                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 \"\n+                            + \"does not exist, please check the documentation\", key);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException ex) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(Locale.ROOT,\n-                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n+                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027\", key, value);\n             throw new CheckstyleException(message, ex);\n         }\n         catch (final IllegalArgumentException | ConversionException ex) {\n             final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n-                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n+                    + \"\u0027%s\u0027\", value, key);\n             throw new CheckstyleException(message, ex);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void tryCopyProperty(String key, Object value, boolean recheck)\n            throws CheckstyleException {\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor descriptor \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (descriptor \u003d\u003d null) {\n                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 \"\n                            + \"does not exist, please check the documentation\", key);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException ex) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(Locale.ROOT,\n                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027\", key, value);\n            throw new CheckstyleException(message, ex);\n        }\n        catch (final IllegalArgumentException | ConversionException ex) {\n            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                    + \"\u0027%s\u0027\", value, key);\n            throw new CheckstyleException(message, ex);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
          "extendedDetails": {}
        }
      ]
    },
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": "03/12/15 3:16 PM",
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "13/10/15 4:37 PM",
      "commitNameOld": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 50.99,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n                     final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n                             + \"does not exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n-                | NoSuchMethodException e) {\n+                | NoSuchMethodException ex) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(Locale.ROOT,\n                     \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n-            throw new CheckstyleException(message, e);\n+            throw new CheckstyleException(message, ex);\n         }\n-        catch (final IllegalArgumentException | ConversionException e) {\n+        catch (final IllegalArgumentException | ConversionException ex) {\n             final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                     + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n-            throw new CheckstyleException(message, e);\n+            throw new CheckstyleException(message, ex);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n            throws CheckstyleException {\n\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor descriptor \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (descriptor \u003d\u003d null) {\n                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n                            + \"does not exist, please check the documentation\", key, moduleName);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException ex) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(Locale.ROOT,\n                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n            throw new CheckstyleException(message, ex);\n        }\n        catch (final IllegalArgumentException | ConversionException ex) {\n            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n            throw new CheckstyleException(message, ex);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "be3e035ce39a610881cd2c1bfdce3eef101c2e3c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1217: fixes for violations from \u0027forbiddenapis\u0027 verification tool\n",
      "commitDate": "13/10/15 4:37 PM",
      "commitName": "be3e035ce39a610881cd2c1bfdce3eef101c2e3c",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "06/10/15 5:46 PM",
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 6.95,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (descriptor \u003d\u003d null) {\n-                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n-                            + \"exist, please check the documentation\", key, moduleName);\n+                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n+                            + \"does not exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n-            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n-                    key, value, moduleName);\n+            final String message \u003d String.format(Locale.ROOT,\n+                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n-            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n-                    + \"module %s\", value, key, moduleName);\n+            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n+                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n            throws CheckstyleException {\n\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor descriptor \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (descriptor \u003d\u003d null) {\n                    final String message \u003d String.format(Locale.ROOT, \"Property \u0027%s\u0027 in module %s \"\n                            + \"does not exist, please check the documentation\", key, moduleName);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException e) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(Locale.ROOT,\n                    \"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\", key, value, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n        catch (final IllegalArgumentException | ConversionException e) {\n            final String message \u003d String.format(Locale.ROOT, \"illegal value \u0027%s\u0027 for property \"\n                    + \"\u0027%s\u0027 of module %s\", value, key, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "30c3a362d45721e6925fe89ba71f0fe69d0fc471": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": "06/10/15 5:46 PM",
      "commitName": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "31/08/15 11:51 AM",
      "commitNameOld": "c899af31c112c07ea1244f6bbe2c5c6c56818ae5",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 36.25,
      "commitsBetweenForRepo": 231,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n-                final PropertyDescriptor pd \u003d\n+                final PropertyDescriptor descriptor \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n-                if (pd \u003d\u003d null) {\n+                if (descriptor \u003d\u003d null) {\n                     final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n                             + \"exist, please check the documentation\", key, moduleName);\n                     throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n             final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n                     key, value, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n             final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n                     + \"module %s\", value, key, moduleName);\n             throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n            throws CheckstyleException {\n\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor descriptor \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (descriptor \u003d\u003d null) {\n                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n                            + \"exist, please check the documentation\", key, moduleName);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException e) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n                    key, value, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n        catch (final IllegalArgumentException | ConversionException e) {\n            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n                    + \"module %s\", value, key, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,37 @@\n     private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n             throws CheckstyleException {\n \n         final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n \n         try {\n             if (recheck) {\n                 // BeanUtilsBean.copyProperties silently ignores missing setters\n                 // for key, so we have to go through great lengths here to\n                 // figure out if the bean property really exists.\n                 final PropertyDescriptor pd \u003d\n                         PropertyUtils.getPropertyDescriptor(this, key);\n                 if (pd \u003d\u003d null) {\n-                    throw new CheckstyleException(\n-                            \"Property \u0027\" + key + \"\u0027 in module \"\n-                             + moduleName\n-                             + \" does not exist, please check the documentation\");\n+                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n+                            + \"exist, please check the documentation\", key, moduleName);\n+                    throw new CheckstyleException(message);\n                 }\n             }\n             // finally we can set the bean property\n             beanUtils.copyProperty(this, key, value);\n         }\n         catch (final InvocationTargetException | IllegalAccessException\n                 | NoSuchMethodException e) {\n             // There is no way to catch IllegalAccessException | NoSuchMethodException\n             // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n             // so we have to join these exceptions with InvocationTargetException\n             // to satisfy UTs coverage\n-            throw new CheckstyleException(\n-                \"Cannot set property \u0027\" + key + \"\u0027 to \u0027\" + value\n-                + \"\u0027 in module \"  + moduleName, e);\n+            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n+                    key, value, moduleName);\n+            throw new CheckstyleException(message, e);\n         }\n         catch (final IllegalArgumentException | ConversionException e) {\n-            throw new CheckstyleException(\n-                \"illegal value \u0027\" + value + \"\u0027 for property \u0027\" + key\n-                + \"\u0027 of module \" + moduleName, e);\n+            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n+                    + \"module %s\", value, key, moduleName);\n+            throw new CheckstyleException(message, e);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n            throws CheckstyleException {\n\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor pd \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (pd \u003d\u003d null) {\n                    final String message \u003d String.format(\"Property \u0027%s\u0027 in module %s does not \"\n                            + \"exist, please check the documentation\", key, moduleName);\n                    throw new CheckstyleException(message);\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException e) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            final String message \u003d String.format(\"Cannot set property \u0027%s\u0027 to \u0027%s\u0027 in module %s\",\n                    key, value, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n        catch (final IllegalArgumentException | ConversionException e) {\n            final String message \u003d String.format(\"illegal value \u0027%s\u0027 for property \u0027%s\u0027 of \"\n                    + \"module %s\", value, key, moduleName);\n            throw new CheckstyleException(message, e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "050d1e55a819d639fe9116ec3ebd99902530c3f9": {
      "type": "Yintroduced",
      "commitMessage": "100% code coverage for AutomaticBean. #1295\n",
      "commitDate": "25/07/15 3:17 PM",
      "commitName": "050d1e55a819d639fe9116ec3ebd99902530c3f9",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,38 @@\n+    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n+            throws CheckstyleException {\n+\n+        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n+\n+        try {\n+            if (recheck) {\n+                // BeanUtilsBean.copyProperties silently ignores missing setters\n+                // for key, so we have to go through great lengths here to\n+                // figure out if the bean property really exists.\n+                final PropertyDescriptor pd \u003d\n+                        PropertyUtils.getPropertyDescriptor(this, key);\n+                if (pd \u003d\u003d null) {\n+                    throw new CheckstyleException(\n+                            \"Property \u0027\" + key + \"\u0027 in module \"\n+                             + moduleName\n+                             + \" does not exist, please check the documentation\");\n+                }\n+            }\n+            // finally we can set the bean property\n+            beanUtils.copyProperty(this, key, value);\n+        }\n+        catch (final InvocationTargetException | IllegalAccessException\n+                | NoSuchMethodException e) {\n+            // There is no way to catch IllegalAccessException | NoSuchMethodException\n+            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n+            // so we have to join these exceptions with InvocationTargetException\n+            // to satisfy UTs coverage\n+            throw new CheckstyleException(\n+                \"Cannot set property \u0027\" + key + \"\u0027 to \u0027\" + value\n+                + \"\u0027 in module \"  + moduleName, e);\n+        }\n+        catch (final IllegalArgumentException | ConversionException e) {\n+            throw new CheckstyleException(\n+                \"illegal value \u0027\" + value + \"\u0027 for property \u0027\" + key\n+                + \"\u0027 of module \" + moduleName, e);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void tryCopyProperty(String moduleName, String key, Object value, boolean recheck)\n            throws CheckstyleException {\n\n        final BeanUtilsBean beanUtils \u003d createBeanUtilsBean();\n\n        try {\n            if (recheck) {\n                // BeanUtilsBean.copyProperties silently ignores missing setters\n                // for key, so we have to go through great lengths here to\n                // figure out if the bean property really exists.\n                final PropertyDescriptor pd \u003d\n                        PropertyUtils.getPropertyDescriptor(this, key);\n                if (pd \u003d\u003d null) {\n                    throw new CheckstyleException(\n                            \"Property \u0027\" + key + \"\u0027 in module \"\n                             + moduleName\n                             + \" does not exist, please check the documentation\");\n                }\n            }\n            // finally we can set the bean property\n            beanUtils.copyProperty(this, key, value);\n        }\n        catch (final InvocationTargetException | IllegalAccessException\n                | NoSuchMethodException e) {\n            // There is no way to catch IllegalAccessException | NoSuchMethodException\n            // as we do PropertyUtils.getPropertyDescriptor before beanUtils.copyProperty\n            // so we have to join these exceptions with InvocationTargetException\n            // to satisfy UTs coverage\n            throw new CheckstyleException(\n                \"Cannot set property \u0027\" + key + \"\u0027 to \u0027\" + value\n                + \"\u0027 in module \"  + moduleName, e);\n        }\n        catch (final IllegalArgumentException | ConversionException e) {\n            throw new CheckstyleException(\n                \"illegal value \u0027\" + value + \"\u0027 for property \u0027\" + key\n                + \"\u0027 of module \" + moduleName, e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java"
    }
  }
}