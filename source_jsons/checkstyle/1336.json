{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SuppressWarningsHolder.java",
  "functionName": "getAnnotationValues",
  "functionId": "getAnnotationValues___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
  "functionStartLine": 487,
  "functionEndLine": 501,
  "numCommitsSeen": 95,
  "timeTaken": 2121,
  "changeHistory": [
    "de50d3465849b83d25910590e1f5f39a25fe6e2c",
    "7f8309ba36bb3c47b146f2cacda89d7509fa47f8",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "fbe0d8d932d74d39801d15e3305fa3ef83b5032a"
  ],
  "changeHistoryShort": {
    "de50d3465849b83d25910590e1f5f39a25fe6e2c": "Ybodychange",
    "7f8309ba36bb3c47b146f2cacda89d7509fa47f8": "Ybodychange",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": "Ybodychange",
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "fbe0d8d932d74d39801d15e3305fa3ef83b5032a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de50d3465849b83d25910590e1f5f39a25fe6e2c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.checks and com.puppycrawl.tools.checkstyle\n",
      "commitDate": "21/04/17 7:14 PM",
      "commitName": "de50d3465849b83d25910590e1f5f39a25fe6e2c",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "05/04/17 4:59 AM",
      "commitNameOld": "d4bd21d46ceda66dee90b820d9ad487d3ed0d40e",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n     private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n+        final List\u003cString\u003e annotationValues;\n         switch (ast.getType()) {\n             case TokenTypes.EXPR:\n-                return Collections.singletonList(getStringExpr(ast));\n-\n+                annotationValues \u003d Collections.singletonList(getStringExpr(ast));\n+                break;\n             case TokenTypes.ANNOTATION_ARRAY_INIT:\n-                return findAllExpressionsInChildren(ast);\n-\n+                annotationValues \u003d findAllExpressionsInChildren(ast);\n+                break;\n             default:\n                 throw new IllegalArgumentException(\n                         \"Expression or annotation array initializer AST expected: \" + ast);\n         }\n+        return annotationValues;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n        final List\u003cString\u003e annotationValues;\n        switch (ast.getType()) {\n            case TokenTypes.EXPR:\n                annotationValues \u003d Collections.singletonList(getStringExpr(ast));\n                break;\n            case TokenTypes.ANNOTATION_ARRAY_INIT:\n                annotationValues \u003d findAllExpressionsInChildren(ast);\n                break;\n            default:\n                throw new IllegalArgumentException(\n                        \"Expression or annotation array initializer AST expected: \" + ast);\n        }\n        return annotationValues;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
      "extendedDetails": {}
    },
    "7f8309ba36bb3c47b146f2cacda89d7509fa47f8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 4, collections) (#3461)\n\n",
      "commitDate": "27/09/16 6:28 AM",
      "commitName": "7f8309ba36bb3c47b146f2cacda89d7509fa47f8",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "20/09/16 7:52 PM",
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.44,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.EXPR:\n-                return ImmutableList.of(getStringExpr(ast));\n+                return Collections.singletonList(getStringExpr(ast));\n \n             case TokenTypes.ANNOTATION_ARRAY_INIT:\n                 return findAllExpressionsInChildren(ast);\n \n             default:\n                 throw new IllegalArgumentException(\n                         \"Expression or annotation array initializer AST expected: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.EXPR:\n                return Collections.singletonList(getStringExpr(ast));\n\n            case TokenTypes.ANNOTATION_ARRAY_INIT:\n                return findAllExpressionsInChildren(ast);\n\n            default:\n                throw new IllegalArgumentException(\n                        \"Expression or annotation array initializer AST expected: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
      "extendedDetails": {}
    },
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #46: switch case clauses should not have too many lines.\n",
      "commitDate": "14/10/15 5:52 PM",
      "commitName": "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "08/10/15 6:47 AM",
      "commitNameOld": "74e9b64d933a28eb3eb914245ed6f9c9961e7daf",
      "commitAuthorOld": "St√©phane Galland",
      "daysBetweenCommits": 6.46,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,13 @@\n     private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.EXPR:\n                 return ImmutableList.of(getStringExpr(ast));\n \n             case TokenTypes.ANNOTATION_ARRAY_INIT:\n-                final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n-                DetailAST childAST \u003d ast.getFirstChild();\n-                while (childAST !\u003d null) {\n-                    if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n-                        valueList.add(getStringExpr(childAST));\n-                    }\n-                    childAST \u003d childAST.getNextSibling();\n-                }\n-                return valueList;\n+                return findAllExpressionsInChildren(ast);\n \n             default:\n                 throw new IllegalArgumentException(\n                         \"Expression or annotation array initializer AST expected: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.EXPR:\n                return ImmutableList.of(getStringExpr(ast));\n\n            case TokenTypes.ANNOTATION_ARRAY_INIT:\n                return findAllExpressionsInChildren(ast);\n\n            default:\n                throw new IllegalArgumentException(\n                        \"Expression or annotation array initializer AST expected: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
      "extendedDetails": {}
    },
    "e8d0f037a2a300da55df6ab28d3459a6af9990d8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1290: Coverage has been increased to 100% in SuppressWarningsHolder.\n",
      "commitDate": "30/09/15 6:05 PM",
      "commitName": "e8d0f037a2a300da55df6ab28d3459a6af9990d8",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "29/09/15 4:52 PM",
      "commitNameOld": "d877cb15cfeae5f06a5d546dcc860c2aa32caac4",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.EXPR:\n                 return ImmutableList.of(getStringExpr(ast));\n \n             case TokenTypes.ANNOTATION_ARRAY_INIT:\n                 final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n                 DetailAST childAST \u003d ast.getFirstChild();\n                 while (childAST !\u003d null) {\n                     if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                         valueList.add(getStringExpr(childAST));\n                     }\n                     childAST \u003d childAST.getNextSibling();\n                 }\n                 return valueList;\n \n             default:\n+                throw new IllegalArgumentException(\n+                        \"Expression or annotation array initializer AST expected: \" + ast);\n         }\n-        throw new IllegalArgumentException(\n-            \"Expression or annotation array initializer AST expected: \" + ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.EXPR:\n                return ImmutableList.of(getStringExpr(ast));\n\n            case TokenTypes.ANNOTATION_ARRAY_INIT:\n                final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n                DetailAST childAST \u003d ast.getFirstChild();\n                while (childAST !\u003d null) {\n                    if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                        valueList.add(getStringExpr(childAST));\n                    }\n                    childAST \u003d childAST.getNextSibling();\n                }\n                return valueList;\n\n            default:\n                throw new IllegalArgumentException(\n                        \"Expression or annotation array initializer AST expected: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "30/12/14 9:11 AM",
          "commitNameOld": "98684b95a5eb4e6a8bad5ddb347de0c64b0d2df9",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 41,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private static List\u003cString\u003e getAnnotationValues(DetailAST aAST)\n+    private static List\u003cString\u003e getAnnotationValues(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.EXPR:\n-            return ImmutableList.of(getStringExpr(aAST));\n+            return ImmutableList.of(getStringExpr(ast));\n \n         case TokenTypes.ANNOTATION_ARRAY_INIT:\n             final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n-            DetailAST childAST \u003d aAST.getFirstChild();\n+            DetailAST childAST \u003d ast.getFirstChild();\n             while (childAST !\u003d null) {\n                 if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                     valueList.add(getStringExpr(childAST));\n                 }\n                 childAST \u003d childAST.getNextSibling();\n             }\n             return valueList;\n \n         default:\n         }\n         throw new IllegalArgumentException(\n-            \"Expression or annotation array initializer AST expected: \" + aAST);\n+            \"Expression or annotation array initializer AST expected: \" + ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.EXPR:\n            return ImmutableList.of(getStringExpr(ast));\n\n        case TokenTypes.ANNOTATION_ARRAY_INIT:\n            final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n            DetailAST childAST \u003d ast.getFirstChild();\n            while (childAST !\u003d null) {\n                if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                    valueList.add(getStringExpr(childAST));\n                }\n                childAST \u003d childAST.getNextSibling();\n            }\n            return valueList;\n\n        default:\n        }\n        throw new IllegalArgumentException(\n            \"Expression or annotation array initializer AST expected: \" + ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "30/12/14 9:11 AM",
          "commitNameOld": "98684b95a5eb4e6a8bad5ddb347de0c64b0d2df9",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 19.89,
          "commitsBetweenForRepo": 41,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private static List\u003cString\u003e getAnnotationValues(DetailAST aAST)\n+    private static List\u003cString\u003e getAnnotationValues(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.EXPR:\n-            return ImmutableList.of(getStringExpr(aAST));\n+            return ImmutableList.of(getStringExpr(ast));\n \n         case TokenTypes.ANNOTATION_ARRAY_INIT:\n             final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n-            DetailAST childAST \u003d aAST.getFirstChild();\n+            DetailAST childAST \u003d ast.getFirstChild();\n             while (childAST !\u003d null) {\n                 if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                     valueList.add(getStringExpr(childAST));\n                 }\n                 childAST \u003d childAST.getNextSibling();\n             }\n             return valueList;\n \n         default:\n         }\n         throw new IllegalArgumentException(\n-            \"Expression or annotation array initializer AST expected: \" + aAST);\n+            \"Expression or annotation array initializer AST expected: \" + ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.EXPR:\n            return ImmutableList.of(getStringExpr(ast));\n\n        case TokenTypes.ANNOTATION_ARRAY_INIT:\n            final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n            DetailAST childAST \u003d ast.getFirstChild();\n            while (childAST !\u003d null) {\n                if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                    valueList.add(getStringExpr(childAST));\n                }\n                childAST \u003d childAST.getNextSibling();\n            }\n            return valueList;\n\n        default:\n        }\n        throw new IllegalArgumentException(\n            \"Expression or annotation array initializer AST expected: \" + ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.EXPR:\n            return ImmutableList.of(getStringExpr(aAST));\n\n        case TokenTypes.ANNOTATION_ARRAY_INIT:\n            final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n            DetailAST childAST \u003d aAST.getFirstChild();\n            while (childAST !\u003d null) {\n                if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                    valueList.add(getStringExpr(childAST));\n                }\n                childAST \u003d childAST.getNextSibling();\n            }\n            return valueList;\n\n        default:\n        }\n        throw new IllegalArgumentException(\n            \"Expression or annotation array initializer AST expected: \" + aAST);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java"
      }
    },
    "fbe0d8d932d74d39801d15e3305fa3ef83b5032a": {
      "type": "Yintroduced",
      "commitMessage": "Apply patch# #156 Check suppression with @SuppressWarnings\n",
      "commitDate": "12/06/13 4:28 AM",
      "commitName": "fbe0d8d932d74d39801d15e3305fa3ef83b5032a",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,22 @@\n+    private static List\u003cString\u003e getAnnotationValues(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+        case TokenTypes.EXPR:\n+            return ImmutableList.of(getStringExpr(aAST));\n+\n+        case TokenTypes.ANNOTATION_ARRAY_INIT:\n+            final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n+            DetailAST childAST \u003d aAST.getFirstChild();\n+            while (childAST !\u003d null) {\n+                if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n+                    valueList.add(getStringExpr(childAST));\n+                }\n+                childAST \u003d childAST.getNextSibling();\n+            }\n+            return valueList;\n+\n+        default:\n+        }\n+        throw new IllegalArgumentException(\n+            \"Expression or annotation array initializer AST expected: \" + aAST);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getAnnotationValues(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.EXPR:\n            return ImmutableList.of(getStringExpr(aAST));\n\n        case TokenTypes.ANNOTATION_ARRAY_INIT:\n            final List\u003cString\u003e valueList \u003d Lists.newLinkedList();\n            DetailAST childAST \u003d aAST.getFirstChild();\n            while (childAST !\u003d null) {\n                if (childAST.getType() \u003d\u003d TokenTypes.EXPR) {\n                    valueList.add(getStringExpr(childAST));\n                }\n                childAST \u003d childAST.getNextSibling();\n            }\n            return valueList;\n\n        default:\n        }\n        throw new IllegalArgumentException(\n            \"Expression or annotation array initializer AST expected: \" + aAST);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SuppressWarningsHolder.java"
    }
  }
}