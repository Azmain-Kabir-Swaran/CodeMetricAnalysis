{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisibilityModifierCheck.java",
  "functionName": "getVisibilityScope",
  "functionId": "getVisibilityScope___variableDef-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
  "functionStartLine": 793,
  "functionEndLine": 803,
  "numCommitsSeen": 154,
  "timeTaken": 2823,
  "changeHistory": [
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
    "f8ba0d727928aaa1275758fa09114155faab0b9e",
    "f9f60d3142533c3eebff775e8eb1159935faaba1",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
    "08638b5f739d9929698860048c052da2d5f80209",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
    "32d19d680144540a83c5dde5588f5a7ac302f8e1",
    "59c9c64381dd92bc877f5a834dae7856603d5546",
    "220f6cb5d992429a1d71f867088c8e7ab39a453a"
  ],
  "changeHistoryShort": {
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": "Ybodychange",
    "f8ba0d727928aaa1275758fa09114155faab0b9e": "Ymultichange(Yparameterchange,Ybodychange)",
    "f9f60d3142533c3eebff775e8eb1159935faaba1": "Ymultichange(Ymodifierchange,Ybodychange)",
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": "Ybodychange",
    "08638b5f739d9929698860048c052da2d5f80209": "Yparameterchange",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": "Ybodychange",
    "32d19d680144540a83c5dde5588f5a7ac302f8e1": "Yfilerename",
    "59c9c64381dd92bc877f5a834dae7856603d5546": "Ybodychange",
    "220f6cb5d992429a1d71f867088c8e7ab39a453a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": "25/08/15 5:12 AM",
      "commitName": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "25/08/15 4:40 AM",
      "commitNameOld": "c4a7d06206d86f52665eae47af4db28dc59d93a3",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private static String getVisibilityScope(DetailAST variableDef) {\n         final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n-        String accessModifier \u003d \"package\";\n+        String accessModifier \u003d PACKAGE_ACCESS_MODIFIER;\n         for (final String modifier : EXPLICIT_MODS) {\n             if (modifiers.contains(modifier)) {\n                 accessModifier \u003d modifier;\n                 break;\n             }\n         }\n         return accessModifier;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getVisibilityScope(DetailAST variableDef) {\n        final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n        String accessModifier \u003d PACKAGE_ACCESS_MODIFIER;\n        for (final String modifier : EXPLICIT_MODS) {\n            if (modifiers.contains(modifier)) {\n                accessModifier \u003d modifier;\n                break;\n            }\n        }\n        return accessModifier;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "f8ba0d727928aaa1275758fa09114155faab0b9e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Fix BooleanExpressionComplexity check violations in Checkstyle code, issue #1052\n",
      "commitDate": "01/08/15 9:42 AM",
      "commitName": "f8ba0d727928aaa1275758fa09114155faab0b9e",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Fix BooleanExpressionComplexity check violations in Checkstyle code, issue #1052\n",
          "commitDate": "01/08/15 9:42 AM",
          "commitName": "f8ba0d727928aaa1275758fa09114155faab0b9e",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "22/07/15 10:58 PM",
          "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 9.45,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-    private static String getVisibilityScope(Set\u003cString\u003e modifiers) {\n+    private static String getVisibilityScope(DetailAST variableDef) {\n+        final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n         String accessModifier \u003d \"package\";\n         for (final String modifier : EXPLICIT_MODS) {\n             if (modifiers.contains(modifier)) {\n                 accessModifier \u003d modifier;\n                 break;\n             }\n         }\n         return accessModifier;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getVisibilityScope(DetailAST variableDef) {\n        final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n        String accessModifier \u003d \"package\";\n        for (final String modifier : EXPLICIT_MODS) {\n            if (modifiers.contains(modifier)) {\n                accessModifier \u003d modifier;\n                break;\n            }\n        }\n        return accessModifier;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[modifiers-Set\u003cString\u003e]",
            "newValue": "[variableDef-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix BooleanExpressionComplexity check violations in Checkstyle code, issue #1052\n",
          "commitDate": "01/08/15 9:42 AM",
          "commitName": "f8ba0d727928aaa1275758fa09114155faab0b9e",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "22/07/15 10:58 PM",
          "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 9.45,
          "commitsBetweenForRepo": 101,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-    private static String getVisibilityScope(Set\u003cString\u003e modifiers) {\n+    private static String getVisibilityScope(DetailAST variableDef) {\n+        final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n         String accessModifier \u003d \"package\";\n         for (final String modifier : EXPLICIT_MODS) {\n             if (modifiers.contains(modifier)) {\n                 accessModifier \u003d modifier;\n                 break;\n             }\n         }\n         return accessModifier;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getVisibilityScope(DetailAST variableDef) {\n        final Set\u003cString\u003e modifiers \u003d getModifiers(variableDef);\n        String accessModifier \u003d \"package\";\n        for (final String modifier : EXPLICIT_MODS) {\n            if (modifiers.contains(modifier)) {\n                accessModifier \u003d modifier;\n                break;\n            }\n        }\n        return accessModifier;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f9f60d3142533c3eebff775e8eb1159935faaba1": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
      "commitDate": "26/02/15 12:35 PM",
      "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
          "commitDate": "26/02/15 12:35 PM",
          "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/02/15 5:02 AM",
          "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 6.31,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n+    private static String getVisibilityScope(Set\u003cString\u003e modifiers)\n     {\n-        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n-        for (final String candidate : explicitModifiers) {\n-            if (modifiers.contains(candidate)) {\n-                return candidate;\n+        String accessModifier \u003d \"package\";\n+        for (final String modifier : EXPLICIT_MODS) {\n+            if (modifiers.contains(modifier)) {\n+                accessModifier \u003d modifier;\n+                break;\n             }\n         }\n-        return \"package\";\n+        return accessModifier;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getVisibilityScope(Set\u003cString\u003e modifiers)\n    {\n        String accessModifier \u003d \"package\";\n        for (final String modifier : EXPLICIT_MODS) {\n            if (modifiers.contains(modifier)) {\n                accessModifier \u003d modifier;\n                break;\n            }\n        }\n        return accessModifier;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Visibility Modifier Check, added option allows public immutable fields, issue #61\n",
          "commitDate": "26/02/15 12:35 PM",
          "commitName": "f9f60d3142533c3eebff775e8eb1159935faaba1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/02/15 5:02 AM",
          "commitNameOld": "e912c46b5bb5c085323930bd1e500b180c1bea8d",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 6.31,
          "commitsBetweenForRepo": 29,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,11 @@\n-    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n+    private static String getVisibilityScope(Set\u003cString\u003e modifiers)\n     {\n-        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n-        for (final String candidate : explicitModifiers) {\n-            if (modifiers.contains(candidate)) {\n-                return candidate;\n+        String accessModifier \u003d \"package\";\n+        for (final String modifier : EXPLICIT_MODS) {\n+            if (modifiers.contains(modifier)) {\n+                accessModifier \u003d modifier;\n+                break;\n             }\n         }\n-        return \"package\";\n+        return accessModifier;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getVisibilityScope(Set\u003cString\u003e modifiers)\n    {\n        String accessModifier \u003d \"package\";\n        for (final String modifier : EXPLICIT_MODS) {\n            if (modifiers.contains(modifier)) {\n                accessModifier \u003d modifier;\n                break;\n            }\n        }\n        return accessModifier;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, design, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n+    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n     {\n         final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n         for (final String candidate : explicitModifiers) {\n-            if (aModifiers.contains(candidate)) {\n+            if (modifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (final String candidate : explicitModifiers) {\n            if (modifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[aModifiers-Set\u003cString\u003e]",
            "newValue": "[modifiers-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, design, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "50c9bb69bcd93e6fbf272670e8b9d95f2f451c5f",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 461,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n+    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n     {\n         final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n         for (final String candidate : explicitModifiers) {\n-            if (aModifiers.contains(candidate)) {\n+            if (modifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String getVisibilityScope(Set\u003cString\u003e modifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (final String candidate : explicitModifiers) {\n            if (modifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (final String candidate : explicitModifiers) {\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java"
      }
    },
    "e50e1fcd1c17ba1f73d11df38382907cc163a1d1": {
      "type": "Ybodychange",
      "commitMessage": "Use the new syntactic sugar \"for loop\".\n\nEnd of the cosmetic changes.\n",
      "commitDate": "15/12/07 2:28 AM",
      "commitName": "e50e1fcd1c17ba1f73d11df38382907cc163a1d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/12/07 10:36 PM",
      "commitNameOld": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n     {\n         final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n-        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n-            final String candidate \u003d explicitModifiers[i];\n+        for (final String candidate : explicitModifiers) {\n             if (aModifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (final String candidate : explicitModifiers) {\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "08638b5f739d9929698860048c052da2d5f80209": {
      "type": "Yparameterchange",
      "commitMessage": "Start of adding generics.\n",
      "commitDate": "14/12/07 10:36 PM",
      "commitName": "08638b5f739d9929698860048c052da2d5f80209",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.66,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-    private String getVisibilityScope(Set aModifiers)\n+    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n     {\n         final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n         for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n             final String candidate \u003d explicitModifiers[i];\n             if (aModifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private String getVisibilityScope(Set\u003cString\u003e aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n            final String candidate \u003d explicitModifiers[i];\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {
        "oldValue": "[aModifiers-Set]",
        "newValue": "[aModifiers-Set\u003cString\u003e]"
      }
    },
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:47 AM",
      "commitName": "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.69,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private String getVisibilityScope(Set aModifiers)\n     {\n         final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n         for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n-            String candidate \u003d explicitModifiers[i];\n+            final String candidate \u003d explicitModifiers[i];\n             if (aModifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private String getVisibilityScope(Set aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n            final String candidate \u003d explicitModifiers[i];\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "32d19d680144540a83c5dde5588f5a7ac302f8e1": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Design checks\n",
      "commitDate": "04/06/03 4:52 PM",
      "commitName": "32d19d680144540a83c5dde5588f5a7ac302f8e1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/06/03 9:08 AM",
      "commitNameOld": "679f818267161d9501a73ffdcc0d991537233633",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private String getVisibilityScope(Set aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n            String candidate \u003d explicitModifiers[i];\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java"
      }
    },
    "59c9c64381dd92bc877f5a834dae7856603d5546": {
      "type": "Ybodychange",
      "commitMessage": "fixed style problems\n",
      "commitDate": "28/10/02 8:27 AM",
      "commitName": "59c9c64381dd92bc877f5a834dae7856603d5546",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "18/10/02 11:28 PM",
      "commitNameOld": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 9.42,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private String getVisibilityScope(Set aModifiers)\n     {\n-        String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n+        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n         for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n             String candidate \u003d explicitModifiers[i];\n             if (aModifiers.contains(candidate)) {\n                 return candidate;\n             }\n         }\n         return \"package\";\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private String getVisibilityScope(Set aModifiers)\n    {\n        final String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n            String candidate \u003d explicitModifiers[i];\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java",
      "extendedDetails": {}
    },
    "220f6cb5d992429a1d71f867088c8e7ab39a453a": {
      "type": "Yintroduced",
      "commitMessage": "ported member visibility checks\n",
      "commitDate": "16/10/02 5:07 PM",
      "commitName": "220f6cb5d992429a1d71f867088c8e7ab39a453a",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,11 @@\n+    private String getVisibilityScope(Set aModifiers)\n+    {\n+        String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n+        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n+            String candidate \u003d explicitModifiers[i];\n+            if (aModifiers.contains(candidate)) {\n+                return candidate;\n+            }\n+        }\n+        return \"package\";\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String getVisibilityScope(Set aModifiers)\n    {\n        String[] explicitModifiers \u003d {\"public\", \"private\", \"protected\"};\n        for (int i \u003d 0; i \u003c explicitModifiers.length; i++) {\n            String candidate \u003d explicitModifiers[i];\n            if (aModifiers.contains(candidate)) {\n                return candidate;\n            }\n        }\n        return \"package\";\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/VisibilityModifierCheck.java"
    }
  }
}