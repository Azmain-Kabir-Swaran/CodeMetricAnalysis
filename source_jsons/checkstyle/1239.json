{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyLineSeparatorCheck.java",
  "functionName": "hasEmptyLineBefore",
  "functionId": "hasEmptyLineBefore___token-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
  "functionStartLine": 710,
  "functionEndLine": 719,
  "numCommitsSeen": 60,
  "timeTaken": 1714,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
    "e803943ff515fbec5a2bbdae948af3dd018669a1",
    "b9f232ffe08853fbfd0239d53d683d4fe5c6b817",
    "d97a2df674716efb7deda50180ae933bdc46d68a",
    "0518b753a40f1857516b356654e5d01834af2109",
    "a5031acb330edaa2311acbce4945f7b44fc76b29"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1": "Ybodychange",
    "e803943ff515fbec5a2bbdae948af3dd018669a1": "Ybodychange",
    "b9f232ffe08853fbfd0239d53d683d4fe5c6b817": "Ybodychange",
    "d97a2df674716efb7deda50180ae933bdc46d68a": "Ymultichange(Yparameterchange,Ybodychange)",
    "0518b753a40f1857516b356654e5d01834af2109": "Ybodychange",
    "a5031acb330edaa2311acbce4945f7b44fc76b29": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private boolean hasEmptyLineBefore(DetailAST token) {\n         boolean result \u003d false;\n         final int lineNo \u003d token.getLineNo();\n         if (lineNo !\u003d 1) {\n             // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n             final String lineBefore \u003d getLines()[lineNo - 2];\n-            result \u003d CommonUtils.isBlank(lineBefore);\n+            result \u003d CommonUtil.isBlank(lineBefore);\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token) {\n        boolean result \u003d false;\n        final int lineNo \u003d token.getLineNo();\n        if (lineNo !\u003d 1) {\n            // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n            final String lineBefore \u003d getLines()[lineNo - 2];\n            result \u003d CommonUtil.isBlank(lineBefore);\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "7609e96cc998cca40b396eb3f2d7ae82f60fcce1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4342: Applied requested changes\n",
      "commitDate": "18/05/17 12:43 PM",
      "commitName": "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
      "commitAuthor": "Dmytro Kytsmen",
      "commitDateOld": "24/04/17 7:55 AM",
      "commitNameOld": "e803943ff515fbec5a2bbdae948af3dd018669a1",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 24.2,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     private boolean hasEmptyLineBefore(DetailAST token) {\n         boolean result \u003d false;\n         final int lineNo \u003d token.getLineNo();\n         if (lineNo !\u003d 1) {\n             // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n             final String lineBefore \u003d getLines()[lineNo - 2];\n-            result \u003d lineBefore.trim().isEmpty();\n+            result \u003d CommonUtils.isBlank(lineBefore);\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token) {\n        boolean result \u003d false;\n        final int lineNo \u003d token.getLineNo();\n        if (lineNo !\u003d 1) {\n            // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n            final String lineBefore \u003d getLines()[lineNo - 2];\n            result \u003d CommonUtils.isBlank(lineBefore);\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "e803943ff515fbec5a2bbdae948af3dd018669a1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.gui, com.puppycrawl.tools.checkstyle.whitespace, com.puppycrawl.tools.checkstyle.doclets\n",
      "commitDate": "24/04/17 7:55 AM",
      "commitName": "e803943ff515fbec5a2bbdae948af3dd018669a1",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 87.02,
      "commitsBetweenForRepo": 316,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n     private boolean hasEmptyLineBefore(DetailAST token) {\n+        boolean result \u003d false;\n         final int lineNo \u003d token.getLineNo();\n-        if (lineNo \u003d\u003d 1) {\n-            return false;\n+        if (lineNo !\u003d 1) {\n+            // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n+            final String lineBefore \u003d getLines()[lineNo - 2];\n+            result \u003d lineBefore.trim().isEmpty();\n         }\n-        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n-        final String lineBefore \u003d getLines()[lineNo - 2];\n-        return lineBefore.trim().isEmpty();\n+        return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token) {\n        boolean result \u003d false;\n        final int lineNo \u003d token.getLineNo();\n        if (lineNo !\u003d 1) {\n            // [lineNo - 2] is the number of the previous line as the numbering starts from zero.\n            final String lineBefore \u003d getLines()[lineNo - 2];\n            result \u003d lineBefore.trim().isEmpty();\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "b9f232ffe08853fbfd0239d53d683d4fe5c6b817": {
      "type": "Ybodychange",
      "commitMessage": "Fix bug with multiple imports, part of issue #706\n",
      "commitDate": "10/03/15 12:58 PM",
      "commitName": "b9f232ffe08853fbfd0239d53d683d4fe5c6b817",
      "commitAuthor": "liscju",
      "commitDateOld": "06/03/15 7:41 AM",
      "commitNameOld": "244eb9d0a9768cfba0b3b0561657ff3f56517c5d",
      "commitAuthorOld": "liscju",
      "daysBetweenCommits": 4.18,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,10 @@\n     private boolean hasEmptyLineBefore(DetailAST token)\n     {\n         final int lineNo \u003d token.getLineNo();\n+        if (lineNo \u003d\u003d 1) {\n+            return false;\n+        }\n         //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n         final String lineBefore \u003d getLines()[lineNo - 2];\n         return lineBefore.trim().isEmpty();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token)\n    {\n        final int lineNo \u003d token.getLineNo();\n        if (lineNo \u003d\u003d 1) {\n            return false;\n        }\n        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n        final String lineBefore \u003d getLines()[lineNo - 2];\n        return lineBefore.trim().isEmpty();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "d97a2df674716efb7deda50180ae933bdc46d68a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, whitespace, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "08/08/14 1:44 PM",
          "commitNameOld": "0518b753a40f1857516b356654e5d01834af2109",
          "commitAuthorOld": "Max",
          "daysBetweenCommits": 163.73,
          "commitsBetweenForRepo": 372,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean hasEmptyLineBefore(DetailAST aToken)\n+    private boolean hasEmptyLineBefore(DetailAST token)\n     {\n-        final int lineNo \u003d aToken.getLineNo();\n+        final int lineNo \u003d token.getLineNo();\n         //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n         final String lineBefore \u003d getLines()[lineNo - 2];\n         return lineBefore.trim().isEmpty();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token)\n    {\n        final int lineNo \u003d token.getLineNo();\n        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n        final String lineBefore \u003d getLines()[lineNo - 2];\n        return lineBefore.trim().isEmpty();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
          "extendedDetails": {
            "oldValue": "[aToken-DetailAST]",
            "newValue": "[token-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, whitespace, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "d97a2df674716efb7deda50180ae933bdc46d68a",
          "commitAuthor": "alexkravin",
          "commitDateOld": "08/08/14 1:44 PM",
          "commitNameOld": "0518b753a40f1857516b356654e5d01834af2109",
          "commitAuthorOld": "Max",
          "daysBetweenCommits": 163.73,
          "commitsBetweenForRepo": 372,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean hasEmptyLineBefore(DetailAST aToken)\n+    private boolean hasEmptyLineBefore(DetailAST token)\n     {\n-        final int lineNo \u003d aToken.getLineNo();\n+        final int lineNo \u003d token.getLineNo();\n         //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n         final String lineBefore \u003d getLines()[lineNo - 2];\n         return lineBefore.trim().isEmpty();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean hasEmptyLineBefore(DetailAST token)\n    {\n        final int lineNo \u003d token.getLineNo();\n        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n        final String lineBefore \u003d getLines()[lineNo - 2];\n        return lineBefore.trim().isEmpty();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "0518b753a40f1857516b356654e5d01834af2109": {
      "type": "Ybodychange",
      "commitMessage": "Update for EmptyLineSeparatorCheck #227\n",
      "commitDate": "08/08/14 1:44 PM",
      "commitName": "0518b753a40f1857516b356654e5d01834af2109",
      "commitAuthor": "Max",
      "commitDateOld": "06/08/14 10:49 PM",
      "commitNameOld": "a5031acb330edaa2311acbce4945f7b44fc76b29",
      "commitAuthorOld": "Max",
      "daysBetweenCommits": 1.62,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     private boolean hasEmptyLineBefore(DetailAST aToken)\n     {\n         final int lineNo \u003d aToken.getLineNo();\n         //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n         final String lineBefore \u003d getLines()[lineNo - 2];\n-        return lineBefore.isEmpty();\n+        return lineBefore.trim().isEmpty();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST aToken)\n    {\n        final int lineNo \u003d aToken.getLineNo();\n        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n        final String lineBefore \u003d getLines()[lineNo - 2];\n        return lineBefore.trim().isEmpty();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "a5031acb330edaa2311acbce4945f7b44fc76b29": {
      "type": "Yintroduced",
      "commitMessage": "EmptyLineSeparatorCheck was updated #218\n",
      "commitDate": "06/08/14 10:49 PM",
      "commitName": "a5031acb330edaa2311acbce4945f7b44fc76b29",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,7 @@\n+    private boolean hasEmptyLineBefore(DetailAST aToken)\n+    {\n+        final int lineNo \u003d aToken.getLineNo();\n+        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n+        final String lineBefore \u003d getLines()[lineNo - 2];\n+        return lineBefore.isEmpty();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasEmptyLineBefore(DetailAST aToken)\n    {\n        final int lineNo \u003d aToken.getLineNo();\n        //  [lineNo - 2] is the number of the previous line because the numbering starts from zero.\n        final String lineBefore \u003d getLines()[lineNo - 2];\n        return lineBefore.isEmpty();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java"
    }
  }
}