{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultilineDetector.java",
  "functionName": "processLines",
  "functionId": "processLines___fileText-FileText",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
  "functionStartLine": 78,
  "functionEndLine": 91,
  "numCommitsSeen": 62,
  "timeTaken": 2462,
  "changeHistory": [
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
    "5a4ebe6a7c99b9f83eadb8354f108e3c63632c4f",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
    "7d513f08c27c741105f712dc882fd4c3553f71e7",
    "edc63f0d669bc7e02eb3d9cbf83b6c7dcb92501c",
    "075b3084de3934dbf73f108110b36e01dcf10d1e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4"
  ],
  "changeHistoryShort": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": "Ybodychange",
    "5a4ebe6a7c99b9f83eadb8354f108e3c63632c4f": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ymultichange(Yparameterchange,Ybodychange)",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": "Ybodychange",
    "7d513f08c27c741105f712dc882fd4c3553f71e7": "Ybodychange",
    "edc63f0d669bc7e02eb3d9cbf83b6c7dcb92501c": "Ybodychange",
    "075b3084de3934dbf73f108110b36e01dcf10d1e": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": "Ymultichange(Yparameterchange,Ybodychange)",
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6000: Fix zero line violations\n",
      "commitDate": "05/09/18 5:54 AM",
      "commitName": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthor": "Boxuan Li",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 139.7,
      "commitsBetweenForRepo": 306,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void processLines(FileText fileText) {\n         text \u003d new FileText(fileText);\n         resetState();\n \n         final String format \u003d options.getFormat();\n         if (format \u003d\u003d null || format.isEmpty()) {\n-            options.getReporter().log(0, MSG_EMPTY);\n+            options.getReporter().log(1, MSG_EMPTY);\n         }\n         else {\n             matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText fileText) {\n        text \u003d new FileText(fileText);\n        resetState();\n\n        final String format \u003d options.getFormat();\n        if (format \u003d\u003d null || format.isEmpty()) {\n            options.getReporter().log(1, MSG_EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "5a4ebe6a7c99b9f83eadb8354f108e3c63632c4f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 1) (#3446)\n\n",
      "commitDate": "18/09/16 2:43 PM",
      "commitName": "5a4ebe6a7c99b9f83eadb8354f108e3c63632c4f",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "21/01/16 6:40 AM",
      "commitNameOld": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 241.29,
      "commitsBetweenForRepo": 522,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     public void processLines(FileText fileText) {\n         text \u003d new FileText(fileText);\n         resetState();\n \n-        if (Strings.isNullOrEmpty(options.getFormat())) {\n+        final String format \u003d options.getFormat();\n+        if (format \u003d\u003d null || format.isEmpty()) {\n             options.getReporter().log(0, MSG_EMPTY);\n         }\n         else {\n             matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText fileText) {\n        text \u003d new FileText(fileText);\n        resetState();\n\n        final String format \u003d options.getFormat();\n        if (format \u003d\u003d null || format.isEmpty()) {\n            options.getReporter().log(0, MSG_EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": "21/01/16 6:40 AM",
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public void processLines(FileText fileText) {\n         text \u003d new FileText(fileText);\n         resetState();\n \n         if (Strings.isNullOrEmpty(options.getFormat())) {\n-            options.getReporter().log(0, EMPTY);\n+            options.getReporter().log(0, MSG_EMPTY);\n         }\n         else {\n             matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText fileText) {\n        text \u003d new FileText(fileText);\n        resetState();\n\n        if (Strings.isNullOrEmpty(options.getFormat())) {\n            options.getReporter().log(0, MSG_EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this. #1555\n\nFixes `UnnecessaryThis` inspection violations after recent commits.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n",
      "commitDate": "14/08/15 8:42 PM",
      "commitName": "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "11/08/15 10:19 PM",
      "commitNameOld": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.93,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public void processLines(FileText fileText) {\n-        this.text \u003d new FileText(fileText);\n+        text \u003d new FileText(fileText);\n         resetState();\n \n         if (Strings.isNullOrEmpty(options.getFormat())) {\n             options.getReporter().log(0, EMPTY);\n         }\n         else {\n             matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText fileText) {\n        text \u003d new FileText(fileText);\n        resetState();\n\n        if (Strings.isNullOrEmpty(options.getFormat())) {\n            options.getReporter().log(0, EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": "11/08/15 10:19 PM",
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "10/08/15 3:46 AM",
          "commitNameOld": "aa0f77eb9294588b0d891dbde516bc43a5af4f5a",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 1.77,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    public void processLines(FileText text) {\n-        this.text \u003d new FileText(text);\n+    public void processLines(FileText fileText) {\n+        this.text \u003d new FileText(fileText);\n         resetState();\n \n         if (Strings.isNullOrEmpty(options.getFormat())) {\n             options.getReporter().log(0, EMPTY);\n         }\n         else {\n-            matcher \u003d options.getPattern().matcher(text.getFullText());\n+            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText fileText) {\n        this.text \u003d new FileText(fileText);\n        resetState();\n\n        if (Strings.isNullOrEmpty(options.getFormat())) {\n            options.getReporter().log(0, EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {
            "oldValue": "[text-FileText]",
            "newValue": "[fileText-FileText]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "10/08/15 3:46 AM",
          "commitNameOld": "aa0f77eb9294588b0d891dbde516bc43a5af4f5a",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 1.77,
          "commitsBetweenForRepo": 21,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    public void processLines(FileText text) {\n-        this.text \u003d new FileText(text);\n+    public void processLines(FileText fileText) {\n+        this.text \u003d new FileText(fileText);\n         resetState();\n \n         if (Strings.isNullOrEmpty(options.getFormat())) {\n             options.getReporter().log(0, EMPTY);\n         }\n         else {\n-            matcher \u003d options.getPattern().matcher(text.getFullText());\n+            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n             findMatch();\n             finish();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText fileText) {\n        this.text \u003d new FileText(fileText);\n        resetState();\n\n        if (Strings.isNullOrEmpty(options.getFormat())) {\n            options.getReporter().log(0, EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(fileText.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {}
        }
      ]
    },
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": {
      "type": "Ybodychange",
      "commitMessage": "Invert if statements with negated conditions. #1555\n\nFixes `NegatedIfElse` inspection violations.\n\nDescription:\n\u003eReports if statements which contain else branches and whose conditions are negated. Flipping the order of the if and else branches will usually increase the clarity of such statements.\n",
      "commitDate": "09/08/15 11:46 PM",
      "commitName": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/08/15 10:17 PM",
      "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.06,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public void processLines(FileText text) {\n         this.text \u003d new FileText(text);\n         resetState();\n \n-        if (!Strings.isNullOrEmpty(options.getFormat())) {\n+        if (Strings.isNullOrEmpty(options.getFormat())) {\n+            options.getReporter().log(0, EMPTY);\n+        }\n+        else {\n             matcher \u003d options.getPattern().matcher(text.getFullText());\n             findMatch();\n             finish();\n         }\n-        else {\n-            options.getReporter().log(0, EMPTY);\n-        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText text) {\n        this.text \u003d new FileText(text);\n        resetState();\n\n        if (Strings.isNullOrEmpty(options.getFormat())) {\n            options.getReporter().log(0, EMPTY);\n        }\n        else {\n            matcher \u003d options.getPattern().matcher(text.getFullText());\n            findMatch();\n            finish();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "7d513f08c27c741105f712dc882fd4c3553f71e7": {
      "type": "Ybodychange",
      "commitMessage": "Copy collections and arrays before assigning to fields. #1555\n\nFixes AssignmentToCollectionFieldFromParameter violations.\n\n Description:\n\u003eReports any attempt to assign an array or Collection field from a method parameter. Since the array or Collection may have its contents modified by the calling method, this construct may result in an object having its state modified unexpectedly. While occasionally useful for performance reasons, this construct is inherently bug-prone.\n",
      "commitDate": "07/08/15 9:11 PM",
      "commitName": "7d513f08c27c741105f712dc882fd4c3553f71e7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "0dc308ff69bce4d52ef76002bc4fe3988955ceb6",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.1,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     public void processLines(FileText text) {\n-        this.text \u003d text;\n+        this.text \u003d new FileText(text);\n         resetState();\n \n         if (!Strings.isNullOrEmpty(options.getFormat())) {\n             matcher \u003d options.getPattern().matcher(text.getFullText());\n             findMatch();\n             finish();\n         }\n         else {\n             options.getReporter().log(0, EMPTY);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText text) {\n        this.text \u003d new FileText(text);\n        resetState();\n\n        if (!Strings.isNullOrEmpty(options.getFormat())) {\n            matcher \u003d options.getPattern().matcher(text.getFullText());\n            findMatch();\n            finish();\n        }\n        else {\n            options.getReporter().log(0, EMPTY);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "edc63f0d669bc7e02eb3d9cbf83b6c7dcb92501c": {
      "type": "Ybodychange",
      "commitMessage": "NullPointerException at java.util.regex.Pattern, fixes #1224; from\ncom.puppycrawl.tools.checkstyle.checks.regexp.DetectorOptions.getPattern",
      "commitDate": "30/06/15 8:40 PM",
      "commitName": "edc63f0d669bc7e02eb3d9cbf83b6c7dcb92501c",
      "commitAuthor": "Michael Vorburger",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 44.66,
      "commitsBetweenForRepo": 251,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,13 @@\n     public void processLines(FileText text) {\n         this.text \u003d text;\n         resetState();\n-        matcher \u003d options.getPattern().matcher(text.getFullText());\n-        findMatch();\n-        finish();\n+\n+        if (!Strings.isNullOrEmpty(options.getFormat())) {\n+            matcher \u003d options.getPattern().matcher(text.getFullText());\n+            findMatch();\n+            finish();\n+        }\n+        else {\n+            options.getReporter().log(0, EMPTY);\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(FileText text) {\n        this.text \u003d text;\n        resetState();\n\n        if (!Strings.isNullOrEmpty(options.getFormat())) {\n            matcher \u003d options.getPattern().matcher(text.getFullText());\n            findMatch();\n            finish();\n        }\n        else {\n            options.getReporter().log(0, EMPTY);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {}
    },
    "075b3084de3934dbf73f108110b36e01dcf10d1e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, regexp, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, regexp, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 462,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public void processLines(FileText aText)\n+    public void processLines(FileText text)\n     {\n-        mText \u003d aText;\n+        this.text \u003d text;\n         resetState();\n-        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n+        matcher \u003d options.getPattern().matcher(text.getFullText());\n         findMatch();\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText text)\n    {\n        this.text \u003d text;\n        resetState();\n        matcher \u003d options.getPattern().matcher(text.getFullText());\n        findMatch();\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {
            "oldValue": "[aText-FileText]",
            "newValue": "[text-FileText]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, regexp, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 462,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public void processLines(FileText aText)\n+    public void processLines(FileText text)\n     {\n-        mText \u003d aText;\n+        this.text \u003d text;\n         resetState();\n-        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n+        matcher \u003d options.getPattern().matcher(text.getFullText());\n         findMatch();\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText text)\n    {\n        this.text \u003d text;\n        resetState();\n        matcher \u003d options.getPattern().matcher(text.getFullText());\n        findMatch();\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void processLines(FileText aText)\n    {\n        mText \u003d aText;\n        resetState();\n        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n        findMatch();\n        finish();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java"
      }
    },
    "3cd6646941eca3da7d3b9a221c88e4c1d214876e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
      "commitDate": "28/06/10 6:02 AM",
      "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
          "commitDate": "28/06/10 6:02 AM",
          "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "12/02/10 6:57 PM",
          "commitNameOld": "523080bbf2be11354b94b851ac85d06e7e8a2c14",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 135.42,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    public void processLines(List\u003cString\u003e aLines)\n+    public void processLines(FileText aText)\n     {\n+        mText \u003d aText;\n         resetState();\n-        final StringBuffer sb \u003d new StringBuffer();\n-        int lineno \u003d 1;\n-        for (String line : aLines) {\n-            sb.append(line);\n-            sb.append(\u0027\\n\u0027);\n-            for (int j \u003d 0; j \u003c (line.length() + 1); j++) {\n-                mCharacters.add(new Integer[] {lineno, j});\n-            }\n-            lineno++;\n-        }\n-        mMatcher \u003d mOptions.getPattern().matcher(sb.toString());\n+        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n         findMatch();\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText aText)\n    {\n        mText \u003d aText;\n        resetState();\n        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n        findMatch();\n        finish();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {
            "oldValue": "[aLines-List\u003cString\u003e]",
            "newValue": "[aText-FileText]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Apply patch #2783226 that uses FileText as an implementation for\nList\u003cString\u003e to pass lines around\n",
          "commitDate": "28/06/10 6:02 AM",
          "commitName": "3cd6646941eca3da7d3b9a221c88e4c1d214876e",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "12/02/10 6:57 PM",
          "commitNameOld": "523080bbf2be11354b94b851ac85d06e7e8a2c14",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 135.42,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,8 @@\n-    public void processLines(List\u003cString\u003e aLines)\n+    public void processLines(FileText aText)\n     {\n+        mText \u003d aText;\n         resetState();\n-        final StringBuffer sb \u003d new StringBuffer();\n-        int lineno \u003d 1;\n-        for (String line : aLines) {\n-            sb.append(line);\n-            sb.append(\u0027\\n\u0027);\n-            for (int j \u003d 0; j \u003c (line.length() + 1); j++) {\n-                mCharacters.add(new Integer[] {lineno, j});\n-            }\n-            lineno++;\n-        }\n-        mMatcher \u003d mOptions.getPattern().matcher(sb.toString());\n+        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n         findMatch();\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText aText)\n    {\n        mText \u003d aText;\n        resetState();\n        mMatcher \u003d mOptions.getPattern().matcher(mText.getFullText());\n        findMatch();\n        finish();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4": {
      "type": "Yintroduced",
      "commitMessage": "snapshot of a work in progress\n",
      "commitDate": "10/01/09 7:29 PM",
      "commitName": "1c1eadb21184c3e8361cacb25a33d927f3a4e8d4",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,17 @@\n+    public void processLines(List\u003cString\u003e aLines)\n+    {\n+        resetState();\n+        final StringBuffer sb \u003d new StringBuffer();\n+        int lineno \u003d 1;\n+        for (String line : aLines) {\n+            sb.append(line);\n+            sb.append(\u0027\\n\u0027);\n+            for (int j \u003d 0; j \u003c (line.length() + 1); j++) {\n+                mCharacters.add(new Integer[] {lineno, j});\n+            }\n+            lineno++;\n+        }\n+        mMatcher \u003d mOptions.getPattern().matcher(sb.toString());\n+        findMatch();\n+        finish();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(List\u003cString\u003e aLines)\n    {\n        resetState();\n        final StringBuffer sb \u003d new StringBuffer();\n        int lineno \u003d 1;\n        for (String line : aLines) {\n            sb.append(line);\n            sb.append(\u0027\\n\u0027);\n            for (int j \u003d 0; j \u003c (line.length() + 1); j++) {\n                mCharacters.add(new Integer[] {lineno, j});\n            }\n            lineno++;\n        }\n        mMatcher \u003d mOptions.getPattern().matcher(sb.toString());\n        findMatch();\n        finish();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/MultilineDetector.java"
    }
  }
}