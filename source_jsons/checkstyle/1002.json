{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParameterNumberCheck.java",
  "functionName": "shouldIgnoreNumberOfParameters",
  "functionId": "shouldIgnoreNumberOfParameters___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
  "functionStartLine": 167,
  "functionEndLine": 172,
  "numCommitsSeen": 50,
  "timeTaken": 1287,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
    "e6b25218eb580c74c218f04bdc77bd66e22da1f6",
    "c7316892445cca4118c943343631fd4c7411b3d5"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Yrename",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": "Ymultichange(Yparameterchange,Ybodychange)",
    "e6b25218eb580c74c218f04bdc77bd66e22da1f6": "Ybodychange",
    "c7316892445cca4118c943343631fd4c7411b3d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "07/05/18 6:56 PM",
      "commitNameOld": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 27.11,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private boolean shouldIgnoreNumberOfParameters(DetailAST ast) {\n         //if you override a method, you have no power over the number of parameters\n         return ignoreOverriddenMethods\n-                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n-                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n+                \u0026\u0026 (AnnotationUtil.containsAnnotation(ast, OVERRIDE)\n+                || AnnotationUtil.containsAnnotation(ast, CANONICAL_OVERRIDE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldIgnoreNumberOfParameters(DetailAST ast) {\n        //if you override a method, you have no power over the number of parameters\n        return ignoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtil.containsAnnotation(ast, OVERRIDE)\n                || AnnotationUtil.containsAnnotation(ast, CANONICAL_OVERRIDE));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
      "extendedDetails": {}
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Yrename",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "27/08/15 12:53 PM",
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-    private boolean ignoreNumberOfParameters(DetailAST ast) {\n+    private boolean shouldIgnoreNumberOfParameters(DetailAST ast) {\n         //if you override a method, you have no power over the number of parameters\n         return ignoreOverriddenMethods\n                 \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n                 || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldIgnoreNumberOfParameters(DetailAST ast) {\n        //if you override a method, you have no power over the number of parameters\n        return ignoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
      "extendedDetails": {
        "oldValue": "ignoreNumberOfParameters",
        "newValue": "shouldIgnoreNumberOfParameters"
      }
    },
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, sizes, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "24/12/14 11:49 AM",
          "commitNameOld": "e6b25218eb580c74c218f04bdc77bd66e22da1f6",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 25.77,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean ignoreNumberOfParameters(DetailAST aAST)\n+    private boolean ignoreNumberOfParameters(DetailAST ast)\n     {\n         //if you override a method, you have no power over the number of parameters\n-        return mIgnoreOverriddenMethods\n-                \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n-                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));\n+        return ignoreOverriddenMethods\n+                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n+                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean ignoreNumberOfParameters(DetailAST ast)\n    {\n        //if you override a method, you have no power over the number of parameters\n        return ignoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "24/12/14 11:49 AM",
          "commitNameOld": "e6b25218eb580c74c218f04bdc77bd66e22da1f6",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 25.77,
          "commitsBetweenForRepo": 53,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean ignoreNumberOfParameters(DetailAST aAST)\n+    private boolean ignoreNumberOfParameters(DetailAST ast)\n     {\n         //if you override a method, you have no power over the number of parameters\n-        return mIgnoreOverriddenMethods\n-                \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n-                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));\n+        return ignoreOverriddenMethods\n+                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n+                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean ignoreNumberOfParameters(DetailAST ast)\n    {\n        //if you override a method, you have no power over the number of parameters\n        return ignoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtility.containsAnnotation(ast, OVERRIDE)\n                || AnnotationUtility.containsAnnotation(ast, CANONICAL_OVERRIDE));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "e6b25218eb580c74c218f04bdc77bd66e22da1f6": {
      "type": "Ybodychange",
      "commitMessage": "additional fixes for #66, minor renaming and UTs extension\n",
      "commitDate": "24/12/14 11:49 AM",
      "commitName": "e6b25218eb580c74c218f04bdc77bd66e22da1f6",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "24/12/14 11:36 AM",
      "commitNameOld": "c7316892445cca4118c943343631fd4c7411b3d5",
      "commitAuthorOld": "ychulovskyy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     private boolean ignoreNumberOfParameters(DetailAST aAST)\n     {\n         //if you override a method, you have no power over the number of parameters\n         return mIgnoreOverriddenMethods\n                 \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n-                || AnnotationUtility.containsAnnotation(aAST, FQ_OVERRIDE));\n+                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean ignoreNumberOfParameters(DetailAST aAST)\n    {\n        //if you override a method, you have no power over the number of parameters\n        return mIgnoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n                || AnnotationUtility.containsAnnotation(aAST, CANONICAL_OVERRIDE));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java",
      "extendedDetails": {}
    },
    "c7316892445cca4118c943343631fd4c7411b3d5": {
      "type": "Yintroduced",
      "commitMessage": "Issue #66 ParameterNumber check option to ignore methods with an @Override\n",
      "commitDate": "24/12/14 11:36 AM",
      "commitName": "c7316892445cca4118c943343631fd4c7411b3d5",
      "commitAuthor": "ychulovskyy",
      "diff": "@@ -0,0 +1,7 @@\n+    private boolean ignoreNumberOfParameters(DetailAST aAST)\n+    {\n+        //if you override a method, you have no power over the number of parameters\n+        return mIgnoreOverriddenMethods\n+                \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n+                || AnnotationUtility.containsAnnotation(aAST, FQ_OVERRIDE));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean ignoreNumberOfParameters(DetailAST aAST)\n    {\n        //if you override a method, you have no power over the number of parameters\n        return mIgnoreOverriddenMethods\n                \u0026\u0026 (AnnotationUtility.containsAnnotation(aAST, OVERRIDE)\n                || AnnotationUtility.containsAnnotation(aAST, FQ_OVERRIDE));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/ParameterNumberCheck.java"
    }
  }
}