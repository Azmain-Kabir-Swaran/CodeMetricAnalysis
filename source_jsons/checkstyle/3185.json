{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocTagContinuationIndentationCheck.java",
  "functionName": "getAllNewlineNodes",
  "functionId": "getAllNewlineNodes___descriptionNode-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
  "functionStartLine": 171,
  "functionEndLine": 181,
  "numCommitsSeen": 37,
  "timeTaken": 1501,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f": "Yfilerename",
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764": "Ymultichange(Yrename,Ybodychange)",
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     private static List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode) {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n-        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n-        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n+        DetailNode node \u003d JavadocUtil.getFirstChild(descriptionNode);\n+        while (JavadocUtil.getNextSibling(node) !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n-            node \u003d JavadocUtils.getNextSibling(node);\n+            node \u003d JavadocUtil.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode) {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n        DetailNode node \u003d JavadocUtil.getFirstChild(descriptionNode);\n        while (JavadocUtil.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtil.getNextSibling(node);\n        }\n        return textNodes;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "14/07/15 11:45 AM",
      "commitNameOld": "03637bdf8708da7f6dae0f934ee789e3f6ece5e8",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.42,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode) {\n+    private static List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode) {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n         DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode) {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": {
      "type": "Ybodychange",
      "commitMessage": "Replace verbose type arguments with diamond type \u003c\u003e\n\nThis syntax is not supported under Java 6 or earlier, but Checkstyle codebase uses Java 7 already.\n",
      "commitDate": "15/02/15 8:22 AM",
      "commitName": "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/01/15 6:21 AM",
      "commitNameOld": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 27.08,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n     {\n-        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n+        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n         DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003c\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/11/14 7:06 AM",
          "commitNameOld": "bae7fdded6474cd908e3b78f144ecdcc7edc23da",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 62.97,
          "commitsBetweenForRepo": 203,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n+    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n     {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n-        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n+        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "[aDescriptionNode-DetailNode]",
            "newValue": "[descriptionNode-DetailNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/11/14 7:06 AM",
          "commitNameOld": "bae7fdded6474cd908e3b78f144ecdcc7edc23da",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 62.97,
          "commitsBetweenForRepo": 203,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n+    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n     {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n-        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n+        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode descriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(descriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "443b98cf24c6b6b7090b83603f40ec9c88ab189f": {
      "type": "Yfilerename",
      "commitMessage": "Update google_checks.xml and minor refactoring. #320\n",
      "commitDate": "22/10/14 11:25 AM",
      "commitName": "443b98cf24c6b6b7090b83603f40ec9c88ab189f",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": "22/10/14 11:16 AM",
      "commitNameOld": "371c73fe60f63ef58abf814db76e8b2d7289800b",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocTagContinuationIndentationCheck.java"
      }
    },
    "ca34984cc3dcf86773cf7958f26f3816ae0dc764": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Fix false positives in JavaDocTagContinuationIndentationCheck #323\n",
      "commitDate": "22/10/14 7:07 AM",
      "commitName": "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
      "commitAuthor": "maxvetrenko",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Fix false positives in JavaDocTagContinuationIndentationCheck #323\n",
          "commitDate": "22/10/14 7:07 AM",
          "commitName": "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
          "commitAuthor": "maxvetrenko",
          "commitDateOld": "20/10/14 10:00 PM",
          "commitNameOld": "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private List\u003cDetailNode\u003e getAllTextNodes(DetailNode aDescriptionNode)\n+    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n     {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n         DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n-            if (node.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "getAllTextNodes",
            "newValue": "getAllNewlineNodes"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Fix false positives in JavaDocTagContinuationIndentationCheck #323\n",
          "commitDate": "22/10/14 7:07 AM",
          "commitName": "ca34984cc3dcf86773cf7958f26f3816ae0dc764",
          "commitAuthor": "maxvetrenko",
          "commitDateOld": "20/10/14 10:00 PM",
          "commitNameOld": "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 1.38,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private List\u003cDetailNode\u003e getAllTextNodes(DetailNode aDescriptionNode)\n+    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n     {\n         final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n         DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n         while (JavadocUtils.getNextSibling(node) !\u003d null) {\n-            if (node.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                 textNodes.add(node);\n             }\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return textNodes;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private List\u003cDetailNode\u003e getAllNewlineNodes(DetailNode aDescriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.NEWLINE) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc": {
      "type": "Yintroduced",
      "commitMessage": "JavaDocTagСontinuationIndentation #308\n",
      "commitDate": "20/10/14 10:00 PM",
      "commitName": "cc9e00d9a01fd7fc6e7837f64cca0e96904b71bc",
      "commitAuthor": "maxvetrenko",
      "diff": "@@ -0,0 +1,12 @@\n+    private List\u003cDetailNode\u003e getAllTextNodes(DetailNode aDescriptionNode)\n+    {\n+        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n+        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n+        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n+                textNodes.add(node);\n+            }\n+            node \u003d JavadocUtils.getNextSibling(node);\n+        }\n+        return textNodes;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private List\u003cDetailNode\u003e getAllTextNodes(DetailNode aDescriptionNode)\n    {\n        final List\u003cDetailNode\u003e textNodes \u003d new ArrayList\u003cDetailNode\u003e();\n        DetailNode node \u003d JavadocUtils.getFirstChild(aDescriptionNode);\n        while (JavadocUtils.getNextSibling(node) !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.TEXT) {\n                textNodes.add(node);\n            }\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return textNodes;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavaDocTagContinuationIndentationCheck.java"
    }
  }
}