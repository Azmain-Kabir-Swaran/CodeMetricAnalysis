{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractItModuleTestSupport.java",
  "functionName": "createChecker",
  "functionId": "createChecker___moduleConfig-Configuration__moduleCreationOption-ModuleCreationOption",
  "sourceFilePath": "src/it/java/org/checkstyle/base/AbstractItModuleTestSupport.java",
  "functionStartLine": 143,
  "functionEndLine": 168,
  "numCommitsSeen": 113,
  "timeTaken": 3274,
  "changeHistory": [
    "c7ffe16d7e090cb5832aac65b874cf869de38d49",
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6",
    "5c6cdde35d65d19661f8f7fb59f130e646fa567d",
    "8f3ebd171db0edce046a9d76c94d8c73e3b9da50",
    "cf436f1d9806016cb1886b5d7ec397f56aedc824",
    "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332",
    "d4ef19e679f276411a0de3b07e579c217d15f098",
    "52ac2776d7f128ff812b73b54dcc12210661f98b",
    "437986510709d7abc64b59c72779343ac5e77599"
  ],
  "changeHistoryShort": {
    "c7ffe16d7e090cb5832aac65b874cf869de38d49": "Yfilerename",
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6": "Ybodychange",
    "5c6cdde35d65d19661f8f7fb59f130e646fa567d": "Ymodifierchange",
    "8f3ebd171db0edce046a9d76c94d8c73e3b9da50": "Ymultichange(Yparameterchange,Ybodychange)",
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": "Ymultichange(Yparameterchange,Ybodychange)",
    "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba": "Yfilerename",
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": "Ybodychange",
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": "Ybodychange",
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": "Ymultichange(Yparameterchange,Ybodychange)",
    "d4ef19e679f276411a0de3b07e579c217d15f098": "Ybodychange",
    "52ac2776d7f128ff812b73b54dcc12210661f98b": "Ybodychange",
    "437986510709d7abc64b59c72779343ac5e77599": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7ffe16d7e090cb5832aac65b874cf869de38d49": {
      "type": "Yfilerename",
      "commitMessage": "Pull #6801: split it module test support between different\nconfigurations",
      "commitDate": "10/06/19 11:02 AM",
      "commitName": "c7ffe16d7e090cb5832aac65b874cf869de38d49",
      "commitAuthor": "rnveach",
      "commitDateOld": "06/06/19 6:08 PM",
      "commitNameOld": "9b8dea47d8a636905071e962675a644f8c5ba351",
      "commitAuthorOld": "Peter De Maeyer",
      "daysBetweenCommits": 3.7,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final Checker createChecker(Configuration moduleConfig,\n                                    ModuleCreationOption moduleCreationOption)\n            throws Exception {\n        final Configuration dc;\n\n        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else if (ROOT_MODULE_NAME.equals(moduleConfig.getName())) {\n            dc \u003d moduleConfig;\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
      "path": "src/it/java/org/checkstyle/base/AbstractItModuleTestSupport.java",
      "extendedDetails": {
        "oldPath": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
        "newPath": "src/it/java/org/checkstyle/base/AbstractItModuleTestSupport.java"
      }
    },
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5648: Create UTs to control xpath-suppression model regression\n",
      "commitDate": "31/05/18 8:21 PM",
      "commitName": "ab712ed0ba184a55788ae8c3df1481b7ed8250f6",
      "commitAuthor": "Timur Tibeyev",
      "commitDateOld": "26/05/18 5:26 PM",
      "commitNameOld": "cd3e4424a27640745a90738d22119e51f114c073",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n     protected final Checker createChecker(Configuration moduleConfig,\n                                     ModuleCreationOption moduleCreationOption)\n             throws Exception {\n-        final DefaultConfiguration dc;\n+        final Configuration dc;\n \n         if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n             dc \u003d createTreeWalkerConfig(moduleConfig);\n         }\n+        else if (ROOT_MODULE_NAME.equals(moduleConfig.getName())) {\n+            dc \u003d moduleConfig;\n+        }\n         else {\n             dc \u003d createRootConfig(moduleConfig);\n         }\n \n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final Checker createChecker(Configuration moduleConfig,\n                                    ModuleCreationOption moduleCreationOption)\n            throws Exception {\n        final Configuration dc;\n\n        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else if (ROOT_MODULE_NAME.equals(moduleConfig.getName())) {\n            dc \u003d moduleConfig;\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
      "extendedDetails": {}
    },
    "5c6cdde35d65d19661f8f7fb59f130e646fa567d": {
      "type": "Ymodifierchange",
      "commitMessage": "minor: locked down abstract test classes from overriding",
      "commitDate": "08/12/17 6:21 AM",
      "commitName": "5c6cdde35d65d19661f8f7fb59f130e646fa567d",
      "commitAuthor": "rnveach",
      "commitDateOld": "25/09/17 5:44 AM",
      "commitNameOld": "3c1ddf428d9ddecaff63986007b4f5ff0593c098",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 74.07,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-    protected Checker createChecker(Configuration moduleConfig,\n+    protected final Checker createChecker(Configuration moduleConfig,\n                                     ModuleCreationOption moduleCreationOption)\n             throws Exception {\n         final DefaultConfiguration dc;\n \n         if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n             dc \u003d createTreeWalkerConfig(moduleConfig);\n         }\n         else {\n             dc \u003d createRootConfig(moduleConfig);\n         }\n \n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final Checker createChecker(Configuration moduleConfig,\n                                    ModuleCreationOption moduleCreationOption)\n            throws Exception {\n        final DefaultConfiguration dc;\n\n        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[protected, final]"
      }
    },
    "8f3ebd171db0edce046a9d76c94d8c73e3b9da50": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #4857: fix BooleanParameter idea violation for it package\n",
      "commitDate": "19/08/17 10:34 AM",
      "commitName": "8f3ebd171db0edce046a9d76c94d8c73e3b9da50",
      "commitAuthor": "vasilyeva",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4857: fix BooleanParameter idea violation for it package\n",
          "commitDate": "19/08/17 10:34 AM",
          "commitName": "8f3ebd171db0edce046a9d76c94d8c73e3b9da50",
          "commitAuthor": "vasilyeva",
          "commitDateOld": "17/08/17 5:06 PM",
          "commitNameOld": "4acf7a786285d95d2c544f6d7daf6b31b86e0b44",
          "commitAuthorOld": "vasilyeva",
          "daysBetweenCommits": 1.73,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n-    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n+    protected Checker createChecker(Configuration moduleConfig,\n+                                    ModuleCreationOption moduleCreationOption)\n             throws Exception {\n         final DefaultConfiguration dc;\n \n-        if (addTreeWalker) {\n+        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n             dc \u003d createTreeWalkerConfig(moduleConfig);\n         }\n         else {\n             dc \u003d createRootConfig(moduleConfig);\n         }\n \n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration moduleConfig,\n                                    ModuleCreationOption moduleCreationOption)\n            throws Exception {\n        final DefaultConfiguration dc;\n\n        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
          "extendedDetails": {
            "oldValue": "[moduleConfig-Configuration, addTreeWalker-boolean]",
            "newValue": "[moduleConfig-Configuration, moduleCreationOption-ModuleCreationOption]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4857: fix BooleanParameter idea violation for it package\n",
          "commitDate": "19/08/17 10:34 AM",
          "commitName": "8f3ebd171db0edce046a9d76c94d8c73e3b9da50",
          "commitAuthor": "vasilyeva",
          "commitDateOld": "17/08/17 5:06 PM",
          "commitNameOld": "4acf7a786285d95d2c544f6d7daf6b31b86e0b44",
          "commitAuthorOld": "vasilyeva",
          "daysBetweenCommits": 1.73,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,23 @@\n-    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n+    protected Checker createChecker(Configuration moduleConfig,\n+                                    ModuleCreationOption moduleCreationOption)\n             throws Exception {\n         final DefaultConfiguration dc;\n \n-        if (addTreeWalker) {\n+        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n             dc \u003d createTreeWalkerConfig(moduleConfig);\n         }\n         else {\n             dc \u003d createRootConfig(moduleConfig);\n         }\n \n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration moduleConfig,\n                                    ModuleCreationOption moduleCreationOption)\n            throws Exception {\n        final DefaultConfiguration dc;\n\n        if (moduleCreationOption \u003d\u003d ModuleCreationOption.IN_TREEWALKER) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
          "extendedDetails": {}
        }
      ]
    },
    "cf436f1d9806016cb1886b5d7ec397f56aedc824": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #4592: merged module test support and fileset test support",
      "commitDate": "01/08/17 11:56 PM",
      "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4592: merged module test support and fileset test support",
          "commitDate": "01/08/17 11:56 PM",
          "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
          "commitAuthor": "rnveach",
          "commitDateOld": "01/08/17 10:56 AM",
          "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
          "commitAuthorOld": "Subbu Dantu",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-    protected Checker createChecker(Configuration checkConfig)\n+    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n             throws Exception {\n-        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n+        final DefaultConfiguration dc;\n+\n+        if (addTreeWalker) {\n+            dc \u003d createTreeWalkerConfig(moduleConfig);\n+        }\n+        else {\n+            dc \u003d createRootConfig(moduleConfig);\n+        }\n+\n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n            throws Exception {\n        final DefaultConfiguration dc;\n\n        if (addTreeWalker) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
          "extendedDetails": {
            "oldValue": "[checkConfig-Configuration]",
            "newValue": "[moduleConfig-Configuration, addTreeWalker-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4592: merged module test support and fileset test support",
          "commitDate": "01/08/17 11:56 PM",
          "commitName": "cf436f1d9806016cb1886b5d7ec397f56aedc824",
          "commitAuthor": "rnveach",
          "commitDateOld": "01/08/17 10:56 AM",
          "commitNameOld": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
          "commitAuthorOld": "Subbu Dantu",
          "daysBetweenCommits": 0.54,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,22 @@\n-    protected Checker createChecker(Configuration checkConfig)\n+    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n             throws Exception {\n-        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n+        final DefaultConfiguration dc;\n+\n+        if (addTreeWalker) {\n+            dc \u003d createTreeWalkerConfig(moduleConfig);\n+        }\n+        else {\n+            dc \u003d createRootConfig(moduleConfig);\n+        }\n+\n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration moduleConfig, boolean addTreeWalker)\n            throws Exception {\n        final DefaultConfiguration dc;\n\n        if (addTreeWalker) {\n            dc \u003d createTreeWalkerConfig(moduleConfig);\n        }\n        else {\n            dc \u003d createRootConfig(moduleConfig);\n        }\n\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
          "extendedDetails": {}
        }
      ]
    },
    "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4592: Added AbstractPathTestSupport, AbstractModuleTestSupport, AbstractIndentationTestSupport and all tests in ITs extend them\n",
      "commitDate": "01/08/17 10:56 AM",
      "commitName": "6d290adcd7efb8e9f07d2730e9960c6dc3e713ba",
      "commitAuthor": "Subbu Dantu",
      "commitDateOld": "01/08/17 6:06 AM",
      "commitNameOld": "29e131f949950d26e7880da5891d1754776fdeee",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected Checker createChecker(Configuration checkConfig)\n            throws Exception {\n        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java",
      "extendedDetails": {
        "oldPath": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
        "newPath": "src/it/java/com/google/checkstyle/test/base/AbstractModuleTestSupport.java"
      }
    },
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4713: fix all violations from the third part of idea violations\n",
      "commitDate": "20/07/17 10:04 PM",
      "commitName": "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "21/04/17 7:14 PM",
      "commitNameOld": "7a466ec46461fb4c57d965040d9523b1fb2f8443",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 90.12,
      "commitsBetweenForRepo": 394,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     protected Checker createChecker(Configuration checkConfig)\n             throws Exception {\n         final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n-        checker.addListener(new BriefUtLogger(stream));\n+        checker.addListener(getBriefUtLogger());\n         return checker;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected Checker createChecker(Configuration checkConfig)\n            throws Exception {\n        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(getBriefUtLogger());\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
      "extendedDetails": {}
    },
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2666: Print name of the Check after printing violation message\n",
      "commitDate": "25/12/15 12:20 PM",
      "commitName": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "06/12/15 2:14 PM",
      "commitNameOld": "5e0f360e7b7745a362bd7a655e98654a2ad36443",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 18.92,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     protected Checker createChecker(Configuration checkConfig)\n             throws Exception {\n         final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n         final Checker checker \u003d new Checker();\n         // make sure the tests always run with English error messages\n         // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n-        checker.addListener(new BriefLogger(stream));\n+        checker.addListener(new BriefUtLogger(stream));\n         return checker;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected Checker createChecker(Configuration checkConfig)\n            throws Exception {\n        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(new BriefUtLogger(stream));\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
      "extendedDetails": {}
    },
    "7a4ec11d123dc0bbf7db943af715d19814d2e332": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #2589: Unify IT test code.",
      "commitDate": "12/11/15 7:08 PM",
      "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #2589: Unify IT test code.",
          "commitDate": "12/11/15 7:08 PM",
          "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
          "commitAuthor": "rnveach",
          "commitDateOld": "25/10/15 11:30 AM",
          "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 18.36,
          "commitsBetweenForRepo": 137,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    protected Checker createChecker(Configuration aCheckConfig)\n-        throws Exception {\n-        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n+    protected Checker createChecker(Configuration checkConfig)\n+            throws Exception {\n+        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n         final Checker checker \u003d new Checker();\n-        // make sure the tests always run with english error messages\n-        // so the tests don\u0027t fail in supported locales like german\n+        // make sure the tests always run with English error messages\n+        // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(new BriefLogger(stream));\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration checkConfig)\n            throws Exception {\n        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(new BriefLogger(stream));\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
          "extendedDetails": {
            "oldValue": "[aCheckConfig-Configuration]",
            "newValue": "[checkConfig-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #2589: Unify IT test code.",
          "commitDate": "12/11/15 7:08 PM",
          "commitName": "7a4ec11d123dc0bbf7db943af715d19814d2e332",
          "commitAuthor": "rnveach",
          "commitDateOld": "25/10/15 11:30 AM",
          "commitNameOld": "344ea5c012d1814441b5758013a2b035c6e1613a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 18.36,
          "commitsBetweenForRepo": 137,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    protected Checker createChecker(Configuration aCheckConfig)\n-        throws Exception {\n-        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n+    protected Checker createChecker(Configuration checkConfig)\n+            throws Exception {\n+        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n         final Checker checker \u003d new Checker();\n-        // make sure the tests always run with english error messages\n-        // so the tests don\u0027t fail in supported locales like german\n+        // make sure the tests always run with English error messages\n+        // so the tests don\u0027t fail in supported locales like German\n         final Locale locale \u003d Locale.ENGLISH;\n         checker.setLocaleCountry(locale.getCountry());\n         checker.setLocaleLanguage(locale.getLanguage());\n         checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         checker.configure(dc);\n         checker.addListener(new BriefLogger(stream));\n         return checker;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected Checker createChecker(Configuration checkConfig)\n            throws Exception {\n        final DefaultConfiguration dc \u003d createCheckerConfig(checkConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with English error messages\n        // so the tests don\u0027t fail in supported locales like German\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(new BriefLogger(stream));\n        return checker;\n    }",
          "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
          "extendedDetails": {}
        }
      ]
    },
    "d4ef19e679f276411a0de3b07e579c217d15f098": {
      "type": "Ybodychange",
      "commitMessage": "Fix confusing variable names. #1555\n\nFixes `StandardVariableNames` inspection violations in test code.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n- i, j, k, m, n - int\n- f - float\n- d - double\n- b - byte\n- c, ch - char\n- l - long\n- s, str - String\n",
      "commitDate": "21/08/15 5:53 AM",
      "commitName": "d4ef19e679f276411a0de3b07e579c217d15f098",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "21/08/15 5:14 AM",
      "commitNameOld": "6d2f3ce5faf61311893619a164d66cebff6c0a49",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected Checker createChecker(Configuration aCheckConfig)\n         throws Exception\n     {\n         final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n-        final Checker c \u003d new Checker();\n+        final Checker checker \u003d new Checker();\n         // make sure the tests always run with english error messages\n         // so the tests don\u0027t fail in supported locales like german\n         final Locale locale \u003d Locale.ENGLISH;\n-        c.setLocaleCountry(locale.getCountry());\n-        c.setLocaleLanguage(locale.getLanguage());\n-        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n-        c.configure(dc);\n-        c.addListener(new BriefLogger(stream));\n-        return c;\n+        checker.setLocaleCountry(locale.getCountry());\n+        checker.setLocaleLanguage(locale.getLanguage());\n+        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n+        checker.configure(dc);\n+        checker.addListener(new BriefLogger(stream));\n+        return checker;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected Checker createChecker(Configuration aCheckConfig)\n        throws Exception\n    {\n        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n        final Checker checker \u003d new Checker();\n        // make sure the tests always run with english error messages\n        // so the tests don\u0027t fail in supported locales like german\n        final Locale locale \u003d Locale.ENGLISH;\n        checker.setLocaleCountry(locale.getCountry());\n        checker.setLocaleLanguage(locale.getLanguage());\n        checker.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        checker.configure(dc);\n        checker.addListener(new BriefLogger(stream));\n        return checker;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
      "extendedDetails": {}
    },
    "52ac2776d7f128ff812b73b54dcc12210661f98b": {
      "type": "Ybodychange",
      "commitMessage": "rename fields in ConfigurationBuilder and BaseCheckTestSupport",
      "commitDate": "11/07/15 6:33 AM",
      "commitName": "52ac2776d7f128ff812b73b54dcc12210661f98b",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "07/06/15 7:37 PM",
      "commitNameOld": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 33.46,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected Checker createChecker(Configuration aCheckConfig)\n         throws Exception\n     {\n         final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n         final Checker c \u003d new Checker();\n         // make sure the tests always run with english error messages\n         // so the tests don\u0027t fail in supported locales like german\n         final Locale locale \u003d Locale.ENGLISH;\n         c.setLocaleCountry(locale.getCountry());\n         c.setLocaleLanguage(locale.getLanguage());\n         c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n         c.configure(dc);\n-        c.addListener(new BriefLogger(mStream));\n+        c.addListener(new BriefLogger(stream));\n         return c;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected Checker createChecker(Configuration aCheckConfig)\n        throws Exception\n    {\n        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n        final Checker c \u003d new Checker();\n        // make sure the tests always run with english error messages\n        // so the tests don\u0027t fail in supported locales like german\n        final Locale locale \u003d Locale.ENGLISH;\n        c.setLocaleCountry(locale.getCountry());\n        c.setLocaleLanguage(locale.getLanguage());\n        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        c.configure(dc);\n        c.addListener(new BriefLogger(stream));\n        return c;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java",
      "extendedDetails": {}
    },
    "437986510709d7abc64b59c72779343ac5e77599": {
      "type": "Yintroduced",
      "commitMessage": "Integrate google-style-config-test as Integration Test. #863\n",
      "commitDate": "07/06/15 7:37 PM",
      "commitName": "437986510709d7abc64b59c72779343ac5e77599",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,15 @@\n+    protected Checker createChecker(Configuration aCheckConfig)\n+        throws Exception\n+    {\n+        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n+        final Checker c \u003d new Checker();\n+        // make sure the tests always run with english error messages\n+        // so the tests don\u0027t fail in supported locales like german\n+        final Locale locale \u003d Locale.ENGLISH;\n+        c.setLocaleCountry(locale.getCountry());\n+        c.setLocaleLanguage(locale.getLanguage());\n+        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n+        c.configure(dc);\n+        c.addListener(new BriefLogger(mStream));\n+        return c;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected Checker createChecker(Configuration aCheckConfig)\n        throws Exception\n    {\n        final DefaultConfiguration dc \u003d createCheckerConfig(aCheckConfig);\n        final Checker c \u003d new Checker();\n        // make sure the tests always run with english error messages\n        // so the tests don\u0027t fail in supported locales like german\n        final Locale locale \u003d Locale.ENGLISH;\n        c.setLocaleCountry(locale.getCountry());\n        c.setLocaleLanguage(locale.getLanguage());\n        c.setModuleClassLoader(Thread.currentThread().getContextClassLoader());\n        c.configure(dc);\n        c.addListener(new BriefLogger(mStream));\n        return c;\n    }",
      "path": "src/it/java/com/google/checkstyle/test/base/BaseCheckTestSupport.java"
    }
  }
}