{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ModifiedControlVariableCheck.java",
  "functionName": "leaveToken",
  "functionId": "leaveToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
  "functionStartLine": 223,
  "functionEndLine": 261,
  "numCommitsSeen": 74,
  "timeTaken": 1953,
  "changeHistory": [
    "8c17061e1120a21e3353b3cd53bf01bcee4c8d48",
    "ee1b845b7936df396543bc11dced4676d5af86b6",
    "22c396868005e7ecf77b09c52ab312d54f662235",
    "d80e678fa0939d845583a3acc7501859254c5f2c",
    "5026b7228df4e3d9b79d13f27846987247f9e922",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "0ac000841c1535baabe230787649013331289f3f",
    "ed7bdbd3b2072acbadf4260e26f59a6499556ada"
  ],
  "changeHistoryShort": {
    "8c17061e1120a21e3353b3cd53bf01bcee4c8d48": "Ybodychange",
    "ee1b845b7936df396543bc11dced4676d5af86b6": "Ybodychange",
    "22c396868005e7ecf77b09c52ab312d54f662235": "Ybodychange",
    "d80e678fa0939d845583a3acc7501859254c5f2c": "Ybodychange",
    "5026b7228df4e3d9b79d13f27846987247f9e922": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "0ac000841c1535baabe230787649013331289f3f": "Ybodychange",
    "ed7bdbd3b2072acbadf4260e26f59a6499556ada": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c17061e1120a21e3353b3cd53bf01bcee4c8d48": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: resolve remove conditional for ModifiedControlVariableCheck",
      "commitDate": "04/10/19 1:31 PM",
      "commitName": "8c17061e1120a21e3353b3cd53bf01bcee4c8d48",
      "commitAuthor": "rnveach",
      "commitDateOld": "21/04/19 7:01 AM",
      "commitNameOld": "c8867a448591d32b3117d16c103a8c2d79abc105",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 166.27,
      "commitsBetweenForRepo": 344,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,39 @@\n     public void leaveToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.FOR_ITERATOR:\n                 leaveForIter(ast.getParent());\n                 break;\n             case TokenTypes.FOR_EACH_CLAUSE:\n                 if (!skipEnhancedForLoopVariable) {\n                     final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                     leaveForEach(paramDef);\n                 }\n                 break;\n             case TokenTypes.LITERAL_FOR:\n-                if (!getCurrentVariables().isEmpty()) {\n-                    leaveForDef(ast);\n-                }\n+                leaveForDef(ast);\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 exitBlock();\n                 break;\n             case TokenTypes.ASSIGN:\n             case TokenTypes.PLUS_ASSIGN:\n             case TokenTypes.MINUS_ASSIGN:\n             case TokenTypes.STAR_ASSIGN:\n             case TokenTypes.DIV_ASSIGN:\n             case TokenTypes.MOD_ASSIGN:\n             case TokenTypes.SR_ASSIGN:\n             case TokenTypes.BSR_ASSIGN:\n             case TokenTypes.SL_ASSIGN:\n             case TokenTypes.BAND_ASSIGN:\n             case TokenTypes.BXOR_ASSIGN:\n             case TokenTypes.BOR_ASSIGN:\n             case TokenTypes.INC:\n             case TokenTypes.POST_INC:\n             case TokenTypes.DEC:\n             case TokenTypes.POST_DEC:\n                 //we need that Tokens only at visitToken()\n                 break;\n             default:\n                 throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.FOR_ITERATOR:\n                leaveForIter(ast.getParent());\n                break;\n            case TokenTypes.FOR_EACH_CLAUSE:\n                if (!skipEnhancedForLoopVariable) {\n                    final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                    leaveForEach(paramDef);\n                }\n                break;\n            case TokenTypes.LITERAL_FOR:\n                leaveForDef(ast);\n                break;\n            case TokenTypes.OBJBLOCK:\n                exitBlock();\n                break;\n            case TokenTypes.ASSIGN:\n            case TokenTypes.PLUS_ASSIGN:\n            case TokenTypes.MINUS_ASSIGN:\n            case TokenTypes.STAR_ASSIGN:\n            case TokenTypes.DIV_ASSIGN:\n            case TokenTypes.MOD_ASSIGN:\n            case TokenTypes.SR_ASSIGN:\n            case TokenTypes.BSR_ASSIGN:\n            case TokenTypes.SL_ASSIGN:\n            case TokenTypes.BAND_ASSIGN:\n            case TokenTypes.BXOR_ASSIGN:\n            case TokenTypes.BOR_ASSIGN:\n            case TokenTypes.INC:\n            case TokenTypes.POST_INC:\n            case TokenTypes.DEC:\n            case TokenTypes.POST_DEC:\n                //we need that Tokens only at visitToken()\n                break;\n            default:\n                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "ee1b845b7936df396543bc11dced4676d5af86b6": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant toString() calls. #1555\n\nFixes `UnnecessaryToStringCall` inspection violations.\n\nDescription:\n\u003eReports on any calls to toString() used in string concatenations and as arguments to the print() and println() methods of java.io.PrintWriter and java.io.PrintStream, the append() method of java.lang.StringBuilder and java.lang.StringBuffer or the trace(), debug(), info(), warn() and error() methods of org.slf4j.Logger. In these cases the conversion to string will be handled by the underlying library methods and an explicit call to toString() is no needed.\n Note that without the toString() call the expression will have slightly different semantics (the string null will be used instead of throwing a NullPointerException).\n",
      "commitDate": "08/08/15 7:24 PM",
      "commitName": "ee1b845b7936df396543bc11dced4676d5af86b6",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/08/15 10:23 PM",
      "commitNameOld": "186625600d7678f597f56aa6a83d4b0a89e1fe35",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,41 @@\n     public void leaveToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.FOR_ITERATOR:\n                 leaveForIter(ast.getParent());\n                 break;\n             case TokenTypes.FOR_EACH_CLAUSE:\n                 if (!skipEnhancedForLoopVariable) {\n                     final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                     leaveForEach(paramDef);\n                 }\n                 break;\n             case TokenTypes.LITERAL_FOR:\n                 if (!getCurrentVariables().isEmpty()) {\n                     leaveForDef(ast);\n                 }\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 exitBlock();\n                 break;\n             case TokenTypes.ASSIGN:\n             case TokenTypes.PLUS_ASSIGN:\n             case TokenTypes.MINUS_ASSIGN:\n             case TokenTypes.STAR_ASSIGN:\n             case TokenTypes.DIV_ASSIGN:\n             case TokenTypes.MOD_ASSIGN:\n             case TokenTypes.SR_ASSIGN:\n             case TokenTypes.BSR_ASSIGN:\n             case TokenTypes.SL_ASSIGN:\n             case TokenTypes.BAND_ASSIGN:\n             case TokenTypes.BXOR_ASSIGN:\n             case TokenTypes.BOR_ASSIGN:\n             case TokenTypes.INC:\n             case TokenTypes.POST_INC:\n             case TokenTypes.DEC:\n             case TokenTypes.POST_DEC:\n                 //we need that Tokens only at visitToken()\n                 break;\n             default:\n-                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n+                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.FOR_ITERATOR:\n                leaveForIter(ast.getParent());\n                break;\n            case TokenTypes.FOR_EACH_CLAUSE:\n                if (!skipEnhancedForLoopVariable) {\n                    final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                    leaveForEach(paramDef);\n                }\n                break;\n            case TokenTypes.LITERAL_FOR:\n                if (!getCurrentVariables().isEmpty()) {\n                    leaveForDef(ast);\n                }\n                break;\n            case TokenTypes.OBJBLOCK:\n                exitBlock();\n                break;\n            case TokenTypes.ASSIGN:\n            case TokenTypes.PLUS_ASSIGN:\n            case TokenTypes.MINUS_ASSIGN:\n            case TokenTypes.STAR_ASSIGN:\n            case TokenTypes.DIV_ASSIGN:\n            case TokenTypes.MOD_ASSIGN:\n            case TokenTypes.SR_ASSIGN:\n            case TokenTypes.BSR_ASSIGN:\n            case TokenTypes.SL_ASSIGN:\n            case TokenTypes.BAND_ASSIGN:\n            case TokenTypes.BXOR_ASSIGN:\n            case TokenTypes.BOR_ASSIGN:\n            case TokenTypes.INC:\n            case TokenTypes.POST_INC:\n            case TokenTypes.DEC:\n            case TokenTypes.POST_DEC:\n                //we need that Tokens only at visitToken()\n                break;\n            default:\n                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "22c396868005e7ecf77b09c52ab312d54f662235": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for ModifiedControlVariableCheck.\n",
      "commitDate": "28/07/15 2:05 PM",
      "commitName": "22c396868005e7ecf77b09c52ab312d54f662235",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 5.63,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,41 @@\n     public void leaveToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.FOR_ITERATOR:\n                 leaveForIter(ast.getParent());\n                 break;\n             case TokenTypes.FOR_EACH_CLAUSE:\n-                final DetailAST paramDef \u003d\n-                    ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n-                if (shouldCheckEnhancedForLoopVariable(paramDef)) {\n+                if (!skipEnhancedForLoopVariable) {\n+                    final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                     leaveForEach(paramDef);\n                 }\n                 break;\n             case TokenTypes.LITERAL_FOR:\n                 if (!getCurrentVariables().isEmpty()) {\n                     leaveForDef(ast);\n                 }\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 exitBlock();\n                 break;\n             case TokenTypes.ASSIGN:\n             case TokenTypes.PLUS_ASSIGN:\n             case TokenTypes.MINUS_ASSIGN:\n             case TokenTypes.STAR_ASSIGN:\n             case TokenTypes.DIV_ASSIGN:\n             case TokenTypes.MOD_ASSIGN:\n             case TokenTypes.SR_ASSIGN:\n             case TokenTypes.BSR_ASSIGN:\n             case TokenTypes.SL_ASSIGN:\n             case TokenTypes.BAND_ASSIGN:\n             case TokenTypes.BXOR_ASSIGN:\n             case TokenTypes.BOR_ASSIGN:\n             case TokenTypes.INC:\n             case TokenTypes.POST_INC:\n             case TokenTypes.DEC:\n             case TokenTypes.POST_DEC:\n                 //we need that Tokens only at visitToken()\n                 break;\n             default:\n                 throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.FOR_ITERATOR:\n                leaveForIter(ast.getParent());\n                break;\n            case TokenTypes.FOR_EACH_CLAUSE:\n                if (!skipEnhancedForLoopVariable) {\n                    final DetailAST paramDef \u003d ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                    leaveForEach(paramDef);\n                }\n                break;\n            case TokenTypes.LITERAL_FOR:\n                if (!getCurrentVariables().isEmpty()) {\n                    leaveForDef(ast);\n                }\n                break;\n            case TokenTypes.OBJBLOCK:\n                exitBlock();\n                break;\n            case TokenTypes.ASSIGN:\n            case TokenTypes.PLUS_ASSIGN:\n            case TokenTypes.MINUS_ASSIGN:\n            case TokenTypes.STAR_ASSIGN:\n            case TokenTypes.DIV_ASSIGN:\n            case TokenTypes.MOD_ASSIGN:\n            case TokenTypes.SR_ASSIGN:\n            case TokenTypes.BSR_ASSIGN:\n            case TokenTypes.SL_ASSIGN:\n            case TokenTypes.BAND_ASSIGN:\n            case TokenTypes.BXOR_ASSIGN:\n            case TokenTypes.BOR_ASSIGN:\n            case TokenTypes.INC:\n            case TokenTypes.POST_INC:\n            case TokenTypes.DEC:\n            case TokenTypes.POST_DEC:\n                //we need that Tokens only at visitToken()\n                break;\n            default:\n                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "d80e678fa0939d845583a3acc7501859254c5f2c": {
      "type": "Ybodychange",
      "commitMessage": "skipEnhancedForLoopVariable property is added in ModifiedControlVariableCheck. solves #1015\n",
      "commitDate": "23/06/15 7:22 AM",
      "commitName": "d80e678fa0939d845583a3acc7501859254c5f2c",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 37.11,
      "commitsBetweenForRepo": 188,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,42 @@\n     public void leaveToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.FOR_ITERATOR:\n                 leaveForIter(ast.getParent());\n                 break;\n             case TokenTypes.FOR_EACH_CLAUSE:\n-                leaveForEach(ast);\n+                final DetailAST paramDef \u003d\n+                    ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n+                if (shouldCheckEnhancedForLoopVariable(paramDef)) {\n+                    leaveForEach(paramDef);\n+                }\n                 break;\n             case TokenTypes.LITERAL_FOR:\n-                leaveForDef(ast);\n+                if (!getCurrentVariables().isEmpty()) {\n+                    leaveForDef(ast);\n+                }\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 exitBlock();\n                 break;\n             case TokenTypes.ASSIGN:\n             case TokenTypes.PLUS_ASSIGN:\n             case TokenTypes.MINUS_ASSIGN:\n             case TokenTypes.STAR_ASSIGN:\n             case TokenTypes.DIV_ASSIGN:\n             case TokenTypes.MOD_ASSIGN:\n             case TokenTypes.SR_ASSIGN:\n             case TokenTypes.BSR_ASSIGN:\n             case TokenTypes.SL_ASSIGN:\n             case TokenTypes.BAND_ASSIGN:\n             case TokenTypes.BXOR_ASSIGN:\n             case TokenTypes.BOR_ASSIGN:\n             case TokenTypes.INC:\n             case TokenTypes.POST_INC:\n             case TokenTypes.DEC:\n             case TokenTypes.POST_DEC:\n                 //we need that Tokens only at visitToken()\n                 break;\n             default:\n                 throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.FOR_ITERATOR:\n                leaveForIter(ast.getParent());\n                break;\n            case TokenTypes.FOR_EACH_CLAUSE:\n                final DetailAST paramDef \u003d\n                    ast.findFirstToken(TokenTypes.VARIABLE_DEF);\n                if (shouldCheckEnhancedForLoopVariable(paramDef)) {\n                    leaveForEach(paramDef);\n                }\n                break;\n            case TokenTypes.LITERAL_FOR:\n                if (!getCurrentVariables().isEmpty()) {\n                    leaveForDef(ast);\n                }\n                break;\n            case TokenTypes.OBJBLOCK:\n                exitBlock();\n                break;\n            case TokenTypes.ASSIGN:\n            case TokenTypes.PLUS_ASSIGN:\n            case TokenTypes.MINUS_ASSIGN:\n            case TokenTypes.STAR_ASSIGN:\n            case TokenTypes.DIV_ASSIGN:\n            case TokenTypes.MOD_ASSIGN:\n            case TokenTypes.SR_ASSIGN:\n            case TokenTypes.BSR_ASSIGN:\n            case TokenTypes.SL_ASSIGN:\n            case TokenTypes.BAND_ASSIGN:\n            case TokenTypes.BXOR_ASSIGN:\n            case TokenTypes.BOR_ASSIGN:\n            case TokenTypes.INC:\n            case TokenTypes.POST_INC:\n            case TokenTypes.DEC:\n            case TokenTypes.POST_DEC:\n                //we need that Tokens only at visitToken()\n                break;\n            default:\n                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "5026b7228df4e3d9b79d13f27846987247f9e922": {
      "type": "Ybodychange",
      "commitMessage": "Added option in ModifiedControlVariable Check to ignore validation of variables defined in for which are not change in for iterator part, fix issue #286\n",
      "commitDate": "01/04/15 2:44 PM",
      "commitName": "5026b7228df4e3d9b79d13f27846987247f9e922",
      "commitAuthor": "liscju",
      "commitDateOld": "18/03/15 9:54 PM",
      "commitNameOld": "303d7cc6182e72f5472c8bcd9aa37432986793d1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 13.7,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public void leaveToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.FOR_ITERATOR:\n                 leaveForIter(ast.getParent());\n                 break;\n             case TokenTypes.FOR_EACH_CLAUSE:\n                 leaveForEach(ast);\n                 break;\n             case TokenTypes.LITERAL_FOR:\n                 leaveForDef(ast);\n                 break;\n             case TokenTypes.OBJBLOCK:\n                 exitBlock();\n                 break;\n             case TokenTypes.ASSIGN:\n             case TokenTypes.PLUS_ASSIGN:\n             case TokenTypes.MINUS_ASSIGN:\n             case TokenTypes.STAR_ASSIGN:\n             case TokenTypes.DIV_ASSIGN:\n             case TokenTypes.MOD_ASSIGN:\n             case TokenTypes.SR_ASSIGN:\n             case TokenTypes.BSR_ASSIGN:\n             case TokenTypes.SL_ASSIGN:\n             case TokenTypes.BAND_ASSIGN:\n             case TokenTypes.BXOR_ASSIGN:\n             case TokenTypes.BOR_ASSIGN:\n             case TokenTypes.INC:\n             case TokenTypes.POST_INC:\n             case TokenTypes.DEC:\n             case TokenTypes.POST_DEC:\n-                // Do nothing\n+                //we need that Tokens only at visitToken()\n                 break;\n             default:\n-                throw new IllegalStateException(ast.toString());\n+                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.FOR_ITERATOR:\n                leaveForIter(ast.getParent());\n                break;\n            case TokenTypes.FOR_EACH_CLAUSE:\n                leaveForEach(ast);\n                break;\n            case TokenTypes.LITERAL_FOR:\n                leaveForDef(ast);\n                break;\n            case TokenTypes.OBJBLOCK:\n                exitBlock();\n                break;\n            case TokenTypes.ASSIGN:\n            case TokenTypes.PLUS_ASSIGN:\n            case TokenTypes.MINUS_ASSIGN:\n            case TokenTypes.STAR_ASSIGN:\n            case TokenTypes.DIV_ASSIGN:\n            case TokenTypes.MOD_ASSIGN:\n            case TokenTypes.SR_ASSIGN:\n            case TokenTypes.BSR_ASSIGN:\n            case TokenTypes.SL_ASSIGN:\n            case TokenTypes.BAND_ASSIGN:\n            case TokenTypes.BXOR_ASSIGN:\n            case TokenTypes.BOR_ASSIGN:\n            case TokenTypes.INC:\n            case TokenTypes.POST_INC:\n            case TokenTypes.DEC:\n            case TokenTypes.POST_DEC:\n                //we need that Tokens only at visitToken()\n                break;\n            default:\n                throw new IllegalStateException(ILLEGAL_TYPE_OF_TOKEN + ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n-    public void leaveToken(DetailAST aAST)\n+    public void leaveToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.FOR_ITERATOR:\n-            leaveForIter(aAST.getParent());\n+            leaveForIter(ast.getParent());\n             break;\n         case TokenTypes.FOR_EACH_CLAUSE:\n-            leaveForEach(aAST);\n+            leaveForEach(ast);\n             break;\n         case TokenTypes.LITERAL_FOR:\n-            leaveForDef(aAST);\n+            leaveForDef(ast);\n             break;\n         case TokenTypes.OBJBLOCK:\n             exitBlock();\n             break;\n         case TokenTypes.ASSIGN:\n         case TokenTypes.PLUS_ASSIGN:\n         case TokenTypes.MINUS_ASSIGN:\n         case TokenTypes.STAR_ASSIGN:\n         case TokenTypes.DIV_ASSIGN:\n         case TokenTypes.MOD_ASSIGN:\n         case TokenTypes.SR_ASSIGN:\n         case TokenTypes.BSR_ASSIGN:\n         case TokenTypes.SL_ASSIGN:\n         case TokenTypes.BAND_ASSIGN:\n         case TokenTypes.BXOR_ASSIGN:\n         case TokenTypes.BOR_ASSIGN:\n         case TokenTypes.INC:\n         case TokenTypes.POST_INC:\n         case TokenTypes.DEC:\n         case TokenTypes.POST_DEC:\n             // Do nothing\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void leaveToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.FOR_ITERATOR:\n            leaveForIter(ast.getParent());\n            break;\n        case TokenTypes.FOR_EACH_CLAUSE:\n            leaveForEach(ast);\n            break;\n        case TokenTypes.LITERAL_FOR:\n            leaveForDef(ast);\n            break;\n        case TokenTypes.OBJBLOCK:\n            exitBlock();\n            break;\n        case TokenTypes.ASSIGN:\n        case TokenTypes.PLUS_ASSIGN:\n        case TokenTypes.MINUS_ASSIGN:\n        case TokenTypes.STAR_ASSIGN:\n        case TokenTypes.DIV_ASSIGN:\n        case TokenTypes.MOD_ASSIGN:\n        case TokenTypes.SR_ASSIGN:\n        case TokenTypes.BSR_ASSIGN:\n        case TokenTypes.SL_ASSIGN:\n        case TokenTypes.BAND_ASSIGN:\n        case TokenTypes.BXOR_ASSIGN:\n        case TokenTypes.BOR_ASSIGN:\n        case TokenTypes.INC:\n        case TokenTypes.POST_INC:\n        case TokenTypes.DEC:\n        case TokenTypes.POST_DEC:\n            // Do nothing\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 457,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n-    public void leaveToken(DetailAST aAST)\n+    public void leaveToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.FOR_ITERATOR:\n-            leaveForIter(aAST.getParent());\n+            leaveForIter(ast.getParent());\n             break;\n         case TokenTypes.FOR_EACH_CLAUSE:\n-            leaveForEach(aAST);\n+            leaveForEach(ast);\n             break;\n         case TokenTypes.LITERAL_FOR:\n-            leaveForDef(aAST);\n+            leaveForDef(ast);\n             break;\n         case TokenTypes.OBJBLOCK:\n             exitBlock();\n             break;\n         case TokenTypes.ASSIGN:\n         case TokenTypes.PLUS_ASSIGN:\n         case TokenTypes.MINUS_ASSIGN:\n         case TokenTypes.STAR_ASSIGN:\n         case TokenTypes.DIV_ASSIGN:\n         case TokenTypes.MOD_ASSIGN:\n         case TokenTypes.SR_ASSIGN:\n         case TokenTypes.BSR_ASSIGN:\n         case TokenTypes.SL_ASSIGN:\n         case TokenTypes.BAND_ASSIGN:\n         case TokenTypes.BXOR_ASSIGN:\n         case TokenTypes.BOR_ASSIGN:\n         case TokenTypes.INC:\n         case TokenTypes.POST_INC:\n         case TokenTypes.DEC:\n         case TokenTypes.POST_DEC:\n             // Do nothing\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void leaveToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.FOR_ITERATOR:\n            leaveForIter(ast.getParent());\n            break;\n        case TokenTypes.FOR_EACH_CLAUSE:\n            leaveForEach(ast);\n            break;\n        case TokenTypes.LITERAL_FOR:\n            leaveForDef(ast);\n            break;\n        case TokenTypes.OBJBLOCK:\n            exitBlock();\n            break;\n        case TokenTypes.ASSIGN:\n        case TokenTypes.PLUS_ASSIGN:\n        case TokenTypes.MINUS_ASSIGN:\n        case TokenTypes.STAR_ASSIGN:\n        case TokenTypes.DIV_ASSIGN:\n        case TokenTypes.MOD_ASSIGN:\n        case TokenTypes.SR_ASSIGN:\n        case TokenTypes.BSR_ASSIGN:\n        case TokenTypes.SL_ASSIGN:\n        case TokenTypes.BAND_ASSIGN:\n        case TokenTypes.BXOR_ASSIGN:\n        case TokenTypes.BOR_ASSIGN:\n        case TokenTypes.INC:\n        case TokenTypes.POST_INC:\n        case TokenTypes.DEC:\n        case TokenTypes.POST_DEC:\n            // Do nothing\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void leaveToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.FOR_ITERATOR:\n            leaveForIter(aAST.getParent());\n            break;\n        case TokenTypes.FOR_EACH_CLAUSE:\n            leaveForEach(aAST);\n            break;\n        case TokenTypes.LITERAL_FOR:\n            leaveForDef(aAST);\n            break;\n        case TokenTypes.OBJBLOCK:\n            exitBlock();\n            break;\n        case TokenTypes.ASSIGN:\n        case TokenTypes.PLUS_ASSIGN:\n        case TokenTypes.MINUS_ASSIGN:\n        case TokenTypes.STAR_ASSIGN:\n        case TokenTypes.DIV_ASSIGN:\n        case TokenTypes.MOD_ASSIGN:\n        case TokenTypes.SR_ASSIGN:\n        case TokenTypes.BSR_ASSIGN:\n        case TokenTypes.SL_ASSIGN:\n        case TokenTypes.BAND_ASSIGN:\n        case TokenTypes.BXOR_ASSIGN:\n        case TokenTypes.BOR_ASSIGN:\n        case TokenTypes.INC:\n        case TokenTypes.POST_INC:\n        case TokenTypes.DEC:\n        case TokenTypes.POST_DEC:\n            // Do nothing\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java"
      }
    },
    "0ac000841c1535baabe230787649013331289f3f": {
      "type": "Ybodychange",
      "commitMessage": "Fixed ModifiedControlVariable check to work with for-each (bug 1101851)\n",
      "commitDate": "25/01/05 12:35 AM",
      "commitName": "0ac000841c1535baabe230787649013331289f3f",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 15.91,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,37 @@\n     public void leaveToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n         case TokenTypes.FOR_ITERATOR:\n-            visitForDef(aAST.getParent());\n+            leaveForIter(aAST.getParent());\n+            break;\n+        case TokenTypes.FOR_EACH_CLAUSE:\n+            leaveForEach(aAST);\n             break;\n         case TokenTypes.LITERAL_FOR:\n             leaveForDef(aAST);\n             break;\n         case TokenTypes.OBJBLOCK:\n             exitBlock();\n             break;\n         case TokenTypes.ASSIGN:\n         case TokenTypes.PLUS_ASSIGN:\n         case TokenTypes.MINUS_ASSIGN:\n         case TokenTypes.STAR_ASSIGN:\n         case TokenTypes.DIV_ASSIGN:\n         case TokenTypes.MOD_ASSIGN:\n         case TokenTypes.SR_ASSIGN:\n         case TokenTypes.BSR_ASSIGN:\n         case TokenTypes.SL_ASSIGN:\n         case TokenTypes.BAND_ASSIGN:\n         case TokenTypes.BXOR_ASSIGN:\n         case TokenTypes.BOR_ASSIGN:\n         case TokenTypes.INC:\n         case TokenTypes.POST_INC:\n         case TokenTypes.DEC:\n         case TokenTypes.POST_DEC:\n             // Do nothing\n             break;\n         default:\n             throw new IllegalStateException(aAST.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.FOR_ITERATOR:\n            leaveForIter(aAST.getParent());\n            break;\n        case TokenTypes.FOR_EACH_CLAUSE:\n            leaveForEach(aAST);\n            break;\n        case TokenTypes.LITERAL_FOR:\n            leaveForDef(aAST);\n            break;\n        case TokenTypes.OBJBLOCK:\n            exitBlock();\n            break;\n        case TokenTypes.ASSIGN:\n        case TokenTypes.PLUS_ASSIGN:\n        case TokenTypes.MINUS_ASSIGN:\n        case TokenTypes.STAR_ASSIGN:\n        case TokenTypes.DIV_ASSIGN:\n        case TokenTypes.MOD_ASSIGN:\n        case TokenTypes.SR_ASSIGN:\n        case TokenTypes.BSR_ASSIGN:\n        case TokenTypes.SL_ASSIGN:\n        case TokenTypes.BAND_ASSIGN:\n        case TokenTypes.BXOR_ASSIGN:\n        case TokenTypes.BOR_ASSIGN:\n        case TokenTypes.INC:\n        case TokenTypes.POST_INC:\n        case TokenTypes.DEC:\n        case TokenTypes.POST_DEC:\n            // Do nothing\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java",
      "extendedDetails": {}
    },
    "ed7bdbd3b2072acbadf4260e26f59a6499556ada": {
      "type": "Yintroduced",
      "commitMessage": "ModifiedControlVariableCheck contributed by Daniel Grenner, patch 927680\n",
      "commitDate": "20/05/04 2:38 AM",
      "commitName": "ed7bdbd3b2072acbadf4260e26f59a6499556ada",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,34 @@\n+    public void leaveToken(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+        case TokenTypes.FOR_ITERATOR:\n+            visitForDef(aAST.getParent());\n+            break;\n+        case TokenTypes.LITERAL_FOR:\n+            leaveForDef(aAST);\n+            break;\n+        case TokenTypes.OBJBLOCK:\n+            exitBlock();\n+            break;\n+        case TokenTypes.ASSIGN:\n+        case TokenTypes.PLUS_ASSIGN:\n+        case TokenTypes.MINUS_ASSIGN:\n+        case TokenTypes.STAR_ASSIGN:\n+        case TokenTypes.DIV_ASSIGN:\n+        case TokenTypes.MOD_ASSIGN:\n+        case TokenTypes.SR_ASSIGN:\n+        case TokenTypes.BSR_ASSIGN:\n+        case TokenTypes.SL_ASSIGN:\n+        case TokenTypes.BAND_ASSIGN:\n+        case TokenTypes.BXOR_ASSIGN:\n+        case TokenTypes.BOR_ASSIGN:\n+        case TokenTypes.INC:\n+        case TokenTypes.POST_INC:\n+        case TokenTypes.DEC:\n+        case TokenTypes.POST_DEC:\n+            // Do nothing\n+            break;\n+        default:\n+            throw new IllegalStateException(aAST.toString());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void leaveToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.FOR_ITERATOR:\n            visitForDef(aAST.getParent());\n            break;\n        case TokenTypes.LITERAL_FOR:\n            leaveForDef(aAST);\n            break;\n        case TokenTypes.OBJBLOCK:\n            exitBlock();\n            break;\n        case TokenTypes.ASSIGN:\n        case TokenTypes.PLUS_ASSIGN:\n        case TokenTypes.MINUS_ASSIGN:\n        case TokenTypes.STAR_ASSIGN:\n        case TokenTypes.DIV_ASSIGN:\n        case TokenTypes.MOD_ASSIGN:\n        case TokenTypes.SR_ASSIGN:\n        case TokenTypes.BSR_ASSIGN:\n        case TokenTypes.SL_ASSIGN:\n        case TokenTypes.BAND_ASSIGN:\n        case TokenTypes.BXOR_ASSIGN:\n        case TokenTypes.BOR_ASSIGN:\n        case TokenTypes.INC:\n        case TokenTypes.POST_INC:\n        case TokenTypes.DEC:\n        case TokenTypes.POST_DEC:\n            // Do nothing\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/ModifiedControlVariableCheck.java"
    }
  }
}