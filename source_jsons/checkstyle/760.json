{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DetailNodeTreeStringPrinter.java",
  "functionName": "printTree",
  "functionId": "printTree___ast-DetailNode__rootPrefix-String__prefix-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
  "functionStartLine": 112,
  "functionEndLine": 131,
  "numCommitsSeen": 21,
  "timeTaken": 1815,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
    "67e6b46e9fa424fbd0a2fba611a3a59b30727692",
    "1549ea4822139938296a58f59c38ae14f633c5aa",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": "Ybodychange",
    "67e6b46e9fa424fbd0a2fba611a3a59b30727692": "Ybodychange",
    "1549ea4822139938296a58f59c38ae14f633c5aa": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder(1024);\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                 messageBuilder.append(rootPrefix);\n             }\n             else {\n                 messageBuilder.append(prefix);\n             }\n             messageBuilder.append(getIndentation(node))\n-                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n-                    .append(JavadocUtils.escapeAllControlChars(node.getText())).append(\" [\")\n+                    .append(JavadocUtil.getTokenName(node.getType())).append(\" -\u003e \")\n+                    .append(JavadocUtil.escapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n-                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n-            node \u003d JavadocUtils.getNextSibling(node);\n+                    .append(printTree(JavadocUtil.getFirstChild(node), rootPrefix, prefix));\n+            node \u003d JavadocUtil.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder(1024);\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtil.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(JavadocUtil.escapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtil.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtil.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "06/07/17 1:22 PM",
      "commitNameOld": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 21.0,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n-        final StringBuilder messageBuilder \u003d new StringBuilder();\n+        final StringBuilder messageBuilder \u003d new StringBuilder(1024);\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                 messageBuilder.append(rootPrefix);\n             }\n             else {\n                 messageBuilder.append(prefix);\n             }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                     .append(JavadocUtils.escapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                     .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder(1024);\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(JavadocUtils.escapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
      "extendedDetails": {}
    },
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": {
      "type": "Ybodychange",
      "commitMessage": "spelling: fix some typos in code/javadoc/comments\n",
      "commitDate": "05/04/17 5:37 AM",
      "commitName": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 67.92,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder();\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                 messageBuilder.append(rootPrefix);\n             }\n             else {\n                 messageBuilder.append(prefix);\n             }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n-                    .append(JavadocUtils.excapeAllControlChars(node.getText())).append(\" [\")\n+                    .append(JavadocUtils.escapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                     .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(JavadocUtils.escapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
      "extendedDetails": {}
    },
    "67e6b46e9fa424fbd0a2fba611a3a59b30727692": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3153: IllegalTokenTextCheck and IllegalTokenCheck does not work with COMMENT_CONTENT token\n",
      "commitDate": "08/05/16 5:34 AM",
      "commitName": "67e6b46e9fa424fbd0a2fba611a3a59b30727692",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "10/04/16 2:08 PM",
      "commitNameOld": "1549ea4822139938296a58f59c38ae14f633c5aa",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 27.64,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder();\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                 messageBuilder.append(rootPrefix);\n             }\n             else {\n                 messageBuilder.append(prefix);\n             }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n-                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n+                    .append(JavadocUtils.excapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                     .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(JavadocUtils.excapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
      "extendedDetails": {}
    },
    "1549ea4822139938296a58f59c38ae14f633c5aa": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Issue #3040: New CLI option to print full tree (java+comments+javadoc). (#3078)",
      "commitDate": "10/04/16 2:08 PM",
      "commitName": "1549ea4822139938296a58f59c38ae14f633c5aa",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3040: New CLI option to print full tree (java+comments+javadoc). (#3078)",
          "commitDate": "10/04/16 2:08 PM",
          "commitName": "1549ea4822139938296a58f59c38ae14f633c5aa",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "17/03/16 6:19 AM",
          "commitNameOld": "4ca654c7cbbaad183083a58a99317b24afabac88",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 24.33,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-    private static String printTree(DetailNode ast) {\n+    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder();\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n+                messageBuilder.append(rootPrefix);\n+            }\n+            else {\n+                messageBuilder.append(prefix);\n+            }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                     .append(excapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n-                    .append(printTree(JavadocUtils.getFirstChild(node)));\n+                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
          "extendedDetails": {
            "oldValue": "[ast-DetailNode]",
            "newValue": "[ast-DetailNode, rootPrefix-String, prefix-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #3040: New CLI option to print full tree (java+comments+javadoc). (#3078)",
          "commitDate": "10/04/16 2:08 PM",
          "commitName": "1549ea4822139938296a58f59c38ae14f633c5aa",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "17/03/16 6:19 AM",
          "commitNameOld": "4ca654c7cbbaad183083a58a99317b24afabac88",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 24.33,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-    private static String printTree(DetailNode ast) {\n+    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder();\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n+                messageBuilder.append(rootPrefix);\n+            }\n+            else {\n+                messageBuilder.append(prefix);\n+            }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                     .append(excapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n-                    .append(printTree(JavadocUtils.getFirstChild(node)));\n+                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3040: New CLI option to print full tree (java+comments+javadoc). (#3078)",
          "commitDate": "10/04/16 2:08 PM",
          "commitName": "1549ea4822139938296a58f59c38ae14f633c5aa",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "17/03/16 6:19 AM",
          "commitNameOld": "4ca654c7cbbaad183083a58a99317b24afabac88",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 24.33,
          "commitsBetweenForRepo": 46,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,20 @@\n-    private static String printTree(DetailNode ast) {\n+    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n         final StringBuilder messageBuilder \u003d new StringBuilder();\n         DetailNode node \u003d ast;\n         while (node !\u003d null) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n+                messageBuilder.append(rootPrefix);\n+            }\n+            else {\n+                messageBuilder.append(prefix);\n+            }\n             messageBuilder.append(getIndentation(node))\n                     .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                     .append(excapeAllControlChars(node.getText())).append(\" [\")\n                     .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                     .append(\u0027]\u0027).append(LINE_SEPARATOR)\n-                    .append(printTree(JavadocUtils.getFirstChild(node)));\n+                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n             node \u003d JavadocUtils.getNextSibling(node);\n         }\n         return messageBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static String printTree(DetailNode ast, String rootPrefix, String prefix) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC) {\n                messageBuilder.append(rootPrefix);\n            }\n            else {\n                messageBuilder.append(prefix);\n            }\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node), rootPrefix, prefix));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java",
          "extendedDetails": {}
        }
      ]
    },
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": {
      "type": "Yintroduced",
      "commitMessage": "Issue #652: New CLI option to print Javadoc comment parse tree\n",
      "commitDate": "17/03/16 6:19 AM",
      "commitName": "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,14 @@\n+    private static String printTree(DetailNode ast) {\n+        final StringBuilder messageBuilder \u003d new StringBuilder();\n+        DetailNode node \u003d ast;\n+        while (node !\u003d null) {\n+            messageBuilder.append(getIndentation(node))\n+                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n+                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n+                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n+                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n+                    .append(printTree(JavadocUtils.getFirstChild(node)));\n+            node \u003d JavadocUtils.getNextSibling(node);\n+        }\n+        return messageBuilder.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static String printTree(DetailNode ast) {\n        final StringBuilder messageBuilder \u003d new StringBuilder();\n        DetailNode node \u003d ast;\n        while (node !\u003d null) {\n            messageBuilder.append(getIndentation(node))\n                    .append(JavadocUtils.getTokenName(node.getType())).append(\" -\u003e \")\n                    .append(excapeAllControlChars(node.getText())).append(\" [\")\n                    .append(node.getLineNumber()).append(\u0027:\u0027).append(node.getColumnNumber())\n                    .append(\u0027]\u0027).append(LINE_SEPARATOR)\n                    .append(printTree(JavadocUtils.getFirstChild(node)));\n            node \u003d JavadocUtils.getNextSibling(node);\n        }\n        return messageBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DetailNodeTreeStringPrinter.java"
    }
  }
}