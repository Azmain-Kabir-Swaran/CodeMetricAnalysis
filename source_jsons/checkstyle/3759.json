{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileText.java",
  "functionName": "readFile",
  "functionId": "readFile___inputFile-File(modifiers-final)__decoder-CharsetDecoder(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
  "functionStartLine": 195,
  "functionEndLine": 213,
  "numCommitsSeen": 55,
  "timeTaken": 1634,
  "changeHistory": [
    "c28b535e91cb73f7630230695ef52fdf655e46e4",
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
    "98fd9b84ef6fa5f7bb5d1a6299605c3f6e6e458f",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "94df4ad94faa1230f06521e9457472e0ebd2715a",
    "4ae3c958225827c9913840942aa8561b8f6be516",
    "13a49cc45b1527357934dd7802c24686d7bb7858",
    "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c"
  ],
  "changeHistoryShort": {
    "c28b535e91cb73f7630230695ef52fdf655e46e4": "Ybodychange",
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538": "Ybodychange",
    "98fd9b84ef6fa5f7bb5d1a6299605c3f6e6e458f": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "94df4ad94faa1230f06521e9457472e0ebd2715a": "Ybodychange",
    "4ae3c958225827c9913840942aa8561b8f6be516": "Ybodychange",
    "13a49cc45b1527357934dd7802c24686d7bb7858": "Ymodifierchange",
    "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c28b535e91cb73f7630230695ef52fdf655e46e4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5616: Remove remnants of cobertura usage\n",
      "commitDate": "20/04/18 11:55 AM",
      "commitName": "c28b535e91cb73f7630230695ef52fdf655e46e4",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,19 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n         final StringBuilder buf \u003d new StringBuilder(1024);\n         final InputStream stream \u003d Files.newInputStream(inputFile.toPath());\n-        final Reader reader \u003d new InputStreamReader(stream, decoder);\n-        try {\n+        try (Reader reader \u003d new InputStreamReader(stream, decoder)) {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003d\u003d -1) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n-        finally {\n-            CommonUtils.close(reader);\n-        }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder(1024);\n        final InputStream stream \u003d Files.newInputStream(inputFile.toPath());\n        try (Reader reader \u003d new InputStreamReader(stream, decoder)) {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003d\u003d -1) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5638: File{Input,Output}Stream to Files.new{Input,Output}Stream\n",
      "commitDate": "14/04/18 5:52 AM",
      "commitName": "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "02/01/18 1:24 PM",
      "commitNameOld": "dabb75d43c7e02317565dde4c5e60f380d3b16b8",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 101.64,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n         final StringBuilder buf \u003d new StringBuilder(1024);\n-        final FileInputStream stream \u003d new FileInputStream(inputFile);\n+        final InputStream stream \u003d Files.newInputStream(inputFile.toPath());\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003d\u003d -1) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n             CommonUtils.close(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder(1024);\n        final InputStream stream \u003d Files.newInputStream(inputFile.toPath());\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003d\u003d -1) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            CommonUtils.close(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "98fd9b84ef6fa5f7bb5d1a6299605c3f6e6e458f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3455: removed guava from api code",
      "commitDate": "31/12/17 7:18 AM",
      "commitName": "98fd9b84ef6fa5f7bb5d1a6299605c3f6e6e458f",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/08/17 5:06 PM",
      "commitNameOld": "4acf7a786285d95d2c544f6d7daf6b31b86e0b44",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 135.63,
      "commitsBetweenForRepo": 370,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n         final StringBuilder buf \u003d new StringBuilder(1024);\n         final FileInputStream stream \u003d new FileInputStream(inputFile);\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003d\u003d -1) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n-            Closeables.closeQuietly(reader);\n+            CommonUtils.close(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder(1024);\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003d\u003d -1) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            CommonUtils.close(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "23/07/17 6:19 PM",
      "commitNameOld": "4c10bc55b4aea0f7e3b95b06d820eedb7c6a6fb2",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 3.79,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n-        final StringBuilder buf \u003d new StringBuilder();\n+        final StringBuilder buf \u003d new StringBuilder(1024);\n         final FileInputStream stream \u003d new FileInputStream(inputFile);\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003d\u003d -1) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n             Closeables.closeQuietly(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder(1024);\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003d\u003d -1) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            Closeables.closeQuietly(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "94df4ad94faa1230f06521e9457472e0ebd2715a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4394: increase coverage of pitest-checkstyle-api profile to 96%\n",
      "commitDate": "14/07/17 4:28 PM",
      "commitName": "94df4ad94faa1230f06521e9457472e0ebd2715a",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "10/07/17 12:57 PM",
      "commitNameOld": "0c2abadbb7f2887f31011157d62edf40bea131c3",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 4.15,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         if (!inputFile.exists()) {\n             throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n         }\n         final StringBuilder buf \u003d new StringBuilder();\n         final FileInputStream stream \u003d new FileInputStream(inputFile);\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n-                if (len \u003c 0) {\n+                if (len \u003d\u003d -1) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n             Closeables.closeQuietly(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder();\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003d\u003d -1) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            Closeables.closeQuietly(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "4ae3c958225827c9913840942aa8561b8f6be516": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2137: Make test for FileTabCharacter locale and OS independent\n",
      "commitDate": "07/09/15 1:57 PM",
      "commitName": "4ae3c958225827c9913840942aa8561b8f6be516",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "31/08/15 11:51 AM",
      "commitNameOld": "c899af31c112c07ea1244f6bbe2c5c6c56818ae5",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 7.09,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n     private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n+        if (!inputFile.exists()) {\n+            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n+        }\n         final StringBuilder buf \u003d new StringBuilder();\n         final FileInputStream stream \u003d new FileInputStream(inputFile);\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003c 0) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n             Closeables.closeQuietly(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        if (!inputFile.exists()) {\n            throw new FileNotFoundException(inputFile.getPath() + \" (No such file or directory)\");\n        }\n        final StringBuilder buf \u003d new StringBuilder();\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003c 0) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            Closeables.closeQuietly(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {}
    },
    "13a49cc45b1527357934dd7802c24686d7bb7858": {
      "type": "Ymodifierchange",
      "commitMessage": "Mark method as static. #1555\n\nFixes `MethodMayBeStatic` inspection violation introduced in recent commit.\n\nDescription:\n\u003eReports any methods which may safely be made static. A method may be static if it is not synchronized, it does not reference any of its class\u0027 non static methods and non static fields and is not overridden in a sub class.\n",
      "commitDate": "27/08/15 5:43 AM",
      "commitName": "13a49cc45b1527357934dd7802c24686d7bb7858",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "26/08/15 12:50 PM",
      "commitNameOld": "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.7,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    private String readFile(final File inputFile, final CharsetDecoder decoder)\n+    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n             throws IOException {\n         final StringBuilder buf \u003d new StringBuilder();\n         final FileInputStream stream \u003d new FileInputStream(inputFile);\n         final Reader reader \u003d new InputStreamReader(stream, decoder);\n         try {\n             final char[] chars \u003d new char[READ_BUFFER_SIZE];\n             while (true) {\n                 final int len \u003d reader.read(chars);\n                 if (len \u003c 0) {\n                     break;\n                 }\n                 buf.append(chars, 0, len);\n             }\n         }\n         finally {\n             Closeables.closeQuietly(reader);\n         }\n         return buf.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        final StringBuilder buf \u003d new StringBuilder();\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003c 0) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            Closeables.closeQuietly(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c": {
      "type": "Yintroduced",
      "commitMessage": "Issue #1566: Reduce FileText\u0027s constructor length\n",
      "commitDate": "26/08/15 12:50 PM",
      "commitName": "d6bdd7ee798c9c3b721483cae4efb8faa97c8f1c",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,20 @@\n+    private String readFile(final File inputFile, final CharsetDecoder decoder)\n+            throws IOException {\n+        final StringBuilder buf \u003d new StringBuilder();\n+        final FileInputStream stream \u003d new FileInputStream(inputFile);\n+        final Reader reader \u003d new InputStreamReader(stream, decoder);\n+        try {\n+            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n+            while (true) {\n+                final int len \u003d reader.read(chars);\n+                if (len \u003c 0) {\n+                    break;\n+                }\n+                buf.append(chars, 0, len);\n+            }\n+        }\n+        finally {\n+            Closeables.closeQuietly(reader);\n+        }\n+        return buf.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String readFile(final File inputFile, final CharsetDecoder decoder)\n            throws IOException {\n        final StringBuilder buf \u003d new StringBuilder();\n        final FileInputStream stream \u003d new FileInputStream(inputFile);\n        final Reader reader \u003d new InputStreamReader(stream, decoder);\n        try {\n            final char[] chars \u003d new char[READ_BUFFER_SIZE];\n            while (true) {\n                final int len \u003d reader.read(chars);\n                if (len \u003c 0) {\n                    break;\n                }\n                buf.append(chars, 0, len);\n            }\n        }\n        finally {\n            Closeables.closeQuietly(reader);\n        }\n        return buf.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/FileText.java"
    }
  }
}