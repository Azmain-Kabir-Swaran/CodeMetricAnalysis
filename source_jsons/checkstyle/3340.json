{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultLogger.java",
  "functionName": "addError",
  "functionId": "addError___event-AuditEvent",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
  "functionStartLine": 151,
  "functionEndLine": 157,
  "numCommitsSeen": 114,
  "timeTaken": 2580,
  "changeHistory": [
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf",
    "ee1b845b7936df396543bc11dced4676d5af86b6",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959",
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc",
    "e8a1b54e7935ff07c181f7d2130d55dbb29baddc",
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
    "12e8a3664b264388535070b5b7641f9f469adade",
    "add2bdfb27494bff5fa9c305d9782f57c6170b18",
    "6970485b88600343de72af03a6bf87cf78e6cf55",
    "2279ec2a489d1104f2741f2aa3458857d862ac34",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d"
  ],
  "changeHistoryShort": {
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ymultichange(Yparameterchange,Ybodychange)",
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf": "Ybodychange",
    "ee1b845b7936df396543bc11dced4676d5af86b6": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": "Ybodychange",
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959": "Ybodychange",
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff": "Ybodychange",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": "Ybodychange",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc": "Ybodychange",
    "e8a1b54e7935ff07c181f7d2130d55dbb29baddc": "Ybodychange",
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1": "Ybodychange",
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95": "Ybodychange",
    "12e8a3664b264388535070b5b7641f9f469adade": "Ybodychange",
    "add2bdfb27494bff5fa9c305d9782f57c6170b18": "Ybodychange",
    "6970485b88600343de72af03a6bf87cf78e6cf55": "Ybodychange",
    "2279ec2a489d1104f2741f2aa3458857d862ac34": "Ybodychange",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2666: Print name of the Check after printing violation message\n",
      "commitDate": "25/12/15 12:20 PM",
      "commitName": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "23/10/15 5:47 AM",
      "commitNameOld": "57408d4463be061da4c3f01730389e80aeed5f15",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 63.31,
      "commitsBetweenForRepo": 321,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,7 @@\n     public void addError(AuditEvent event) {\n         final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n         if (severityLevel !\u003d SeverityLevel.IGNORE) {\n-\n-            final String fileName \u003d event.getFileName();\n-            final String message \u003d event.getMessage();\n-\n-            // avoid StringBuffer.expandCapacity\n-            final int bufLen \u003d fileName.length() + message.length()\n-                + BUFFER_CUSHION;\n-            final StringBuilder sb \u003d new StringBuilder(bufLen);\n-\n-            sb.append(fileName).append(\u0027:\u0027).append(event.getLine());\n-            if (event.getColumn() \u003e 0) {\n-                sb.append(\u0027:\u0027).append(event.getColumn());\n-            }\n-            final String errorMessageSeparator \u003d \": \";\n-            if (printSeverity) {\n-                sb.append(errorMessageSeparator).append(severityLevel.getName());\n-            }\n-            sb.append(errorMessageSeparator).append(message);\n-            errorWriter.println(sb);\n+            final String errorMessage \u003d formatter.format(event);\n+            errorWriter.println(errorMessage);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent event) {\n        final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n            final String errorMessage \u003d formatter.format(event);\n            errorWriter.println(errorMessage);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": "16/10/15 4:35 PM",
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #2080: Fix typos in code\n",
          "commitDate": "16/10/15 4:35 PM",
          "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "06/10/15 5:46 PM",
          "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 9.95,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    public void addError(AuditEvent evt) {\n-        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n+    public void addError(AuditEvent event) {\n+        final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n         if (severityLevel !\u003d SeverityLevel.IGNORE) {\n \n-            final String fileName \u003d evt.getFileName();\n-            final String message \u003d evt.getMessage();\n+            final String fileName \u003d event.getFileName();\n+            final String message \u003d event.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n-            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n-            if (evt.getColumn() \u003e 0) {\n-                sb.append(\u0027:\u0027).append(evt.getColumn());\n+            sb.append(fileName).append(\u0027:\u0027).append(event.getLine());\n+            if (event.getColumn() \u003e 0) {\n+                sb.append(\u0027:\u0027).append(event.getColumn());\n             }\n             final String errorMessageSeparator \u003d \": \";\n             if (printSeverity) {\n                 sb.append(errorMessageSeparator).append(severityLevel.getName());\n             }\n             sb.append(errorMessageSeparator).append(message);\n             errorWriter.println(sb);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void addError(AuditEvent event) {\n        final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n\n            final String fileName \u003d event.getFileName();\n            final String message \u003d event.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(event.getLine());\n            if (event.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(event.getColumn());\n            }\n            final String errorMessageSeparator \u003d \": \";\n            if (printSeverity) {\n                sb.append(errorMessageSeparator).append(severityLevel.getName());\n            }\n            sb.append(errorMessageSeparator).append(message);\n            errorWriter.println(sb);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
          "extendedDetails": {
            "oldValue": "[evt-AuditEvent]",
            "newValue": "[event-AuditEvent]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #2080: Fix typos in code\n",
          "commitDate": "16/10/15 4:35 PM",
          "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "06/10/15 5:46 PM",
          "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 9.95,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    public void addError(AuditEvent evt) {\n-        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n+    public void addError(AuditEvent event) {\n+        final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n         if (severityLevel !\u003d SeverityLevel.IGNORE) {\n \n-            final String fileName \u003d evt.getFileName();\n-            final String message \u003d evt.getMessage();\n+            final String fileName \u003d event.getFileName();\n+            final String message \u003d event.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n-            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n-            if (evt.getColumn() \u003e 0) {\n-                sb.append(\u0027:\u0027).append(evt.getColumn());\n+            sb.append(fileName).append(\u0027:\u0027).append(event.getLine());\n+            if (event.getColumn() \u003e 0) {\n+                sb.append(\u0027:\u0027).append(event.getColumn());\n             }\n             final String errorMessageSeparator \u003d \": \";\n             if (printSeverity) {\n                 sb.append(errorMessageSeparator).append(severityLevel.getName());\n             }\n             sb.append(errorMessageSeparator).append(message);\n             errorWriter.println(sb);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void addError(AuditEvent event) {\n        final SeverityLevel severityLevel \u003d event.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n\n            final String fileName \u003d event.getFileName();\n            final String message \u003d event.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(event.getLine());\n            if (event.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(event.getColumn());\n            }\n            final String errorMessageSeparator \u003d \": \";\n            if (printSeverity) {\n                sb.append(errorMessageSeparator).append(severityLevel.getName());\n            }\n            sb.append(errorMessageSeparator).append(message);\n            errorWriter.println(sb);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf": {
      "type": "Ybodychange",
      "commitMessage": "Issue #67: Added support of logging severity for all audit events\n",
      "commitDate": "10/09/15 2:57 AM",
      "commitName": "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "31/08/15 10:02 AM",
      "commitNameOld": "5ca96679525171c73fc4d5c257301f51d2100071",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 9.7,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     public void addError(AuditEvent evt) {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (severityLevel !\u003d SeverityLevel.IGNORE) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n-            if (severityLevel \u003d\u003d SeverityLevel.WARNING) {\n-                sb.append(\": warning\");\n+            final String errorMessageSeparator \u003d \": \";\n+            if (printSeverity) {\n+                sb.append(errorMessageSeparator).append(severityLevel.getName());\n             }\n-            sb.append(\": \").append(message);\n+            sb.append(errorMessageSeparator).append(message);\n             errorWriter.println(sb);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt) {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            final String errorMessageSeparator \u003d \": \";\n            if (printSeverity) {\n                sb.append(errorMessageSeparator).append(severityLevel.getName());\n            }\n            sb.append(errorMessageSeparator).append(message);\n            errorWriter.println(sb);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "ee1b845b7936df396543bc11dced4676d5af86b6": {
      "type": "Ybodychange",
      "commitMessage": "Remove redundant toString() calls. #1555\n\nFixes `UnnecessaryToStringCall` inspection violations.\n\nDescription:\n\u003eReports on any calls to toString() used in string concatenations and as arguments to the print() and println() methods of java.io.PrintWriter and java.io.PrintStream, the append() method of java.lang.StringBuilder and java.lang.StringBuffer or the trace(), debug(), info(), warn() and error() methods of org.slf4j.Logger. In these cases the conversion to string will be handled by the underlying library methods and an explicit call to toString() is no needed.\n Note that without the toString() call the expression will have slightly different semantics (the string null will be used instead of throwing a NullPointerException).\n",
      "commitDate": "08/08/15 7:24 PM",
      "commitName": "ee1b845b7936df396543bc11dced4676d5af86b6",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/08/15 6:46 PM",
      "commitNameOld": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void addError(AuditEvent evt) {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (severityLevel !\u003d SeverityLevel.IGNORE) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n             if (severityLevel \u003d\u003d SeverityLevel.WARNING) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n-            errorWriter.println(sb.toString());\n+            errorWriter.println(sb);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt) {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (severityLevel \u003d\u003d SeverityLevel.WARNING) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": "08/08/15 6:46 PM",
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "23/06/15 10:18 PM",
      "commitNameOld": "49928eafc9b2cff02565ad5bb38b4e0ee020739d",
      "commitAuthorOld": "Bhavik Patel",
      "daysBetweenCommits": 45.85,
      "commitsBetweenForRepo": 440,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void addError(AuditEvent evt) {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n-        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n+        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n-            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n+            if (severityLevel \u003d\u003d SeverityLevel.WARNING) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt) {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (severityLevel !\u003d SeverityLevel.IGNORE) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (severityLevel \u003d\u003d SeverityLevel.WARNING) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027strings\u0027 ruleset, issue #873\n",
      "commitDate": "15/04/15 8:56 AM",
      "commitName": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/04/15 10:37 PM",
      "commitNameOld": "702a1a957607881e72bb94b3104c2603ef10891f",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 6.43,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,24 @@\n     public void addError(AuditEvent evt)\n     {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (SeverityLevel.IGNORE !\u003d severityLevel) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n-            sb.append(fileName);\n-            sb.append(\u0027:\u0027).append(evt.getLine());\n+            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n             if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName).append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Added support of logging severity for all audit events, issue #67\"\n\nThis reverts commit ca3ffb73abc810385a4ce8fe685ad31c9d172bff.\n",
      "commitDate": "17/03/15 10:15 PM",
      "commitName": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "14/03/15 11:32 PM",
      "commitNameOld": "ca3ffb73abc810385a4ce8fe685ad31c9d172bff",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 2.95,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void addError(AuditEvent evt)\n     {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (SeverityLevel.IGNORE !\u003d severityLevel) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n-            if (printSeverity) {\n-                sb.append(\": \").append(severityLevel.getName());\n+            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n+                sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff": {
      "type": "Ybodychange",
      "commitMessage": "Added support of logging severity for all audit events, issue #67\n",
      "commitDate": "14/03/15 11:32 PM",
      "commitName": "ca3ffb73abc810385a4ce8fe685ad31c9d172bff",
      "commitAuthor": "alexkravin",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 4.37,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void addError(AuditEvent evt)\n     {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (SeverityLevel.IGNORE !\u003d severityLevel) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n-            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n-                sb.append(\": warning\");\n+            if (printSeverity) {\n+                sb.append(\": \").append(severityLevel.getName());\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (printSeverity) {\n                sb.append(\": \").append(severityLevel.getName());\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": {
      "type": "Ybodychange",
      "commitMessage": "Replace calls to equals() on enums with identity comparison\n\nThis replacement is safe because two enum constants are equal only when they have the same identity.\n",
      "commitDate": "10/03/15 7:46 AM",
      "commitName": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.73,
      "commitsBetweenForRepo": 102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void addError(AuditEvent evt)\n     {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n-        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n+        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n-            if (SeverityLevel.WARNING.equals(severityLevel)) {\n+            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (SeverityLevel.IGNORE !\u003d severityLevel) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING \u003d\u003d severityLevel) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": {
      "type": "Ybodychange",
      "commitMessage": "Replace `StringBuffer` with `StringBuilder` to improve performance\n\nThread-safety given by `StringBuffer` doesn\u0027t give any benefit when used within one method, so in such cases `StringBuilder` is safe and more efficient replacement.\n",
      "commitDate": "15/02/15 12:57 AM",
      "commitName": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/01/15 6:38 AM",
      "commitNameOld": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 26.76,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void addError(AuditEvent evt)\n     {\n         final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n \n             final String fileName \u003d evt.getFileName();\n             final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n-            final StringBuffer sb \u003d new StringBuffer(bufLen);\n+            final StringBuilder sb \u003d new StringBuilder(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(evt.getLine());\n             if (evt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n             if (SeverityLevel.WARNING.equals(severityLevel)) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuilder sb \u003d new StringBuilder(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.34,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    public void addError(AuditEvent aEvt)\n+    public void addError(AuditEvent evt)\n     {\n-        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n+        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n \n-            final String fileName \u003d aEvt.getFileName();\n-            final String message \u003d aEvt.getMessage();\n+            final String fileName \u003d evt.getFileName();\n+            final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuffer sb \u003d new StringBuffer(bufLen);\n \n             sb.append(fileName);\n-            sb.append(\u0027:\u0027).append(aEvt.getLine());\n-            if (aEvt.getColumn() \u003e 0) {\n-                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n+            sb.append(\u0027:\u0027).append(evt.getLine());\n+            if (evt.getColumn() \u003e 0) {\n+                sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n             if (SeverityLevel.WARNING.equals(severityLevel)) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n-            mErrorWriter.println(sb.toString());\n+            errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
          "extendedDetails": {
            "oldValue": "[aEvt-AuditEvent]",
            "newValue": "[evt-AuditEvent]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.34,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    public void addError(AuditEvent aEvt)\n+    public void addError(AuditEvent evt)\n     {\n-        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n+        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n         if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n \n-            final String fileName \u003d aEvt.getFileName();\n-            final String message \u003d aEvt.getMessage();\n+            final String fileName \u003d evt.getFileName();\n+            final String message \u003d evt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length()\n                 + BUFFER_CUSHION;\n             final StringBuffer sb \u003d new StringBuffer(bufLen);\n \n             sb.append(fileName);\n-            sb.append(\u0027:\u0027).append(aEvt.getLine());\n-            if (aEvt.getColumn() \u003e 0) {\n-                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n+            sb.append(\u0027:\u0027).append(evt.getLine());\n+            if (evt.getColumn() \u003e 0) {\n+                sb.append(\u0027:\u0027).append(evt.getColumn());\n             }\n             if (SeverityLevel.WARNING.equals(severityLevel)) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n-            mErrorWriter.println(sb.toString());\n+            errorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void addError(AuditEvent evt)\n    {\n        final SeverityLevel severityLevel \u003d evt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d evt.getFileName();\n            final String message \u003d evt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(evt.getLine());\n            if (evt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(evt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            errorWriter.println(sb.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d aEvt.getFileName();\n            final String message \u003d aEvt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(aEvt.getLine());\n            if (aEvt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            mErrorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/DefaultLogger.java"
      }
    },
    "5cf355fad4b8bc613962aac2f52b48d5726f2acc": {
      "type": "Ybodychange",
      "commitMessage": "out magic numbers\n",
      "commitDate": "12/05/03 2:39 AM",
      "commitName": "5cf355fad4b8bc613962aac2f52b48d5726f2acc",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "31/03/03 9:52 AM",
      "commitNameOld": "e8a1b54e7935ff07c181f7d2130d55dbb29baddc",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 41.66,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n     public void addError(AuditEvent aEvt)\n     {\n         final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n         if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n \n             final String fileName \u003d aEvt.getFileName();\n             final String message \u003d aEvt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n-            final int bufLen \u003d fileName.length() + message.length() + 12;\n+            final int bufLen \u003d fileName.length() + message.length()\n+                + BUFFER_CUSHION;\n             final StringBuffer sb \u003d new StringBuffer(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(aEvt.getLine());\n             if (aEvt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(aEvt.getColumn());\n             }\n             if (SeverityLevel.WARNING.equals(severityLevel)) {\n                 sb.append(\": warning\");\n             }\n             sb.append(\": \").append(message);\n             mErrorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d aEvt.getFileName();\n            final String message \u003d aEvt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length()\n                + BUFFER_CUSHION;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(aEvt.getLine());\n            if (aEvt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            mErrorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "e8a1b54e7935ff07c181f7d2130d55dbb29baddc": {
      "type": "Ybodychange",
      "commitMessage": "behave like gcc when emitting warnings, i.e. prepend \"warning: \" to the message\n",
      "commitDate": "31/03/03 9:52 AM",
      "commitName": "e8a1b54e7935ff07c181f7d2130d55dbb29baddc",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "23/03/03 12:24 AM",
      "commitNameOld": "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 8.39,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {\n+        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n+        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n \n             final String fileName \u003d aEvt.getFileName();\n             final String message \u003d aEvt.getMessage();\n \n             // avoid StringBuffer.expandCapacity\n             final int bufLen \u003d fileName.length() + message.length() + 12;\n             final StringBuffer sb \u003d new StringBuffer(bufLen);\n \n             sb.append(fileName);\n             sb.append(\u0027:\u0027).append(aEvt.getLine());\n             if (aEvt.getColumn() \u003e 0) {\n                 sb.append(\u0027:\u0027).append(aEvt.getColumn());\n             }\n+            if (SeverityLevel.WARNING.equals(severityLevel)) {\n+                sb.append(\": warning\");\n+            }\n             sb.append(\": \").append(message);\n             mErrorWriter.println(sb.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        final SeverityLevel severityLevel \u003d aEvt.getSeverityLevel();\n        if (!SeverityLevel.IGNORE.equals(severityLevel)) {\n\n            final String fileName \u003d aEvt.getFileName();\n            final String message \u003d aEvt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length() + 12;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(aEvt.getLine());\n            if (aEvt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n            }\n            if (SeverityLevel.WARNING.equals(severityLevel)) {\n                sb.append(\": warning\");\n            }\n            sb.append(\": \").append(message);\n            mErrorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1": {
      "type": "Ybodychange",
      "commitMessage": "only log non-IGNORE events\n",
      "commitDate": "23/03/03 12:24 AM",
      "commitName": "bd9f7c6809f0811b4847d6b9b5e9298125bf96b1",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "10/03/03 10:56 PM",
      "commitNameOld": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 12.06,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        final String fileName \u003d aEvt.getFileName();\n-        final String message \u003d aEvt.getMessage();\n+        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {\n \n-        // avoid StringBuffer.expandCapacity\n-        final int bufLen \u003d fileName.length() + message.length() + 12;\n-        final StringBuffer sb \u003d new StringBuffer(bufLen);\n+            final String fileName \u003d aEvt.getFileName();\n+            final String message \u003d aEvt.getMessage();\n \n-        sb.append(fileName);\n-        sb.append(\u0027:\u0027).append(aEvt.getLine());\n-        if (aEvt.getColumn() \u003e 0) {\n-            sb.append(\u0027:\u0027).append(aEvt.getColumn());\n+            // avoid StringBuffer.expandCapacity\n+            final int bufLen \u003d fileName.length() + message.length() + 12;\n+            final StringBuffer sb \u003d new StringBuffer(bufLen);\n+\n+            sb.append(fileName);\n+            sb.append(\u0027:\u0027).append(aEvt.getLine());\n+            if (aEvt.getColumn() \u003e 0) {\n+                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n+            }\n+            sb.append(\": \").append(message);\n+            mErrorWriter.println(sb.toString());\n         }\n-        sb.append(\": \").append(message);\n-        mErrorWriter.println(sb.toString());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        if (!SeverityLevel.IGNORE.equals(aEvt.getSeverityLevel())) {\n\n            final String fileName \u003d aEvt.getFileName();\n            final String message \u003d aEvt.getMessage();\n\n            // avoid StringBuffer.expandCapacity\n            final int bufLen \u003d fileName.length() + message.length() + 12;\n            final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n            sb.append(fileName);\n            sb.append(\u0027:\u0027).append(aEvt.getLine());\n            if (aEvt.getColumn() \u003e 0) {\n                sb.append(\u0027:\u0027).append(aEvt.getColumn());\n            }\n            sb.append(\": \").append(message);\n            mErrorWriter.println(sb.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "53197d9be9366ccf9ebccc1e6e31270c1dff8e95": {
      "type": "Ybodychange",
      "commitMessage": "Patch from David Schneider to add Severity to logged messages.\n",
      "commitDate": "10/03/03 10:56 PM",
      "commitName": "53197d9be9366ccf9ebccc1e6e31270c1dff8e95",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "10/11/02 3:33 AM",
      "commitNameOld": "12e8a3664b264388535070b5b7641f9f469adade",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 120.81,
      "commitsBetweenForRepo": 530,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        String fileName \u003d aEvt.getFileName();\n-        String message \u003d aEvt.getMessage();\n+        final String fileName \u003d aEvt.getFileName();\n+        final String message \u003d aEvt.getMessage();\n \n         // avoid StringBuffer.expandCapacity\n-        int bufLen \u003d fileName.length() + message.length() + 12;\n-\n-        StringBuffer sb \u003d new StringBuffer(bufLen);\n+        final int bufLen \u003d fileName.length() + message.length() + 12;\n+        final StringBuffer sb \u003d new StringBuffer(bufLen);\n \n         sb.append(fileName);\n         sb.append(\u0027:\u0027).append(aEvt.getLine());\n         if (aEvt.getColumn() \u003e 0) {\n             sb.append(\u0027:\u0027).append(aEvt.getColumn());\n         }\n         sb.append(\": \").append(message);\n         mErrorWriter.println(sb.toString());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        final String fileName \u003d aEvt.getFileName();\n        final String message \u003d aEvt.getMessage();\n\n        // avoid StringBuffer.expandCapacity\n        final int bufLen \u003d fileName.length() + message.length() + 12;\n        final StringBuffer sb \u003d new StringBuffer(bufLen);\n\n        sb.append(fileName);\n        sb.append(\u0027:\u0027).append(aEvt.getLine());\n        if (aEvt.getColumn() \u003e 0) {\n            sb.append(\u0027:\u0027).append(aEvt.getColumn());\n        }\n        sb.append(\": \").append(message);\n        mErrorWriter.println(sb.toString());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "12e8a3664b264388535070b5b7641f9f469adade": {
      "type": "Ybodychange",
      "commitMessage": "precalculate the StringBuffer size to avoid calls to expandCapacity\nspeedup of OpenOrb check by about 2.5%\n",
      "commitDate": "10/11/02 3:33 AM",
      "commitName": "12e8a3664b264388535070b5b7641f9f469adade",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "03/07/02 6:30 PM",
      "commitNameOld": "f60f8b7e202043af3986ee359e9ffdb522cc29da",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 129.42,
      "commitsBetweenForRepo": 301,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n     public void addError(AuditEvent aEvt)\n     {\n+        String fileName \u003d aEvt.getFileName();\n+        String message \u003d aEvt.getMessage();\n+\n+        // avoid StringBuffer.expandCapacity\n+        int bufLen \u003d fileName.length() + message.length() + 12;\n+\n+        StringBuffer sb \u003d new StringBuffer(bufLen);\n+\n+        sb.append(fileName);\n+        sb.append(\u0027:\u0027).append(aEvt.getLine());\n         if (aEvt.getColumn() \u003e 0) {\n-            mErrorWriter.println(aEvt.getFileName()\n-                                 + \":\" + aEvt.getLine()\n-                                 + \":\" + aEvt.getColumn()\n-                                 + \": \" + aEvt.getMessage());\n+            sb.append(\u0027:\u0027).append(aEvt.getColumn());\n         }\n-        else {\n-            mErrorWriter.println(aEvt.getFileName()\n-                                 + \":\" + aEvt.getLine()\n-                                 + \": \" + aEvt.getMessage());\n-        }\n+        sb.append(\": \").append(message);\n+        mErrorWriter.println(sb.toString());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        String fileName \u003d aEvt.getFileName();\n        String message \u003d aEvt.getMessage();\n\n        // avoid StringBuffer.expandCapacity\n        int bufLen \u003d fileName.length() + message.length() + 12;\n\n        StringBuffer sb \u003d new StringBuffer(bufLen);\n\n        sb.append(fileName);\n        sb.append(\u0027:\u0027).append(aEvt.getLine());\n        if (aEvt.getColumn() \u003e 0) {\n            sb.append(\u0027:\u0027).append(aEvt.getColumn());\n        }\n        sb.append(\": \").append(message);\n        mErrorWriter.println(sb.toString());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "add2bdfb27494bff5fa9c305d9782f57c6170b18": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug 561616 (ant task should log errors, not infos)\n\nThis required a redesign of the AuditListener interface, the get/setOutputStream methoeds have been removed, as there might be listeners that have no or more than one OutputStream.\n\nThe DefaultLogger now differentiates between info messages (\"started checking file ...\", etc.) and error messages (style errors found by checkstyle) by writing the messages to two different OutputStreams.\n",
      "commitDate": "02/07/02 1:08 PM",
      "commitName": "add2bdfb27494bff5fa9c305d9782f57c6170b18",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "25/04/02 12:03 AM",
      "commitNameOld": "6970485b88600343de72af03a6bf87cf78e6cf55",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 68.55,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,14 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        // Print an Emacs compliant line. If the column number is non zero,\n-        // then also display it.\n         if (aEvt.getColumn() \u003e 0) {\n-            mWriter.println(aEvt.getFileName()\n-                            + \":\" + aEvt.getLine()\n-                            + \":\" + aEvt.getColumn()\n-                            + \": \" + aEvt.getMessage());\n+            mErrorWriter.println(aEvt.getFileName()\n+                                 + \":\" + aEvt.getLine()\n+                                 + \":\" + aEvt.getColumn()\n+                                 + \": \" + aEvt.getMessage());\n         }\n         else {\n-            mWriter.println(aEvt.getFileName()\n-                            + \":\" + aEvt.getLine()\n-                            + \": \" + aEvt.getMessage());\n+            mErrorWriter.println(aEvt.getFileName()\n+                                 + \":\" + aEvt.getLine()\n+                                 + \": \" + aEvt.getMessage());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        if (aEvt.getColumn() \u003e 0) {\n            mErrorWriter.println(aEvt.getFileName()\n                                 + \":\" + aEvt.getLine()\n                                 + \":\" + aEvt.getColumn()\n                                 + \": \" + aEvt.getMessage());\n        }\n        else {\n            mErrorWriter.println(aEvt.getFileName()\n                                 + \":\" + aEvt.getLine()\n                                 + \": \" + aEvt.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "6970485b88600343de72af03a6bf87cf78e6cf55": {
      "type": "Ybodychange",
      "commitMessage": "Started to add support for including the column number in the output. It\nreally rocks - I wish I had done it from the start!\n\nStrangely, although I am starting to use IDEA a lot for code development, I\nstill use Emacs for fixing checkstyle errors.\n",
      "commitDate": "25/04/02 12:03 AM",
      "commitName": "6970485b88600343de72af03a6bf87cf78e6cf55",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "24/04/02 10:30 PM",
      "commitNameOld": "2279ec2a489d1104f2741f2aa3458857d862ac34",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,16 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        // Print an Emacs compliant line.\n-        mWriter.println(aEvt.getFileName() + \":\" + aEvt.getLine()\n-                        + \": \" + aEvt.getMessage());\n+        // Print an Emacs compliant line. If the column number is non zero,\n+        // then also display it.\n+        if (aEvt.getColumn() \u003e 0) {\n+            mWriter.println(aEvt.getFileName()\n+                            + \":\" + aEvt.getLine()\n+                            + \":\" + aEvt.getColumn()\n+                            + \": \" + aEvt.getMessage());\n+        }\n+        else {\n+            mWriter.println(aEvt.getFileName()\n+                            + \":\" + aEvt.getLine()\n+                            + \": \" + aEvt.getMessage());\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        // Print an Emacs compliant line. If the column number is non zero,\n        // then also display it.\n        if (aEvt.getColumn() \u003e 0) {\n            mWriter.println(aEvt.getFileName()\n                            + \":\" + aEvt.getLine()\n                            + \":\" + aEvt.getColumn()\n                            + \": \" + aEvt.getMessage());\n        }\n        else {\n            mWriter.println(aEvt.getFileName()\n                            + \":\" + aEvt.getLine()\n                            + \": \" + aEvt.getMessage());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "2279ec2a489d1104f2741f2aa3458857d862ac34": {
      "type": "Ybodychange",
      "commitMessage": "Removed a hack of using toString() on AuditEvent in the default logger.\n",
      "commitDate": "24/04/02 10:30 PM",
      "commitName": "2279ec2a489d1104f2741f2aa3458857d862ac34",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "20/02/02 3:19 PM",
      "commitNameOld": "c85ec6f26ade692103ac27383a87c3402b4d66ca",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 63.26,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,6 @@\n     public void addError(AuditEvent aEvt)\n     {\n-        mWriter.println(aEvt);\n+        // Print an Emacs compliant line.\n+        mWriter.println(aEvt.getFileName() + \":\" + aEvt.getLine()\n+                        + \": \" + aEvt.getMessage());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        // Print an Emacs compliant line.\n        mWriter.println(aEvt.getFileName() + \":\" + aEvt.getLine()\n                        + \": \" + aEvt.getMessage());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java",
      "extendedDetails": {}
    },
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": {
      "type": "Yintroduced",
      "commitMessage": "first cut\n",
      "commitDate": "30/08/01 9:21 AM",
      "commitName": "1d21af32b9949396bb3f010cd3f3addec4075b5d",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,4 @@\n+    public void addError(AuditEvent aEvt)\n+    {\n+        mWriter.println(aEvt);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void addError(AuditEvent aEvt)\n    {\n        mWriter.println(aEvt);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/DefaultLogger.java"
    }
  }
}