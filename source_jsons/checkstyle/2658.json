{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MethodCallHandler.java",
  "functionName": "getSuggestedChildIndent",
  "functionId": "getSuggestedChildIndent___child-AbstractExpressionHandler",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
  "functionStartLine": 164,
  "functionEndLine": 190,
  "numCommitsSeen": 123,
  "timeTaken": 3623,
  "changeHistory": [
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6",
    "885128fb01c041731cd9c06080c40c62ae48f2a9",
    "3fbeb2a8302104cbb0b5f6fde1f535b47cfad54a",
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "ab74399c2d18b8881c4a0c13155b7afce869eebf",
    "eeec3dc1d23916462560403a27a4ae94260d61f3",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "5a4f991d2738c824f70f361b21d9da193ff3751c",
    "7f7db38a097a95c264307123924779380fb40077",
    "092e1f69476fc715852035a25b23a11804183a23",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6": "Ybodychange",
    "885128fb01c041731cd9c06080c40c62ae48f2a9": "Ybodychange",
    "3fbeb2a8302104cbb0b5f6fde1f535b47cfad54a": "Ybodychange",
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ymultichange(Yrename,Ybodychange)",
    "ab74399c2d18b8881c4a0c13155b7afce869eebf": "Ymultichange(Yrename,Ybodychange)",
    "eeec3dc1d23916462560403a27a4ae94260d61f3": "Ybodychange",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yparameterchange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "5a4f991d2738c824f70f361b21d9da193ff3751c": "Ybodychange",
    "7f7db38a097a95c264307123924779380fb40077": "Ymultichange(Yreturntypechange,Ybodychange)",
    "092e1f69476fc715852035a25b23a11804183a23": "Ybodychange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7518: refactor line comparison\n",
      "commitDate": "06/02/20 6:58 PM",
      "commitName": "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6",
      "commitAuthor": "Andrei_Paikin",
      "commitDateOld": "13/01/20 12:43 PM",
      "commitNameOld": "284278fde3431e33701cad1c3cc6690abcec0bb6",
      "commitAuthorOld": "alinkov",
      "daysBetweenCommits": 24.26,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST ident \u003d getMethodIdentAst();\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n-        if (!areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n+        if (!TokenUtil.areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel \u003d IndentLevel.addAcceptable(suggestedLevel, new IndentLevel(\n                     getParent().getSuggestedChildIndent(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST ident \u003d getMethodIdentAst();\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n        if (!TokenUtil.areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel \u003d IndentLevel.addAcceptable(suggestedLevel, new IndentLevel(\n                    getParent().getSuggestedChildIndent(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "885128fb01c041731cd9c06080c40c62ae48f2a9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6308: made IndentLevel immutable",
      "commitDate": "01/02/19 5:42 AM",
      "commitName": "885128fb01c041731cd9c06080c40c62ae48f2a9",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 17.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST ident \u003d getMethodIdentAst();\n+        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n-        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n-            suggestedLevel.addAcceptedIndent(new IndentLevel(\n+            suggestedLevel \u003d IndentLevel.addAcceptable(suggestedLevel, new IndentLevel(\n                     getParent().getSuggestedChildIndent(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST ident \u003d getMethodIdentAst();\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel \u003d IndentLevel.addAcceptable(suggestedLevel, new IndentLevel(\n                    getParent().getSuggestedChildIndent(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "3fbeb2a8302104cbb0b5f6fde1f535b47cfad54a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5655: Indentation: wrapped method name\n",
      "commitDate": "03/04/18 5:30 PM",
      "commitName": "3fbeb2a8302104cbb0b5f6fde1f535b47cfad54a",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "21/03/18 10:42 PM",
      "commitNameOld": "658ed1355643faff0d29f21b9e3e386a98de15ae",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 12.78,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n-        final DetailAST first \u003d getMainAst().getFirstChild();\n-        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n-        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n-                           getMainAst().getFirstChild())) {\n+        final DetailAST ident \u003d getMethodIdentAst();\n+        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n+        if (!areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel.addAcceptedIndent(new IndentLevel(\n                     getParent().getSuggestedChildIndent(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST ident \u003d getMethodIdentAst();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(ident));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(), ident)) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().getSuggestedChildIndent(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": "16/12/15 8:16 AM",
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/12/15 10:53 AM",
          "commitNameOld": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 11.89,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel.addAcceptedIndent(new IndentLevel(\n-                    getParent().getSuggestedChildLevel(this),\n+                    getParent().getSuggestedChildIndent(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().getSuggestedChildIndent(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {
            "oldValue": "getSuggestedChildLevel",
            "newValue": "getSuggestedChildIndent"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/12/15 10:53 AM",
          "commitNameOld": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 11.89,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel.addAcceptedIndent(new IndentLevel(\n-                    getParent().getSuggestedChildLevel(this),\n+                    getParent().getSuggestedChildIndent(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().getSuggestedChildIndent(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "ab74399c2d18b8881c4a0c13155b7afce869eebf": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": "04/12/15 10:53 AM",
      "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "04/12/15 10:53 AM",
          "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthor": "rnveach",
          "commitDateOld": "01/10/15 6:53 AM",
          "commitNameOld": "eeec3dc1d23916462560403a27a4ae94260d61f3",
          "commitAuthorOld": "Pieter Noordhuis",
          "daysBetweenCommits": 64.21,
          "commitsBetweenForRepo": 387,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel.addAcceptedIndent(new IndentLevel(\n-                    getParent().suggestedChildLevel(this),\n+                    getParent().getSuggestedChildLevel(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().getSuggestedChildLevel(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {
            "oldValue": "suggestedChildLevel",
            "newValue": "getSuggestedChildLevel"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "04/12/15 10:53 AM",
          "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthor": "rnveach",
          "commitDateOld": "01/10/15 6:53 AM",
          "commitNameOld": "eeec3dc1d23916462560403a27a4ae94260d61f3",
          "commitAuthorOld": "Pieter Noordhuis",
          "daysBetweenCommits": 64.21,
          "commitsBetweenForRepo": 387,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n             suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                     getBasicOffset(),\n                     getIndentCheck().getLineWrappingIndentation());\n         }\n \n         // If the right parenthesis is at the start of a line;\n         // include line wrapping in suggested indent level.\n         final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n         if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n             suggestedLevel.addAcceptedIndent(new IndentLevel(\n-                    getParent().suggestedChildLevel(this),\n+                    getParent().getSuggestedChildLevel(this),\n                     getIndentCheck().getLineWrappingIndentation()\n             ));\n         }\n \n         return suggestedLevel;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().getSuggestedChildLevel(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "eeec3dc1d23916462560403a27a4ae94260d61f3": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1548: Add lambda support to indentation check (see #281)\n",
      "commitDate": "01/10/15 6:53 AM",
      "commitName": "eeec3dc1d23916462560403a27a4ae94260d61f3",
      "commitAuthor": "Pieter Noordhuis",
      "commitDateOld": "31/08/15 11:24 AM",
      "commitNameOld": "2b861bd6e16584e22bb115ff7abd65c35072eb92",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 30.81,
      "commitsBetweenForRepo": 191,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,28 @@\n     public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n-        int indentLevel \u003d getLineStart(first);\n+        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n-            indentLevel +\u003d getBasicOffset();\n+            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n+                    getBasicOffset(),\n+                    getIndentCheck().getLineWrappingIndentation());\n         }\n-        return new IndentLevel(indentLevel);\n+\n+        // If the right parenthesis is at the start of a line;\n+        // include line wrapping in suggested indent level.\n+        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n+        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n+            suggestedLevel.addAcceptedIndent(new IndentLevel(\n+                    getParent().suggestedChildLevel(this),\n+                    getIndentCheck().getLineWrappingIndentation()\n+            ));\n+        }\n+\n+        return suggestedLevel;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        IndentLevel suggestedLevel \u003d new IndentLevel(getLineStart(first));\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            suggestedLevel \u003d new IndentLevel(suggestedLevel,\n                    getBasicOffset(),\n                    getIndentCheck().getLineWrappingIndentation());\n        }\n\n        // If the right parenthesis is at the start of a line;\n        // include line wrapping in suggested indent level.\n        final DetailAST rparen \u003d getMainAst().findFirstToken(TokenTypes.RPAREN);\n        if (getLineStart(rparen) \u003d\u003d rparen.getColumnNo()) {\n            suggestedLevel.addAcceptedIndent(new IndentLevel(\n                    getParent().suggestedChildLevel(this),\n                    getIndentCheck().getLineWrappingIndentation()\n            ));\n        }\n\n        return suggestedLevel;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 32.25,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler child) {\n+    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n         if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild())) {\n             indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild())) {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {
        "oldValue": "[child-ExpressionHandler]",
        "newValue": "[child-AbstractExpressionHandler]"
      }
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/10/14 4:21 PM",
          "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 97.63,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n-        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),\n+        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild()))\n         {\n             indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {
            "oldValue": "[aChild-ExpressionHandler]",
            "newValue": "[child-ExpressionHandler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/10/14 4:21 PM",
          "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 97.63,
          "commitsBetweenForRepo": 303,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         final DetailAST first \u003d getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n-        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),\n+        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                            getMainAst().getFirstChild()))\n         {\n             indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine(child.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/08 3:11 PM",
      "commitNameOld": "315033ff5647ef9896130573d9212fee6fe141db",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 247.52,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n-        final DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n+        final DetailAST first \u003d getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n-        if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n-                           (DetailAST) getMainAst().getFirstChild()))\n+        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),\n+                           getMainAst().getFirstChild()))\n         {\n             indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine(aChild.getMainAst().getFirstChild(),\n                           getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n-        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n+        final DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n         if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                            (DetailAST) getMainAst().getFirstChild()))\n         {\n             indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        final DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                           (DetailAST) getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "5a4f991d2738c824f70f361b21d9da193ff3751c": {
      "type": "Ybodychange",
      "commitMessage": "partitial fix for 1089128(Bugs in Indentation check)\n",
      "commitDate": "11/01/05 7:43 AM",
      "commitName": "5a4f991d2738c824f70f361b21d9da193ff3751c",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,17 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n-        if (aChild instanceof MethodCallHandler) {\n-            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n-                (DetailAST) getMainAst().getFirstChild()))\n-            {\n-                indentLevel +\u003d getBasicOffset();\n-            }\n+        if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n+                           (DetailAST) getMainAst().getFirstChild()))\n+        {\n+            indentLevel +\u003d getBasicOffset();\n         }\n         return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                           (DetailAST) getMainAst().getFirstChild()))\n        {\n            indentLevel +\u003d getBasicOffset();\n        }\n        return new IndentLevel(indentLevel);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "7f7db38a097a95c264307123924779380fb40077": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
      "commitDate": "12/08/03 12:19 PM",
      "commitName": "7f7db38a097a95c264307123924779380fb40077",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
          "commitDate": "12/08/03 12:19 PM",
          "commitName": "7f7db38a097a95c264307123924779380fb40077",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "14/06/03 10:47 AM",
          "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 59.06,
          "commitsBetweenForRepo": 135,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public int suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n         if (aChild instanceof MethodCallHandler) {\n             if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                 (DetailAST) getMainAst().getFirstChild()))\n             {\n-                indentLevel +\u003d getIndentCheck().getBasicOffset();\n+                indentLevel +\u003d getBasicOffset();\n             }\n         }\n-        return indentLevel;\n+        return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (aChild instanceof MethodCallHandler) {\n            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                (DetailAST) getMainAst().getFirstChild()))\n            {\n                indentLevel +\u003d getBasicOffset();\n            }\n        }\n        return new IndentLevel(indentLevel);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "IndentLevel"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
          "commitDate": "12/08/03 12:19 PM",
          "commitName": "7f7db38a097a95c264307123924779380fb40077",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "14/06/03 10:47 AM",
          "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 59.06,
          "commitsBetweenForRepo": 135,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public int suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n         if (aChild instanceof MethodCallHandler) {\n             if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                 (DetailAST) getMainAst().getFirstChild()))\n             {\n-                indentLevel +\u003d getIndentCheck().getBasicOffset();\n+                indentLevel +\u003d getBasicOffset();\n             }\n         }\n-        return indentLevel;\n+        return new IndentLevel(indentLevel);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (aChild instanceof MethodCallHandler) {\n            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                (DetailAST) getMainAst().getFirstChild()))\n            {\n                indentLevel +\u003d getBasicOffset();\n            }\n        }\n        return new IndentLevel(indentLevel);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "092e1f69476fc715852035a25b23a11804183a23": {
      "type": "Ybodychange",
      "commitMessage": "indentationAmount property renamed to basicOffset\n",
      "commitDate": "15/05/03 8:54 AM",
      "commitName": "092e1f69476fc715852035a25b23a11804183a23",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "14/05/03 1:11 AM",
      "commitNameOld": "a4d63db21d57ab53aff8a467f89df3867518ab91",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public int suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // for whatever reason a method that crosses lines, like asList\n         // here:\n         //            System.out.println(\"methods are: \" + Arrays.asList(\n         //                new String[] {\"method\"}).toString());\n         // will not have the right line num, so just get the child name\n \n         DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n         int indentLevel \u003d getLineStart(first);\n         if (aChild instanceof MethodCallHandler) {\n             if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                 (DetailAST) getMainAst().getFirstChild()))\n             {\n-                indentLevel +\u003d getIndentCheck().getIndentationAmount();\n+                indentLevel +\u003d getIndentCheck().getBasicOffset();\n             }\n         }\n         return indentLevel;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (aChild instanceof MethodCallHandler) {\n            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(),\n                (DetailAST) getMainAst().getFirstChild()))\n            {\n                indentLevel +\u003d getIndentCheck().getBasicOffset();\n            }\n        }\n        return indentLevel;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
      "extendedDetails": {}
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": "11/05/03 12:53 AM",
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
          "commitDate": "11/05/03 12:53 AM",
          "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "11/05/03 12:31 AM",
          "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,19 @@\n-        public int suggestedChildLevel(ExpressionHandler aChild) \n-        {\n-            // for whatever reason a method that crosses lines, like asList\n-            // here:\n-            //            System.out.println(\"methods are: \" + Arrays.asList(\n-            //                new String[] {\"method\"}).toString());\n-            // will not have the right line num, so just get the child name\n+    public int suggestedChildLevel(ExpressionHandler aChild) \n+    {\n+        // for whatever reason a method that crosses lines, like asList\n+        // here:\n+        //            System.out.println(\"methods are: \" + Arrays.asList(\n+        //                new String[] {\"method\"}).toString());\n+        // will not have the right line num, so just get the child name\n \n-            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n-            int indentLevel \u003d getLineStart(first);\n-            if (aChild instanceof MethodCallHandler) {\n-                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n-                    (DetailAST) mMainAst.getFirstChild())) \n-                {\n-                    indentLevel +\u003d mIndentationAmount;\n-                }\n-                \n+        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n+        int indentLevel \u003d getLineStart(first);\n+        if (aChild instanceof MethodCallHandler) {\n+            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(), \n+                (DetailAST) getMainAst().getFirstChild())) \n+            {\n+                indentLevel +\u003d getIndentCheck().getIndentationAmount();\n             }\n-            return indentLevel;                    \n-        }\n\\ No newline at end of file\n+        }\n+        return indentLevel;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int suggestedChildLevel(ExpressionHandler aChild) \n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (aChild instanceof MethodCallHandler) {\n            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(), \n                (DetailAST) getMainAst().getFirstChild())) \n            {\n                indentLevel +\u003d getIndentCheck().getIndentationAmount();\n            }\n        }\n        return indentLevel;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
            "oldMethodName": "suggestedChildLevel",
            "newMethodName": "suggestedChildLevel"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
          "commitDate": "11/05/03 12:53 AM",
          "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "11/05/03 12:31 AM",
          "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,19 @@\n-        public int suggestedChildLevel(ExpressionHandler aChild) \n-        {\n-            // for whatever reason a method that crosses lines, like asList\n-            // here:\n-            //            System.out.println(\"methods are: \" + Arrays.asList(\n-            //                new String[] {\"method\"}).toString());\n-            // will not have the right line num, so just get the child name\n+    public int suggestedChildLevel(ExpressionHandler aChild) \n+    {\n+        // for whatever reason a method that crosses lines, like asList\n+        // here:\n+        //            System.out.println(\"methods are: \" + Arrays.asList(\n+        //                new String[] {\"method\"}).toString());\n+        // will not have the right line num, so just get the child name\n \n-            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n-            int indentLevel \u003d getLineStart(first);\n-            if (aChild instanceof MethodCallHandler) {\n-                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n-                    (DetailAST) mMainAst.getFirstChild())) \n-                {\n-                    indentLevel +\u003d mIndentationAmount;\n-                }\n-                \n+        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n+        int indentLevel \u003d getLineStart(first);\n+        if (aChild instanceof MethodCallHandler) {\n+            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(), \n+                (DetailAST) getMainAst().getFirstChild())) \n+            {\n+                indentLevel +\u003d getIndentCheck().getIndentationAmount();\n             }\n-            return indentLevel;                    \n-        }\n\\ No newline at end of file\n+        }\n+        return indentLevel;\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int suggestedChildLevel(ExpressionHandler aChild) \n    {\n        // for whatever reason a method that crosses lines, like asList\n        // here:\n        //            System.out.println(\"methods are: \" + Arrays.asList(\n        //                new String[] {\"method\"}).toString());\n        // will not have the right line num, so just get the child name\n\n        DetailAST first \u003d (DetailAST) getMainAst().getFirstChild();\n        int indentLevel \u003d getLineStart(first);\n        if (aChild instanceof MethodCallHandler) {\n            if (!areOnSameLine((DetailAST) aChild.getMainAst().getFirstChild(), \n                (DetailAST) getMainAst().getFirstChild())) \n            {\n                indentLevel +\u003d getIndentCheck().getIndentationAmount();\n            }\n        }\n        return indentLevel;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MethodCallHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": "24/04/03 10:21 PM",
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,20 @@\n+        public int suggestedChildLevel(ExpressionHandler aChild) \n+        {\n+            // for whatever reason a method that crosses lines, like asList\n+            // here:\n+            //            System.out.println(\"methods are: \" + Arrays.asList(\n+            //                new String[] {\"method\"}).toString());\n+            // will not have the right line num, so just get the child name\n+\n+            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n+            int indentLevel \u003d getLineStart(first);\n+            if (aChild instanceof MethodCallHandler) {\n+                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n+                    (DetailAST) mMainAst.getFirstChild())) \n+                {\n+                    indentLevel +\u003d mIndentationAmount;\n+                }\n+                \n+            }\n+            return indentLevel;                    \n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public int suggestedChildLevel(ExpressionHandler aChild) \n        {\n            // for whatever reason a method that crosses lines, like asList\n            // here:\n            //            System.out.println(\"methods are: \" + Arrays.asList(\n            //                new String[] {\"method\"}).toString());\n            // will not have the right line num, so just get the child name\n\n            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n            int indentLevel \u003d getLineStart(first);\n            if (aChild instanceof MethodCallHandler) {\n                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n                    (DetailAST) mMainAst.getFirstChild())) \n                {\n                    indentLevel +\u003d mIndentationAmount;\n                }\n                \n            }\n            return indentLevel;                    \n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java"
    }
  }
}