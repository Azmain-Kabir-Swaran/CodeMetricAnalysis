{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SummaryJavadocCheck.java",
  "functionName": "getFirstSentence",
  "functionId": "getFirstSentence___ast-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
  "functionStartLine": 292,
  "functionEndLine": 312,
  "numCommitsSeen": 56,
  "timeTaken": 2178,
  "changeHistory": [
    "625865d270a788ed727cf1b819978747e4f34b44",
    "9198b1f8d57cfe4c5e3f55c8494e466e9f53397b",
    "20da2fcf2620c18a789cd0cb585f5ff1c087d609",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "3744f4c56845e82bd85f4b92f07b06d0de2ab1f2",
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763"
  ],
  "changeHistoryShort": {
    "625865d270a788ed727cf1b819978747e4f34b44": "Ybodychange",
    "9198b1f8d57cfe4c5e3f55c8494e466e9f53397b": "Ybodychange",
    "20da2fcf2620c18a789cd0cb585f5ff1c087d609": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "3744f4c56845e82bd85f4b92f07b06d0de2ab1f2": "Ybodychange",
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763": "Yintroduced"
  },
  "changeHistoryDetails": {
    "625865d270a788ed727cf1b819978747e4f34b44": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5060: activate org.eclipse.jdt.core.compiler.problem.unnecessaryElse\n",
      "commitDate": "06/10/19 5:54 AM",
      "commitName": "625865d270a788ed727cf1b819978747e4f34b44",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "24/08/19 6:14 AM",
      "commitNameOld": "7a1231cc8ac2e63e3ce9e1a771db6f260472d100",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 42.99,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder(256);\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n             final String text;\n             if (child.getChildren().length \u003d\u003d 0) {\n                 text \u003d child.getText();\n             }\n             else {\n                 text \u003d getFirstSentence(child);\n             }\n \n             if (text.contains(periodSuffix)) {\n                 result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                 break;\n             }\n-            else {\n-                result.append(text);\n-            }\n+\n+            result.append(text);\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder(256);\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text;\n            if (child.getChildren().length \u003d\u003d 0) {\n                text \u003d child.getText();\n            }\n            else {\n                text \u003d getFirstSentence(child);\n            }\n\n            if (text.contains(periodSuffix)) {\n                result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                break;\n            }\n\n            result.append(text);\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "9198b1f8d57cfe4c5e3f55c8494e466e9f53397b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6295: changed code to remove javadoc profile mutations",
      "commitDate": "27/12/18 5:47 PM",
      "commitName": "9198b1f8d57cfe4c5e3f55c8494e466e9f53397b",
      "commitAuthor": "rnveach",
      "commitDateOld": "06/10/18 7:58 AM",
      "commitNameOld": "02ca5caf37bf6b06788cb34f3a576541691ff41c",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 82.45,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,22 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder(256);\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n             final String text;\n             if (child.getChildren().length \u003d\u003d 0) {\n                 text \u003d child.getText();\n             }\n             else {\n                 text \u003d getFirstSentence(child);\n             }\n \n-            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n-                \u0026\u0026 text.contains(periodSuffix)) {\n+            if (text.contains(periodSuffix)) {\n                 result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                 break;\n             }\n             else {\n                 result.append(text);\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder(256);\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text;\n            if (child.getChildren().length \u003d\u003d 0) {\n                text \u003d child.getText();\n            }\n            else {\n                text \u003d getFirstSentence(child);\n            }\n\n            if (text.contains(periodSuffix)) {\n                result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                break;\n            }\n            else {\n                result.append(text);\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "20da2fcf2620c18a789cd0cb585f5ff1c087d609": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5949: fix \u0027Redundant String operation\u0027 violations\n",
      "commitDate": "23/06/18 7:25 AM",
      "commitName": "20da2fcf2620c18a789cd0cb585f5ff1c087d609",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder(256);\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n             final String text;\n             if (child.getChildren().length \u003d\u003d 0) {\n                 text \u003d child.getText();\n             }\n             else {\n                 text \u003d getFirstSentence(child);\n             }\n \n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 text.contains(periodSuffix)) {\n-                result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n+                result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                 break;\n             }\n             else {\n                 result.append(text);\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder(256);\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text;\n            if (child.getChildren().length \u003d\u003d 0) {\n                text \u003d child.getText();\n            }\n            else {\n                text \u003d getFirstSentence(child);\n            }\n\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 text.contains(periodSuffix)) {\n                result.append(text, 0, text.indexOf(periodSuffix) + 1);\n                break;\n            }\n            else {\n                result.append(text);\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "23/07/17 1:48 PM",
      "commitNameOld": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static String getFirstSentence(DetailNode ast) {\n-        final StringBuilder result \u003d new StringBuilder();\n+        final StringBuilder result \u003d new StringBuilder(256);\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n             final String text;\n             if (child.getChildren().length \u003d\u003d 0) {\n                 text \u003d child.getText();\n             }\n             else {\n                 text \u003d getFirstSentence(child);\n             }\n \n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 text.contains(periodSuffix)) {\n                 result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                 break;\n             }\n             else {\n                 result.append(text);\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder(256);\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text;\n            if (child.getChildren().length \u003d\u003d 0) {\n                text \u003d child.getText();\n            }\n            else {\n                text \u003d getFirstSentence(child);\n            }\n\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 text.contains(periodSuffix)) {\n                result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                break;\n            }\n            else {\n                result.append(text);\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "3744f4c56845e82bd85f4b92f07b06d0de2ab1f2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3796: No unnecessary text shall be present in Javadoc ASTs\n",
      "commitDate": "21/06/17 6:09 AM",
      "commitName": "3744f4c56845e82bd85f4b92f07b06d0de2ab1f2",
      "commitAuthor": "Piyush Sharma",
      "commitDateOld": "18/05/17 12:43 PM",
      "commitNameOld": "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
      "commitAuthorOld": "Dmytro Kytsmen",
      "daysBetweenCommits": 33.73,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder();\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n-            final String text \u003d child.getText();\n+            final String text;\n+            if (child.getChildren().length \u003d\u003d 0) {\n+                text \u003d child.getText();\n+            }\n+            else {\n+                text \u003d getFirstSentence(child);\n+            }\n \n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 text.contains(periodSuffix)) {\n                 result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                 break;\n             }\n             else {\n                 result.append(text);\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder();\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text;\n            if (child.getChildren().length \u003d\u003d 0) {\n                text \u003d child.getText();\n            }\n            else {\n                text \u003d getFirstSentence(child);\n            }\n\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 text.contains(periodSuffix)) {\n                result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                break;\n            }\n            else {\n                result.append(text);\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3170: delete children from javadoc TEXT",
      "commitDate": "18/11/16 4:15 PM",
      "commitName": "19ffe1bb1bf4e19b71a49bf0fb61e04ca1bc812a",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/16 4:34 AM",
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 9.49,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder();\n         final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n+            final String text \u003d child.getText();\n+\n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n-                \u0026\u0026 child.getText().contains(periodSuffix)) {\n-                result.append(getCharsTillDot(child));\n+                \u0026\u0026 text.contains(periodSuffix)) {\n+                result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                 break;\n             }\n             else {\n-                result.append(child.getText());\n+                result.append(text);\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder();\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            final String text \u003d child.getText();\n\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 text.contains(periodSuffix)) {\n                result.append(text.substring(0, text.indexOf(periodSuffix) + 1));\n                break;\n            }\n            else {\n                result.append(text);\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "16/08/15 8:41 PM",
      "commitNameOld": "d56a2a366c6f9e3e8639d492d548ae562b75dc81",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 8.8,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n     private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder();\n+        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n         for (DetailNode child : ast.getChildren()) {\n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n-                \u0026\u0026 child.getText().contains(\". \")) {\n+                \u0026\u0026 child.getText().contains(periodSuffix)) {\n                 result.append(getCharsTillDot(child));\n                 break;\n             }\n             else {\n                 result.append(child.getText());\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder();\n        final String periodSuffix \u003d PERIOD + \u0027 \u0027;\n        for (DetailNode child : ast.getChildren()) {\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 child.getText().contains(periodSuffix)) {\n                result.append(getCharsTillDot(child));\n                break;\n            }\n            else {\n                result.append(child.getText());\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private String getFirstSentence(DetailNode ast) {\n+    private static String getFirstSentence(DetailNode ast) {\n         final StringBuilder result \u003d new StringBuilder();\n         for (DetailNode child : ast.getChildren()) {\n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 child.getText().contains(\". \")) {\n                 result.append(getCharsTillDot(child));\n                 break;\n             }\n             else {\n                 result.append(child.getText());\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getFirstSentence(DetailNode ast) {\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : ast.getChildren()) {\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 child.getText().contains(\". \")) {\n                result.append(getCharsTillDot(child));\n                break;\n            }\n            else {\n                result.append(child.getText());\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 4:53 AM",
          "commitNameOld": "f6b38038d17b286d82d8956788a0eede15c5399a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 30.06,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private String getFirstSentence(DetailNode aAst)\n+    private String getFirstSentence(DetailNode ast)\n     {\n         final StringBuilder result \u003d new StringBuilder();\n-        for (DetailNode child : aAst.getChildren()) {\n+        for (DetailNode child : ast.getChildren()) {\n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 child.getText().contains(\". \"))\n             {\n                 result.append(getCharsTillDot(child));\n                 break;\n             }\n             else {\n                 result.append(child.getText());\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String getFirstSentence(DetailNode ast)\n    {\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : ast.getChildren()) {\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 child.getText().contains(\". \"))\n            {\n                result.append(getCharsTillDot(child));\n                break;\n            }\n            else {\n                result.append(child.getText());\n            }\n        }\n        return result.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
          "extendedDetails": {
            "oldValue": "[aAst-DetailNode]",
            "newValue": "[ast-DetailNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 4:53 AM",
          "commitNameOld": "f6b38038d17b286d82d8956788a0eede15c5399a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 30.06,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private String getFirstSentence(DetailNode aAst)\n+    private String getFirstSentence(DetailNode ast)\n     {\n         final StringBuilder result \u003d new StringBuilder();\n-        for (DetailNode child : aAst.getChildren()) {\n+        for (DetailNode child : ast.getChildren()) {\n             if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                 \u0026\u0026 child.getText().contains(\". \"))\n             {\n                 result.append(getCharsTillDot(child));\n                 break;\n             }\n             else {\n                 result.append(child.getText());\n             }\n         }\n         return result.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private String getFirstSentence(DetailNode ast)\n    {\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : ast.getChildren()) {\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 child.getText().contains(\". \"))\n            {\n                result.append(getCharsTillDot(child));\n                break;\n            }\n            else {\n                result.append(child.getText());\n            }\n        }\n        return result.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763": {
      "type": "Yintroduced",
      "commitMessage": "SummaryJavaDocCheck #307 by Max Vetrenko\n",
      "commitDate": "20/10/14 11:12 PM",
      "commitName": "d3b013d07359eb5ebcbcbb1daa34722d7e28e763",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,16 @@\n+    private String getFirstSentence(DetailNode aAst)\n+    {\n+        final StringBuilder result \u003d new StringBuilder();\n+        for (DetailNode child : aAst.getChildren()) {\n+            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n+                \u0026\u0026 child.getText().contains(\". \"))\n+            {\n+                result.append(getCharsTillDot(child));\n+                break;\n+            }\n+            else {\n+                result.append(child.getText());\n+            }\n+        }\n+        return result.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String getFirstSentence(DetailNode aAst)\n    {\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : aAst.getChildren()) {\n            if (child.getType() !\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                \u0026\u0026 child.getText().contains(\". \"))\n            {\n                result.append(getCharsTillDot(child));\n                break;\n            }\n            else {\n                result.append(child.getText());\n            }\n        }\n        return result.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java"
    }
  }
}