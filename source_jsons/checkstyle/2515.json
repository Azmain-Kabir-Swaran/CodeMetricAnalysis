{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CustomImportOrderCheck.java",
  "functionName": "findBetterPatternMatch",
  "functionId": "findBetterPatternMatch___importPath-String__group-String__regExp-Pattern__currentBestMatch-RuleMatchForImport",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
  "functionStartLine": 824,
  "functionEndLine": 837,
  "numCommitsSeen": 100,
  "timeTaken": 944,
  "changeHistory": [
    "e15f70ac5b1460236e14237acc3a041102238efd"
  ],
  "changeHistoryShort": {
    "e15f70ac5b1460236e14237acc3a041102238efd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e15f70ac5b1460236e14237acc3a041102238efd": {
      "type": "Yintroduced",
      "commitMessage": "Issue #1273: CustomImportOrderCheck rule priorities\n",
      "commitDate": "18/09/15 5:49 AM",
      "commitName": "e15f70ac5b1460236e14237acc3a041102238efd",
      "commitAuthor": "Aleksandr Ivanov",
      "diff": "@@ -0,0 +1,14 @@\n+    private static RuleMatchForImport findBetterPatternMatch(String importPath, String group,\n+            Pattern regExp, RuleMatchForImport currentBestMatch) {\n+        RuleMatchForImport betterMatchCandidate \u003d currentBestMatch;\n+        final Matcher matcher \u003d regExp.matcher(importPath);\n+        while (matcher.find()) {\n+            final int length \u003d matcher.end() - matcher.start();\n+            if (length \u003e betterMatchCandidate.matchLength\n+                    || length \u003d\u003d betterMatchCandidate.matchLength\n+                        \u0026\u0026 matcher.start() \u003c betterMatchCandidate.matchPosition) {\n+                betterMatchCandidate \u003d new RuleMatchForImport(group, length, matcher.start());\n+            }\n+        }\n+        return betterMatchCandidate;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static RuleMatchForImport findBetterPatternMatch(String importPath, String group,\n            Pattern regExp, RuleMatchForImport currentBestMatch) {\n        RuleMatchForImport betterMatchCandidate \u003d currentBestMatch;\n        final Matcher matcher \u003d regExp.matcher(importPath);\n        while (matcher.find()) {\n            final int length \u003d matcher.end() - matcher.start();\n            if (length \u003e betterMatchCandidate.matchLength\n                    || length \u003d\u003d betterMatchCandidate.matchLength\n                        \u0026\u0026 matcher.start() \u003c betterMatchCandidate.matchPosition) {\n                betterMatchCandidate \u003d new RuleMatchForImport(group, length, matcher.start());\n            }\n        }\n        return betterMatchCandidate;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java"
    }
  }
}