{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractViolationReporter.java",
  "functionName": "getMessageBundle",
  "functionId": "getMessageBundle",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
  "functionStartLine": 117,
  "functionEndLine": 120,
  "numCommitsSeen": 67,
  "timeTaken": 1150,
  "changeHistory": [
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "3bf83180c94eb14314d929682b260d1ce43eadb3",
    "d216ec75255a120ce7c24e51da7df63a2b9864de",
    "3aa99fde8e937ab19b8e0e31f6ce52f6ced58bf1"
  ],
  "changeHistoryShort": {
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "3bf83180c94eb14314d929682b260d1ce43eadb3": "Ybodychange",
    "d216ec75255a120ce7c24e51da7df63a2b9864de": "Ymultichange(Ymovefromfile,Ybodychange)",
    "3aa99fde8e937ab19b8e0e31f6ce52f6ced58bf1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this keyword. #1555\n\nFixes `UnnecessaryThis` inspection violations.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n For example:\n ```\n this.a \u003d 3;\n ```\n",
      "commitDate": "09/08/15 7:41 AM",
      "commitName": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/07/15 9:51 PM",
      "commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 22.41,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n     protected String getMessageBundle() {\n-        final String className \u003d this.getClass().getName();\n+        final String className \u003d getClass().getName();\n         return getMessageBundle(className);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected String getMessageBundle() {\n        final String className \u003d getClass().getName();\n        return getMessageBundle(className);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected String getMessageBundle()\n    {\n        final String className \u003d this.getClass().getName();\n        return getMessageBundle(className);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java"
      }
    },
    "3bf83180c94eb14314d929682b260d1ce43eadb3": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug reported by Oleg Sukhodolsky in patch #713239\n",
      "commitDate": "01/04/03 12:05 PM",
      "commitName": "3bf83180c94eb14314d929682b260d1ce43eadb3",
      "commitAuthor": "Lars K端hne",
      "commitDateOld": "27/03/03 2:17 AM",
      "commitNameOld": "0ac2db237ecae4cb7afa0d4fd14c16632fe5bb40",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 5.41,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,5 @@\n     protected String getMessageBundle()\n     {\n         final String className \u003d this.getClass().getName();\n-        final int endIndex \u003d className.lastIndexOf(\u0027.\u0027);\n-        final String packageName \u003d className.substring(0, endIndex);\n-        return packageName + \".\" + \"messages\";\n+        return getMessageBundle(className);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected String getMessageBundle()\n    {\n        final String className \u003d this.getClass().getName();\n        return getMessageBundle(className);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
      "extendedDetails": {}
    },
    "d216ec75255a120ce7c24e51da7df63a2b9864de": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Major refactorings to allow the use of SeverityLevels in FileSetChecks\nas well as in Checks and to simplify logging of messages in FileSetChecks.\n\nIntroduction of a new class called AbstractViolationReporter, from which\nboth Check and FileSetCheck are derived.\n\nSeverity is passed to submodules by means of the Contextualizable\nmechanism. This means that the user can f.ex. set severity to INFO\nin a TreeWalker and all Checks below that TreeWalker will use severity INFO.\n",
      "commitDate": "26/03/03 11:52 AM",
      "commitName": "d216ec75255a120ce7c24e51da7df63a2b9864de",
      "commitAuthor": "Lars K端hne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Major refactorings to allow the use of SeverityLevels in FileSetChecks\nas well as in Checks and to simplify logging of messages in FileSetChecks.\n\nIntroduction of a new class called AbstractViolationReporter, from which\nboth Check and FileSetCheck are derived.\n\nSeverity is passed to submodules by means of the Contextualizable\nmechanism. This means that the user can f.ex. set severity to INFO\nin a TreeWalker and all Checks below that TreeWalker will use severity INFO.\n",
          "commitDate": "26/03/03 11:52 AM",
          "commitName": "d216ec75255a120ce7c24e51da7df63a2b9864de",
          "commitAuthor": "Lars K端hne",
          "commitDateOld": "25/03/03 2:55 AM",
          "commitNameOld": "d4cee632835a462da2dc6794b059fb0d6b1c9bc2",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 1.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n     protected String getMessageBundle()\n     {\n-        final String className \u003d getClass().getName();\n-        final int pkgEndIndex \u003d className.lastIndexOf(\u0027.\u0027);\n-        final String pkgName \u003d className.substring(0, pkgEndIndex);\n-        final String bundle \u003d pkgName + \".messages\";\n-        return bundle;\n+        final String className \u003d this.getClass().getName();\n+        final int endIndex \u003d className.lastIndexOf(\u0027.\u0027);\n+        final String packageName \u003d className.substring(0, endIndex);\n+        return packageName + \".\" + \"messages\";\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected String getMessageBundle()\n    {\n        final String className \u003d this.getClass().getName();\n        final int endIndex \u003d className.lastIndexOf(\u0027.\u0027);\n        final String packageName \u003d className.substring(0, endIndex);\n        return packageName + \".\" + \"messages\";\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
            "oldMethodName": "getMessageBundle",
            "newMethodName": "getMessageBundle"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactorings to allow the use of SeverityLevels in FileSetChecks\nas well as in Checks and to simplify logging of messages in FileSetChecks.\n\nIntroduction of a new class called AbstractViolationReporter, from which\nboth Check and FileSetCheck are derived.\n\nSeverity is passed to submodules by means of the Contextualizable\nmechanism. This means that the user can f.ex. set severity to INFO\nin a TreeWalker and all Checks below that TreeWalker will use severity INFO.\n",
          "commitDate": "26/03/03 11:52 AM",
          "commitName": "d216ec75255a120ce7c24e51da7df63a2b9864de",
          "commitAuthor": "Lars K端hne",
          "commitDateOld": "25/03/03 2:55 AM",
          "commitNameOld": "d4cee632835a462da2dc6794b059fb0d6b1c9bc2",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 1.37,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,7 @@\n     protected String getMessageBundle()\n     {\n-        final String className \u003d getClass().getName();\n-        final int pkgEndIndex \u003d className.lastIndexOf(\u0027.\u0027);\n-        final String pkgName \u003d className.substring(0, pkgEndIndex);\n-        final String bundle \u003d pkgName + \".messages\";\n-        return bundle;\n+        final String className \u003d this.getClass().getName();\n+        final int endIndex \u003d className.lastIndexOf(\u0027.\u0027);\n+        final String packageName \u003d className.substring(0, endIndex);\n+        return packageName + \".\" + \"messages\";\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected String getMessageBundle()\n    {\n        final String className \u003d this.getClass().getName();\n        final int endIndex \u003d className.lastIndexOf(\u0027.\u0027);\n        final String packageName \u003d className.substring(0, endIndex);\n        return packageName + \".\" + \"messages\";\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractViolationReporter.java",
          "extendedDetails": {}
        }
      ]
    },
    "3aa99fde8e937ab19b8e0e31f6ce52f6ced58bf1": {
      "type": "Yintroduced",
      "commitMessage": "removed duplicate code in PackageHtml and Translation\nby introducing a protected helper method in AbstractFileSetCheck\n",
      "commitDate": "15/02/03 8:07 AM",
      "commitName": "3aa99fde8e937ab19b8e0e31f6ce52f6ced58bf1",
      "commitAuthor": "Lars K端hne",
      "diff": "@@ -0,0 +1,8 @@\n+    protected String getMessageBundle()\n+    {\n+        final String className \u003d getClass().getName();\n+        final int pkgEndIndex \u003d className.lastIndexOf(\u0027.\u0027);\n+        final String pkgName \u003d className.substring(0, pkgEndIndex);\n+        final String bundle \u003d pkgName + \".messages\";\n+        return bundle;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected String getMessageBundle()\n    {\n        final String className \u003d getClass().getName();\n        final int pkgEndIndex \u003d className.lastIndexOf(\u0027.\u0027);\n        final String pkgName \u003d className.substring(0, pkgEndIndex);\n        final String bundle \u003d pkgName + \".messages\";\n        return bundle;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AbstractFileSetCheck.java"
    }
  }
}