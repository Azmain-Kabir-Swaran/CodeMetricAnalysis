{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RightCurlyCheck.java",
  "functionName": "getDetailsForLoops",
  "functionId": "getDetailsForLoops___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
  "functionStartLine": 650,
  "functionEndLine": 674,
  "numCommitsSeen": 94,
  "timeTaken": 993,
  "changeHistory": [
    "e47095a84a5a5034213948e31ca53d422fa50828",
    "59aa0915eae4629a5787edba5eb487389e27cf72"
  ],
  "changeHistoryShort": {
    "e47095a84a5a5034213948e31ca53d422fa50828": "Ybodychange",
    "59aa0915eae4629a5787edba5eb487389e27cf72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e47095a84a5a5034213948e31ca53d422fa50828": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6466: do not complain in same-mode about constructs that are not multi-part\n",
      "commitDate": "17/04/19 5:05 AM",
      "commitName": "e47095a84a5a5034213948e31ca53d422fa50828",
      "commitAuthor": "Bj√∂rn Kautler",
      "commitDateOld": "05/04/19 6:40 AM",
      "commitNameOld": "2be5521faf9a5457eacc8fa9b4bf0eb787911adb",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 11.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n         private static Details getDetailsForLoops(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             final DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n+            final boolean shouldCheckLastRcurly;\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_DO) {\n+                shouldCheckLastRcurly \u003d false;\n                 nextToken \u003d ast.findFirstToken(TokenTypes.DO_WHILE);\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n             }\n             else {\n+                shouldCheckLastRcurly \u003d true;\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent in code like \"while(true);\"\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n                 nextToken \u003d getNextToken(ast);\n             }\n-            return new Details(lcurly, rcurly, nextToken, false);\n+            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForLoops(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            final boolean shouldCheckLastRcurly;\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_DO) {\n                shouldCheckLastRcurly \u003d false;\n                nextToken \u003d ast.findFirstToken(TokenTypes.DO_WHILE);\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent in code like \"while(true);\"\n                    rcurly \u003d lcurly.getLastChild();\n                }\n                nextToken \u003d getNextToken(ast);\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "59aa0915eae4629a5787edba5eb487389e27cf72": {
      "type": "Yintroduced",
      "commitMessage": "minor: Refactored getDetails method of RightCurlyCheck\n",
      "commitDate": "02/05/17 6:40 AM",
      "commitName": "59aa0915eae4629a5787edba5eb487389e27cf72",
      "commitAuthor": "Piyush Sharma",
      "diff": "@@ -0,0 +1,22 @@\n+        private static Details getDetailsForLoops(DetailAST ast) {\n+            DetailAST rcurly \u003d null;\n+            final DetailAST lcurly;\n+            final DetailAST nextToken;\n+            final int tokenType \u003d ast.getType();\n+            if (tokenType \u003d\u003d TokenTypes.LITERAL_DO) {\n+                nextToken \u003d ast.findFirstToken(TokenTypes.DO_WHILE);\n+                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n+                if (lcurly !\u003d null) {\n+                    rcurly \u003d lcurly.getLastChild();\n+                }\n+            }\n+            else {\n+                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n+                if (lcurly !\u003d null) {\n+                    // SLIST could be absent in code like \"while(true);\"\n+                    rcurly \u003d lcurly.getLastChild();\n+                }\n+                nextToken \u003d getNextToken(ast);\n+            }\n+            return new Details(lcurly, rcurly, nextToken, false);\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForLoops(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_DO) {\n                nextToken \u003d ast.findFirstToken(TokenTypes.DO_WHILE);\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent in code like \"while(true);\"\n                    rcurly \u003d lcurly.getLastChild();\n                }\n                nextToken \u003d getNextToken(ast);\n            }\n            return new Details(lcurly, rcurly, nextToken, false);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java"
    }
  }
}