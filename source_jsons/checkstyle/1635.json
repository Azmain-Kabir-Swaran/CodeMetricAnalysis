{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "getImportedTypeCanonicalName",
  "functionId": "getImportedTypeCanonicalName___importAst-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 700,
  "functionEndLine": 713,
  "numCommitsSeen": 98,
  "timeTaken": 1884,
  "changeHistory": [
    "b1f2352241234fbe763a103c5a527cff14249308",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "576d593f6cb309d0959639fa707d0a01f28a6609",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782"
  ],
  "changeHistoryShort": {
    "b1f2352241234fbe763a103c5a527cff14249308": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "576d593f6cb309d0959639fa707d0a01f28a6609": "Ymultichange(Yrename,Ybodychange)",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1f2352241234fbe763a103c5a527cff14249308": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6272: added new tests to kill FALSE_RETURNS mutations",
      "commitDate": "17/12/18 9:46 PM",
      "commitName": "b1f2352241234fbe763a103c5a527cff14249308",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/18 7:16 AM",
      "commitNameOld": "f19a00a3919b4235beec9e6064fa2dd594fb2145",
      "commitAuthorOld": "Eric Bruneton",
      "daysBetweenCommits": 38.6,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n     private static String getImportedTypeCanonicalName(DetailAST importAst) {\n         final StringBuilder canonicalNameBuilder \u003d new StringBuilder(256);\n         DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n             toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n             if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n-                canonicalNameBuilder.append(toVisit.getText());\n-                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n-                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n+                if (canonicalNameBuilder.length() \u003e 0) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n+                canonicalNameBuilder.append(toVisit.getText());\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder(256);\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                if (canonicalNameBuilder.length() \u003e 0) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n                canonicalNameBuilder.append(toVisit.getText());\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "12/06/17 10:11 AM",
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 45.13,
      "commitsBetweenForRepo": 280,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static String getImportedTypeCanonicalName(DetailAST importAst) {\n-        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n+        final StringBuilder canonicalNameBuilder \u003d new StringBuilder(256);\n         DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n             toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n             if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                 canonicalNameBuilder.append(toVisit.getText());\n                 final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                 if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder(256);\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "576d593f6cb309d0959639fa707d0a01f28a6609": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Issue #1293: Refactoring of IllegalTypeCheck\n",
      "commitDate": "26/07/15 11:03 AM",
      "commitName": "576d593f6cb309d0959639fa707d0a01f28a6609",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Issue #1293: Refactoring of IllegalTypeCheck\n",
          "commitDate": "26/07/15 11:03 AM",
          "commitName": "576d593f6cb309d0959639fa707d0a01f28a6609",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "22/07/15 10:58 PM",
          "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-    private static String getCanonicalName(DetailAST importAst) {\n+    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n         final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n         DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n             toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n-            if (toVisit !\u003d null\n-                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n-                      || toVisit.getType() \u003d\u003d TokenTypes.STAR)) {\n+            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                 canonicalNameBuilder.append(toVisit.getText());\n                 final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                 if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {
            "oldValue": "getCanonicalName",
            "newValue": "getImportedTypeCanonicalName"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1293: Refactoring of IllegalTypeCheck\n",
          "commitDate": "26/07/15 11:03 AM",
          "commitName": "576d593f6cb309d0959639fa707d0a01f28a6609",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "22/07/15 10:58 PM",
          "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 3.5,
          "commitsBetweenForRepo": 48,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,15 @@\n-    private static String getCanonicalName(DetailAST importAst) {\n+    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n         final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n         DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n             toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n-            if (toVisit !\u003d null\n-                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n-                      || toVisit.getType() \u003d\u003d TokenTypes.STAR)) {\n+            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                 canonicalNameBuilder.append(toVisit.getText());\n                 final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                 if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getImportedTypeCanonicalName(DetailAST importAst) {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null \u0026\u0026 toVisit.getType() \u003d\u003d TokenTypes.IDENT) {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    private static String getCanonicalName(DetailAST aImport)\n+    private static String getCanonicalName(DetailAST importAst)\n     {\n         final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n-        DetailAST toVisit \u003d aImport;\n+        DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n-            toVisit \u003d getNextSubTreeNode(toVisit, aImport);\n+            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n             if (toVisit !\u003d null\n                    \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n                       || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n             {\n                 canonicalNameBuilder.append(toVisit.getText());\n-                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, aImport);\n+                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                 if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getCanonicalName(DetailAST importAst)\n    {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null\n                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n                      || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n            {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {
            "oldValue": "[aImport-DetailAST]",
            "newValue": "[importAst-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "06/01/15 3:01 PM",
          "commitNameOld": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 12.64,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    private static String getCanonicalName(DetailAST aImport)\n+    private static String getCanonicalName(DetailAST importAst)\n     {\n         final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n-        DetailAST toVisit \u003d aImport;\n+        DetailAST toVisit \u003d importAst;\n         while (toVisit !\u003d null) {\n-            toVisit \u003d getNextSubTreeNode(toVisit, aImport);\n+            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n             if (toVisit !\u003d null\n                    \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n                       || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n             {\n                 canonicalNameBuilder.append(toVisit.getText());\n-                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, aImport);\n+                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                 if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                     canonicalNameBuilder.append(\u0027.\u0027);\n                 }\n             }\n         }\n         return canonicalNameBuilder.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static String getCanonicalName(DetailAST importAst)\n    {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n        DetailAST toVisit \u003d importAst;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, importAst);\n            if (toVisit !\u003d null\n                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n                      || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n            {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, importAst);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "b06e2e0015944ceaa74a10134bf06ac5c9e53782": {
      "type": "Yintroduced",
      "commitMessage": "Illegal Type Check, fixed false positives on same file names, added support of analyzing imports, issue #78\n",
      "commitDate": "06/01/15 3:01 PM",
      "commitName": "b06e2e0015944ceaa74a10134bf06ac5c9e53782",
      "commitAuthor": "alexkravin",
      "diff": "@@ -0,0 +1,19 @@\n+    private static String getCanonicalName(DetailAST aImport)\n+    {\n+        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n+        DetailAST toVisit \u003d aImport;\n+        while (toVisit !\u003d null) {\n+            toVisit \u003d getNextSubTreeNode(toVisit, aImport);\n+            if (toVisit !\u003d null\n+                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n+                      || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n+            {\n+                canonicalNameBuilder.append(toVisit.getText());\n+                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, aImport);\n+                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n+                    canonicalNameBuilder.append(\u0027.\u0027);\n+                }\n+            }\n+        }\n+        return canonicalNameBuilder.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getCanonicalName(DetailAST aImport)\n    {\n        final StringBuilder canonicalNameBuilder \u003d new StringBuilder();\n        DetailAST toVisit \u003d aImport;\n        while (toVisit !\u003d null) {\n            toVisit \u003d getNextSubTreeNode(toVisit, aImport);\n            if (toVisit !\u003d null\n                   \u0026\u0026 (toVisit.getType() \u003d\u003d TokenTypes.IDENT\n                      || toVisit.getType() \u003d\u003d TokenTypes.STAR))\n            {\n                canonicalNameBuilder.append(toVisit.getText());\n                final DetailAST nextSubTreeNode \u003d getNextSubTreeNode(toVisit, aImport);\n                if (nextSubTreeNode.getType() !\u003d TokenTypes.SEMI) {\n                    canonicalNameBuilder.append(\u0027.\u0027);\n                }\n            }\n        }\n        return canonicalNameBuilder.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}