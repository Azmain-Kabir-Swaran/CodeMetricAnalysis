{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenUtil.java",
  "functionName": "getIntFromField",
  "functionId": "getIntFromField___field-Field__object-Object",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java",
  "functionStartLine": 79,
  "functionEndLine": 86,
  "numCommitsSeen": 87,
  "timeTaken": 2582,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5",
    "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
    "7f740b18c9b4d3cd596dcf06d70785c3362fabd5"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ymovefromfile",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": "Yfilerename",
    "e68f47ce99313c7dafade4ac4a55fccf12c09d5e": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "7f740b18c9b4d3cd596dcf06d70785c3362fabd5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java"
      }
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ymovefromfile",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/Utils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
        "oldMethodName": "getIntFromField",
        "newMethodName": "getIntFromField"
      }
    },
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": {
      "type": "Yfilerename",
      "commitMessage": "Utils classes have been moved to utils package. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "26/08/15 6:08 PM",
      "commitNameOld": "f6113bb56d695719a8803274effb3596cb82120f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/Utils.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/Utils.java"
      }
    },
    "e68f47ce99313c7dafade4ac4a55fccf12c09d5e": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Remove non-testable reflection code from JavadocUtils. #1308\n\nIn `JavadocUtils` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new method in utils is provided to wrap any checked exceptions into unchecked ones.\n",
      "commitDate": "13/07/15 1:46 PM",
      "commitName": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Remove non-testable reflection code from JavadocUtils. #1308\n\nIn `JavadocUtils` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new method in utils is provided to wrap any checked exceptions into unchecked ones.\n",
          "commitDate": "13/07/15 1:46 PM",
          "commitName": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "12/07/15 2:57 PM",
          "commitNameOld": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.95,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private static int getTokenFieldValue(Field field, String name) {\n+    public static int getIntFromField(Field field, Object object) {\n         try {\n-            return field.getInt(name);\n+            return field.getInt(object);\n         }\n-        catch (final IllegalArgumentException | IllegalAccessException e) {\n-            throw new IllegalStateException(\n-                    \"Failed to instantiate collection of Java tokens\", e);\n+        catch (final IllegalAccessException exception) {\n+            throw new IllegalStateException(exception);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java",
          "extendedDetails": {
            "oldValue": "getTokenFieldValue",
            "newValue": "getIntFromField"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Remove non-testable reflection code from JavadocUtils. #1308\n\nIn `JavadocUtils` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new method in utils is provided to wrap any checked exceptions into unchecked ones.\n",
          "commitDate": "13/07/15 1:46 PM",
          "commitName": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "12/07/15 2:57 PM",
          "commitNameOld": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.95,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private static int getTokenFieldValue(Field field, String name) {\n+    public static int getIntFromField(Field field, Object object) {\n         try {\n-            return field.getInt(name);\n+            return field.getInt(object);\n         }\n-        catch (final IllegalArgumentException | IllegalAccessException e) {\n-            throw new IllegalStateException(\n-                    \"Failed to instantiate collection of Java tokens\", e);\n+        catch (final IllegalAccessException exception) {\n+            throw new IllegalStateException(exception);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java",
          "extendedDetails": {
            "oldValue": "[field-Field, name-String]",
            "newValue": "[field-Field, object-Object]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Remove non-testable reflection code from JavadocUtils. #1308\n\nIn `JavadocUtils` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new method in utils is provided to wrap any checked exceptions into unchecked ones.\n",
          "commitDate": "13/07/15 1:46 PM",
          "commitName": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "12/07/15 2:57 PM",
          "commitNameOld": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.95,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private static int getTokenFieldValue(Field field, String name) {\n+    public static int getIntFromField(Field field, Object object) {\n         try {\n-            return field.getInt(name);\n+            return field.getInt(object);\n         }\n-        catch (final IllegalArgumentException | IllegalAccessException e) {\n-            throw new IllegalStateException(\n-                    \"Failed to instantiate collection of Java tokens\", e);\n+        catch (final IllegalAccessException exception) {\n+            throw new IllegalStateException(exception);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Remove non-testable reflection code from JavadocUtils. #1308\n\nIn `JavadocUtils` any reflection-related exception would mean programmer\u0027s mistake with no recovery. In such cases checked exceptions are useless, so new method in utils is provided to wrap any checked exceptions into unchecked ones.\n",
          "commitDate": "13/07/15 1:46 PM",
          "commitName": "e68f47ce99313c7dafade4ac4a55fccf12c09d5e",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "12/07/15 2:57 PM",
          "commitNameOld": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 0.95,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private static int getTokenFieldValue(Field field, String name) {\n+    public static int getIntFromField(Field field, Object object) {\n         try {\n-            return field.getInt(name);\n+            return field.getInt(object);\n         }\n-        catch (final IllegalArgumentException | IllegalAccessException e) {\n-            throw new IllegalStateException(\n-                    \"Failed to instantiate collection of Java tokens\", e);\n+        catch (final IllegalAccessException exception) {\n+            throw new IllegalStateException(exception);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getIntFromField(Field field, Object object) {\n        try {\n            return field.getInt(object);\n        }\n        catch (final IllegalAccessException exception) {\n            throw new IllegalStateException(exception);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java",
          "extendedDetails": {}
        }
      ]
    },
    "7f740b18c9b4d3cd596dcf06d70785c3362fabd5": {
      "type": "Yintroduced",
      "commitMessage": "UT coverage 100% for com.puppycrawl.tools.checkstyle.Utils. #1294\n",
      "commitDate": "12/07/15 2:57 PM",
      "commitName": "7f740b18c9b4d3cd596dcf06d70785c3362fabd5",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,9 @@\n+    private static int getTokenFieldValue(Field field, String name) {\n+        try {\n+            return field.getInt(name);\n+        }\n+        catch (final IllegalArgumentException | IllegalAccessException e) {\n+            throw new IllegalStateException(\n+                    \"Failed to instantiate collection of Java tokens\", e);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenFieldValue(Field field, String name) {\n        try {\n            return field.getInt(name);\n        }\n        catch (final IllegalArgumentException | IllegalAccessException e) {\n            throw new IllegalStateException(\n                    \"Failed to instantiate collection of Java tokens\", e);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Utils.java"
    }
  }
}