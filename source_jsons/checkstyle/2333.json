{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DesignForExtensionCheck.java",
  "functionName": "isNativeMethod",
  "functionId": "isNativeMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java",
  "functionStartLine": 335,
  "functionEndLine": 338,
  "numCommitsSeen": 54,
  "timeTaken": 1083,
  "changeHistory": [
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
    "06716249cfb86d9f213f33a26877112e8ab45adc"
  ],
  "changeHistoryShort": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": "Ybodychange",
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": "Ymodifierchange",
    "06716249cfb86d9f213f33a26877112e8ab45adc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5124: removed usage of branchContains for modifiers",
      "commitDate": "25/10/17 7:54 PM",
      "commitName": "3bcd2a83aac2ebc2fb9a8e34599d1d565a047b22",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/07/17 1:48 PM",
      "commitNameOld": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 94.25,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n     private static boolean isNativeMethod(DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n-        return mods.branchContains(TokenTypes.LITERAL_NATIVE);\n+        return mods.findFirstToken(TokenTypes.LITERAL_NATIVE) !\u003d null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isNativeMethod(DetailAST ast) {\n        final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        return mods.findFirstToken(TokenTypes.LITERAL_NATIVE) !\u003d null;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java",
      "extendedDetails": {}
    },
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4726: fix MethodMayBeStatic idea violations\n",
      "commitDate": "23/07/17 1:48 PM",
      "commitName": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "20/07/17 5:55 AM",
      "commitNameOld": "5029c7b77385320a3297dd944d1bd736eba3a84f",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 3.33,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    private boolean isNativeMethod(DetailAST ast) {\n+    private static boolean isNativeMethod(DetailAST ast) {\n         final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         return mods.branchContains(TokenTypes.LITERAL_NATIVE);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isNativeMethod(DetailAST ast) {\n        final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        return mods.branchContains(TokenTypes.LITERAL_NATIVE);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "06716249cfb86d9f213f33a26877112e8ab45adc": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3102: DesignForExtension: consider overridable methods and javadoc\n",
      "commitDate": "22/10/16 3:36 PM",
      "commitName": "06716249cfb86d9f213f33a26877112e8ab45adc",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,4 @@\n+    private boolean isNativeMethod(DetailAST ast) {\n+        final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+        return mods.branchContains(TokenTypes.LITERAL_NATIVE);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isNativeMethod(DetailAST ast) {\n        final DetailAST mods \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        return mods.branchContains(TokenTypes.LITERAL_NATIVE);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/DesignForExtensionCheck.java"
    }
  }
}