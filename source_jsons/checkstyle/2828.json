{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommentsIndentationCheck.java",
  "functionName": "getPrevStatementWhenCommentIsUnderCase",
  "functionId": "getPrevStatementWhenCommentIsUnderCase___parentStatement-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
  "functionStartLine": 1012,
  "functionEndLine": 1041,
  "numCommitsSeen": 52,
  "timeTaken": 1225,
  "changeHistory": [
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad",
    "2057a77c3a524b86dff382ac8abdca71dd03764a"
  ],
  "changeHistoryShort": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": "Ybodychange",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": "Ybodychange",
    "2057a77c3a524b86dff382ac8abdca71dd03764a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
      "commitDate": "30/05/16 6:08 AM",
      "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "24/04/16 6:24 AM",
      "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 35.99,
      "commitsBetweenForRepo": 88,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,30 @@\n     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n         DetailAST prevStmt \u003d null;\n         final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n         if (prevBlock.getLastChild() !\u003d null) {\n             DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n-            if (blockBody.getPreviousSibling() !\u003d null) {\n+            if (blockBody.getType() \u003d\u003d TokenTypes.SEMI) {\n                 blockBody \u003d blockBody.getPreviousSibling();\n             }\n             if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n                 if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {\n                     prevStmt \u003d findStartTokenOfMethodCallChain(blockBody);\n                 }\n                 else {\n                     prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n                 }\n             }\n             else {\n                 if (blockBody.getType() \u003d\u003d TokenTypes.SLIST) {\n                     prevStmt \u003d blockBody.getParent().getParent();\n                 }\n                 else {\n                     prevStmt \u003d blockBody;\n                 }\n             }\n+            if (isComment(prevStmt)) {\n+                prevStmt \u003d prevStmt.getNextSibling();\n+            }\n         }\n         return prevStmt;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n        DetailAST prevStmt \u003d null;\n        final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n        if (prevBlock.getLastChild() !\u003d null) {\n            DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n            if (blockBody.getType() \u003d\u003d TokenTypes.SEMI) {\n                blockBody \u003d blockBody.getPreviousSibling();\n            }\n            if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n                if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {\n                    prevStmt \u003d findStartTokenOfMethodCallChain(blockBody);\n                }\n                else {\n                    prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n                }\n            }\n            else {\n                if (blockBody.getType() \u003d\u003d TokenTypes.SLIST) {\n                    prevStmt \u003d blockBody.getParent().getParent();\n                }\n                else {\n                    prevStmt \u003d blockBody;\n                }\n            }\n            if (isComment(prevStmt)) {\n                prevStmt \u003d prevStmt.getNextSibling();\n            }\n        }\n        return prevStmt;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2078: Fix FP violations at the end of the block and in the middle of the method\n",
      "commitDate": "31/10/15 3:48 PM",
      "commitName": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "23/10/15 3:55 PM",
      "commitNameOld": "24f73e69dc69add5fb33af0f54af7ad186b285eb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.0,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,27 @@\n     private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n         DetailAST prevStmt \u003d null;\n         final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n         if (prevBlock.getLastChild() !\u003d null) {\n             DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n             if (blockBody.getPreviousSibling() !\u003d null) {\n                 blockBody \u003d blockBody.getPreviousSibling();\n             }\n             if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n-                prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n+                if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {\n+                    prevStmt \u003d findStartTokenOfMethodCallChain(blockBody);\n+                }\n+                else {\n+                    prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n+                }\n             }\n             else {\n-                prevStmt \u003d blockBody;\n+                if (blockBody.getType() \u003d\u003d TokenTypes.SLIST) {\n+                    prevStmt \u003d blockBody.getParent().getParent();\n+                }\n+                else {\n+                    prevStmt \u003d blockBody;\n+                }\n             }\n         }\n         return prevStmt;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n        DetailAST prevStmt \u003d null;\n        final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n        if (prevBlock.getLastChild() !\u003d null) {\n            DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n            if (blockBody.getPreviousSibling() !\u003d null) {\n                blockBody \u003d blockBody.getPreviousSibling();\n            }\n            if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n                if (isUsingOfObjectReferenceToInvokeMethod(blockBody)) {\n                    prevStmt \u003d findStartTokenOfMethodCallChain(blockBody);\n                }\n                else {\n                    prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n                }\n            }\n            else {\n                if (blockBody.getType() \u003d\u003d TokenTypes.SLIST) {\n                    prevStmt \u003d blockBody.getParent().getParent();\n                }\n                else {\n                    prevStmt \u003d blockBody;\n                }\n            }\n        }\n        return prevStmt;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "2057a77c3a524b86dff382ac8abdca71dd03764a": {
      "type": "Yintroduced",
      "commitMessage": "Refactoring of CommentsIndentationCheck, issue #333\n",
      "commitDate": "19/08/15 10:02 PM",
      "commitName": "2057a77c3a524b86dff382ac8abdca71dd03764a",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,17 @@\n+    private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n+        DetailAST prevStmt \u003d null;\n+        final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n+        if (prevBlock.getLastChild() !\u003d null) {\n+            DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n+            if (blockBody.getPreviousSibling() !\u003d null) {\n+                blockBody \u003d blockBody.getPreviousSibling();\n+            }\n+            if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n+                prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n+            }\n+            else {\n+                prevStmt \u003d blockBody;\n+            }\n+        }\n+        return prevStmt;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST getPrevStatementWhenCommentIsUnderCase(DetailAST parentStatement) {\n        DetailAST prevStmt \u003d null;\n        final DetailAST prevBlock \u003d parentStatement.getPreviousSibling();\n        if (prevBlock.getLastChild() !\u003d null) {\n            DetailAST blockBody \u003d prevBlock.getLastChild().getLastChild();\n            if (blockBody.getPreviousSibling() !\u003d null) {\n                blockBody \u003d blockBody.getPreviousSibling();\n            }\n            if (blockBody.getType() \u003d\u003d TokenTypes.EXPR) {\n                prevStmt \u003d blockBody.getFirstChild().getFirstChild();\n            }\n            else {\n                prevStmt \u003d blockBody;\n            }\n        }\n        return prevStmt;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java"
    }
  }
}