{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AnonInnerLengthCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
  "functionStartLine": 92,
  "functionEndLine": 103,
  "numCommitsSeen": 43,
  "timeTaken": 1349,
  "changeHistory": [
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "2b9b30e986d5df02e8938d163edf32c3263525d6"
  ],
  "changeHistoryShort": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2": "Ybodychange",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "2b9b30e986d5df02e8938d163edf32c3263525d6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (openingBrace !\u003d null) {\n             final DetailAST closingBrace \u003d\n                 openingBrace.findFirstToken(TokenTypes.RCURLY);\n             final int length \u003d\n                 closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n             if (length \u003e max) {\n-                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY,\n-                        length, max);\n+                log(ast, MSG_KEY, length, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e max) {\n                log(ast, MSG_KEY, length, max);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
      "extendedDetails": {}
    },
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, sizes package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     public void visitToken(DetailAST ast)\n     {\n         final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (openingBrace !\u003d null) {\n             final DetailAST closingBrace \u003d\n                 openingBrace.findFirstToken(TokenTypes.RCURLY);\n             final int length \u003d\n                 closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n             if (length \u003e max) {\n-                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",\n+                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY,\n                         length, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e max) {\n                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY,\n                        length, max);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
      "extendedDetails": {}
    },
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, sizes, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 464,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (openingBrace !\u003d null) {\n             final DetailAST closingBrace \u003d\n                 openingBrace.findFirstToken(TokenTypes.RCURLY);\n             final int length \u003d\n                 closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n-            if (length \u003e mMax) {\n-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",\n-                        length, mMax);\n+            if (length \u003e max) {\n+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",\n+                        length, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e max) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",\n                        length, max);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 464,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n         if (openingBrace !\u003d null) {\n             final DetailAST closingBrace \u003d\n                 openingBrace.findFirstToken(TokenTypes.RCURLY);\n             final int length \u003d\n                 closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n-            if (length \u003e mMax) {\n-                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",\n-                        length, mMax);\n+            if (length \u003e max) {\n+                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",\n+                        length, max);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST openingBrace \u003d ast.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e max) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"maxLen.anonInner\",\n                        length, max);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e mMax) {\n                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",\n                        length, mMax);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java"
      }
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": "20/12/07 3:36 AM",
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "19/12/07 10:21 PM",
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n         if (openingBrace !\u003d null) {\n             final DetailAST closingBrace \u003d\n                 openingBrace.findFirstToken(TokenTypes.RCURLY);\n             final int length \u003d\n                 closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n             if (length \u003e mMax) {\n-                log(aAST.getLineNo(),\n-                    aAST.getColumnNo(),\n-                    \"maxLen.anonInner\",\n-                    new Integer(length),\n-                    new Integer(mMax));\n+                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",\n+                        length, mMax);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e mMax) {\n                log(aAST.getLineNo(), aAST.getColumnNo(), \"maxLen.anonInner\",\n                        length, mMax);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java",
      "extendedDetails": {}
    },
    "2b9b30e986d5df02e8938d163edf32c3263525d6": {
      "type": "Yintroduced",
      "commitMessage": "implementation for rfe #715709 (anonymous inner classes should be short)\ncontributed by Rob Worth\n",
      "commitDate": "07/06/03 1:31 AM",
      "commitName": "2b9b30e986d5df02e8938d163edf32c3263525d6",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,17 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n+        if (openingBrace !\u003d null) {\n+            final DetailAST closingBrace \u003d\n+                openingBrace.findFirstToken(TokenTypes.RCURLY);\n+            final int length \u003d\n+                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n+            if (length \u003e mMax) {\n+                log(aAST.getLineNo(),\n+                    aAST.getColumnNo(),\n+                    \"maxLen.anonInner\",\n+                    new Integer(length),\n+                    new Integer(mMax));\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST openingBrace \u003d aAST.findFirstToken(TokenTypes.OBJBLOCK);\n        if (openingBrace !\u003d null) {\n            final DetailAST closingBrace \u003d\n                openingBrace.findFirstToken(TokenTypes.RCURLY);\n            final int length \u003d\n                closingBrace.getLineNo() - openingBrace.getLineNo() + 1;\n            if (length \u003e mMax) {\n                log(aAST.getLineNo(),\n                    aAST.getColumnNo(),\n                    \"maxLen.anonInner\",\n                    new Integer(length),\n                    new Integer(mMax));\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/AnonInnerLengthCheck.java"
    }
  }
}