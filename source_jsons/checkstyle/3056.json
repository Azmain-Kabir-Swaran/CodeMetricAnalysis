{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SummaryJavadocCheck.java",
  "functionName": "getSummarySentence",
  "functionId": "getSummarySentence___ast-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
  "functionStartLine": 245,
  "functionEndLine": 265,
  "numCommitsSeen": 53,
  "timeTaken": 1376,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "548ace7809f9b8e52ee1d8506209297e2a400912",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
    "44efd238b3b23132bcfbe86440d82fbe87d28469"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "548ace7809f9b8e52ee1d8506209297e2a400912": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": "Ymodifierchange",
    "44efd238b3b23132bcfbe86440d82fbe87d28469": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static String getSummarySentence(DetailNode ast) {\n         boolean flag \u003d true;\n         final StringBuilder result \u003d new StringBuilder(256);\n         for (DetailNode child : ast.getChildren()) {\n             if (ALLOWED_TYPES.contains(child.getType())) {\n                 result.append(child.getText());\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n-                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n+                    \u0026\u0026 CommonUtil.isBlank(result.toString().trim())) {\n                 result.append(getStringInsideTag(result.toString(),\n                         child.getChildren()[0].getChildren()[0]));\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 flag \u003d false;\n             }\n             if (!flag) {\n                 break;\n             }\n         }\n         return result.toString().trim();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getSummarySentence(DetailNode ast) {\n        boolean flag \u003d true;\n        final StringBuilder result \u003d new StringBuilder(256);\n        for (DetailNode child : ast.getChildren()) {\n            if (ALLOWED_TYPES.contains(child.getType())) {\n                result.append(child.getText());\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                    \u0026\u0026 CommonUtil.isBlank(result.toString().trim())) {\n                result.append(getStringInsideTag(result.toString(),\n                        child.getChildren()[0].getChildren()[0]));\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                flag \u003d false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return result.toString().trim();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "548ace7809f9b8e52ee1d8506209297e2a400912": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4744: ignore starting inheritDoc in SummaryJavadocCheck",
      "commitDate": "04/08/17 8:45 PM",
      "commitName": "548ace7809f9b8e52ee1d8506209297e2a400912",
      "commitAuthor": "rnveach",
      "commitDateOld": "27/07/17 1:18 PM",
      "commitNameOld": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 8.31,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,21 @@\n     private static String getSummarySentence(DetailNode ast) {\n         boolean flag \u003d true;\n         final StringBuilder result \u003d new StringBuilder(256);\n         for (DetailNode child : ast.getChildren()) {\n             if (ALLOWED_TYPES.contains(child.getType())) {\n                 result.append(child.getText());\n             }\n-            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n-                    \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n-                result.append(INHERIT_DOC);\n-            }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                     \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                 result.append(getStringInsideTag(result.toString(),\n                         child.getChildren()[0].getChildren()[0]));\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 flag \u003d false;\n             }\n             if (!flag) {\n                 break;\n             }\n         }\n         return result.toString().trim();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getSummarySentence(DetailNode ast) {\n        boolean flag \u003d true;\n        final StringBuilder result \u003d new StringBuilder(256);\n        for (DetailNode child : ast.getChildren()) {\n            if (ALLOWED_TYPES.contains(child.getType())) {\n                result.append(child.getText());\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                result.append(getStringInsideTag(result.toString(),\n                        child.getChildren()[0].getChildren()[0]));\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                flag \u003d false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return result.toString().trim();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "23/07/17 1:48 PM",
      "commitNameOld": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private static String getSummarySentence(DetailNode ast) {\n         boolean flag \u003d true;\n-        final StringBuilder result \u003d new StringBuilder();\n+        final StringBuilder result \u003d new StringBuilder(256);\n         for (DetailNode child : ast.getChildren()) {\n             if (ALLOWED_TYPES.contains(child.getType())) {\n                 result.append(child.getText());\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                     \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n                 result.append(INHERIT_DOC);\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                     \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                 result.append(getStringInsideTag(result.toString(),\n                         child.getChildren()[0].getChildren()[0]));\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 flag \u003d false;\n             }\n             if (!flag) {\n                 break;\n             }\n         }\n         return result.toString().trim();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getSummarySentence(DetailNode ast) {\n        boolean flag \u003d true;\n        final StringBuilder result \u003d new StringBuilder(256);\n        for (DetailNode child : ast.getChildren()) {\n            if (ALLOWED_TYPES.contains(child.getType())) {\n                result.append(child.getText());\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                    \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n                result.append(INHERIT_DOC);\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                result.append(getStringInsideTag(result.toString(),\n                        child.getChildren()[0].getChildren()[0]));\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                flag \u003d false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return result.toString().trim();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #4726: fix MethodMayBeStatic idea violations\n",
      "commitDate": "23/07/17 1:48 PM",
      "commitName": "359ce65a7b6ec7725d4fea3aca1a299cd2b7f7ba",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "22/07/17 11:23 AM",
      "commitNameOld": "44efd238b3b23132bcfbe86440d82fbe87d28469",
      "commitAuthorOld": "Sagar",
      "daysBetweenCommits": 1.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n-    private String getSummarySentence(DetailNode ast) {\n+    private static String getSummarySentence(DetailNode ast) {\n         boolean flag \u003d true;\n         final StringBuilder result \u003d new StringBuilder();\n         for (DetailNode child : ast.getChildren()) {\n             if (ALLOWED_TYPES.contains(child.getType())) {\n                 result.append(child.getText());\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                     \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n                 result.append(INHERIT_DOC);\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                     \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                 result.append(getStringInsideTag(result.toString(),\n                         child.getChildren()[0].getChildren()[0]));\n             }\n             else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 flag \u003d false;\n             }\n             if (!flag) {\n                 break;\n             }\n         }\n         return result.toString().trim();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String getSummarySentence(DetailNode ast) {\n        boolean flag \u003d true;\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : ast.getChildren()) {\n            if (ALLOWED_TYPES.contains(child.getType())) {\n                result.append(child.getText());\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                    \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n                result.append(INHERIT_DOC);\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                result.append(getStringInsideTag(result.toString(),\n                        child.getChildren()[0].getChildren()[0]));\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                flag \u003d false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return result.toString().trim();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "44efd238b3b23132bcfbe86440d82fbe87d28469": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3907: SummaryJavadoc no violation on javadoc where \u0027.\u0027 is used not as end of sentence\n",
      "commitDate": "22/07/17 11:23 AM",
      "commitName": "44efd238b3b23132bcfbe86440d82fbe87d28469",
      "commitAuthor": "Sagar",
      "diff": "@@ -0,0 +1,25 @@\n+    private String getSummarySentence(DetailNode ast) {\n+        boolean flag \u003d true;\n+        final StringBuilder result \u003d new StringBuilder();\n+        for (DetailNode child : ast.getChildren()) {\n+            if (ALLOWED_TYPES.contains(child.getType())) {\n+                result.append(child.getText());\n+            }\n+            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n+                    \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n+                result.append(INHERIT_DOC);\n+            }\n+            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n+                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n+                result.append(getStringInsideTag(result.toString(),\n+                        child.getChildren()[0].getChildren()[0]));\n+            }\n+            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n+                flag \u003d false;\n+            }\n+            if (!flag) {\n+                break;\n+            }\n+        }\n+        return result.toString().trim();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private String getSummarySentence(DetailNode ast) {\n        boolean flag \u003d true;\n        final StringBuilder result \u003d new StringBuilder();\n        for (DetailNode child : ast.getChildren()) {\n            if (ALLOWED_TYPES.contains(child.getType())) {\n                result.append(child.getText());\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_INLINE_TAG\n                    \u0026\u0026 getContentOfChild(child).equals(INHERIT_DOC)) {\n                result.append(INHERIT_DOC);\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.HTML_ELEMENT\n                    \u0026\u0026 CommonUtils.isBlank(result.toString().trim())) {\n                result.append(getStringInsideTag(result.toString(),\n                        child.getChildren()[0].getChildren()[0]));\n            }\n            else if (child.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                flag \u003d false;\n            }\n            if (!flag) {\n                break;\n            }\n        }\n        return result.toString().trim();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java"
    }
  }
}