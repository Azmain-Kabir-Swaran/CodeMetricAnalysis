{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "searchMatchingTypeParameter",
  "functionId": "searchMatchingTypeParameter___typeParams-List__DetailAST____requiredTypeName-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 923,
  "functionEndLine": 938,
  "numCommitsSeen": 121,
  "timeTaken": 1322,
  "changeHistory": [
    "faa8a0b7a427385fab564d2959244355f8d9813f"
  ],
  "changeHistoryShort": {
    "faa8a0b7a427385fab564d2959244355f8d9813f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faa8a0b7a427385fab564d2959244355f8d9813f": {
      "type": "Yintroduced",
      "commitMessage": "Issue #46. Statements shouldn\u0027t be nested too deep\n",
      "commitDate": "31/08/15 12:49 PM",
      "commitName": "faa8a0b7a427385fab564d2959244355f8d9813f",
      "commitAuthor": "Ilja Dubinin",
      "diff": "@@ -0,0 +1,16 @@\n+    private static boolean searchMatchingTypeParameter(List\u003cDetailAST\u003e typeParams,\n+            String requiredTypeName) {\n+        // Loop looking for matching type param\n+        final Iterator\u003cDetailAST\u003e typeParamsIt \u003d typeParams.iterator();\n+        boolean found \u003d false;\n+        while (typeParamsIt.hasNext()) {\n+            final DetailAST typeParam \u003d typeParamsIt.next();\n+            if (typeParam.findFirstToken(TokenTypes.IDENT).getText()\n+                    .equals(requiredTypeName)) {\n+                found \u003d true;\n+                typeParamsIt.remove();\n+                break;\n+            }\n+        }\n+        return found;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean searchMatchingTypeParameter(List\u003cDetailAST\u003e typeParams,\n            String requiredTypeName) {\n        // Loop looking for matching type param\n        final Iterator\u003cDetailAST\u003e typeParamsIt \u003d typeParams.iterator();\n        boolean found \u003d false;\n        while (typeParamsIt.hasNext()) {\n            final DetailAST typeParam \u003d typeParamsIt.next();\n            if (typeParam.findFirstToken(TokenTypes.IDENT).getText()\n                    .equals(requiredTypeName)) {\n                found \u003d true;\n                typeParamsIt.remove();\n                break;\n            }\n        }\n        return found;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java"
    }
  }
}