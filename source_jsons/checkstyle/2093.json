{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SinglelineDetector.java",
  "functionName": "processLines",
  "functionId": "processLines___fileText-FileText",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
  "functionStartLine": 62,
  "functionEndLine": 71,
  "numCommitsSeen": 50,
  "timeTaken": 1755,
  "changeHistory": [
    "0c2abadbb7f2887f31011157d62edf40bea131c3",
    "e615817b5bff08ada2fce5f43e9e1bcae4e77c38",
    "075b3084de3934dbf73f108110b36e01dcf10d1e",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23"
  ],
  "changeHistoryShort": {
    "0c2abadbb7f2887f31011157d62edf40bea131c3": "Ymultichange(Yparameterchange,Ybodychange)",
    "e615817b5bff08ada2fce5f43e9e1bcae4e77c38": "Ybodychange",
    "075b3084de3934dbf73f108110b36e01dcf10d1e": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c2abadbb7f2887f31011157d62edf40bea131c3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #4641: Avoid usage of getLines method from FileText\n",
      "commitDate": "10/07/17 12:57 PM",
      "commitName": "0c2abadbb7f2887f31011157d62edf40bea131c3",
      "commitAuthor": "Timur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4641: Avoid usage of getLines method from FileText\n",
          "commitDate": "10/07/17 12:57 PM",
          "commitName": "0c2abadbb7f2887f31011157d62edf40bea131c3",
          "commitAuthor": "Timur",
          "commitDateOld": "27/01/17 6:31 AM",
          "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 164.23,
          "commitsBetweenForRepo": 630,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-    public void processLines(List\u003cString\u003e lines) {\n+    public void processLines(FileText fileText) {\n         resetState();\n         int lineNo \u003d 0;\n-        for (String line : lines) {\n+        for (int index \u003d 0; index \u003c fileText.size(); index++) {\n+            final String line \u003d fileText.get(index);\n             lineNo++;\n             checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n         }\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText fileText) {\n        resetState();\n        int lineNo \u003d 0;\n        for (int index \u003d 0; index \u003c fileText.size(); index++) {\n            final String line \u003d fileText.get(index);\n            lineNo++;\n            checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
          "extendedDetails": {
            "oldValue": "[lines-List\u003cString\u003e]",
            "newValue": "[fileText-FileText]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4641: Avoid usage of getLines method from FileText\n",
          "commitDate": "10/07/17 12:57 PM",
          "commitName": "0c2abadbb7f2887f31011157d62edf40bea131c3",
          "commitAuthor": "Timur",
          "commitDateOld": "27/01/17 6:31 AM",
          "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 164.23,
          "commitsBetweenForRepo": 630,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,10 @@\n-    public void processLines(List\u003cString\u003e lines) {\n+    public void processLines(FileText fileText) {\n         resetState();\n         int lineNo \u003d 0;\n-        for (String line : lines) {\n+        for (int index \u003d 0; index \u003c fileText.size(); index++) {\n+            final String line \u003d fileText.get(index);\n             lineNo++;\n             checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n         }\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(FileText fileText) {\n        resetState();\n        int lineNo \u003d 0;\n        for (int index \u003d 0; index \u003c fileText.size(); index++) {\n            final String line \u003d fileText.get(index);\n            lineNo++;\n            checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
          "extendedDetails": {}
        }
      ]
    },
    "e615817b5bff08ada2fce5f43e9e1bcae4e77c38": {
      "type": "Ybodychange",
      "commitMessage": "Fix various typos. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals, and fix them in one click.\n",
      "commitDate": "25/08/15 4:43 AM",
      "commitName": "e615817b5bff08ada2fce5f43e9e1bcae4e77c38",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "21/08/15 5:05 AM",
      "commitNameOld": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void processLines(List\u003cString\u003e lines) {\n         resetState();\n-        int lineno \u003d 0;\n+        int lineNo \u003d 0;\n         for (String line : lines) {\n-            lineno++;\n-            checkLine(lineno, line, options.getPattern().matcher(line), 0);\n+            lineNo++;\n+            checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n         }\n         finish();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(List\u003cString\u003e lines) {\n        resetState();\n        int lineNo \u003d 0;\n        for (String line : lines) {\n            lineNo++;\n            checkLine(lineNo, line, options.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
      "extendedDetails": {}
    },
    "075b3084de3934dbf73f108110b36e01dcf10d1e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, regexp, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, regexp, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 462,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void processLines(List\u003cString\u003e aLines)\n+    public void processLines(List\u003cString\u003e lines)\n     {\n         resetState();\n         int lineno \u003d 0;\n-        for (String line : aLines) {\n+        for (String line : lines) {\n             lineno++;\n-            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);\n+            checkLine(lineno, line, options.getPattern().matcher(line), 0);\n         }\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(List\u003cString\u003e lines)\n    {\n        resetState();\n        int lineno \u003d 0;\n        for (String line : lines) {\n            lineno++;\n            checkLine(lineno, line, options.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
          "extendedDetails": {
            "oldValue": "[aLines-List\u003cString\u003e]",
            "newValue": "[lines-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, regexp, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "075b3084de3934dbf73f108110b36e01dcf10d1e",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 462,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void processLines(List\u003cString\u003e aLines)\n+    public void processLines(List\u003cString\u003e lines)\n     {\n         resetState();\n         int lineno \u003d 0;\n-        for (String line : aLines) {\n+        for (String line : lines) {\n             lineno++;\n-            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);\n+            checkLine(lineno, line, options.getPattern().matcher(line), 0);\n         }\n         finish();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void processLines(List\u003cString\u003e lines)\n    {\n        resetState();\n        int lineno \u003d 0;\n        for (String line : lines) {\n            lineno++;\n            checkLine(lineno, line, options.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void processLines(List\u003cString\u003e aLines)\n    {\n        resetState();\n        int lineno \u003d 0;\n        for (String line : aLines) {\n            lineno++;\n            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java"
      }
    },
    "61f25fbed0f49e67e18b988eb47c86d72544ac23": {
      "type": "Yintroduced",
      "commitMessage": "start of refactoring to consolidate all the regexp checks.\n",
      "commitDate": "22/12/08 3:21 AM",
      "commitName": "61f25fbed0f49e67e18b988eb47c86d72544ac23",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,10 @@\n+    public void processLines(List\u003cString\u003e aLines)\n+    {\n+        resetState();\n+        int lineno \u003d 0;\n+        for (String line : aLines) {\n+            lineno++;\n+            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);\n+        }\n+        finish();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void processLines(List\u003cString\u003e aLines)\n    {\n        resetState();\n        int lineno \u003d 0;\n        for (String line : aLines) {\n            lineno++;\n            checkLine(lineno, line, mOptions.getPattern().matcher(line), 0);\n        }\n        finish();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/regexp/SinglelineDetector.java"
    }
  }
}