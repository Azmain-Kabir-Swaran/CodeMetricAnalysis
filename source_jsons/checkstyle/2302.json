{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VisibilityModifierCheck.java",
  "functionName": "getTypeArgsClassNames",
  "functionId": "getTypeArgsClassNames___typeArgs-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java",
  "functionStartLine": 875,
  "functionEndLine": 890,
  "numCommitsSeen": 83,
  "timeTaken": 811,
  "changeHistory": [
    "36a0df872e124bf53ac8d63d95b3b3d1a8c2ec74"
  ],
  "changeHistoryShort": {
    "36a0df872e124bf53ac8d63d95b3b3d1a8c2ec74": "Yintroduced"
  },
  "changeHistoryDetails": {
    "36a0df872e124bf53ac8d63d95b3b3d1a8c2ec74": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3142: Add proper support for generics in VisibilityModifierCheck (#3247)\n\n",
      "commitDate": "10/06/16 10:35 AM",
      "commitName": "36a0df872e124bf53ac8d63d95b3b3d1a8c2ec74",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,16 @@\n+    private static List\u003cString\u003e getTypeArgsClassNames(DetailAST typeArgs) {\n+        final List\u003cString\u003e typeClassNames \u003d new ArrayList\u003c\u003e();\n+        DetailAST type \u003d typeArgs.findFirstToken(TokenTypes.TYPE_ARGUMENT);\n+        boolean isCanonicalName \u003d isCanonicalName(type);\n+        String typeName \u003d getTypeName(type, isCanonicalName);\n+        typeClassNames.add(typeName);\n+        DetailAST sibling \u003d type.getNextSibling();\n+        while (sibling.getType() \u003d\u003d TokenTypes.COMMA) {\n+            type \u003d sibling.getNextSibling();\n+            isCanonicalName \u003d isCanonicalName(type);\n+            typeName \u003d getTypeName(type, isCanonicalName);\n+            typeClassNames.add(typeName);\n+            sibling \u003d type.getNextSibling();\n+        }\n+        return typeClassNames;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cString\u003e getTypeArgsClassNames(DetailAST typeArgs) {\n        final List\u003cString\u003e typeClassNames \u003d new ArrayList\u003c\u003e();\n        DetailAST type \u003d typeArgs.findFirstToken(TokenTypes.TYPE_ARGUMENT);\n        boolean isCanonicalName \u003d isCanonicalName(type);\n        String typeName \u003d getTypeName(type, isCanonicalName);\n        typeClassNames.add(typeName);\n        DetailAST sibling \u003d type.getNextSibling();\n        while (sibling.getType() \u003d\u003d TokenTypes.COMMA) {\n            type \u003d sibling.getNextSibling();\n            isCanonicalName \u003d isCanonicalName(type);\n            typeName \u003d getTypeName(type, isCanonicalName);\n            typeClassNames.add(typeName);\n            sibling \u003d type.getNextSibling();\n        }\n        return typeClassNames;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/design/VisibilityModifierCheck.java"
    }
  }
}