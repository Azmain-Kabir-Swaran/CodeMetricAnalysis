{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CyclomaticComplexityCheck.java",
  "functionName": "getAcceptableTokens",
  "functionId": "getAcceptableTokens",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java",
  "functionStartLine": 294,
  "functionEndLine": 311,
  "numCommitsSeen": 30,
  "timeTaken": 1408,
  "changeHistory": [
    "0b6d22e69b9202b6b11ebc86a6dc343d1774451b",
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e"
  ],
  "changeHistoryShort": {
    "0b6d22e69b9202b6b11ebc86a6dc343d1774451b": "Ybodychange",
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0b6d22e69b9202b6b11ebc86a6dc343d1774451b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2029: New option \u0027switchBlockAsSingleDecisionPoint\u0027 for CyclomaticComplexityCheck.\n",
      "commitDate": "03/09/15 5:51 AM",
      "commitName": "0b6d22e69b9202b6b11ebc86a6dc343d1774451b",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "31/08/15 10:02 AM",
      "commitNameOld": "5ca96679525171c73fc4d5c257301f51d2100071",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 2.83,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n     public int[] getAcceptableTokens() {\n         return new int[] {\n             TokenTypes.CTOR_DEF,\n             TokenTypes.METHOD_DEF,\n             TokenTypes.INSTANCE_INIT,\n             TokenTypes.STATIC_INIT,\n             TokenTypes.LITERAL_WHILE,\n             TokenTypes.LITERAL_DO,\n             TokenTypes.LITERAL_FOR,\n             TokenTypes.LITERAL_IF,\n+            TokenTypes.LITERAL_SWITCH,\n             TokenTypes.LITERAL_CASE,\n             TokenTypes.LITERAL_CATCH,\n             TokenTypes.QUESTION,\n             TokenTypes.LAND,\n             TokenTypes.LOR,\n         };\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens() {\n        return new int[] {\n            TokenTypes.CTOR_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.INSTANCE_INIT,\n            TokenTypes.STATIC_INIT,\n            TokenTypes.LITERAL_WHILE,\n            TokenTypes.LITERAL_DO,\n            TokenTypes.LITERAL_FOR,\n            TokenTypes.LITERAL_IF,\n            TokenTypes.LITERAL_SWITCH,\n            TokenTypes.LITERAL_CASE,\n            TokenTypes.LITERAL_CATCH,\n            TokenTypes.QUESTION,\n            TokenTypes.LAND,\n            TokenTypes.LOR,\n        };\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java",
      "extendedDetails": {}
    },
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e": {
      "type": "Yintroduced",
      "commitMessage": "Acceptable tokens are specified for all checks, issue #342\n",
      "commitDate": "08/02/15 1:46 PM",
      "commitName": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthor": "alexkravin",
      "diff": "@@ -0,0 +1,18 @@\n+    public int[] getAcceptableTokens()\n+    {\n+        return new int[] {\n+            TokenTypes.CTOR_DEF,\n+            TokenTypes.METHOD_DEF,\n+            TokenTypes.INSTANCE_INIT,\n+            TokenTypes.STATIC_INIT,\n+            TokenTypes.LITERAL_WHILE,\n+            TokenTypes.LITERAL_DO,\n+            TokenTypes.LITERAL_FOR,\n+            TokenTypes.LITERAL_IF,\n+            TokenTypes.LITERAL_CASE,\n+            TokenTypes.LITERAL_CATCH,\n+            TokenTypes.QUESTION,\n+            TokenTypes.LAND,\n+            TokenTypes.LOR,\n+        };\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens()\n    {\n        return new int[] {\n            TokenTypes.CTOR_DEF,\n            TokenTypes.METHOD_DEF,\n            TokenTypes.INSTANCE_INIT,\n            TokenTypes.STATIC_INIT,\n            TokenTypes.LITERAL_WHILE,\n            TokenTypes.LITERAL_DO,\n            TokenTypes.LITERAL_FOR,\n            TokenTypes.LITERAL_IF,\n            TokenTypes.LITERAL_CASE,\n            TokenTypes.LITERAL_CATCH,\n            TokenTypes.QUESTION,\n            TokenTypes.LAND,\n            TokenTypes.LOR,\n        };\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/CyclomaticComplexityCheck.java"
    }
  }
}