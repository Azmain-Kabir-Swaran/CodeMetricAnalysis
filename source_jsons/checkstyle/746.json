{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SuppressFilterElement.java",
  "functionName": "accept",
  "functionId": "accept___event-AuditEvent",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressFilterElement.java",
  "functionStartLine": 183,
  "functionEndLine": 187,
  "numCommitsSeen": 80,
  "timeTaken": 3105,
  "changeHistory": [
    "9ae0a6fc384b47c761d3ccd992a7b6ef86f97012",
    "738b09af0b927e53865ac9f4049203e5f8a38310",
    "70fd1618553f9bff32c4cfc39754ea3c2e99fc88",
    "83b7bbec522c6235ab8858c2d2a3fcf124f49e57",
    "15818b826024e6fef6c21e2831ec246af0a8ba7a",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
    "68dbad577945e3b731064808b6766d69c73ab381",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
    "788b41973d5747c7b4699a853b62168cf0001df6",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "8d242382f8bb77488b6da23bdd0d2d61583703fc",
    "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364",
    "1e7d8eef0641edcf97316618c8fab40bd248133d"
  ],
  "changeHistoryShort": {
    "9ae0a6fc384b47c761d3ccd992a7b6ef86f97012": "Ybodychange",
    "738b09af0b927e53865ac9f4049203e5f8a38310": "Yfilerename",
    "70fd1618553f9bff32c4cfc39754ea3c2e99fc88": "Ybodychange",
    "83b7bbec522c6235ab8858c2d2a3fcf124f49e57": "Ybodychange",
    "15818b826024e6fef6c21e2831ec246af0a8ba7a": "Ybodychange",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": "Ybodychange",
    "68dbad577945e3b731064808b6766d69c73ab381": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": "Ybodychange",
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": "Ybodychange",
    "788b41973d5747c7b4699a853b62168cf0001df6": "Ybodychange",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ybodychange",
    "8d242382f8bb77488b6da23bdd0d2d61583703fc": "Ymultichange(Yparameterchange,Ybodychange)",
    "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364": "Ybodychange",
    "1e7d8eef0641edcf97316618c8fab40bd248133d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9ae0a6fc384b47c761d3ccd992a7b6ef86f97012": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4979: synchronize suppress and xpath filter element",
      "commitDate": "19/02/19 5:47 AM",
      "commitName": "9ae0a6fc384b47c761d3ccd992a7b6ef86f97012",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/02/19 2:12 PM",
      "commitNameOld": "738b09af0b927e53865ac9f4049203e5f8a38310",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     public boolean accept(AuditEvent event) {\n-        return isFileNameAndModuleNotMatching(event)\n+        return !isFileNameAndModuleNameMatching(event)\n                 || !isMessageNameMatching(event)\n-                || isLineAndColumnMatch(event);\n+                || !isLineAndColumnMatching(event);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        return !isFileNameAndModuleNameMatching(event)\n                || !isMessageNameMatching(event)\n                || !isLineAndColumnMatching(event);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressFilterElement.java",
      "extendedDetails": {}
    },
    "738b09af0b927e53865ac9f4049203e5f8a38310": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4978: renamed sub-children filters to filter element",
      "commitDate": "18/02/19 2:12 PM",
      "commitName": "738b09af0b927e53865ac9f4049203e5f8a38310",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/02/19 8:27 AM",
      "commitNameOld": "287e1edc41038cdcceb463b4bf77af363f73854e",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        return isFileNameAndModuleNotMatching(event)\n                || !isMessageNameMatching(event)\n                || isLineAndColumnMatch(event);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressFilterElement.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressFilterElement.java"
      }
    },
    "70fd1618553f9bff32c4cfc39754ea3c2e99fc88": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2804: allow suppression by message",
      "commitDate": "10/12/17 7:56 AM",
      "commitName": "70fd1618553f9bff32c4cfc39754ea3c2e99fc88",
      "commitAuthor": "rnveach",
      "commitDateOld": "29/07/17 6:32 PM",
      "commitNameOld": "f244f7f1e2fe49d2fcda9cd5c901d751769f73e8",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 133.6,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,5 @@\n     public boolean accept(AuditEvent event) {\n         return isFileNameAndModuleNotMatching(event)\n+                || !isMessageNameMatching(event)\n                 || isLineAndColumnMatch(event);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        return isFileNameAndModuleNotMatching(event)\n                || !isMessageNameMatching(event)\n                || isLineAndColumnMatch(event);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "83b7bbec522c6235ab8858c2d2a3fcf124f49e57": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in com.puppycrawl.tools.checkstyle.filters\n",
      "commitDate": "27/04/17 8:19 PM",
      "commitName": "83b7bbec522c6235ab8858c2d2a3fcf124f49e57",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 90.53,
      "commitsBetweenForRepo": 335,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,4 @@\n     public boolean accept(AuditEvent event) {\n-        // reject if file or check module mismatch?\n-        if (isFileNameAndModuleNotMatching(event)) {\n-            return true;\n-        }\n-\n-        // reject if no line/column matching\n-        return (lineFilter !\u003d null || columnFilter !\u003d null)\n-                \u0026\u0026 (lineFilter \u003d\u003d null || !lineFilter.accept(event.getLine()))\n-                \u0026\u0026 (columnFilter \u003d\u003d null || !columnFilter.accept(event.getColumn()));\n+        return isFileNameAndModuleNotMatching(event)\n+                || isLineAndColumnMatch(event);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        return isFileNameAndModuleNotMatching(event)\n                || isLineAndColumnMatch(event);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "15818b826024e6fef6c21e2831ec246af0a8ba7a": {
      "type": "Ybodychange",
      "commitMessage": "UTs coverage of SuppressElement is 100%. #1296\n",
      "commitDate": "12/07/15 9:12 PM",
      "commitName": "15818b826024e6fef6c21e2831ec246af0a8ba7a",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "07/07/15 7:40 PM",
      "commitNameOld": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.06,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public boolean accept(AuditEvent event) {\n-        // file and check match?\n-        if (isFileNameAndModuleMatching(event)) {\n+        // reject if file or check module mismatch?\n+        if (isFileNameAndModuleNotMatching(event)) {\n             return true;\n         }\n \n         // reject if no line/column matching\n         return (lineFilter !\u003d null || columnFilter !\u003d null)\n                 \u0026\u0026 (lineFilter \u003d\u003d null || !lineFilter.accept(event.getLine()))\n                 \u0026\u0026 (columnFilter \u003d\u003d null || !columnFilter.accept(event.getColumn()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        // reject if file or check module mismatch?\n        if (isFileNameAndModuleNotMatching(event)) {\n            return true;\n        }\n\n        // reject if no line/column matching\n        return (lineFilter !\u003d null || columnFilter !\u003d null)\n                \u0026\u0026 (lineFilter \u003d\u003d null || !lineFilter.accept(event.getLine()))\n                \u0026\u0026 (columnFilter \u003d\u003d null || !columnFilter.accept(event.getColumn()));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": {
      "type": "Ybodychange",
      "commitMessage": "Update Maven PMD Plugin to 3.5. #1300\n",
      "commitDate": "07/07/15 7:40 PM",
      "commitName": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "14/06/15 9:56 PM",
      "commitNameOld": "68dbad577945e3b731064808b6766d69c73ab381",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 22.91,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,11 @@\n     public boolean accept(AuditEvent event) {\n         // file and check match?\n         if (isFileNameAndModuleMatching(event)) {\n             return true;\n         }\n \n         // reject if no line/column matching\n-        if (lineFilter \u003d\u003d null \u0026\u0026 columnFilter \u003d\u003d null) {\n-            return false;\n-        }\n-\n-        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n-            return false;\n-        }\n-\n-        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n-            return false;\n-        }\n-        return true;\n+        return (lineFilter !\u003d null || columnFilter !\u003d null)\n+                \u0026\u0026 (lineFilter \u003d\u003d null || !lineFilter.accept(event.getLine()))\n+                \u0026\u0026 (columnFilter \u003d\u003d null || !columnFilter.accept(event.getColumn()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        // file and check match?\n        if (isFileNameAndModuleMatching(event)) {\n            return true;\n        }\n\n        // reject if no line/column matching\n        return (lineFilter !\u003d null || columnFilter !\u003d null)\n                \u0026\u0026 (lineFilter \u003d\u003d null || !lineFilter.accept(event.getLine()))\n                \u0026\u0026 (columnFilter \u003d\u003d null || !columnFilter.accept(event.getColumn()));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "68dbad577945e3b731064808b6766d69c73ab381": {
      "type": "Ybodychange",
      "commitMessage": "SuppressElement updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "14/06/15 9:56 PM",
      "commitName": "68dbad577945e3b731064808b6766d69c73ab381",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "23/05/15 11:58 AM",
      "commitNameOld": "ffd17e5ad649a03e4c9044005d2cb707be1261a1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 22.41,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,20 @@\n     public boolean accept(AuditEvent event) {\n         // file and check match?\n-        if (event.getFileName() \u003d\u003d null\n-                || !fileRegexp.matcher(event.getFileName()).find()\n-                || event.getLocalizedMessage() \u003d\u003d null\n-                || moduleId !\u003d null \u0026\u0026 !moduleId.equals(event\n-                        .getModuleId())\n-                || checkRegexp !\u003d null \u0026\u0026 !checkRegexp.matcher(\n-                        event.getSourceName()).find()) {\n+        if (isFileNameAndModuleMatching(event)) {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if (lineFilter \u003d\u003d null \u0026\u0026 columnFilter \u003d\u003d null) {\n             return false;\n         }\n \n         if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n             return false;\n         }\n \n         if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n             return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event) {\n        // file and check match?\n        if (isFileNameAndModuleMatching(event)) {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if (lineFilter \u003d\u003d null \u0026\u0026 columnFilter \u003d\u003d null) {\n            return false;\n        }\n\n        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n            return false;\n        }\n\n        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public boolean accept(AuditEvent event)\n     {\n         // file and check match?\n-        if ((event.getFileName() \u003d\u003d null)\n+        if (event.getFileName() \u003d\u003d null\n                 || !fileRegexp.matcher(event.getFileName()).find()\n-                || (event.getLocalizedMessage() \u003d\u003d null)\n-                || ((moduleId !\u003d null) \u0026\u0026 !moduleId.equals(event\n-                        .getModuleId()))\n-                || ((checkRegexp !\u003d null) \u0026\u0026 !checkRegexp.matcher(\n-                        event.getSourceName()).find()))\n+                || event.getLocalizedMessage() \u003d\u003d null\n+                || moduleId !\u003d null \u0026\u0026 !moduleId.equals(event\n+                        .getModuleId())\n+                || checkRegexp !\u003d null \u0026\u0026 !checkRegexp.matcher(\n+                        event.getSourceName()).find())\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n-        if ((lineFilter \u003d\u003d null) \u0026\u0026 (columnFilter \u003d\u003d null)) {\n+        if (lineFilter \u003d\u003d null \u0026\u0026 columnFilter \u003d\u003d null) {\n             return false;\n         }\n \n         if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n             return false;\n         }\n \n         if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n             return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent event)\n    {\n        // file and check match?\n        if (event.getFileName() \u003d\u003d null\n                || !fileRegexp.matcher(event.getFileName()).find()\n                || event.getLocalizedMessage() \u003d\u003d null\n                || moduleId !\u003d null \u0026\u0026 !moduleId.equals(event\n                        .getModuleId())\n                || checkRegexp !\u003d null \u0026\u0026 !checkRegexp.matcher(\n                        event.getSourceName()).find())\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if (lineFilter \u003d\u003d null \u0026\u0026 columnFilter \u003d\u003d null) {\n            return false;\n        }\n\n        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n            return false;\n        }\n\n        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, filters, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, filters, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.32,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public boolean accept(AuditEvent aEvent)\n+    public boolean accept(AuditEvent event)\n     {\n         // file and check match?\n-        if ((aEvent.getFileName() \u003d\u003d null)\n-                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n-                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n-                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n+        if ((event.getFileName() \u003d\u003d null)\n+                || !fileRegexp.matcher(event.getFileName()).find()\n+                || (event.getLocalizedMessage() \u003d\u003d null)\n+                || ((moduleId !\u003d null) \u0026\u0026 !moduleId.equals(event\n                         .getModuleId()))\n-                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n-                        aEvent.getSourceName()).find()))\n+                || ((checkRegexp !\u003d null) \u0026\u0026 !checkRegexp.matcher(\n+                        event.getSourceName()).find()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n-        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n+        if ((lineFilter \u003d\u003d null) \u0026\u0026 (columnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n-        if (mLineFilter !\u003d null \u0026\u0026 mLineFilter.accept(aEvent.getLine())) {\n+        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n             return false;\n         }\n \n-        if (mColumnFilter !\u003d null \u0026\u0026 mColumnFilter.accept(aEvent.getColumn())) {\n+        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n             return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean accept(AuditEvent event)\n    {\n        // file and check match?\n        if ((event.getFileName() \u003d\u003d null)\n                || !fileRegexp.matcher(event.getFileName()).find()\n                || (event.getLocalizedMessage() \u003d\u003d null)\n                || ((moduleId !\u003d null) \u0026\u0026 !moduleId.equals(event\n                        .getModuleId()))\n                || ((checkRegexp !\u003d null) \u0026\u0026 !checkRegexp.matcher(\n                        event.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((lineFilter \u003d\u003d null) \u0026\u0026 (columnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n            return false;\n        }\n\n        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
          "extendedDetails": {
            "oldValue": "[aEvent-AuditEvent]",
            "newValue": "[event-AuditEvent]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, filters, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "5cfe30d7ad6b98069f66ac2494afdcebcbcc8f1d",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.32,
          "commitsBetweenForRepo": 76,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,28 @@\n-    public boolean accept(AuditEvent aEvent)\n+    public boolean accept(AuditEvent event)\n     {\n         // file and check match?\n-        if ((aEvent.getFileName() \u003d\u003d null)\n-                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n-                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n-                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n+        if ((event.getFileName() \u003d\u003d null)\n+                || !fileRegexp.matcher(event.getFileName()).find()\n+                || (event.getLocalizedMessage() \u003d\u003d null)\n+                || ((moduleId !\u003d null) \u0026\u0026 !moduleId.equals(event\n                         .getModuleId()))\n-                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n-                        aEvent.getSourceName()).find()))\n+                || ((checkRegexp !\u003d null) \u0026\u0026 !checkRegexp.matcher(\n+                        event.getSourceName()).find()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n-        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n+        if ((lineFilter \u003d\u003d null) \u0026\u0026 (columnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n-        if (mLineFilter !\u003d null \u0026\u0026 mLineFilter.accept(aEvent.getLine())) {\n+        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n             return false;\n         }\n \n-        if (mColumnFilter !\u003d null \u0026\u0026 mColumnFilter.accept(aEvent.getColumn())) {\n+        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n             return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean accept(AuditEvent event)\n    {\n        // file and check match?\n        if ((event.getFileName() \u003d\u003d null)\n                || !fileRegexp.matcher(event.getFileName()).find()\n                || (event.getLocalizedMessage() \u003d\u003d null)\n                || ((moduleId !\u003d null) \u0026\u0026 !moduleId.equals(event\n                        .getModuleId()))\n                || ((checkRegexp !\u003d null) \u0026\u0026 !checkRegexp.matcher(\n                        event.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((lineFilter \u003d\u003d null) \u0026\u0026 (columnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        if (lineFilter !\u003d null \u0026\u0026 lineFilter.accept(event.getLine())) {\n            return false;\n        }\n\n        if (columnFilter !\u003d null \u0026\u0026 columnFilter.accept(event.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                        .getModuleId()))\n                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                        aEvent.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        if (mLineFilter !\u003d null \u0026\u0026 mLineFilter.accept(aEvent.getLine())) {\n            return false;\n        }\n\n        if (mColumnFilter !\u003d null \u0026\u0026 mColumnFilter.accept(aEvent.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java"
      }
    },
    "1d614c3a7ecf8a3ede4df8a50da46e71792d0025": {
      "type": "Ybodychange",
      "commitMessage": "poartial fix for #46 - Sonarqube found problems in Checkstyle\n",
      "commitDate": "05/12/13 9:12 AM",
      "commitName": "1d614c3a7ecf8a3ede4df8a50da46e71792d0025",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "06/10/13 11:31 PM",
      "commitNameOld": "07939ec7261d7e9e7c8d1492090d6d19d5f98887",
      "commitAuthorOld": "",
      "daysBetweenCommits": 59.45,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,28 @@\n     public boolean accept(AuditEvent aEvent)\n     {\n         // file and check match?\n         if ((aEvent.getFileName() \u003d\u003d null)\n                 || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                 || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                 || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                         .getModuleId()))\n                 || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                         aEvent.getSourceName()).find()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n-        // reject if line matches a line CSV value.\n-        if (mLineFilter !\u003d null) {\n-            if (mLineFilter.accept(aEvent.getLine())) {\n-                return false;\n-            }\n+        if (mLineFilter !\u003d null \u0026\u0026 mLineFilter.accept(aEvent.getLine())) {\n+            return false;\n         }\n \n-        // reject if column matches a column CSV value.\n-        if (mColumnFilter !\u003d null) {\n-            if (mColumnFilter.accept(aEvent.getColumn())) {\n-                return false;\n-            }\n+        if (mColumnFilter !\u003d null \u0026\u0026 mColumnFilter.accept(aEvent.getColumn())) {\n+            return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                        .getModuleId()))\n                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                        aEvent.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        if (mLineFilter !\u003d null \u0026\u0026 mLineFilter.accept(aEvent.getLine())) {\n            return false;\n        }\n\n        if (mColumnFilter !\u003d null \u0026\u0026 mColumnFilter.accept(aEvent.getColumn())) {\n            return false;\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "22705bd0d4d4867f646b8c3aca115d7b3cb9c022": {
      "type": "Ybodychange",
      "commitMessage": "Removal of explicit boxing.\n",
      "commitDate": "20/12/07 3:36 AM",
      "commitName": "22705bd0d4d4867f646b8c3aca115d7b3cb9c022",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "19/12/07 10:21 PM",
      "commitNameOld": "f38d8abd42c3e824635e542e6031b3da1997c02e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,34 @@\n     public boolean accept(AuditEvent aEvent)\n     {\n         // file and check match?\n         if ((aEvent.getFileName() \u003d\u003d null)\n                 || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                 || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                 || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                         .getModuleId()))\n                 || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                         aEvent.getSourceName()).find()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n         // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n-            final Integer line \u003d new Integer(aEvent.getLine());\n-            if (mLineFilter.accept(line)) {\n+            if (mLineFilter.accept(aEvent.getLine())) {\n                 return false;\n             }\n         }\n \n         // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n-            final Integer column \u003d new Integer(aEvent.getColumn());\n-            if (mColumnFilter.accept(column)) {\n+            if (mColumnFilter.accept(aEvent.getColumn())) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                        .getModuleId()))\n                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                        aEvent.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            if (mLineFilter.accept(aEvent.getLine())) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            if (mColumnFilter.accept(aEvent.getColumn())) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "788b41973d5747c7b4699a853b62168cf0001df6": {
      "type": "Ybodychange",
      "commitMessage": "Changes to make it possible to identify a module by an id, and then to\nsuppress messages based on the id. The motivation is to allow for finer\ngrained suppressions. For example, can enable multiple instances of the\nRegexp check, and suppress on the individual instance.\n",
      "commitDate": "29/12/05 4:35 AM",
      "commitName": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 58.72,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n     public boolean accept(AuditEvent aEvent)\n     {\n         // file and check match?\n         if ((aEvent.getFileName() \u003d\u003d null)\n-            || !mFileRegexp.matcher(aEvent.getFileName()).find()\n-            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n-            || !mCheckRegexp.matcher(aEvent.getSourceName()).find())\n+                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n+                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n+                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n+                        .getModuleId()))\n+                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n+                        aEvent.getSourceName()).find()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n         // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n             final Integer line \u003d new Integer(aEvent.getLine());\n             if (mLineFilter.accept(line)) {\n                 return false;\n             }\n         }\n \n         // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n             final Integer column \u003d new Integer(aEvent.getColumn());\n             if (mColumnFilter.accept(column)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n                || !mFileRegexp.matcher(aEvent.getFileName()).find()\n                || (aEvent.getLocalizedMessage() \u003d\u003d null)\n                || ((mModuleId !\u003d null) \u0026\u0026 !mModuleId.equals(aEvent\n                        .getModuleId()))\n                || ((mCheckRegexp !\u003d null) \u0026\u0026 !mCheckRegexp.matcher(\n                        aEvent.getSourceName()).find()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(aEvent.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(aEvent.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ybodychange",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": "11/05/05 9:48 AM",
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 122.25,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public boolean accept(AuditEvent aEvent)\n     {\n         // file and check match?\n         if ((aEvent.getFileName() \u003d\u003d null)\n-            || !mFileRegexp.match(aEvent.getFileName())\n+            || !mFileRegexp.matcher(aEvent.getFileName()).find()\n             || (aEvent.getLocalizedMessage() \u003d\u003d null)\n-            || !mCheckRegexp.match(aEvent.getSourceName()))\n+            || !mCheckRegexp.matcher(aEvent.getSourceName()).find())\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n         // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n             final Integer line \u003d new Integer(aEvent.getLine());\n             if (mLineFilter.accept(line)) {\n                 return false;\n             }\n         }\n \n         // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n             final Integer column \u003d new Integer(aEvent.getColumn());\n             if (mColumnFilter.accept(column)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n            || !mFileRegexp.matcher(aEvent.getFileName()).find()\n            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n            || !mCheckRegexp.matcher(aEvent.getSourceName()).find())\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(aEvent.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(aEvent.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "8d242382f8bb77488b6da23bdd0d2d61583703fc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Filter.accept() now takes AuditEvent, not an Object.\n",
      "commitDate": "06/11/03 8:49 PM",
      "commitName": "8d242382f8bb77488b6da23bdd0d2d61583703fc",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Filter.accept() now takes AuditEvent, not an Object.\n",
          "commitDate": "06/11/03 8:49 PM",
          "commitName": "8d242382f8bb77488b6da23bdd0d2d61583703fc",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "08/10/03 10:46 AM",
          "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 29.46,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,33 @@\n-    public boolean accept(Object aObject)\n+    public boolean accept(AuditEvent aEvent)\n     {\n-        if (!(aObject instanceof AuditEvent)) {\n-            return false;\n-        }\n-\n-        final AuditEvent event \u003d (AuditEvent) aObject;\n-\n         // file and check match?\n-        if ((event.getFileName() \u003d\u003d null)\n-            || !mFileRegexp.match(event.getFileName())\n-            || (event.getLocalizedMessage() \u003d\u003d null)\n-            || !mCheckRegexp.match(event.getSourceName()))\n+        if ((aEvent.getFileName() \u003d\u003d null)\n+            || !mFileRegexp.match(aEvent.getFileName())\n+            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n+            || !mCheckRegexp.match(aEvent.getSourceName()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n         // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n-            final Integer line \u003d new Integer(event.getLine());\n+            final Integer line \u003d new Integer(aEvent.getLine());\n             if (mLineFilter.accept(line)) {\n                 return false;\n             }\n         }\n \n         // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n-            final Integer column \u003d new Integer(event.getColumn());\n+            final Integer column \u003d new Integer(aEvent.getColumn());\n             if (mColumnFilter.accept(column)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n            || !mFileRegexp.match(aEvent.getFileName())\n            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n            || !mCheckRegexp.match(aEvent.getSourceName()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(aEvent.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(aEvent.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
          "extendedDetails": {
            "oldValue": "[aObject-Object]",
            "newValue": "[aEvent-AuditEvent]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Filter.accept() now takes AuditEvent, not an Object.\n",
          "commitDate": "06/11/03 8:49 PM",
          "commitName": "8d242382f8bb77488b6da23bdd0d2d61583703fc",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "08/10/03 10:46 AM",
          "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 29.46,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,39 +1,33 @@\n-    public boolean accept(Object aObject)\n+    public boolean accept(AuditEvent aEvent)\n     {\n-        if (!(aObject instanceof AuditEvent)) {\n-            return false;\n-        }\n-\n-        final AuditEvent event \u003d (AuditEvent) aObject;\n-\n         // file and check match?\n-        if ((event.getFileName() \u003d\u003d null)\n-            || !mFileRegexp.match(event.getFileName())\n-            || (event.getLocalizedMessage() \u003d\u003d null)\n-            || !mCheckRegexp.match(event.getSourceName()))\n+        if ((aEvent.getFileName() \u003d\u003d null)\n+            || !mFileRegexp.match(aEvent.getFileName())\n+            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n+            || !mCheckRegexp.match(aEvent.getSourceName()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n         // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n-            final Integer line \u003d new Integer(event.getLine());\n+            final Integer line \u003d new Integer(aEvent.getLine());\n             if (mLineFilter.accept(line)) {\n                 return false;\n             }\n         }\n \n         // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n-            final Integer column \u003d new Integer(event.getColumn());\n+            final Integer column \u003d new Integer(aEvent.getColumn());\n             if (mColumnFilter.accept(column)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public boolean accept(AuditEvent aEvent)\n    {\n        // file and check match?\n        if ((aEvent.getFileName() \u003d\u003d null)\n            || !mFileRegexp.match(aEvent.getFileName())\n            || (aEvent.getLocalizedMessage() \u003d\u003d null)\n            || !mCheckRegexp.match(aEvent.getSourceName()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(aEvent.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(aEvent.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
          "extendedDetails": {}
        }
      ]
    },
    "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364": {
      "type": "Ybodychange",
      "commitMessage": "correct comments.\nmore consistent code.\n",
      "commitDate": "15/07/03 4:39 PM",
      "commitName": "e9d1dff32e5233f1cc24c2e4a96c8ce2b9dd5364",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "15/07/03 1:18 PM",
      "commitNameOld": "1e7d8eef0641edcf97316618c8fab40bd248133d",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n     public boolean accept(Object aObject)\n     {\n         if (!(aObject instanceof AuditEvent)) {\n-            return true;\n+            return false;\n         }\n \n         final AuditEvent event \u003d (AuditEvent) aObject;\n \n         // file and check match?\n         if ((event.getFileName() \u003d\u003d null)\n             || !mFileRegexp.match(event.getFileName())\n             || (event.getLocalizedMessage() \u003d\u003d null)\n             || !mCheckRegexp.match(event.getSourceName()))\n         {\n             return true;\n         }\n \n         // reject if no line/column matching\n         if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n             return false;\n         }\n \n-        // reject line if it is accepted by the line CSV filter\n+        // reject if line matches a line CSV value.\n         if (mLineFilter !\u003d null) {\n             final Integer line \u003d new Integer(event.getLine());\n             if (mLineFilter.accept(line)) {\n                 return false;\n             }\n         }\n \n-        // reject if column accepted by the column CSV filter\n+        // reject if column matches a column CSV value.\n         if (mColumnFilter !\u003d null) {\n             final Integer column \u003d new Integer(event.getColumn());\n             if (mColumnFilter.accept(column)) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(Object aObject)\n    {\n        if (!(aObject instanceof AuditEvent)) {\n            return false;\n        }\n\n        final AuditEvent event \u003d (AuditEvent) aObject;\n\n        // file and check match?\n        if ((event.getFileName() \u003d\u003d null)\n            || !mFileRegexp.match(event.getFileName())\n            || (event.getLocalizedMessage() \u003d\u003d null)\n            || !mCheckRegexp.match(event.getSourceName()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject if line matches a line CSV value.\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(event.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column matches a column CSV value.\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(event.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java",
      "extendedDetails": {}
    },
    "1e7d8eef0641edcf97316618c8fab40bd248133d": {
      "type": "Yintroduced",
      "commitMessage": "Refactored Filters to the way Checkstyle uses them;\ni.e. a Filter accepts or rejects an Object,\nand a FilterSet, not a FilterChain, aggregates Filters.\n",
      "commitDate": "15/07/03 1:18 PM",
      "commitName": "1e7d8eef0641edcf97316618c8fab40bd248133d",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,39 @@\n+    public boolean accept(Object aObject)\n+    {\n+        if (!(aObject instanceof AuditEvent)) {\n+            return true;\n+        }\n+\n+        final AuditEvent event \u003d (AuditEvent) aObject;\n+\n+        // file and check match?\n+        if ((event.getFileName() \u003d\u003d null)\n+            || !mFileRegexp.match(event.getFileName())\n+            || (event.getLocalizedMessage() \u003d\u003d null)\n+            || !mCheckRegexp.match(event.getSourceName()))\n+        {\n+            return true;\n+        }\n+\n+        // reject if no line/column matching\n+        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n+            return false;\n+        }\n+\n+        // reject line if it is accepted by the line CSV filter\n+        if (mLineFilter !\u003d null) {\n+            final Integer line \u003d new Integer(event.getLine());\n+            if (mLineFilter.accept(line)) {\n+                return false;\n+            }\n+        }\n+\n+        // reject if column accepted by the column CSV filter\n+        if (mColumnFilter !\u003d null) {\n+            final Integer column \u003d new Integer(event.getColumn());\n+            if (mColumnFilter.accept(column)) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean accept(Object aObject)\n    {\n        if (!(aObject instanceof AuditEvent)) {\n            return true;\n        }\n\n        final AuditEvent event \u003d (AuditEvent) aObject;\n\n        // file and check match?\n        if ((event.getFileName() \u003d\u003d null)\n            || !mFileRegexp.match(event.getFileName())\n            || (event.getLocalizedMessage() \u003d\u003d null)\n            || !mCheckRegexp.match(event.getSourceName()))\n        {\n            return true;\n        }\n\n        // reject if no line/column matching\n        if ((mLineFilter \u003d\u003d null) \u0026\u0026 (mColumnFilter \u003d\u003d null)) {\n            return false;\n        }\n\n        // reject line if it is accepted by the line CSV filter\n        if (mLineFilter !\u003d null) {\n            final Integer line \u003d new Integer(event.getLine());\n            if (mLineFilter.accept(line)) {\n                return false;\n            }\n        }\n\n        // reject if column accepted by the column CSV filter\n        if (mColumnFilter !\u003d null) {\n            final Integer column \u003d new Integer(event.getColumn());\n            if (mColumnFilter.accept(column)) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/filters/SuppressElement.java"
    }
  }
}