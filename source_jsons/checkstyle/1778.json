{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FallThroughCheck.java",
  "functionName": "matchesComment",
  "functionId": "matchesComment___pattern-Pattern__line-String__lineNo-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
  "functionStartLine": 444,
  "functionEndLine": 453,
  "numCommitsSeen": 115,
  "timeTaken": 2200,
  "changeHistory": [
    "19fda27dc160fbc52674df2c0b833ff0e83ad402",
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "9d8134f4e8f2400519d4097a96a87c1b533dc9d2"
  ],
  "changeHistoryShort": {
    "19fda27dc160fbc52674df2c0b833ff0e83ad402": "Ybodychange",
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": "Yrename",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Yparameterchange",
    "9d8134f4e8f2400519d4097a96a87c1b533dc9d2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19fda27dc160fbc52674df2c0b833ff0e83ad402": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5008: increase coverage of pitest-checks-coding\n",
      "commitDate": "25/02/18 11:17 AM",
      "commitName": "19fda27dc160fbc52674df2c0b833ff0e83ad402",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "04/01/18 7:20 AM",
      "commitNameOld": "0847a10b9430d9fb0a3f44df03e891da906bea47",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 52.16,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private boolean matchesComment(Pattern pattern, String line, int lineNo) {\n         final Matcher matcher \u003d pattern.matcher(line);\n         boolean matches \u003d false;\n \n         if (matcher.find()) {\n-            // -1 because it returns the char position beyond the match\n             matches \u003d getFileContents().hasIntersectionWithComment(lineNo, matcher.start(),\n-                    lineNo, matcher.end() - 1);\n+                    lineNo, matcher.end());\n         }\n         return matches;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean matchesComment(Pattern pattern, String line, int lineNo) {\n        final Matcher matcher \u003d pattern.matcher(line);\n        boolean matches \u003d false;\n\n        if (matcher.find()) {\n            matches \u003d getFileContents().hasIntersectionWithComment(lineNo, matcher.start(),\n                    lineNo, matcher.end());\n        }\n        return matches;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": "19/08/17 10:29 PM",
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "18/05/17 12:43 PM",
      "commitNameOld": "7609e96cc998cca40b396eb3f2d7ae82f60fcce1",
      "commitAuthorOld": "Dmytro Kytsmen",
      "daysBetweenCommits": 93.41,
      "commitsBetweenForRepo": 397,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,11 @@\n-    private boolean matchesComment(Pattern pattern, String line, int lineNo\n-    ) {\n+    private boolean matchesComment(Pattern pattern, String line, int lineNo) {\n         final Matcher matcher \u003d pattern.matcher(line);\n+        boolean matches \u003d false;\n \n-        final boolean hit \u003d matcher.find();\n-\n-        if (hit) {\n-            final int startMatch \u003d matcher.start();\n+        if (matcher.find()) {\n             // -1 because it returns the char position beyond the match\n-            final int endMatch \u003d matcher.end() - 1;\n-            return getFileContents().hasIntersectionWithComment(lineNo,\n-                    startMatch, lineNo, endMatch);\n+            matches \u003d getFileContents().hasIntersectionWithComment(lineNo, matcher.start(),\n+                    lineNo, matcher.end() - 1);\n         }\n-        return false;\n+        return matches;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean matchesComment(Pattern pattern, String line, int lineNo) {\n        final Matcher matcher \u003d pattern.matcher(line);\n        boolean matches \u003d false;\n\n        if (matcher.find()) {\n            // -1 because it returns the char position beyond the match\n            matches \u003d getFileContents().hasIntersectionWithComment(lineNo, matcher.start(),\n                    lineNo, matcher.end() - 1);\n        }\n        return matches;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": {
      "type": "Yrename",
      "commitMessage": "Issue #1555: Rename methods returning boolean to use question word\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "28/08/15 10:50 PM",
      "commitName": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 11:09 PM",
      "commitNameOld": "4ee4d60e07a763be669173c3f45ed9b29eedca7c",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    private boolean commentMatch(Pattern pattern, String line, int lineNo\n+    private boolean matchesComment(Pattern pattern, String line, int lineNo\n     ) {\n         final Matcher matcher \u003d pattern.matcher(line);\n \n         final boolean hit \u003d matcher.find();\n \n         if (hit) {\n             final int startMatch \u003d matcher.start();\n             // -1 because it returns the char position beyond the match\n             final int endMatch \u003d matcher.end() - 1;\n             return getFileContents().hasIntersectionWithComment(lineNo,\n                     startMatch, lineNo, endMatch);\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean matchesComment(Pattern pattern, String line, int lineNo\n    ) {\n        final Matcher matcher \u003d pattern.matcher(line);\n\n        final boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(lineNo,\n                    startMatch, lineNo, endMatch);\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {
        "oldValue": "commentMatch",
        "newValue": "matchesComment"
      }
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "23/11/14 2:18 PM",
          "commitNameOld": "9b17ce22d251d3f549aa6147081c08cf0b6bb005",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 56.67,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n+    private boolean commentMatch(Pattern pattern, String line, int lineNo\n     )\n     {\n-        final Matcher matcher \u003d aPattern.matcher(aLine);\n+        final Matcher matcher \u003d pattern.matcher(line);\n \n         final boolean hit \u003d matcher.find();\n \n         if (hit) {\n             final int startMatch \u003d matcher.start();\n             // -1 because it returns the char position beyond the match\n             final int endMatch \u003d matcher.end() - 1;\n-            return getFileContents().hasIntersectionWithComment(aLineNo,\n-                    startMatch, aLineNo, endMatch);\n+            return getFileContents().hasIntersectionWithComment(lineNo,\n+                    startMatch, lineNo, endMatch);\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean commentMatch(Pattern pattern, String line, int lineNo\n    )\n    {\n        final Matcher matcher \u003d pattern.matcher(line);\n\n        final boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(lineNo,\n                    startMatch, lineNo, endMatch);\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
          "extendedDetails": {
            "oldValue": "[aPattern-Pattern, aLine-String, aLineNo-int]",
            "newValue": "[pattern-Pattern, line-String, lineNo-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "23/11/14 2:18 PM",
          "commitNameOld": "9b17ce22d251d3f549aa6147081c08cf0b6bb005",
          "commitAuthorOld": "Ilja Dubinin",
          "daysBetweenCommits": 56.67,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n+    private boolean commentMatch(Pattern pattern, String line, int lineNo\n     )\n     {\n-        final Matcher matcher \u003d aPattern.matcher(aLine);\n+        final Matcher matcher \u003d pattern.matcher(line);\n \n         final boolean hit \u003d matcher.find();\n \n         if (hit) {\n             final int startMatch \u003d matcher.start();\n             // -1 because it returns the char position beyond the match\n             final int endMatch \u003d matcher.end() - 1;\n-            return getFileContents().hasIntersectionWithComment(aLineNo,\n-                    startMatch, aLineNo, endMatch);\n+            return getFileContents().hasIntersectionWithComment(lineNo,\n+                    startMatch, lineNo, endMatch);\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean commentMatch(Pattern pattern, String line, int lineNo\n    )\n    {\n        final Matcher matcher \u003d pattern.matcher(line);\n\n        final boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(lineNo,\n                    startMatch, lineNo, endMatch);\n        }\n        return false;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n    )\n    {\n        final Matcher matcher \u003d aPattern.matcher(aLine);\n\n        final boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(aLineNo,\n                    startMatch, aLineNo, endMatch);\n        }\n        return false;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java"
      }
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n     )\n     {\n-        Matcher matcher \u003d aPattern.matcher(aLine);\n+        final Matcher matcher \u003d aPattern.matcher(aLine);\n \n-        boolean hit \u003d matcher.find();\n+        final boolean hit \u003d matcher.find();\n \n         if (hit) {\n             final int startMatch \u003d matcher.start();\n             // -1 because it returns the char position beyond the match\n             final int endMatch \u003d matcher.end() - 1;\n             return getFileContents().hasIntersectionWithComment(aLineNo,\n                     startMatch, aLineNo, endMatch);\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n    )\n    {\n        final Matcher matcher \u003d aPattern.matcher(aLine);\n\n        final boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(aLineNo,\n                    startMatch, aLineNo, endMatch);\n        }\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {}
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Yparameterchange",
      "commitMessage": "Code cleanup\n",
      "commitDate": "21/01/06 4:43 AM",
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/12/05 4:35 AM",
      "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 23.01,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n-    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo,\n-                                 int aStartColNo)\n+    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n+    )\n     {\n         Matcher matcher \u003d aPattern.matcher(aLine);\n \n         boolean hit \u003d matcher.find();\n \n         if (hit) {\n             final int startMatch \u003d matcher.start();\n             // -1 because it returns the char position beyond the match\n             final int endMatch \u003d matcher.end() - 1;\n             return getFileContents().hasIntersectionWithComment(aLineNo,\n                     startMatch, aLineNo, endMatch);\n         }\n         return false;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo\n    )\n    {\n        Matcher matcher \u003d aPattern.matcher(aLine);\n\n        boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(aLineNo,\n                    startMatch, aLineNo, endMatch);\n        }\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java",
      "extendedDetails": {
        "oldValue": "[aPattern-Pattern, aLine-String, aLineNo-int, aStartColNo-int]",
        "newValue": "[aPattern-Pattern, aLine-String, aLineNo-int]"
      }
    },
    "9d8134f4e8f2400519d4097a96a87c1b533dc9d2": {
      "type": "Yintroduced",
      "commitMessage": "Applied patch 1348873 which implements rfe 1345691\n",
      "commitDate": "10/11/05 5:38 AM",
      "commitName": "9d8134f4e8f2400519d4097a96a87c1b533dc9d2",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,16 @@\n+    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo,\n+                                 int aStartColNo)\n+    {\n+        Matcher matcher \u003d aPattern.matcher(aLine);\n+\n+        boolean hit \u003d matcher.find();\n+\n+        if (hit) {\n+            final int startMatch \u003d matcher.start();\n+            // -1 because it returns the char position beyond the match\n+            final int endMatch \u003d matcher.end() - 1;\n+            return getFileContents().hasIntersectionWithComment(aLineNo,\n+                    startMatch, aLineNo, endMatch);\n+        }\n+        return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean commentMatch(Pattern aPattern, String aLine, int aLineNo,\n                                 int aStartColNo)\n    {\n        Matcher matcher \u003d aPattern.matcher(aLine);\n\n        boolean hit \u003d matcher.find();\n\n        if (hit) {\n            final int startMatch \u003d matcher.start();\n            // -1 because it returns the char position beyond the match\n            final int endMatch \u003d matcher.end() - 1;\n            return getFileContents().hasIntersectionWithComment(aLineNo,\n                    startMatch, aLineNo, endMatch);\n        }\n        return false;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/FallThroughCheck.java"
    }
  }
}