{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RightCurlyCheck.java",
  "functionName": "getDetailsForTryCatchFinally",
  "functionId": "getDetailsForTryCatchFinally___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
  "functionStartLine": 548,
  "functionEndLine": 577,
  "numCommitsSeen": 94,
  "timeTaken": 1608,
  "changeHistory": [
    "856a7ed4f96b61165a0114314b351367e0ccae29",
    "e47095a84a5a5034213948e31ca53d422fa50828",
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630",
    "301cfffe5fa625de3f8ea717fe7bf380410c6381",
    "59aa0915eae4629a5787edba5eb487389e27cf72"
  ],
  "changeHistoryShort": {
    "856a7ed4f96b61165a0114314b351367e0ccae29": "Ybodychange",
    "e47095a84a5a5034213948e31ca53d422fa50828": "Ybodychange",
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630": "Ybodychange",
    "301cfffe5fa625de3f8ea717fe7bf380410c6381": "Ybodychange",
    "59aa0915eae4629a5787edba5eb487389e27cf72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "856a7ed4f96b61165a0114314b351367e0ccae29": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6367: resolved pitest for blocks package",
      "commitDate": "01/10/19 1:20 PM",
      "commitName": "856a7ed4f96b61165a0114314b351367e0ccae29",
      "commitAuthor": "rnveach",
      "commitDateOld": "16/06/19 11:16 AM",
      "commitNameOld": "f6918d804237558beed5ab9464081ef76e3d2cff",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 107.09,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,30 @@\n         private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n-            final boolean shouldCheckLastRcurly;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                 if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                     lcurly \u003d ast.getFirstChild().getNextSibling();\n                 }\n                 else {\n                     lcurly \u003d ast.getFirstChild();\n                 }\n                 nextToken \u003d lcurly.getNextSibling();\n-\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                }\n-                else {\n-                    shouldCheckLastRcurly \u003d false;\n-                }\n-            }\n-            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n-                nextToken \u003d ast.getNextSibling();\n-                lcurly \u003d ast.getLastChild();\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                }\n-                else {\n-                    shouldCheckLastRcurly \u003d false;\n-                }\n             }\n             else {\n+                nextToken \u003d ast.getNextSibling();\n+                lcurly \u003d ast.getLastChild();\n+            }\n+\n+            final boolean shouldCheckLastRcurly;\n+            if (nextToken \u003d\u003d null) {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n-                lcurly \u003d ast.getFirstChild();\n             }\n+            else {\n+                shouldCheckLastRcurly \u003d false;\n+            }\n+\n             final DetailAST rcurly \u003d lcurly.getLastChild();\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                    lcurly \u003d ast.getFirstChild().getNextSibling();\n                }\n                else {\n                    lcurly \u003d ast.getFirstChild();\n                }\n                nextToken \u003d lcurly.getNextSibling();\n            }\n            else {\n                nextToken \u003d ast.getNextSibling();\n                lcurly \u003d ast.getLastChild();\n            }\n\n            final boolean shouldCheckLastRcurly;\n            if (nextToken \u003d\u003d null) {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n            }\n            else {\n                shouldCheckLastRcurly \u003d false;\n            }\n\n            final DetailAST rcurly \u003d lcurly.getLastChild();\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "e47095a84a5a5034213948e31ca53d422fa50828": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6466: do not complain in same-mode about constructs that are not multi-part\n",
      "commitDate": "17/04/19 5:05 AM",
      "commitName": "e47095a84a5a5034213948e31ca53d422fa50828",
      "commitAuthor": "Bj√∂rn Kautler",
      "commitDateOld": "05/04/19 6:40 AM",
      "commitNameOld": "2be5521faf9a5457eacc8fa9b4bf0eb787911adb",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 11.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,41 @@\n         private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n-            boolean shouldCheckLastRcurly \u003d false;\n-            final DetailAST rcurly;\n+            final boolean shouldCheckLastRcurly;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                 if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                     lcurly \u003d ast.getFirstChild().getNextSibling();\n                 }\n                 else {\n                     lcurly \u003d ast.getFirstChild();\n                 }\n                 nextToken \u003d lcurly.getNextSibling();\n-                rcurly \u003d lcurly.getLastChild();\n \n                 if (nextToken \u003d\u003d null) {\n                     shouldCheckLastRcurly \u003d true;\n                     nextToken \u003d getNextToken(ast);\n                 }\n+                else {\n+                    shouldCheckLastRcurly \u003d false;\n+                }\n             }\n             else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                 nextToken \u003d ast.getNextSibling();\n                 lcurly \u003d ast.getLastChild();\n-                rcurly \u003d lcurly.getLastChild();\n                 if (nextToken \u003d\u003d null) {\n                     shouldCheckLastRcurly \u003d true;\n                     nextToken \u003d getNextToken(ast);\n                 }\n+                else {\n+                    shouldCheckLastRcurly \u003d false;\n+                }\n             }\n             else {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n                 lcurly \u003d ast.getFirstChild();\n-                rcurly \u003d lcurly.getLastChild();\n             }\n+            final DetailAST rcurly \u003d lcurly.getLastChild();\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n            final boolean shouldCheckLastRcurly;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                    lcurly \u003d ast.getFirstChild().getNextSibling();\n                }\n                else {\n                    lcurly \u003d ast.getFirstChild();\n                }\n                nextToken \u003d lcurly.getNextSibling();\n\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n                else {\n                    shouldCheckLastRcurly \u003d false;\n                }\n            }\n            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                nextToken \u003d ast.getNextSibling();\n                lcurly \u003d ast.getLastChild();\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n                else {\n                    shouldCheckLastRcurly \u003d false;\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n            }\n            final DetailAST rcurly \u003d lcurly.getLastChild();\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: revert of fixes for RightCurly to let merge fix for #4022 first\n",
      "commitDate": "10/01/19 12:17 PM",
      "commitName": "3316f0b1a179c3ecd2ca3c21d9a81129282ba630",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "03/01/19 10:40 PM",
      "commitNameOld": "301cfffe5fa625de3f8ea717fe7bf380410c6381",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,38 @@\n         private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n+            boolean shouldCheckLastRcurly \u003d false;\n+            final DetailAST rcurly;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                 if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                     lcurly \u003d ast.getFirstChild().getNextSibling();\n                 }\n                 else {\n                     lcurly \u003d ast.getFirstChild();\n                 }\n                 nextToken \u003d lcurly.getNextSibling();\n+                rcurly \u003d lcurly.getLastChild();\n+\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                }\n             }\n-            else {\n+            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                 nextToken \u003d ast.getNextSibling();\n                 lcurly \u003d ast.getLastChild();\n+                rcurly \u003d lcurly.getLastChild();\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                }\n             }\n-\n-            final DetailAST rcurly \u003d lcurly.getLastChild();\n-            boolean shouldCheckLastRcurly \u003d false;\n-            if (nextToken \u003d\u003d null) {\n+            else {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n+                lcurly \u003d ast.getFirstChild();\n+                rcurly \u003d lcurly.getLastChild();\n             }\n-\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            final DetailAST rcurly;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                    lcurly \u003d ast.getFirstChild().getNextSibling();\n                }\n                else {\n                    lcurly \u003d ast.getFirstChild();\n                }\n                nextToken \u003d lcurly.getNextSibling();\n                rcurly \u003d lcurly.getLastChild();\n\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n            }\n            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                nextToken \u003d ast.getNextSibling();\n                lcurly \u003d ast.getLastChild();\n                rcurly \u003d lcurly.getLastChild();\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "301cfffe5fa625de3f8ea717fe7bf380410c6381": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for blocks",
      "commitDate": "03/01/19 10:40 PM",
      "commitName": "301cfffe5fa625de3f8ea717fe7bf380410c6381",
      "commitAuthor": "rnveach",
      "commitDateOld": "19/12/18 8:36 AM",
      "commitNameOld": "257681b015217bf0e151c147e08e544d6881fba7",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.59,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,27 @@\n         private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n-            boolean shouldCheckLastRcurly \u003d false;\n-            final DetailAST rcurly;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                 if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                     lcurly \u003d ast.getFirstChild().getNextSibling();\n                 }\n                 else {\n                     lcurly \u003d ast.getFirstChild();\n                 }\n                 nextToken \u003d lcurly.getNextSibling();\n-                rcurly \u003d lcurly.getLastChild();\n-\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                }\n-            }\n-            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n-                nextToken \u003d ast.getNextSibling();\n-                lcurly \u003d ast.getLastChild();\n-                rcurly \u003d lcurly.getLastChild();\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                }\n             }\n             else {\n+                nextToken \u003d ast.getNextSibling();\n+                lcurly \u003d ast.getLastChild();\n+            }\n+\n+            final DetailAST rcurly \u003d lcurly.getLastChild();\n+            boolean shouldCheckLastRcurly \u003d false;\n+            if (nextToken \u003d\u003d null) {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n-                lcurly \u003d ast.getFirstChild();\n-                rcurly \u003d lcurly.getLastChild();\n             }\n+\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                    lcurly \u003d ast.getFirstChild().getNextSibling();\n                }\n                else {\n                    lcurly \u003d ast.getFirstChild();\n                }\n                nextToken \u003d lcurly.getNextSibling();\n            }\n            else {\n                nextToken \u003d ast.getNextSibling();\n                lcurly \u003d ast.getLastChild();\n            }\n\n            final DetailAST rcurly \u003d lcurly.getLastChild();\n            boolean shouldCheckLastRcurly \u003d false;\n            if (nextToken \u003d\u003d null) {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n            }\n\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "59aa0915eae4629a5787edba5eb487389e27cf72": {
      "type": "Yintroduced",
      "commitMessage": "minor: Refactored getDetails method of RightCurlyCheck\n",
      "commitDate": "02/05/17 6:40 AM",
      "commitName": "59aa0915eae4629a5787edba5eb487389e27cf72",
      "commitAuthor": "Piyush Sharma",
      "diff": "@@ -0,0 +1,39 @@\n+        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n+            boolean shouldCheckLastRcurly \u003d false;\n+            final DetailAST rcurly;\n+            final DetailAST lcurly;\n+            DetailAST nextToken;\n+            final int tokenType \u003d ast.getType();\n+            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n+                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n+                    lcurly \u003d ast.getFirstChild().getNextSibling();\n+                }\n+                else {\n+                    lcurly \u003d ast.getFirstChild();\n+                }\n+                nextToken \u003d lcurly.getNextSibling();\n+                rcurly \u003d lcurly.getLastChild();\n+\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                }\n+            }\n+            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+                nextToken \u003d ast.getNextSibling();\n+                lcurly \u003d ast.getLastChild();\n+                rcurly \u003d lcurly.getLastChild();\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                }\n+\n+            }\n+            else {\n+                shouldCheckLastRcurly \u003d true;\n+                nextToken \u003d getNextToken(ast);\n+                lcurly \u003d ast.getFirstChild();\n+                rcurly \u003d lcurly.getLastChild();\n+            }\n+            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForTryCatchFinally(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            final DetailAST rcurly;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_TRY) {\n                if (ast.getFirstChild().getType() \u003d\u003d TokenTypes.RESOURCE_SPECIFICATION) {\n                    lcurly \u003d ast.getFirstChild().getNextSibling();\n                }\n                else {\n                    lcurly \u003d ast.getFirstChild();\n                }\n                nextToken \u003d lcurly.getNextSibling();\n                rcurly \u003d lcurly.getLastChild();\n\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n            }\n            else if (tokenType \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                nextToken \u003d ast.getNextSibling();\n                lcurly \u003d ast.getLastChild();\n                rcurly \u003d lcurly.getLastChild();\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                }\n\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java"
    }
  }
}