{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommentsIndentationCheck.java",
  "functionName": "isOnPreviousLineIgnoringComments",
  "functionId": "isOnPreviousLineIgnoringComments___currentStatement-DetailAST__checkedStatement-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
  "functionStartLine": 895,
  "functionEndLine": 911,
  "numCommitsSeen": 52,
  "timeTaken": 936,
  "changeHistory": [
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6"
  ],
  "changeHistoryShort": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
      "commitDate": "30/05/16 6:08 AM",
      "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,17 @@\n+    private boolean isOnPreviousLineIgnoringComments(DetailAST currentStatement,\n+                                                     DetailAST checkedStatement) {\n+        DetailAST nextToken \u003d getNextToken(checkedStatement);\n+        int distanceAim \u003d 1;\n+        if (nextToken !\u003d null \u0026\u0026 isComment(nextToken)) {\n+            distanceAim +\u003d countEmptyLines(checkedStatement, currentStatement);\n+        }\n+\n+        while (nextToken !\u003d null \u0026\u0026 nextToken !\u003d currentStatement \u0026\u0026 isComment(nextToken)) {\n+            if (nextToken.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n+                distanceAim +\u003d nextToken.getLastChild().getLineNo() - nextToken.getLineNo();\n+            }\n+            distanceAim++;\n+            nextToken \u003d nextToken.getNextSibling();\n+        }\n+        return currentStatement.getLineNo() - checkedStatement.getLineNo() \u003d\u003d distanceAim;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isOnPreviousLineIgnoringComments(DetailAST currentStatement,\n                                                     DetailAST checkedStatement) {\n        DetailAST nextToken \u003d getNextToken(checkedStatement);\n        int distanceAim \u003d 1;\n        if (nextToken !\u003d null \u0026\u0026 isComment(nextToken)) {\n            distanceAim +\u003d countEmptyLines(checkedStatement, currentStatement);\n        }\n\n        while (nextToken !\u003d null \u0026\u0026 nextToken !\u003d currentStatement \u0026\u0026 isComment(nextToken)) {\n            if (nextToken.getType() \u003d\u003d TokenTypes.BLOCK_COMMENT_BEGIN) {\n                distanceAim +\u003d nextToken.getLastChild().getLineNo() - nextToken.getLineNo();\n            }\n            distanceAim++;\n            nextToken \u003d nextToken.getNextSibling();\n        }\n        return currentStatement.getLineNo() - checkedStatement.getLineNo() \u003d\u003d distanceAim;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java"
    }
  }
}