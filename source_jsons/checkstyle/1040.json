{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NPathComplexityCheck.java",
  "functionName": "visitUnitaryOperator",
  "functionId": "visitUnitaryOperator___ast-DetailAST__basicBranchingFactor-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java",
  "functionStartLine": 423,
  "functionEndLine": 431,
  "numCommitsSeen": 36,
  "timeTaken": 956,
  "changeHistory": [
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128",
    "e810918205ff8e99a5cd692d6a99b899f5337eef"
  ],
  "changeHistoryShort": {
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128": "Ybodychange",
    "e810918205ff8e99a5cd692d6a99b899f5337eef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6578: Enable PMD rule LinguisticNaming\n",
      "commitDate": "16/03/19 10:46 PM",
      "commitName": "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128",
      "commitAuthor": "pbludov",
      "commitDateOld": "13/03/19 11:08 PM",
      "commitNameOld": "aef7c727ba4a3872e7094f287dc9a506ec172592",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private void visitUnitaryOperator(DetailAST ast, int basicBranchingFactor) {\n         final boolean isAfter \u003d processingTokenEnd.isAfter(ast);\n-        isAfterValues.push(isAfter);\n+        afterValues.push(isAfter);\n         if (!isAfter) {\n             processingTokenEnd.setToken(getLastToken(ast));\n             final int expressionValue \u003d basicBranchingFactor + countConditionalOperators(ast);\n             pushValue(expressionValue);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitUnitaryOperator(DetailAST ast, int basicBranchingFactor) {\n        final boolean isAfter \u003d processingTokenEnd.isAfter(ast);\n        afterValues.push(isAfter);\n        if (!isAfter) {\n            processingTokenEnd.setToken(getLastToken(ast));\n            final int expressionValue \u003d basicBranchingFactor + countConditionalOperators(ast);\n            pushValue(expressionValue);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java",
      "extendedDetails": {}
    },
    "e810918205ff8e99a5cd692d6a99b899f5337eef": {
      "type": "Yintroduced",
      "commitMessage": "Issue #56: fix NPathComplexityCheck\n",
      "commitDate": "28/04/17 9:38 AM",
      "commitName": "e810918205ff8e99a5cd692d6a99b899f5337eef",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,9 @@\n+    private void visitUnitaryOperator(DetailAST ast, int basicBranchingFactor) {\n+        final boolean isAfter \u003d processingTokenEnd.isAfter(ast);\n+        isAfterValues.push(isAfter);\n+        if (!isAfter) {\n+            processingTokenEnd.setToken(getLastToken(ast));\n+            final int expressionValue \u003d basicBranchingFactor + countConditionalOperators(ast);\n+            pushValue(expressionValue);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitUnitaryOperator(DetailAST ast, int basicBranchingFactor) {\n        final boolean isAfter \u003d processingTokenEnd.isAfter(ast);\n        isAfterValues.push(isAfter);\n        if (!isAfter) {\n            processingTokenEnd.setToken(getLastToken(ast));\n            final int expressionValue \u003d basicBranchingFactor + countConditionalOperators(ast);\n            pushValue(expressionValue);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java"
    }
  }
}