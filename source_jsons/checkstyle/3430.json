{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocUtil.java",
  "functionName": "getTokenId",
  "functionId": "getTokenId___name-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
  "functionStartLine": 340,
  "functionEndLine": 346,
  "numCommitsSeen": 81,
  "timeTaken": 2064,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5",
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0": "Ybodychange",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": "Yfilerename",
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static int getTokenId(String name) {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + name);\n        }\n        return id;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java"
      }
    },
    "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0": {
      "type": "Ybodychange",
      "commitMessage": "Fix typos in utlis package. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "27/08/15 10:26 PM",
      "commitName": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 6:30 AM",
      "commitNameOld": "41740f2d68baba3ae185e8303038f841e7d6fc5a",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.66,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public static int getTokenId(String name) {\n         final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n         if (id \u003d\u003d null) {\n-            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n+            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + name);\n         }\n         return id;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static int getTokenId(String name) {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + name);\n        }\n        return id;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {}
    },
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": {
      "type": "Yfilerename",
      "commitMessage": "Utils classes have been moved to utils package. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "26/08/15 6:08 PM",
      "commitNameOld": "f6113bb56d695719a8803274effb3596cb82120f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static int getTokenId(String name) {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n        }\n        return id;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java"
      }
    },
    "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary unboxing. #1538\n",
      "commitDate": "02/08/15 6:48 PM",
      "commitName": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:41 PM",
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public static int getTokenId(String name) {\n         final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n         if (id \u003d\u003d null) {\n             throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n         }\n-        return id.intValue();\n+        return id;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static int getTokenId(String name) {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n        }\n        return id;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/11/14 7:05 AM",
          "commitNameOld": "7b6785343e306845f432154a1a5026ad25306226",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 68.97,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public static int getTokenId(String aName)\n+    public static int getTokenId(String name)\n     {\n-        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(aName);\n+        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n         if (id \u003d\u003d null) {\n-            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + aName);\n+            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n         }\n         return id.intValue();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getTokenId(String name)\n    {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n        }\n        return id.intValue();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {
            "oldValue": "[aName-String]",
            "newValue": "[name-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/11/14 7:05 AM",
          "commitNameOld": "7b6785343e306845f432154a1a5026ad25306226",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 68.97,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public static int getTokenId(String aName)\n+    public static int getTokenId(String name)\n     {\n-        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(aName);\n+        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n         if (id \u003d\u003d null) {\n-            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + aName);\n+            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n         }\n         return id.intValue();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static int getTokenId(String name)\n    {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(name);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javdoc token name. Given name \" + name);\n        }\n        return id.intValue();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of Javadoc comments. Extended API to create Javadoc Checks.\n",
      "commitDate": "19/10/14 1:32 PM",
      "commitName": "ff12c1b012a1b18da8a1cd2101efd0173c612534",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,8 @@\n+    public static int getTokenId(String aName)\n+    {\n+        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(aName);\n+        if (id \u003d\u003d null) {\n+            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + aName);\n+        }\n+        return id.intValue();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static int getTokenId(String aName)\n    {\n        final Integer id \u003d TOKEN_NAME_TO_VALUE.get(aName);\n        if (id \u003d\u003d null) {\n            throw new IllegalArgumentException(\"Unknown javadoc token name. Given name \" + aName);\n        }\n        return id.intValue();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java"
    }
  }
}