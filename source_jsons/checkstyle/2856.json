{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HeaderCheck.java",
  "functionName": "processFiltered",
  "functionId": "processFiltered___file-File__fileText-FileText",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
  "functionStartLine": 178,
  "functionEndLine": 190,
  "numCommitsSeen": 68,
  "timeTaken": 1978,
  "changeHistory": [
    "0c2abadbb7f2887f31011157d62edf40bea131c3",
    "82979737c4201b4913ea30b9c9431e71783d1c02",
    "23a1b6253f6296c1a3888361953da47f2808ca3d",
    "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7",
    "29027109bf962f47b6a6000fdca69b5679ce4b43",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bf16d371dab210594755d04afc4697269ed088c0"
  ],
  "changeHistoryShort": {
    "0c2abadbb7f2887f31011157d62edf40bea131c3": "Ybodychange",
    "82979737c4201b4913ea30b9c9431e71783d1c02": "Ymultichange(Yparameterchange,Ybodychange)",
    "23a1b6253f6296c1a3888361953da47f2808ca3d": "Ybodychange",
    "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7": "Ybodychange",
    "29027109bf962f47b6a6000fdca69b5679ce4b43": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bf16d371dab210594755d04afc4697269ed088c0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c2abadbb7f2887f31011157d62edf40bea131c3": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4641: Avoid usage of getLines method from FileText\n",
      "commitDate": "10/07/17 12:57 PM",
      "commitName": "0c2abadbb7f2887f31011157d62edf40bea131c3",
      "commitAuthor": "Timur",
      "commitDateOld": "06/07/17 1:22 PM",
      "commitNameOld": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 3.98,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     protected void processFiltered(File file, FileText fileText) {\n-        final List\u003cString\u003e lines \u003d fileText.getLines();\n-        if (getHeaderLines().size() \u003e lines.size()) {\n+        if (getHeaderLines().size() \u003e fileText.size()) {\n             log(1, MSG_MISSING);\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n-                if (!isMatch(i, lines.get(i))) {\n+                if (!isMatch(i, fileText.get(i))) {\n                     log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                     break;\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, FileText fileText) {\n        if (getHeaderLines().size() \u003e fileText.size()) {\n            log(1, MSG_MISSING);\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, fileText.get(i))) {\n                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                    break;\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {}
    },
    "82979737c4201b4913ea30b9c9431e71783d1c02": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3034: FileText should not extends AbstractList\n",
      "commitDate": "06/07/17 1:22 PM",
      "commitName": "82979737c4201b4913ea30b9c9431e71783d1c02",
      "commitAuthor": "Timur",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3034: FileText should not extends AbstractList\n",
          "commitDate": "06/07/17 1:22 PM",
          "commitName": "82979737c4201b4913ea30b9c9431e71783d1c02",
          "commitAuthor": "Timur",
          "commitDateOld": "12/06/17 10:11 AM",
          "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
          "commitAuthorOld": "sagar-shah94",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 134,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-    protected void processFiltered(File file, List\u003cString\u003e lines) {\n+    protected void processFiltered(File file, FileText fileText) {\n+        final List\u003cString\u003e lines \u003d fileText.getLines();\n         if (getHeaderLines().size() \u003e lines.size()) {\n             log(1, MSG_MISSING);\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                 if (!isMatch(i, lines.get(i))) {\n                     log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                     break;\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, FileText fileText) {\n        final List\u003cString\u003e lines \u003d fileText.getLines();\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, MSG_MISSING);\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                    break;\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[file-File, lines-List\u003cString\u003e]",
            "newValue": "[file-File, fileText-FileText]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3034: FileText should not extends AbstractList\n",
          "commitDate": "06/07/17 1:22 PM",
          "commitName": "82979737c4201b4913ea30b9c9431e71783d1c02",
          "commitAuthor": "Timur",
          "commitDateOld": "12/06/17 10:11 AM",
          "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
          "commitAuthorOld": "sagar-shah94",
          "daysBetweenCommits": 24.13,
          "commitsBetweenForRepo": 134,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-    protected void processFiltered(File file, List\u003cString\u003e lines) {\n+    protected void processFiltered(File file, FileText fileText) {\n+        final List\u003cString\u003e lines \u003d fileText.getLines();\n         if (getHeaderLines().size() \u003e lines.size()) {\n             log(1, MSG_MISSING);\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                 if (!isMatch(i, lines.get(i))) {\n                     log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                     break;\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, FileText fileText) {\n        final List\u003cString\u003e lines \u003d fileText.getLines();\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, MSG_MISSING);\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                    break;\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "23a1b6253f6296c1a3888361953da47f2808ca3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: Fix for \u0027Don\u0027t use trailing comments\u0027 (partial)\n",
      "commitDate": "21/08/15 5:05 AM",
      "commitName": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "18/08/15 1:25 AM",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 3.15,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines) {\n         if (getHeaderLines().size() \u003e lines.size()) {\n             log(1, MSG_MISSING);\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                 if (!isMatch(i, lines.get(i))) {\n                     log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n-                    break; // stop checking\n+                    break;\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines) {\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, MSG_MISSING);\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                    break;\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {}
    },
    "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, header package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "5d698f4a58b66958b13cb04735fefa3f4fa4b9e7",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n         if (getHeaderLines().size() \u003e lines.size()) {\n-            log(1, \"header.missing\");\n+            log(1, MSG_MISSING);\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                 if (!isMatch(i, lines.get(i))) {\n-                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n+                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                     break; // stop checking\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, MSG_MISSING);\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, MSG_MISMATCH, getHeaderLines().get(i));\n                    break; // stop checking\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {}
    },
    "29027109bf962f47b6a6000fdca69b5679ce4b43": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, header, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n+    protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n-        if (getHeaderLines().size() \u003e aLines.size()) {\n+        if (getHeaderLines().size() \u003e lines.size()) {\n             log(1, \"header.missing\");\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n-                if (!isMatch(i, aLines.get(i))) {\n+                if (!isMatch(i, lines.get(i))) {\n                     log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                     break; // stop checking\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, \"header.missing\");\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                    break; // stop checking\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aFile-File, aLines-List\u003cString\u003e]",
            "newValue": "[file-File, lines-List\u003cString\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n+    protected void processFiltered(File file, List\u003cString\u003e lines)\n     {\n-        if (getHeaderLines().size() \u003e aLines.size()) {\n+        if (getHeaderLines().size() \u003e lines.size()) {\n             log(1, \"header.missing\");\n         }\n         else {\n             for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n-                if (!isMatch(i, aLines.get(i))) {\n+                if (!isMatch(i, lines.get(i))) {\n                     log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                     break; // stop checking\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected void processFiltered(File file, List\u003cString\u003e lines)\n    {\n        if (getHeaderLines().size() \u003e lines.size()) {\n            log(1, \"header.missing\");\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, lines.get(i))) {\n                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                    break; // stop checking\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        if (getHeaderLines().size() \u003e aLines.size()) {\n            log(1, \"header.missing\");\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, aLines.get(i))) {\n                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                    break; // stop checking\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java"
      }
    },
    "bf16d371dab210594755d04afc4697269ed088c0": {
      "type": "Yintroduced",
      "commitMessage": "converting the header checks to be fileset based.\n",
      "commitDate": "16/11/08 2:30 AM",
      "commitName": "bf16d371dab210594755d04afc4697269ed088c0",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,14 @@\n+    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n+    {\n+        if (getHeaderLines().size() \u003e aLines.size()) {\n+            log(1, \"header.missing\");\n+        }\n+        else {\n+            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n+                if (!isMatch(i, aLines.get(i))) {\n+                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n+                    break; // stop checking\n+                }\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void processFiltered(File aFile, List\u003cString\u003e aLines)\n    {\n        if (getHeaderLines().size() \u003e aLines.size()) {\n            log(1, \"header.missing\");\n        }\n        else {\n            for (int i \u003d 0; i \u003c getHeaderLines().size(); i++) {\n                if (!isMatch(i, aLines.get(i))) {\n                    log(i + 1, \"header.mismatch\", getHeaderLines().get(i));\n                    break; // stop checking\n                }\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/HeaderCheck.java"
    }
  }
}