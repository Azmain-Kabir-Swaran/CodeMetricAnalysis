{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfigurationLoader.java",
  "functionName": "startElement",
  "functionId": "startElement___uri-String__localName-String__qName-String__attributes-Attributes",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
  "functionStartLine": 496,
  "functionEndLine": 553,
  "numCommitsSeen": 190,
  "timeTaken": 3522,
  "changeHistory": [
    "036582d728d2e2bb37f360bb3a74f899f04d587d",
    "ce21086e087661553f3a774c38362327ee88996a",
    "b43c32ad0a3674fcda782d2e28d0975b72382470",
    "ba16b1537f68ce77dd09a25b85a11c1e7ecffe75",
    "71c16c55c33b368bf373c60a6daafdd69b0b1abc",
    "dba746ba9387bee04ed362254abb5d9ed35169cd",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec",
    "17754d363645285e49bf4323a1af5762af47a8ea",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
    "92707fb90a88929a19ac67a440f9376c3a3f321c",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72",
    "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
    "4564aecb5c1d694591feef433ce067d74e36d823",
    "f8459eb6742402c5c33f7b80e4c5844998a258ac",
    "a0054eede02fe6109973ab4b94f3657d1ed187a3",
    "686afc521a11088c57632352eb6fd60a682b03d6",
    "42bf43038671a4c65a47fcd9931cc2db35dbeaf7",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
    "303352fe2d7b467edce0bf02064e0a519a139250",
    "cf7e4c19e3bcb4a3cdf686529e62f2b468fb9837",
    "2debda611fe487021711aa4acce56651799a778f",
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
    "5b1564d2820b0575baabc7e57c10a116683a607f"
  ],
  "changeHistoryShort": {
    "036582d728d2e2bb37f360bb3a74f899f04d587d": "Ybodychange",
    "ce21086e087661553f3a774c38362327ee88996a": "Ybodychange",
    "b43c32ad0a3674fcda782d2e28d0975b72382470": "Ymultichange(Yparameterchange,Ybodychange)",
    "ba16b1537f68ce77dd09a25b85a11c1e7ecffe75": "Ybodychange",
    "71c16c55c33b368bf373c60a6daafdd69b0b1abc": "Ybodychange",
    "dba746ba9387bee04ed362254abb5d9ed35169cd": "Ybodychange",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec": "Ybodychange",
    "17754d363645285e49bf4323a1af5762af47a8ea": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98": "Ybodychange",
    "92707fb90a88929a19ac67a440f9376c3a3f321c": "Ybodychange",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": "Ybodychange",
    "7166b6a1d07452b72cf6f62ae2afe9846b96ad91": "Ybodychange",
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea": "Ybodychange",
    "4564aecb5c1d694591feef433ce067d74e36d823": "Ybodychange",
    "f8459eb6742402c5c33f7b80e4c5844998a258ac": "Ybodychange",
    "a0054eede02fe6109973ab4b94f3657d1ed187a3": "Ybodychange",
    "686afc521a11088c57632352eb6fd60a682b03d6": "Ybodychange",
    "42bf43038671a4c65a47fcd9931cc2db35dbeaf7": "Ybodychange",
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": "Ymultichange(Yexceptionschange,Ybodychange)",
    "303352fe2d7b467edce0bf02064e0a519a139250": "Ybodychange",
    "cf7e4c19e3bcb4a3cdf686529e62f2b468fb9837": "Ybodychange",
    "2debda611fe487021711aa4acce56651799a778f": "Ybodychange",
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5": "Ybodychange",
    "5b1564d2820b0575baabc7e57c10a116683a607f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "036582d728d2e2bb37f360bb3a74f899f04d587d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4370: Add multi thread mode to checkstyle launcher\n",
      "commitDate": "02/07/17 7:43 PM",
      "commitName": "036582d728d2e2bb37f360bb3a74f899f04d587d",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": "26/02/17 7:25 PM",
      "commitNameOld": "ce21086e087661553f3a774c38362327ee88996a",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 125.97,
      "commitsBetweenForRepo": 452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,58 @@\n         public void startElement(String uri,\n                                  String localName,\n                                  String qName,\n                                  Attributes attributes)\n                 throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d attributes.getValue(NAME);\n+                final String originalName \u003d attributes.getValue(NAME);\n+                final String name \u003d threadModeSettings.resolveName(originalName);\n                 final DefaultConfiguration conf \u003d\n-                    new DefaultConfiguration(name);\n+                    new DefaultConfiguration(name, threadModeSettings);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(attributes.getValue(VALUE),\n                         overridePropsResolver, attributes.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     // -@cs[IllegalInstantiation] SAXException is in the overridden method signature\n                     throw new SAXException(ex);\n                 }\n                 final String name \u003d attributes.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d attributes.getValue(KEY);\n                 final String value \u003d attributes.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n             else {\n                 if (!qName.equals(METADATA)) {\n                     throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String uri,\n                                 String localName,\n                                 String qName,\n                                 Attributes attributes)\n                throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String originalName \u003d attributes.getValue(NAME);\n                final String name \u003d threadModeSettings.resolveName(originalName);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name, threadModeSettings);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(attributes.getValue(VALUE),\n                        overridePropsResolver, attributes.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    // -@cs[IllegalInstantiation] SAXException is in the overridden method signature\n                    throw new SAXException(ex);\n                }\n                final String name \u003d attributes.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d attributes.getValue(KEY);\n                final String value \u003d attributes.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "ce21086e087661553f3a774c38362327ee88996a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3763: Try to avoid non-jdk runtime exceptions in code\n",
      "commitDate": "26/02/17 7:25 PM",
      "commitName": "ce21086e087661553f3a774c38362327ee88996a",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 30.54,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,57 @@\n         public void startElement(String uri,\n                                  String localName,\n                                  String qName,\n                                  Attributes attributes)\n                 throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d attributes.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(attributes.getValue(VALUE),\n                         overridePropsResolver, attributes.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n+                    // -@cs[IllegalInstantiation] SAXException is in the overridden method signature\n                     throw new SAXException(ex);\n                 }\n                 final String name \u003d attributes.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d attributes.getValue(KEY);\n                 final String value \u003d attributes.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n             else {\n                 if (!qName.equals(METADATA)) {\n                     throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String uri,\n                                 String localName,\n                                 String qName,\n                                 Attributes attributes)\n                throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d attributes.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(attributes.getValue(VALUE),\n                        overridePropsResolver, attributes.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    // -@cs[IllegalInstantiation] SAXException is in the overridden method signature\n                    throw new SAXException(ex);\n                }\n                final String name \u003d attributes.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d attributes.getValue(KEY);\n                final String value \u003d attributes.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "b43c32ad0a3674fcda782d2e28d0975b72382470": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Use same parameter names in overridden methods. #1555\n\nFixes some `ParameterNameDiffersFromOverriddenParameter` inspection violations.\n\nDescription:\n\u003eReports parameters that have different names from the corresponding parameters in the methods they override. While legal in Java, such inconsistent names may be confusing, and lessen the documentation benefits of good naming practices.\n",
      "commitDate": "25/08/15 3:48 AM",
      "commitName": "b43c32ad0a3674fcda782d2e28d0975b72382470",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Use same parameter names in overridden methods. #1555\n\nFixes some `ParameterNameDiffersFromOverriddenParameter` inspection violations.\n\nDescription:\n\u003eReports parameters that have different names from the corresponding parameters in the methods they override. While legal in Java, such inconsistent names may be confusing, and lessen the documentation benefits of good naming practices.\n",
          "commitDate": "25/08/15 3:48 AM",
          "commitName": "b43c32ad0a3674fcda782d2e28d0975b72382470",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "22/08/15 4:33 AM",
          "commitNameOld": "8abfa48f2eb5edaf3f5a2cc2350e4e3c232f4152",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 2.97,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,56 @@\n-        public void startElement(String namespaceURI,\n+        public void startElement(String uri,\n                                  String localName,\n                                  String qName,\n-                                 Attributes atts)\n+                                 Attributes attributes)\n             throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d atts.getValue(NAME);\n+                final String name \u003d attributes.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n-                    value \u003d replaceProperties(atts.getValue(VALUE),\n-                        overridePropsResolver, atts.getValue(DEFAULT));\n+                    value \u003d replaceProperties(attributes.getValue(VALUE),\n+                        overridePropsResolver, attributes.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex);\n                 }\n-                final String name \u003d atts.getValue(NAME);\n+                final String name \u003d attributes.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n-                final String key \u003d atts.getValue(KEY);\n-                final String value \u003d atts.getValue(VALUE);\n+                final String key \u003d attributes.getValue(KEY);\n+                final String value \u003d attributes.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n             else {\n                 if (!qName.equals(METADATA)) {\n                     throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                 }\n             }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public void startElement(String uri,\n                                 String localName,\n                                 String qName,\n                                 Attributes attributes)\n            throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d attributes.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(attributes.getValue(VALUE),\n                        overridePropsResolver, attributes.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex);\n                }\n                final String name \u003d attributes.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d attributes.getValue(KEY);\n                final String value \u003d attributes.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[namespaceURI-String, localName-String, qName-String, atts-Attributes]",
            "newValue": "[uri-String, localName-String, qName-String, attributes-Attributes]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Use same parameter names in overridden methods. #1555\n\nFixes some `ParameterNameDiffersFromOverriddenParameter` inspection violations.\n\nDescription:\n\u003eReports parameters that have different names from the corresponding parameters in the methods they override. While legal in Java, such inconsistent names may be confusing, and lessen the documentation benefits of good naming practices.\n",
          "commitDate": "25/08/15 3:48 AM",
          "commitName": "b43c32ad0a3674fcda782d2e28d0975b72382470",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "22/08/15 4:33 AM",
          "commitNameOld": "8abfa48f2eb5edaf3f5a2cc2350e4e3c232f4152",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 2.97,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,56 @@\n-        public void startElement(String namespaceURI,\n+        public void startElement(String uri,\n                                  String localName,\n                                  String qName,\n-                                 Attributes atts)\n+                                 Attributes attributes)\n             throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d atts.getValue(NAME);\n+                final String name \u003d attributes.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n-                    value \u003d replaceProperties(atts.getValue(VALUE),\n-                        overridePropsResolver, atts.getValue(DEFAULT));\n+                    value \u003d replaceProperties(attributes.getValue(VALUE),\n+                        overridePropsResolver, attributes.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex);\n                 }\n-                final String name \u003d atts.getValue(NAME);\n+                final String name \u003d attributes.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n-                final String key \u003d atts.getValue(KEY);\n-                final String value \u003d atts.getValue(VALUE);\n+                final String key \u003d attributes.getValue(KEY);\n+                final String value \u003d attributes.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n             else {\n                 if (!qName.equals(METADATA)) {\n                     throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                 }\n             }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public void startElement(String uri,\n                                 String localName,\n                                 String qName,\n                                 Attributes attributes)\n            throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d attributes.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(attributes.getValue(VALUE),\n                        overridePropsResolver, attributes.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex);\n                }\n                final String name \u003d attributes.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d attributes.getValue(KEY);\n                final String value \u003d attributes.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "ba16b1537f68ce77dd09a25b85a11c1e7ecffe75": {
      "type": "Ybodychange",
      "commitMessage": "Do not ignore stacktrace of previous exception. #1555\n\nFixes `ExceptionFromCatchWhichDoesntWrap` inspection violation.\n\nDescription:\n\u003eReports exceptions constructed and thrown from inside catch blocks, which do not \"wrap\" the caught exception. It is considered good practice when throwing an exception in response to an exception to wrap the initial exception, so that valuable context information such as stack frames and line numbers are not lost.\n",
      "commitDate": "08/08/15 7:07 PM",
      "commitName": "ba16b1537f68ce77dd09a25b85a11c1e7ecffe75",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/08/15 6:46 PM",
      "commitNameOld": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n         public void startElement(String namespaceURI,\n                                  String localName,\n                                  String qName,\n                                  Attributes atts)\n             throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(atts.getValue(VALUE),\n                         overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n-                    throw new SAXException(ex.getMessage());\n+                    throw new SAXException(ex);\n                 }\n                 final String name \u003d atts.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d atts.getValue(KEY);\n                 final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n             else {\n                 if (!qName.equals(METADATA)) {\n                     throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex);\n                }\n                final String name \u003d atts.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "71c16c55c33b368bf373c60a6daafdd69b0b1abc": {
      "type": "Ybodychange",
      "commitMessage": "100% code coverage for ConfigurationLoader. #1294\n",
      "commitDate": "30/07/15 10:52 PM",
      "commitName": "71c16c55c33b368bf373c60a6daafdd69b0b1abc",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 8.0,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,56 @@\n         public void startElement(String namespaceURI,\n                                  String localName,\n                                  String qName,\n                                  Attributes atts)\n             throws SAXException {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract value and name\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(atts.getValue(VALUE),\n                         overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n                 final String name \u003d atts.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d atts.getValue(KEY);\n                 final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n+            else {\n+                if (!qName.equals(METADATA)) {\n+                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n+                }\n+            }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n                final String name \u003d atts.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n            else {\n                if (!qName.equals(METADATA)) {\n                    throw new IllegalStateException(\"Unknown name:\" + qName + \".\");\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "dba746ba9387bee04ed362254abb5d9ed35169cd": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from PrematureDeclaration rule. #948\n",
      "commitDate": "13/05/15 9:58 AM",
      "commitName": "dba746ba9387bee04ed362254abb5d9ed35169cd",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/05/15 11:27 PM",
      "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 10.44,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,52 +1,52 @@\n         public void startElement(String namespaceURI,\n                                  String localName,\n                                  String qName,\n                                  Attributes atts)\n             throws SAXException\n         {\n             if (qName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n-                //extract name and value\n-                final String name \u003d atts.getValue(NAME);\n+                //extract value and name\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(atts.getValue(VALUE),\n                         overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n+                final String name \u003d atts.getValue(NAME);\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d atts.getValue(KEY);\n                 final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException\n        {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract value and name\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n                final String name \u003d atts.getValue(NAME);\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": {
      "type": "Ybodychange",
      "commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
      "commitDate": "23/04/15 10:38 AM",
      "commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "22/04/15 1:37 PM",
      "commitNameOld": "a733182557aa0dc686be57f7f5a7009a7015274b",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,52 @@\n         public void startElement(String namespaceURI,\n                                  String localName,\n                                  String qName,\n                                  Attributes atts)\n             throws SAXException\n         {\n-            // TODO: debug logging for support purposes\n             if (qName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (configuration \u003d\u003d null) {\n                     configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         configStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 configStack.push(conf);\n             }\n             else if (qName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d atts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(atts.getValue(VALUE),\n                         overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     configStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d atts.getValue(KEY);\n                 final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException\n        {\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d atts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,53 @@\n-        public void startElement(String aNamespaceURI,\n-                                 String aLocalName,\n-                                 String aQName,\n-                                 Attributes aAtts)\n+        public void startElement(String namespaceURI,\n+                                 String localName,\n+                                 String qName,\n+                                 Attributes atts)\n             throws SAXException\n         {\n             // TODO: debug logging for support purposes\n-            if (aQName.equals(MODULE)) {\n+            if (qName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d aAtts.getValue(NAME);\n+                final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n-                if (mConfiguration \u003d\u003d null) {\n-                    mConfiguration \u003d conf;\n+                if (configuration \u003d\u003d null) {\n+                    configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n-                if (!mConfigStack.isEmpty()) {\n+                if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n-                        mConfigStack.peek();\n+                        configStack.peek();\n                     top.addChild(conf);\n                 }\n \n-                mConfigStack.push(conf);\n+                configStack.push(conf);\n             }\n-            else if (aQName.equals(PROPERTY)) {\n+            else if (qName.equals(PROPERTY)) {\n                 //extract name and value\n-                final String name \u003d aAtts.getValue(NAME);\n+                final String name \u003d atts.getValue(NAME);\n                 final String value;\n                 try {\n-                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n-                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n+                    value \u003d replaceProperties(atts.getValue(VALUE),\n+                        overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n-                    mConfigStack.peek();\n+                    configStack.peek();\n                 top.addAttribute(name, value);\n             }\n-            else if (aQName.equals(MESSAGE)) {\n+            else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n-                final String key \u003d aAtts.getValue(KEY);\n-                final String value \u003d aAtts.getValue(VALUE);\n+                final String key \u003d atts.getValue(KEY);\n+                final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n-                final DefaultConfiguration top \u003d mConfigStack.peek();\n+                final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException\n        {\n            // TODO: debug logging for support purposes\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d atts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aNamespaceURI-String, aLocalName-String, aQName-String, aAtts-Attributes]",
            "newValue": "[namespaceURI-String, localName-String, qName-String, atts-Attributes]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,53 +1,53 @@\n-        public void startElement(String aNamespaceURI,\n-                                 String aLocalName,\n-                                 String aQName,\n-                                 Attributes aAtts)\n+        public void startElement(String namespaceURI,\n+                                 String localName,\n+                                 String qName,\n+                                 Attributes atts)\n             throws SAXException\n         {\n             // TODO: debug logging for support purposes\n-            if (aQName.equals(MODULE)) {\n+            if (qName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d aAtts.getValue(NAME);\n+                final String name \u003d atts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n-                if (mConfiguration \u003d\u003d null) {\n-                    mConfiguration \u003d conf;\n+                if (configuration \u003d\u003d null) {\n+                    configuration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n-                if (!mConfigStack.isEmpty()) {\n+                if (!configStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n-                        mConfigStack.peek();\n+                        configStack.peek();\n                     top.addChild(conf);\n                 }\n \n-                mConfigStack.push(conf);\n+                configStack.push(conf);\n             }\n-            else if (aQName.equals(PROPERTY)) {\n+            else if (qName.equals(PROPERTY)) {\n                 //extract name and value\n-                final String name \u003d aAtts.getValue(NAME);\n+                final String name \u003d atts.getValue(NAME);\n                 final String value;\n                 try {\n-                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n-                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n+                    value \u003d replaceProperties(atts.getValue(VALUE),\n+                        overridePropsResolver, atts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n-                    mConfigStack.peek();\n+                    configStack.peek();\n                 top.addAttribute(name, value);\n             }\n-            else if (aQName.equals(MESSAGE)) {\n+            else if (qName.equals(MESSAGE)) {\n                 //extract key and value\n-                final String key \u003d aAtts.getValue(KEY);\n-                final String value \u003d aAtts.getValue(VALUE);\n+                final String key \u003d atts.getValue(KEY);\n+                final String value \u003d atts.getValue(VALUE);\n \n                 //add to messages of configuration\n-                final DefaultConfiguration top \u003d mConfigStack.peek();\n+                final DefaultConfiguration top \u003d configStack.peek();\n                 top.addMessage(key, value);\n             }\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public void startElement(String namespaceURI,\n                                 String localName,\n                                 String qName,\n                                 Attributes atts)\n            throws SAXException\n        {\n            // TODO: debug logging for support purposes\n            if (qName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d atts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (configuration \u003d\u003d null) {\n                    configuration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!configStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        configStack.peek();\n                    top.addChild(conf);\n                }\n\n                configStack.push(conf);\n            }\n            else if (qName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d atts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(atts.getValue(VALUE),\n                        overridePropsResolver, atts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    configStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (qName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d atts.getValue(KEY);\n                final String value \u003d atts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d configStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support purposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (aQName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d aAtts.getValue(KEY);\n                final String value \u003d aAtts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d mConfigStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java"
      }
    },
    "be8127a604bfdd91ff7cd32a1f825c9851d791ec": {
      "type": "Ybodychange",
      "commitMessage": "Enhanced the ANT task, Command Line and Suppression Filter to be able to load\ntheir configuration file from either the filesystem or the classpath as a\nresource. Thanks to Tracy Snell for patch #3307526.\n",
      "commitDate": "11/07/11 3:58 AM",
      "commitName": "be8127a604bfdd91ff7cd32a1f825c9851d791ec",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/09/10 8:36 PM",
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 284.31,
      "commitsBetweenForRepo": 78,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,53 +1,53 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n             throws SAXException\n         {\n-            // TODO: debug logging for support puposes\n+            // TODO: debug logging for support purposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n                         mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else if (aQName.equals(MESSAGE)) {\n                 //extract key and value\n                 final String key \u003d aAtts.getValue(KEY);\n                 final String value \u003d aAtts.getValue(VALUE);\n \n                 //add to messages of configuration\n                 final DefaultConfiguration top \u003d mConfigStack.peek();\n                 top.addMessage(key, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support purposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (aQName.equals(MESSAGE)) {\n                //extract key and value\n                final String key \u003d aAtts.getValue(KEY);\n                final String value \u003d aAtts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d mConfigStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "17754d363645285e49bf4323a1af5762af47a8ea": {
      "type": "Ybodychange",
      "commitMessage": "snapshot of changes - need to refactor\n",
      "commitDate": "15/07/08 3:27 PM",
      "commitName": "17754d363645285e49bf4323a1af5762af47a8ea",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "24/04/08 1:09 AM",
      "commitNameOld": "06e8a4eaa00e548f52b2483864a31ba9defd0989",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 82.6,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,55 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n             throws SAXException\n         {\n             // TODO: debug logging for support puposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n                         mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n+            else if (aQName.equals(MESSAGE)) {\n+\n+                //extract key and value\n+                final String key \u003d aAtts.getValue(KEY);\n+                final String value \u003d aAtts.getValue(VALUE);\n+\n+                //add to messages of configuration\n+                final DefaultConfiguration top \u003d\n+                    mConfigStack.peek();\n+                top.addMessage(key, value);\n+            }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n            else if (aQName.equals(MESSAGE)) {\n\n                //extract key and value\n                final String key \u003d aAtts.getValue(KEY);\n                final String value \u003d aAtts.getValue(VALUE);\n\n                //add to messages of configuration\n                final DefaultConfiguration top \u003d\n                    mConfigStack.peek();\n                top.addMessage(key, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "15/12/07 12:14 AM",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n             throws SAXException\n         {\n             // TODO: debug logging for support puposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n-                        (DefaultConfiguration) mConfigStack.peek();\n+                        mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n                         mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                 }\n                 catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n-                    (DefaultConfiguration) mConfigStack.peek();\n+                    mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "09/03/06 3:48 AM",
      "commitNameOld": "d9ef0ac5eed2084dc0298ec981f6fc04cf628e85",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 119.66,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n             throws SAXException\n         {\n             // TODO: debug logging for support puposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n                         mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                 }\n-                catch (CheckstyleException ex) {\n+                catch (final CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     (DefaultConfiguration) mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (final CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98": {
      "type": "Ybodychange",
      "commitMessage": "added default attribute to configuration \u003cproperty\u003e tags,\nsee recent \"property resolution changes\" discussion on checkstyle-devel list\n",
      "commitDate": "28/02/04 11:45 PM",
      "commitName": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "26/01/04 2:39 AM",
      "commitNameOld": "433209f256f2f87310b4546cb08218dbdb110556",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 33.88,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n             throws SAXException\n         {\n             // TODO: debug logging for support puposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n                 final DefaultConfiguration conf \u003d\n                     new DefaultConfiguration(name);\n \n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n-                        mOverridePropsResolver);\n+                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                 }\n                 catch (CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     (DefaultConfiguration) mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n            throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d\n                    new DefaultConfiguration(name);\n\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver, aAtts.getValue(DEFAULT));\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "92707fb90a88929a19ac67a440f9376c3a3f321c": {
      "type": "Ybodychange",
      "commitMessage": "Just being picky\n",
      "commitDate": "27/03/03 1:38 AM",
      "commitName": "92707fb90a88929a19ac67a440f9376c3a3f321c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "23/02/03 4:29 AM",
      "commitNameOld": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 31.88,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n                 throws SAXException\n         {\n             // TODO: debug logging for support puposes\n             if (aQName.equals(MODULE)) {\n                 //create configuration\n                 final String name \u003d aAtts.getValue(NAME);\n-                DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n+                final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                             (DefaultConfiguration) mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n             else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n                 final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n                     value \u003d replaceProperties(aAtts.getValue(VALUE),\n                         mOverridePropsResolver);\n                 }\n                 catch (CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     (DefaultConfiguration) mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n                throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                            (DefaultConfiguration) mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver);\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": {
      "type": "Ybodychange",
      "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
      "commitDate": "23/02/03 4:29 AM",
      "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "23/02/03 12:20 AM",
      "commitNameOld": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n         public void startElement(String aNamespaceURI,\n                                  String aLocalName,\n                                  String aQName,\n                                  Attributes aAtts)\n                 throws SAXException\n         {\n             // TODO: debug logging for support puposes\n-            if (aQName.equals(\"module\")) {\n+            if (aQName.equals(MODULE)) {\n                 //create configuration\n-                final String name \u003d aAtts.getValue(\"name\");\n+                final String name \u003d aAtts.getValue(NAME);\n                 DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n                 if (mConfiguration \u003d\u003d null) {\n                     mConfiguration \u003d conf;\n                 }\n \n                 //add configuration to it\u0027s parent\n                 if (!mConfigStack.isEmpty()) {\n                     final DefaultConfiguration top \u003d\n                             (DefaultConfiguration) mConfigStack.peek();\n                     top.addChild(conf);\n                 }\n \n                 mConfigStack.push(conf);\n             }\n-            else if (aQName.equals(\"property\")) {\n+            else if (aQName.equals(PROPERTY)) {\n                 //extract name and value\n-                final String name \u003d aAtts.getValue(\"name\");\n+                final String name \u003d aAtts.getValue(NAME);\n                 final String value;\n                 try {\n-                    value \u003d replaceProperties(aAtts.getValue(\"value\"),\n-                        mOverrideProps);\n+                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n+                        mOverridePropsResolver);\n                 }\n                 catch (CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n \n                 //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n                     (DefaultConfiguration) mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n                throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(MODULE)) {\n                //create configuration\n                final String name \u003d aAtts.getValue(NAME);\n                DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                            (DefaultConfiguration) mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(PROPERTY)) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(NAME);\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(VALUE),\n                        mOverridePropsResolver);\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "7166b6a1d07452b72cf6f62ae2afe9846b96ad91": {
      "type": "Ybodychange",
      "commitMessage": "made ConfigurationLoader final\n\nmoved SaxHandler methods to inner class so they do not appear in the public API\n",
      "commitDate": "23/02/03 12:20 AM",
      "commitName": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "22/02/03 11:32 PM",
      "commitNameOld": "17cfbb2442d878ae6e229f809b8b2c479b9dfdcb",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n-    public void startElement(String aNamespaceURI,\n-                             String aLocalName,\n-                             String aQName,\n-                             Attributes aAtts)\n-            throws SAXException\n-    {\n-        // TODO: debug logging for support puposes\n-        if (aQName.equals(\"module\")) {\n-            //create configuration\n-            final String name \u003d aAtts.getValue(\"name\");\n-            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n-            if (mConfiguration \u003d\u003d null) {\n-                mConfiguration \u003d conf;\n-            }\n+        public void startElement(String aNamespaceURI,\n+                                 String aLocalName,\n+                                 String aQName,\n+                                 Attributes aAtts)\n+                throws SAXException\n+        {\n+            // TODO: debug logging for support puposes\n+            if (aQName.equals(\"module\")) {\n+                //create configuration\n+                final String name \u003d aAtts.getValue(\"name\");\n+                DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n+                if (mConfiguration \u003d\u003d null) {\n+                    mConfiguration \u003d conf;\n+                }\n \n-            //add configuration to it\u0027s parent\n-            if (!mConfigStack.isEmpty()) {\n+                //add configuration to it\u0027s parent\n+                if (!mConfigStack.isEmpty()) {\n+                    final DefaultConfiguration top \u003d\n+                            (DefaultConfiguration) mConfigStack.peek();\n+                    top.addChild(conf);\n+                }\n+\n+                mConfigStack.push(conf);\n+            }\n+            else if (aQName.equals(\"property\")) {\n+                //extract name and value\n+                final String name \u003d aAtts.getValue(\"name\");\n+                final String value;\n+                try {\n+                    value \u003d replaceProperties(aAtts.getValue(\"value\"),\n+                        mOverrideProps);\n+                }\n+                catch (CheckstyleException ex) {\n+                    throw new SAXException(ex.getMessage());\n+                }\n+\n+                //add to attributes of configuration\n                 final DefaultConfiguration top \u003d\n-                        (DefaultConfiguration) mConfigStack.peek();\n-                top.addChild(conf);\n+                    (DefaultConfiguration) mConfigStack.peek();\n+                top.addAttribute(name, value);\n             }\n-\n-            mConfigStack.push(conf);\n-        }\n-        else if (aQName.equals(\"property\")) {\n-            //extract name and value\n-            final String name \u003d aAtts.getValue(\"name\");\n-            final String value;\n-            try {\n-                value \u003d replaceProperties(aAtts.getValue(\"value\"),\n-                    mOverrideProps);\n-            }\n-            catch (CheckstyleException ex) {\n-                throw new SAXException(ex.getMessage());\n-            }\n-\n-            //add to attributes of configuration\n-            final DefaultConfiguration top \u003d\n-                (DefaultConfiguration) mConfigStack.peek();\n-            top.addAttribute(name, value);\n-        }\n-    }\n\\ No newline at end of file\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public void startElement(String aNamespaceURI,\n                                 String aLocalName,\n                                 String aQName,\n                                 Attributes aAtts)\n                throws SAXException\n        {\n            // TODO: debug logging for support puposes\n            if (aQName.equals(\"module\")) {\n                //create configuration\n                final String name \u003d aAtts.getValue(\"name\");\n                DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n                if (mConfiguration \u003d\u003d null) {\n                    mConfiguration \u003d conf;\n                }\n\n                //add configuration to it\u0027s parent\n                if (!mConfigStack.isEmpty()) {\n                    final DefaultConfiguration top \u003d\n                            (DefaultConfiguration) mConfigStack.peek();\n                    top.addChild(conf);\n                }\n\n                mConfigStack.push(conf);\n            }\n            else if (aQName.equals(\"property\")) {\n                //extract name and value\n                final String name \u003d aAtts.getValue(\"name\");\n                final String value;\n                try {\n                    value \u003d replaceProperties(aAtts.getValue(\"value\"),\n                        mOverrideProps);\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n\n                //add to attributes of configuration\n                final DefaultConfiguration top \u003d\n                    (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea": {
      "type": "Ybodychange",
      "commitMessage": "moved property expansion from api package to private method of ConfigurationLoader (bug #670594)\nalso added property expansion of ANT properties\n",
      "commitDate": "28/01/03 11:56 AM",
      "commitName": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "15/12/02 4:22 PM",
      "commitNameOld": "4564aecb5c1d694591feef433ce067d74e36d823",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 43.82,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n         if (aQName.equals(\"module\")) {\n             //create configuration\n             final String name \u003d aAtts.getValue(\"name\");\n             final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n             if (mConfiguration \u003d\u003d null) {\n                 mConfiguration \u003d conf;\n             }\n \n             //add configuration to it\u0027s parent\n             if (!mConfigStack.isEmpty()) {\n                 final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                 top.addChild(conf);\n             }\n \n             mConfigStack.push(conf);\n         }\n         else if (aQName.equals(\"property\")) {\n             //extract name and value\n             final String name \u003d aAtts.getValue(\"name\");\n             final String value;\n             try {\n-                value \u003d Utils.replaceProperties(aAtts.getValue(\"value\"),\n-                                                mOverrideProps);\n+                value \u003d replaceProperties(aAtts.getValue(\"value\"),\n+                    mOverrideProps);\n             }\n             catch (CheckstyleException ex) {\n                 throw new SAXException(ex.getMessage());\n             }\n \n             //add to attributes of configuration\n             final DefaultConfiguration top \u003d\n                 (DefaultConfiguration) mConfigStack.peek();\n             top.addAttribute(name, value);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        if (aQName.equals(\"module\")) {\n            //create configuration\n            final String name \u003d aAtts.getValue(\"name\");\n            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n            if (mConfiguration \u003d\u003d null) {\n                mConfiguration \u003d conf;\n            }\n\n            //add configuration to it\u0027s parent\n            if (!mConfigStack.isEmpty()) {\n                final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addChild(conf);\n            }\n\n            mConfigStack.push(conf);\n        }\n        else if (aQName.equals(\"property\")) {\n            //extract name and value\n            final String name \u003d aAtts.getValue(\"name\");\n            final String value;\n            try {\n                value \u003d replaceProperties(aAtts.getValue(\"value\"),\n                    mOverrideProps);\n            }\n            catch (CheckstyleException ex) {\n                throw new SAXException(ex.getMessage());\n            }\n\n            //add to attributes of configuration\n            final DefaultConfiguration top \u003d\n                (DefaultConfiguration) mConfigStack.peek();\n            top.addAttribute(name, value);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "4564aecb5c1d694591feef433ce067d74e36d823": {
      "type": "Ybodychange",
      "commitMessage": "Changed configuration XML element \"config\" to \"module\".\nDropped suffix \"Check\" in Check configurations.\n",
      "commitDate": "15/12/02 4:22 PM",
      "commitName": "4564aecb5c1d694591feef433ce067d74e36d823",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "07/12/02 5:02 AM",
      "commitNameOld": "76ae23935169b24f54520da482e6ceb26cd890a6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 8.47,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,42 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n-        if (aQName.equals(\"config\")) {\n+        if (aQName.equals(\"module\")) {\n             //create configuration\n             final String name \u003d aAtts.getValue(\"name\");\n             final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n             if (mConfiguration \u003d\u003d null) {\n                 mConfiguration \u003d conf;\n             }\n \n             //add configuration to it\u0027s parent\n             if (!mConfigStack.isEmpty()) {\n                 final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                 top.addChild(conf);\n             }\n \n             mConfigStack.push(conf);\n         }\n         else if (aQName.equals(\"property\")) {\n             //extract name and value\n             final String name \u003d aAtts.getValue(\"name\");\n             final String value;\n             try {\n                 value \u003d Utils.replaceProperties(aAtts.getValue(\"value\"),\n                                                 mOverrideProps);\n             }\n             catch (CheckstyleException ex) {\n                 throw new SAXException(ex.getMessage());\n             }\n \n             //add to attributes of configuration\n             final DefaultConfiguration top \u003d\n                 (DefaultConfiguration) mConfigStack.peek();\n             top.addAttribute(name, value);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        if (aQName.equals(\"module\")) {\n            //create configuration\n            final String name \u003d aAtts.getValue(\"name\");\n            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n            if (mConfiguration \u003d\u003d null) {\n                mConfiguration \u003d conf;\n            }\n\n            //add configuration to it\u0027s parent\n            if (!mConfigStack.isEmpty()) {\n                final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addChild(conf);\n            }\n\n            mConfigStack.push(conf);\n        }\n        else if (aQName.equals(\"property\")) {\n            //extract name and value\n            final String name \u003d aAtts.getValue(\"name\");\n            final String value;\n            try {\n                value \u003d Utils.replaceProperties(aAtts.getValue(\"value\"),\n                                                mOverrideProps);\n            }\n            catch (CheckstyleException ex) {\n                throw new SAXException(ex.getMessage());\n            }\n\n            //add to attributes of configuration\n            final DefaultConfiguration top \u003d\n                (DefaultConfiguration) mConfigStack.peek();\n            top.addAttribute(name, value);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "f8459eb6742402c5c33f7b80e4c5844998a258ac": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring after re-reading the code\n",
      "commitDate": "07/12/02 4:16 AM",
      "commitName": "f8459eb6742402c5c33f7b80e4c5844998a258ac",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "07/12/02 3:50 AM",
      "commitNameOld": "a0054eede02fe6109973ab4b94f3657d1ed187a3",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,42 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n         if (aQName.equals(\"config\")) {\n             //create configuration\n             final String name \u003d aAtts.getValue(\"name\");\n-            if (name \u003d\u003d null) {\n-                throw new SAXException(\"missing config name\");\n-            }\n             final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n             if (mConfiguration \u003d\u003d null) {\n                 mConfiguration \u003d conf;\n             }\n \n             //add configuration to it\u0027s parent\n             if (!mConfigStack.isEmpty()) {\n-                DefaultConfiguration top \u003d\n+                final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                 top.addChild(conf);\n             }\n \n             mConfigStack.push(conf);\n         }\n         else if (aQName.equals(\"property\")) {\n-\n             //extract name and value\n             final String name \u003d aAtts.getValue(\"name\");\n-            String value \u003d aAtts.getValue(\"value\");\n-\n-            // expand properties\n-            if (mOverrideProps !\u003d null) {\n-                try {\n-                    value \u003d Utils.replaceProperties(value, mOverrideProps);\n-                }\n-                catch (CheckstyleException ex) {\n-                    throw new SAXException(ex.getMessage());\n-                }\n+            final String value;\n+            try {\n+                value \u003d Utils.replaceProperties(aAtts.getValue(\"value\"),\n+                                                mOverrideProps);\n+            }\n+            catch (CheckstyleException ex) {\n+                throw new SAXException(ex.getMessage());\n             }\n \n             //add to attributes of configuration\n-            if (!mConfigStack.isEmpty()) {\n-                final DefaultConfiguration top \u003d\n-                        (DefaultConfiguration) mConfigStack.peek();\n-                top.addAttribute(name, value);\n-            }\n-            else {\n-                throw new SAXException(\n-                            \"property \" + name + \"has no config parent\");\n-            }\n+            final DefaultConfiguration top \u003d\n+                (DefaultConfiguration) mConfigStack.peek();\n+            top.addAttribute(name, value);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        if (aQName.equals(\"config\")) {\n            //create configuration\n            final String name \u003d aAtts.getValue(\"name\");\n            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n            if (mConfiguration \u003d\u003d null) {\n                mConfiguration \u003d conf;\n            }\n\n            //add configuration to it\u0027s parent\n            if (!mConfigStack.isEmpty()) {\n                final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addChild(conf);\n            }\n\n            mConfigStack.push(conf);\n        }\n        else if (aQName.equals(\"property\")) {\n            //extract name and value\n            final String name \u003d aAtts.getValue(\"name\");\n            final String value;\n            try {\n                value \u003d Utils.replaceProperties(aAtts.getValue(\"value\"),\n                                                mOverrideProps);\n            }\n            catch (CheckstyleException ex) {\n                throw new SAXException(ex.getMessage());\n            }\n\n            //add to attributes of configuration\n            final DefaultConfiguration top \u003d\n                (DefaultConfiguration) mConfigStack.peek();\n            top.addAttribute(name, value);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "a0054eede02fe6109973ab4b94f3657d1ed187a3": {
      "type": "Ybodychange",
      "commitMessage": "Removed unused code now that we have validation\nagainst a DTD.\n",
      "commitDate": "07/12/02 3:50 AM",
      "commitName": "a0054eede02fe6109973ab4b94f3657d1ed187a3",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "07/12/02 1:30 AM",
      "commitNameOld": "09dde6e471129b86ba11460784c5af63ae3fb0a6",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,61 +1,55 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n         if (aQName.equals(\"config\")) {\n             //create configuration\n             final String name \u003d aAtts.getValue(\"name\");\n             if (name \u003d\u003d null) {\n                 throw new SAXException(\"missing config name\");\n             }\n             final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n             if (mConfiguration \u003d\u003d null) {\n                 mConfiguration \u003d conf;\n             }\n \n             //add configuration to it\u0027s parent\n             if (!mConfigStack.isEmpty()) {\n                 DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                 top.addChild(conf);\n             }\n \n             mConfigStack.push(conf);\n         }\n         else if (aQName.equals(\"property\")) {\n \n             //extract name and value\n             final String name \u003d aAtts.getValue(\"name\");\n-            if (name \u003d\u003d null) {\n-                throw new SAXException(\"missing property name\");\n-            }\n             String value \u003d aAtts.getValue(\"value\");\n-            if (value \u003d\u003d null) {\n-                throw new SAXException(\"missing value for property \" + name);\n-            }\n \n             // expand properties\n             if (mOverrideProps !\u003d null) {\n                 try {\n                     value \u003d Utils.replaceProperties(value, mOverrideProps);\n                 }\n                 catch (CheckstyleException ex) {\n                     throw new SAXException(ex.getMessage());\n                 }\n             }\n \n             //add to attributes of configuration\n             if (!mConfigStack.isEmpty()) {\n-                DefaultConfiguration top \u003d\n+                final DefaultConfiguration top \u003d\n                         (DefaultConfiguration) mConfigStack.peek();\n                 top.addAttribute(name, value);\n             }\n             else {\n                 throw new SAXException(\n                             \"property \" + name + \"has no config parent\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        if (aQName.equals(\"config\")) {\n            //create configuration\n            final String name \u003d aAtts.getValue(\"name\");\n            if (name \u003d\u003d null) {\n                throw new SAXException(\"missing config name\");\n            }\n            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n            if (mConfiguration \u003d\u003d null) {\n                mConfiguration \u003d conf;\n            }\n\n            //add configuration to it\u0027s parent\n            if (!mConfigStack.isEmpty()) {\n                DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addChild(conf);\n            }\n\n            mConfigStack.push(conf);\n        }\n        else if (aQName.equals(\"property\")) {\n\n            //extract name and value\n            final String name \u003d aAtts.getValue(\"name\");\n            String value \u003d aAtts.getValue(\"value\");\n\n            // expand properties\n            if (mOverrideProps !\u003d null) {\n                try {\n                    value \u003d Utils.replaceProperties(value, mOverrideProps);\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n            }\n\n            //add to attributes of configuration\n            if (!mConfigStack.isEmpty()) {\n                final DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n            else {\n                throw new SAXException(\n                            \"property \" + name + \"has no config parent\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "686afc521a11088c57632352eb6fd60a682b03d6": {
      "type": "Ybodychange",
      "commitMessage": "modified for config XML\n",
      "commitDate": "05/12/02 10:50 AM",
      "commitName": "686afc521a11088c57632352eb6fd60a682b03d6",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "30/11/02 8:22 PM",
      "commitNameOld": "e952d4dff48ef64b24d39649b8e2f0dc6369f3fd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.6,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,61 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n-        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n-        final int attCount \u003d aAtts.getLength();\n-        for (int i \u003d 0; i \u003c attCount; i++) {\n-            String name \u003d aAtts.getQName(i);\n-            String value \u003d aAtts.getValue(i);\n-\n-            // expand properties\n-            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n-                String propName \u003d value.substring(2, value.length() - 1);\n-                value \u003d mOverrideProps.getProperty(propName);\n-                if (value \u003d\u003d null) {\n-                    throw new SAXException(\n-                            \"missing external property \" + propName);\n-                }\n+        if (aQName.equals(\"config\")) {\n+            //create configuration\n+            final String name \u003d aAtts.getValue(\"name\");\n+            if (name \u003d\u003d null) {\n+                throw new SAXException(\"missing config name\");\n+            }\n+            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n+            if (mConfiguration \u003d\u003d null) {\n+                mConfiguration \u003d conf;\n             }\n \n-            conf.addAttribute(name, value);\n+            //add configuration to it\u0027s parent\n+            if (!mConfigStack.isEmpty()) {\n+                DefaultConfiguration top \u003d\n+                        (DefaultConfiguration) mConfigStack.peek();\n+                top.addChild(conf);\n+            }\n+            \n+            mConfigStack.push(conf);\n         }\n-\n-        if (mConfiguration \u003d\u003d null) {\n-            mConfiguration \u003d conf;\n+        else if (aQName.equals(\"property\")) {\n+            \n+            //extract name and value\n+            final String name \u003d aAtts.getValue(\"name\");\n+            if (name \u003d\u003d null) {\n+                throw new SAXException(\"missing property name\");\n+            }            \n+            String value \u003d aAtts.getValue(\"value\");\n+            if (value \u003d\u003d null) {\n+                throw new SAXException(\"missing value for property \" + name);\n+            }\n+                \n+            // expand properties\n+            if (mOverrideProps !\u003d null) {\n+                try {\n+                    value \u003d Utils.replaceProperties(value, mOverrideProps);\n+                }\n+                catch (CheckstyleException ex) {\n+                    throw new SAXException(ex.getMessage());\n+                }\n+            }\n+            \n+            //add to attributes of configuration\n+            if (!mConfigStack.isEmpty()) {\n+                DefaultConfiguration top \u003d\n+                        (DefaultConfiguration) mConfigStack.peek();\n+                top.addAttribute(name, value);\n+            }\n+            else {\n+                throw new SAXException(\n+                            \"property \" + name + \"has no config parent\");\n+            }               \n         }\n-\n-        if (!mConfigStack.isEmpty()) {\n-            DefaultConfiguration top \u003d\n-                    (DefaultConfiguration) mConfigStack.peek();\n-            top.addChild(conf);\n-        }\n-\n-        mConfigStack.push(conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        if (aQName.equals(\"config\")) {\n            //create configuration\n            final String name \u003d aAtts.getValue(\"name\");\n            if (name \u003d\u003d null) {\n                throw new SAXException(\"missing config name\");\n            }\n            final DefaultConfiguration conf \u003d new DefaultConfiguration(name);\n            if (mConfiguration \u003d\u003d null) {\n                mConfiguration \u003d conf;\n            }\n\n            //add configuration to it\u0027s parent\n            if (!mConfigStack.isEmpty()) {\n                DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addChild(conf);\n            }\n            \n            mConfigStack.push(conf);\n        }\n        else if (aQName.equals(\"property\")) {\n            \n            //extract name and value\n            final String name \u003d aAtts.getValue(\"name\");\n            if (name \u003d\u003d null) {\n                throw new SAXException(\"missing property name\");\n            }            \n            String value \u003d aAtts.getValue(\"value\");\n            if (value \u003d\u003d null) {\n                throw new SAXException(\"missing value for property \" + name);\n            }\n                \n            // expand properties\n            if (mOverrideProps !\u003d null) {\n                try {\n                    value \u003d Utils.replaceProperties(value, mOverrideProps);\n                }\n                catch (CheckstyleException ex) {\n                    throw new SAXException(ex.getMessage());\n                }\n            }\n            \n            //add to attributes of configuration\n            if (!mConfigStack.isEmpty()) {\n                DefaultConfiguration top \u003d\n                        (DefaultConfiguration) mConfigStack.peek();\n                top.addAttribute(name, value);\n            }\n            else {\n                throw new SAXException(\n                            \"property \" + name + \"has no config parent\");\n            }               \n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "42bf43038671a4c65a47fcd9931cc2db35dbeaf7": {
      "type": "Ybodychange",
      "commitMessage": "removed System.out.println\n",
      "commitDate": "30/11/02 10:48 AM",
      "commitName": "42bf43038671a4c65a47fcd9931cc2db35dbeaf7",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "30/11/02 10:29 AM",
      "commitNameOld": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,36 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n             throws SAXException\n     {\n         // TODO: debug logging for support puposes\n         DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n-        System.out.println(\"aQName \u003d \" + aQName);\n         final int attCount \u003d aAtts.getLength();\n         for (int i \u003d 0; i \u003c attCount; i++) {\n             String name \u003d aAtts.getQName(i);\n             String value \u003d aAtts.getValue(i);\n-            System.out.println(\"  value of \" + name + \" is \" + value);\n \n             // expand properties\n             if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n                 String propName \u003d value.substring(2, value.length() - 1);\n                 value \u003d mOverrideProps.getProperty(propName);\n                 if (value \u003d\u003d null) {\n                     throw new SAXException(\"missing external property \" + propName);\n                 }\n-                System.out.println(\"  propName \u003d \" + propName);\n-                System.out.println(\"  new value \u003d \" + value);\n             }\n \n             conf.addAttribute(name, value);\n         }\n \n         if (mConfiguration \u003d\u003d null) {\n             mConfiguration \u003d conf;\n         }\n \n         if (!mConfigStack.isEmpty()) {\n             DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n             top.addChild(conf);\n         }\n \n         mConfigStack.push(conf);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n        final int attCount \u003d aAtts.getLength();\n        for (int i \u003d 0; i \u003c attCount; i++) {\n            String name \u003d aAtts.getQName(i);\n            String value \u003d aAtts.getValue(i);\n\n            // expand properties\n            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n                String propName \u003d value.substring(2, value.length() - 1);\n                value \u003d mOverrideProps.getProperty(propName);\n                if (value \u003d\u003d null) {\n                    throw new SAXException(\"missing external property \" + propName);\n                }\n            }\n\n            conf.addAttribute(name, value);\n        }\n\n        if (mConfiguration \u003d\u003d null) {\n            mConfiguration \u003d conf;\n        }\n\n        if (!mConfigStack.isEmpty()) {\n            DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n            top.addChild(conf);\n        }\n\n        mConfigStack.push(conf);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "6ffc8dd26075456b055ffcd35d3915c23049bfbb": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "avalonization\n",
      "commitDate": "30/11/02 10:29 AM",
      "commitName": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "avalonization\n",
          "commitDate": "30/11/02 10:29 AM",
          "commitName": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "30/11/02 8:58 AM",
          "commitNameOld": "085befb3adfaed30db6623bfc04fa7b1e8755d3a",
          "commitAuthorOld": "Rick Giles",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,40 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n+            throws SAXException\n     {\n-        mBuf.setLength(0);\n-        if (\"global\".equals(aQName)) {\n-            mIsInGlobalElement \u003d true;\n-        }\n-        else if (\"check\".equals(aQName)) {\n-            //first apply overriding properties\n-            if (!mIsInCheckMode) {\n-                mIsInCheckMode \u003d true;\n-                for (Enumeration enum \u003d mOverrideProps.keys();\n-                      enum.hasMoreElements();)\n-                {\n-                    final String key \u003d (String) enum.nextElement();\n-                    final String value \u003d (String) mOverrideProps.get(key);\n-                    mProps.setProperty(key, value);\n+        // TODO: debug logging for support puposes\n+        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n+        System.out.println(\"aQName \u003d \" + aQName);\n+        final int attCount \u003d aAtts.getLength();\n+        for (int i \u003d 0; i \u003c attCount; i++) {\n+            String name \u003d aAtts.getQName(i);\n+            String value \u003d aAtts.getValue(i);\n+            System.out.println(\"  value of \" + name + \" is \" + value);\n+\n+            // expand properties\n+            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n+                String propName \u003d value.substring(2, value.length() - 1);\n+                value \u003d mOverrideProps.getProperty(propName);\n+                if (value \u003d\u003d null) {\n+                    throw new SAXException(\"missing external property \" + propName);\n                 }\n+                System.out.println(\"  propName \u003d \" + propName);\n+                System.out.println(\"  new value \u003d \" + value);\n             }\n \n-            mCurrent \u003d new CheckConfiguration();\n-            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n-        }\n-        else if (\"property\".equals(aQName)) {\n-            final String name \u003d aAtts.getValue(\"name\");\n-            String value \u003d aAtts.getValue(\"value\");\n-\n-            if (value \u003d\u003d null) {\n-                //try global\n-                String globalKey \u003d aAtts.getValue(\"from-global\");\n-                value \u003d (String) mProps.get(globalKey);\n-            }\n-\n-            if (mIsInGlobalElement) {\n-                mProps.setProperty(name, value);\n-            }\n-            else {\n-                mCurrent.addProperty(name, value);\n-            }\n+            conf.addAttribute(name, value);\n         }\n \n+        if (mConfiguration \u003d\u003d null) {\n+            mConfiguration \u003d conf;\n+        }\n+\n+        if (!mConfigStack.isEmpty()) {\n+            DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n+            top.addChild(conf);\n+        }\n+\n+        mConfigStack.push(conf);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n        System.out.println(\"aQName \u003d \" + aQName);\n        final int attCount \u003d aAtts.getLength();\n        for (int i \u003d 0; i \u003c attCount; i++) {\n            String name \u003d aAtts.getQName(i);\n            String value \u003d aAtts.getValue(i);\n            System.out.println(\"  value of \" + name + \" is \" + value);\n\n            // expand properties\n            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n                String propName \u003d value.substring(2, value.length() - 1);\n                value \u003d mOverrideProps.getProperty(propName);\n                if (value \u003d\u003d null) {\n                    throw new SAXException(\"missing external property \" + propName);\n                }\n                System.out.println(\"  propName \u003d \" + propName);\n                System.out.println(\"  new value \u003d \" + value);\n            }\n\n            conf.addAttribute(name, value);\n        }\n\n        if (mConfiguration \u003d\u003d null) {\n            mConfiguration \u003d conf;\n        }\n\n        if (!mConfigStack.isEmpty()) {\n            DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n            top.addChild(conf);\n        }\n\n        mConfigStack.push(conf);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[SAXException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "avalonization\n",
          "commitDate": "30/11/02 10:29 AM",
          "commitName": "6ffc8dd26075456b055ffcd35d3915c23049bfbb",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "30/11/02 8:58 AM",
          "commitNameOld": "085befb3adfaed30db6623bfc04fa7b1e8755d3a",
          "commitAuthorOld": "Rick Giles",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,40 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n+            throws SAXException\n     {\n-        mBuf.setLength(0);\n-        if (\"global\".equals(aQName)) {\n-            mIsInGlobalElement \u003d true;\n-        }\n-        else if (\"check\".equals(aQName)) {\n-            //first apply overriding properties\n-            if (!mIsInCheckMode) {\n-                mIsInCheckMode \u003d true;\n-                for (Enumeration enum \u003d mOverrideProps.keys();\n-                      enum.hasMoreElements();)\n-                {\n-                    final String key \u003d (String) enum.nextElement();\n-                    final String value \u003d (String) mOverrideProps.get(key);\n-                    mProps.setProperty(key, value);\n+        // TODO: debug logging for support puposes\n+        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n+        System.out.println(\"aQName \u003d \" + aQName);\n+        final int attCount \u003d aAtts.getLength();\n+        for (int i \u003d 0; i \u003c attCount; i++) {\n+            String name \u003d aAtts.getQName(i);\n+            String value \u003d aAtts.getValue(i);\n+            System.out.println(\"  value of \" + name + \" is \" + value);\n+\n+            // expand properties\n+            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n+                String propName \u003d value.substring(2, value.length() - 1);\n+                value \u003d mOverrideProps.getProperty(propName);\n+                if (value \u003d\u003d null) {\n+                    throw new SAXException(\"missing external property \" + propName);\n                 }\n+                System.out.println(\"  propName \u003d \" + propName);\n+                System.out.println(\"  new value \u003d \" + value);\n             }\n \n-            mCurrent \u003d new CheckConfiguration();\n-            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n-        }\n-        else if (\"property\".equals(aQName)) {\n-            final String name \u003d aAtts.getValue(\"name\");\n-            String value \u003d aAtts.getValue(\"value\");\n-\n-            if (value \u003d\u003d null) {\n-                //try global\n-                String globalKey \u003d aAtts.getValue(\"from-global\");\n-                value \u003d (String) mProps.get(globalKey);\n-            }\n-\n-            if (mIsInGlobalElement) {\n-                mProps.setProperty(name, value);\n-            }\n-            else {\n-                mCurrent.addProperty(name, value);\n-            }\n+            conf.addAttribute(name, value);\n         }\n \n+        if (mConfiguration \u003d\u003d null) {\n+            mConfiguration \u003d conf;\n+        }\n+\n+        if (!mConfigStack.isEmpty()) {\n+            DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n+            top.addChild(conf);\n+        }\n+\n+        mConfigStack.push(conf);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n            throws SAXException\n    {\n        // TODO: debug logging for support puposes\n        DefaultConfiguration conf \u003d new DefaultConfiguration(aQName);\n        System.out.println(\"aQName \u003d \" + aQName);\n        final int attCount \u003d aAtts.getLength();\n        for (int i \u003d 0; i \u003c attCount; i++) {\n            String name \u003d aAtts.getQName(i);\n            String value \u003d aAtts.getValue(i);\n            System.out.println(\"  value of \" + name + \" is \" + value);\n\n            // expand properties\n            if (value.startsWith(\"${\") \u0026\u0026 value.endsWith(\"}\")) {\n                String propName \u003d value.substring(2, value.length() - 1);\n                value \u003d mOverrideProps.getProperty(propName);\n                if (value \u003d\u003d null) {\n                    throw new SAXException(\"missing external property \" + propName);\n                }\n                System.out.println(\"  propName \u003d \" + propName);\n                System.out.println(\"  new value \u003d \" + value);\n            }\n\n            conf.addAttribute(name, value);\n        }\n\n        if (mConfiguration \u003d\u003d null) {\n            mConfiguration \u003d conf;\n        }\n\n        if (!mConfigStack.isEmpty()) {\n            DefaultConfiguration top \u003d (DefaultConfiguration) mConfigStack.peek();\n            top.addChild(conf);\n        }\n\n        mConfigStack.push(conf);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "303352fe2d7b467edce0bf02064e0a519a139250": {
      "type": "Ybodychange",
      "commitMessage": "fixed checkstyle errors\n",
      "commitDate": "22/11/02 5:00 AM",
      "commitName": "303352fe2d7b467edce0bf02064e0a519a139250",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "18/11/02 2:03 AM",
      "commitNameOld": "cf7e4c19e3bcb4a3cdf686529e62f2b468fb9837",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 4.12,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n     {\n         mBuf.setLength(0);\n         if (\"global\".equals(aQName)) {\n-            isInGlobalElement \u003d true;\n+            mIsInGlobalElement \u003d true;\n         }\n         else if (\"check\".equals(aQName)) {\n             //first apply overriding properties\n-            if (!isInCheckMode) {\n-                isInCheckMode \u003d true;\n+            if (!mIsInCheckMode) {\n+                mIsInCheckMode \u003d true;\n                 for (Enumeration enum \u003d mOverrideProps.keys();\n                       enum.hasMoreElements();)\n                 {\n                     final String key \u003d (String)enum.nextElement();\n                     final String value \u003d (String)mOverrideProps.get(key);\n                     mProps.setProperty(key, value);\n                 }\n             }\n \n             mCurrent \u003d new CheckConfiguration();\n             mCurrent.setClassname(aAtts.getValue(\"classname\"));\n         }\n         else if (\"property\".equals(aQName)) {\n             final String name \u003d aAtts.getValue(\"name\");\n             String value \u003d aAtts.getValue(\"value\");\n             \n             if (value \u003d\u003d null) {\n                 //try global\n                 String globalKey \u003d aAtts.getValue(\"from-global\");\n                 value \u003d (String) mProps.get(globalKey); \n             }\n                 \n-            if (isInGlobalElement) {\n+            if (mIsInGlobalElement) {\n                 mProps.setProperty(name, value);\n             }\n             else {\n                 mCurrent.addProperty(name, value);\n             }\n         }\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n    {\n        mBuf.setLength(0);\n        if (\"global\".equals(aQName)) {\n            mIsInGlobalElement \u003d true;\n        }\n        else if (\"check\".equals(aQName)) {\n            //first apply overriding properties\n            if (!mIsInCheckMode) {\n                mIsInCheckMode \u003d true;\n                for (Enumeration enum \u003d mOverrideProps.keys();\n                      enum.hasMoreElements();)\n                {\n                    final String key \u003d (String)enum.nextElement();\n                    final String value \u003d (String)mOverrideProps.get(key);\n                    mProps.setProperty(key, value);\n                }\n            }\n\n            mCurrent \u003d new CheckConfiguration();\n            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n        }\n        else if (\"property\".equals(aQName)) {\n            final String name \u003d aAtts.getValue(\"name\");\n            String value \u003d aAtts.getValue(\"value\");\n            \n            if (value \u003d\u003d null) {\n                //try global\n                String globalKey \u003d aAtts.getValue(\"from-global\");\n                value \u003d (String) mProps.get(globalKey); \n            }\n                \n            if (mIsInGlobalElement) {\n                mProps.setProperty(name, value);\n            }\n            else {\n                mCurrent.addProperty(name, value);\n            }\n        }\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "cf7e4c19e3bcb4a3cdf686529e62f2b468fb9837": {
      "type": "Ybodychange",
      "commitMessage": "renamed XML element \"set-property\" to \"property\"\n",
      "commitDate": "18/11/02 2:03 AM",
      "commitName": "cf7e4c19e3bcb4a3cdf686529e62f2b468fb9837",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "16/11/02 11:38 AM",
      "commitNameOld": "2debda611fe487021711aa4acce56651799a778f",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,44 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n     {\n         mBuf.setLength(0);\n         if (\"global\".equals(aQName)) {\n             isInGlobalElement \u003d true;\n         }\n         else if (\"check\".equals(aQName)) {\n             //first apply overriding properties\n             if (!isInCheckMode) {\n                 isInCheckMode \u003d true;\n                 for (Enumeration enum \u003d mOverrideProps.keys();\n                       enum.hasMoreElements();)\n                 {\n                     final String key \u003d (String)enum.nextElement();\n                     final String value \u003d (String)mOverrideProps.get(key);\n                     mProps.setProperty(key, value);\n                 }\n             }\n \n             mCurrent \u003d new CheckConfiguration();\n             mCurrent.setClassname(aAtts.getValue(\"classname\"));\n         }\n-        else if (\"set-property\".equals(aQName)) {\n+        else if (\"property\".equals(aQName)) {\n             final String name \u003d aAtts.getValue(\"name\");\n             String value \u003d aAtts.getValue(\"value\");\n             \n             if (value \u003d\u003d null) {\n                 //try global\n                 String globalKey \u003d aAtts.getValue(\"from-global\");\n                 value \u003d (String) mProps.get(globalKey); \n             }\n                 \n             if (isInGlobalElement) {\n                 mProps.setProperty(name, value);\n             }\n             else {\n                 mCurrent.addProperty(name, value);\n             }\n         }\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n    {\n        mBuf.setLength(0);\n        if (\"global\".equals(aQName)) {\n            isInGlobalElement \u003d true;\n        }\n        else if (\"check\".equals(aQName)) {\n            //first apply overriding properties\n            if (!isInCheckMode) {\n                isInCheckMode \u003d true;\n                for (Enumeration enum \u003d mOverrideProps.keys();\n                      enum.hasMoreElements();)\n                {\n                    final String key \u003d (String)enum.nextElement();\n                    final String value \u003d (String)mOverrideProps.get(key);\n                    mProps.setProperty(key, value);\n                }\n            }\n\n            mCurrent \u003d new CheckConfiguration();\n            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n        }\n        else if (\"property\".equals(aQName)) {\n            final String name \u003d aAtts.getValue(\"name\");\n            String value \u003d aAtts.getValue(\"value\");\n            \n            if (value \u003d\u003d null) {\n                //try global\n                String globalKey \u003d aAtts.getValue(\"from-global\");\n                value \u003d (String) mProps.get(globalKey); \n            }\n                \n            if (isInGlobalElement) {\n                mProps.setProperty(name, value);\n            }\n            else {\n                mCurrent.addProperty(name, value);\n            }\n        }\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "2debda611fe487021711aa4acce56651799a778f": {
      "type": "Ybodychange",
      "commitMessage": "Added overriding global properties\nNeeds testing, especially in ant with CheckstyleTask.\n",
      "commitDate": "16/11/02 11:38 AM",
      "commitName": "2debda611fe487021711aa4acce56651799a778f",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "15/11/02 10:18 AM",
      "commitNameOld": "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 1.06,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,44 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n     {\n         mBuf.setLength(0);\n         if (\"global\".equals(aQName)) {\n             isInGlobalElement \u003d true;\n         }\n         else if (\"check\".equals(aQName)) {\n+            //first apply overriding properties\n+            if (!isInCheckMode) {\n+                isInCheckMode \u003d true;\n+                for (Enumeration enum \u003d mOverrideProps.keys();\n+                      enum.hasMoreElements();)\n+                {\n+                    final String key \u003d (String)enum.nextElement();\n+                    final String value \u003d (String)mOverrideProps.get(key);\n+                    mProps.setProperty(key, value);\n+                }\n+            }\n+\n             mCurrent \u003d new CheckConfiguration();\n             mCurrent.setClassname(aAtts.getValue(\"classname\"));\n         }\n         else if (\"set-property\".equals(aQName)) {\n             final String name \u003d aAtts.getValue(\"name\");\n             String value \u003d aAtts.getValue(\"value\");\n             \n             if (value \u003d\u003d null) {\n-                //global?\n+                //try global\n                 String globalKey \u003d aAtts.getValue(\"from-global\");\n                 value \u003d (String) mProps.get(globalKey); \n             }\n                 \n             if (isInGlobalElement) {\n                 mProps.setProperty(name, value);\n             }\n             else {\n                 mCurrent.addProperty(name, value);\n             }\n         }\n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n    {\n        mBuf.setLength(0);\n        if (\"global\".equals(aQName)) {\n            isInGlobalElement \u003d true;\n        }\n        else if (\"check\".equals(aQName)) {\n            //first apply overriding properties\n            if (!isInCheckMode) {\n                isInCheckMode \u003d true;\n                for (Enumeration enum \u003d mOverrideProps.keys();\n                      enum.hasMoreElements();)\n                {\n                    final String key \u003d (String)enum.nextElement();\n                    final String value \u003d (String)mOverrideProps.get(key);\n                    mProps.setProperty(key, value);\n                }\n            }\n\n            mCurrent \u003d new CheckConfiguration();\n            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n        }\n        else if (\"set-property\".equals(aQName)) {\n            final String name \u003d aAtts.getValue(\"name\");\n            String value \u003d aAtts.getValue(\"value\");\n            \n            if (value \u003d\u003d null) {\n                //try global\n                String globalKey \u003d aAtts.getValue(\"from-global\");\n                value \u003d (String) mProps.get(globalKey); \n            }\n                \n            if (isInGlobalElement) {\n                mProps.setProperty(name, value);\n            }\n            else {\n                mCurrent.addProperty(name, value);\n            }\n        }\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "3c0608f33a6c41cf96056c52ae99070cbe5062d5": {
      "type": "Ybodychange",
      "commitMessage": "Wrapped GlobalProperties and CheckConfiguration[] into a Configuration\nclass. TODO: Integrate with CheckStyleTask\n",
      "commitDate": "15/11/02 10:18 AM",
      "commitName": "3c0608f33a6c41cf96056c52ae99070cbe5062d5",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "02/11/02 4:22 AM",
      "commitNameOld": "3288a81e30ddea194f76bd74f3b509500b864163",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 13.25,
      "commitsBetweenForRepo": 117,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,32 @@\n     public void startElement(String aNamespaceURI,\n                              String aLocalName,\n                              String aQName,\n                              Attributes aAtts)\n     {\n         mBuf.setLength(0);\n-        if (\"check\".equals(aQName)) {\n+        if (\"global\".equals(aQName)) {\n+            isInGlobalElement \u003d true;\n+        }\n+        else if (\"check\".equals(aQName)) {\n             mCurrent \u003d new CheckConfiguration();\n             mCurrent.setClassname(aAtts.getValue(\"classname\"));\n         }\n         else if (\"set-property\".equals(aQName)) {\n-            mCurrent.addProperty(aAtts.getValue(\"name\"),\n-                                 aAtts.getValue(\"value\"));\n+            final String name \u003d aAtts.getValue(\"name\");\n+            String value \u003d aAtts.getValue(\"value\");\n+            \n+            if (value \u003d\u003d null) {\n+                //global?\n+                String globalKey \u003d aAtts.getValue(\"from-global\");\n+                value \u003d (String) mProps.get(globalKey); \n+            }\n+                \n+            if (isInGlobalElement) {\n+                mProps.setProperty(name, value);\n+            }\n+            else {\n+                mCurrent.addProperty(name, value);\n+            }\n         }\n+\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n    {\n        mBuf.setLength(0);\n        if (\"global\".equals(aQName)) {\n            isInGlobalElement \u003d true;\n        }\n        else if (\"check\".equals(aQName)) {\n            mCurrent \u003d new CheckConfiguration();\n            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n        }\n        else if (\"set-property\".equals(aQName)) {\n            final String name \u003d aAtts.getValue(\"name\");\n            String value \u003d aAtts.getValue(\"value\");\n            \n            if (value \u003d\u003d null) {\n                //global?\n                String globalKey \u003d aAtts.getValue(\"from-global\");\n                value \u003d (String) mProps.get(globalKey); \n            }\n                \n            if (isInGlobalElement) {\n                mProps.setProperty(name, value);\n            }\n            else {\n                mCurrent.addProperty(name, value);\n            }\n        }\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "5b1564d2820b0575baabc7e57c10a116683a607f": {
      "type": "Yintroduced",
      "commitMessage": "first cut\n",
      "commitDate": "15/09/02 4:46 AM",
      "commitName": "5b1564d2820b0575baabc7e57c10a116683a607f",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,15 @@\n+    public void startElement(String aNamespaceURI,\n+                             String aLocalName,\n+                             String aQName,\n+                             Attributes aAtts)\n+    {\n+        mBuf.setLength(0);\n+        if (\"check\".equals(aQName)) {\n+            mCurrent \u003d new CheckConfiguration();\n+            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n+        }\n+        else if (\"set-property\".equals(aQName)) {\n+            mCurrent.addProperty(aAtts.getValue(\"name\"),\n+                                 aAtts.getValue(\"value\"));\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void startElement(String aNamespaceURI,\n                             String aLocalName,\n                             String aQName,\n                             Attributes aAtts)\n    {\n        mBuf.setLength(0);\n        if (\"check\".equals(aQName)) {\n            mCurrent \u003d new CheckConfiguration();\n            mCurrent.setClassname(aAtts.getValue(\"classname\"));\n        }\n        else if (\"set-property\".equals(aQName)) {\n            mCurrent.addProperty(aAtts.getValue(\"name\"),\n                                 aAtts.getValue(\"value\"));\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java"
    }
  }
}