{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractClassCouplingCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
  "functionStartLine": 187,
  "functionEndLine": 218,
  "numCommitsSeen": 84,
  "timeTaken": 2233,
  "changeHistory": [
    "bb687c2ab5af5e513a9649a19e64d7452e50c9ba",
    "ecaa42035e4637106d442562cc151f9ec6d5a854",
    "57785f3aa7d71b67a3c8adc8b60a008f921c33c8",
    "60eacf91e616d2b6eec8c3d66a72d694da368cec",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "08a286dbec6dec2a6a5bdc75e18152daf7ef77ff",
    "c044038c3b932586c0d384b614254cc2d1838838"
  ],
  "changeHistoryShort": {
    "bb687c2ab5af5e513a9649a19e64d7452e50c9ba": "Ybodychange",
    "ecaa42035e4637106d442562cc151f9ec6d5a854": "Ybodychange",
    "57785f3aa7d71b67a3c8adc8b60a008f921c33c8": "Ybodychange",
    "60eacf91e616d2b6eec8c3d66a72d694da368cec": "Ybodychange",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "08a286dbec6dec2a6a5bdc75e18152daf7ef77ff": "Ybodychange",
    "c044038c3b932586c0d384b614254cc2d1838838": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bb687c2ab5af5e513a9649a19e64d7452e50c9ba": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4861: resolved escaping this from AbstractClassCouplingCheck",
      "commitDate": "02/04/19 5:56 PM",
      "commitName": "bb687c2ab5af5e513a9649a19e64d7452e50c9ba",
      "commitAuthor": "rnveach",
      "commitDateOld": "13/03/19 11:08 PM",
      "commitNameOld": "aef7c727ba4a3872e7094f287dc9a506ec172592",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 19.78,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.PACKAGE_DEF:\n                 visitPackageDef(ast);\n                 break;\n             case TokenTypes.IMPORT:\n-                fileContext.registerImport(ast);\n+                registerImport(ast);\n                 break;\n             case TokenTypes.CLASS_DEF:\n             case TokenTypes.INTERFACE_DEF:\n             case TokenTypes.ANNOTATION_DEF:\n             case TokenTypes.ENUM_DEF:\n                 visitClassDef(ast);\n                 break;\n             case TokenTypes.EXTENDS_CLAUSE:\n             case TokenTypes.IMPLEMENTS_CLAUSE:\n             case TokenTypes.TYPE:\n-                fileContext.visitType(ast);\n+                visitType(ast);\n                 break;\n             case TokenTypes.LITERAL_NEW:\n-                fileContext.visitLiteralNew(ast);\n+                visitLiteralNew(ast);\n                 break;\n             case TokenTypes.LITERAL_THROWS:\n-                fileContext.visitLiteralThrows(ast);\n+                visitLiteralThrows(ast);\n                 break;\n             case TokenTypes.ANNOTATION:\n-                fileContext.visitAnnotationType(ast);\n+                visitAnnotationType(ast);\n                 break;\n             default:\n                 throw new IllegalArgumentException(\"Unknown type: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.PACKAGE_DEF:\n                visitPackageDef(ast);\n                break;\n            case TokenTypes.IMPORT:\n                registerImport(ast);\n                break;\n            case TokenTypes.CLASS_DEF:\n            case TokenTypes.INTERFACE_DEF:\n            case TokenTypes.ANNOTATION_DEF:\n            case TokenTypes.ENUM_DEF:\n                visitClassDef(ast);\n                break;\n            case TokenTypes.EXTENDS_CLAUSE:\n            case TokenTypes.IMPLEMENTS_CLAUSE:\n            case TokenTypes.TYPE:\n                visitType(ast);\n                break;\n            case TokenTypes.LITERAL_NEW:\n                visitLiteralNew(ast);\n                break;\n            case TokenTypes.LITERAL_THROWS:\n                visitLiteralThrows(ast);\n                break;\n            case TokenTypes.ANNOTATION:\n                visitAnnotationType(ast);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {}
    },
    "ecaa42035e4637106d442562cc151f9ec6d5a854": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4092: added extends, implements and annotations processing\n",
      "commitDate": "16/09/18 10:20 AM",
      "commitName": "ecaa42035e4637106d442562cc151f9ec6d5a854",
      "commitAuthor": "kazachka",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 104.53,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.PACKAGE_DEF:\n                 visitPackageDef(ast);\n                 break;\n             case TokenTypes.IMPORT:\n                 fileContext.registerImport(ast);\n                 break;\n             case TokenTypes.CLASS_DEF:\n             case TokenTypes.INTERFACE_DEF:\n             case TokenTypes.ANNOTATION_DEF:\n             case TokenTypes.ENUM_DEF:\n                 visitClassDef(ast);\n                 break;\n+            case TokenTypes.EXTENDS_CLAUSE:\n+            case TokenTypes.IMPLEMENTS_CLAUSE:\n             case TokenTypes.TYPE:\n                 fileContext.visitType(ast);\n                 break;\n             case TokenTypes.LITERAL_NEW:\n                 fileContext.visitLiteralNew(ast);\n                 break;\n             case TokenTypes.LITERAL_THROWS:\n                 fileContext.visitLiteralThrows(ast);\n                 break;\n+            case TokenTypes.ANNOTATION:\n+                fileContext.visitAnnotationType(ast);\n+                break;\n             default:\n                 throw new IllegalArgumentException(\"Unknown type: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.PACKAGE_DEF:\n                visitPackageDef(ast);\n                break;\n            case TokenTypes.IMPORT:\n                fileContext.registerImport(ast);\n                break;\n            case TokenTypes.CLASS_DEF:\n            case TokenTypes.INTERFACE_DEF:\n            case TokenTypes.ANNOTATION_DEF:\n            case TokenTypes.ENUM_DEF:\n                visitClassDef(ast);\n                break;\n            case TokenTypes.EXTENDS_CLAUSE:\n            case TokenTypes.IMPLEMENTS_CLAUSE:\n            case TokenTypes.TYPE:\n                fileContext.visitType(ast);\n                break;\n            case TokenTypes.LITERAL_NEW:\n                fileContext.visitLiteralNew(ast);\n                break;\n            case TokenTypes.LITERAL_THROWS:\n                fileContext.visitLiteralThrows(ast);\n                break;\n            case TokenTypes.ANNOTATION:\n                fileContext.visitAnnotationType(ast);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {}
    },
    "57785f3aa7d71b67a3c8adc8b60a008f921c33c8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3309: Added excludedPackages to class coupling checks\n",
      "commitDate": "10/04/17 6:54 AM",
      "commitName": "57785f3aa7d71b67a3c8adc8b60a008f921c33c8",
      "commitAuthor": "Andrew Kuchev",
      "commitDateOld": "05/04/17 4:08 AM",
      "commitNameOld": "7b95603c0e5036f397365a05b68483d0da690c63",
      "commitAuthorOld": "Tima",
      "daysBetweenCommits": 5.12,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,27 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.PACKAGE_DEF:\n                 visitPackageDef(ast);\n                 break;\n+            case TokenTypes.IMPORT:\n+                fileContext.registerImport(ast);\n+                break;\n             case TokenTypes.CLASS_DEF:\n             case TokenTypes.INTERFACE_DEF:\n             case TokenTypes.ANNOTATION_DEF:\n             case TokenTypes.ENUM_DEF:\n                 visitClassDef(ast);\n                 break;\n             case TokenTypes.TYPE:\n-                context.visitType(ast);\n+                fileContext.visitType(ast);\n                 break;\n             case TokenTypes.LITERAL_NEW:\n-                context.visitLiteralNew(ast);\n+                fileContext.visitLiteralNew(ast);\n                 break;\n             case TokenTypes.LITERAL_THROWS:\n-                context.visitLiteralThrows(ast);\n+                fileContext.visitLiteralThrows(ast);\n                 break;\n             default:\n                 throw new IllegalArgumentException(\"Unknown type: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.PACKAGE_DEF:\n                visitPackageDef(ast);\n                break;\n            case TokenTypes.IMPORT:\n                fileContext.registerImport(ast);\n                break;\n            case TokenTypes.CLASS_DEF:\n            case TokenTypes.INTERFACE_DEF:\n            case TokenTypes.ANNOTATION_DEF:\n            case TokenTypes.ENUM_DEF:\n                visitClassDef(ast);\n                break;\n            case TokenTypes.TYPE:\n                fileContext.visitType(ast);\n                break;\n            case TokenTypes.LITERAL_NEW:\n                fileContext.visitLiteralNew(ast);\n                break;\n            case TokenTypes.LITERAL_THROWS:\n                fileContext.visitLiteralThrows(ast);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {}
    },
    "60eacf91e616d2b6eec8c3d66a72d694da368cec": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1287: \u0027AbstractClassCouplingCheck\u0027 refactored, UT coverage improved\n",
      "commitDate": "28/07/15 9:24 PM",
      "commitName": "60eacf91e616d2b6eec8c3d66a72d694da368cec",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.PACKAGE_DEF:\n                 visitPackageDef(ast);\n                 break;\n             case TokenTypes.CLASS_DEF:\n             case TokenTypes.INTERFACE_DEF:\n             case TokenTypes.ANNOTATION_DEF:\n             case TokenTypes.ENUM_DEF:\n                 visitClassDef(ast);\n                 break;\n             case TokenTypes.TYPE:\n                 context.visitType(ast);\n                 break;\n             case TokenTypes.LITERAL_NEW:\n                 context.visitLiteralNew(ast);\n                 break;\n             case TokenTypes.LITERAL_THROWS:\n                 context.visitLiteralThrows(ast);\n                 break;\n             default:\n-                throw new IllegalStateException(ast.toString());\n+                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.PACKAGE_DEF:\n                visitPackageDef(ast);\n                break;\n            case TokenTypes.CLASS_DEF:\n            case TokenTypes.INTERFACE_DEF:\n            case TokenTypes.ANNOTATION_DEF:\n            case TokenTypes.ENUM_DEF:\n                visitClassDef(ast);\n                break;\n            case TokenTypes.TYPE:\n                context.visitType(ast);\n                break;\n            case TokenTypes.LITERAL_NEW:\n                context.visitLiteralNew(ast);\n                break;\n            case TokenTypes.LITERAL_THROWS:\n                context.visitLiteralThrows(ast);\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {}
    },
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, metrics, #512\n",
      "commitDate": "19/01/15 6:27 AM",
      "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.PACKAGE_DEF:\n-            visitPackageDef(aAST);\n+            visitPackageDef(ast);\n             break;\n         case TokenTypes.CLASS_DEF:\n         case TokenTypes.INTERFACE_DEF:\n         case TokenTypes.ANNOTATION_DEF:\n         case TokenTypes.ENUM_DEF:\n-            visitClassDef(aAST);\n+            visitClassDef(ast);\n             break;\n         case TokenTypes.TYPE:\n-            mContext.visitType(aAST);\n+            context.visitType(ast);\n             break;\n         case TokenTypes.LITERAL_NEW:\n-            mContext.visitLiteralNew(aAST);\n+            context.visitLiteralNew(ast);\n             break;\n         case TokenTypes.LITERAL_THROWS:\n-            mContext.visitLiteralThrows(aAST);\n+            context.visitLiteralThrows(ast);\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.PACKAGE_DEF:\n            visitPackageDef(ast);\n            break;\n        case TokenTypes.CLASS_DEF:\n        case TokenTypes.INTERFACE_DEF:\n        case TokenTypes.ANNOTATION_DEF:\n        case TokenTypes.ENUM_DEF:\n            visitClassDef(ast);\n            break;\n        case TokenTypes.TYPE:\n            context.visitType(ast);\n            break;\n        case TokenTypes.LITERAL_NEW:\n            context.visitLiteralNew(ast);\n            break;\n        case TokenTypes.LITERAL_THROWS:\n            context.visitLiteralThrows(ast);\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 84,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.PACKAGE_DEF:\n-            visitPackageDef(aAST);\n+            visitPackageDef(ast);\n             break;\n         case TokenTypes.CLASS_DEF:\n         case TokenTypes.INTERFACE_DEF:\n         case TokenTypes.ANNOTATION_DEF:\n         case TokenTypes.ENUM_DEF:\n-            visitClassDef(aAST);\n+            visitClassDef(ast);\n             break;\n         case TokenTypes.TYPE:\n-            mContext.visitType(aAST);\n+            context.visitType(ast);\n             break;\n         case TokenTypes.LITERAL_NEW:\n-            mContext.visitLiteralNew(aAST);\n+            context.visitLiteralNew(ast);\n             break;\n         case TokenTypes.LITERAL_THROWS:\n-            mContext.visitLiteralThrows(aAST);\n+            context.visitLiteralThrows(ast);\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.PACKAGE_DEF:\n            visitPackageDef(ast);\n            break;\n        case TokenTypes.CLASS_DEF:\n        case TokenTypes.INTERFACE_DEF:\n        case TokenTypes.ANNOTATION_DEF:\n        case TokenTypes.ENUM_DEF:\n            visitClassDef(ast);\n            break;\n        case TokenTypes.TYPE:\n            context.visitType(ast);\n            break;\n        case TokenTypes.LITERAL_NEW:\n            context.visitLiteralNew(ast);\n            break;\n        case TokenTypes.LITERAL_THROWS:\n            context.visitLiteralThrows(ast);\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.PACKAGE_DEF:\n            visitPackageDef(aAST);\n            break;\n        case TokenTypes.CLASS_DEF:\n        case TokenTypes.INTERFACE_DEF:\n        case TokenTypes.ANNOTATION_DEF:\n        case TokenTypes.ENUM_DEF:\n            visitClassDef(aAST);\n            break;\n        case TokenTypes.TYPE:\n            mContext.visitType(aAST);\n            break;\n        case TokenTypes.LITERAL_NEW:\n            mContext.visitLiteralNew(aAST);\n            break;\n        case TokenTypes.LITERAL_THROWS:\n            mContext.visitLiteralThrows(aAST);\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java"
      }
    },
    "08a286dbec6dec2a6a5bdc75e18152daf7ef77ff": {
      "type": "Ybodychange",
      "commitMessage": "ClassFanOutComplexity should treat annotations and enums as classes (bug 1109205)\n",
      "commitDate": "10/02/05 3:23 AM",
      "commitName": "08a286dbec6dec2a6a5bdc75e18152daf7ef77ff",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 32.02,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n     public void visitToken(DetailAST aAST)\n     {\n         switch (aAST.getType()) {\n         case TokenTypes.PACKAGE_DEF:\n             visitPackageDef(aAST);\n             break;\n         case TokenTypes.CLASS_DEF:\n         case TokenTypes.INTERFACE_DEF:\n+        case TokenTypes.ANNOTATION_DEF:\n+        case TokenTypes.ENUM_DEF:\n             visitClassDef(aAST);\n             break;\n         case TokenTypes.TYPE:\n             mContext.visitType(aAST);\n             break;\n         case TokenTypes.LITERAL_NEW:\n             mContext.visitLiteralNew(aAST);\n             break;\n         case TokenTypes.LITERAL_THROWS:\n             mContext.visitLiteralThrows(aAST);\n             break;\n         default:\n             throw new IllegalStateException(aAST.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.PACKAGE_DEF:\n            visitPackageDef(aAST);\n            break;\n        case TokenTypes.CLASS_DEF:\n        case TokenTypes.INTERFACE_DEF:\n        case TokenTypes.ANNOTATION_DEF:\n        case TokenTypes.ENUM_DEF:\n            visitClassDef(aAST);\n            break;\n        case TokenTypes.TYPE:\n            mContext.visitType(aAST);\n            break;\n        case TokenTypes.LITERAL_NEW:\n            mContext.visitLiteralNew(aAST);\n            break;\n        case TokenTypes.LITERAL_THROWS:\n            mContext.visitLiteralThrows(aAST);\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java",
      "extendedDetails": {}
    },
    "c044038c3b932586c0d384b614254cc2d1838838": {
      "type": "Yintroduced",
      "commitMessage": "Added NPathComplexity, ClassDataAbstractionCoupling,\nBooleanExpressionComplexity and ClassFanOutComplexity checks\ncontributed by Simon Harris (requests 750757, 750758, 750760 and\n750759).\nIsEqualsMethod() moved from CovariantEqualsCheck to ChecUtils.\n\nTODO: add documentation.\n",
      "commitDate": "02/01/04 12:05 AM",
      "commitName": "c044038c3b932586c0d384b614254cc2d1838838",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,23 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+        case TokenTypes.PACKAGE_DEF:\n+            visitPackageDef(aAST);\n+            break;\n+        case TokenTypes.CLASS_DEF:\n+        case TokenTypes.INTERFACE_DEF:\n+            visitClassDef(aAST);\n+            break;\n+        case TokenTypes.TYPE:\n+            mContext.visitType(aAST);\n+            break;\n+        case TokenTypes.LITERAL_NEW:\n+            mContext.visitLiteralNew(aAST);\n+            break;\n+        case TokenTypes.LITERAL_THROWS:\n+            mContext.visitLiteralThrows(aAST);\n+            break;\n+        default:\n+            throw new IllegalStateException(aAST.toString());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.PACKAGE_DEF:\n            visitPackageDef(aAST);\n            break;\n        case TokenTypes.CLASS_DEF:\n        case TokenTypes.INTERFACE_DEF:\n            visitClassDef(aAST);\n            break;\n        case TokenTypes.TYPE:\n            mContext.visitType(aAST);\n            break;\n        case TokenTypes.LITERAL_NEW:\n            mContext.visitLiteralNew(aAST);\n            break;\n        case TokenTypes.LITERAL_THROWS:\n            mContext.visitLiteralThrows(aAST);\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/AbstractClassCouplingCheck.java"
    }
  }
}