{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FinalParametersCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
  "functionStartLine": 150,
  "functionEndLine": 164,
  "numCommitsSeen": 68,
  "timeTaken": 1490,
  "changeHistory": [
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "6125beffc437f970eae276b4a6542265c6547784",
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8",
    "829a44bde41c971bcb61e5f476e222d2896e519f",
    "f313f31ab30308796ce76d167ad1f08e79e28fdd"
  ],
  "changeHistoryShort": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8": "Ybodychange",
    "829a44bde41c971bcb61e5f476e222d2896e519f": "Ybodychange",
    "f313f31ab30308796ce76d167ad1f08e79e28fdd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/03/16 6:39 AM",
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 71.0,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     public void visitToken(DetailAST ast) {\n         // don\u0027t flag interfaces\n         final DetailAST container \u003d ast.getParent().getParent();\n-        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n-            return;\n-        }\n-\n-        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n-            visitCatch(ast);\n-        }\n-        else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n-            visitForEachClause(ast);\n-        }\n-        else {\n-            visitMethod(ast);\n+        if (container.getType() !\u003d TokenTypes.INTERFACE_DEF) {\n+            if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+                visitCatch(ast);\n+            }\n+            else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n+                visitForEachClause(ast);\n+            }\n+            else {\n+                visitMethod(ast);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d ast.getParent().getParent();\n        if (container.getType() !\u003d TokenTypes.INTERFACE_DEF) {\n            if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n                visitCatch(ast);\n            }\n            else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n                visitForEachClause(ast);\n            }\n            else {\n                visitMethod(ast);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/12/14 8:09 AM",
          "commitNameOld": "49ae6cf81b5acd6ad427806ab13629e45f6a5ece",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 27.94,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n         // don\u0027t flag interfaces\n-        final DetailAST container \u003d aAST.getParent().getParent();\n+        final DetailAST container \u003d ast.getParent().getParent();\n         if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n             return;\n         }\n \n-        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n-            visitCatch(aAST);\n+        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+            visitCatch(ast);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n-            visitForEachClause(aAST);\n+        else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n+            visitForEachClause(ast);\n         }\n         else {\n-            visitMethod(aAST);\n+            visitMethod(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d ast.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n            visitCatch(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n            visitForEachClause(ast);\n        }\n        else {\n            visitMethod(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/12/14 8:09 AM",
          "commitNameOld": "49ae6cf81b5acd6ad427806ab13629e45f6a5ece",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 27.94,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n         // don\u0027t flag interfaces\n-        final DetailAST container \u003d aAST.getParent().getParent();\n+        final DetailAST container \u003d ast.getParent().getParent();\n         if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n             return;\n         }\n \n-        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n-            visitCatch(aAST);\n+        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+            visitCatch(ast);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n-            visitForEachClause(aAST);\n+        else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n+            visitForEachClause(ast);\n         }\n         else {\n-            visitMethod(aAST);\n+            visitMethod(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d ast.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        if (ast.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n            visitCatch(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n            visitForEachClause(ast);\n        }\n        else {\n            visitMethod(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d aAST.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n            visitCatch(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n            visitForEachClause(aAST);\n        }\n        else {\n            visitMethod(aAST);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java"
      }
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": "27/09/04 11:55 AM",
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "26/08/04 6:34 AM",
      "commitNameOld": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 32.22,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,18 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // don\u0027t flag interfaces\n         final DetailAST container \u003d aAST.getParent().getParent();\n         if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n             return;\n         }\n \n         if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n             visitCatch(aAST);\n         }\n+        else if (aAST.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n+            visitForEachClause(aAST);\n+        }\n         else {\n             visitMethod(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d aAST.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n            visitCatch(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.FOR_EACH_CLAUSE) {\n            visitForEachClause(aAST);\n        }\n        else {\n            visitMethod(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "0b4c120056f3b1f0a1780fe19932f4015223d0a8": {
      "type": "Ybodychange",
      "commitMessage": "Several improvements of FinalParameter check.\nFixed bug #864900 - Wrong column for method parameters in FinalParametersCheck\nAdded I18N support.\nImplemented FRE #848820 - Final Catch Parameter.\n",
      "commitDate": "29/12/03 8:16 PM",
      "commitName": "0b4c120056f3b1f0a1780fe19932f4015223d0a8",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/06/03 12:48 AM",
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 203.85,
      "commitsBetweenForRepo": 283,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,15 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // don\u0027t flag interfaces\n         final DetailAST container \u003d aAST.getParent().getParent();\n         if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n             return;\n         }\n \n-        // exit on fast lane if there is nothing to check here\n-        if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {\n-            return;\n+        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n+            visitCatch(aAST);\n         }\n-\n-        // we can now be sure that there is at least one parameter\n-\n-        DetailAST parameters \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n-        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n-        while (child !\u003d null) {\n-            // childs are PARAMETER_DEF and COMMA\n-            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF\n-                    \u0026\u0026 !child.branchContains(TokenTypes.FINAL))\n-            {\n-                DetailAST paramName \u003d child.findFirstToken(TokenTypes.IDENT);\n-                // TODO: i18n\n-                log(child.getLineNo(), child.getColumnNo(),\n-                    \"Parameter \" + paramName.getText() + \" should be final.\");\n-            }\n-            child \u003d (DetailAST) child.getNextSibling();\n+        else {\n+            visitMethod(aAST);\n         }\n-\n-\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d aAST.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        if (aAST.getType() \u003d\u003d TokenTypes.LITERAL_CATCH) {\n            visitCatch(aAST);\n        }\n        else {\n            visitMethod(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "829a44bde41c971bcb61e5f476e222d2896e519f": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug where non-final method params were not flagged in anon inner classes\n",
      "commitDate": "02/02/03 3:37 AM",
      "commitName": "829a44bde41c971bcb61e5f476e222d2896e519f",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "02/02/03 12:06 AM",
      "commitNameOld": "f313f31ab30308796ce76d167ad1f08e79e28fdd",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(DetailAST aAST)\n     {\n         // don\u0027t flag interfaces\n         final DetailAST container \u003d aAST.getParent().getParent();\n-        if (container.getType() !\u003d TokenTypes.CLASS_DEF) {\n+        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n             return;\n         }\n \n         // exit on fast lane if there is nothing to check here\n         if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {\n             return;\n         }\n \n         // we can now be sure that there is at least one parameter\n \n         DetailAST parameters \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n         DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n         while (child !\u003d null) {\n             // childs are PARAMETER_DEF and COMMA\n             if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF\n                     \u0026\u0026 !child.branchContains(TokenTypes.FINAL))\n             {\n                 DetailAST paramName \u003d child.findFirstToken(TokenTypes.IDENT);\n                 // TODO: i18n\n                 log(child.getLineNo(), child.getColumnNo(),\n                     \"Parameter \" + paramName.getText() + \" should be final.\");\n             }\n             child \u003d (DetailAST) child.getNextSibling();\n         }\n \n \n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d aAST.getParent().getParent();\n        if (container.getType() \u003d\u003d TokenTypes.INTERFACE_DEF) {\n            return;\n        }\n\n        // exit on fast lane if there is nothing to check here\n        if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n\n        DetailAST parameters \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF\n                    \u0026\u0026 !child.branchContains(TokenTypes.FINAL))\n            {\n                DetailAST paramName \u003d child.findFirstToken(TokenTypes.IDENT);\n                // TODO: i18n\n                log(child.getLineNo(), child.getColumnNo(),\n                    \"Parameter \" + paramName.getText() + \" should be final.\");\n            }\n            child \u003d (DetailAST) child.getNextSibling();\n        }\n\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java",
      "extendedDetails": {}
    },
    "f313f31ab30308796ce76d167ad1f08e79e28fdd": {
      "type": "Yintroduced",
      "commitMessage": "initial implementation of RFE #528196.\n- no JUnit tests\n- Untested on anonymous classes\n- undocumented\n- not internationalized\n",
      "commitDate": "02/02/03 12:06 AM",
      "commitName": "f313f31ab30308796ce76d167ad1f08e79e28fdd",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,32 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        // don\u0027t flag interfaces\n+        final DetailAST container \u003d aAST.getParent().getParent();\n+        if (container.getType() !\u003d TokenTypes.CLASS_DEF) {\n+            return;\n+        }\n+\n+        // exit on fast lane if there is nothing to check here\n+        if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {\n+            return;\n+        }\n+\n+        // we can now be sure that there is at least one parameter\n+\n+        DetailAST parameters \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n+        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n+        while (child !\u003d null) {\n+            // childs are PARAMETER_DEF and COMMA\n+            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF\n+                    \u0026\u0026 !child.branchContains(TokenTypes.FINAL))\n+            {\n+                DetailAST paramName \u003d child.findFirstToken(TokenTypes.IDENT);\n+                // TODO: i18n\n+                log(child.getLineNo(), child.getColumnNo(),\n+                    \"Parameter \" + paramName.getText() + \" should be final.\");\n+            }\n+            child \u003d (DetailAST) child.getNextSibling();\n+        }\n+\n+\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        // don\u0027t flag interfaces\n        final DetailAST container \u003d aAST.getParent().getParent();\n        if (container.getType() !\u003d TokenTypes.CLASS_DEF) {\n            return;\n        }\n\n        // exit on fast lane if there is nothing to check here\n        if (!aAST.branchContains(TokenTypes.PARAMETER_DEF)) {\n            return;\n        }\n\n        // we can now be sure that there is at least one parameter\n\n        DetailAST parameters \u003d aAST.findFirstToken(TokenTypes.PARAMETERS);\n        DetailAST child \u003d (DetailAST) parameters.getFirstChild();\n        while (child !\u003d null) {\n            // childs are PARAMETER_DEF and COMMA\n            if (child.getType() \u003d\u003d TokenTypes.PARAMETER_DEF\n                    \u0026\u0026 !child.branchContains(TokenTypes.FINAL))\n            {\n                DetailAST paramName \u003d child.findFirstToken(TokenTypes.IDENT);\n                // TODO: i18n\n                log(child.getLineNo(), child.getColumnNo(),\n                    \"Parameter \" + paramName.getText() + \" should be final.\");\n            }\n            child \u003d (DetailAST) child.getNextSibling();\n        }\n\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FinalParametersCheck.java"
    }
  }
}