{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DeclarationOrderCheck.java",
  "functionName": "processModifiersState",
  "functionId": "processModifiersState___modifierAst-DetailAST__state-ScopeState",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java",
  "functionStartLine": 280,
  "functionEndLine": 305,
  "numCommitsSeen": 58,
  "timeTaken": 584,
  "changeHistory": [
    "420a4908dad850554e3a093cde5ebc92878cbba7"
  ],
  "changeHistoryShort": {
    "420a4908dad850554e3a093cde5ebc92878cbba7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "420a4908dad850554e3a093cde5ebc92878cbba7": {
      "type": "Yintroduced",
      "commitMessage": "Issue #1048: Duplicate error message for static final field in DeclarationOrderCheck\n",
      "commitDate": "17/02/16 6:18 AM",
      "commitName": "420a4908dad850554e3a093cde5ebc92878cbba7",
      "commitAuthor": "liscju",
      "diff": "@@ -0,0 +1,26 @@\n+    private boolean processModifiersState(DetailAST modifierAst, ScopeState state) {\n+        boolean isStateValid \u003d true;\n+        if (modifierAst.findFirstToken(TokenTypes.LITERAL_STATIC) \u003d\u003d null) {\n+            if (state.currentScopeState \u003e STATE_INSTANCE_VARIABLE_DEF) {\n+                isStateValid \u003d false;\n+                log(modifierAst, MSG_INSTANCE);\n+            }\n+            else if (state.currentScopeState \u003d\u003d STATE_STATIC_VARIABLE_DEF) {\n+                state.declarationAccess \u003d Scope.PUBLIC;\n+                state.currentScopeState \u003d STATE_INSTANCE_VARIABLE_DEF;\n+            }\n+        }\n+        else {\n+            if (state.currentScopeState \u003e STATE_STATIC_VARIABLE_DEF) {\n+                if (!ignoreModifiers\n+                        || state.currentScopeState \u003e STATE_INSTANCE_VARIABLE_DEF) {\n+                    isStateValid \u003d false;\n+                    log(modifierAst, MSG_STATIC);\n+                }\n+            }\n+            else {\n+                state.currentScopeState \u003d STATE_STATIC_VARIABLE_DEF;\n+            }\n+        }\n+        return isStateValid;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean processModifiersState(DetailAST modifierAst, ScopeState state) {\n        boolean isStateValid \u003d true;\n        if (modifierAst.findFirstToken(TokenTypes.LITERAL_STATIC) \u003d\u003d null) {\n            if (state.currentScopeState \u003e STATE_INSTANCE_VARIABLE_DEF) {\n                isStateValid \u003d false;\n                log(modifierAst, MSG_INSTANCE);\n            }\n            else if (state.currentScopeState \u003d\u003d STATE_STATIC_VARIABLE_DEF) {\n                state.declarationAccess \u003d Scope.PUBLIC;\n                state.currentScopeState \u003d STATE_INSTANCE_VARIABLE_DEF;\n            }\n        }\n        else {\n            if (state.currentScopeState \u003e STATE_STATIC_VARIABLE_DEF) {\n                if (!ignoreModifiers\n                        || state.currentScopeState \u003e STATE_INSTANCE_VARIABLE_DEF) {\n                    isStateValid \u003d false;\n                    log(modifierAst, MSG_STATIC);\n                }\n            }\n            else {\n                state.currentScopeState \u003d STATE_STATIC_VARIABLE_DEF;\n            }\n        }\n        return isStateValid;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/DeclarationOrderCheck.java"
    }
  }
}