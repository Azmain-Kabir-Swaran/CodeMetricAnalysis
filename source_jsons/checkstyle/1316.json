{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TodoCommentCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
  "functionStartLine": 125,
  "functionEndLine": 133,
  "numCommitsSeen": 34,
  "timeTaken": 978,
  "changeHistory": [
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
    "5ede09997c283b4c418f0f540848e006be04fa87",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "3bd25d71c993420cfeb4782530882d1cdb620fca"
  ],
  "changeHistoryShort": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": "Ybodychange",
    "5ede09997c283b4c418f0f540848e006be04fa87": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "3bd25d71c993420cfeb4782530882d1cdb620fca": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3255: removed unnecessary string fields for patterns",
      "commitDate": "10/11/16 10:34 AM",
      "commitName": "a963f8a21bd47624ec9f1eea72c9326e2ca01c8a",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/16 4:34 AM",
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.25,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void visitToken(DetailAST ast) {\n         final String[] lines \u003d ast.getText().split(\"\\n\");\n \n         for (int i \u003d 0; i \u003c lines.length; i++) {\n-            if (regexp.matcher(lines[i]).find()) {\n-                log(ast.getLineNo() + i, MSG_KEY, format);\n+            if (format.matcher(lines[i]).find()) {\n+                log(ast.getLineNo() + i, MSG_KEY, format.pattern());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final String[] lines \u003d ast.getText().split(\"\\n\");\n\n        for (int i \u003d 0; i \u003c lines.length; i++) {\n            if (format.matcher(lines[i]).find()) {\n                log(ast.getLineNo() + i, MSG_KEY, format.pattern());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
      "extendedDetails": {}
    },
    "5ede09997c283b4c418f0f540848e006be04fa87": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, checks package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "5ede09997c283b4c418f0f540848e006be04fa87",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void visitToken(DetailAST ast)\n     {\n         final String[] lines \u003d ast.getText().split(\"\\n\");\n \n         for (int i \u003d 0; i \u003c lines.length; i++) {\n             if (regexp.matcher(lines[i]).find()) {\n-                log(ast.getLineNo() + i, \"todo.match\", format);\n+                log(ast.getLineNo() + i, MSG_KEY, format);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final String[] lines \u003d ast.getText().split(\"\\n\");\n\n        for (int i \u003d 0; i \u003c lines.length; i++) {\n            if (regexp.matcher(lines[i]).find()) {\n                log(ast.getLineNo() + i, MSG_KEY, format);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/10/14 10:19 PM",
          "commitNameOld": "3bd25d71c993420cfeb4782530882d1cdb620fca",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 93.39,
          "commitsBetweenForRepo": 291,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final String[] lines \u003d aAST.getText().split(\"\\n\");\n+        final String[] lines \u003d ast.getText().split(\"\\n\");\n \n         for (int i \u003d 0; i \u003c lines.length; i++) {\n-            if (mRegexp.matcher(lines[i]).find()) {\n-                log(aAST.getLineNo() + i, \"todo.match\", mFormat);\n+            if (regexp.matcher(lines[i]).find()) {\n+                log(ast.getLineNo() + i, \"todo.match\", format);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final String[] lines \u003d ast.getText().split(\"\\n\");\n\n        for (int i \u003d 0; i \u003c lines.length; i++) {\n            if (regexp.matcher(lines[i]).find()) {\n                log(ast.getLineNo() + i, \"todo.match\", format);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/10/14 10:19 PM",
          "commitNameOld": "3bd25d71c993420cfeb4782530882d1cdb620fca",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 93.39,
          "commitsBetweenForRepo": 291,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final String[] lines \u003d aAST.getText().split(\"\\n\");\n+        final String[] lines \u003d ast.getText().split(\"\\n\");\n \n         for (int i \u003d 0; i \u003c lines.length; i++) {\n-            if (mRegexp.matcher(lines[i]).find()) {\n-                log(aAST.getLineNo() + i, \"todo.match\", mFormat);\n+            if (regexp.matcher(lines[i]).find()) {\n+                log(ast.getLineNo() + i, \"todo.match\", format);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final String[] lines \u003d ast.getText().split(\"\\n\");\n\n        for (int i \u003d 0; i \u003c lines.length; i++) {\n            if (regexp.matcher(lines[i]).find()) {\n                log(ast.getLineNo() + i, \"todo.match\", format);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "3bd25d71c993420cfeb4782530882d1cdb620fca": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Edited TodoCommentCheck to use new comment nodes in AST\n",
      "commitDate": "17/10/14 10:19 PM",
      "commitName": "3bd25d71c993420cfeb4782530882d1cdb620fca",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,10 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        final String[] lines \u003d aAST.getText().split(\"\\n\");\n+\n+        for (int i \u003d 0; i \u003c lines.length; i++) {\n+            if (mRegexp.matcher(lines[i]).find()) {\n+                log(aAST.getLineNo() + i, \"todo.match\", mFormat);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final String[] lines \u003d aAST.getText().split(\"\\n\");\n\n        for (int i \u003d 0; i \u003c lines.length; i++) {\n            if (mRegexp.matcher(lines[i]).find()) {\n                log(aAST.getLineNo() + i, \"todo.match\", mFormat);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/TodoCommentCheck.java"
    }
  }
}