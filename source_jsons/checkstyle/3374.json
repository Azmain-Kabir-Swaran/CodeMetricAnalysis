{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XpathUtil.java",
  "functionName": "printXpathBranch",
  "functionId": "printXpathBranch___xpath-String__file-File",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/XpathUtil.java",
  "functionStartLine": 144,
  "functionEndLine": 164,
  "numCommitsSeen": 4,
  "timeTaken": 714,
  "changeHistory": [
    "5ed866347e51cac0a4835d93467908d2910a4b8f"
  ],
  "changeHistoryShort": {
    "5ed866347e51cac0a4835d93467908d2910a4b8f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ed866347e51cac0a4835d93467908d2910a4b8f": {
      "type": "Yintroduced",
      "commitMessage": "Issue #6660: add xpath branch print\n",
      "commitDate": "08/09/19 6:04 AM",
      "commitName": "5ed866347e51cac0a4835d93467908d2910a4b8f",
      "commitAuthor": "Andrei Paikin",
      "diff": "@@ -0,0 +1,21 @@\n+    public static String printXpathBranch(String xpath, File file) throws CheckstyleException,\n+            IOException {\n+        final XPathEvaluator xpathEvaluator \u003d new XPathEvaluator();\n+        try {\n+            final RootNode rootNode \u003d new RootNode(JavaParser.parseFile(file,\n+                JavaParser.Options.WITH_COMMENTS));\n+            final XPathExpression xpathExpression \u003d xpathEvaluator.createExpression(xpath);\n+            final XPathDynamicContext xpathDynamicContext \u003d\n+                xpathExpression.createDynamicContext(rootNode);\n+            final List\u003cItem\u003c?\u003e\u003e matchingItems \u003d xpathExpression.evaluate(xpathDynamicContext);\n+            return matchingItems.stream()\n+                .map(item -\u003e ((AbstractNode) item).getUnderlyingNode())\n+                .map(AstTreeStringPrinter::printBranch)\n+                .collect(Collectors.joining(DELIMITER));\n+        }\n+        catch (XPathException ex) {\n+            final String errMsg \u003d String.format(Locale.ROOT,\n+                \"Error during evaluation for xpath: %s, file: %s\", xpath, file.getCanonicalPath());\n+            throw new CheckstyleException(errMsg, ex);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printXpathBranch(String xpath, File file) throws CheckstyleException,\n            IOException {\n        final XPathEvaluator xpathEvaluator \u003d new XPathEvaluator();\n        try {\n            final RootNode rootNode \u003d new RootNode(JavaParser.parseFile(file,\n                JavaParser.Options.WITH_COMMENTS));\n            final XPathExpression xpathExpression \u003d xpathEvaluator.createExpression(xpath);\n            final XPathDynamicContext xpathDynamicContext \u003d\n                xpathExpression.createDynamicContext(rootNode);\n            final List\u003cItem\u003c?\u003e\u003e matchingItems \u003d xpathExpression.evaluate(xpathDynamicContext);\n            return matchingItems.stream()\n                .map(item -\u003e ((AbstractNode) item).getUnderlyingNode())\n                .map(AstTreeStringPrinter::printBranch)\n                .collect(Collectors.joining(DELIMITER));\n        }\n        catch (XPathException ex) {\n            final String errMsg \u003d String.format(Locale.ROOT,\n                \"Error during evaluation for xpath: %s, file: %s\", xpath, file.getCanonicalPath());\n            throw new CheckstyleException(errMsg, ex);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/XpathUtil.java"
    }
  }
}