{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OneStatementPerLineCheck.java",
  "functionName": "getAcceptableTokens",
  "functionId": "getAcceptableTokens",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java",
  "functionStartLine": 177,
  "functionEndLine": 179,
  "numCommitsSeen": 34,
  "timeTaken": 1687,
  "changeHistory": [
    "32e2b7ba57e189074662d84a04535a87c3a19b0c",
    "af047afee8216a4b0db9027dd013a1aad2be9494",
    "b405880b6e79f143c3ba3651fe6c8b68324fca51",
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e"
  ],
  "changeHistoryShort": {
    "32e2b7ba57e189074662d84a04535a87c3a19b0c": "Ybodychange",
    "af047afee8216a4b0db9027dd013a1aad2be9494": "Ybodychange",
    "b405880b6e79f143c3ba3651fe6c8b68324fca51": "Ybodychange",
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32e2b7ba57e189074662d84a04535a87c3a19b0c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4581: Reorganize token methods in coding, imports, indentation folders\n",
      "commitDate": "14/11/17 5:16 PM",
      "commitName": "32e2b7ba57e189074662d84a04535a87c3a19b0c",
      "commitAuthor": "Subbu Dantu",
      "commitDateOld": "30/10/17 6:16 PM",
      "commitNameOld": "5cdbb191a17c65c2956b35d71513e9b59b6d2166",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 15.0,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,3 @@\n     public int[] getAcceptableTokens() {\n-        return new int[] {\n-            TokenTypes.SEMI,\n-            TokenTypes.FOR_INIT,\n-            TokenTypes.FOR_ITERATOR,\n-            TokenTypes.LAMBDA,\n-        };\n+        return getRequiredTokens();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens() {\n        return getRequiredTokens();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java",
      "extendedDetails": {}
    },
    "af047afee8216a4b0db9027dd013a1aad2be9494": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2688: Fix OneStatementPerLine lambda validation\n",
      "commitDate": "01/01/16 11:21 AM",
      "commitName": "af047afee8216a4b0db9027dd013a1aad2be9494",
      "commitAuthor": "liscju",
      "commitDateOld": "24/12/15 1:59 PM",
      "commitNameOld": "6ee4a0f805d528cdee03cfc175502d15b5722dab",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 7.89,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,8 @@\n     public int[] getAcceptableTokens() {\n         return new int[] {\n-            TokenTypes.SEMI, TokenTypes.FOR_INIT,\n+            TokenTypes.SEMI,\n+            TokenTypes.FOR_INIT,\n             TokenTypes.FOR_ITERATOR,\n+            TokenTypes.LAMBDA,\n         };\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens() {\n        return new int[] {\n            TokenTypes.SEMI,\n            TokenTypes.FOR_INIT,\n            TokenTypes.FOR_ITERATOR,\n            TokenTypes.LAMBDA,\n        };\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java",
      "extendedDetails": {}
    },
    "b405880b6e79f143c3ba3651fe6c8b68324fca51": {
      "type": "Ybodychange",
      "commitMessage": "Fix OneStatementPerLine on multiple field initialization bug, issue #1237.\n",
      "commitDate": "09/07/15 5:33 PM",
      "commitName": "b405880b6e79f143c3ba3651fe6c8b68324fca51",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 53.53,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     public int[] getAcceptableTokens() {\n-        return new int[] {\n-            TokenTypes.EXPR, TokenTypes.SEMI, TokenTypes.FOR_INIT,\n+        return new int[]{\n+            TokenTypes.SEMI, TokenTypes.FOR_INIT,\n             TokenTypes.FOR_ITERATOR,\n         };\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens() {\n        return new int[]{\n            TokenTypes.SEMI, TokenTypes.FOR_INIT,\n            TokenTypes.FOR_ITERATOR,\n        };\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java",
      "extendedDetails": {}
    },
    "abe2b200312ee72aa552026b1a34e8bd72bfdc4e": {
      "type": "Yintroduced",
      "commitMessage": "Acceptable tokens are specified for all checks, issue #342\n",
      "commitDate": "08/02/15 1:46 PM",
      "commitName": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthor": "alexkravin",
      "diff": "@@ -0,0 +1,7 @@\n+    public int[] getAcceptableTokens()\n+    {\n+        return new int[] {\n+            TokenTypes.EXPR, TokenTypes.SEMI, TokenTypes.FOR_INIT,\n+            TokenTypes.FOR_ITERATOR,\n+        };\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public int[] getAcceptableTokens()\n    {\n        return new int[] {\n            TokenTypes.EXPR, TokenTypes.SEMI, TokenTypes.FOR_INIT,\n            TokenTypes.FOR_ITERATOR,\n        };\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/OneStatementPerLineCheck.java"
    }
  }
}