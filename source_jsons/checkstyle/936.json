{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ListToTreeSelectionModelWrapper.java",
  "functionName": "updateSelectedPathsFromSelectedRows",
  "functionId": "updateSelectedPathsFromSelectedRows",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
  "functionStartLine": 92,
  "functionEndLine": 112,
  "numCommitsSeen": 70,
  "timeTaken": 1620,
  "changeHistory": [
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
    "fca2fd4d07ad057664ec43b83a3835693a1b1c88",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8"
  ],
  "changeHistoryShort": {
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": "Ymodifierchange",
    "fca2fd4d07ad057664ec43b83a3835693a1b1c88": "Ymultichange(Ymovefromfile,Ybodychange)",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8142c804e90f6d24a3a5db736f3f1f576766a9a5": {
      "type": "Ymodifierchange",
      "commitMessage": "Decrease visibility of fields and methods where applicable. #1555\n\nFixes some `WeakerAccess` inspection violations.\n\nDescription:\n\u003eThis inspection reports all fields, methods or classes, found in the specified inspection scope, that may have their access modifier narrowed down.\n",
      "commitDate": "27/08/15 12:52 PM",
      "commitName": "8142c804e90f6d24a3a5db736f3f1f576766a9a5",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "25/08/15 4:39 AM",
      "commitNameOld": "d345f3beb27f3d8e3fde06f7e2c7612ddf691b95",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-    protected void updateSelectedPathsFromSelectedRows() {\n+    private void updateSelectedPathsFromSelectedRows() {\n         if (!updatingListSelectionModel) {\n             updatingListSelectionModel \u003d true;\n             try {\n                 // This is way expensive, ListSelectionModel needs an\n                 // enumerator for iterating.\n                 final int min \u003d listSelectionModel.getMinSelectionIndex();\n                 final int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n                 clearSelection();\n                 if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                     for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                         updateSelectedPathIfRowIsSelected(counter);\n                     }\n                 }\n             }\n             finally {\n                 updatingListSelectionModel \u003d false;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void updateSelectedPathsFromSelectedRows() {\n        if (!updatingListSelectionModel) {\n            updatingListSelectionModel \u003d true;\n            try {\n                // This is way expensive, ListSelectionModel needs an\n                // enumerator for iterating.\n                final int min \u003d listSelectionModel.getMinSelectionIndex();\n                final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                clearSelection();\n                if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                    for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                        updateSelectedPathIfRowIsSelected(counter);\n                    }\n                }\n            }\n            finally {\n                updatingListSelectionModel \u003d false;\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "fca2fd4d07ad057664ec43b83a3835693a1b1c88": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Extract nested class with other class nested to separate file. #1555\n\nFixes `ClassNestingDepth` inspection violation.\n\nDescription:\n\u003eReports inner classes too deeply nested. Nesting inner classes inside inner classes is almost certain to be confusing, and is a good sign that refactoring may be necessary.\n",
      "commitDate": "11/08/15 10:01 PM",
      "commitName": "fca2fd4d07ad057664ec43b83a3835693a1b1c88",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Extract nested class with other class nested to separate file. #1555\n\nFixes `ClassNestingDepth` inspection violation.\n\nDescription:\n\u003eReports inner classes too deeply nested. Nesting inner classes inside inner classes is almost certain to be confusing, and is a good sign that refactoring may be necessary.\n",
          "commitDate": "11/08/15 10:01 PM",
          "commitName": "fca2fd4d07ad057664ec43b83a3835693a1b1c88",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "11/08/15 10:00 PM",
          "commitNameOld": "ea06b2fb96f2120ceee04a998021c1dc752e25d3",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,21 @@\n-        protected void updateSelectedPathsFromSelectedRows() {\n-            if (!updatingListSelectionModel) {\n-                updatingListSelectionModel \u003d true;\n-                try {\n-                    // This is way expensive, ListSelectionModel needs an\n-                    // enumerator for iterating.\n-                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n-                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n+    protected void updateSelectedPathsFromSelectedRows() {\n+        if (!updatingListSelectionModel) {\n+            updatingListSelectionModel \u003d true;\n+            try {\n+                // This is way expensive, ListSelectionModel needs an\n+                // enumerator for iterating.\n+                final int min \u003d listSelectionModel.getMinSelectionIndex();\n+                final int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n-                    clearSelection();\n-                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n-                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n-                            if (listSelectionModel.isSelectedIndex(counter)) {\n-                                final TreePath selPath \u003d tree.getPathForRow(counter);\n-\n-                                if (selPath !\u003d null) {\n-                                    addSelectionPath(selPath);\n-                                }\n-                            }\n-                        }\n+                clearSelection();\n+                if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n+                    for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n+                        updateSelectedPathIfRowIsSelected(counter);\n                     }\n                 }\n-                finally {\n-                    updatingListSelectionModel \u003d false;\n-                }\n             }\n-        }\n\\ No newline at end of file\n+            finally {\n+                updatingListSelectionModel \u003d false;\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    protected void updateSelectedPathsFromSelectedRows() {\n        if (!updatingListSelectionModel) {\n            updatingListSelectionModel \u003d true;\n            try {\n                // This is way expensive, ListSelectionModel needs an\n                // enumerator for iterating.\n                final int min \u003d listSelectionModel.getMinSelectionIndex();\n                final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                clearSelection();\n                if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                    for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                        updateSelectedPathIfRowIsSelected(counter);\n                    }\n                }\n            }\n            finally {\n                updatingListSelectionModel \u003d false;\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
            "oldMethodName": "updateSelectedPathsFromSelectedRows",
            "newMethodName": "updateSelectedPathsFromSelectedRows"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Extract nested class with other class nested to separate file. #1555\n\nFixes `ClassNestingDepth` inspection violation.\n\nDescription:\n\u003eReports inner classes too deeply nested. Nesting inner classes inside inner classes is almost certain to be confusing, and is a good sign that refactoring may be necessary.\n",
          "commitDate": "11/08/15 10:01 PM",
          "commitName": "fca2fd4d07ad057664ec43b83a3835693a1b1c88",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "11/08/15 10:00 PM",
          "commitNameOld": "ea06b2fb96f2120ceee04a998021c1dc752e25d3",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,21 @@\n-        protected void updateSelectedPathsFromSelectedRows() {\n-            if (!updatingListSelectionModel) {\n-                updatingListSelectionModel \u003d true;\n-                try {\n-                    // This is way expensive, ListSelectionModel needs an\n-                    // enumerator for iterating.\n-                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n-                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n+    protected void updateSelectedPathsFromSelectedRows() {\n+        if (!updatingListSelectionModel) {\n+            updatingListSelectionModel \u003d true;\n+            try {\n+                // This is way expensive, ListSelectionModel needs an\n+                // enumerator for iterating.\n+                final int min \u003d listSelectionModel.getMinSelectionIndex();\n+                final int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n-                    clearSelection();\n-                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n-                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n-                            if (listSelectionModel.isSelectedIndex(counter)) {\n-                                final TreePath selPath \u003d tree.getPathForRow(counter);\n-\n-                                if (selPath !\u003d null) {\n-                                    addSelectionPath(selPath);\n-                                }\n-                            }\n-                        }\n+                clearSelection();\n+                if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n+                    for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n+                        updateSelectedPathIfRowIsSelected(counter);\n                     }\n                 }\n-                finally {\n-                    updatingListSelectionModel \u003d false;\n-                }\n             }\n-        }\n\\ No newline at end of file\n+            finally {\n+                updatingListSelectionModel \u003d false;\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    protected void updateSelectedPathsFromSelectedRows() {\n        if (!updatingListSelectionModel) {\n            updatingListSelectionModel \u003d true;\n            try {\n                // This is way expensive, ListSelectionModel needs an\n                // enumerator for iterating.\n                final int min \u003d listSelectionModel.getMinSelectionIndex();\n                final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                clearSelection();\n                if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                    for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                        updateSelectedPathIfRowIsSelected(counter);\n                    }\n                }\n            }\n            finally {\n                updatingListSelectionModel \u003d false;\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/ListToTreeSelectionModelWrapper.java",
          "extendedDetails": {}
        }
      ]
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "09/01/15 8:44 AM",
      "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 60.2,
      "commitsBetweenForRepo": 207,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n         protected void updateSelectedPathsFromSelectedRows()\n         {\n             if (!updatingListSelectionModel) {\n                 updatingListSelectionModel \u003d true;\n                 try {\n                     // This is way expensive, ListSelectionModel needs an\n                     // enumerator for iterating.\n                     final int min \u003d listSelectionModel.getMinSelectionIndex();\n                     final int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n                     clearSelection();\n-                    if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n+                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                         for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                             if (listSelectionModel.isSelectedIndex(counter)) {\n                                 final TreePath selPath \u003d tree.getPathForRow\n                                         (counter);\n \n                                 if (selPath !\u003d null) {\n                                     addSelectionPath(selPath);\n                                 }\n                             }\n                         }\n                     }\n                 } finally {\n                     updatingListSelectionModel \u003d false;\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        protected void updateSelectedPathsFromSelectedRows()\n        {\n            if (!updatingListSelectionModel) {\n                updatingListSelectionModel \u003d true;\n                try {\n                    // This is way expensive, ListSelectionModel needs an\n                    // enumerator for iterating.\n                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                    clearSelection();\n                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                            if (listSelectionModel.isSelectedIndex(counter)) {\n                                final TreePath selPath \u003d tree.getPathForRow\n                                        (counter);\n\n                                if (selPath !\u003d null) {\n                                    addSelectionPath(selPath);\n                                }\n                            }\n                        }\n                    }\n                } finally {\n                    updatingListSelectionModel \u003d false;\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "        protected void updateSelectedPathsFromSelectedRows()\n        {\n            if (!updatingListSelectionModel) {\n                updatingListSelectionModel \u003d true;\n                try {\n                    // This is way expensive, ListSelectionModel needs an\n                    // enumerator for iterating.\n                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                    clearSelection();\n                    if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                            if (listSelectionModel.isSelectedIndex(counter)) {\n                                final TreePath selPath \u003d tree.getPathForRow\n                                        (counter);\n\n                                if (selPath !\u003d null) {\n                                    addSelectionPath(selPath);\n                                }\n                            }\n                        }\n                    }\n                } finally {\n                    updatingListSelectionModel \u003d false;\n                }\n            }\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java"
      }
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n         protected void updateSelectedPathsFromSelectedRows()\n         {\n             if (!updatingListSelectionModel) {\n                 updatingListSelectionModel \u003d true;\n                 try {\n                     // This is way expensive, ListSelectionModel needs an\n                     // enumerator for iterating.\n-                    int min \u003d listSelectionModel.getMinSelectionIndex();\n-                    int max \u003d listSelectionModel.getMaxSelectionIndex();\n+                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n+                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n                     clearSelection();\n                     if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n                         for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                             if (listSelectionModel.isSelectedIndex(counter)) {\n-                                TreePath selPath \u003d tree.getPathForRow\n+                                final TreePath selPath \u003d tree.getPathForRow\n                                         (counter);\n \n                                 if (selPath !\u003d null) {\n                                     addSelectionPath(selPath);\n                                 }\n                             }\n                         }\n                     }\n                 } finally {\n                     updatingListSelectionModel \u003d false;\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        protected void updateSelectedPathsFromSelectedRows()\n        {\n            if (!updatingListSelectionModel) {\n                updatingListSelectionModel \u003d true;\n                try {\n                    // This is way expensive, ListSelectionModel needs an\n                    // enumerator for iterating.\n                    final int min \u003d listSelectionModel.getMinSelectionIndex();\n                    final int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                    clearSelection();\n                    if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                            if (listSelectionModel.isSelectedIndex(counter)) {\n                                final TreePath selPath \u003d tree.getPathForRow\n                                        (counter);\n\n                                if (selPath !\u003d null) {\n                                    addSelectionPath(selPath);\n                                }\n                            }\n                        }\n                    }\n                } finally {\n                    updatingListSelectionModel \u003d false;\n                }\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "02/07/06 4:52 AM",
      "commitNameOld": "ef791720f010bcc2a05da76cac8021085bc71155",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.65,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n         protected void updateSelectedPathsFromSelectedRows()\n         {\n             if (!updatingListSelectionModel) {\n                 updatingListSelectionModel \u003d true;\n                 try {\n                     // This is way expensive, ListSelectionModel needs an\n                     // enumerator for iterating.\n                     int min \u003d listSelectionModel.getMinSelectionIndex();\n                     int max \u003d listSelectionModel.getMaxSelectionIndex();\n \n                     clearSelection();\n-                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n+                    if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n                         for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                             if (listSelectionModel.isSelectedIndex(counter)) {\n                                 TreePath selPath \u003d tree.getPathForRow\n                                         (counter);\n \n                                 if (selPath !\u003d null) {\n                                     addSelectionPath(selPath);\n                                 }\n                             }\n                         }\n                     }\n                 } finally {\n                     updatingListSelectionModel \u003d false;\n                 }\n             }\n         }\n\\ No newline at end of file\n",
      "actualSource": "        protected void updateSelectedPathsFromSelectedRows()\n        {\n            if (!updatingListSelectionModel) {\n                updatingListSelectionModel \u003d true;\n                try {\n                    // This is way expensive, ListSelectionModel needs an\n                    // enumerator for iterating.\n                    int min \u003d listSelectionModel.getMinSelectionIndex();\n                    int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                    clearSelection();\n                    if ((min !\u003d -1) \u0026\u0026 (max !\u003d -1)) {\n                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                            if (listSelectionModel.isSelectedIndex(counter)) {\n                                TreePath selPath \u003d tree.getPathForRow\n                                        (counter);\n\n                                if (selPath !\u003d null) {\n                                    addSelectionPath(selPath);\n                                }\n                            }\n                        }\n                    }\n                } finally {\n                    updatingListSelectionModel \u003d false;\n                }\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java",
      "extendedDetails": {}
    },
    "d3433c91e0a791b0d1f44bf1975e930e15ed74b8": {
      "type": "Yintroduced",
      "commitMessage": "Added initial GUI.\n\nOliver, please check that the file headers do not\nlead to license problems with Sun - maybe we need to remove\nour own header and exclude the gui package from the run.checkstyle\ntarget?\n",
      "commitDate": "16/10/02 5:13 PM",
      "commitName": "d3433c91e0a791b0d1f44bf1975e930e15ed74b8",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,28 @@\n+        protected void updateSelectedPathsFromSelectedRows()\n+        {\n+            if (!updatingListSelectionModel) {\n+                updatingListSelectionModel \u003d true;\n+                try {\n+                    // This is way expensive, ListSelectionModel needs an\n+                    // enumerator for iterating.\n+                    int min \u003d listSelectionModel.getMinSelectionIndex();\n+                    int max \u003d listSelectionModel.getMaxSelectionIndex();\n+\n+                    clearSelection();\n+                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n+                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n+                            if (listSelectionModel.isSelectedIndex(counter)) {\n+                                TreePath selPath \u003d tree.getPathForRow\n+                                        (counter);\n+\n+                                if (selPath !\u003d null) {\n+                                    addSelectionPath(selPath);\n+                                }\n+                            }\n+                        }\n+                    }\n+                } finally {\n+                    updatingListSelectionModel \u003d false;\n+                }\n+            }\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        protected void updateSelectedPathsFromSelectedRows()\n        {\n            if (!updatingListSelectionModel) {\n                updatingListSelectionModel \u003d true;\n                try {\n                    // This is way expensive, ListSelectionModel needs an\n                    // enumerator for iterating.\n                    int min \u003d listSelectionModel.getMinSelectionIndex();\n                    int max \u003d listSelectionModel.getMaxSelectionIndex();\n\n                    clearSelection();\n                    if (min !\u003d -1 \u0026\u0026 max !\u003d -1) {\n                        for (int counter \u003d min; counter \u003c\u003d max; counter++) {\n                            if (listSelectionModel.isSelectedIndex(counter)) {\n                                TreePath selPath \u003d tree.getPathForRow\n                                        (counter);\n\n                                if (selPath !\u003d null) {\n                                    addSelectionPath(selPath);\n                                }\n                            }\n                        }\n                    }\n                } finally {\n                    updatingListSelectionModel \u003d false;\n                }\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/gui/JTreeTable.java"
    }
  }
}