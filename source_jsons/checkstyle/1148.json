{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericWhitespaceCheck.java",
  "functionName": "isGenericBeforeMethod",
  "functionId": "isGenericBeforeMethod___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
  "functionStartLine": 264,
  "functionEndLine": 268,
  "numCommitsSeen": 57,
  "timeTaken": 1021,
  "changeHistory": [
    "bda308e37284c468c4d08c262d6c6b76f85a502c",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983"
  ],
  "changeHistoryShort": {
    "bda308e37284c468c4d08c262d6c6b76f85a502c": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bda308e37284c468c4d08c262d6c6b76f85a502c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for whitespace",
      "commitDate": "06/01/19 10:33 AM",
      "commitName": "bda308e37284c468c4d08c262d6c6b76f85a502c",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/12/18 9:47 PM",
      "commitNameOld": "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 19.53,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,5 @@\n     private static boolean isGenericBeforeMethod(DetailAST ast) {\n-        return ast.getParent().getType() \u003d\u003d TokenTypes.TYPE_ARGUMENTS\n-                \u0026\u0026 ast.getParent().getParent().getType() \u003d\u003d TokenTypes.DOT\n+        return ast.getParent().getParent().getType() \u003d\u003d TokenTypes.DOT\n                 \u0026\u0026 ast.getParent().getParent().getParent().getType() \u003d\u003d TokenTypes.METHOD_CALL\n                 || isAfterMethodReference(ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isGenericBeforeMethod(DetailAST ast) {\n        return ast.getParent().getParent().getType() \u003d\u003d TokenTypes.DOT\n                \u0026\u0026 ast.getParent().getParent().getParent().getType() \u003d\u003d TokenTypes.METHOD_CALL\n                || isAfterMethodReference(ast);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "15/07/15 4:58 PM",
      "commitNameOld": "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n-    private boolean isGenericBeforeMethod(DetailAST ast) {\n+    private static boolean isGenericBeforeMethod(DetailAST ast) {\n         return ast.getParent().getType() \u003d\u003d TokenTypes.TYPE_ARGUMENTS\n                 \u0026\u0026 ast.getParent().getParent().getType()\n                     \u003d\u003d TokenTypes.DOT\n                 \u0026\u0026 ast.getParent().getParent().getParent().getType()\n                     \u003d\u003d TokenTypes.METHOD_CALL\n                 || isAfterMethodReference(ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isGenericBeforeMethod(DetailAST ast) {\n        return ast.getParent().getType() \u003d\u003d TokenTypes.TYPE_ARGUMENTS\n                \u0026\u0026 ast.getParent().getParent().getType()\n                    \u003d\u003d TokenTypes.DOT\n                \u0026\u0026 ast.getParent().getParent().getParent().getType()\n                    \u003d\u003d TokenTypes.METHOD_CALL\n                || isAfterMethodReference(ast);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": {
      "type": "Yintroduced",
      "commitMessage": "GenericWhitespace updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "14/06/15 9:56 PM",
      "commitName": "7c1d239748c9a90112bf3a59b189dc31ffe41983",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,8 @@\n+    private boolean isGenericBeforeMethod(DetailAST ast) {\n+        return ast.getParent().getType() \u003d\u003d TokenTypes.TYPE_ARGUMENTS\n+                \u0026\u0026 ast.getParent().getParent().getType()\n+                    \u003d\u003d TokenTypes.DOT\n+                \u0026\u0026 ast.getParent().getParent().getParent().getType()\n+                    \u003d\u003d TokenTypes.METHOD_CALL\n+                || isAfterMethodReference(ast);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isGenericBeforeMethod(DetailAST ast) {\n        return ast.getParent().getType() \u003d\u003d TokenTypes.TYPE_ARGUMENTS\n                \u0026\u0026 ast.getParent().getParent().getType()\n                    \u003d\u003d TokenTypes.DOT\n                \u0026\u0026 ast.getParent().getParent().getParent().getType()\n                    \u003d\u003d TokenTypes.METHOD_CALL\n                || isAfterMethodReference(ast);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java"
    }
  }
}