{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SuppressionsStringPrinter.java",
  "functionName": "printSuppressions",
  "functionId": "printSuppressions___file-File__suppressionLineColumnNumber-String__tabWidth-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/SuppressionsStringPrinter.java",
  "functionStartLine": 64,
  "functionEndLine": 82,
  "numCommitsSeen": 6,
  "timeTaken": 782,
  "changeHistory": [
    "625865d270a788ed727cf1b819978747e4f34b44",
    "c94c2c494a156dfc77f737ef43664a89ce600ad4"
  ],
  "changeHistoryShort": {
    "625865d270a788ed727cf1b819978747e4f34b44": "Ybodychange",
    "c94c2c494a156dfc77f737ef43664a89ce600ad4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "625865d270a788ed727cf1b819978747e4f34b44": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5060: activate org.eclipse.jdt.core.compiler.problem.unnecessaryElse\n",
      "commitDate": "06/10/19 5:54 AM",
      "commitName": "625865d270a788ed727cf1b819978747e4f34b44",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 263.96,
      "commitsBetweenForRepo": 553,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,19 @@\n     public static String printSuppressions(File file, String suppressionLineColumnNumber,\n                                            int tabWidth) throws IOException, CheckstyleException {\n         final Matcher matcher \u003d\n                 VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX.matcher(suppressionLineColumnNumber);\n-        if (matcher.matches()) {\n-            final FileText fileText \u003d new FileText(file.getAbsoluteFile(),\n-                    System.getProperty(\"file.encoding\", StandardCharsets.UTF_8.name()));\n-            final DetailAST detailAST \u003d\n-                    JavaParser.parseFileText(fileText, JavaParser.Options.WITH_COMMENTS);\n-            final int lineNumber \u003d Integer.parseInt(matcher.group(1));\n-            final int columnNumber \u003d Integer.parseInt(matcher.group(2));\n-            return generate(fileText, detailAST, lineNumber, columnNumber, tabWidth);\n-        }\n-        else {\n+        if (!matcher.matches()) {\n             final String exceptionMsg \u003d String.format(Locale.ROOT,\n                     \"%s does not match valid format \u0027line:column\u0027.\",\n                     suppressionLineColumnNumber);\n             throw new IllegalStateException(exceptionMsg);\n         }\n+\n+        final FileText fileText \u003d new FileText(file.getAbsoluteFile(),\n+                System.getProperty(\"file.encoding\", StandardCharsets.UTF_8.name()));\n+        final DetailAST detailAST \u003d\n+                JavaParser.parseFileText(fileText, JavaParser.Options.WITH_COMMENTS);\n+        final int lineNumber \u003d Integer.parseInt(matcher.group(1));\n+        final int columnNumber \u003d Integer.parseInt(matcher.group(2));\n+        return generate(fileText, detailAST, lineNumber, columnNumber, tabWidth);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printSuppressions(File file, String suppressionLineColumnNumber,\n                                           int tabWidth) throws IOException, CheckstyleException {\n        final Matcher matcher \u003d\n                VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX.matcher(suppressionLineColumnNumber);\n        if (!matcher.matches()) {\n            final String exceptionMsg \u003d String.format(Locale.ROOT,\n                    \"%s does not match valid format \u0027line:column\u0027.\",\n                    suppressionLineColumnNumber);\n            throw new IllegalStateException(exceptionMsg);\n        }\n\n        final FileText fileText \u003d new FileText(file.getAbsoluteFile(),\n                System.getProperty(\"file.encoding\", StandardCharsets.UTF_8.name()));\n        final DetailAST detailAST \u003d\n                JavaParser.parseFileText(fileText, JavaParser.Options.WITH_COMMENTS);\n        final int lineNumber \u003d Integer.parseInt(matcher.group(1));\n        final int columnNumber \u003d Integer.parseInt(matcher.group(2));\n        return generate(fileText, detailAST, lineNumber, columnNumber, tabWidth);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/SuppressionsStringPrinter.java",
      "extendedDetails": {}
    },
    "c94c2c494a156dfc77f737ef43664a89ce600ad4": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4530: Add the new option for Checkstyle CLI to generate the basic suppression xpath\n",
      "commitDate": "14/04/18 8:52 PM",
      "commitName": "c94c2c494a156dfc77f737ef43664a89ce600ad4",
      "commitAuthor": "Timur Tibeyev",
      "diff": "@@ -0,0 +1,20 @@\n+    public static String printSuppressions(File file, String suppressionLineColumnNumber,\n+                                           int tabWidth) throws IOException, CheckstyleException {\n+        final Matcher matcher \u003d\n+                VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX.matcher(suppressionLineColumnNumber);\n+        if (matcher.matches()) {\n+            final FileText fileText \u003d new FileText(file.getAbsoluteFile(),\n+                    System.getProperty(\"file.encoding\", StandardCharsets.UTF_8.name()));\n+            final DetailAST detailAST \u003d\n+                    JavaParser.parseFileText(fileText, JavaParser.Options.WITH_COMMENTS);\n+            final int lineNumber \u003d Integer.parseInt(matcher.group(1));\n+            final int columnNumber \u003d Integer.parseInt(matcher.group(2));\n+            return generate(fileText, detailAST, lineNumber, columnNumber, tabWidth);\n+        }\n+        else {\n+            final String exceptionMsg \u003d String.format(Locale.ROOT,\n+                    \"%s does not match valid format \u0027line:column\u0027.\",\n+                    suppressionLineColumnNumber);\n+            throw new IllegalStateException(exceptionMsg);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static String printSuppressions(File file, String suppressionLineColumnNumber,\n                                           int tabWidth) throws IOException, CheckstyleException {\n        final Matcher matcher \u003d\n                VALID_SUPPRESSION_LINE_COLUMN_NUMBER_REGEX.matcher(suppressionLineColumnNumber);\n        if (matcher.matches()) {\n            final FileText fileText \u003d new FileText(file.getAbsoluteFile(),\n                    System.getProperty(\"file.encoding\", StandardCharsets.UTF_8.name()));\n            final DetailAST detailAST \u003d\n                    JavaParser.parseFileText(fileText, JavaParser.Options.WITH_COMMENTS);\n            final int lineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int columnNumber \u003d Integer.parseInt(matcher.group(2));\n            return generate(fileText, detailAST, lineNumber, columnNumber, tabWidth);\n        }\n        else {\n            final String exceptionMsg \u003d String.format(Locale.ROOT,\n                    \"%s does not match valid format \u0027line:column\u0027.\",\n                    suppressionLineColumnNumber);\n            throw new IllegalStateException(exceptionMsg);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/SuppressionsStringPrinter.java"
    }
  }
}