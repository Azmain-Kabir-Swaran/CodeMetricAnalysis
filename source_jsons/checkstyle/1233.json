{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyLineSeparatorCheck.java",
  "functionName": "checkComments",
  "functionId": "checkComments___token-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
  "functionStartLine": 579,
  "functionEndLine": 594,
  "numCommitsSeen": 56,
  "timeTaken": 610,
  "changeHistory": [
    "8c3743118478035f927056f958eb50a58aa30c2a"
  ],
  "changeHistoryShort": {
    "8c3743118478035f927056f958eb50a58aa30c2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c3743118478035f927056f958eb50a58aa30c2a": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5981: add validation of new lines before comments\n",
      "commitDate": "27/04/19 8:48 AM",
      "commitName": "8c3743118478035f927056f958eb50a58aa30c2a",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,16 @@\n+    private void checkComments(DetailAST token) {\n+        if (!allowMultipleEmptyLines) {\n+            if (TOKEN_TYPES_WITHOUT_COMMENTS_TO_CHECK_INSIDE.contains(token.getType())) {\n+                DetailAST previousNode \u003d token.getPreviousSibling();\n+                while (isCommentInBeginningOfLine(previousNode)) {\n+                    if (hasEmptyLineBefore(previousNode) \u0026\u0026 isPrePreviousLineEmpty(previousNode)) {\n+                        log(previousNode, MSG_MULTIPLE_LINES, previousNode.getText());\n+                    }\n+                    previousNode \u003d previousNode.getPreviousSibling();\n+                }\n+            }\n+            else {\n+                checkCommentsInsideToken(token);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkComments(DetailAST token) {\n        if (!allowMultipleEmptyLines) {\n            if (TOKEN_TYPES_WITHOUT_COMMENTS_TO_CHECK_INSIDE.contains(token.getType())) {\n                DetailAST previousNode \u003d token.getPreviousSibling();\n                while (isCommentInBeginningOfLine(previousNode)) {\n                    if (hasEmptyLineBefore(previousNode) \u0026\u0026 isPrePreviousLineEmpty(previousNode)) {\n                        log(previousNode, MSG_MULTIPLE_LINES, previousNode.getText());\n                    }\n                    previousNode \u003d previousNode.getPreviousSibling();\n                }\n            }\n            else {\n                checkCommentsInsideToken(token);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java"
    }
  }
}