{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegexpHeaderCheck.java",
  "functionName": "isMatch",
  "functionId": "isMatch___line-String__headerLineNo-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
  "functionStartLine": 312,
  "functionEndLine": 314,
  "numCommitsSeen": 118,
  "timeTaken": 2707,
  "changeHistory": [
    "29027109bf962f47b6a6000fdca69b5679ce4b43",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
    "f66b504b06f8c479d338fb5b2797392dfa3ef359",
    "bf16d371dab210594755d04afc4697269ed088c0",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
    "e27489c7721909245ea5055eac3b9c7c659081f6",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
    "3430721be200cbe2acf55c3b3d52a528638123b3",
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c"
  ],
  "changeHistoryShort": {
    "29027109bf962f47b6a6000fdca69b5679ce4b43": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": "Ybodychange",
    "f66b504b06f8c479d338fb5b2797392dfa3ef359": "Ymultichange(Ymovefromfile,Ybodychange)",
    "bf16d371dab210594755d04afc4697269ed088c0": "Ybodychange",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "e27489c7721909245ea5055eac3b9c7c659081f6": "Ybodychange",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": "Yfilerename",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "3430721be200cbe2acf55c3b3d52a528638123b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29027109bf962f47b6a6000fdca69b5679ce4b43": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, header, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    private boolean isMatch(String aLine, int aHeaderLineNo)\n+    private boolean isMatch(String line, int headerLineNo)\n     {\n-        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n+        return headerRegexps.get(headerLineNo).matcher(line).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String line, int headerLineNo)\n    {\n        return headerRegexps.get(headerLineNo).matcher(line).find();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aLine-String, aHeaderLineNo-int]",
            "newValue": "[line-String, headerLineNo-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    private boolean isMatch(String aLine, int aHeaderLineNo)\n+    private boolean isMatch(String line, int headerLineNo)\n     {\n-        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n+        return headerRegexps.get(headerLineNo).matcher(line).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String line, int headerLineNo)\n    {\n        return headerRegexps.get(headerLineNo).matcher(line).find();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": {
      "type": "Ybodychange",
      "commitMessage": "Simplified the code by removing HeaderInfo classes, they were introduced to avoid code duplication between header checks in two separate inheritance trees (Java Check vs. FileSetCheck). Now that we have only FileSetChecks as Header checks, this delegation is no longer necessary.\n",
      "commitDate": "05/02/09 1:22 PM",
      "commitName": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "16/11/08 3:11 AM",
      "commitNameOld": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 81.42,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,4 @@\n     private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)\n-                .matcher(aLine).find();\n+        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "f66b504b06f8c479d338fb5b2797392dfa3ef359": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "consolidation of code.\n",
      "commitDate": "16/11/08 3:11 AM",
      "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "consolidation of code.\n",
          "commitDate": "16/11/08 3:11 AM",
          "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "16/11/08 2:54 AM",
          "commitNameOld": "4a5491810944bed643a9f2acf46ef3b9da8f1be7",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n     private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n+        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)\n+                .matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)\n                .matcher(aLine).find();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
            "oldMethodName": "isMatch",
            "newMethodName": "isMatch"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "consolidation of code.\n",
          "commitDate": "16/11/08 3:11 AM",
          "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "16/11/08 2:54 AM",
          "commitNameOld": "4a5491810944bed643a9f2acf46ef3b9da8f1be7",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n     private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n+        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)\n+                .matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return getRegexpHeaderInfo().getHeaderRegexps().get(aHeaderLineNo)\n                .matcher(aLine).find();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf16d371dab210594755d04afc4697269ed088c0": {
      "type": "Ybodychange",
      "commitMessage": "converting the header checks to be fileset based.\n",
      "commitDate": "16/11/08 2:30 AM",
      "commitName": "bf16d371dab210594755d04afc4697269ed088c0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "28/04/08 1:22 PM",
      "commitNameOld": "369c315ff0a8971a2b8e8983c810573f62824ae0",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 201.59,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n     private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n+        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps.get(aHeaderLineNo).matcher(aLine).find();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
      "extendedDetails": {}
    },
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
      "commitDate": "19/10/06 1:35 PM",
      "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
      "commitAuthor": "Lars KÃ¼hne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
          "commitDate": "19/10/06 1:35 PM",
          "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "08/10/06 5:11 AM",
          "commitNameOld": "3296ba06ac6ae5ad8c864ada15cec91d058785d4",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 11.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,4 @@\n-    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n+    private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        final String line \u003d getLines()[aLineNo];\n-        return mHeaderRegexps[aHeaderLineNo].matcher(line).find();\n+        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
            "oldMethodName": "isMatch",
            "newMethodName": "isMatch"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
          "commitDate": "19/10/06 1:35 PM",
          "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "08/10/06 5:11 AM",
          "commitNameOld": "3296ba06ac6ae5ad8c864ada15cec91d058785d4",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 11.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,4 @@\n-    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n+    private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        final String line \u003d getLines()[aLineNo];\n-        return mHeaderRegexps[aHeaderLineNo].matcher(line).find();\n+        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
          "commitDate": "19/10/06 1:35 PM",
          "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
          "commitAuthor": "Lars KÃ¼hne",
          "commitDateOld": "08/10/06 5:11 AM",
          "commitNameOld": "3296ba06ac6ae5ad8c864ada15cec91d058785d4",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 11.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,4 @@\n-    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n+    private boolean isMatch(String aLine, int aHeaderLineNo)\n     {\n-        final String line \u003d getLines()[aLineNo];\n-        return mHeaderRegexps[aHeaderLineNo].matcher(line).find();\n+        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(String aLine, int aHeaderLineNo)\n    {\n        return mHeaderRegexps[aHeaderLineNo].matcher(aLine).find();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
          "extendedDetails": {
            "oldValue": "[aLineNo-int, aHeaderLineNo-int]",
            "newValue": "[aLine-String, aHeaderLineNo-int]"
          }
        }
      ]
    },
    "e27489c7721909245ea5055eac3b9c7c659081f6": {
      "type": "Ybodychange",
      "commitMessage": "initial replacing RE by Pattern (need to update docs)\n",
      "commitDate": "11/05/05 9:48 AM",
      "commitName": "e27489c7721909245ea5055eac3b9c7c659081f6",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "30/01/05 3:54 AM",
      "commitNameOld": "f53dcc10b28a954e590ff377f370ba1bf6487d11",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 101.2,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     private boolean isMatch(int aLineNo, int aHeaderLineNo)\n     {\n         final String line \u003d getLines()[aLineNo];\n-        return mHeaderRegexps[aHeaderLineNo].match(line);\n+        return mHeaderRegexps[aHeaderLineNo].matcher(line).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n    {\n        final String line \u003d getLines()[aLineNo];\n        return mHeaderRegexps[aHeaderLineNo].matcher(line).find();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": {
      "type": "Yfilerename",
      "commitMessage": "moved header checks to their own package\nremoved duplicate usage documentation in javadoc along the way\n",
      "commitDate": "30/01/05 3:32 AM",
      "commitName": "aca96ae1b180a8036cc23e93840c4161ae8f8927",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "30/01/05 3:07 AM",
      "commitNameOld": "0a60a189ed4236fd9be3c26bbb2f27be95e5d967",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n    {\n        final String line \u003d getLines()[aLineNo];\n        return mHeaderRegexps[aHeaderLineNo].match(line);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
      "commitDate": "10/01/04 8:36 PM",
      "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
          "commitDate": "10/01/04 8:36 PM",
          "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "08/10/03 10:46 AM",
          "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 94.45,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int aLineNumber)\n+    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n     {\n-        final String[] lines \u003d getLines();\n-        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n+        final String line \u003d getLines()[aLineNo];\n+        return mHeaderRegexps[aHeaderLineNo].match(line);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n    {\n        final String line \u003d getLines()[aLineNo];\n        return mHeaderRegexps[aHeaderLineNo].match(line);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aLineNumber-int]",
            "newValue": "[aLineNo-int, aHeaderLineNo-int]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
          "commitDate": "10/01/04 8:36 PM",
          "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "08/10/03 10:46 AM",
          "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 94.45,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int aLineNumber)\n+    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n     {\n-        final String[] lines \u003d getLines();\n-        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n+        final String line \u003d getLines()[aLineNo];\n+        return mHeaderRegexps[aHeaderLineNo].match(line);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n    {\n        final String line \u003d getLines()[aLineNo];\n        return mHeaderRegexps[aHeaderLineNo].match(line);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
          "commitDate": "10/01/04 8:36 PM",
          "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "08/10/03 10:46 AM",
          "commitNameOld": "984eb8d7427038effd8ee8d2d9c90c74eee57e2b",
          "commitAuthorOld": "Oleg Sukhodolsky",
          "daysBetweenCommits": 94.45,
          "commitsBetweenForRepo": 91,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int aLineNumber)\n+    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n     {\n-        final String[] lines \u003d getLines();\n-        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n+        final String line \u003d getLines()[aLineNo];\n+        return mHeaderRegexps[aHeaderLineNo].match(line);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMatch(int aLineNo, int aHeaderLineNo)\n    {\n        final String line \u003d getLines()[aLineNo];\n        return mHeaderRegexps[aHeaderLineNo].match(line);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "3430721be200cbe2acf55c3b3d52a528638123b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "fixed checkstyle errors\n",
      "commitDate": "22/11/02 4:46 AM",
      "commitName": "3430721be200cbe2acf55c3b3d52a528638123b3",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 4:46 AM",
          "commitName": "3430721be200cbe2acf55c3b3d52a528638123b3",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "17/10/02 3:52 PM",
          "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 35.58,
          "commitsBetweenForRepo": 204,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int lineNumber)\n+    protected boolean isMatch(int aLineNumber)\n     {\n         final String[] lines \u003d getLines();\n-        return mHeaderRegexps[lineNumber].match(lines[lineNumber]);\n+        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[lineNumber-int]",
            "newValue": "[aLineNumber-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "fixed checkstyle errors\n",
          "commitDate": "22/11/02 4:46 AM",
          "commitName": "3430721be200cbe2acf55c3b3d52a528638123b3",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "17/10/02 3:52 PM",
          "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
          "commitAuthorOld": "Lars KÃ¼hne",
          "daysBetweenCommits": 35.58,
          "commitsBetweenForRepo": 204,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,5 @@\n-    protected boolean isMatch(int lineNumber)\n+    protected boolean isMatch(int aLineNumber)\n     {\n         final String[] lines \u003d getLines();\n-        return mHeaderRegexps[lineNumber].match(lines[lineNumber]);\n+        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected boolean isMatch(int aLineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderRegexps[aLineNumber].match(lines[aLineNumber]);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f24c8ee834e006c406c0538dbfccc2fe6c07279c": {
      "type": "Yintroduced",
      "commitMessage": "implemented header checks, still need to remove old code\n",
      "commitDate": "28/09/02 12:09 PM",
      "commitName": "f24c8ee834e006c406c0538dbfccc2fe6c07279c",
      "commitAuthor": "Lars KÃ¼hne",
      "diff": "@@ -0,0 +1,5 @@\n+    protected boolean isMatch(int lineNumber)\n+    {\n+        final String[] lines \u003d getLines();\n+        return mHeaderRegexps[lineNumber].match(lines[lineNumber]);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected boolean isMatch(int lineNumber)\n    {\n        final String[] lines \u003d getLines();\n        return mHeaderRegexps[lineNumber].match(lines[lineNumber]);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java"
    }
  }
}