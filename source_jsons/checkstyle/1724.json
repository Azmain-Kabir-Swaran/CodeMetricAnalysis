{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultipleStringLiteralsCheck.java",
  "functionName": "setIgnoreStringsRegexp",
  "functionId": "setIgnoreStringsRegexp___ignoreStringsRegexp-Pattern",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
  "functionStartLine": 150,
  "functionEndLine": 157,
  "numCommitsSeen": 108,
  "timeTaken": 2319,
  "changeHistory": [
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
    "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "e70960913c07d921dea470857f9bcdb67f38959f",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba",
    "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "253622ab83a78434d28d050df40cdedcec303713"
  ],
  "changeHistoryShort": {
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": "Ymultichange(Yparameterchange,Ybodychange)",
    "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "e70960913c07d921dea470857f9bcdb67f38959f": "Ymodifierchange",
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": "Ybodychange",
    "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "253622ab83a78434d28d050df40cdedcec303713": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3255: changed module setters for pattern",
      "commitDate": "09/11/16 4:34 AM",
      "commitName": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3255: changed module setters for pattern",
          "commitDate": "09/11/16 4:34 AM",
          "commitName": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/16 7:52 PM",
          "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
          "commitAuthorOld": "Andrei Selkin",
          "daysBetweenCommits": 49.4,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n-        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.isEmpty()) {\n-            pattern \u003d null;\n+    public final void setIgnoreStringsRegexp(Pattern ignoreStringsRegexp) {\n+        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.pattern().isEmpty()) {\n+            this.ignoreStringsRegexp \u003d null;\n         }\n         else {\n-            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n+            this.ignoreStringsRegexp \u003d ignoreStringsRegexp;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setIgnoreStringsRegexp(Pattern ignoreStringsRegexp) {\n        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.pattern().isEmpty()) {\n            this.ignoreStringsRegexp \u003d null;\n        }\n        else {\n            this.ignoreStringsRegexp \u003d ignoreStringsRegexp;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {
            "oldValue": "[ignoreStringsRegexp-String]",
            "newValue": "[ignoreStringsRegexp-Pattern]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3255: changed module setters for pattern",
          "commitDate": "09/11/16 4:34 AM",
          "commitName": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/16 7:52 PM",
          "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
          "commitAuthorOld": "Andrei Selkin",
          "daysBetweenCommits": 49.4,
          "commitsBetweenForRepo": 65,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n-        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.isEmpty()) {\n-            pattern \u003d null;\n+    public final void setIgnoreStringsRegexp(Pattern ignoreStringsRegexp) {\n+        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.pattern().isEmpty()) {\n+            this.ignoreStringsRegexp \u003d null;\n         }\n         else {\n-            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n+            this.ignoreStringsRegexp \u003d ignoreStringsRegexp;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setIgnoreStringsRegexp(Pattern ignoreStringsRegexp) {\n        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.pattern().isEmpty()) {\n            this.ignoreStringsRegexp \u003d null;\n        }\n        else {\n            this.ignoreStringsRegexp \u003d ignoreStringsRegexp;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65": {
      "type": "Ybodychange",
      "commitMessage": "Issue #974: PMD violation ConfusingTernary (partial fix)\n",
      "commitDate": "07/10/15 5:56 PM",
      "commitName": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "31/08/15 11:24 AM",
      "commitNameOld": "2b861bd6e16584e22bb115ff7abd65c35072eb92",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 37.27,
      "commitsBetweenForRepo": 243,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,8 @@\n     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n-        if (ignoreStringsRegexp !\u003d null\n-            \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n-            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n+        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.isEmpty()) {\n+            pattern \u003d null;\n         }\n         else {\n-            pattern \u003d null;\n+            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n        if (ignoreStringsRegexp \u003d\u003d null || ignoreStringsRegexp.isEmpty()) {\n            pattern \u003d null;\n        }\n        else {\n            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n         if (ignoreStringsRegexp !\u003d null\n             \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n-            pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n+            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n         }\n         else {\n             pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n        if (ignoreStringsRegexp !\u003d null\n            \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n            pattern \u003d CommonUtils.createPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "e70960913c07d921dea470857f9bcdb67f38959f": {
      "type": "Ymodifierchange",
      "commitMessage": "Mark methods final if they are used in constructors. #1555\n\nFixes `OverridableMethodCallDuringObjectConstruction` inspection violations.\n\nDescription:\n\u003eReports any calls to overridable methods of the current class during object construction. A call is during object construction if it is made inside a constructor, in an non-static instance initializer, in a non-static field initializer or inside a clone(), readObject() or readObjectNoData() method. Methods are overridable if they are not declared final, static or private. Such calls may result in subtle bugs, as the object is not guaranteed to be initialized before the method call occurs.\n",
      "commitDate": "08/08/15 7:13 PM",
      "commitName": "e70960913c07d921dea470857f9bcdb67f38959f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "5c9e55ae70af0456e1634211ccac54c40a92cfba",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 6.02,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-    public void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n+    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n         if (ignoreStringsRegexp !\u003d null\n             \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n             pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n         }\n         else {\n             pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n        if (ignoreStringsRegexp !\u003d null\n            \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n            pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, final]"
      }
    },
    "5c9e55ae70af0456e1634211ccac54c40a92cfba": {
      "type": "Ybodychange",
      "commitMessage": "Use .isEmpty() method instead of comparisons to 0. #1538\n",
      "commitDate": "02/08/15 6:48 PM",
      "commitName": "5c9e55ae70af0456e1634211ccac54c40a92cfba",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:41 PM",
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     public void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n         if (ignoreStringsRegexp !\u003d null\n-            \u0026\u0026 ignoreStringsRegexp.length() \u003e 0) {\n+            \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n             pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n         }\n         else {\n             pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setIgnoreStringsRegexp(String ignoreStringsRegexp) {\n        if (ignoreStringsRegexp !\u003d null\n            \u0026\u0026 !ignoreStringsRegexp.isEmpty()) {\n            pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c": {
      "type": "Ybodychange",
      "commitMessage": "Deleted cache from Utils class + unified setters with patterns\n\nIssue #845\n",
      "commitDate": "27/03/15 2:39 PM",
      "commitName": "ebd4afdebe8ee09c0e6c7d1239e2ca982f87e51c",
      "commitAuthor": "Damian Szczepanik",
      "commitDateOld": "15/03/15 2:22 PM",
      "commitNameOld": "1c15b6a36baa68dc3f2ebdf9baac131e98bb9e04",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 12.01,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n     {\n         if (ignoreStringsRegexp !\u003d null\n             \u0026\u0026 ignoreStringsRegexp.length() \u003e 0)\n         {\n-            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n+            pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n         }\n         else {\n             pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n    {\n        if (ignoreStringsRegexp !\u003d null\n            \u0026\u0026 ignoreStringsRegexp.length() \u003e 0)\n        {\n            pattern \u003d Utils.createPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n     {\n-        if ((ignoreStringsRegexp !\u003d null)\n-            \u0026\u0026 (ignoreStringsRegexp.length() \u003e 0))\n+        if (ignoreStringsRegexp !\u003d null\n+            \u0026\u0026 ignoreStringsRegexp.length() \u003e 0)\n         {\n             pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n         }\n         else {\n             pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n    {\n        if (ignoreStringsRegexp !\u003d null\n            \u0026\u0026 ignoreStringsRegexp.length() \u003e 0)\n        {\n            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.77,
          "commitsBetweenForRepo": 396,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n+    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n     {\n-        if ((aIgnoreStringsRegexp !\u003d null)\n-            \u0026\u0026 (aIgnoreStringsRegexp.length() \u003e 0))\n+        if ((ignoreStringsRegexp !\u003d null)\n+            \u0026\u0026 (ignoreStringsRegexp.length() \u003e 0))\n         {\n-            mPattern \u003d Utils.getPattern(aIgnoreStringsRegexp);\n+            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n         }\n         else {\n-            mPattern \u003d null;\n+            pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n    {\n        if ((ignoreStringsRegexp !\u003d null)\n            \u0026\u0026 (ignoreStringsRegexp.length() \u003e 0))\n        {\n            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {
            "oldValue": "[aIgnoreStringsRegexp-String]",
            "newValue": "[ignoreStringsRegexp-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.77,
          "commitsBetweenForRepo": 396,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n+    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n     {\n-        if ((aIgnoreStringsRegexp !\u003d null)\n-            \u0026\u0026 (aIgnoreStringsRegexp.length() \u003e 0))\n+        if ((ignoreStringsRegexp !\u003d null)\n+            \u0026\u0026 (ignoreStringsRegexp.length() \u003e 0))\n         {\n-            mPattern \u003d Utils.getPattern(aIgnoreStringsRegexp);\n+            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n         }\n         else {\n-            mPattern \u003d null;\n+            pattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setIgnoreStringsRegexp(String ignoreStringsRegexp)\n    {\n        if ((ignoreStringsRegexp !\u003d null)\n            \u0026\u0026 (ignoreStringsRegexp.length() \u003e 0))\n        {\n            pattern \u003d Utils.getPattern(ignoreStringsRegexp);\n        }\n        else {\n            pattern \u003d null;\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n    {\n        if ((aIgnoreStringsRegexp !\u003d null)\n            \u0026\u0026 (aIgnoreStringsRegexp.length() \u003e 0))\n        {\n            mPattern \u003d Utils.getPattern(aIgnoreStringsRegexp);\n        }\n        else {\n            mPattern \u003d null;\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java"
      }
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": "21/01/06 4:43 AM",
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "07/10/05 6:18 PM",
      "commitNameOld": "253622ab83a78434d28d050df40cdedcec303713",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 105.48,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n     public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n     {\n-        mIgnoreStringsRegexp \u003d aIgnoreStringsRegexp;\n-        if ((mIgnoreStringsRegexp !\u003d null)\n-            \u0026\u0026 (mIgnoreStringsRegexp.length() \u003e 0))\n+        if ((aIgnoreStringsRegexp !\u003d null)\n+            \u0026\u0026 (aIgnoreStringsRegexp.length() \u003e 0))\n         {\n-            mPattern \u003d Utils.getPattern(mIgnoreStringsRegexp);\n+            mPattern \u003d Utils.getPattern(aIgnoreStringsRegexp);\n         }\n         else {\n             mPattern \u003d null;\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n    {\n        if ((aIgnoreStringsRegexp !\u003d null)\n            \u0026\u0026 (aIgnoreStringsRegexp.length() \u003e 0))\n        {\n            mPattern \u003d Utils.getPattern(aIgnoreStringsRegexp);\n        }\n        else {\n            mPattern \u003d null;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java",
      "extendedDetails": {}
    },
    "253622ab83a78434d28d050df40cdedcec303713": {
      "type": "Yintroduced",
      "commitMessage": "Patch 254918 from taab.\n",
      "commitDate": "07/10/05 6:18 PM",
      "commitName": "253622ab83a78434d28d050df40cdedcec303713",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,12 @@\n+    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n+    {\n+        mIgnoreStringsRegexp \u003d aIgnoreStringsRegexp;\n+        if ((mIgnoreStringsRegexp !\u003d null)\n+            \u0026\u0026 (mIgnoreStringsRegexp.length() \u003e 0))\n+        {\n+            mPattern \u003d Utils.getPattern(mIgnoreStringsRegexp);\n+        }\n+        else {\n+            mPattern \u003d null;\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void setIgnoreStringsRegexp(String aIgnoreStringsRegexp)\n    {\n        mIgnoreStringsRegexp \u003d aIgnoreStringsRegexp;\n        if ((mIgnoreStringsRegexp !\u003d null)\n            \u0026\u0026 (mIgnoreStringsRegexp.length() \u003e 0))\n        {\n            mPattern \u003d Utils.getPattern(mIgnoreStringsRegexp);\n        }\n        else {\n            mPattern \u003d null;\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MultipleStringLiteralsCheck.java"
    }
  }
}