{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocDetailNodeParser.java",
  "functionName": "getTokenType",
  "functionId": "getTokenType___node-ParseTree",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
  "functionStartLine": 415,
  "functionEndLine": 427,
  "numCommitsSeen": 96,
  "timeTaken": 2533,
  "changeHistory": [
    "0bb9038582406af853dd064d9c699ddc93c0994d",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534"
  ],
  "changeHistoryShort": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": "Ymovefromfile",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3484: removed the last of guava",
      "commitDate": "09/03/19 10:49 PM",
      "commitName": "0bb9038582406af853dd064d9c699ddc93c0994d",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 53.71,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,13 @@\n     private static int getTokenType(ParseTree node) {\n         final int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n-            final String typeName \u003d\n-                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n-            tokenType \u003d JavadocUtil.getTokenId(typeName);\n+            tokenType \u003d JavadocUtil.getTokenId(convertUpperCamelToUpperUnderscore(className));\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenType(ParseTree node) {\n        final int tokenType;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            tokenType \u003d JavadocUtil.getTokenId(convertUpperCamelToUpperUnderscore(className));\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static int getTokenType(ParseTree node) {\n         final int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n-            tokenType \u003d JavadocUtils.getTokenId(typeName);\n+            tokenType \u003d JavadocUtil.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenType(ParseTree node) {\n        final int tokenType;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtil.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
      "extendedDetails": {}
    },
    "68b49fd2843f23f55dc711a89213d59f2acf3a0a": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #652: New CLI option to print Javadoc comment parse tree\n",
      "commitDate": "17/03/16 6:19 AM",
      "commitName": "68b49fd2843f23f55dc711a89213d59f2acf3a0a",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "16/03/16 11:32 AM",
      "commitNameOld": "888594049a74a7d8e9bbdfb5672c07db1f7ba220",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static int getTokenType(ParseTree node) {\n        final int tokenType;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocDetailNodeParser.java",
        "oldMethodName": "getTokenType",
        "newMethodName": "getTokenType"
      }
    },
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": "24/01/16 6:35 AM",
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "21/01/16 6:41 AM",
      "commitNameOld": "28da7d5666e32903523b1f97d830589fcb4bee4c",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static int getTokenType(ParseTree node) {\n-        int tokenType;\n+        final int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenType(ParseTree node) {\n        final int tokenType;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
      "extendedDetails": {}
    },
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": {
      "type": "Ybodychange",
      "commitMessage": "Remove unused assignments. #1555\n\nFixes UnusedAssignment inspection violations.\n\nDescription:\n\u003eThis inspection points out the cases where a variable value is never used after its assignment, i.e.:\n- the variable never gets read after assignment OR\n- the value is always overwritten with another assignment before the next variable read OR\n - the variable initializer is redundant (for one of the above two reasons) OR\n - the variable is never used.\n",
      "commitDate": "07/08/15 9:12 PM",
      "commitName": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/08/15 9:11 PM",
      "commitNameOld": "7d513f08c27c741105f712dc882fd4c3553f71e7",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static int getTokenType(ParseTree node) {\n-        int tokenType \u003d Integer.MIN_VALUE;\n+        int tokenType;\n \n         if (node.getChildCount() \u003d\u003d 0) {\n             tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n             final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenType(ParseTree node) {\n        int tokenType;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "24/11/14 4:22 PM",
          "commitNameOld": "be6a7ca77be3de342656ec381aaa02b89da252d4",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 55.58,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private static int getTokenType(ParseTree aNode)\n+    private static int getTokenType(ParseTree node)\n     {\n         int tokenType \u003d Integer.MIN_VALUE;\n \n-        if (aNode.getChildCount() \u003d\u003d 0) {\n-            tokenType \u003d ((TerminalNode) aNode).getSymbol().getType();\n+        if (node.getChildCount() \u003d\u003d 0) {\n+            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n-            final String className \u003d getNodeClassNameWithoutContext(aNode);\n+            final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static int getTokenType(ParseTree node)\n    {\n        int tokenType \u003d Integer.MIN_VALUE;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
          "extendedDetails": {
            "oldValue": "[aNode-ParseTree]",
            "newValue": "[node-ParseTree]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "24/11/14 4:22 PM",
          "commitNameOld": "be6a7ca77be3de342656ec381aaa02b89da252d4",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 55.58,
          "commitsBetweenForRepo": 187,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private static int getTokenType(ParseTree aNode)\n+    private static int getTokenType(ParseTree node)\n     {\n         int tokenType \u003d Integer.MIN_VALUE;\n \n-        if (aNode.getChildCount() \u003d\u003d 0) {\n-            tokenType \u003d ((TerminalNode) aNode).getSymbol().getType();\n+        if (node.getChildCount() \u003d\u003d 0) {\n+            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n         }\n         else {\n-            final String className \u003d getNodeClassNameWithoutContext(aNode);\n+            final String className \u003d getNodeClassNameWithoutContext(node);\n             final String typeName \u003d\n                     CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n             tokenType \u003d JavadocUtils.getTokenId(typeName);\n         }\n \n         return tokenType;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static int getTokenType(ParseTree node)\n    {\n        int tokenType \u003d Integer.MIN_VALUE;\n\n        if (node.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) node).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(node);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of Javadoc comments. Extended API to create Javadoc Checks.\n",
      "commitDate": "19/10/14 1:32 PM",
      "commitName": "ff12c1b012a1b18da8a1cd2101efd0173c612534",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,16 @@\n+    private static int getTokenType(ParseTree aNode)\n+    {\n+        int tokenType \u003d Integer.MIN_VALUE;\n+\n+        if (aNode.getChildCount() \u003d\u003d 0) {\n+            tokenType \u003d ((TerminalNode) aNode).getSymbol().getType();\n+        }\n+        else {\n+            final String className \u003d getNodeClassNameWithoutContext(aNode);\n+            final String typeName \u003d\n+                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n+            tokenType \u003d JavadocUtils.getTokenId(typeName);\n+        }\n+\n+        return tokenType;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static int getTokenType(ParseTree aNode)\n    {\n        int tokenType \u003d Integer.MIN_VALUE;\n\n        if (aNode.getChildCount() \u003d\u003d 0) {\n            tokenType \u003d ((TerminalNode) aNode).getSymbol().getType();\n        }\n        else {\n            final String className \u003d getNodeClassNameWithoutContext(aNode);\n            final String typeName \u003d\n                    CaseFormat.UPPER_CAMEL.to(CaseFormat.UPPER_UNDERSCORE, className);\n            tokenType \u003d JavadocUtils.getTokenId(typeName);\n        }\n\n        return tokenType;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractJavadocCheck.java"
    }
  }
}