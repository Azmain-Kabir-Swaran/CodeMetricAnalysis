{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeftCurlyCheck.java",
  "functionName": "hasLineBreakAfter",
  "functionId": "hasLineBreakAfter___leftCurly-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
  "functionStartLine": 404,
  "functionEndLine": 418,
  "numCommitsSeen": 85,
  "timeTaken": 1673,
  "changeHistory": [
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
    "a123763c92761d644fed6010c05ff01cece025ae"
  ],
  "changeHistoryShort": {
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6": "Ybodychange",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": "Ybodychange",
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": "Ybodychange",
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac": "Ybodychange",
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93": "Ymultichange(Yparameterchange,Ybodychange)",
    "a123763c92761d644fed6010c05ff01cece025ae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7518: refactor line comparison\n",
      "commitDate": "06/02/20 6:58 PM",
      "commitName": "8bf05ced07bb04c7240ae9f60ecda3c628e9b6f6",
      "commitAuthor": "Andrei_Paikin",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 36.1,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean hasLineBreakAfter(DetailAST leftCurly) {\n         DetailAST nextToken \u003d null;\n         if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n             nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n             if (!ignoreEnums\n                     \u0026\u0026 leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n                 nextToken \u003d leftCurly.getNextSibling();\n             }\n         }\n         return nextToken \u003d\u003d null\n                 || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n-                || leftCurly.getLineNo() !\u003d nextToken.getLineNo();\n+                || !TokenUtil.areOnSameLine(leftCurly, nextToken);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly) {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (!ignoreEnums\n                    \u0026\u0026 leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n                nextToken \u003d leftCurly.getNextSibling();\n            }\n        }\n        return nextToken \u003d\u003d null\n                || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n                || !TokenUtil.areOnSameLine(leftCurly, nextToken);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce LogicConditionNeedOptimizationCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "24/12/15 1:59 PM",
      "commitName": "6ee4a0f805d528cdee03cfc175502d15b5722dab",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "12/11/15 7:15 PM",
      "commitNameOld": "9eec8df60589da1069885cd56345fe1f3d609859",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 41.78,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private boolean hasLineBreakAfter(DetailAST leftCurly) {\n         DetailAST nextToken \u003d null;\n         if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n             nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n-            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF\n-                    \u0026\u0026 !ignoreEnums) {\n+            if (!ignoreEnums\n+                    \u0026\u0026 leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n                 nextToken \u003d leftCurly.getNextSibling();\n             }\n         }\n         return nextToken \u003d\u003d null\n                 || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n                 || leftCurly.getLineNo() !\u003d nextToken.getLineNo();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly) {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (!ignoreEnums\n                    \u0026\u0026 leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n                nextToken \u003d leftCurly.getNextSibling();\n            }\n        }\n        return nextToken \u003d\u003d null\n                || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n                || leftCurly.getLineNo() !\u003d nextToken.getLineNo();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a": {
      "type": "Ybodychange",
      "commitMessage": "Update Maven PMD Plugin to 3.5. #1300\n",
      "commitDate": "07/07/15 7:40 PM",
      "commitName": "1b3e900ee47bd289ddbf72e3fd69e8a15e51b20a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "13/06/15 11:01 PM",
      "commitNameOld": "2b32b003ab81c9bfcb8205b512eb4ea313e529af",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 23.86,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private boolean hasLineBreakAfter(DetailAST leftCurly) {\n         DetailAST nextToken \u003d null;\n         if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n             nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n             if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF\n                     \u0026\u0026 !ignoreEnums) {\n                 nextToken \u003d leftCurly.getNextSibling();\n             }\n         }\n-        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY\n-                \u0026\u0026 leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n-            return false;\n-        }\n-        return true;\n+        return nextToken \u003d\u003d null\n+                || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n+                || leftCurly.getLineNo() !\u003d nextToken.getLineNo();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly) {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF\n                    \u0026\u0026 !ignoreEnums) {\n                nextToken \u003d leftCurly.getNextSibling();\n            }\n        }\n        return nextToken \u003d\u003d null\n                || nextToken.getType() \u003d\u003d TokenTypes.RCURLY\n                || leftCurly.getLineNo() !\u003d nextToken.getLineNo();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "98a9266a8091c1c6b26d41b4e17e1a32458f1bac": {
      "type": "Ybodychange",
      "commitMessage": "Combine nested if statements, issue #744\n\nAll violations of PMD rule [CollapsibleIfStatements](http://pmd.sourceforge.net/pmd-5.2.3/pmd-java/rules/java/basic.html#CollapsibleIfStatements) are fixed.\n",
      "commitDate": "14/03/15 2:56 PM",
      "commitName": "98a9266a8091c1c6b26d41b4e17e1a32458f1bac",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "11/03/15 3:40 PM",
      "commitNameOld": "44e274bfbaf09a067726164e01a9c277f4a97090",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     private boolean hasLineBreakAfter(DetailAST leftCurly)\n     {\n         DetailAST nextToken \u003d null;\n         if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n             nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n-            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF \u0026\u0026 !ignoreEnums)\n             {\n-                if (!ignoreEnums) {\n-                    nextToken \u003d leftCurly.getNextSibling();\n-                }\n+                nextToken \u003d leftCurly.getNextSibling();\n             }\n         }\n-        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n-            if (leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n-                return false;\n-            }\n+        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY\n+                \u0026\u0026 leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo())\n+        {\n+            return false;\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly)\n    {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF \u0026\u0026 !ignoreEnums)\n            {\n                nextToken \u003d leftCurly.getNextSibling();\n            }\n        }\n        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY\n                \u0026\u0026 leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo())\n        {\n            return false;\n        }\n        return true;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "cea86a6cad3098ebcdb4a88db2e49477b07e0d93": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, blocks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java\n",
      "commitDate": "19/01/15 6:32 AM",
      "commitName": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, blocks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java\n",
          "commitDate": "19/01/15 6:32 AM",
          "commitName": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
          "commitAuthor": "alexkravin",
          "commitDateOld": "16/01/15 10:07 AM",
          "commitNameOld": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 2.85,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private boolean hasLineBreakAfter(DetailAST aLeftCurly)\n+    private boolean hasLineBreakAfter(DetailAST leftCurly)\n     {\n         DetailAST nextToken \u003d null;\n-        if (aLeftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n-            nextToken \u003d aLeftCurly.getFirstChild();\n+        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+            nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n-            if (aLeftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n             {\n-                if (!mIgnoreEnums) {\n-                    nextToken \u003d aLeftCurly.getNextSibling();\n+                if (!ignoreEnums) {\n+                    nextToken \u003d leftCurly.getNextSibling();\n                 }\n             }\n         }\n         if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n-            if (aLeftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n+            if (leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly)\n    {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n            {\n                if (!ignoreEnums) {\n                    nextToken \u003d leftCurly.getNextSibling();\n                }\n            }\n        }\n        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n            if (leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n                return false;\n            }\n        }\n        return true;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {
            "oldValue": "[aLeftCurly-DetailAST]",
            "newValue": "[leftCurly-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, blocks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/AvoidNestedBlocksCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/EmptyBlockCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java\n",
          "commitDate": "19/01/15 6:32 AM",
          "commitName": "cea86a6cad3098ebcdb4a88db2e49477b07e0d93",
          "commitAuthor": "alexkravin",
          "commitDateOld": "16/01/15 10:07 AM",
          "commitNameOld": "abe8ae60eefcc58483df0957b27c2b5fa5e92fd5",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 2.85,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private boolean hasLineBreakAfter(DetailAST aLeftCurly)\n+    private boolean hasLineBreakAfter(DetailAST leftCurly)\n     {\n         DetailAST nextToken \u003d null;\n-        if (aLeftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n-            nextToken \u003d aLeftCurly.getFirstChild();\n+        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+            nextToken \u003d leftCurly.getFirstChild();\n         }\n         else {\n-            if (aLeftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n             {\n-                if (!mIgnoreEnums) {\n-                    nextToken \u003d aLeftCurly.getNextSibling();\n+                if (!ignoreEnums) {\n+                    nextToken \u003d leftCurly.getNextSibling();\n                 }\n             }\n         }\n         if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n-            if (aLeftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n+            if (leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n                 return false;\n             }\n         }\n         return true;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean hasLineBreakAfter(DetailAST leftCurly)\n    {\n        DetailAST nextToken \u003d null;\n        if (leftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d leftCurly.getFirstChild();\n        }\n        else {\n            if (leftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n            {\n                if (!ignoreEnums) {\n                    nextToken \u003d leftCurly.getNextSibling();\n                }\n            }\n        }\n        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n            if (leftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n                return false;\n            }\n        }\n        return true;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "a123763c92761d644fed6010c05ff01cece025ae": {
      "type": "Yintroduced",
      "commitMessage": "Left curly update. Force line break #247\n",
      "commitDate": "13/08/14 2:15 PM",
      "commitName": "a123763c92761d644fed6010c05ff01cece025ae",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,21 @@\n+    private boolean hasLineBreakAfter(DetailAST aLeftCurly)\n+    {\n+        DetailAST nextToken \u003d null;\n+        if (aLeftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+            nextToken \u003d aLeftCurly.getFirstChild();\n+        }\n+        else {\n+            if (aLeftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+            {\n+                if (!mIgnoreEnums) {\n+                    nextToken \u003d aLeftCurly.getNextSibling();\n+                }\n+            }\n+        }\n+        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n+            if (aLeftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n+                return false;\n+            }\n+        }\n+        return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean hasLineBreakAfter(DetailAST aLeftCurly)\n    {\n        DetailAST nextToken \u003d null;\n        if (aLeftCurly.getType() \u003d\u003d TokenTypes.SLIST) {\n            nextToken \u003d aLeftCurly.getFirstChild();\n        }\n        else {\n            if (aLeftCurly.getParent().getParent().getType() \u003d\u003d TokenTypes.ENUM_DEF)\n            {\n                if (!mIgnoreEnums) {\n                    nextToken \u003d aLeftCurly.getNextSibling();\n                }\n            }\n        }\n        if (nextToken !\u003d null \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n            if (aLeftCurly.getLineNo() \u003d\u003d nextToken.getLineNo()) {\n                return false;\n            }\n        }\n        return true;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java"
    }
  }
}