{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimplifyBooleanReturnCheck.java",
  "functionName": "isBooleanLiteralReturnStatement",
  "functionId": "isBooleanLiteralReturnStatement___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
  "functionStartLine": 198,
  "functionEndLine": 210,
  "numCommitsSeen": 104,
  "timeTaken": 2510,
  "changeHistory": [
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0",
    "bd55b4598158c500333dae2e2194de08a643a3d5",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "a298a50d48358e58be31eaea6b9f0e263f5f046e",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
    "a865663e990e225a3b614c6245aae571817a3f2a",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf",
    "d077a402da51bb238a7da99d5e2542437b145192",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d"
  ],
  "changeHistoryShort": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": "Ymultichange(Yparameterchange,Ybodychange)",
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0": "Ybodychange",
    "bd55b4598158c500333dae2e2194de08a643a3d5": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "a298a50d48358e58be31eaea6b9f0e263f5f046e": "Ybodychange",
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": "Ymultichange(Ymodifierchange,Ybodychange)",
    "a865663e990e225a3b614c6245aae571817a3f2a": "Ybodychange",
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": "Ybodychange",
    "d077a402da51bb238a7da99d5e2542437b145192": "Ybodychange",
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "minor: remove unnecessary antlr classes from main code",
      "commitDate": "30/03/19 5:55 AM",
      "commitName": "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "minor: remove unnecessary antlr classes from main code",
          "commitDate": "30/03/19 5:55 AM",
          "commitName": "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
          "commitAuthor": "rnveach",
          "commitDateOld": "15/01/19 5:46 AM",
          "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 73.97,
          "commitsBetweenForRepo": 140,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private static boolean isBooleanLiteralReturnStatement(AST ast) {\n+    private static boolean isBooleanLiteralReturnStatement(DetailAST ast) {\n         boolean booleanReturnStatement \u003d false;\n \n         if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n-            final AST expr \u003d ast.getFirstChild();\n+            final DetailAST expr \u003d ast.getFirstChild();\n \n             if (expr.getType() !\u003d TokenTypes.SEMI) {\n-                final AST value \u003d expr.getFirstChild();\n+                final DetailAST value \u003d expr.getFirstChild();\n                 booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n             }\n         }\n         return booleanReturnStatement;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(DetailAST ast) {\n        boolean booleanReturnStatement \u003d false;\n\n        if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n            final DetailAST expr \u003d ast.getFirstChild();\n\n            if (expr.getType() !\u003d TokenTypes.SEMI) {\n                final DetailAST value \u003d expr.getFirstChild();\n                booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n            }\n        }\n        return booleanReturnStatement;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {
            "oldValue": "[ast-AST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: remove unnecessary antlr classes from main code",
          "commitDate": "30/03/19 5:55 AM",
          "commitName": "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
          "commitAuthor": "rnveach",
          "commitDateOld": "15/01/19 5:46 AM",
          "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 73.97,
          "commitsBetweenForRepo": 140,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private static boolean isBooleanLiteralReturnStatement(AST ast) {\n+    private static boolean isBooleanLiteralReturnStatement(DetailAST ast) {\n         boolean booleanReturnStatement \u003d false;\n \n         if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n-            final AST expr \u003d ast.getFirstChild();\n+            final DetailAST expr \u003d ast.getFirstChild();\n \n             if (expr.getType() !\u003d TokenTypes.SEMI) {\n-                final AST value \u003d expr.getFirstChild();\n+                final DetailAST value \u003d expr.getFirstChild();\n                 booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n             }\n         }\n         return booleanReturnStatement;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(DetailAST ast) {\n        boolean booleanReturnStatement \u003d false;\n\n        if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n            final DetailAST expr \u003d ast.getFirstChild();\n\n            if (expr.getType() !\u003d TokenTypes.SEMI) {\n                final DetailAST value \u003d expr.getFirstChild();\n                booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n            }\n        }\n        return booleanReturnStatement;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "83f2b92b18eb10f3849b6a3be99a7b55b886cae0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: ReturnCount violation fixed for SimplifyBooleanReturnCheck\n",
      "commitDate": "28/08/15 10:38 PM",
      "commitName": "83f2b92b18eb10f3849b6a3be99a7b55b886cae0",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "25/08/15 4:55 AM",
      "commitNameOld": "beae0df0a4c4a3e8401d31b29a7feb997b126731",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.74,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,13 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast) {\n-        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n-            return false;\n+        boolean booleanReturnStatement \u003d false;\n+\n+        if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n+            final AST expr \u003d ast.getFirstChild();\n+\n+            if (expr.getType() !\u003d TokenTypes.SEMI) {\n+                final AST value \u003d expr.getFirstChild();\n+                booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n+            }\n         }\n-\n-        final AST expr \u003d ast.getFirstChild();\n-\n-        if (expr.getType() \u003d\u003d TokenTypes.SEMI) {\n-            return false;\n-        }\n-\n-        final AST value \u003d expr.getFirstChild();\n-        return isBooleanLiteralType(value.getType());\n+        return booleanReturnStatement;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST ast) {\n        boolean booleanReturnStatement \u003d false;\n\n        if (ast !\u003d null \u0026\u0026 ast.getType() \u003d\u003d TokenTypes.LITERAL_RETURN) {\n            final AST expr \u003d ast.getFirstChild();\n\n            if (expr.getType() !\u003d TokenTypes.SEMI) {\n                final AST value \u003d expr.getFirstChild();\n                booleanReturnStatement \u003d isBooleanLiteralType(value.getType());\n            }\n        }\n        return booleanReturnStatement;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "bd55b4598158c500333dae2e2194de08a643a3d5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for SimplifyBooleanReturnCheck.\n",
      "commitDate": "01/08/15 9:24 AM",
      "commitName": "bd55b4598158c500333dae2e2194de08a643a3d5",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 9.43,
      "commitsBetweenForRepo": 100,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast) {\n         if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d ast.getFirstChild();\n \n-        if (expr \u003d\u003d null || expr.getType() \u003d\u003d TokenTypes.SEMI) {\n+        if (expr.getType() \u003d\u003d TokenTypes.SEMI) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST ast) {\n        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d ast.getFirstChild();\n\n        if (expr.getType() \u003d\u003d TokenTypes.SEMI) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST ast)\n     {\n-        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n+        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d ast.getFirstChild();\n \n-        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n+        if (expr \u003d\u003d null || expr.getType() \u003d\u003d TokenTypes.SEMI) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST ast)\n    {\n        if (ast \u003d\u003d null || ast.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d ast.getFirstChild();\n\n        if (expr \u003d\u003d null || expr.getType() \u003d\u003d TokenTypes.SEMI) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n+    private static boolean isBooleanLiteralReturnStatement(AST ast)\n     {\n-        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n+        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n             return false;\n         }\n \n-        final AST expr \u003d aAST.getFirstChild();\n+        final AST expr \u003d ast.getFirstChild();\n \n         if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST ast)\n    {\n        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n            return false;\n        }\n\n        final AST expr \u003d ast.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-AST]",
            "newValue": "[ast-AST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n+    private static boolean isBooleanLiteralReturnStatement(AST ast)\n     {\n-        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n+        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n             return false;\n         }\n \n-        final AST expr \u003d aAST.getFirstChild();\n+        final AST expr \u003d ast.getFirstChild();\n \n         if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST ast)\n    {\n        if ((ast \u003d\u003d null) || (ast.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n            return false;\n        }\n\n        final AST expr \u003d ast.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n+        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n         if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if ((aAST \u003d\u003d null) || (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN)) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/SimplifyBooleanReturnCheck.java"
      }
    },
    "a298a50d48358e58be31eaea6b9f0e263f5f046e": {
      "type": "Ybodychange",
      "commitMessage": "correction to handle SEMI after LITERAL_RETURN\n",
      "commitDate": "11/11/02 4:01 PM",
      "commitName": "a298a50d48358e58be31eaea6b9f0e263f5f046e",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "07/11/02 11:10 AM",
      "commitNameOld": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n         if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n-        if (expr \u003d\u003d null) {\n+        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n         return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if ((expr \u003d\u003d null) || (expr.getType() \u003d\u003d TokenTypes.SEMI)) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "removed paranoia checks to increase code coverage\n",
      "commitDate": "07/11/02 11:10 AM",
      "commitName": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "removed paranoia checks to increase code coverage\n",
          "commitDate": "07/11/02 11:10 AM",
          "commitName": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "02/11/02 9:09 AM",
          "commitNameOld": "a865663e990e225a3b614c6245aae571817a3f2a",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 5.08,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-    private boolean isBooleanLiteralReturnStatement(AST aAST)\n+    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n         if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n         if (expr \u003d\u003d null) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n-\n-        final int valueType \u003d value.getType();\n-        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n-                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n+        return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if (expr \u003d\u003d null) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "removed paranoia checks to increase code coverage\n",
          "commitDate": "07/11/02 11:10 AM",
          "commitName": "e6571e6f5703fdd89bc6cbeddcce767e58ddbf50",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "02/11/02 9:09 AM",
          "commitNameOld": "a865663e990e225a3b614c6245aae571817a3f2a",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 5.08,
          "commitsBetweenForRepo": 37,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,15 @@\n-    private boolean isBooleanLiteralReturnStatement(AST aAST)\n+    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n         if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n \n         if (expr \u003d\u003d null) {\n             return false;\n         }\n \n         final AST value \u003d expr.getFirstChild();\n-\n-        final int valueType \u003d value.getType();\n-        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n-                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n+        return isBooleanLiteralType(value.getType());\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if (expr \u003d\u003d null) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n        return isBooleanLiteralType(value.getType());\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "a865663e990e225a3b614c6245aae571817a3f2a": {
      "type": "Ybodychange",
      "commitMessage": "fixed NPE\n",
      "commitDate": "02/11/02 9:09 AM",
      "commitName": "a865663e990e225a3b614c6245aae571817a3f2a",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "30/10/02 2:28 PM",
      "commitNameOld": "663a1a72f4e81c0aa7f9ba359d2d38447c14e8bf",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,18 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n+        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n+\n+        if (expr \u003d\u003d null) {\n+            return false;\n+        }\n+\n         final AST value \u003d expr.getFirstChild();\n \n         final int valueType \u003d value.getType();\n         return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n                 || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST \u003d\u003d null || aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n\n        if (expr \u003d\u003d null) {\n            return false;\n        }\n\n        final AST value \u003d expr.getFirstChild();\n\n        final int valueType \u003d value.getType();\n        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "84eddc36730c1eca845257201c71a0d1fb2d40cf": {
      "type": "Ybodychange",
      "commitMessage": "Added a new class TokenTypes that contains all the type constants. This class\nbreaks the circular dependencies - the cost is needing to maintain this class\nwhen a new grammar is introduced.\n",
      "commitDate": "18/10/02 11:28 PM",
      "commitName": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "17/10/02 3:52 PM",
      "commitNameOld": "7f35e143a2472ecb49625cc841bd0482fe3dfeea",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 1.32,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return) {\n+        if (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n             return false;\n         }\n \n         final AST expr \u003d aAST.getFirstChild();\n         final AST value \u003d expr.getFirstChild();\n \n         final int valueType \u003d value.getType();\n-        return ((valueType \u003d\u003d JavaTokenTypes.LITERAL_true)\n-                || (valueType \u003d\u003d JavaTokenTypes.LITERAL_false));\n+        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n+                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST.getType() !\u003d TokenTypes.LITERAL_RETURN) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n        final AST value \u003d expr.getFirstChild();\n\n        final int valueType \u003d value.getType();\n        return ((valueType \u003d\u003d TokenTypes.LITERAL_TRUE)\n                || (valueType \u003d\u003d TokenTypes.LITERAL_FALSE));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "d077a402da51bb238a7da99d5e2542437b145192": {
      "type": "Ybodychange",
      "commitMessage": "Added a lot more checks for name format. Also endeavouring to get Checkstyle\npassing Javadoc again before it gets out of control.\n",
      "commitDate": "26/09/02 11:41 PM",
      "commitName": "d077a402da51bb238a7da99d5e2542437b145192",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "15/09/02 10:08 PM",
      "commitNameOld": "ffb17cde0f6351bdf2f2e8cf655fa7f7a3cae827",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 11.06,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n     private boolean isBooleanLiteralReturnStatement(AST aAST)\n     {\n-        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return)\n+        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return) {\n             return false;\n+        }\n \n-        AST expr \u003d aAST.getFirstChild();\n-        AST value \u003d expr.getFirstChild();\n+        final AST expr \u003d aAST.getFirstChild();\n+        final AST value \u003d expr.getFirstChild();\n \n-        int valueType \u003d value.getType();\n-        return ( valueType \u003d\u003d JavaTokenTypes.LITERAL_true\n-                || valueType \u003d\u003d JavaTokenTypes.LITERAL_false );\n+        final int valueType \u003d value.getType();\n+        return ((valueType \u003d\u003d JavaTokenTypes.LITERAL_true)\n+                || (valueType \u003d\u003d JavaTokenTypes.LITERAL_false));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return) {\n            return false;\n        }\n\n        final AST expr \u003d aAST.getFirstChild();\n        final AST value \u003d expr.getFirstChild();\n\n        final int valueType \u003d value.getType();\n        return ((valueType \u003d\u003d JavaTokenTypes.LITERAL_true)\n                || (valueType \u003d\u003d JavaTokenTypes.LITERAL_false));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java",
      "extendedDetails": {}
    },
    "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d": {
      "type": "Yintroduced",
      "commitMessage": "initial checkin of check implementations\n",
      "commitDate": "15/09/02 9:35 AM",
      "commitName": "15b4a0f888fb1d5b374fdd5ae11ec1865113c30d",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,12 @@\n+    private boolean isBooleanLiteralReturnStatement(AST aAST)\n+    {\n+        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return)\n+            return false;\n+\n+        AST expr \u003d aAST.getFirstChild();\n+        AST value \u003d expr.getFirstChild();\n+\n+        int valueType \u003d value.getType();\n+        return ( valueType \u003d\u003d JavaTokenTypes.LITERAL_true\n+                || valueType \u003d\u003d JavaTokenTypes.LITERAL_false );\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isBooleanLiteralReturnStatement(AST aAST)\n    {\n        if (aAST.getType() !\u003d JavaTokenTypes.LITERAL_return)\n            return false;\n\n        AST expr \u003d aAST.getFirstChild();\n        AST value \u003d expr.getFirstChild();\n\n        int valueType \u003d value.getType();\n        return ( valueType \u003d\u003d JavaTokenTypes.LITERAL_true\n                || valueType \u003d\u003d JavaTokenTypes.LITERAL_false );\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/SimplifyBooleanReturnCheck.java"
    }
  }
}