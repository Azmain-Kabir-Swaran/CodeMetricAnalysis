{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RightCurlyCheck.java",
  "functionName": "getDetailsForOthers",
  "functionId": "getDetailsForOthers___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
  "functionStartLine": 614,
  "functionEndLine": 631,
  "numCommitsSeen": 94,
  "timeTaken": 1825,
  "changeHistory": [
    "95defdd68df471f69b0749474c3b5b7a5e76b4f9",
    "c28d843de6991058a791e2ff2371e398afaf896b",
    "e47095a84a5a5034213948e31ca53d422fa50828",
    "1e528d6988aa11c9b06caa7daf88d3edec0add6f",
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
    "59aa0915eae4629a5787edba5eb487389e27cf72"
  ],
  "changeHistoryShort": {
    "95defdd68df471f69b0749474c3b5b7a5e76b4f9": "Ybodychange",
    "c28d843de6991058a791e2ff2371e398afaf896b": "Ybodychange",
    "e47095a84a5a5034213948e31ca53d422fa50828": "Ybodychange",
    "1e528d6988aa11c9b06caa7daf88d3edec0add6f": "Ybodychange",
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726": "Ybodychange",
    "59aa0915eae4629a5787edba5eb487389e27cf72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95defdd68df471f69b0749474c3b5b7a5e76b4f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7161: ENUM_DEF support added for RightCurlyCheck\n",
      "commitDate": "08/01/20 11:46 AM",
      "commitName": "95defdd68df471f69b0749474c3b5b7a5e76b4f9",
      "commitAuthor": "sd1998",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.8,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n         private static Details getDetailsForOthers(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             final int tokenType \u003d ast.getType();\n-            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF || tokenType \u003d\u003d TokenTypes.ANNOTATION_DEF) {\n+            if (isTokenWithNoChildSlist(tokenType)) {\n                 final DetailAST child \u003d ast.getLastChild();\n                 lcurly \u003d child.getFirstChild();\n                 rcurly \u003d child.getLastChild();\n             }\n             else {\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent if method is abstract\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n             }\n             return new Details(lcurly, rcurly, getNextToken(ast), true);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final int tokenType \u003d ast.getType();\n            if (isTokenWithNoChildSlist(tokenType)) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            return new Details(lcurly, rcurly, getNextToken(ast), true);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "c28d843de6991058a791e2ff2371e398afaf896b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7041: ANNOTATION_DEF support added in RightCurlyCheck\n",
      "commitDate": "28/12/19 6:51 AM",
      "commitName": "c28d843de6991058a791e2ff2371e398afaf896b",
      "commitAuthor": "sd1998",
      "commitDateOld": "25/12/19 11:15 PM",
      "commitNameOld": "ab477c741938c0b446fd2beffec412049e6beb21",
      "commitAuthorOld": "sd1998",
      "daysBetweenCommits": 2.32,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n         private static Details getDetailsForOthers(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             final int tokenType \u003d ast.getType();\n-            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n+            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF || tokenType \u003d\u003d TokenTypes.ANNOTATION_DEF) {\n                 final DetailAST child \u003d ast.getLastChild();\n                 lcurly \u003d child.getFirstChild();\n                 rcurly \u003d child.getLastChild();\n             }\n             else {\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent if method is abstract\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n             }\n             return new Details(lcurly, rcurly, getNextToken(ast), true);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF || tokenType \u003d\u003d TokenTypes.ANNOTATION_DEF) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            return new Details(lcurly, rcurly, getNextToken(ast), true);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "e47095a84a5a5034213948e31ca53d422fa50828": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6466: do not complain in same-mode about constructs that are not multi-part\n",
      "commitDate": "17/04/19 5:05 AM",
      "commitName": "e47095a84a5a5034213948e31ca53d422fa50828",
      "commitAuthor": "Bj√∂rn Kautler",
      "commitDateOld": "05/04/19 6:40 AM",
      "commitNameOld": "2be5521faf9a5457eacc8fa9b4bf0eb787911adb",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 11.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n         private static Details getDetailsForOthers(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                 final DetailAST child \u003d ast.getLastChild();\n                 lcurly \u003d child.getFirstChild();\n                 rcurly \u003d child.getLastChild();\n             }\n             else {\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent if method is abstract\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n             }\n-            return new Details(lcurly, rcurly, getNextToken(ast), false);\n+            return new Details(lcurly, rcurly, getNextToken(ast), true);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            return new Details(lcurly, rcurly, getNextToken(ast), true);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "1e528d6988aa11c9b06caa7daf88d3edec0add6f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4022: Removed shouldStartLine property for RightCurly\n",
      "commitDate": "10/01/19 12:22 PM",
      "commitName": "1e528d6988aa11c9b06caa7daf88d3edec0add6f",
      "commitAuthor": "Piyush Sharma",
      "commitDateOld": "10/01/19 12:17 PM",
      "commitNameOld": "3316f0b1a179c3ecd2ca3c21d9a81129282ba630",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n         private static Details getDetailsForOthers(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n-            final DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                 final DetailAST child \u003d ast.getLastChild();\n                 lcurly \u003d child.getFirstChild();\n                 rcurly \u003d child.getLastChild();\n-                nextToken \u003d ast;\n             }\n             else {\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent if method is abstract\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n-                nextToken \u003d getNextToken(ast);\n             }\n-            return new Details(lcurly, rcurly, nextToken, false);\n+            return new Details(lcurly, rcurly, getNextToken(ast), false);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            return new Details(lcurly, rcurly, getNextToken(ast), false);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6241: resolved teamcity 2018.3 violations",
      "commitDate": "02/12/18 8:23 PM",
      "commitName": "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/18 7:22 AM",
      "commitNameOld": "32fed6694b84b5773e74dfd07b2b080a8d498128",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 23.54,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,21 @@\n         private static Details getDetailsForOthers(DetailAST ast) {\n             DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             final DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                 final DetailAST child \u003d ast.getLastChild();\n                 lcurly \u003d child.getFirstChild();\n                 rcurly \u003d child.getLastChild();\n                 nextToken \u003d ast;\n             }\n-            else if (tokenType \u003d\u003d TokenTypes.METHOD_DEF) {\n+            else {\n                 lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                 if (lcurly !\u003d null) {\n                     // SLIST could be absent if method is abstract\n                     rcurly \u003d lcurly.getLastChild();\n                 }\n                 nextToken \u003d getNextToken(ast);\n             }\n-            else {\n-                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n-                rcurly \u003d lcurly.getLastChild();\n-                nextToken \u003d getNextToken(ast);\n-            }\n             return new Details(lcurly, rcurly, nextToken, false);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n                nextToken \u003d ast;\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n                nextToken \u003d getNextToken(ast);\n            }\n            return new Details(lcurly, rcurly, nextToken, false);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "59aa0915eae4629a5787edba5eb487389e27cf72": {
      "type": "Yintroduced",
      "commitMessage": "minor: Refactored getDetails method of RightCurlyCheck\n",
      "commitDate": "02/05/17 6:40 AM",
      "commitName": "59aa0915eae4629a5787edba5eb487389e27cf72",
      "commitAuthor": "Piyush Sharma",
      "diff": "@@ -0,0 +1,26 @@\n+        private static Details getDetailsForOthers(DetailAST ast) {\n+            DetailAST rcurly \u003d null;\n+            final DetailAST lcurly;\n+            final DetailAST nextToken;\n+            final int tokenType \u003d ast.getType();\n+            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n+                final DetailAST child \u003d ast.getLastChild();\n+                lcurly \u003d child.getFirstChild();\n+                rcurly \u003d child.getLastChild();\n+                nextToken \u003d ast;\n+            }\n+            else if (tokenType \u003d\u003d TokenTypes.METHOD_DEF) {\n+                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n+                if (lcurly !\u003d null) {\n+                    // SLIST could be absent if method is abstract\n+                    rcurly \u003d lcurly.getLastChild();\n+                }\n+                nextToken \u003d getNextToken(ast);\n+            }\n+            else {\n+                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n+                rcurly \u003d lcurly.getLastChild();\n+                nextToken \u003d getNextToken(ast);\n+            }\n+            return new Details(lcurly, rcurly, nextToken, false);\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForOthers(DetailAST ast) {\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            final DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.CLASS_DEF) {\n                final DetailAST child \u003d ast.getLastChild();\n                lcurly \u003d child.getFirstChild();\n                rcurly \u003d child.getLastChild();\n                nextToken \u003d ast;\n            }\n            else if (tokenType \u003d\u003d TokenTypes.METHOD_DEF) {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                if (lcurly !\u003d null) {\n                    // SLIST could be absent if method is abstract\n                    rcurly \u003d lcurly.getLastChild();\n                }\n                nextToken \u003d getNextToken(ast);\n            }\n            else {\n                lcurly \u003d ast.findFirstToken(TokenTypes.SLIST);\n                rcurly \u003d lcurly.getLastChild();\n                nextToken \u003d getNextToken(ast);\n            }\n            return new Details(lcurly, rcurly, nextToken, false);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java"
    }
  }
}