{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RightCurlyCheck.java",
  "functionName": "getDetailsForIfElse",
  "functionId": "getDetailsForIfElse___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
  "functionStartLine": 585,
  "functionEndLine": 605,
  "numCommitsSeen": 94,
  "timeTaken": 1765,
  "changeHistory": [
    "856a7ed4f96b61165a0114314b351367e0ccae29",
    "e47095a84a5a5034213948e31ca53d422fa50828",
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630",
    "301cfffe5fa625de3f8ea717fe7bf380410c6381",
    "84dbecdb8b2279470ec416f7a66ca0c7a8cf9687",
    "59aa0915eae4629a5787edba5eb487389e27cf72"
  ],
  "changeHistoryShort": {
    "856a7ed4f96b61165a0114314b351367e0ccae29": "Ybodychange",
    "e47095a84a5a5034213948e31ca53d422fa50828": "Ybodychange",
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630": "Ybodychange",
    "301cfffe5fa625de3f8ea717fe7bf380410c6381": "Ybodychange",
    "84dbecdb8b2279470ec416f7a66ca0c7a8cf9687": "Ybodychange",
    "59aa0915eae4629a5787edba5eb487389e27cf72": "Yintroduced"
  },
  "changeHistoryDetails": {
    "856a7ed4f96b61165a0114314b351367e0ccae29": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6367: resolved pitest for blocks package",
      "commitDate": "01/10/19 1:20 PM",
      "commitName": "856a7ed4f96b61165a0114314b351367e0ccae29",
      "commitAuthor": "rnveach",
      "commitDateOld": "16/06/19 11:16 AM",
      "commitNameOld": "f6918d804237558beed5ab9464081ef76e3d2cff",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 107.09,
      "commitsBetweenForRepo": 229,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,21 @@\n         private static Details getDetailsForIfElse(DetailAST ast) {\n             final boolean shouldCheckLastRcurly;\n             final DetailAST lcurly;\n-            DetailAST nextToken;\n-            final int tokenType \u003d ast.getType();\n-            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n-                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                    lcurly \u003d ast.getLastChild();\n-                }\n-                else {\n-                    shouldCheckLastRcurly \u003d false;\n-                    lcurly \u003d nextToken.getPreviousSibling();\n-                }\n-            }\n-            else {\n+            DetailAST nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n+\n+            if (nextToken \u003d\u003d null) {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n-                lcurly \u003d ast.getFirstChild();\n+                lcurly \u003d ast.getLastChild();\n             }\n+            else {\n+                shouldCheckLastRcurly \u003d false;\n+                lcurly \u003d nextToken.getPreviousSibling();\n+            }\n+\n             DetailAST rcurly \u003d null;\n             if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                 rcurly \u003d lcurly.getLastChild();\n             }\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            final boolean shouldCheckLastRcurly;\n            final DetailAST lcurly;\n            DetailAST nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n\n            if (nextToken \u003d\u003d null) {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getLastChild();\n            }\n            else {\n                shouldCheckLastRcurly \u003d false;\n                lcurly \u003d nextToken.getPreviousSibling();\n            }\n\n            DetailAST rcurly \u003d null;\n            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "e47095a84a5a5034213948e31ca53d422fa50828": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6466: do not complain in same-mode about constructs that are not multi-part\n",
      "commitDate": "17/04/19 5:05 AM",
      "commitName": "e47095a84a5a5034213948e31ca53d422fa50828",
      "commitAuthor": "Bj√∂rn Kautler",
      "commitDateOld": "05/04/19 6:40 AM",
      "commitNameOld": "2be5521faf9a5457eacc8fa9b4bf0eb787911adb",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 11.93,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n         private static Details getDetailsForIfElse(DetailAST ast) {\n-            boolean shouldCheckLastRcurly \u003d false;\n+            final boolean shouldCheckLastRcurly;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                 nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                 if (nextToken \u003d\u003d null) {\n                     shouldCheckLastRcurly \u003d true;\n                     nextToken \u003d getNextToken(ast);\n                     lcurly \u003d ast.getLastChild();\n                 }\n                 else {\n+                    shouldCheckLastRcurly \u003d false;\n                     lcurly \u003d nextToken.getPreviousSibling();\n                 }\n             }\n             else {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n                 lcurly \u003d ast.getFirstChild();\n             }\n             DetailAST rcurly \u003d null;\n             if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                 rcurly \u003d lcurly.getLastChild();\n             }\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            final boolean shouldCheckLastRcurly;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                    lcurly \u003d ast.getLastChild();\n                }\n                else {\n                    shouldCheckLastRcurly \u003d false;\n                    lcurly \u003d nextToken.getPreviousSibling();\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n            }\n            DetailAST rcurly \u003d null;\n            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "3316f0b1a179c3ecd2ca3c21d9a81129282ba630": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: revert of fixes for RightCurly to let merge fix for #4022 first\n",
      "commitDate": "10/01/19 12:17 PM",
      "commitName": "3316f0b1a179c3ecd2ca3c21d9a81129282ba630",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "03/01/19 10:40 PM",
      "commitNameOld": "301cfffe5fa625de3f8ea717fe7bf380410c6381",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,27 @@\n         private static Details getDetailsForIfElse(DetailAST ast) {\n             boolean shouldCheckLastRcurly \u003d false;\n             final DetailAST lcurly;\n-            DetailAST nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n-            if (nextToken \u003d\u003d null) {\n-                shouldCheckLastRcurly \u003d true;\n-                nextToken \u003d getNextToken(ast);\n-                lcurly \u003d ast.getLastChild();\n+            DetailAST nextToken;\n+            final int tokenType \u003d ast.getType();\n+            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n+                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                    lcurly \u003d ast.getLastChild();\n+                }\n+                else {\n+                    lcurly \u003d nextToken.getPreviousSibling();\n+                }\n             }\n             else {\n-                lcurly \u003d nextToken.getPreviousSibling();\n+                shouldCheckLastRcurly \u003d true;\n+                nextToken \u003d getNextToken(ast);\n+                lcurly \u003d ast.getFirstChild();\n             }\n             DetailAST rcurly \u003d null;\n             if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                 rcurly \u003d lcurly.getLastChild();\n             }\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                    lcurly \u003d ast.getLastChild();\n                }\n                else {\n                    lcurly \u003d nextToken.getPreviousSibling();\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n            }\n            DetailAST rcurly \u003d null;\n            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "301cfffe5fa625de3f8ea717fe7bf380410c6381": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for blocks",
      "commitDate": "03/01/19 10:40 PM",
      "commitName": "301cfffe5fa625de3f8ea717fe7bf380410c6381",
      "commitAuthor": "rnveach",
      "commitDateOld": "19/12/18 8:36 AM",
      "commitNameOld": "257681b015217bf0e151c147e08e544d6881fba7",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.59,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,18 @@\n         private static Details getDetailsForIfElse(DetailAST ast) {\n             boolean shouldCheckLastRcurly \u003d false;\n             final DetailAST lcurly;\n-            DetailAST nextToken;\n-            final int tokenType \u003d ast.getType();\n-            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n-                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n-                if (nextToken \u003d\u003d null) {\n-                    shouldCheckLastRcurly \u003d true;\n-                    nextToken \u003d getNextToken(ast);\n-                    lcurly \u003d ast.getLastChild();\n-                }\n-                else {\n-                    lcurly \u003d nextToken.getPreviousSibling();\n-                }\n-            }\n-            else {\n+            DetailAST nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n+            if (nextToken \u003d\u003d null) {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n-                lcurly \u003d ast.getFirstChild();\n+                lcurly \u003d ast.getLastChild();\n+            }\n+            else {\n+                lcurly \u003d nextToken.getPreviousSibling();\n             }\n             DetailAST rcurly \u003d null;\n             if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                 rcurly \u003d lcurly.getLastChild();\n             }\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            final DetailAST lcurly;\n            DetailAST nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n            if (nextToken \u003d\u003d null) {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getLastChild();\n            }\n            else {\n                lcurly \u003d nextToken.getPreviousSibling();\n            }\n            DetailAST rcurly \u003d null;\n            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "84dbecdb8b2279470ec416f7a66ca0c7a8cf9687": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5949: fix \u0027if statement with identical branches\u0027 violations\n",
      "commitDate": "23/06/18 7:20 AM",
      "commitName": "84dbecdb8b2279470ec416f7a66ca0c7a8cf9687",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 19.4,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,27 @@\n         private static Details getDetailsForIfElse(DetailAST ast) {\n             boolean shouldCheckLastRcurly \u003d false;\n-            DetailAST rcurly \u003d null;\n             final DetailAST lcurly;\n             DetailAST nextToken;\n             final int tokenType \u003d ast.getType();\n             if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                 nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                 if (nextToken \u003d\u003d null) {\n                     shouldCheckLastRcurly \u003d true;\n                     nextToken \u003d getNextToken(ast);\n                     lcurly \u003d ast.getLastChild();\n                 }\n                 else {\n                     lcurly \u003d nextToken.getPreviousSibling();\n                 }\n-                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n-                    rcurly \u003d lcurly.getLastChild();\n-                }\n             }\n             else {\n                 shouldCheckLastRcurly \u003d true;\n                 nextToken \u003d getNextToken(ast);\n                 lcurly \u003d ast.getFirstChild();\n-                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n-                    rcurly \u003d lcurly.getLastChild();\n-                }\n+            }\n+            DetailAST rcurly \u003d null;\n+            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+                rcurly \u003d lcurly.getLastChild();\n             }\n             return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n         }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                    lcurly \u003d ast.getLastChild();\n                }\n                else {\n                    lcurly \u003d nextToken.getPreviousSibling();\n                }\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n            }\n            DetailAST rcurly \u003d null;\n            if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                rcurly \u003d lcurly.getLastChild();\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java",
      "extendedDetails": {}
    },
    "59aa0915eae4629a5787edba5eb487389e27cf72": {
      "type": "Yintroduced",
      "commitMessage": "minor: Refactored getDetails method of RightCurlyCheck\n",
      "commitDate": "02/05/17 6:40 AM",
      "commitName": "59aa0915eae4629a5787edba5eb487389e27cf72",
      "commitAuthor": "Piyush Sharma",
      "diff": "@@ -0,0 +1,31 @@\n+        private static Details getDetailsForIfElse(DetailAST ast) {\n+            boolean shouldCheckLastRcurly \u003d false;\n+            DetailAST rcurly \u003d null;\n+            final DetailAST lcurly;\n+            DetailAST nextToken;\n+            final int tokenType \u003d ast.getType();\n+            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n+                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n+                if (nextToken \u003d\u003d null) {\n+                    shouldCheckLastRcurly \u003d true;\n+                    nextToken \u003d getNextToken(ast);\n+                    lcurly \u003d ast.getLastChild();\n+                }\n+                else {\n+                    lcurly \u003d nextToken.getPreviousSibling();\n+                }\n+                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+                    rcurly \u003d lcurly.getLastChild();\n+                }\n+\n+            }\n+            else {\n+                shouldCheckLastRcurly \u003d true;\n+                nextToken \u003d getNextToken(ast);\n+                lcurly \u003d ast.getFirstChild();\n+                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n+                    rcurly \u003d lcurly.getLastChild();\n+                }\n+            }\n+            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        private static Details getDetailsForIfElse(DetailAST ast) {\n            boolean shouldCheckLastRcurly \u003d false;\n            DetailAST rcurly \u003d null;\n            final DetailAST lcurly;\n            DetailAST nextToken;\n            final int tokenType \u003d ast.getType();\n            if (tokenType \u003d\u003d TokenTypes.LITERAL_IF) {\n                nextToken \u003d ast.findFirstToken(TokenTypes.LITERAL_ELSE);\n                if (nextToken \u003d\u003d null) {\n                    shouldCheckLastRcurly \u003d true;\n                    nextToken \u003d getNextToken(ast);\n                    lcurly \u003d ast.getLastChild();\n                }\n                else {\n                    lcurly \u003d nextToken.getPreviousSibling();\n                }\n                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                    rcurly \u003d lcurly.getLastChild();\n                }\n\n            }\n            else {\n                shouldCheckLastRcurly \u003d true;\n                nextToken \u003d getNextToken(ast);\n                lcurly \u003d ast.getFirstChild();\n                if (lcurly.getType() \u003d\u003d TokenTypes.SLIST) {\n                    rcurly \u003d lcurly.getLastChild();\n                }\n            }\n            return new Details(lcurly, rcurly, nextToken, shouldCheckLastRcurly);\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/RightCurlyCheck.java"
    }
  }
}