{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "checkTypeParameters",
  "functionId": "checkTypeParameters___node-DetailAST(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 638,
  "functionEndLine": 643,
  "numCommitsSeen": 76,
  "timeTaken": 825,
  "changeHistory": [
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b",
    "fdf3438b48f8753dd2f8b806673089944149ae78"
  ],
  "changeHistoryShort": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": "Ybodychange",
    "fdf3438b48f8753dd2f8b806673089944149ae78": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22fab018ad719cf35a58ab99d0daddfb8d29da7b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6118: IllegalType should check extends \u0026 implements\n",
      "commitDate": "23/10/18 1:37 PM",
      "commitName": "22fab018ad719cf35a58ab99d0daddfb8d29da7b",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "14/10/18 8:24 AM",
      "commitNameOld": "fdf3438b48f8753dd2f8b806673089944149ae78",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 9.22,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,6 @@\n     private void checkTypeParameters(final DetailAST node) {\n         final DetailAST typeParameters \u003d node.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n         if (typeParameters !\u003d null) {\n-            final DetailAST typeParameter \u003d\n-                    typeParameters.findFirstToken(TokenTypes.TYPE_PARAMETER);\n-            checkType(typeParameter);\n-            DetailAST sibling \u003d typeParameter.getNextSibling();\n-            while (sibling !\u003d null) {\n-                if (sibling.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n-                    checkType(sibling);\n-                }\n-                sibling \u003d sibling.getNextSibling();\n-            }\n+            TokenUtil.forEachChild(typeParameters, TokenTypes.TYPE_PARAMETER, this::checkType);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkTypeParameters(final DetailAST node) {\n        final DetailAST typeParameters \u003d node.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n        if (typeParameters !\u003d null) {\n            TokenUtil.forEachChild(typeParameters, TokenTypes.TYPE_PARAMETER, this::checkType);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
      "extendedDetails": {}
    },
    "fdf3438b48f8753dd2f8b806673089944149ae78": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5118: IllegalType does not check type arguments/parameters\n",
      "commitDate": "14/10/18 8:24 AM",
      "commitName": "fdf3438b48f8753dd2f8b806673089944149ae78",
      "commitAuthor": "Pavel Bludov",
      "diff": "@@ -0,0 +1,15 @@\n+    private void checkTypeParameters(final DetailAST node) {\n+        final DetailAST typeParameters \u003d node.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n+        if (typeParameters !\u003d null) {\n+            final DetailAST typeParameter \u003d\n+                    typeParameters.findFirstToken(TokenTypes.TYPE_PARAMETER);\n+            checkType(typeParameter);\n+            DetailAST sibling \u003d typeParameter.getNextSibling();\n+            while (sibling !\u003d null) {\n+                if (sibling.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n+                    checkType(sibling);\n+                }\n+                sibling \u003d sibling.getNextSibling();\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkTypeParameters(final DetailAST node) {\n        final DetailAST typeParameters \u003d node.findFirstToken(TokenTypes.TYPE_PARAMETERS);\n        if (typeParameters !\u003d null) {\n            final DetailAST typeParameter \u003d\n                    typeParameters.findFirstToken(TokenTypes.TYPE_PARAMETER);\n            checkType(typeParameter);\n            DetailAST sibling \u003d typeParameter.getNextSibling();\n            while (sibling !\u003d null) {\n                if (sibling.getType() \u003d\u003d TokenTypes.TYPE_PARAMETER) {\n                    checkType(sibling);\n                }\n                sibling \u003d sibling.getNextSibling();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}