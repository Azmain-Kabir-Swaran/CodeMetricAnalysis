{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XMLLogger.java",
  "functionName": "encode",
  "functionId": "encode___value-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
  "functionStartLine": 248,
  "functionEndLine": 288,
  "numCommitsSeen": 115,
  "timeTaken": 2617,
  "changeHistory": [
    "2a5690c28a5ce3af7341428f6b71b6897733cf74",
    "0412aecbbc5d3717249264d9b1ef506fa9a72aeb",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "a43191d49473b50097f172884a2bf55494c49567",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
    "5f5142b2325051f9ed31130167c73d154d547211",
    "8fe2518e3221159d454d6d80922c4eed1c21a80d",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d"
  ],
  "changeHistoryShort": {
    "2a5690c28a5ce3af7341428f6b71b6897733cf74": "Ybodychange",
    "0412aecbbc5d3717249264d9b1ef506fa9a72aeb": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "a43191d49473b50097f172884a2bf55494c49567": "Ybodychange",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ybodychange",
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": "Ybodychange",
    "5f5142b2325051f9ed31130167c73d154d547211": "Ybodychange",
    "8fe2518e3221159d454d6d80922c4eed1c21a80d": "Ymodifierchange",
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2a5690c28a5ce3af7341428f6b71b6897733cf74": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5162: fixed sanitizing non-printable characters in xml file",
      "commitDate": "10/10/17 7:29 AM",
      "commitName": "2a5690c28a5ce3af7341428f6b71b6897733cf74",
      "commitAuthor": "rnveach",
      "commitDateOld": "10/10/17 7:29 AM",
      "commitNameOld": "0412aecbbc5d3717249264d9b1ef506fa9a72aeb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,41 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder(256);\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     sb.append(\"\u0026amp;\");\n                     break;\n                 case \u0027\\r\u0027:\n                     break;\n                 case \u0027\\n\u0027:\n                     sb.append(\"\u0026#10;\");\n                     break;\n                 default:\n-                    sb.append(chr);\n+                    if (Character.isISOControl(chr)) {\n+                        // true escape characters need \u0027\u0026\u0027 before but it also requires XML 1.1\n+                        // until https://github.com/checkstyle/checkstyle/issues/5168\n+                        sb.append(\"#x\");\n+                        sb.append(Integer.toHexString(chr));\n+                        sb.append(\u0027;\u0027);\n+                    }\n+                    else {\n+                        sb.append(chr);\n+                    }\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder(256);\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(\"\u0026amp;\");\n                    break;\n                case \u0027\\r\u0027:\n                    break;\n                case \u0027\\n\u0027:\n                    sb.append(\"\u0026#10;\");\n                    break;\n                default:\n                    if (Character.isISOControl(chr)) {\n                        // true escape characters need \u0027\u0026\u0027 before but it also requires XML 1.1\n                        // until https://github.com/checkstyle/checkstyle/issues/5168\n                        sb.append(\"#x\");\n                        sb.append(Integer.toHexString(chr));\n                        sb.append(\u0027;\u0027);\n                    }\n                    else {\n                        sb.append(chr);\n                    }\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "0412aecbbc5d3717249264d9b1ef506fa9a72aeb": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5162: fixed sanitizing ampersand in xml file",
      "commitDate": "10/10/17 7:29 AM",
      "commitName": "0412aecbbc5d3717249264d9b1ef506fa9a72aeb",
      "commitAuthor": "rnveach",
      "commitDateOld": "31/08/17 6:32 AM",
      "commitNameOld": "07a730c0d1b89593e17fa8920faf9c226200e7b5",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 40.04,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder(256);\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n-                    sb.append(encodeAmpersand(value, i));\n+                    sb.append(\"\u0026amp;\");\n                     break;\n                 case \u0027\\r\u0027:\n                     break;\n                 case \u0027\\n\u0027:\n                     sb.append(\"\u0026#10;\");\n                     break;\n                 default:\n                     sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder(256);\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(\"\u0026amp;\");\n                    break;\n                case \u0027\\r\u0027:\n                    break;\n                case \u0027\\n\u0027:\n                    sb.append(\"\u0026#10;\");\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "07/07/17 5:45 AM",
      "commitNameOld": "96641268d6ecdae405692c7e4471856a342cc062",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 20.31,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public static String encode(String value) {\n-        final StringBuilder sb \u003d new StringBuilder();\n+        final StringBuilder sb \u003d new StringBuilder(256);\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     sb.append(encodeAmpersand(value, i));\n                     break;\n                 case \u0027\\r\u0027:\n                     break;\n                 case \u0027\\n\u0027:\n                     sb.append(\"\u0026#10;\");\n                     break;\n                 default:\n                     sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder(256);\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(encodeAmpersand(value, i));\n                    break;\n                case \u0027\\r\u0027:\n                    break;\n                case \u0027\\n\u0027:\n                    sb.append(\"\u0026#10;\");\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "a43191d49473b50097f172884a2bf55494c49567": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4350: expanded exception violation when haltOnException is off",
      "commitDate": "26/05/17 7:11 AM",
      "commitName": "a43191d49473b50097f172884a2bf55494c49567",
      "commitAuthor": "rnveach",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 118.99,
      "commitsBetweenForRepo": 407,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     sb.append(encodeAmpersand(value, i));\n                     break;\n+                case \u0027\\r\u0027:\n+                    break;\n+                case \u0027\\n\u0027:\n+                    sb.append(\"\u0026#10;\");\n+                    break;\n                 default:\n                     sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(encodeAmpersand(value, i));\n                    break;\n                case \u0027\\r\u0027:\n                    break;\n                case \u0027\\n\u0027:\n                    sb.append(\"\u0026#10;\");\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": "16/10/15 4:35 PM",
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "14/10/15 5:52 PM",
      "commitNameOld": "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 1.95,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n-                    sb.append(encodeAmpersend(value, i));\n+                    sb.append(encodeAmpersand(value, i));\n                     break;\n                 default:\n                     sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(encodeAmpersand(value, i));\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "99f8726600ebd9f73b86eacf5e44d0335266d8fc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #46: switch case clauses should not have too many lines.\n",
      "commitDate": "14/10/15 5:52 PM",
      "commitName": "99f8726600ebd9f73b86eacf5e44d0335266d8fc",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "06/10/15 7:42 PM",
      "commitNameOld": "6e1b3fadeddf5219a74285b898fde47e34a81e4d",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 7.92,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,27 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char chr \u003d value.charAt(i);\n             switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n-                    final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n-                    if (nextSemi \u003c 0\n-                        || !isReference(value.substring(i, nextSemi + 1))) {\n-                        sb.append(\"\u0026amp;\");\n-                    }\n-                    else {\n-                        sb.append(\u0027\u0026\u0027);\n-                    }\n+                    sb.append(encodeAmpersend(value, i));\n                     break;\n                 default:\n                     sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    sb.append(encodeAmpersend(value, i));\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "5f5142b2325051f9ed31130167c73d154d547211": {
      "type": "Ybodychange",
      "commitMessage": "Issue #985: Fix PMD violations for ShortVariable rule\n",
      "commitDate": "06/10/15 7:33 PM",
      "commitName": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "06/10/15 5:46 PM",
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n-            final char c \u003d value.charAt(i);\n-            switch (c) {\n+            final char chr \u003d value.charAt(i);\n+            switch (chr) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                     if (nextSemi \u003c 0\n                         || !isReference(value.substring(i, nextSemi + 1))) {\n                         sb.append(\"\u0026amp;\");\n                     }\n                     else {\n                         sb.append(\u0027\u0026\u0027);\n                     }\n                     break;\n                 default:\n-                    sb.append(c);\n+                    sb.append(chr);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char chr \u003d value.charAt(i);\n            switch (chr) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                    if (nextSemi \u003c 0\n                        || !isReference(value.substring(i, nextSemi + 1))) {\n                        sb.append(\"\u0026amp;\");\n                    }\n                    else {\n                        sb.append(\u0027\u0026\u0027);\n                    }\n                    break;\n                default:\n                    sb.append(chr);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "8fe2518e3221159d454d6d80922c4eed1c21a80d": {
      "type": "Ymodifierchange",
      "commitMessage": "UTs coverage increaded for XMLLogger. #1294\n",
      "commitDate": "12/07/15 6:22 PM",
      "commitName": "8fe2518e3221159d454d6d80922c4eed1c21a80d",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 56.57,
      "commitsBetweenForRepo": 336,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n-    public String encode(String value) {\n+    public static String encode(String value) {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char c \u003d value.charAt(i);\n             switch (c) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                     if (nextSemi \u003c 0\n                         || !isReference(value.substring(i, nextSemi + 1))) {\n                         sb.append(\"\u0026amp;\");\n                     }\n                     else {\n                         sb.append(\u0027\u0026\u0027);\n                     }\n                     break;\n                 default:\n                     sb.append(c);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String encode(String value) {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                    if (nextSemi \u003c 0\n                        || !isReference(value.substring(i, nextSemi + 1))) {\n                        sb.append(\"\u0026amp;\");\n                    }\n                    else {\n                        sb.append(\u0027\u0026\u0027);\n                    }\n                    break;\n                default:\n                    sb.append(c);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, static]"
      }
    },
    "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671": {
      "type": "Ybodychange",
      "commitMessage": "Fix PMD violations from \u0027strings\u0027 ruleset, issue #873\n",
      "commitDate": "15/04/15 8:56 AM",
      "commitName": "1c42e3eeb9aeebc47b2373541c1cc8d311d8b671",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 35.76,
      "commitsBetweenForRepo": 163,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     public String encode(String value)\n     {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char c \u003d value.charAt(i);\n             switch (c) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n-                    final int nextSemi \u003d value.indexOf(\";\", i);\n+                    final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                     if (nextSemi \u003c 0\n                         || !isReference(value.substring(i, nextSemi + 1)))\n                     {\n                         sb.append(\"\u0026amp;\");\n                     }\n                     else {\n                         sb.append(\u0027\u0026\u0027);\n                     }\n                     break;\n                 default:\n                     sb.append(c);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String encode(String value)\n    {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    final int nextSemi \u003d value.indexOf(\u0027;\u0027, i);\n                    if (nextSemi \u003c 0\n                        || !isReference(value.substring(i, nextSemi + 1)))\n                    {\n                        sb.append(\"\u0026amp;\");\n                    }\n                    else {\n                        sb.append(\u0027\u0026\u0027);\n                    }\n                    break;\n                default:\n                    sb.append(c);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "10/03/15 7:46 AM",
      "commitNameOld": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.28,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     public String encode(String value)\n     {\n         final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char c \u003d value.charAt(i);\n             switch (c) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     final int nextSemi \u003d value.indexOf(\";\", i);\n-                    if ((nextSemi \u003c 0)\n+                    if (nextSemi \u003c 0\n                         || !isReference(value.substring(i, nextSemi + 1)))\n                     {\n                         sb.append(\"\u0026amp;\");\n                     }\n                     else {\n                         sb.append(\u0027\u0026\u0027);\n                     }\n                     break;\n                 default:\n                     sb.append(c);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String encode(String value)\n    {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    final int nextSemi \u003d value.indexOf(\";\", i);\n                    if (nextSemi \u003c 0\n                        || !isReference(value.substring(i, nextSemi + 1)))\n                    {\n                        sb.append(\"\u0026amp;\");\n                    }\n                    else {\n                        sb.append(\u0027\u0026\u0027);\n                    }\n                    break;\n                default:\n                    sb.append(c);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": {
      "type": "Ybodychange",
      "commitMessage": "Replace `StringBuffer` with `StringBuilder` to improve performance\n\nThread-safety given by `StringBuffer` doesn\u0027t give any benefit when used within one method, so in such cases `StringBuilder` is safe and more efficient replacement.\n",
      "commitDate": "15/02/15 12:57 AM",
      "commitName": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "22/01/15 4:26 AM",
      "commitNameOld": "95c1a081e0868fc3ac9faf05d09ca8b2bb06a5cc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 23.85,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     public String encode(String value)\n     {\n-        final StringBuffer sb \u003d new StringBuffer();\n+        final StringBuilder sb \u003d new StringBuilder();\n         for (int i \u003d 0; i \u003c value.length(); i++) {\n             final char c \u003d value.charAt(i);\n             switch (c) {\n                 case \u0027\u003c\u0027:\n                     sb.append(\"\u0026lt;\");\n                     break;\n                 case \u0027\u003e\u0027:\n                     sb.append(\"\u0026gt;\");\n                     break;\n                 case \u0027\\\u0027\u0027:\n                     sb.append(\"\u0026apos;\");\n                     break;\n                 case \u0027\\\"\u0027:\n                     sb.append(\"\u0026quot;\");\n                     break;\n                 case \u0027\u0026\u0027:\n                     final int nextSemi \u003d value.indexOf(\";\", i);\n                     if ((nextSemi \u003c 0)\n                         || !isReference(value.substring(i, nextSemi + 1)))\n                     {\n                         sb.append(\"\u0026amp;\");\n                     }\n                     else {\n                         sb.append(\u0027\u0026\u0027);\n                     }\n                     break;\n                 default:\n                     sb.append(c);\n                     break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String encode(String value)\n    {\n        final StringBuilder sb \u003d new StringBuilder();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n                case \u0027\u003c\u0027:\n                    sb.append(\"\u0026lt;\");\n                    break;\n                case \u0027\u003e\u0027:\n                    sb.append(\"\u0026gt;\");\n                    break;\n                case \u0027\\\u0027\u0027:\n                    sb.append(\"\u0026apos;\");\n                    break;\n                case \u0027\\\"\u0027:\n                    sb.append(\"\u0026quot;\");\n                    break;\n                case \u0027\u0026\u0027:\n                    final int nextSemi \u003d value.indexOf(\";\", i);\n                    if ((nextSemi \u003c 0)\n                        || !isReference(value.substring(i, nextSemi + 1)))\n                    {\n                        sb.append(\"\u0026amp;\");\n                    }\n                    else {\n                        sb.append(\u0027\u0026\u0027);\n                    }\n                    break;\n                default:\n                    sb.append(c);\n                    break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.34,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-    public String encode(String aValue)\n+    public String encode(String value)\n     {\n         final StringBuffer sb \u003d new StringBuffer();\n-        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n-            final char c \u003d aValue.charAt(i);\n+        for (int i \u003d 0; i \u003c value.length(); i++) {\n+            final char c \u003d value.charAt(i);\n             switch (c) {\n             case \u0027\u003c\u0027:\n                 sb.append(\"\u0026lt;\");\n                 break;\n             case \u0027\u003e\u0027:\n                 sb.append(\"\u0026gt;\");\n                 break;\n             case \u0027\\\u0027\u0027:\n                 sb.append(\"\u0026apos;\");\n                 break;\n             case \u0027\\\"\u0027:\n                 sb.append(\"\u0026quot;\");\n                 break;\n             case \u0027\u0026\u0027:\n-                final int nextSemi \u003d aValue.indexOf(\";\", i);\n+                final int nextSemi \u003d value.indexOf(\";\", i);\n                 if ((nextSemi \u003c 0)\n-                    || !isReference(aValue.substring(i, nextSemi + 1)))\n+                    || !isReference(value.substring(i, nextSemi + 1)))\n                 {\n                     sb.append(\"\u0026amp;\");\n                 }\n                 else {\n                     sb.append(\u0027\u0026\u0027);\n                 }\n                 break;\n             default:\n                 sb.append(c);\n                 break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public String encode(String value)\n    {\n        final StringBuffer sb \u003d new StringBuffer();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n            case \u0027\u003c\u0027:\n                sb.append(\"\u0026lt;\");\n                break;\n            case \u0027\u003e\u0027:\n                sb.append(\"\u0026gt;\");\n                break;\n            case \u0027\\\u0027\u0027:\n                sb.append(\"\u0026apos;\");\n                break;\n            case \u0027\\\"\u0027:\n                sb.append(\"\u0026quot;\");\n                break;\n            case \u0027\u0026\u0027:\n                final int nextSemi \u003d value.indexOf(\";\", i);\n                if ((nextSemi \u003c 0)\n                    || !isReference(value.substring(i, nextSemi + 1)))\n                {\n                    sb.append(\"\u0026amp;\");\n                }\n                else {\n                    sb.append(\u0027\u0026\u0027);\n                }\n                break;\n            default:\n                sb.append(c);\n                break;\n            }\n        }\n        return sb.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
          "extendedDetails": {
            "oldValue": "[aValue-String]",
            "newValue": "[value-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:33 PM",
          "commitNameOld": "7aa061665c2b005f97b0c05bf03604636175dc9a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.34,
          "commitsBetweenForRepo": 94,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,36 +1,36 @@\n-    public String encode(String aValue)\n+    public String encode(String value)\n     {\n         final StringBuffer sb \u003d new StringBuffer();\n-        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n-            final char c \u003d aValue.charAt(i);\n+        for (int i \u003d 0; i \u003c value.length(); i++) {\n+            final char c \u003d value.charAt(i);\n             switch (c) {\n             case \u0027\u003c\u0027:\n                 sb.append(\"\u0026lt;\");\n                 break;\n             case \u0027\u003e\u0027:\n                 sb.append(\"\u0026gt;\");\n                 break;\n             case \u0027\\\u0027\u0027:\n                 sb.append(\"\u0026apos;\");\n                 break;\n             case \u0027\\\"\u0027:\n                 sb.append(\"\u0026quot;\");\n                 break;\n             case \u0027\u0026\u0027:\n-                final int nextSemi \u003d aValue.indexOf(\";\", i);\n+                final int nextSemi \u003d value.indexOf(\";\", i);\n                 if ((nextSemi \u003c 0)\n-                    || !isReference(aValue.substring(i, nextSemi + 1)))\n+                    || !isReference(value.substring(i, nextSemi + 1)))\n                 {\n                     sb.append(\"\u0026amp;\");\n                 }\n                 else {\n                     sb.append(\u0027\u0026\u0027);\n                 }\n                 break;\n             default:\n                 sb.append(c);\n                 break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public String encode(String value)\n    {\n        final StringBuffer sb \u003d new StringBuffer();\n        for (int i \u003d 0; i \u003c value.length(); i++) {\n            final char c \u003d value.charAt(i);\n            switch (c) {\n            case \u0027\u003c\u0027:\n                sb.append(\"\u0026lt;\");\n                break;\n            case \u0027\u003e\u0027:\n                sb.append(\"\u0026gt;\");\n                break;\n            case \u0027\\\u0027\u0027:\n                sb.append(\"\u0026apos;\");\n                break;\n            case \u0027\\\"\u0027:\n                sb.append(\"\u0026quot;\");\n                break;\n            case \u0027\u0026\u0027:\n                final int nextSemi \u003d value.indexOf(\";\", i);\n                if ((nextSemi \u003c 0)\n                    || !isReference(value.substring(i, nextSemi + 1)))\n                {\n                    sb.append(\"\u0026amp;\");\n                }\n                else {\n                    sb.append(\u0027\u0026\u0027);\n                }\n                break;\n            default:\n                sb.append(c);\n                break;\n            }\n        }\n        return sb.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public String encode(String aValue)\n    {\n        final StringBuffer sb \u003d new StringBuffer();\n        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n            final char c \u003d aValue.charAt(i);\n            switch (c) {\n            case \u0027\u003c\u0027:\n                sb.append(\"\u0026lt;\");\n                break;\n            case \u0027\u003e\u0027:\n                sb.append(\"\u0026gt;\");\n                break;\n            case \u0027\\\u0027\u0027:\n                sb.append(\"\u0026apos;\");\n                break;\n            case \u0027\\\"\u0027:\n                sb.append(\"\u0026quot;\");\n                break;\n            case \u0027\u0026\u0027:\n                final int nextSemi \u003d aValue.indexOf(\";\", i);\n                if ((nextSemi \u003c 0)\n                    || !isReference(aValue.substring(i, nextSemi + 1)))\n                {\n                    sb.append(\"\u0026amp;\");\n                }\n                else {\n                    sb.append(\u0027\u0026\u0027);\n                }\n                break;\n            default:\n                sb.append(c);\n                break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/XMLLogger.java"
      }
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.68,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n     public String encode(String aValue)\n     {\n         final StringBuffer sb \u003d new StringBuffer();\n         for (int i \u003d 0; i \u003c aValue.length(); i++) {\n-            char c \u003d aValue.charAt(i);\n+            final char c \u003d aValue.charAt(i);\n             switch (c) {\n             case \u0027\u003c\u0027:\n                 sb.append(\"\u0026lt;\");\n                 break;\n             case \u0027\u003e\u0027:\n                 sb.append(\"\u0026gt;\");\n                 break;\n             case \u0027\\\u0027\u0027:\n                 sb.append(\"\u0026apos;\");\n                 break;\n             case \u0027\\\"\u0027:\n                 sb.append(\"\u0026quot;\");\n                 break;\n             case \u0027\u0026\u0027:\n-                int nextSemi \u003d aValue.indexOf(\";\", i);\n+                final int nextSemi \u003d aValue.indexOf(\";\", i);\n                 if ((nextSemi \u003c 0)\n                     || !isReference(aValue.substring(i, nextSemi + 1)))\n                 {\n                     sb.append(\"\u0026amp;\");\n                 }\n                 else {\n                     sb.append(\u0027\u0026\u0027);\n                 }\n                 break;\n             default:\n                 sb.append(c);\n                 break;\n             }\n         }\n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public String encode(String aValue)\n    {\n        final StringBuffer sb \u003d new StringBuffer();\n        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n            final char c \u003d aValue.charAt(i);\n            switch (c) {\n            case \u0027\u003c\u0027:\n                sb.append(\"\u0026lt;\");\n                break;\n            case \u0027\u003e\u0027:\n                sb.append(\"\u0026gt;\");\n                break;\n            case \u0027\\\u0027\u0027:\n                sb.append(\"\u0026apos;\");\n                break;\n            case \u0027\\\"\u0027:\n                sb.append(\"\u0026quot;\");\n                break;\n            case \u0027\u0026\u0027:\n                final int nextSemi \u003d aValue.indexOf(\";\", i);\n                if ((nextSemi \u003c 0)\n                    || !isReference(aValue.substring(i, nextSemi + 1)))\n                {\n                    sb.append(\"\u0026amp;\");\n                }\n                else {\n                    sb.append(\u0027\u0026\u0027);\n                }\n                break;\n            default:\n                sb.append(c);\n                break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java",
      "extendedDetails": {}
    },
    "1d21af32b9949396bb3f010cd3f3addec4075b5d": {
      "type": "Yintroduced",
      "commitMessage": "first cut\n",
      "commitDate": "30/08/01 9:21 AM",
      "commitName": "1d21af32b9949396bb3f010cd3f3addec4075b5d",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,36 @@\n+    public String encode(String aValue)\n+    {\n+        final StringBuffer sb \u003d new StringBuffer();\n+        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n+            char c \u003d aValue.charAt(i);\n+            switch (c) {\n+            case \u0027\u003c\u0027:\n+                sb.append(\"\u0026lt;\");\n+                break;\n+            case \u0027\u003e\u0027:\n+                sb.append(\"\u0026gt;\");\n+                break;\n+            case \u0027\\\u0027\u0027:\n+                sb.append(\"\u0026apos;\");\n+                break;\n+            case \u0027\\\"\u0027:\n+                sb.append(\"\u0026quot;\");\n+                break;\n+            case \u0027\u0026\u0027:\n+                int nextSemi \u003d aValue.indexOf(\";\", i);\n+                if ((nextSemi \u003c 0) ||\n+                    !isReference(aValue.substring(i, nextSemi + 1)))\n+                {\n+                    sb.append(\"\u0026amp;\");\n+                }\n+                else {\n+                    sb.append(\u0027\u0026\u0027);\n+                }\n+                break;\n+            default:\n+                sb.append(c);\n+                break;\n+            }\n+        }\n+        return sb.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public String encode(String aValue)\n    {\n        final StringBuffer sb \u003d new StringBuffer();\n        for (int i \u003d 0; i \u003c aValue.length(); i++) {\n            char c \u003d aValue.charAt(i);\n            switch (c) {\n            case \u0027\u003c\u0027:\n                sb.append(\"\u0026lt;\");\n                break;\n            case \u0027\u003e\u0027:\n                sb.append(\"\u0026gt;\");\n                break;\n            case \u0027\\\u0027\u0027:\n                sb.append(\"\u0026apos;\");\n                break;\n            case \u0027\\\"\u0027:\n                sb.append(\"\u0026quot;\");\n                break;\n            case \u0027\u0026\u0027:\n                int nextSemi \u003d aValue.indexOf(\";\", i);\n                if ((nextSemi \u003c 0) ||\n                    !isReference(aValue.substring(i, nextSemi + 1)))\n                {\n                    sb.append(\"\u0026amp;\");\n                }\n                else {\n                    sb.append(\u0027\u0026\u0027);\n                }\n                break;\n            default:\n                sb.append(c);\n                break;\n            }\n        }\n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/XMLLogger.java"
    }
  }
}