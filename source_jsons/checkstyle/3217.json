{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MissingJavadocPackageCheck.java",
  "functionName": "hasJavadocAboveAnnotation",
  "functionId": "hasJavadocAboveAnnotation___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocPackageCheck.java",
  "functionStartLine": 121,
  "functionEndLine": 136,
  "numCommitsSeen": 6,
  "timeTaken": 1223,
  "changeHistory": [
    "1a15273bcfd598e380531ccae4562fc47952d7c4",
    "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a"
  ],
  "changeHistoryShort": {
    "1a15273bcfd598e380531ccae4562fc47952d7c4": "Ymultichange(Yrename,Ybodychange)",
    "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a15273bcfd598e380531ccae4562fc47952d7c4": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "Issue #7117: fix package info javadoc check\n",
      "commitDate": "03/12/19 3:13 PM",
      "commitName": "1a15273bcfd598e380531ccae4562fc47952d7c4",
      "commitAuthor": "Andrei Paikin",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Issue #7117: fix package info javadoc check\n",
          "commitDate": "03/12/19 3:13 PM",
          "commitName": "1a15273bcfd598e380531ccae4562fc47952d7c4",
          "commitAuthor": "Andrei Paikin",
          "commitDateOld": "18/06/19 2:16 PM",
          "commitNameOld": "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a",
          "commitAuthorOld": "Andrei Paikin",
          "daysBetweenCommits": 168.08,
          "commitsBetweenForRepo": 334,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-    private static boolean hasJavadoc(DetailAST ast) {\n-        final boolean hasBefore \u003d isJavadocComment(ast.getPreviousSibling());\n-        // need to go 3 levels down the tree for annotation case\n-        final boolean hasWithAnnotation \u003d Optional.of(ast.getFirstChild())\n+    private static boolean hasJavadocAboveAnnotation(DetailAST ast) {\n+        final Optional\u003cDetailAST\u003e firstAnnotationChild \u003d Optional.of(ast.getFirstChild())\n             .map(DetailAST::getFirstChild)\n-            .map(DetailAST::getFirstChild)\n-            .map(MissingJavadocPackageCheck::isJavadocComment)\n-            .orElse(false);\n-        return hasBefore || hasWithAnnotation;\n+            .map(DetailAST::getFirstChild);\n+        boolean result \u003d false;\n+        if (firstAnnotationChild.isPresent()) {\n+            for (DetailAST child \u003d firstAnnotationChild.get(); child !\u003d null;\n+                 child \u003d child.getNextSibling()) {\n+                if (isJavadoc(child)) {\n+                    result \u003d true;\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean hasJavadocAboveAnnotation(DetailAST ast) {\n        final Optional\u003cDetailAST\u003e firstAnnotationChild \u003d Optional.of(ast.getFirstChild())\n            .map(DetailAST::getFirstChild)\n            .map(DetailAST::getFirstChild);\n        boolean result \u003d false;\n        if (firstAnnotationChild.isPresent()) {\n            for (DetailAST child \u003d firstAnnotationChild.get(); child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n                if (isJavadoc(child)) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocPackageCheck.java",
          "extendedDetails": {
            "oldValue": "hasJavadoc",
            "newValue": "hasJavadocAboveAnnotation"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #7117: fix package info javadoc check\n",
          "commitDate": "03/12/19 3:13 PM",
          "commitName": "1a15273bcfd598e380531ccae4562fc47952d7c4",
          "commitAuthor": "Andrei Paikin",
          "commitDateOld": "18/06/19 2:16 PM",
          "commitNameOld": "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a",
          "commitAuthorOld": "Andrei Paikin",
          "daysBetweenCommits": 168.08,
          "commitsBetweenForRepo": 334,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,16 @@\n-    private static boolean hasJavadoc(DetailAST ast) {\n-        final boolean hasBefore \u003d isJavadocComment(ast.getPreviousSibling());\n-        // need to go 3 levels down the tree for annotation case\n-        final boolean hasWithAnnotation \u003d Optional.of(ast.getFirstChild())\n+    private static boolean hasJavadocAboveAnnotation(DetailAST ast) {\n+        final Optional\u003cDetailAST\u003e firstAnnotationChild \u003d Optional.of(ast.getFirstChild())\n             .map(DetailAST::getFirstChild)\n-            .map(DetailAST::getFirstChild)\n-            .map(MissingJavadocPackageCheck::isJavadocComment)\n-            .orElse(false);\n-        return hasBefore || hasWithAnnotation;\n+            .map(DetailAST::getFirstChild);\n+        boolean result \u003d false;\n+        if (firstAnnotationChild.isPresent()) {\n+            for (DetailAST child \u003d firstAnnotationChild.get(); child !\u003d null;\n+                 child \u003d child.getNextSibling()) {\n+                if (isJavadoc(child)) {\n+                    result \u003d true;\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean hasJavadocAboveAnnotation(DetailAST ast) {\n        final Optional\u003cDetailAST\u003e firstAnnotationChild \u003d Optional.of(ast.getFirstChild())\n            .map(DetailAST::getFirstChild)\n            .map(DetailAST::getFirstChild);\n        boolean result \u003d false;\n        if (firstAnnotationChild.isPresent()) {\n            for (DetailAST child \u003d firstAnnotationChild.get(); child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n                if (isJavadoc(child)) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocPackageCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a": {
      "type": "Yintroduced",
      "commitMessage": "Issue #6705: Add MissingJavadocPackageCheck\n",
      "commitDate": "18/06/19 2:16 PM",
      "commitName": "8d8e204e5ed2d900a6b070534272ff7cc8dfe17a",
      "commitAuthor": "Andrei Paikin",
      "diff": "@@ -0,0 +1,10 @@\n+    private static boolean hasJavadoc(DetailAST ast) {\n+        final boolean hasBefore \u003d isJavadocComment(ast.getPreviousSibling());\n+        // need to go 3 levels down the tree for annotation case\n+        final boolean hasWithAnnotation \u003d Optional.of(ast.getFirstChild())\n+            .map(DetailAST::getFirstChild)\n+            .map(DetailAST::getFirstChild)\n+            .map(MissingJavadocPackageCheck::isJavadocComment)\n+            .orElse(false);\n+        return hasBefore || hasWithAnnotation;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasJavadoc(DetailAST ast) {\n        final boolean hasBefore \u003d isJavadocComment(ast.getPreviousSibling());\n        // need to go 3 levels down the tree for annotation case\n        final boolean hasWithAnnotation \u003d Optional.of(ast.getFirstChild())\n            .map(DetailAST::getFirstChild)\n            .map(DetailAST::getFirstChild)\n            .map(MissingJavadocPackageCheck::isJavadocComment)\n            .orElse(false);\n        return hasBefore || hasWithAnnotation;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/MissingJavadocPackageCheck.java"
    }
  }
}