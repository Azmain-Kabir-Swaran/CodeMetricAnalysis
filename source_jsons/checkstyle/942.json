{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PackageNamesLoader.java",
  "functionName": "getPackageNames",
  "functionId": "getPackageNames___classLoader-ClassLoader",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
  "functionStartLine": 139,
  "functionEndLine": 163,
  "numCommitsSeen": 94,
  "timeTaken": 2100,
  "changeHistory": [
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
    "346387c717048391485fb28f877531aab1095de1",
    "3b452a2e88d0cb670be19818dbd8166335d65884",
    "e689662e9d47347cb2f326e1c16901ee1c4c6367",
    "e1d0e7f6361c32c69650ba789c1995e49a94142f",
    "06865630aa3da0b36064b9e00e0e95ff681f234e",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
    "fe9057366308642868c25d427c3ee94411b37170"
  ],
  "changeHistoryShort": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": "Ybodychange",
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": "Ybodychange",
    "346387c717048391485fb28f877531aab1095de1": "Ybodychange",
    "3b452a2e88d0cb670be19818dbd8166335d65884": "Ybodychange",
    "e689662e9d47347cb2f326e1c16901ee1c4c6367": "Ybodychange",
    "e1d0e7f6361c32c69650ba789c1995e49a94142f": "Ybodychange",
    "06865630aa3da0b36064b9e00e0e95ff681f234e": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": "Ybodychange",
    "fe9057366308642868c25d427c3ee94411b37170": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4713: fix all violations from the third part of idea violations\n",
      "commitDate": "20/07/17 10:04 PM",
      "commitName": "b1a0f2b5f61a997e0b7e3fdff8f19a0ae0180ac6",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "18/05/17 1:43 PM",
      "commitNameOld": "ddeb553834f10570089a033fa1ac1501b74ac358",
      "commitAuthorOld": "Luolc",
      "daysBetweenCommits": 63.35,
      "commitsBetweenForRepo": 284,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,26 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n-                final URL packageFile \u003d packageFiles.nextElement();\n-                InputStream stream \u003d null;\n-\n-                try {\n-                    stream \u003d new BufferedInputStream(packageFile.openStream());\n-                    final InputSource source \u003d new InputSource(stream);\n-                    namesLoader.parseInputSource(source);\n-                }\n-                catch (IOException ex) {\n-                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);\n-                }\n-                finally {\n-                    Closeables.closeQuietly(stream);\n-                }\n+                processFile(packageFiles.nextElement(), namesLoader);\n             }\n \n             result \u003d namesLoader.packageNames;\n-\n         }\n         catch (IOException ex) {\n             throw new CheckstyleException(\"unable to get package file resources\", ex);\n         }\n         catch (ParserConfigurationException | SAXException ex) {\n             throw new CheckstyleException(\"unable to open one of package files\", ex);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n            throws CheckstyleException {\n\n        final Set\u003cString\u003e result;\n        try {\n            //create the loader outside the loop to prevent PackageObjectFactory\n            //being created anew for each file\n            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n\n            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n\n            while (packageFiles.hasMoreElements()) {\n                processFile(packageFiles.nextElement(), namesLoader);\n            }\n\n            result \u003d namesLoader.packageNames;\n        }\n        catch (IOException ex) {\n            throw new CheckstyleException(\"unable to get package file resources\", ex);\n        }\n        catch (ParserConfigurationException | SAXException ex) {\n            throw new CheckstyleException(\"unable to open one of package files\", ex);\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "f65b17cbc30795247fef3077cce16a8bb53e9ffc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2616: Fix CatchParameterName check violations in Checkstyle code\n",
      "commitDate": "03/12/15 3:16 PM",
      "commitName": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "01/11/15 5:41 AM",
      "commitNameOld": "346387c717048391485fb28f877531aab1095de1",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 32.4,
      "commitsBetweenForRepo": 147,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n-                catch (IOException e) {\n-                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n+                catch (IOException ex) {\n+                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n             result \u003d namesLoader.packageNames;\n \n         }\n-        catch (IOException e) {\n-            throw new CheckstyleException(\"unable to get package file resources\", e);\n+        catch (IOException ex) {\n+            throw new CheckstyleException(\"unable to get package file resources\", ex);\n         }\n-        catch (ParserConfigurationException | SAXException e) {\n-            throw new CheckstyleException(\"unable to open one of package files\", e);\n+        catch (ParserConfigurationException | SAXException ex) {\n+            throw new CheckstyleException(\"unable to open one of package files\", ex);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n            throws CheckstyleException {\n\n        final Set\u003cString\u003e result;\n        try {\n            //create the loader outside the loop to prevent PackageObjectFactory\n            //being created anew for each file\n            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n\n            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n\n            while (packageFiles.hasMoreElements()) {\n                final URL packageFile \u003d packageFiles.nextElement();\n                InputStream stream \u003d null;\n\n                try {\n                    stream \u003d new BufferedInputStream(packageFile.openStream());\n                    final InputSource source \u003d new InputSource(stream);\n                    namesLoader.parseInputSource(source);\n                }\n                catch (IOException ex) {\n                    throw new CheckstyleException(\"unable to open \" + packageFile, ex);\n                }\n                finally {\n                    Closeables.closeQuietly(stream);\n                }\n            }\n\n            result \u003d namesLoader.packageNames;\n\n        }\n        catch (IOException ex) {\n            throw new CheckstyleException(\"unable to get package file resources\", ex);\n        }\n        catch (ParserConfigurationException | SAXException ex) {\n            throw new CheckstyleException(\"unable to open one of package files\", ex);\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "346387c717048391485fb28f877531aab1095de1": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1551: Fix FinalLocalVariable violations in checkstyle",
      "commitDate": "01/11/15 5:41 AM",
      "commitName": "346387c717048391485fb28f877531aab1095de1",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "03/09/15 6:06 PM",
      "commitNameOld": "2b4a02d2c8a498a8a1ee38e9396426209fa65fad",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 58.52,
      "commitsBetweenForRepo": 363,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n-        Set\u003cString\u003e result;\n+        final Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n                 catch (IOException e) {\n                     throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n             result \u003d namesLoader.packageNames;\n \n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to get package file resources\", e);\n         }\n         catch (ParserConfigurationException | SAXException e) {\n             throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n            throws CheckstyleException {\n\n        final Set\u003cString\u003e result;\n        try {\n            //create the loader outside the loop to prevent PackageObjectFactory\n            //being created anew for each file\n            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n\n            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n\n            while (packageFiles.hasMoreElements()) {\n                final URL packageFile \u003d packageFiles.nextElement();\n                InputStream stream \u003d null;\n\n                try {\n                    stream \u003d new BufferedInputStream(packageFile.openStream());\n                    final InputSource source \u003d new InputSource(stream);\n                    namesLoader.parseInputSource(source);\n                }\n                catch (IOException e) {\n                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                }\n                finally {\n                    Closeables.closeQuietly(stream);\n                }\n            }\n\n            result \u003d namesLoader.packageNames;\n\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to get package file resources\", e);\n        }\n        catch (ParserConfigurationException | SAXException e) {\n            throw new CheckstyleException(\"unable to open one of package files\", e);\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "3b452a2e88d0cb670be19818dbd8166335d65884": {
      "type": "Ybodychange",
      "commitMessage": "Inline calls to simple getters. #1555\n\nFixes `CallToSimpleGetterInClass` inspection violations.\n\nDescription:\n\u003eReports any calls to a simple property getter from within the property\u0027s class. A simple property getter is defined as one which simply returns the value of a field, and does no other calculation. Such simple getter calls may be safely inlined, at a small performance improvement. Some coding standards also suggest against the use of simple getters for code clarity reasons.\n",
      "commitDate": "22/08/15 4:32 AM",
      "commitName": "3b452a2e88d0cb670be19818dbd8166335d65884",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/08/15 1:25 AM",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 4.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n             throws CheckstyleException {\n \n         Set\u003cString\u003e result;\n         try {\n             //create the loader outside the loop to prevent PackageObjectFactory\n             //being created anew for each file\n             final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n \n             final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n \n             while (packageFiles.hasMoreElements()) {\n                 final URL packageFile \u003d packageFiles.nextElement();\n                 InputStream stream \u003d null;\n \n                 try {\n                     stream \u003d new BufferedInputStream(packageFile.openStream());\n                     final InputSource source \u003d new InputSource(stream);\n                     namesLoader.parseInputSource(source);\n                 }\n                 catch (IOException e) {\n                     throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                 }\n                 finally {\n                     Closeables.closeQuietly(stream);\n                 }\n             }\n \n-            result \u003d namesLoader.getPackageNames();\n+            result \u003d namesLoader.packageNames;\n \n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\"unable to get package file resources\", e);\n         }\n         catch (ParserConfigurationException | SAXException e) {\n             throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n            throws CheckstyleException {\n\n        Set\u003cString\u003e result;\n        try {\n            //create the loader outside the loop to prevent PackageObjectFactory\n            //being created anew for each file\n            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n\n            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n\n            while (packageFiles.hasMoreElements()) {\n                final URL packageFile \u003d packageFiles.nextElement();\n                InputStream stream \u003d null;\n\n                try {\n                    stream \u003d new BufferedInputStream(packageFile.openStream());\n                    final InputSource source \u003d new InputSource(stream);\n                    namesLoader.parseInputSource(source);\n                }\n                catch (IOException e) {\n                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                }\n                finally {\n                    Closeables.closeQuietly(stream);\n                }\n            }\n\n            result \u003d namesLoader.packageNames;\n\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to get package file resources\", e);\n        }\n        catch (ParserConfigurationException | SAXException e) {\n            throw new CheckstyleException(\"unable to open one of package files\", e);\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "e689662e9d47347cb2f326e1c16901ee1c4c6367": {
      "type": "Ybodychange",
      "commitMessage": "100% coverage for PackageNamesLoader. #1294\n",
      "commitDate": "25/07/15 10:54 PM",
      "commitName": "e689662e9d47347cb2f326e1c16901ee1c4c6367",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n-        throws CheckstyleException {\n+            throws CheckstyleException {\n \n-        Enumeration\u003cURL\u003e packageFiles \u003d null;\n+        Set\u003cString\u003e result;\n         try {\n-            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n+            //create the loader outside the loop to prevent PackageObjectFactory\n+            //being created anew for each file\n+            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n+\n+            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n+\n+            while (packageFiles.hasMoreElements()) {\n+                final URL packageFile \u003d packageFiles.nextElement();\n+                InputStream stream \u003d null;\n+\n+                try {\n+                    stream \u003d new BufferedInputStream(packageFile.openStream());\n+                    final InputSource source \u003d new InputSource(stream);\n+                    namesLoader.parseInputSource(source);\n+                }\n+                catch (IOException e) {\n+                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n+                }\n+                finally {\n+                    Closeables.closeQuietly(stream);\n+                }\n+            }\n+\n+            result \u003d namesLoader.getPackageNames();\n+\n         }\n         catch (IOException e) {\n-            throw new CheckstyleException(\n-                    \"unable to get package file resources\", e);\n+            throw new CheckstyleException(\"unable to get package file resources\", e);\n+        }\n+        catch (ParserConfigurationException | SAXException e) {\n+            throw new CheckstyleException(\"unable to open one of package files\", e);\n         }\n \n-        //create the loader outside the loop to prevent PackageObjectFactory\n-        //being created anew for each file\n-        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n-\n-        while (packageFiles.hasMoreElements()) {\n-            final URL packageFile \u003d packageFiles.nextElement();\n-            InputStream stream \u003d null;\n-\n-            try {\n-                stream \u003d new BufferedInputStream(packageFile.openStream());\n-                final InputSource source \u003d new InputSource(stream);\n-                loadPackageNamesSource(source, \"default package names\",\n-                    namesLoader);\n-            }\n-            catch (IOException e) {\n-                throw new CheckstyleException(\n-                        \"unable to open \" + packageFile, e);\n-            }\n-            finally {\n-                Closeables.closeQuietly(stream);\n-            }\n-        }\n-        return namesLoader.getPackageNames();\n+        return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n            throws CheckstyleException {\n\n        Set\u003cString\u003e result;\n        try {\n            //create the loader outside the loop to prevent PackageObjectFactory\n            //being created anew for each file\n            final PackageNamesLoader namesLoader \u003d new PackageNamesLoader();\n\n            final Enumeration\u003cURL\u003e packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n\n            while (packageFiles.hasMoreElements()) {\n                final URL packageFile \u003d packageFiles.nextElement();\n                InputStream stream \u003d null;\n\n                try {\n                    stream \u003d new BufferedInputStream(packageFile.openStream());\n                    final InputSource source \u003d new InputSource(stream);\n                    namesLoader.parseInputSource(source);\n                }\n                catch (IOException e) {\n                    throw new CheckstyleException(\"unable to open \" + packageFile, e);\n                }\n                finally {\n                    Closeables.closeQuietly(stream);\n                }\n            }\n\n            result \u003d namesLoader.getPackageNames();\n\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\"unable to get package file resources\", e);\n        }\n        catch (ParserConfigurationException | SAXException e) {\n            throw new CheckstyleException(\"unable to open one of package files\", e);\n        }\n\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "e1d0e7f6361c32c69650ba789c1995e49a94142f": {
      "type": "Ybodychange",
      "commitMessage": "fix for findbugs RCN_REDUNDANT_NULLCHECK_OF_NONNULL_VALUE. Issue #912\n",
      "commitDate": "10/04/15 4:20 PM",
      "commitName": "e1d0e7f6361c32c69650ba789c1995e49a94142f",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "26/03/15 12:35 PM",
      "commitNameOld": "06865630aa3da0b36064b9e00e0e95ff681f234e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 15.16,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n-        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n+        while (packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Closeables.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while (packageFiles.hasMoreElements()) {\n            final URL packageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(packageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + packageFile, e);\n            }\n            finally {\n                Closeables.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "06865630aa3da0b36064b9e00e0e95ff681f234e": {
      "type": "Ybodychange",
      "commitMessage": "Use Guava Closeables to manage closing exceptions\n\n\u003eWhile it\u0027s not safe in the general case to ignore exceptions that are thrown when closing an I/O resource, it should generally be safe in the case of a resource that\u0027s being used only for reading, such as a Reader. Unlike with writable resources, there\u0027s no chance that a failure that occurs when closing the reader indicates a meaningful problem such as a failure to flush all bytes to the underlying resource.\n\n`Reader` and `InputStream` instances are closed using `Closeables.closeQuietly()`, while `RandomAccessFile` is closed with `Closeables.close()` that throws `IOException` and needs to be handled.\n\nFrom Javadoc:\n\u003e```java\npublic static void close(@Nullable\n         Closeable closeable,\n         boolean swallowIOException)\n                  throws IOException\n```\n\u003eCloses a Closeable, with control over whether an IOException may be thrown. This is primarily useful in a finally block, where a thrown exception needs to be logged but not propagated (otherwise the original exception will be lost).\nIf swallowIOException is true then we never throw IOException but merely log it.\n\n\u003eExample:\n```java\n   public void useStreamNicely() throws IOException {\n     SomeStream stream \u003d new SomeStream(\"foo\");\n     boolean threw \u003d true;\n     try {\n       // ... code which does something with the stream ...\n       threw \u003d false;\n     } finally {\n       // If an exception occurs, rethrow it only if threw\u003d\u003dfalse:\n       Closeables.close(stream, threw);\n     }\n   }\n```\n\nMoreover, `Closeables.close()` and  `Flushables.flush()` are used to flush and close `OutputStream`.\n",
      "commitDate": "26/03/15 12:35 PM",
      "commitName": "06865630aa3da0b36064b9e00e0e95ff681f234e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "24/03/15 2:48 PM",
      "commitNameOld": "1dacd5303bfe94b9d5476059b6a5676146d96708",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 1.91,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n-                Utils.closeQuietly(stream);\n+                Closeables.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL packageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(packageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + packageFile, e);\n            }\n            finally {\n                Closeables.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "05/03/15 4:52 PM",
      "commitNameOld": "9ea39c8431be4c1b45648ccef79f21565f7d9c4b",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.86,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n-        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n+        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while (null !\u003d packageFiles \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL packageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(packageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + packageFile, e);\n            }\n            finally {\n                Utils.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n-    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n+    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n-            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n+            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n-            final URL aPackageFile \u003d packageFiles.nextElement();\n+            final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n-                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n+                stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n-                        \"unable to open \" + aPackageFile, e);\n+                        \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL packageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(packageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + packageFile, e);\n            }\n            finally {\n                Utils.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
          "extendedDetails": {
            "oldValue": "[aClassLoader-ClassLoader]",
            "newValue": "[classLoader-ClassLoader]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n-    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n+    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n-            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n+            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n-            final URL aPackageFile \u003d packageFiles.nextElement();\n+            final URL packageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n-                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n+                stream \u003d new BufferedInputStream(packageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n-                        \"unable to open \" + aPackageFile, e);\n+                        \"unable to open \" + packageFile, e);\n             }\n             finally {\n                 Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader classLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d classLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL packageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(packageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + packageFile, e);\n            }\n            finally {\n                Utils.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL aPackageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + aPackageFile, e);\n            }\n            finally {\n                Utils.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java"
      }
    },
    "bd8a1a545fd1bc19d5f84c5061c5383796a7c588": {
      "type": "Ybodychange",
      "commitMessage": "New check FileTabCharacter  for ensuring that any files does not contain a tab character. It is now used to ensure the documentation files do not contain tabs.\n\nAlso introduced Utils.closeQuietly to clean up code.\n",
      "commitDate": "05/11/08 11:21 PM",
      "commitName": "bd8a1a545fd1bc19d5f84c5061c5383796a7c588",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "24/04/08 1:09 AM",
      "commitNameOld": "06e8a4eaa00e548f52b2483864a31ba9defd0989",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 195.97,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,37 @@\n     public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n         throws CheckstyleException\n     {\n \n         Enumeration\u003cURL\u003e packageFiles \u003d null;\n         try {\n             packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n         }\n         catch (IOException e) {\n             throw new CheckstyleException(\n                     \"unable to get package file resources\", e);\n         }\n \n         //create the loader outside the loop to prevent PackageObjectFactory\n         //being created anew for each file\n         final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n \n         while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n             final URL aPackageFile \u003d packageFiles.nextElement();\n             InputStream stream \u003d null;\n \n             try {\n                 stream \u003d new BufferedInputStream(aPackageFile.openStream());\n                 final InputSource source \u003d new InputSource(stream);\n                 loadPackageNamesSource(source, \"default package names\",\n                     namesLoader);\n             }\n             catch (IOException e) {\n                 throw new CheckstyleException(\n                         \"unable to open \" + aPackageFile, e);\n             }\n             finally {\n-                if (stream !\u003d null) {\n-                    try {\n-                        stream.close();\n-                    }\n-                    catch (IOException e) {\n-                        throw new CheckstyleException(\n-                                \"error closing stream\", e);\n-                    }\n-                }\n+                Utils.closeQuietly(stream);\n             }\n         }\n         return namesLoader.getPackageNames();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL aPackageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + aPackageFile, e);\n            }\n            finally {\n                Utils.closeQuietly(stream);\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java",
      "extendedDetails": {}
    },
    "fe9057366308642868c25d427c3ee94411b37170": {
      "type": "Yintroduced",
      "commitMessage": "Apply patch #1914806 for PackageNamesLoader from Lars Koedderitzsch.\n",
      "commitDate": "07/04/08 6:35 PM",
      "commitName": "fe9057366308642868c25d427c3ee94411b37170",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,45 @@\n+    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n+        throws CheckstyleException\n+    {\n+\n+        Enumeration\u003cURL\u003e packageFiles \u003d null;\n+        try {\n+            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n+        }\n+        catch (IOException e) {\n+            throw new CheckstyleException(\n+                    \"unable to get package file resources\", e);\n+        }\n+\n+        //create the loader outside the loop to prevent PackageObjectFactory\n+        //being created anew for each file\n+        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n+\n+        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n+            final URL aPackageFile \u003d packageFiles.nextElement();\n+            InputStream stream \u003d null;\n+\n+            try {\n+                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n+                final InputSource source \u003d new InputSource(stream);\n+                loadPackageNamesSource(source, \"default package names\",\n+                    namesLoader);\n+            }\n+            catch (IOException e) {\n+                throw new CheckstyleException(\n+                        \"unable to open \" + aPackageFile, e);\n+            }\n+            finally {\n+                if (stream !\u003d null) {\n+                    try {\n+                        stream.close();\n+                    }\n+                    catch (IOException e) {\n+                        throw new CheckstyleException(\n+                                \"error closing stream\", e);\n+                    }\n+                }\n+            }\n+        }\n+        return namesLoader.getPackageNames();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static Set\u003cString\u003e getPackageNames(ClassLoader aClassLoader)\n        throws CheckstyleException\n    {\n\n        Enumeration\u003cURL\u003e packageFiles \u003d null;\n        try {\n            packageFiles \u003d aClassLoader.getResources(CHECKSTYLE_PACKAGES);\n        }\n        catch (IOException e) {\n            throw new CheckstyleException(\n                    \"unable to get package file resources\", e);\n        }\n\n        //create the loader outside the loop to prevent PackageObjectFactory\n        //being created anew for each file\n        final PackageNamesLoader namesLoader \u003d newPackageNamesLoader();\n\n        while ((null !\u003d packageFiles) \u0026\u0026 packageFiles.hasMoreElements()) {\n            final URL aPackageFile \u003d packageFiles.nextElement();\n            InputStream stream \u003d null;\n\n            try {\n                stream \u003d new BufferedInputStream(aPackageFile.openStream());\n                final InputSource source \u003d new InputSource(stream);\n                loadPackageNamesSource(source, \"default package names\",\n                    namesLoader);\n            }\n            catch (IOException e) {\n                throw new CheckstyleException(\n                        \"unable to open \" + aPackageFile, e);\n            }\n            finally {\n                if (stream !\u003d null) {\n                    try {\n                        stream.close();\n                    }\n                    catch (IOException e) {\n                        throw new CheckstyleException(\n                                \"error closing stream\", e);\n                    }\n                }\n            }\n        }\n        return namesLoader.getPackageNames();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/PackageNamesLoader.java"
    }
  }
}