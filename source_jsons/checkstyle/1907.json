{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MagicNumberCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
  "functionStartLine": 313,
  "functionEndLine": 332,
  "numCommitsSeen": 108,
  "timeTaken": 3152,
  "changeHistory": [
    "1f30d57b3d6e7691cf05255a3477ea624ca83e13",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "a707819ab73dded873917fd33e22d45d0e3e1860",
    "4d2e6647f9e8385749c382bcab5e64965a943178",
    "b4cec8170a1d89159620b327a453ce13215d4eea",
    "795968d20ed78e558a95fdd35702366327a4bdc1",
    "7a1b0b12a6caa0e8ccf6a7a0cc44046e7f93e339",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "e28ebec1e0158a27217ea2fe71cf39000157edea",
    "73ec35d35bcf970c588278cb18300dfdf814a704",
    "bd757c37dd4ba1384c761a98f31bdbbd22d1daf8",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1",
    "bd4ec9a98edaced73f14c5422f64c39fad3ce596",
    "60847a32d538e9a0f1c1de3e349e8b3833741506",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "7284e8aa425ef5ed01838e99fd228609ce3e1208"
  ],
  "changeHistoryShort": {
    "1f30d57b3d6e7691cf05255a3477ea624ca83e13": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "a707819ab73dded873917fd33e22d45d0e3e1860": "Ybodychange",
    "4d2e6647f9e8385749c382bcab5e64965a943178": "Ybodychange",
    "b4cec8170a1d89159620b327a453ce13215d4eea": "Ybodychange",
    "795968d20ed78e558a95fdd35702366327a4bdc1": "Ybodychange",
    "7a1b0b12a6caa0e8ccf6a7a0cc44046e7f93e339": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "e28ebec1e0158a27217ea2fe71cf39000157edea": "Ybodychange",
    "73ec35d35bcf970c588278cb18300dfdf814a704": "Ybodychange",
    "bd757c37dd4ba1384c761a98f31bdbbd22d1daf8": "Ybodychange",
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": "Ybodychange",
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1": "Ybodychange",
    "bd4ec9a98edaced73f14c5422f64c39fad3ce596": "Ybodychange",
    "60847a32d538e9a0f1c1de3e349e8b3833741506": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "7284e8aa425ef5ed01838e99fd228609ce3e1208": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f30d57b3d6e7691cf05255a3477ea624ca83e13": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4383: add ignoreAnnotationElementDefaults property in MagicNumber\n",
      "commitDate": "02/07/19 10:38 AM",
      "commitName": "1f30d57b3d6e7691cf05255a3477ea624ca83e13",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "20/03/19 5:28 AM",
      "commitNameOld": "f85f370f2e6731d0f1e724531529c763dbcf2980",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 104.22,
      "commitsBetweenForRepo": 211,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n     public void visitToken(DetailAST ast) {\n-        if ((!ignoreAnnotation || !isChildOf(ast, TokenTypes.ANNOTATION))\n+        if (shouldTestAnnotationArgs(ast)\n+                \u0026\u0026 shouldTestAnnotationDefaults(ast)\n                 \u0026\u0026 !isInIgnoreList(ast)\n                 \u0026\u0026 (!ignoreHashCodeMethod || !isInHashCodeMethod(ast))) {\n             final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n             if (constantDefAST \u003d\u003d null) {\n                 if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n                     reportMagicNumber(ast);\n                 }\n             }\n             else {\n                 final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n                 if (found) {\n                     reportMagicNumber(ast);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (shouldTestAnnotationArgs(ast)\n                \u0026\u0026 shouldTestAnnotationDefaults(ast)\n                \u0026\u0026 !isInIgnoreList(ast)\n                \u0026\u0026 (!ignoreHashCodeMethod || !isInHashCodeMethod(ast))) {\n            final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n            if (constantDefAST \u003d\u003d null) {\n                if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n                    reportMagicNumber(ast);\n                }\n            }\n            else {\n                final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n                if (found) {\n                    reportMagicNumber(ast);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/03/16 6:39 AM",
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 71.0,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,19 @@\n     public void visitToken(DetailAST ast) {\n-        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n-            return;\n-        }\n+        if ((!ignoreAnnotation || !isChildOf(ast, TokenTypes.ANNOTATION))\n+                \u0026\u0026 !isInIgnoreList(ast)\n+                \u0026\u0026 (!ignoreHashCodeMethod || !isInHashCodeMethod(ast))) {\n+            final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n-        if (isInIgnoreList(ast)\n-            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n-            return;\n-        }\n-\n-        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n-\n-        if (constantDefAST \u003d\u003d null) {\n-            if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n-                reportMagicNumber(ast);\n+            if (constantDefAST \u003d\u003d null) {\n+                if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n+                    reportMagicNumber(ast);\n+                }\n             }\n-        }\n-        else {\n-            final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n-            if (found) {\n-                reportMagicNumber(ast);\n+            else {\n+                final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n+                if (found) {\n+                    reportMagicNumber(ast);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if ((!ignoreAnnotation || !isChildOf(ast, TokenTypes.ANNOTATION))\n                \u0026\u0026 !isInIgnoreList(ast)\n                \u0026\u0026 (!ignoreHashCodeMethod || !isInHashCodeMethod(ast))) {\n            final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n            if (constantDefAST \u003d\u003d null) {\n                if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n                    reportMagicNumber(ast);\n                }\n            }\n            else {\n                final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n                if (found) {\n                    reportMagicNumber(ast);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "a707819ab73dded873917fd33e22d45d0e3e1860": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce AvoidConditionInversionCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "24/12/15 2:01 PM",
      "commitName": "a707819ab73dded873917fd33e22d45d0e3e1860",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "31/08/15 11:51 AM",
      "commitNameOld": "c899af31c112c07ea1244f6bbe2c5c6c56818ae5",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 115.13,
      "commitsBetweenForRepo": 687,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast) {\n         if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n             return;\n         }\n \n         if (isInIgnoreList(ast)\n             || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n-            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n+            if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n                 reportMagicNumber(ast);\n             }\n         }\n         else {\n             final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n             if (found) {\n                 reportMagicNumber(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n            return;\n        }\n\n        if (isInIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            if (!ignoreFieldDeclaration || !isFieldDeclaration(ast)) {\n                reportMagicNumber(ast);\n            }\n        }\n        else {\n            final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n            if (found) {\n                reportMagicNumber(ast);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "4d2e6647f9e8385749c382bcab5e64965a943178": {
      "type": "Ybodychange",
      "commitMessage": "Rename boolean methods to start with question word. #1555\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "27/08/15 12:53 PM",
      "commitName": "4d2e6647f9e8385749c382bcab5e64965a943178",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast) {\n         if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n             return;\n         }\n \n-        if (inIgnoreList(ast)\n+        if (isInIgnoreList(ast)\n             || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n             if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                 reportMagicNumber(ast);\n             }\n         }\n         else {\n             final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n             if (found) {\n                 reportMagicNumber(ast);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n            return;\n        }\n\n        if (isInIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                reportMagicNumber(ast);\n            }\n        }\n        else {\n            final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n            if (found) {\n                reportMagicNumber(ast);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "b4cec8170a1d89159620b327a453ce13215d4eea": {
      "type": "Ybodychange",
      "commitMessage": "MagicNumberCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "15/06/15 12:29 AM",
      "commitName": "b4cec8170a1d89159620b327a453ce13215d4eea",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "21/05/15 4:44 PM",
      "commitNameOld": "9dc87c52e507f9ac32ca8e3c85923b616a77c80b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 24.32,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,25 @@\n     public void visitToken(DetailAST ast) {\n         if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n             return;\n         }\n \n         if (inIgnoreList(ast)\n             || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n             if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                 reportMagicNumber(ast);\n             }\n         }\n         else {\n-            DetailAST astNode \u003d ast.getParent();\n-            while (astNode !\u003d constantDefAST) {\n-                final int type \u003d astNode.getType();\n-                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n-                    reportMagicNumber(ast);\n-                    break;\n-                }\n+            final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n+            if (found) {\n+                reportMagicNumber(ast);\n \n-                astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)) {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                reportMagicNumber(ast);\n            }\n        }\n        else {\n            final boolean found \u003d isMagicNumberExists(ast, constantDefAST);\n            if (found) {\n                reportMagicNumber(ast);\n\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "795968d20ed78e558a95fdd35702366327a4bdc1": {
      "type": "Ybodychange",
      "commitMessage": "Magic Number annotation detection enhanced for arbitary parent nodes, Issue #926\n",
      "commitDate": "11/05/15 12:53 PM",
      "commitName": "795968d20ed78e558a95fdd35702366327a4bdc1",
      "commitAuthor": "Mehmet Can Cömert",
      "commitDateOld": "05/05/15 4:40 PM",
      "commitNameOld": "e3b3bfb9997b28fc95d0f950e9673a595e2f4c7d",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 5.84,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(DetailAST ast)\n     {\n-        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n+        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n             return;\n         }\n \n         if (inIgnoreList(ast)\n             || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n         {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n             if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                 reportMagicNumber(ast);\n             }\n         }\n         else {\n             DetailAST astNode \u003d ast.getParent();\n             while (astNode !\u003d constantDefAST) {\n                 final int type \u003d astNode.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(ast);\n                     break;\n                 }\n \n                 astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ignoreAnnotation \u0026\u0026 isChildOf(ast, TokenTypes.ANNOTATION)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                reportMagicNumber(ast);\n            }\n        }\n        else {\n            DetailAST astNode \u003d ast.getParent();\n            while (astNode !\u003d constantDefAST) {\n                final int type \u003d astNode.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(ast);\n                    break;\n                }\n\n                astNode \u003d astNode.getParent();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "7a1b0b12a6caa0e8ccf6a7a0cc44046e7f93e339": {
      "type": "Ybodychange",
      "commitMessage": "Issue #148 magic number detection: option to ignore magic numbers in field declarations\n",
      "commitDate": "03/04/15 12:25 AM",
      "commitName": "7a1b0b12a6caa0e8ccf6a7a0cc44046e7f93e339",
      "commitAuthor": "ychulovskyy",
      "commitDateOld": "10/03/15 2:36 PM",
      "commitNameOld": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 23.41,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n             return;\n         }\n \n         if (inIgnoreList(ast)\n             || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n         {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n-            reportMagicNumber(ast);\n+            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n+                reportMagicNumber(ast);\n+            }\n         }\n         else {\n             DetailAST astNode \u003d ast.getParent();\n             while (astNode !\u003d constantDefAST) {\n                 final int type \u003d astNode.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(ast);\n                     break;\n                 }\n \n                 astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            if (!(ignoreFieldDeclaration \u0026\u0026 isFieldDeclaration(ast))) {\n                reportMagicNumber(ast);\n            }\n        }\n        else {\n            DetailAST astNode \u003d ast.getParent();\n            while (astNode !\u003d constantDefAST) {\n                final int type \u003d astNode.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(ast);\n                    break;\n                }\n\n                astNode \u003d astNode.getParent();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     public void visitToken(DetailAST ast)\n     {\n         if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n             return;\n         }\n \n         if (inIgnoreList(ast)\n-            || (ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)))\n+            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n         {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n             reportMagicNumber(ast);\n         }\n         else {\n             DetailAST astNode \u003d ast.getParent();\n             while (astNode !\u003d constantDefAST) {\n                 final int type \u003d astNode.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(ast);\n                     break;\n                 }\n \n                 astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(ast);\n        }\n        else {\n            DetailAST astNode \u003d ast.getParent();\n            while (astNode !\u003d constantDefAST) {\n                final int type \u003d astNode.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(ast);\n                    break;\n                }\n\n                astNode \u003d astNode.getParent();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        if (mIgnoreAnnotation \u0026\u0026 isInAnnotation(aAST)) {\n+        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n             return;\n         }\n \n-        if (inIgnoreList(aAST)\n-            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n+        if (inIgnoreList(ast)\n+            || (ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)))\n         {\n             return;\n         }\n \n-        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n+        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n-            reportMagicNumber(aAST);\n+            reportMagicNumber(ast);\n         }\n         else {\n-            DetailAST ast \u003d aAST.getParent();\n-            while (ast !\u003d constantDefAST) {\n-                final int type \u003d ast.getType();\n+            DetailAST astNode \u003d ast.getParent();\n+            while (astNode !\u003d constantDefAST) {\n+                final int type \u003d astNode.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n-                    reportMagicNumber(aAST);\n+                    reportMagicNumber(ast);\n                     break;\n                 }\n \n-                ast \u003d ast.getParent();\n+                astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || (ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(ast);\n        }\n        else {\n            DetailAST astNode \u003d ast.getParent();\n            while (astNode !\u003d constantDefAST) {\n                final int type \u003d astNode.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(ast);\n                    break;\n                }\n\n                astNode \u003d astNode.getParent();\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,30 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        if (mIgnoreAnnotation \u0026\u0026 isInAnnotation(aAST)) {\n+        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n             return;\n         }\n \n-        if (inIgnoreList(aAST)\n-            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n+        if (inIgnoreList(ast)\n+            || (ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)))\n         {\n             return;\n         }\n \n-        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n+        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n \n         if (constantDefAST \u003d\u003d null) {\n-            reportMagicNumber(aAST);\n+            reportMagicNumber(ast);\n         }\n         else {\n-            DetailAST ast \u003d aAST.getParent();\n-            while (ast !\u003d constantDefAST) {\n-                final int type \u003d ast.getType();\n+            DetailAST astNode \u003d ast.getParent();\n+            while (astNode !\u003d constantDefAST) {\n+                final int type \u003d astNode.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n-                    reportMagicNumber(aAST);\n+                    reportMagicNumber(ast);\n                     break;\n                 }\n \n-                ast \u003d ast.getParent();\n+                astNode \u003d astNode.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        if (ignoreAnnotation \u0026\u0026 isInAnnotation(ast)) {\n            return;\n        }\n\n        if (inIgnoreList(ast)\n            || (ignoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(ast)))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(ast);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(ast);\n        }\n        else {\n            DetailAST astNode \u003d ast.getParent();\n            while (astNode !\u003d constantDefAST) {\n                final int type \u003d astNode.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(ast);\n                    break;\n                }\n\n                astNode \u003d astNode.getParent();\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (mIgnoreAnnotation \u0026\u0026 isInAnnotation(aAST)) {\n            return;\n        }\n\n        if (inIgnoreList(aAST)\n            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n        else {\n            DetailAST ast \u003d aAST.getParent();\n            while (ast !\u003d constantDefAST) {\n                final int type \u003d ast.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(aAST);\n                    break;\n                }\n\n                ast \u003d ast.getParent();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java"
      }
    },
    "e28ebec1e0158a27217ea2fe71cf39000157edea": {
      "type": "Ybodychange",
      "commitMessage": "apply patch #3132984 - Ignore magic numbers to annotations in MagicNumberCheck\n",
      "commitDate": "30/12/10 10:50 PM",
      "commitName": "e28ebec1e0158a27217ea2fe71cf39000157edea",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/10/10 4:33 AM",
      "commitNameOld": "987d2d67d56e054adbe5ec56136dddb49f533137",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 87.8,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n     public void visitToken(DetailAST aAST)\n     {\n+        if (mIgnoreAnnotation \u0026\u0026 isInAnnotation(aAST)) {\n+          return;\n+        }\n+\n         if (inIgnoreList(aAST)\n             || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n         {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n \n         if (constantDefAST \u003d\u003d null) {\n             reportMagicNumber(aAST);\n         }\n         else {\n             DetailAST ast \u003d aAST.getParent();\n             while (ast !\u003d constantDefAST) {\n                 final int type \u003d ast.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(aAST);\n                     break;\n                 }\n \n                 ast \u003d ast.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (mIgnoreAnnotation \u0026\u0026 isInAnnotation(aAST)) {\n          return;\n        }\n\n        if (inIgnoreList(aAST)\n            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n        else {\n            DetailAST ast \u003d aAST.getParent();\n            while (ast !\u003d constantDefAST) {\n                final int type \u003d ast.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(aAST);\n                    break;\n                }\n\n                ast \u003d ast.getParent();\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "73ec35d35bcf970c588278cb18300dfdf814a704": {
      "type": "Ybodychange",
      "commitMessage": "Fine tune the patch.\n",
      "commitDate": "04/10/10 12:09 AM",
      "commitName": "73ec35d35bcf970c588278cb18300dfdf814a704",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "03/10/10 11:51 PM",
      "commitNameOld": "bd757c37dd4ba1384c761a98f31bdbbd22d1daf8",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,26 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (inIgnoreList(aAST)) {\n-            return;\n-        }\n-\n-        if (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)) {\n+        if (inIgnoreList(aAST)\n+            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n+        {\n             return;\n         }\n \n         final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n \n         if (constantDefAST \u003d\u003d null) {\n             reportMagicNumber(aAST);\n         }\n         else {\n             DetailAST ast \u003d aAST.getParent();\n             while (ast !\u003d constantDefAST) {\n                 final int type \u003d ast.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(aAST);\n                     break;\n                 }\n \n                 ast \u003d ast.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (inIgnoreList(aAST)\n            || (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)))\n        {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n        else {\n            DetailAST ast \u003d aAST.getParent();\n            while (ast !\u003d constantDefAST) {\n                final int type \u003d ast.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(aAST);\n                    break;\n                }\n\n                ast \u003d ast.getParent();\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "bd757c37dd4ba1384c761a98f31bdbbd22d1daf8": {
      "type": "Ybodychange",
      "commitMessage": "Apply the patch before making changes.\n",
      "commitDate": "03/10/10 11:51 PM",
      "commitName": "bd757c37dd4ba1384c761a98f31bdbbd22d1daf8",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/09/10 8:36 PM",
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.14,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,28 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (inIgnoreList(aAST)) {\n             return;\n         }\n \n+        if (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)) {\n+            return;\n+        }\n+\n         final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n \n         if (constantDefAST \u003d\u003d null) {\n             reportMagicNumber(aAST);\n         }\n         else {\n             DetailAST ast \u003d aAST.getParent();\n             while (ast !\u003d constantDefAST) {\n                 final int type \u003d ast.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(aAST);\n                     break;\n                 }\n \n                 ast \u003d ast.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (inIgnoreList(aAST)) {\n            return;\n        }\n\n        if (mIgnoreHashCodeMethod \u0026\u0026 isInHashCodeMethod(aAST)) {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n        else {\n            DetailAST ast \u003d aAST.getParent();\n            while (ast !\u003d constantDefAST) {\n                final int type \u003d ast.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(aAST);\n                    break;\n                }\n\n                ast \u003d ast.getParent();\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "2f70947ed74ab968324fdcf83f808ff1d88df1fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:47 AM",
      "commitName": "2f70947ed74ab968324fdcf83f808ff1d88df1fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/07/04 8:56 AM",
      "commitNameOld": "c977a637ce4d87bd3643420ec52c39e724dbdde3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 52.91,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (inIgnoreList(aAST)) {\n             return;\n         }\n \n-        DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n+        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n \n         if (constantDefAST \u003d\u003d null) {\n             reportMagicNumber(aAST);\n         }\n         else {\n             DetailAST ast \u003d aAST.getParent();\n             while (ast !\u003d constantDefAST) {\n-                int type \u003d ast.getType();\n+                final int type \u003d ast.getType();\n                 if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                     reportMagicNumber(aAST);\n                     break;\n                 }\n \n                 ast \u003d ast.getParent();\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (inIgnoreList(aAST)) {\n            return;\n        }\n\n        final DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n\n        if (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n        else {\n            DetailAST ast \u003d aAST.getParent();\n            while (ast !\u003d constantDefAST) {\n                final int type \u003d ast.getType();\n                if (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n                    reportMagicNumber(aAST);\n                    break;\n                }\n\n                ast \u003d ast.getParent();\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "fc17c983239b6e6a6d3e41f53cb134bd22488db1": {
      "type": "Ybodychange",
      "commitMessage": "Made MagicNumber check less agressive, based on feedback on checkstyle-user list\n",
      "commitDate": "04/07/04 8:27 AM",
      "commitName": "fc17c983239b6e6a6d3e41f53cb134bd22488db1",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "04/07/04 4:24 AM",
      "commitNameOld": "bd4ec9a98edaced73f14c5422f64c39fad3ce596",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.17,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n-        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n-            String text \u003d aAST.getText();\n-            final DetailAST parent \u003d aAST.getParent();\n-            DetailAST reportAST \u003d aAST;\n-            if (parent.getType() \u003d\u003d TokenTypes.UNARY_MINUS) {\n-                reportAST \u003d parent;\n-                text \u003d \"-\" + text;\n-            }\n-            else if (parent.getType() \u003d\u003d TokenTypes.UNARY_PLUS) {\n-                reportAST \u003d parent;\n-                text \u003d \"+\" + text;\n-            }\n-            log(reportAST.getLineNo(),\n-                reportAST.getColumnNo(),\n-                \"magic.number\",\n-                text);\n+        if (inIgnoreList(aAST)) {\n+        \treturn;\n         }\n+        \n+        DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n+        \n+    \tif (constantDefAST \u003d\u003d null) {\n+            reportMagicNumber(aAST);\n+        }\n+    \telse {\n+    \t\tDetailAST ast \u003d aAST.getParent();\n+    \t\twhile (ast !\u003d constantDefAST) {\n+    \t\t\tint type \u003d ast.getType();\n+    \t\t\tif (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n+    \t\t\t\treportMagicNumber(aAST);\n+    \t\t\t\tbreak;\n+    \t\t\t}\n+    \t\t\t\t\n+    \t\t\tast \u003d ast.getParent();\n+    \t\t}\n+    \t}\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (inIgnoreList(aAST)) {\n        \treturn;\n        }\n        \n        DetailAST constantDefAST \u003d findContainingConstantDef(aAST);\n        \n    \tif (constantDefAST \u003d\u003d null) {\n            reportMagicNumber(aAST);\n        }\n    \telse {\n    \t\tDetailAST ast \u003d aAST.getParent();\n    \t\twhile (ast !\u003d constantDefAST) {\n    \t\t\tint type \u003d ast.getType();\n    \t\t\tif (Arrays.binarySearch(ALLOWED_PATH_TOKENTYPES, type) \u003c 0) {\n    \t\t\t\treportMagicNumber(aAST);\n    \t\t\t\tbreak;\n    \t\t\t}\n    \t\t\t\t\n    \t\t\tast \u003d ast.getParent();\n    \t\t}\n    \t}\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "bd4ec9a98edaced73f14c5422f64c39fad3ce596": {
      "type": "Ybodychange",
      "commitMessage": "correct source location info in case whitespace between unary op and magic number\n",
      "commitDate": "04/07/04 4:24 AM",
      "commitName": "bd4ec9a98edaced73f14c5422f64c39fad3ce596",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "04/02/04 2:44 PM",
      "commitNameOld": "e5ad46010b48faba1367b8384dcd9f55d9ed10b7",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 150.53,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n             String text \u003d aAST.getText();\n-            int columnNo \u003d aAST.getColumnNo();\n             final DetailAST parent \u003d aAST.getParent();\n+            DetailAST reportAST \u003d aAST;\n             if (parent.getType() \u003d\u003d TokenTypes.UNARY_MINUS) {\n-                columnNo--;\n+                reportAST \u003d parent;\n                 text \u003d \"-\" + text;\n             }\n             else if (parent.getType() \u003d\u003d TokenTypes.UNARY_PLUS) {\n-                columnNo--;\n+                reportAST \u003d parent;\n                 text \u003d \"+\" + text;\n             }\n-            log(aAST.getLineNo(),\n-                columnNo,\n+            log(reportAST.getLineNo(),\n+                reportAST.getColumnNo(),\n                 \"magic.number\",\n                 text);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n            String text \u003d aAST.getText();\n            final DetailAST parent \u003d aAST.getParent();\n            DetailAST reportAST \u003d aAST;\n            if (parent.getType() \u003d\u003d TokenTypes.UNARY_MINUS) {\n                reportAST \u003d parent;\n                text \u003d \"-\" + text;\n            }\n            else if (parent.getType() \u003d\u003d TokenTypes.UNARY_PLUS) {\n                reportAST \u003d parent;\n                text \u003d \"+\" + text;\n            }\n            log(reportAST.getLineNo(),\n                reportAST.getColumnNo(),\n                \"magic.number\",\n                text);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "60847a32d538e9a0f1c1de3e349e8b3833741506": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug 788106, MagicNumberCheck does not permits negative constants\n",
      "commitDate": "13/08/03 4:59 PM",
      "commitName": "60847a32d538e9a0f1c1de3e349e8b3833741506",
      "commitAuthor": "Rick Giles",
      "commitDateOld": "15/06/03 5:39 AM",
      "commitNameOld": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 59.47,
      "commitsBetweenForRepo": 135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,20 @@\n     public void visitToken(DetailAST aAST)\n     {\n         if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n+            String text \u003d aAST.getText();\n+            int columnNo \u003d aAST.getColumnNo();\n+            final DetailAST parent \u003d aAST.getParent();\n+            if (parent.getType() \u003d\u003d TokenTypes.UNARY_MINUS) {\n+                columnNo--;\n+                text \u003d \"-\" + text;\n+            }\n+            else if (parent.getType() \u003d\u003d TokenTypes.UNARY_PLUS) {\n+                columnNo--;\n+                text \u003d \"+\" + text;\n+            }\n             log(aAST.getLineNo(),\n-                aAST.getColumnNo(),\n+                columnNo,\n                 \"magic.number\",\n-                aAST.getText());\n+                text);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n            String text \u003d aAST.getText();\n            int columnNo \u003d aAST.getColumnNo();\n            final DetailAST parent \u003d aAST.getParent();\n            if (parent.getType() \u003d\u003d TokenTypes.UNARY_MINUS) {\n                columnNo--;\n                text \u003d \"-\" + text;\n            }\n            else if (parent.getType() \u003d\u003d TokenTypes.UNARY_PLUS) {\n                columnNo--;\n                text \u003d \"+\" + text;\n            }\n            log(aAST.getLineNo(),\n                columnNo,\n                \"magic.number\",\n                text);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n            log(aAST.getLineNo(),\n                aAST.getColumnNo(),\n                \"magic.number\",\n                aAST.getText());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/MagicNumberCheck.java"
      }
    },
    "7284e8aa425ef5ed01838e99fd228609ce3e1208": {
      "type": "Yintroduced",
      "commitMessage": "magic number check. RFE 564206\n",
      "commitDate": "07/05/03 9:57 AM",
      "commitName": "7284e8aa425ef5ed01838e99fd228609ce3e1208",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,10 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n+            log(\n+                aAST.getLineNo(),\n+                aAST.getColumnNo(),\n+                \"magic.number\",\n+                aAST.getText());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (!inIgnoreList(aAST) \u0026\u0026 !isConstantDefinition(aAST)) {\n            log(\n                aAST.getLineNo(),\n                aAST.getColumnNo(),\n                \"magic.number\",\n                aAST.getText());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/MagicNumberCheck.java"
    }
  }
}