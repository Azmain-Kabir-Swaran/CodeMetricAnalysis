{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "shouldCheck",
  "functionId": "shouldCheck___ast-DetailAST(modifiers-final)__nodeScope-Scope(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 509,
  "functionEndLine": 517,
  "numCommitsSeen": 256,
  "timeTaken": 4082,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab",
    "483132aca9c35591e1010e51a0ac31d746dc75a6",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48",
    "6125beffc437f970eae276b4a6542265c6547784",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": "Ybodychange",
    "483132aca9c35591e1010e51a0ac31d746dc75a6": "Ybodychange",
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": "Ybodychange",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ymultichange(Yparameterchange,Ybodychange)",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": "Ymultichange(Yparameterchange,Ybodychange)",
    "6125beffc437f970eae276b4a6542265c6547784": "Ybodychange",
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n-        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n+        final Scope surroundingScope \u003d ScopeUtil.getSurroundingScope(ast);\n \n         return (excludeScope \u003d\u003d null\n                 || nodeScope !\u003d excludeScope\n                 \u0026\u0026 surroundingScope !\u003d excludeScope)\n             \u0026\u0026 nodeScope.isIn(scope)\n             \u0026\u0026 surroundingScope.isIn(scope);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtil.getSurroundingScope(ast);\n\n        return (excludeScope \u003d\u003d null\n                || nodeScope !\u003d excludeScope\n                \u0026\u0026 surroundingScope !\u003d excludeScope)\n            \u0026\u0026 nodeScope.isIn(scope)\n            \u0026\u0026 surroundingScope.isIn(scope);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce LogicConditionNeedOptimizationCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "24/12/15 1:59 PM",
      "commitName": "6ee4a0f805d528cdee03cfc175502d15b5722dab",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "23/12/15 12:51 PM",
      "commitNameOld": "2864c10cd45d23b91717299954aaaf41d36a6cb0",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 1.05,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return nodeScope.isIn(scope)\n-                \u0026\u0026 surroundingScope.isIn(scope)\n-                \u0026\u0026 (excludeScope \u003d\u003d null || nodeScope !\u003d excludeScope\n-                    \u0026\u0026 surroundingScope !\u003d excludeScope);\n+        return (excludeScope \u003d\u003d null\n+                || nodeScope !\u003d excludeScope\n+                \u0026\u0026 surroundingScope !\u003d excludeScope)\n+            \u0026\u0026 nodeScope.isIn(scope)\n+            \u0026\u0026 surroundingScope.isIn(scope);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return (excludeScope \u003d\u003d null\n                || nodeScope !\u003d excludeScope\n                \u0026\u0026 surroundingScope !\u003d excludeScope)\n            \u0026\u0026 nodeScope.isIn(scope)\n            \u0026\u0026 surroundingScope.isIn(scope);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "483132aca9c35591e1010e51a0ac31d746dc75a6": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2205: Fix not working excludeScope in JavadocMethod check\n",
      "commitDate": "18/09/15 4:21 PM",
      "commitName": "483132aca9c35591e1010e51a0ac31d746dc75a6",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/09/15 10:37 PM",
      "commitNameOld": "f7698ed23b365bce680b6ec8cd00b78e148582ac",
      "commitAuthorOld": "Phillip Webb",
      "daysBetweenCommits": 10.74,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return nodeScope.isIn(scope)\n                 \u0026\u0026 surroundingScope.isIn(scope)\n-                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n-                    || !surroundingScope.isIn(excludeScope));\n+                \u0026\u0026 (excludeScope \u003d\u003d null || nodeScope !\u003d excludeScope\n+                    \u0026\u0026 surroundingScope !\u003d excludeScope);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return nodeScope.isIn(scope)\n                \u0026\u0026 surroundingScope.isIn(scope)\n                \u0026\u0026 (excludeScope \u003d\u003d null || nodeScope !\u003d excludeScope\n                    \u0026\u0026 surroundingScope !\u003d excludeScope);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f": {
      "type": "Ybodychange",
      "commitMessage": "Remove unnecessary this. #1555\n\nFixes `UnnecessaryThis` inspection violations after recent commits.\n\nDescription:\n\u003eReports on any unnecessary uses of this in the code. Using this to disambiguate a code reference may easily become unnecessary via automatic refactorings, and is discouraged by many coding styles.\n",
      "commitDate": "14/08/15 8:42 PM",
      "commitName": "02dfe8c7c51e9df3ad1d3a391c5293c861c1982f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "14/08/15 7:00 AM",
      "commitNameOld": "66d73fe6189267fee3423e2e8d7fc2d68599a43f",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.57,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return nodeScope.isIn(this.scope)\n-                \u0026\u0026 surroundingScope.isIn(this.scope)\n+        return nodeScope.isIn(scope)\n+                \u0026\u0026 surroundingScope.isIn(scope)\n                 \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                     || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return nodeScope.isIn(scope)\n                \u0026\u0026 surroundingScope.isIn(scope)\n                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": "11/08/15 10:19 PM",
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    private boolean shouldCheck(final DetailAST ast, final Scope scope) {\n+    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return scope.isIn(this.scope)\n+        return nodeScope.isIn(this.scope)\n                 \u0026\u0026 surroundingScope.isIn(this.scope)\n-                \u0026\u0026 (excludeScope \u003d\u003d null || !scope.isIn(excludeScope)\n+                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                     || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return nodeScope.isIn(this.scope)\n                \u0026\u0026 surroundingScope.isIn(this.scope)\n                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldValue": "[ast-DetailAST(modifiers-final), scope-Scope(modifiers-final)]",
            "newValue": "[ast-DetailAST(modifiers-final), nodeScope-Scope(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,8 @@\n-    private boolean shouldCheck(final DetailAST ast, final Scope scope) {\n+    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return scope.isIn(this.scope)\n+        return nodeScope.isIn(this.scope)\n                 \u0026\u0026 surroundingScope.isIn(this.scope)\n-                \u0026\u0026 (excludeScope \u003d\u003d null || !scope.isIn(excludeScope)\n+                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                     || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope nodeScope) {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return nodeScope.isIn(this.scope)\n                \u0026\u0026 surroundingScope.isIn(this.scope)\n                \u0026\u0026 (excludeScope \u003d\u003d null || !nodeScope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n     private boolean shouldCheck(final DetailAST ast, final Scope scope)\n     {\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n         return scope.isIn(this.scope)\n                 \u0026\u0026 surroundingScope.isIn(this.scope)\n-                \u0026\u0026 ((excludeScope \u003d\u003d null) || !scope.isIn(excludeScope)\n+                \u0026\u0026 (excludeScope \u003d\u003d null || !scope.isIn(excludeScope)\n                     || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope scope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return scope.isIn(this.scope)\n                \u0026\u0026 surroundingScope.isIn(this.scope)\n                \u0026\u0026 (excludeScope \u003d\u003d null || !scope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "29/12/14 7:49 AM",
          "commitNameOld": "c29a5466d141595ddf773f3bead5b0591203d7d2",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 20.94,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n+    private boolean shouldCheck(final DetailAST ast, final Scope scope)\n     {\n-        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n+        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return aScope.isIn(mScope)\n-                \u0026\u0026 surroundingScope.isIn(mScope)\n-                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n-                    || !surroundingScope.isIn(mExcludeScope));\n+        return scope.isIn(this.scope)\n+                \u0026\u0026 surroundingScope.isIn(this.scope)\n+                \u0026\u0026 ((excludeScope \u003d\u003d null) || !scope.isIn(excludeScope)\n+                    || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope scope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return scope.isIn(this.scope)\n                \u0026\u0026 surroundingScope.isIn(this.scope)\n                \u0026\u0026 ((excludeScope \u003d\u003d null) || !scope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST(modifiers-final), aScope-Scope(modifiers-final)]",
            "newValue": "[ast-DetailAST(modifiers-final), scope-Scope(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "29/12/14 7:49 AM",
          "commitNameOld": "c29a5466d141595ddf773f3bead5b0591203d7d2",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 20.94,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,9 @@\n-    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n+    private boolean shouldCheck(final DetailAST ast, final Scope scope)\n     {\n-        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n+        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n \n-        return aScope.isIn(mScope)\n-                \u0026\u0026 surroundingScope.isIn(mScope)\n-                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n-                    || !surroundingScope.isIn(mExcludeScope));\n+        return scope.isIn(this.scope)\n+                \u0026\u0026 surroundingScope.isIn(this.scope)\n+                \u0026\u0026 ((excludeScope \u003d\u003d null) || !scope.isIn(excludeScope)\n+                    || !surroundingScope.isIn(excludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST ast, final Scope scope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(ast);\n\n        return scope.isIn(this.scope)\n                \u0026\u0026 surroundingScope.isIn(this.scope)\n                \u0026\u0026 ((excludeScope \u003d\u003d null) || !scope.isIn(excludeScope)\n                    || !surroundingScope.isIn(excludeScope));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n\n        return aScope.isIn(mScope)\n                \u0026\u0026 surroundingScope.isIn(mScope)\n                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n                    || !surroundingScope.isIn(mExcludeScope));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java"
      }
    },
    "0a72322796c28266f07df8af6f7e000aa9cf0e48": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Tighten up the allowed use of the {@inheritDoc} tag.\n",
      "commitDate": "22/05/06 6:49 AM",
      "commitName": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Tighten up the allowed use of the {@inheritDoc} tag.\n",
          "commitDate": "22/05/06 6:49 AM",
          "commitName": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "29/12/05 4:35 AM",
          "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 144.05,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,9 @@\n-    private boolean shouldCheck(final DetailAST aAST)\n+    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n     {\n-        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n-        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope scope \u003d ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n-            ? Scope.PUBLIC\n-            : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n \n-        return scope.isIn(mScope)\n-            \u0026\u0026 surroundingScope.isIn(mScope)\n-            \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !scope.isIn(mExcludeScope)\n-                || !surroundingScope.isIn(mExcludeScope));\n+        return aScope.isIn(mScope)\n+                \u0026\u0026 surroundingScope.isIn(mScope)\n+                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n+                    || !surroundingScope.isIn(mExcludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n\n        return aScope.isIn(mScope)\n                \u0026\u0026 surroundingScope.isIn(mScope)\n                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n                    || !surroundingScope.isIn(mExcludeScope));\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST(modifiers-final)]",
            "newValue": "[aAST-DetailAST(modifiers-final), aScope-Scope(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Tighten up the allowed use of the {@inheritDoc} tag.\n",
          "commitDate": "22/05/06 6:49 AM",
          "commitName": "0a72322796c28266f07df8af6f7e000aa9cf0e48",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "29/12/05 4:35 AM",
          "commitNameOld": "788b41973d5747c7b4699a853b62168cf0001df6",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 144.05,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,9 @@\n-    private boolean shouldCheck(final DetailAST aAST)\n+    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n     {\n-        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n-        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope scope \u003d ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n-            ? Scope.PUBLIC\n-            : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n \n-        return scope.isIn(mScope)\n-            \u0026\u0026 surroundingScope.isIn(mScope)\n-            \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !scope.isIn(mExcludeScope)\n-                || !surroundingScope.isIn(mExcludeScope));\n+        return aScope.isIn(mScope)\n+                \u0026\u0026 surroundingScope.isIn(mScope)\n+                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n+                    || !surroundingScope.isIn(mExcludeScope));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean shouldCheck(final DetailAST aAST, final Scope aScope)\n    {\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n\n        return aScope.isIn(mScope)\n                \u0026\u0026 surroundingScope.isIn(mScope)\n                \u0026\u0026 ((mExcludeScope \u003d\u003d null) || !aScope.isIn(mExcludeScope)\n                    || !surroundingScope.isIn(mExcludeScope));\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "6125beffc437f970eae276b4a6542265c6547784": {
      "type": "Ybodychange",
      "commitMessage": "Initial Java 1.5 support\n",
      "commitDate": "27/09/04 11:55 AM",
      "commitName": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "27/03/04 1:10 PM",
      "commitNameOld": "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 183.91,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean shouldCheck(final DetailAST aAST)\n     {\n         final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n         final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n-        final Scope scope \u003d\n-            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;\n+        final Scope scope \u003d ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n+                ? Scope.PUBLIC : declaredScope;\n         final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n \n         return scope.isIn(mScope) \u0026\u0026 surroundingScope.isIn(mScope)\n             \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n                 || !scope.isIn(mExcludeScope)\n                 || !surroundingScope.isIn(mExcludeScope));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST aAST)\n    {\n        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n        final Scope scope \u003d ScopeUtils.inInterfaceOrAnnotationBlock(aAST)\n                ? Scope.PUBLIC : declaredScope;\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n\n        return scope.isIn(mScope) \u0026\u0026 surroundingScope.isIn(mScope)\n            \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n                || !scope.isIn(mExcludeScope)\n                || !surroundingScope.isIn(mExcludeScope));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a": {
      "type": "Yintroduced",
      "commitMessage": "Scoping for javadoc checks\n",
      "commitDate": "27/03/04 1:10 PM",
      "commitName": "cdf0ac0f4c4fb8ab63c4bb7d144a71682c6e400a",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,13 @@\n+    private boolean shouldCheck(final DetailAST aAST)\n+    {\n+        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n+        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n+        final Scope scope \u003d\n+            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;\n+        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n+\n+        return scope.isIn(mScope) \u0026\u0026 surroundingScope.isIn(mScope)\n+            \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n+                || !scope.isIn(mExcludeScope)\n+                || !surroundingScope.isIn(mExcludeScope));\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean shouldCheck(final DetailAST aAST)\n    {\n        final DetailAST mods \u003d aAST.findFirstToken(TokenTypes.MODIFIERS);\n        final Scope declaredScope \u003d ScopeUtils.getScopeFromMods(mods);\n        final Scope scope \u003d\n            ScopeUtils.inInterfaceBlock(aAST) ? Scope.PUBLIC : declaredScope;\n        final Scope surroundingScope \u003d ScopeUtils.getSurroundingScope(aAST);\n\n        return scope.isIn(mScope) \u0026\u0026 surroundingScope.isIn(mScope)\n            \u0026\u0026 ((mExcludeScope \u003d\u003d null)\n                || !scope.isIn(mExcludeScope)\n                || !surroundingScope.isIn(mExcludeScope));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java"
    }
  }
}