{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeftCurlyCheck.java",
  "functionName": "validateNewLinePosition",
  "functionId": "validateNewLinePosition___brace-DetailAST__startToken-DetailAST__braceLine-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
  "functionStartLine": 381,
  "functionEndLine": 394,
  "numCommitsSeen": 156,
  "timeTaken": 2169,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
    "cb5a59fc6baf5de204e3cc99be6ba9865e44350a",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "27375d081517bbf69110f3c37f73583a5d3c60fb",
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd",
    "ae0e7def779cddabf1e93ee744b9b341ef27647f"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": "Ybodychange",
    "cb5a59fc6baf5de204e3cc99be6ba9865e44350a": "Yrename",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "27375d081517bbf69110f3c37f73583a5d3c60fb": "Ybodychange",
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23": "Ymultichange(Yparameterchange,Ybodychange)",
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd": "Ybodychange",
    "ae0e7def779cddabf1e93ee744b9b341ef27647f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n-            if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n+            if (CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n             else {\n                 log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n         }\n-        else if (!CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        else if (!CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n        }\n        else if (!CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Rename methods returning boolean to use question word\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "28/08/15 10:50 PM",
      "commitName": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 10:51 PM",
      "commitNameOld": "9ddad74e484384e5ca2d88ab0fe21922189e2b85",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n-            if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+            if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n             else {\n                 log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n         }\n-        else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        else if (!CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n        }\n        else if (!CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "cb5a59fc6baf5de204e3cc99be6ba9865e44350a": {
      "type": "Yrename",
      "commitMessage": "Fix typos in blocks, headers and filters packages. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "27/08/15 10:27 PM",
      "commitName": "cb5a59fc6baf5de204e3cc99be6ba9865e44350a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n-    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n-                                       String braceLine) {\n+    private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n             if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n             else {\n                 log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n         }\n         else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosition(DetailAST brace, DetailAST startToken, String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n        }\n        else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {
        "oldValue": "validateNewLinePosion",
        "newValue": "validateNewLinePosition"
      }
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                        String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n-            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+            if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n             else {\n                 log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n         }\n-        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n        }\n        else if (!CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "22/08/15 4:35 AM",
      "commitNameOld": "27375d081517bbf69110f3c37f73583a5d3c60fb",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.48,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                        String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n             if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n+                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n             else {\n-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n+                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n             }\n         }\n         else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n+            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "27375d081517bbf69110f3c37f73583a5d3c60fb": {
      "type": "Ybodychange",
      "commitMessage": "Invert negated if-else. #1555\n\nFixes `NegatedIfElse` inspection violations.\n\nDescription:\n\u003eReports if statements which contain else branches and whose conditions are negated. Flipping the order of the if and else branches will usually increase the clarity of such statements.\n",
      "commitDate": "22/08/15 4:35 AM",
      "commitName": "27375d081517bbf69110f3c37f73583a5d3c60fb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 2.34,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                        String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n-            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n+            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n             }\n             else {\n-                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n+                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n             }\n         }\n         else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
      "commitDate": "11/08/15 10:20 PM",
      "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
          "commitDate": "11/08/15 10:20 PM",
          "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n-                                       String braceLine, int prevLineLen) {\n+                                       String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n             if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n             }\n-            else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n+            else {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n             }\n         }\n         else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {
            "oldValue": "[brace-DetailAST, startToken-DetailAST, braceLine-String, prevLineLen-int]",
            "newValue": "[brace-DetailAST, startToken-DetailAST, braceLine-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
          "commitDate": "11/08/15 10:20 PM",
          "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n-                                       String braceLine, int prevLineLen) {\n+                                       String braceLine) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n             if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                 log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n             }\n-            else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n+            else {\n                 log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n             }\n         }\n         else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n            }\n            else {\n                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd": {
      "type": "Ybodychange",
      "commitMessage": "Added column number into violation messages for RightCurlyCheck and LeftCurlyCheck, issue #1511.\n",
      "commitDate": "01/08/15 1:16 PM",
      "commitName": "3a5a73d5c110418f712f5a9a838c6b4106506fdd",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "27/07/15 4:13 PM",
      "commitNameOld": "71d0a829e42bfcbfa3fd692a29abf8796e467fc9",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n     private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                        String braceLine, int prevLineLen) {\n         // not on the same line\n         if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n             if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-                log(brace.getLineNo(), brace.getColumnNo(),\n-                        MSG_KEY_LINE_NEW, \"{\");\n+                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n             }\n             else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n-                log(brace.getLineNo(), brace.getColumnNo(),\n-                        MSG_KEY_LINE_PREVIOUS, \"{\");\n+                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n             }\n         }\n         else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-            log(brace.getLineNo(), brace.getColumnNo(),\n-                    MSG_KEY_LINE_NEW, \"{\");\n+            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine, int prevLineLen) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n            }\n            else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n                log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_NEW, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "ae0e7def779cddabf1e93ee744b9b341ef27647f": {
      "type": "Yintroduced",
      "commitMessage": "LeftCurlyCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "13/06/15 11:01 PM",
      "commitName": "ae0e7def779cddabf1e93ee744b9b341ef27647f",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,18 @@\n+    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n+                                       String braceLine, int prevLineLen) {\n+        // not on the same line\n+        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n+            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+                log(brace.getLineNo(), brace.getColumnNo(),\n+                        MSG_KEY_LINE_NEW, \"{\");\n+            }\n+            else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n+                log(brace.getLineNo(), brace.getColumnNo(),\n+                        MSG_KEY_LINE_PREVIOUS, \"{\");\n+            }\n+        }\n+        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+            log(brace.getLineNo(), brace.getColumnNo(),\n+                    MSG_KEY_LINE_NEW, \"{\");\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateNewLinePosion(DetailAST brace, DetailAST startToken,\n                                       String braceLine, int prevLineLen) {\n        // not on the same line\n        if (startToken.getLineNo() + 1 \u003d\u003d brace.getLineNo()) {\n            if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n                log(brace.getLineNo(), brace.getColumnNo(),\n                        MSG_KEY_LINE_NEW, \"{\");\n            }\n            else if (prevLineLen + 2 \u003c\u003d maxLineLength) {\n                log(brace.getLineNo(), brace.getColumnNo(),\n                        MSG_KEY_LINE_PREVIOUS, \"{\");\n            }\n        }\n        else if (!Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace.getLineNo(), brace.getColumnNo(),\n                    MSG_KEY_LINE_NEW, \"{\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java"
    }
  }
}