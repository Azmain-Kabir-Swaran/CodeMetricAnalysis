{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyLineSeparatorCheck.java",
  "functionName": "processVariableDef",
  "functionId": "processVariableDef___ast-DetailAST__nextToken-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
  "functionStartLine": 543,
  "functionEndLine": 549,
  "numCommitsSeen": 56,
  "timeTaken": 1029,
  "changeHistory": [
    "3b26b571a8dae611366c481aa1fce606ca1f1cfa",
    "b372cfa0a8632735da877de0f703c3b3c9ce5f63",
    "fb5cf249885869256567d41798e14f2964a26192"
  ],
  "changeHistoryShort": {
    "3b26b571a8dae611366c481aa1fce606ca1f1cfa": "Ybodychange",
    "b372cfa0a8632735da877de0f703c3b3c9ce5f63": "Ybodychange",
    "fb5cf249885869256567d41798e14f2964a26192": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3b26b571a8dae611366c481aa1fce606ca1f1cfa": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2067: Fix false-negatives in EmptyLineSeparatorCheck\n",
      "commitDate": "11/11/15 12:46 PM",
      "commitName": "3b26b571a8dae611366c481aa1fce606ca1f1cfa",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "18/10/15 5:51 AM",
      "commitNameOld": "caa58734b9891ec51a113f861f6f1225ae6b499d",
      "commitAuthorOld": "Pavel Baranchikov",
      "daysBetweenCommits": 24.33,
      "commitsBetweenForRepo": 176,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,7 @@\n     private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n         if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)\n                 \u0026\u0026 isViolatingEmptyLineBetweenFieldsPolicy(nextToken)) {\n             log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                     nextToken.getText());\n         }\n-        if (isTypeField(ast) \u0026\u0026 hasNotAllowedTwoEmptyLinesBefore(ast)) {\n-            log(ast.getLineNo(), MSG_MULTIPLE_LINES, ast.getText());\n-        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)\n                \u0026\u0026 isViolatingEmptyLineBetweenFieldsPolicy(nextToken)) {\n            log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                    nextToken.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "b372cfa0a8632735da877de0f703c3b3c9ce5f63": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Collapse and refactor if statement with identical branches\n\nFixes `IfStatementWithIdenticalBranches` inspection violation.\n\nDescription:\n\u003eReports if statements with identical \"then\" and else branches.\n",
      "commitDate": "29/08/15 10:36 PM",
      "commitName": "b372cfa0a8632735da877de0f703c3b3c9ce5f63",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 10.09,
      "commitsBetweenForRepo": 255,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,10 @@\n     private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n-        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)) {\n-            if (allowNoEmptyLineBetweenFields\n-                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.VARIABLE_DEF\n-                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n-                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n-                     nextToken.getText());\n-            }\n-            else if (!allowNoEmptyLineBetweenFields\n-                     \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n-                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n-                     nextToken.getText());\n-            }\n+        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)\n+                \u0026\u0026 isViolatingEmptyLineBetweenFieldsPolicy(nextToken)) {\n+            log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n+                    nextToken.getText());\n         }\n         if (isTypeField(ast) \u0026\u0026 hasNotAllowedTwoEmptyLinesBefore(ast)) {\n             log(ast.getLineNo(), MSG_MULTIPLE_LINES, ast.getText());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)\n                \u0026\u0026 isViolatingEmptyLineBetweenFieldsPolicy(nextToken)) {\n            log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                    nextToken.getText());\n        }\n        if (isTypeField(ast) \u0026\u0026 hasNotAllowedTwoEmptyLinesBefore(ast)) {\n            log(ast.getLineNo(), MSG_MULTIPLE_LINES, ast.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
      "extendedDetails": {}
    },
    "fb5cf249885869256567d41798e14f2964a26192": {
      "type": "Yintroduced",
      "commitMessage": "EmptyLineSeparator updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "14/06/15 9:56 PM",
      "commitName": "fb5cf249885869256567d41798e14f2964a26192",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,18 @@\n+    private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n+        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)) {\n+            if (allowNoEmptyLineBetweenFields\n+                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.VARIABLE_DEF\n+                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n+                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n+                     nextToken.getText());\n+            }\n+            else if (!allowNoEmptyLineBetweenFields\n+                     \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n+                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n+                     nextToken.getText());\n+            }\n+        }\n+        if (isTypeField(ast) \u0026\u0026 hasNotAllowedTwoEmptyLinesBefore(ast)) {\n+            log(ast.getLineNo(), MSG_MULTIPLE_LINES, ast.getText());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processVariableDef(DetailAST ast, DetailAST nextToken) {\n        if (isTypeField(ast) \u0026\u0026 !hasEmptyLineAfter(ast)) {\n            if (allowNoEmptyLineBetweenFields\n                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.VARIABLE_DEF\n                \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                     nextToken.getText());\n            }\n            else if (!allowNoEmptyLineBetweenFields\n                     \u0026\u0026 nextToken.getType() !\u003d TokenTypes.RCURLY) {\n                log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                     nextToken.getText());\n            }\n        }\n        if (isTypeField(ast) \u0026\u0026 hasNotAllowedTwoEmptyLinesBefore(ast)) {\n            log(ast.getLineNo(), MSG_MULTIPLE_LINES, ast.getText());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java"
    }
  }
}