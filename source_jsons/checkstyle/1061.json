{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BooleanExpressionComplexityCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
  "functionStartLine": 216,
  "functionEndLine": 243,
  "numCommitsSeen": 62,
  "timeTaken": 1432,
  "changeHistory": [
    "37fe13f3f12cc159a2a4f25761a89f2291aff74f",
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2",
    "84115fe9bfa4e0310d5832ad9fad5e54fef545b0",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c044038c3b932586c0d384b614254cc2d1838838"
  ],
  "changeHistoryShort": {
    "37fe13f3f12cc159a2a4f25761a89f2291aff74f": "Ybodychange",
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2": "Ybodychange",
    "84115fe9bfa4e0310d5832ad9fad5e54fef545b0": "Ybodychange",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c044038c3b932586c0d384b614254cc2d1838838": "Yintroduced"
  },
  "changeHistoryDetails": {
    "37fe13f3f12cc159a2a4f25761a89f2291aff74f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1287: \u0027BooleanExpressionComplexityCheck\u0027 refactored, UT coverage improved\n",
      "commitDate": "28/07/15 8:55 PM",
      "commitName": "37fe13f3f12cc159a2a4f25761a89f2291aff74f",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 5.91,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     public void visitToken(DetailAST ast) {\n         switch (ast.getType()) {\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.METHOD_DEF:\n                 visitMethodDef(ast);\n                 break;\n             case TokenTypes.EXPR:\n                 visitExpr();\n                 break;\n             case TokenTypes.BOR:\n                 if (!isPipeOperator(ast) \u0026\u0026 !isPassedInParameter(ast)) {\n                     context.visitBooleanOperator();\n                 }\n                 break;\n             case TokenTypes.BAND:\n             case TokenTypes.BXOR:\n                 if (!isPassedInParameter(ast)) {\n                     context.visitBooleanOperator();\n                 }\n                 break;\n             case TokenTypes.LAND:\n             case TokenTypes.LOR:\n                 context.visitBooleanOperator();\n                 break;\n             default:\n-                throw new IllegalStateException(ast.toString());\n+                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        switch (ast.getType()) {\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.METHOD_DEF:\n                visitMethodDef(ast);\n                break;\n            case TokenTypes.EXPR:\n                visitExpr();\n                break;\n            case TokenTypes.BOR:\n                if (!isPipeOperator(ast) \u0026\u0026 !isPassedInParameter(ast)) {\n                    context.visitBooleanOperator();\n                }\n                break;\n            case TokenTypes.BAND:\n            case TokenTypes.BXOR:\n                if (!isPassedInParameter(ast)) {\n                    context.visitBooleanOperator();\n                }\n                break;\n            case TokenTypes.LAND:\n            case TokenTypes.LOR:\n                context.visitBooleanOperator();\n                break;\n            default:\n                throw new IllegalArgumentException(\"Unknown type: \" + ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {}
    },
    "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #572 BooleanExpressionComplexity misidentifies integer expression as boolean expression\n",
      "commitDate": "25/02/15 3:19 PM",
      "commitName": "03914ce3a0cb0a8bafdb7c8f47f72dd064a0c5a2",
      "commitAuthor": "ychulovskyy",
      "commitDateOld": "20/02/15 2:52 PM",
      "commitNameOld": "84115fe9bfa4e0310d5832ad9fad5e54fef545b0",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 5.02,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,29 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.METHOD_DEF:\n                 visitMethodDef(ast);\n                 break;\n             case TokenTypes.EXPR:\n                 visitExpr();\n                 break;\n             case TokenTypes.BOR:\n-                if (!isPipeOperator(ast)) {\n+                if (!isPipeOperator(ast) \u0026\u0026 !isPassedInParameter(ast)) {\n+                    context.visitBooleanOperator();\n+                }\n+                break;\n+            case TokenTypes.BAND:\n+            case TokenTypes.BXOR:\n+                if (!isPassedInParameter(ast)) {\n                     context.visitBooleanOperator();\n                 }\n                 break;\n             case TokenTypes.LAND:\n-            case TokenTypes.BAND:\n             case TokenTypes.LOR:\n-            case TokenTypes.BXOR:\n                 context.visitBooleanOperator();\n                 break;\n             default:\n                 throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.METHOD_DEF:\n                visitMethodDef(ast);\n                break;\n            case TokenTypes.EXPR:\n                visitExpr();\n                break;\n            case TokenTypes.BOR:\n                if (!isPipeOperator(ast) \u0026\u0026 !isPassedInParameter(ast)) {\n                    context.visitBooleanOperator();\n                }\n                break;\n            case TokenTypes.BAND:\n            case TokenTypes.BXOR:\n                if (!isPassedInParameter(ast)) {\n                    context.visitBooleanOperator();\n                }\n                break;\n            case TokenTypes.LAND:\n            case TokenTypes.LOR:\n                context.visitBooleanOperator();\n                break;\n            default:\n                throw new IllegalStateException(ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {}
    },
    "84115fe9bfa4e0310d5832ad9fad5e54fef545b0": {
      "type": "Ybodychange",
      "commitMessage": "Boolean Expression Complexity Check, fixed NPE, issue #654\n",
      "commitDate": "20/02/15 2:52 PM",
      "commitName": "84115fe9bfa4e0310d5832ad9fad5e54fef545b0",
      "commitAuthor": "alexkravin",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "d8f8de2b53a6abc0f8ca011acbe6f18bf9ed4ca9",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,25 @@\n     public void visitToken(DetailAST ast)\n     {\n         switch (ast.getType()) {\n             case TokenTypes.CTOR_DEF:\n             case TokenTypes.METHOD_DEF:\n                 visitMethodDef(ast);\n                 break;\n             case TokenTypes.EXPR:\n                 visitExpr();\n                 break;\n+            case TokenTypes.BOR:\n+                if (!isPipeOperator(ast)) {\n+                    context.visitBooleanOperator();\n+                }\n+                break;\n             case TokenTypes.LAND:\n             case TokenTypes.BAND:\n             case TokenTypes.LOR:\n-            case TokenTypes.BOR:\n             case TokenTypes.BXOR:\n                 context.visitBooleanOperator();\n                 break;\n             default:\n                 throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n            case TokenTypes.CTOR_DEF:\n            case TokenTypes.METHOD_DEF:\n                visitMethodDef(ast);\n                break;\n            case TokenTypes.EXPR:\n                visitExpr();\n                break;\n            case TokenTypes.BOR:\n                if (!isPipeOperator(ast)) {\n                    context.visitBooleanOperator();\n                }\n                break;\n            case TokenTypes.LAND:\n            case TokenTypes.BAND:\n            case TokenTypes.LOR:\n            case TokenTypes.BXOR:\n                context.visitBooleanOperator();\n                break;\n            default:\n                throw new IllegalStateException(ast.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {}
    },
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, metrics, #512\n",
      "commitDate": "19/01/15 6:27 AM",
      "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 465,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.METHOD_DEF:\n-            visitMethodDef(aAST);\n+            visitMethodDef(ast);\n             break;\n         case TokenTypes.EXPR:\n             visitExpr();\n             break;\n         case TokenTypes.LAND:\n         case TokenTypes.BAND:\n         case TokenTypes.LOR:\n         case TokenTypes.BOR:\n         case TokenTypes.BXOR:\n-            mContext.visitBooleanOperator();\n+            context.visitBooleanOperator();\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.METHOD_DEF:\n            visitMethodDef(ast);\n            break;\n        case TokenTypes.EXPR:\n            visitExpr();\n            break;\n        case TokenTypes.LAND:\n        case TokenTypes.BAND:\n        case TokenTypes.LOR:\n        case TokenTypes.BOR:\n        case TokenTypes.BXOR:\n            context.visitBooleanOperator();\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 465,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        switch (aAST.getType()) {\n+        switch (ast.getType()) {\n         case TokenTypes.CTOR_DEF:\n         case TokenTypes.METHOD_DEF:\n-            visitMethodDef(aAST);\n+            visitMethodDef(ast);\n             break;\n         case TokenTypes.EXPR:\n             visitExpr();\n             break;\n         case TokenTypes.LAND:\n         case TokenTypes.BAND:\n         case TokenTypes.LOR:\n         case TokenTypes.BOR:\n         case TokenTypes.BXOR:\n-            mContext.visitBooleanOperator();\n+            context.visitBooleanOperator();\n             break;\n         default:\n-            throw new IllegalStateException(aAST.toString());\n+            throw new IllegalStateException(ast.toString());\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        switch (ast.getType()) {\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.METHOD_DEF:\n            visitMethodDef(ast);\n            break;\n        case TokenTypes.EXPR:\n            visitExpr();\n            break;\n        case TokenTypes.LAND:\n        case TokenTypes.BAND:\n        case TokenTypes.LOR:\n        case TokenTypes.BOR:\n        case TokenTypes.BXOR:\n            context.visitBooleanOperator();\n            break;\n        default:\n            throw new IllegalStateException(ast.toString());\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.METHOD_DEF:\n            visitMethodDef(aAST);\n            break;\n        case TokenTypes.EXPR:\n            visitExpr();\n            break;\n        case TokenTypes.LAND:\n        case TokenTypes.BAND:\n        case TokenTypes.LOR:\n        case TokenTypes.BOR:\n        case TokenTypes.BXOR:\n            mContext.visitBooleanOperator();\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java"
      }
    },
    "c044038c3b932586c0d384b614254cc2d1838838": {
      "type": "Yintroduced",
      "commitMessage": "Added NPathComplexity, ClassDataAbstractionCoupling,\nBooleanExpressionComplexity and ClassFanOutComplexity checks\ncontributed by Simon Harris (requests 750757, 750758, 750760 and\n750759).\nIsEqualsMethod() moved from CovariantEqualsCheck to ChecUtils.\n\nTODO: add documentation.\n",
      "commitDate": "02/01/04 12:05 AM",
      "commitName": "c044038c3b932586c0d384b614254cc2d1838838",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,21 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        switch (aAST.getType()) {\n+        case TokenTypes.CTOR_DEF:\n+        case TokenTypes.METHOD_DEF:\n+            visitMethodDef(aAST);\n+            break;\n+        case TokenTypes.EXPR:\n+            visitExpr();\n+            break;\n+        case TokenTypes.LAND:\n+        case TokenTypes.BAND:\n+        case TokenTypes.LOR:\n+        case TokenTypes.BOR:\n+        case TokenTypes.BXOR:\n+            mContext.visitBooleanOperator();\n+            break;\n+        default:\n+            throw new IllegalStateException(aAST.toString());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        switch (aAST.getType()) {\n        case TokenTypes.CTOR_DEF:\n        case TokenTypes.METHOD_DEF:\n            visitMethodDef(aAST);\n            break;\n        case TokenTypes.EXPR:\n            visitExpr();\n            break;\n        case TokenTypes.LAND:\n        case TokenTypes.BAND:\n        case TokenTypes.LOR:\n        case TokenTypes.BOR:\n        case TokenTypes.BXOR:\n            mContext.visitBooleanOperator();\n            break;\n        default:\n            throw new IllegalStateException(aAST.toString());\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/BooleanExpressionComplexityCheck.java"
    }
  }
}