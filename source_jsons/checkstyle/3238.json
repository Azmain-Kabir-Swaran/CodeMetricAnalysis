{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 455,
  "functionEndLine": 467,
  "numCommitsSeen": 250,
  "timeTaken": 4009,
  "changeHistory": [
    "f4d032d4c12464ed1094d630ec38e7f0cc20f608",
    "9844131cef5b7fba66af3137284d90ba31e8c7e3",
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
    "ce173d03715b3bdcc82eaaf40cd941f431393920",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
    "32f5f97181f9049af5411a5b8f151b51f1c5f165",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "bb0a041a3a0ee311cc47427365ffa8763600d536"
  ],
  "changeHistoryShort": {
    "f4d032d4c12464ed1094d630ec38e7f0cc20f608": "Ybodychange",
    "9844131cef5b7fba66af3137284d90ba31e8c7e3": "Ybodychange",
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f": "Ymovefromfile",
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": "Yfilerename",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": "Ybodychange",
    "ce173d03715b3bdcc82eaaf40cd941f431393920": "Ybodychange",
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": "Ybodychange",
    "32f5f97181f9049af5411a5b8f151b51f1c5f165": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "bb0a041a3a0ee311cc47427365ffa8763600d536": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f4d032d4c12464ed1094d630ec38e7f0cc20f608": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7413: remove obsolete import handling from JavadocMethodCheck",
      "commitDate": "28/12/19 11:10 PM",
      "commitName": "f4d032d4c12464ed1094d630ec38e7f0cc20f608",
      "commitAuthor": "rnveach",
      "commitDateOld": "17/12/19 9:52 AM",
      "commitNameOld": "331b136df4615f1ca02716446503f97165455f3e",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 11.55,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,13 @@\n     public final void visitToken(DetailAST ast) {\n-        if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n-            processImport(ast);\n-        }\n-        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n+        if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                  || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                  || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n             processClass(ast);\n         }\n         else {\n             if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                 processTypeParams(ast);\n             }\n             processAST(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "9844131cef5b7fba66af3137284d90ba31e8c7e3": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7329: remove class loading and all related properties in JavadocMethodCheck\n",
      "commitDate": "17/12/19 9:52 AM",
      "commitName": "9844131cef5b7fba66af3137284d90ba31e8c7e3",
      "commitAuthor": "rnveach",
      "commitDateOld": "07/11/19 6:02 AM",
      "commitNameOld": "cadb16735273de8f1a796c846827cbb10fde206f",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 40.16,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,16 @@\n     public final void visitToken(DetailAST ast) {\n-        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            processPackage(ast);\n-        }\n-        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n+        if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(ast);\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                  || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                  || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n             processClass(ast);\n         }\n         else {\n             if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                 processTypeParams(ast);\n             }\n             processAST(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {}
    },
    "c87d91e46bf52a55e22e4ef447cdd62814736d7f": {
      "type": "Ymovefromfile",
      "commitMessage": "Issue #7116: remove AbstractTypeAwareCheck and combine to JavadocMethod",
      "commitDate": "13/10/19 7:03 AM",
      "commitName": "c87d91e46bf52a55e22e4ef447cdd62814736d7f",
      "commitAuthor": "rnveach",
      "commitDateOld": "11/10/19 11:09 PM",
      "commitNameOld": "145160f5e21b80c27dc93a1904fe33b9afd4f212",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.33,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public final void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
        "oldMethodName": "visitToken",
        "newMethodName": "visitToken"
      }
    },
    "16f91dda1a15e0e3c3d7142a159f17db72c06d0f": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4676: move AbstractTypeAwareCheck and ClassResolver to javadoc\n",
      "commitDate": "05/08/17 7:51 PM",
      "commitName": "16f91dda1a15e0e3c3d7142a159f17db72c06d0f",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/08/17 7:09 PM",
      "commitNameOld": "6cdae0ff01b436cfe387d18b5e1206c6f078376b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public final void visitToken(DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF) {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AbstractTypeAwareCheck.java"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "05/03/15 4:47 PM",
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public final void visitToken(DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(ast);\n         }\n         else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(ast);\n         }\n-        else if ((ast.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-                 || (ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n-                 || (ast.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n+        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n+                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n+                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n         {\n             processClass(ast);\n         }\n         else {\n             if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                 processTypeParams(ast);\n             }\n             processAST(ast);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF\n                 || ast.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n        {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public final void visitToken(DetailAST aAST)\n+    public final void visitToken(DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            processPackage(aAST);\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            processPackage(ast);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n-            processImport(aAST);\n+        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n+            processImport(ast);\n         }\n-        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-                 || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n-                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n+        else if ((ast.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+                 || (ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n+                 || (ast.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n         {\n-            processClass(aAST);\n+            processClass(ast);\n         }\n         else {\n-            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-                processTypeParams(aAST);\n+            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+                processTypeParams(ast);\n             }\n-            processAST(aAST);\n+            processAST(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if ((ast.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n                 || (ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n                 || (ast.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n        {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 30,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public final void visitToken(DetailAST aAST)\n+    public final void visitToken(DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            processPackage(aAST);\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            processPackage(ast);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n-            processImport(aAST);\n+        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n+            processImport(ast);\n         }\n-        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n-                 || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n-                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n+        else if ((ast.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+                 || (ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n+                 || (ast.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n         {\n-            processClass(aAST);\n+            processClass(ast);\n         }\n         else {\n-            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-                processTypeParams(aAST);\n+            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+                processTypeParams(ast);\n             }\n-            processAST(aAST);\n+            processAST(ast);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void visitToken(DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(ast);\n        }\n        else if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(ast);\n        }\n        else if ((ast.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n                 || (ast.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n                 || (ast.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n        {\n            processClass(ast);\n        }\n        else {\n            if (ast.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(ast);\n            }\n            processAST(ast);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0": {
      "type": "Ybodychange",
      "commitMessage": "Fixed AbstractTypeAwareCheck for generics in interfaces (issue #473)\n",
      "commitDate": "06/07/14 5:50 AM",
      "commitName": "7dc94ba7ab9a4e330c088e0fbbd441f78628edb0",
      "commitAuthor": "Tobias Baum",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 123.81,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+                 || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n                  || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n         {\n             processClass(aAST);\n         }\n         else {\n             if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                 processTypeParams(aAST);\n             }\n             processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n                 || (aAST.getType() \u003d\u003d TokenTypes.INTERFACE_DEF)\n                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n        {\n            processClass(aAST);\n        }\n        else {\n            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(aAST);\n            }\n            processAST(aAST);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n        {\n            processClass(aAST);\n        }\n        else {\n            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(aAST);\n            }\n            processAST(aAST);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "17/06/06 6:49 AM",
      "commitNameOld": "104e69edd63edb8d35b6ae63a17934fc5cf49267",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 19.57,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF\n-                 || aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n+                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n         {\n             processClass(aAST);\n         }\n         else {\n             if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                 processTypeParams(aAST);\n             }\n             processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if ((aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF)\n                 || (aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF))\n        {\n            processClass(aAST);\n        }\n        else {\n            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(aAST);\n            }\n            processAST(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94": {
      "type": "Ybodychange",
      "commitMessage": "Fixed 1249707: AbstractTypeAwareCheck doesn\u0027t work with types from typeparm\n\nSome pretty big refactoring for typeaware checks performed.\nAlso added handling for type params.  Current handling algorithm\nhas some preconditions and restriction, but it works for most cases\n(not sure I\u0027ve covered all situation when type param will have name\nof real exception, but I do not think it is critical for now :)\n\nAlso, I\u0027ve added column number for JavadocTag (mainly to be able use\nClassInfo for it).  So, JavadocTypeCheck also affected.\n\nAnd I\u0027ve added new logger for TreeWalker (if we have loggers we should\nuse them :)\n",
      "commitDate": "05/08/05 6:33 AM",
      "commitName": "cbe38280adb03f058f89e8ea81bc0e3be2fc5b94",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "13/06/05 2:31 PM",
      "commitNameOld": "fcbd40f3ce04fe3011bf0e1b2642ac1fd049f5de",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 52.67,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,20 @@\n     public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                  || aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n         {\n             processClass(aAST);\n         }\n         else {\n+            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+                processTypeParams(aAST);\n+            }\n             processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n        {\n            processClass(aAST);\n        }\n        else {\n            if (aAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n                processTypeParams(aAST);\n            }\n            processAST(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "ce173d03715b3bdcc82eaaf40cd941f431393920": {
      "type": "Ybodychange",
      "commitMessage": "Added Javadoc support for enums.\n",
      "commitDate": "05/06/05 4:10 PM",
      "commitName": "ce173d03715b3bdcc82eaaf40cd941f431393920",
      "commitAuthor": "Michael Studman",
      "commitDateOld": "06/04/05 6:12 AM",
      "commitNameOld": "66d6361c27586d58ba478b0223e60c6f1c5aa7b4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 60.42,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n     public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n-        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n+        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF\n+                 || aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n+        {\n             processClass(aAST);\n         }\n         else {\n             processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF\n                 || aAST.getType() \u003d\u003d TokenTypes.ENUM_DEF)\n        {\n            processClass(aAST);\n        }\n        else {\n            processAST(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd": {
      "type": "Ybodychange",
      "commitMessage": "merging changes from v3 branch\n",
      "commitDate": "05/10/04 10:11 AM",
      "commitName": "1ac7fc3f8fc856547085bcc88e17fd1f4bbe0ddd",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "27/09/04 11:55 AM",
      "commitNameOld": "6125beffc437f970eae276b4a6542265c6547784",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 7.93,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n     public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n+        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n+            processClass(aAST);\n+        }\n         else {\n             processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.CLASS_DEF) {\n            processClass(aAST);\n        }\n        else {\n            processAST(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
      "extendedDetails": {}
    },
    "32f5f97181f9049af5411a5b8f151b51f1c5f165": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "Major refactoring to remove duplicate code detected\nby Simian. Just demonstrates the power of the tools for\nfind code that needs refactoring.\n\nI can hardly wait to use Simian on my current project.\n\u003cevil_grin/\u003e\n",
      "commitDate": "23/06/03 6:31 AM",
      "commitName": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Major refactoring to remove duplicate code detected\nby Simian. Just demonstrates the power of the tools for\nfind code that needs refactoring.\n\nI can hardly wait to use Simian on my current project.\n\u003cevil_grin/\u003e\n",
          "commitDate": "23/06/03 6:31 AM",
          "commitName": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "23/06/03 5:09 AM",
          "commitNameOld": "7bd1126a3b5ea39d73cab69622d50bc834ee29c5",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-    public void visitToken(DetailAST aAST)\n+    public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else {\n-            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n-            processMethod(aAST);\n+            processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else {\n            processAST(aAST);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheck.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
            "oldMethodName": "visitToken",
            "newMethodName": "visitToken"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Major refactoring to remove duplicate code detected\nby Simian. Just demonstrates the power of the tools for\nfind code that needs refactoring.\n\nI can hardly wait to use Simian on my current project.\n\u003cevil_grin/\u003e\n",
          "commitDate": "23/06/03 6:31 AM",
          "commitName": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "23/06/03 5:09 AM",
          "commitNameOld": "7bd1126a3b5ea39d73cab69622d50bc834ee29c5",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-    public void visitToken(DetailAST aAST)\n+    public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else {\n-            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n-            processMethod(aAST);\n+            processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else {\n            processAST(aAST);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, final]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Major refactoring to remove duplicate code detected\nby Simian. Just demonstrates the power of the tools for\nfind code that needs refactoring.\n\nI can hardly wait to use Simian on my current project.\n\u003cevil_grin/\u003e\n",
          "commitDate": "23/06/03 6:31 AM",
          "commitName": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "23/06/03 5:09 AM",
          "commitNameOld": "7bd1126a3b5ea39d73cab69622d50bc834ee29c5",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.06,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,12 @@\n-    public void visitToken(DetailAST aAST)\n+    public final void visitToken(DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             processPackage(aAST);\n         }\n         else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n             processImport(aAST);\n         }\n         else {\n-            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n-            processMethod(aAST);\n+            processAST(aAST);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else {\n            processAST(aAST);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/AbstractTypeAwareCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else {\n            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n            processMethod(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantThrowsCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/RedundantThrowsCheck.java"
      }
    },
    "bb0a041a3a0ee311cc47427365ffa8763600d536": {
      "type": "Yintroduced",
      "commitMessage": "Added check for redundant exceptions in\nthrows clause (module RedundantThrows, request 579056)\n",
      "commitDate": "13/05/03 8:18 PM",
      "commitName": "bb0a041a3a0ee311cc47427365ffa8763600d536",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,13 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            processPackage(aAST);\n+        }\n+        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n+            processImport(aAST);\n+        }\n+        else {\n+            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n+            processMethod(aAST);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            processPackage(aAST);\n        }\n        else if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n            processImport(aAST);\n        }\n        else {\n            //TokenTypes.METHOD_DEF or TokenTypes.CTOR_DEF\n            processMethod(aAST);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RedundantThrowsCheck.java"
    }
  }
}