{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaParser.java",
  "functionName": "appendHiddenCommentNodes",
  "functionId": "appendHiddenCommentNodes___root-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
  "functionStartLine": 154,
  "functionEndLine": 201,
  "numCommitsSeen": 125,
  "timeTaken": 3516,
  "changeHistory": [
    "d12e8db049bbb569a2228e269fbb72daa29e1302",
    "45e7e369f5be02806597bbd1a61f64c50d90bae2",
    "ead0357ef90a1720920f9ce0fef3379ba02a66c0",
    "58327e1dd9707b09f82ae2d4d4ce14c253247154",
    "23a1b6253f6296c1a3888361953da47f2808ca3d",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d"
  ],
  "changeHistoryShort": {
    "d12e8db049bbb569a2228e269fbb72daa29e1302": "Ybodychange",
    "45e7e369f5be02806597bbd1a61f64c50d90bae2": "Ybodychange",
    "ead0357ef90a1720920f9ce0fef3379ba02a66c0": "Ybodychange",
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "23a1b6253f6296c1a3888361953da47f2808ca3d": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d12e8db049bbb569a2228e269fbb72daa29e1302": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6628: remove update methods from DetailAST to prevent changes",
      "commitDate": "26/09/19 12:38 PM",
      "commitName": "d12e8db049bbb569a2228e269fbb72daa29e1302",
      "commitAuthor": "rnveach",
      "commitDateOld": "07/05/19 4:48 AM",
      "commitNameOld": "45e7e369f5be02806597bbd1a61f64c50d90bae2",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 142.33,
      "commitsBetweenForRepo": 293,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n     public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             lastNode \u003d curNode;\n \n             CommonHiddenStreamToken tokenBefore \u003d ((CommonASTWithHiddenTokens) curNode)\n                     .getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n-                currentSibling.addPreviousSibling(newCommentNode);\n+                ((DetailAstImpl) currentSibling).addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 curNode \u003d curNode.getParent();\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d ((CommonASTWithHiddenTokens) lastNode)\n                     .getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n-                currentSibling.addNextSibling(newCommentNode);\n+                ((DetailAstImpl) currentSibling).addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            lastNode \u003d curNode;\n\n            CommonHiddenStreamToken tokenBefore \u003d ((CommonASTWithHiddenTokens) curNode)\n                    .getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                ((DetailAstImpl) currentSibling).addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                curNode \u003d curNode.getParent();\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d ((CommonASTWithHiddenTokens) lastNode)\n                    .getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                ((DetailAstImpl) currentSibling).addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
      "extendedDetails": {}
    },
    "45e7e369f5be02806597bbd1a61f64c50d90bae2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3417: split DetailAST between interface and implementation",
      "commitDate": "07/05/19 4:48 AM",
      "commitName": "45e7e369f5be02806597bbd1a61f64c50d90bae2",
      "commitAuthor": "rnveach",
      "commitDateOld": "16/03/19 10:12 AM",
      "commitNameOld": "2d090fea7d388d22aac510a859dcced5b4ab13c0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 51.78,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,46 +1,48 @@\n     public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             lastNode \u003d curNode;\n \n-            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n+            CommonHiddenStreamToken tokenBefore \u003d ((CommonASTWithHiddenTokens) curNode)\n+                    .getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 curNode \u003d curNode.getParent();\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n-            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n+            CommonHiddenStreamToken tokenAfter \u003d ((CommonASTWithHiddenTokens) lastNode)\n+                    .getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            lastNode \u003d curNode;\n\n            CommonHiddenStreamToken tokenBefore \u003d ((CommonASTWithHiddenTokens) curNode)\n                    .getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                curNode \u003d curNode.getParent();\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d ((CommonASTWithHiddenTokens) lastNode)\n                    .getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
      "extendedDetails": {}
    },
    "ead0357ef90a1720920f9ce0fef3379ba02a66c0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for common 2",
      "commitDate": "29/12/18 1:27 PM",
      "commitName": "ead0357ef90a1720920f9ce0fef3379ba02a66c0",
      "commitAuthor": "rnveach",
      "commitDateOld": "13/08/18 9:07 PM",
      "commitNameOld": "72bc163d72d2375ec53c36e5e831c6b0835cf945",
      "commitAuthorOld": "Kariem Hussein",
      "daysBetweenCommits": 137.72,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,46 @@\n     public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n-            if (isPositionGreater(curNode, lastNode)) {\n-                lastNode \u003d curNode;\n-            }\n+            lastNode \u003d curNode;\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n-                if (toVisit \u003d\u003d null) {\n-                    curNode \u003d curNode.getParent();\n-                }\n+                curNode \u003d curNode.getParent();\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            lastNode \u003d curNode;\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                curNode \u003d curNode.getParent();\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
      "extendedDetails": {}
    },
    "58327e1dd9707b09f82ae2d4d4ce14c253247154": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
      "commitDate": "23/01/18 10:39 PM",
      "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
          "commitDate": "23/01/18 10:39 PM",
          "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "22/01/18 5:54 PM",
          "commitNameOld": "9bcb6bffd03dc4f42f402bd126f22c730007861a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 1.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,50 @@\n-    private static DetailAST appendHiddenCommentNodes(DetailAST root) {\n+    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
            "oldMethodName": "appendHiddenCommentNodes",
            "newMethodName": "appendHiddenCommentNodes"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Issue #5436: Split TreeWalker to TreeWalker and JavaParser\n",
          "commitDate": "23/01/18 10:39 PM",
          "commitName": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "22/01/18 5:54 PM",
          "commitNameOld": "9bcb6bffd03dc4f42f402bd126f22c730007861a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 1.2,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,50 @@\n-    private static DetailAST appendHiddenCommentNodes(DetailAST root) {\n+    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavaParser.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        }
      ]
    },
    "23a1b6253f6296c1a3888361953da47f2808ca3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: Fix for \u0027Don\u0027t use trailing comments\u0027 (partial)\n",
      "commitDate": "21/08/15 5:05 AM",
      "commitName": "23a1b6253f6296c1a3888361953da47f2808ca3d",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "19/08/15 10:06 PM",
      "commitNameOld": "0da1e4d980420f6abb465af441e5ced254698273",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.29,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n     private static DetailAST appendHiddenCommentNodes(DetailAST root) {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n-            while (tokenBefore !\u003d null) { // threat multiple comments\n+            while (tokenBefore !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST appendHiddenCommentNodes(DetailAST root) {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "05/03/15 4:47 PM",
      "commitNameOld": "f7828693395f71a6ae99710f3fab44cb8a66ea51",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 4.87,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,51 +1,51 @@\n     private static DetailAST appendHiddenCommentNodes(DetailAST root)\n     {\n         DetailAST result \u003d root;\n         DetailAST curNode \u003d root;\n         DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) { // threat multiple comments\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n-            while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n+            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST appendHiddenCommentNodes(DetailAST root)\n    {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) { // threat multiple comments\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while (curNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,51 @@\n-    private static DetailAST appendHiddenCommentNodes(DetailAST aRoot)\n+    private static DetailAST appendHiddenCommentNodes(DetailAST root)\n     {\n-        DetailAST result \u003d aRoot;\n-        DetailAST curNode \u003d aRoot;\n-        DetailAST lastNode \u003d aRoot;\n+        DetailAST result \u003d root;\n+        DetailAST curNode \u003d root;\n+        DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) { // threat multiple comments\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST appendHiddenCommentNodes(DetailAST root)\n    {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) { // threat multiple comments\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {
            "oldValue": "[aRoot-DetailAST]",
            "newValue": "[root-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "13/01/15 11:20 AM",
          "commitNameOld": "501b7c5240705c6db756608618fdcf58189e807e",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.8,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,51 @@\n-    private static DetailAST appendHiddenCommentNodes(DetailAST aRoot)\n+    private static DetailAST appendHiddenCommentNodes(DetailAST root)\n     {\n-        DetailAST result \u003d aRoot;\n-        DetailAST curNode \u003d aRoot;\n-        DetailAST lastNode \u003d aRoot;\n+        DetailAST result \u003d root;\n+        DetailAST curNode \u003d root;\n+        DetailAST lastNode \u003d root;\n \n         while (curNode !\u003d null) {\n             if (isPositionGreater(curNode, lastNode)) {\n                 lastNode \u003d curNode;\n             }\n \n             CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n             DetailAST currentSibling \u003d curNode;\n             while (tokenBefore !\u003d null) { // threat multiple comments\n                 final DetailAST newCommentNode \u003d\n                          createCommentAstFromToken(tokenBefore);\n \n                 currentSibling.addPreviousSibling(newCommentNode);\n \n                 if (currentSibling \u003d\u003d result) {\n                     result \u003d newCommentNode;\n                 }\n \n                 currentSibling \u003d newCommentNode;\n                 tokenBefore \u003d tokenBefore.getHiddenBefore();\n             }\n \n             DetailAST toVisit \u003d curNode.getFirstChild();\n             while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n                 toVisit \u003d curNode.getNextSibling();\n                 if (toVisit \u003d\u003d null) {\n                     curNode \u003d curNode.getParent();\n                 }\n             }\n             curNode \u003d toVisit;\n         }\n         if (lastNode !\u003d null) {\n             CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n             DetailAST currentSibling \u003d lastNode;\n             while (tokenAfter !\u003d null) {\n                 final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenAfter);\n \n                 currentSibling.addNextSibling(newCommentNode);\n \n                 currentSibling \u003d newCommentNode;\n                 tokenAfter \u003d tokenAfter.getHiddenAfter();\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST appendHiddenCommentNodes(DetailAST root)\n    {\n        DetailAST result \u003d root;\n        DetailAST curNode \u003d root;\n        DetailAST lastNode \u003d root;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) { // threat multiple comments\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java",
          "extendedDetails": {}
        }
      ]
    },
    "a24df47cafeab03fd65cf72b460aad3d2fafce3d": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of single-line and block comments\n",
      "commitDate": "17/10/14 10:19 PM",
      "commitName": "a24df47cafeab03fd65cf72b460aad3d2fafce3d",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,51 @@\n+    private static DetailAST appendHiddenCommentNodes(DetailAST aRoot)\n+    {\n+        DetailAST result \u003d aRoot;\n+        DetailAST curNode \u003d aRoot;\n+        DetailAST lastNode \u003d aRoot;\n+\n+        while (curNode !\u003d null) {\n+            if (isPositionGreater(curNode, lastNode)) {\n+                lastNode \u003d curNode;\n+            }\n+\n+            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n+            DetailAST currentSibling \u003d curNode;\n+            while (tokenBefore !\u003d null) { // threat multiple comments\n+                final DetailAST newCommentNode \u003d\n+                         createCommentAstFromToken(tokenBefore);\n+\n+                currentSibling.addPreviousSibling(newCommentNode);\n+\n+                if (currentSibling \u003d\u003d result) {\n+                    result \u003d newCommentNode;\n+                }\n+\n+                currentSibling \u003d newCommentNode;\n+                tokenBefore \u003d tokenBefore.getHiddenBefore();\n+            }\n+\n+            DetailAST toVisit \u003d curNode.getFirstChild();\n+            while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n+                toVisit \u003d curNode.getNextSibling();\n+                if (toVisit \u003d\u003d null) {\n+                    curNode \u003d curNode.getParent();\n+                }\n+            }\n+            curNode \u003d toVisit;\n+        }\n+        if (lastNode !\u003d null) {\n+            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n+            DetailAST currentSibling \u003d lastNode;\n+            while (tokenAfter !\u003d null) {\n+                final DetailAST newCommentNode \u003d\n+                        createCommentAstFromToken(tokenAfter);\n+\n+                currentSibling.addNextSibling(newCommentNode);\n+\n+                currentSibling \u003d newCommentNode;\n+                tokenAfter \u003d tokenAfter.getHiddenAfter();\n+            }\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST appendHiddenCommentNodes(DetailAST aRoot)\n    {\n        DetailAST result \u003d aRoot;\n        DetailAST curNode \u003d aRoot;\n        DetailAST lastNode \u003d aRoot;\n\n        while (curNode !\u003d null) {\n            if (isPositionGreater(curNode, lastNode)) {\n                lastNode \u003d curNode;\n            }\n\n            CommonHiddenStreamToken tokenBefore \u003d curNode.getHiddenBefore();\n            DetailAST currentSibling \u003d curNode;\n            while (tokenBefore !\u003d null) { // threat multiple comments\n                final DetailAST newCommentNode \u003d\n                         createCommentAstFromToken(tokenBefore);\n\n                currentSibling.addPreviousSibling(newCommentNode);\n\n                if (currentSibling \u003d\u003d result) {\n                    result \u003d newCommentNode;\n                }\n\n                currentSibling \u003d newCommentNode;\n                tokenBefore \u003d tokenBefore.getHiddenBefore();\n            }\n\n            DetailAST toVisit \u003d curNode.getFirstChild();\n            while ((curNode !\u003d null) \u0026\u0026 (toVisit \u003d\u003d null)) {\n                toVisit \u003d curNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    curNode \u003d curNode.getParent();\n                }\n            }\n            curNode \u003d toVisit;\n        }\n        if (lastNode !\u003d null) {\n            CommonHiddenStreamToken tokenAfter \u003d lastNode.getHiddenAfter();\n            DetailAST currentSibling \u003d lastNode;\n            while (tokenAfter !\u003d null) {\n                final DetailAST newCommentNode \u003d\n                        createCommentAstFromToken(tokenAfter);\n\n                currentSibling.addNextSibling(newCommentNode);\n\n                currentSibling \u003d newCommentNode;\n                tokenAfter \u003d tokenAfter.getHiddenAfter();\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java"
    }
  }
}