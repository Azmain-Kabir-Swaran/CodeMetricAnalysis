{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractXpathTestSupport.java",
  "functionName": "extractLineAndColumnNumber",
  "functionId": "extractLineAndColumnNumber___expectedViolations-String",
  "sourceFilePath": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java",
  "functionStartLine": 166,
  "functionEndLine": 176,
  "numCommitsSeen": 18,
  "timeTaken": 1404,
  "changeHistory": [
    "109e979909bd7235ab51a111cb6a14ff5ba2549d",
    "0c797c7035998e70bc194c801f44d44cfac2effe",
    "5b45d5a853f6babe70098b1a034c5ebab36d723d",
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6"
  ],
  "changeHistoryShort": {
    "109e979909bd7235ab51a111cb6a14ff5ba2549d": "Yfilerename",
    "0c797c7035998e70bc194c801f44d44cfac2effe": "Yfilerename",
    "5b45d5a853f6babe70098b1a034c5ebab36d723d": "Ymultichange(Yfilerename,Ymodifierchange)",
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "109e979909bd7235ab51a111cb6a14ff5ba2549d": {
      "type": "Yfilerename",
      "commitMessage": "minor: to squash\n",
      "commitDate": "17/07/18 5:20 AM",
      "commitName": "109e979909bd7235ab51a111cb6a14ff5ba2549d",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/07/18 5:20 AM",
      "commitNameOld": "0c797c7035998e70bc194c801f44d44cfac2effe",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n        ViolationPosition violation \u003d null;\n        final Matcher matcher \u003d\n                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n        if (matcher.find()) {\n            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n        }\n        return violation;\n    }",
      "path": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java",
      "extendedDetails": {
        "oldPath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathTestSupport.java",
        "newPath": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java"
      }
    },
    "0c797c7035998e70bc194c801f44d44cfac2effe": {
      "type": "Yfilerename",
      "commitMessage": "Issue #6037: resolve inspection violation \u0027Abstract class without abstract methods\u0027\n",
      "commitDate": "17/07/18 5:20 AM",
      "commitName": "0c797c7035998e70bc194c801f44d44cfac2effe",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "16/07/18 9:39 PM",
      "commitNameOld": "a189f64d0a71258c860aa5e8949a1a94f3444234",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 0.32,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n        ViolationPosition violation \u003d null;\n        final Matcher matcher \u003d\n                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n        if (matcher.find()) {\n            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n        }\n        return violation;\n    }",
      "path": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathTestSupport.java",
      "extendedDetails": {
        "oldPath": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java",
        "newPath": "src/it/java/org/checkstyle/suppressionxpathfilter/XpathTestSupport.java"
      }
    },
    "5b45d5a853f6babe70098b1a034c5ebab36d723d": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "minor: reorganized it test support classes",
      "commitDate": "03/07/18 8:21 PM",
      "commitName": "5b45d5a853f6babe70098b1a034c5ebab36d723d",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "minor: reorganized it test support classes",
          "commitDate": "03/07/18 8:21 PM",
          "commitName": "5b45d5a853f6babe70098b1a034c5ebab36d723d",
          "commitAuthor": "rnveach",
          "commitDateOld": "03/07/18 8:20 PM",
          "commitNameOld": "4e4e659ba5c239b0d1216ab9a7630f229a5d6ecb",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    private ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n+    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n         ViolationPosition violation \u003d null;\n         final Matcher matcher \u003d\n                 LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n         if (matcher.find()) {\n             final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n             final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n             violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n         }\n         return violation;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n        ViolationPosition violation \u003d null;\n        final Matcher matcher \u003d\n                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n        if (matcher.find()) {\n            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n        }\n        return violation;\n    }",
          "path": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java",
          "extendedDetails": {
            "oldPath": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathRegressionTest.java",
            "newPath": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "minor: reorganized it test support classes",
          "commitDate": "03/07/18 8:21 PM",
          "commitName": "5b45d5a853f6babe70098b1a034c5ebab36d723d",
          "commitAuthor": "rnveach",
          "commitDateOld": "03/07/18 8:20 PM",
          "commitNameOld": "4e4e659ba5c239b0d1216ab9a7630f229a5d6ecb",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    private ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n+    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n         ViolationPosition violation \u003d null;\n         final Matcher matcher \u003d\n                 LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n         if (matcher.find()) {\n             final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n             final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n             violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n         }\n         return violation;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n        ViolationPosition violation \u003d null;\n        final Matcher matcher \u003d\n                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n        if (matcher.find()) {\n            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n        }\n        return violation;\n    }",
          "path": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathTestSupport.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        }
      ]
    },
    "ab712ed0ba184a55788ae8c3df1481b7ed8250f6": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5648: Create UTs to control xpath-suppression model regression\n",
      "commitDate": "31/05/18 8:21 PM",
      "commitName": "ab712ed0ba184a55788ae8c3df1481b7ed8250f6",
      "commitAuthor": "Timur Tibeyev",
      "diff": "@@ -0,0 +1,11 @@\n+    private ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n+        ViolationPosition violation \u003d null;\n+        final Matcher matcher \u003d\n+                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n+        if (matcher.find()) {\n+            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n+            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n+            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n+        }\n+        return violation;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private ViolationPosition extractLineAndColumnNumber(String... expectedViolations) {\n        ViolationPosition violation \u003d null;\n        final Matcher matcher \u003d\n                LINE_COLUMN_NUMBER_REGEX.matcher(expectedViolations[0]);\n        if (matcher.find()) {\n            final int violationLineNumber \u003d Integer.parseInt(matcher.group(1));\n            final int violationColumnNumber \u003d Integer.parseInt(matcher.group(2));\n            violation \u003d new ViolationPosition(violationLineNumber, violationColumnNumber);\n        }\n        return violation;\n    }",
      "path": "src/it/java/org/checkstyle/suppressionxpathfilter/AbstractXpathRegressionTest.java"
    }
  }
}