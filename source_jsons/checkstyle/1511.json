{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EqualsAvoidNullCheck.java",
  "functionName": "checkMethodCall",
  "functionId": "checkMethodCall___methodCall-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
  "functionStartLine": 309,
  "functionEndLine": 326,
  "numCommitsSeen": 58,
  "timeTaken": 1533,
  "changeHistory": [
    "ea7b2dd0a9060d427273bd88909e370cb9f88436",
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "a172cb76e245dfeb01e9957cfe196f26bde555d7",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
    "0024de5711531372850e883c970414563ab8e3ad"
  ],
  "changeHistoryShort": {
    "ea7b2dd0a9060d427273bd88909e370cb9f88436": "Ybodychange",
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "a172cb76e245dfeb01e9957cfe196f26bde555d7": "Ybodychange",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": "Ybodychange",
    "0024de5711531372850e883c970414563ab8e3ad": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea7b2dd0a9060d427273bd88909e370cb9f88436": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6264: added TRUE_RETURNS pitest mutator",
      "commitDate": "18/12/18 7:35 AM",
      "commitName": "ea7b2dd0a9060d427273bd88909e370cb9f88436",
      "commitAuthor": "rnveach",
      "commitDateOld": "07/05/18 6:56 PM",
      "commitNameOld": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 224.57,
      "commitsBetweenForRepo": 378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n     private void checkMethodCall(DetailAST methodCall) {\n         DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n         if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n             objCalledOn \u003d objCalledOn.getLastChild();\n         }\n         final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n-        if (isObjectValid(objCalledOn)\n-                \u0026\u0026 containsOneArgument(methodCall)\n+        if (containsOneArgument(methodCall)\n                 \u0026\u0026 containsAllSafeTokens(expr)\n                 \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n             final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n             if (EQUALS.equals(methodName)) {\n                 log(methodCall, MSG_EQUALS_AVOID_NULL);\n             }\n             else {\n                 log(methodCall, MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkMethodCall(DetailAST methodCall) {\n        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n            objCalledOn \u003d objCalledOn.getLastChild();\n        }\n        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n        if (containsOneArgument(methodCall)\n                \u0026\u0026 containsAllSafeTokens(expr)\n                \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n            if (EQUALS.equals(methodName)) {\n                log(methodCall, MSG_EQUALS_AVOID_NULL);\n            }\n            else {\n                log(methodCall, MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,19 @@\n     private void checkMethodCall(DetailAST methodCall) {\n         DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n         if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n             objCalledOn \u003d objCalledOn.getLastChild();\n         }\n         final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n         if (isObjectValid(objCalledOn)\n                 \u0026\u0026 containsOneArgument(methodCall)\n                 \u0026\u0026 containsAllSafeTokens(expr)\n                 \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n             final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n             if (EQUALS.equals(methodName)) {\n-                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n-                    MSG_EQUALS_AVOID_NULL);\n+                log(methodCall, MSG_EQUALS_AVOID_NULL);\n             }\n             else {\n-                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n-                    MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n+                log(methodCall, MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkMethodCall(DetailAST methodCall) {\n        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n            objCalledOn \u003d objCalledOn.getLastChild();\n        }\n        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n        if (isObjectValid(objCalledOn)\n                \u0026\u0026 containsOneArgument(methodCall)\n                \u0026\u0026 containsAllSafeTokens(expr)\n                \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n            if (EQUALS.equals(methodName)) {\n                log(methodCall, MSG_EQUALS_AVOID_NULL);\n            }\n            else {\n                log(methodCall, MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "a172cb76e245dfeb01e9957cfe196f26bde555d7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2474: Fix NPE in EqualsAvoidNull check",
      "commitDate": "31/10/15 2:52 PM",
      "commitName": "a172cb76e245dfeb01e9957cfe196f26bde555d7",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "07/10/15 5:56 PM",
      "commitNameOld": "f4e5c1e2b27b975c6e7c08380fadb669d6a92b65",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 23.87,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void checkMethodCall(DetailAST methodCall) {\n         DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n         if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n             objCalledOn \u003d objCalledOn.getLastChild();\n         }\n         final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n         if (isObjectValid(objCalledOn)\n                 \u0026\u0026 containsOneArgument(methodCall)\n                 \u0026\u0026 containsAllSafeTokens(expr)\n-                \u0026\u0026 isCalledOnStringField(objCalledOn)) {\n+                \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n             final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n             if (EQUALS.equals(methodName)) {\n                 log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                     MSG_EQUALS_AVOID_NULL);\n             }\n             else {\n                 log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                     MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkMethodCall(DetailAST methodCall) {\n        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n            objCalledOn \u003d objCalledOn.getLastChild();\n        }\n        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n        if (isObjectValid(objCalledOn)\n                \u0026\u0026 containsOneArgument(methodCall)\n                \u0026\u0026 containsAllSafeTokens(expr)\n                \u0026\u0026 isCalledOnStringFieldOrVariable(objCalledOn)) {\n            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n            if (EQUALS.equals(methodName)) {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_AVOID_NULL);\n            }\n            else {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Rename methods returning boolean to use question word\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "28/08/15 10:50 PM",
      "commitName": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "28/08/15 10:34 PM",
      "commitNameOld": "10b36a4ad57c425d16dc85641da3cf80a04dba15",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void checkMethodCall(DetailAST methodCall) {\n         DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n         if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n             objCalledOn \u003d objCalledOn.getLastChild();\n         }\n         final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n         if (isObjectValid(objCalledOn)\n                 \u0026\u0026 containsOneArgument(methodCall)\n                 \u0026\u0026 containsAllSafeTokens(expr)\n-                \u0026\u0026 calledOnStringField(objCalledOn)) {\n+                \u0026\u0026 isCalledOnStringField(objCalledOn)) {\n             final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n             if (EQUALS.equals(methodName)) {\n                 log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                     MSG_EQUALS_AVOID_NULL);\n             }\n             else {\n                 log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                     MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkMethodCall(DetailAST methodCall) {\n        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n            objCalledOn \u003d objCalledOn.getLastChild();\n        }\n        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n        if (isObjectValid(objCalledOn)\n                \u0026\u0026 containsOneArgument(methodCall)\n                \u0026\u0026 containsAllSafeTokens(expr)\n                \u0026\u0026 isCalledOnStringField(objCalledOn)) {\n            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n            if (EQUALS.equals(methodName)) {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_AVOID_NULL);\n            }\n            else {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java",
      "extendedDetails": {}
    },
    "0024de5711531372850e883c970414563ab8e3ad": {
      "type": "Yintroduced",
      "commitMessage": "reimplement EqualsAvoidNullCheck, #1377",
      "commitDate": "28/08/15 3:41 AM",
      "commitName": "0024de5711531372850e883c970414563ab8e3ad",
      "commitAuthor": "Vladislav Lisetskiy",
      "diff": "@@ -0,0 +1,21 @@\n+    private void checkMethodCall(DetailAST methodCall) {\n+        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n+        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n+            objCalledOn \u003d objCalledOn.getLastChild();\n+        }\n+        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n+        if (isObjectValid(objCalledOn)\n+                \u0026\u0026 containsOneArgument(methodCall)\n+                \u0026\u0026 containsAllSafeTokens(expr)\n+                \u0026\u0026 calledOnStringField(objCalledOn)) {\n+            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n+            if (EQUALS.equals(methodName)) {\n+                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n+                    MSG_EQUALS_AVOID_NULL);\n+            }\n+            else {\n+                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n+                    MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkMethodCall(DetailAST methodCall) {\n        DetailAST objCalledOn \u003d methodCall.getFirstChild().getFirstChild();\n        if (objCalledOn.getType() \u003d\u003d TokenTypes.DOT) {\n            objCalledOn \u003d objCalledOn.getLastChild();\n        }\n        final DetailAST expr \u003d methodCall.findFirstToken(TokenTypes.ELIST).getFirstChild();\n        if (isObjectValid(objCalledOn)\n                \u0026\u0026 containsOneArgument(methodCall)\n                \u0026\u0026 containsAllSafeTokens(expr)\n                \u0026\u0026 calledOnStringField(objCalledOn)) {\n            final String methodName \u003d methodCall.getFirstChild().getLastChild().getText();\n            if (EQUALS.equals(methodName)) {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_AVOID_NULL);\n            }\n            else {\n                log(methodCall.getLineNo(), methodCall.getColumnNo(),\n                    MSG_EQUALS_IGNORE_CASE_AVOID_NULL);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/EqualsAvoidNullCheck.java"
    }
  }
}