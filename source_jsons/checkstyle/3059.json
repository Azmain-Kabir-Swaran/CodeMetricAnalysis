{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SummaryJavadocCheck.java",
  "functionName": "containsForbiddenFragment",
  "functionId": "containsForbiddenFragment___firstSentence-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
  "functionStartLine": 320,
  "functionEndLine": 324,
  "numCommitsSeen": 56,
  "timeTaken": 1392,
  "changeHistory": [
    "0bb9038582406af853dd064d9c699ddc93c0994d",
    "475ec106d6192f311758471b7fed4359bf9eb180",
    "3fca3c9250864912e36783302ebe8f04f17ec262",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763"
  ],
  "changeHistoryShort": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": "Ybodychange",
    "475ec106d6192f311758471b7fed4359bf9eb180": "Ybodychange",
    "3fca3c9250864912e36783302ebe8f04f17ec262": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0bb9038582406af853dd064d9c699ddc93c0994d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3484: removed the last of guava",
      "commitDate": "09/03/19 10:49 PM",
      "commitName": "0bb9038582406af853dd064d9c699ddc93c0994d",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 53.71,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,5 @@\n     private boolean containsForbiddenFragment(String firstSentence) {\n-        String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n-                .matcher(firstSentence).replaceAll(\" \");\n-        javadocText \u003d CharMatcher.whitespace().trimAndCollapseFrom(javadocText, \u0027 \u0027);\n-        return forbiddenSummaryFragments.matcher(javadocText).find();\n+        final String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n+                .matcher(firstSentence).replaceAll(\" \").trim();\n+        return forbiddenSummaryFragments.matcher(trimExcessWhitespaces(javadocText)).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean containsForbiddenFragment(String firstSentence) {\n        final String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n                .matcher(firstSentence).replaceAll(\" \").trim();\n        return forbiddenSummaryFragments.matcher(trimExcessWhitespaces(javadocText)).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "475ec106d6192f311758471b7fed4359bf9eb180": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4708: fixed part of idea violations\n",
      "commitDate": "15/07/17 6:44 AM",
      "commitName": "475ec106d6192f311758471b7fed4359bf9eb180",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "01/07/17 4:17 PM",
      "commitNameOld": "dfa3cee94273bf210acc39c3910a5b936f9be42f",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 13.6,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private boolean containsForbiddenFragment(String firstSentence) {\n         String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n                 .matcher(firstSentence).replaceAll(\" \");\n-        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n+        javadocText \u003d CharMatcher.whitespace().trimAndCollapseFrom(javadocText, \u0027 \u0027);\n         return forbiddenSummaryFragments.matcher(javadocText).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean containsForbiddenFragment(String firstSentence) {\n        String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n                .matcher(firstSentence).replaceAll(\" \");\n        javadocText \u003d CharMatcher.whitespace().trimAndCollapseFrom(javadocText, \u0027 \u0027);\n        return forbiddenSummaryFragments.matcher(javadocText).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "3fca3c9250864912e36783302ebe8f04f17ec262": {
      "type": "Ybodychange",
      "commitMessage": "Use compiled pattern instead of dynamic regexp in checks. #1555\n\nFixes some `SpellDynamicRegexReplaceableByCompiledPattern` inspection violations.\n\nDescription:\n\u003eReports calls to the regular expression methods of java.lang.String using constants arguments. Such calls may be profitably replaced with a private static final Pattern field so that the regular expression does not have to be compiled each time it is used.\n",
      "commitDate": "26/08/15 9:28 AM",
      "commitName": "3fca3c9250864912e36783302ebe8f04f17ec262",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "25/08/15 4:00 PM",
      "commitNameOld": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 0.73,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n     private boolean containsForbiddenFragment(String firstSentence) {\n-        // This regexp is used to convert multiline javdoc to single line without stars.\n-        String javadocText \u003d firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n+        String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n+                .matcher(firstSentence).replaceAll(\" \");\n         javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n         return forbiddenSummaryFragments.matcher(javadocText).find();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean containsForbiddenFragment(String firstSentence) {\n        String javadocText \u003d JAVADOC_MULTILINE_TO_SINGLELINE_PATTERN\n                .matcher(firstSentence).replaceAll(\" \");\n        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n        return forbiddenSummaryFragments.matcher(javadocText).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 4:53 AM",
          "commitNameOld": "f6b38038d17b286d82d8956788a0eede15c5399a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 30.06,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean containsForbiddenFragment(String aFirstSentence)\n+    private boolean containsForbiddenFragment(String firstSentence)\n     {\n-        // This regexp is used to convert multiline javadoc to single line without stars.\n-        String javadocText \u003d aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n+        // This regexp is used to convert multiline javdoc to single line without stars.\n+        String javadocText \u003d firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n         javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n-        return mForbiddenSummaryFragments.matcher(javadocText).find();\n+        return forbiddenSummaryFragments.matcher(javadocText).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean containsForbiddenFragment(String firstSentence)\n    {\n        // This regexp is used to convert multiline javdoc to single line without stars.\n        String javadocText \u003d firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n        return forbiddenSummaryFragments.matcher(javadocText).find();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
          "extendedDetails": {
            "oldValue": "[aFirstSentence-String]",
            "newValue": "[firstSentence-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "20/12/14 4:53 AM",
          "commitNameOld": "f6b38038d17b286d82d8956788a0eede15c5399a",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 30.06,
          "commitsBetweenForRepo": 57,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private boolean containsForbiddenFragment(String aFirstSentence)\n+    private boolean containsForbiddenFragment(String firstSentence)\n     {\n-        // This regexp is used to convert multiline javadoc to single line without stars.\n-        String javadocText \u003d aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n+        // This regexp is used to convert multiline javdoc to single line without stars.\n+        String javadocText \u003d firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n         javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n-        return mForbiddenSummaryFragments.matcher(javadocText).find();\n+        return forbiddenSummaryFragments.matcher(javadocText).find();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean containsForbiddenFragment(String firstSentence)\n    {\n        // This regexp is used to convert multiline javdoc to single line without stars.\n        String javadocText \u003d firstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n        return forbiddenSummaryFragments.matcher(javadocText).find();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "d3b013d07359eb5ebcbcbb1daa34722d7e28e763": {
      "type": "Yintroduced",
      "commitMessage": "SummaryJavaDocCheck #307 by Max Vetrenko\n",
      "commitDate": "20/10/14 11:12 PM",
      "commitName": "d3b013d07359eb5ebcbcbb1daa34722d7e28e763",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,7 @@\n+    private boolean containsForbiddenFragment(String aFirstSentence)\n+    {\n+        // This regexp is used to convert multiline javadoc to single line without stars.\n+        String javadocText \u003d aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n+        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n+        return mForbiddenSummaryFragments.matcher(javadocText).find();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean containsForbiddenFragment(String aFirstSentence)\n    {\n        // This regexp is used to convert multiline javadoc to single line without stars.\n        String javadocText \u003d aFirstSentence.replaceAll(\"\\n[ ]+(\\\\*)|^[ ]+(\\\\*)\", \" \");\n        javadocText \u003d CharMatcher.WHITESPACE.trimAndCollapseFrom(javadocText, \u0027 \u0027);\n        return mForbiddenSummaryFragments.matcher(javadocText).find();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/SummaryJavadocCheck.java"
    }
  }
}