{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PackageObjectFactory.java",
  "functionName": "fillChecksFromCodingPackage",
  "functionId": "fillChecksFromCodingPackage",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
  "functionStartLine": 467,
  "functionEndLine": 572,
  "numCommitsSeen": 84,
  "timeTaken": 2759,
  "changeHistory": [
    "e17e2a90b9bc02a2b445f36ad4c209b49103ff78",
    "646d90e0237d92cb6ab84dc7083a1d2d636eceb2",
    "2f9f8c620eaa953a0d5822c17f59fd396f09c2ad",
    "b331f9a72c75ce8882a194263a7a619a44b45b59",
    "f0af10863ff015bd4401878f73a70ced4baca46e",
    "109f56e45c6395910d91d84512a217685a95090c",
    "23cc42b707cd361f5220424f9e29736ae8878314",
    "f82ad775f32fd47f6733e6805d3d05fa1eb4cdad",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9"
  ],
  "changeHistoryShort": {
    "e17e2a90b9bc02a2b445f36ad4c209b49103ff78": "Ybodychange",
    "646d90e0237d92cb6ab84dc7083a1d2d636eceb2": "Ybodychange",
    "2f9f8c620eaa953a0d5822c17f59fd396f09c2ad": "Ybodychange",
    "b331f9a72c75ce8882a194263a7a619a44b45b59": "Ybodychange",
    "f0af10863ff015bd4401878f73a70ced4baca46e": "Ybodychange",
    "109f56e45c6395910d91d84512a217685a95090c": "Ybodychange",
    "23cc42b707cd361f5220424f9e29736ae8878314": "Ybodychange",
    "f82ad775f32fd47f6733e6805d3d05fa1eb4cdad": "Ybodychange",
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e17e2a90b9bc02a2b445f36ad4c209b49103ff78": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7677: add UnnecessarySemicolonAfterOuterTypeDeclarationCheck\n",
      "commitDate": "29/03/20 7:58 AM",
      "commitName": "e17e2a90b9bc02a2b445f36ad4c209b49103ff78",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "04/02/20 9:05 PM",
      "commitNameOld": "646d90e0237d92cb6ab84dc7083a1d2d636eceb2",
      "commitAuthorOld": "Andrei Paikin",
      "daysBetweenCommits": 53.41,
      "commitsBetweenForRepo": 131,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,103 +1,106 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidDoubleBraceInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidDoubleBraceInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterOuterTypeDeclarationCheck\",\n+                BASE_PACKAGE\n+                        + \".checks.coding.UnnecessarySemicolonAfterOuterTypeDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                 BASE_PACKAGE\n                     + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidDoubleBraceInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidDoubleBraceInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterOuterTypeDeclarationCheck\",\n                BASE_PACKAGE\n                        + \".checks.coding.UnnecessarySemicolonAfterOuterTypeDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "646d90e0237d92cb6ab84dc7083a1d2d636eceb2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6480: add AvoidDoubleBraceInitializationCheck\n",
      "commitDate": "04/02/20 9:05 PM",
      "commitName": "646d90e0237d92cb6ab84dc7083a1d2d636eceb2",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "04/02/20 1:04 AM",
      "commitNameOld": "dbac7fb8e605c3f29172d7f4a894b1b91e380edc",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.83,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,101 +1,103 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"AvoidDoubleBraceInitializationCheck\",\n+                BASE_PACKAGE + \".checks.coding.AvoidDoubleBraceInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                 BASE_PACKAGE\n                     + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidDoubleBraceInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidDoubleBraceInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "2f9f8c620eaa953a0d5822c17f59fd396f09c2ad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7363: add AvoidNoArgumentSuperConstructorCallCheck\n",
      "commitDate": "17/01/20 8:46 AM",
      "commitName": "2f9f8c620eaa953a0d5822c17f59fd396f09c2ad",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "09/01/20 6:51 AM",
      "commitNameOld": "b331f9a72c75ce8882a194263a7a619a44b45b59",
      "commitAuthorOld": "sd1998",
      "daysBetweenCommits": 8.08,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,99 +1,101 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n+                BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                 BASE_PACKAGE\n                     + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidNoArgumentSuperConstructorCallCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidNoArgumentSuperConstructorCallCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "b331f9a72c75ce8882a194263a7a619a44b45b59": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6972: NoEnumTrailingCommaCheck implementation added\n",
      "commitDate": "09/01/20 6:51 AM",
      "commitName": "b331f9a72c75ce8882a194263a7a619a44b45b59",
      "commitAuthor": "sd1998",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 7.59,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,97 +1,99 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n+                BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                 BASE_PACKAGE\n                     + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoEnumTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoEnumTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "f0af10863ff015bd4401878f73a70ced4baca46e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6971: NoArrayTrailingCommaCheck added\n",
      "commitDate": "28/12/19 11:09 AM",
      "commitName": "f0af10863ff015bd4401878f73a70ced4baca46e",
      "commitAuthor": "sd1998",
      "commitDateOld": "14/12/19 3:23 PM",
      "commitNameOld": "baa250c454de5845151b64ae940173744f4d0435",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 13.82,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,95 +1,97 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                 BASE_PACKAGE\n                     + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n+                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.NoArrayTrailingCommaCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "109f56e45c6395910d91d84512a217685a95090c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6847: Add UnnecessarySemicolonAfterTypeMemberDeclarationCheck\n",
      "commitDate": "11/08/19 11:34 AM",
      "commitName": "109f56e45c6395910d91d84512a217685a95090c",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "15/07/19 12:23 PM",
      "commitNameOld": "765137a28f1bd4acb2294b8446c44d1828233934",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 26.97,
      "commitsBetweenForRepo": 49,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,92 +1,95 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n+                BASE_PACKAGE\n+                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonAfterTypeMemberDeclarationCheck\",\n                BASE_PACKAGE\n                    + \".checks.coding.UnnecessarySemicolonAfterTypeMemberDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "23cc42b707cd361f5220424f9e29736ae8878314": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6774: Add UnnecessarySemicolonInTryWithResourcesCheck\n",
      "commitDate": "15/06/19 3:22 PM",
      "commitName": "23cc42b707cd361f5220424f9e29736ae8878314",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "01/06/19 5:37 AM",
      "commitNameOld": "f82ad775f32fd47f6733e6805d3d05fa1eb4cdad",
      "commitAuthorOld": "Andrei Paikin",
      "daysBetweenCommits": 14.41,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,90 +1,92 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n+                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInTryWithResourcesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInTryWithResourcesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "f82ad775f32fd47f6733e6805d3d05fa1eb4cdad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6773: Add UnnecessarySemicolonInEnumerationCheck\n",
      "commitDate": "01/06/19 5:37 AM",
      "commitName": "f82ad775f32fd47f6733e6805d3d05fa1eb4cdad",
      "commitAuthor": "Andrei Paikin",
      "commitDateOld": "05/05/19 6:25 PM",
      "commitNameOld": "f094c67d6c042a0f786665034b5dddbb665b955c",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 26.47,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,88 +1,90 @@\n     private static void fillChecksFromCodingPackage() {\n         NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                 BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                 BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                 BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                 BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                 BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                 BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                 BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                 BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                 BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                 BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                 BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                 BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                 BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                 BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                 BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                 BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                 BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                 BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                 BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                 BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                 BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                 BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                 BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                 BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                 BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                 BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n+                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n         NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                 BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessarySemicolonInEnumerationCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessarySemicolonInEnumerationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java",
      "extendedDetails": {}
    },
    "d24405c088612098d48e0ee1f5c9e9f264611ad9": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3184: Make hardcoded map with all module names that in checkstyle\n",
      "commitDate": "20/12/16 1:44 PM",
      "commitName": "d24405c088612098d48e0ee1f5c9e9f264611ad9",
      "commitAuthor": "Vladislav Lisetskii",
      "diff": "@@ -0,0 +1,88 @@\n+    private static void fillChecksFromCodingPackage() {\n+        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n+                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n+                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n+                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n+                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n+                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n+                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n+                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n+                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n+                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n+                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n+                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n+                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n+                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n+                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n+                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n+                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n+                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n+                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n+                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n+                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n+                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n+                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n+                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n+                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n+                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n+                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n+                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n+                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n+                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n+                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n+                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n+                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n+                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n+                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n+                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n+                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n+                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n+        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n+                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static void fillChecksFromCodingPackage() {\n        NAME_TO_FULL_MODULE_NAME.put(\"ArrayTrailingCommaCheck\",\n                BASE_PACKAGE + \".checks.coding.ArrayTrailingCommaCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"AvoidInlineConditionalsCheck\",\n                BASE_PACKAGE + \".checks.coding.AvoidInlineConditionalsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"CovariantEqualsCheck\",\n                BASE_PACKAGE + \".checks.coding.CovariantEqualsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.DeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"DefaultComesLastCheck\",\n                BASE_PACKAGE + \".checks.coding.DefaultComesLastCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EmptyStatementCheck\",\n                BASE_PACKAGE + \".checks.coding.EmptyStatementCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsAvoidNullCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsAvoidNullCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"EqualsHashCodeCheck\",\n                BASE_PACKAGE + \".checks.coding.EqualsHashCodeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ExplicitInitializationCheck\",\n                BASE_PACKAGE + \".checks.coding.ExplicitInitializationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FallThroughCheck\",\n                BASE_PACKAGE + \".checks.coding.FallThroughCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"FinalLocalVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.FinalLocalVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"HiddenFieldCheck\",\n                BASE_PACKAGE + \".checks.coding.HiddenFieldCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalCatchCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalCatchCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalInstantiationCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalInstantiationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalThrowsCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalThrowsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTokenTextCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTokenTextCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"IllegalTypeCheck\",\n                BASE_PACKAGE + \".checks.coding.IllegalTypeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"InnerAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.InnerAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MagicNumberCheck\",\n                BASE_PACKAGE + \".checks.coding.MagicNumberCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingCtorCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingCtorCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MissingSwitchDefaultCheck\",\n                BASE_PACKAGE + \".checks.coding.MissingSwitchDefaultCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ModifiedControlVariableCheck\",\n                BASE_PACKAGE + \".checks.coding.ModifiedControlVariableCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleStringLiteralsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleStringLiteralsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"MultipleVariableDeclarationsCheck\",\n                BASE_PACKAGE + \".checks.coding.MultipleVariableDeclarationsCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedForDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedForDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedIfDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedIfDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NestedTryDepthCheck\",\n                BASE_PACKAGE + \".checks.coding.NestedTryDepthCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.NoCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"NoFinalizerCheck\",\n                BASE_PACKAGE + \".checks.coding.NoFinalizerCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OneStatementPerLineCheck\",\n                BASE_PACKAGE + \".checks.coding.OneStatementPerLineCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"OverloadMethodsDeclarationOrderCheck\",\n                BASE_PACKAGE + \".checks.coding.OverloadMethodsDeclarationOrderCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"PackageDeclarationCheck\",\n                BASE_PACKAGE + \".checks.coding.PackageDeclarationCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ParameterAssignmentCheck\",\n                BASE_PACKAGE + \".checks.coding.ParameterAssignmentCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"RequireThisCheck\",\n                BASE_PACKAGE + \".checks.coding.RequireThisCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"ReturnCountCheck\",\n                BASE_PACKAGE + \".checks.coding.ReturnCountCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanExpressionCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanExpressionCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SimplifyBooleanReturnCheck\",\n                BASE_PACKAGE + \".checks.coding.SimplifyBooleanReturnCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"StringLiteralEqualityCheck\",\n                BASE_PACKAGE + \".checks.coding.StringLiteralEqualityCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperCloneCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperCloneCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"SuperFinalizeCheck\",\n                BASE_PACKAGE + \".checks.coding.SuperFinalizeCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"UnnecessaryParenthesesCheck\",\n                BASE_PACKAGE + \".checks.coding.UnnecessaryParenthesesCheck\");\n        NAME_TO_FULL_MODULE_NAME.put(\"VariableDeclarationUsageDistanceCheck\",\n                BASE_PACKAGE + \".checks.coding.VariableDeclarationUsageDistanceCheck\");\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/PackageObjectFactory.java"
    }
  }
}