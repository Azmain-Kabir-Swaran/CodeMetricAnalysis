{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImportControlLoader.java",
  "functionName": "createImportRule",
  "functionId": "createImportRule___qName-String__attributes-Attributes",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java",
  "functionStartLine": 205,
  "functionEndLine": 227,
  "numCommitsSeen": 57,
  "timeTaken": 592,
  "changeHistory": [
    "e018b2d6622efa4f1897244856974c45efeda99c"
  ],
  "changeHistoryShort": {
    "e018b2d6622efa4f1897244856974c45efeda99c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e018b2d6622efa4f1897244856974c45efeda99c": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3492: add ability to control imports in certain files",
      "commitDate": "20/04/18 5:56 PM",
      "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
      "commitAuthor": "rnveach",
      "diff": "@@ -0,0 +1,23 @@\n+    private static AbstractImportRule createImportRule(String qName, Attributes attributes)\n+            throws SAXException {\n+        // Need to handle either \"pkg\" or \"class\" attribute.\n+        // May have \"exact-match\" for \"pkg\"\n+        // May have \"local-only\"\n+        final boolean isAllow \u003d ALLOW_ELEMENT_NAME.equals(qName);\n+        final boolean isLocalOnly \u003d attributes.getValue(\"local-only\") !\u003d null;\n+        final String pkg \u003d attributes.getValue(PKG_ATTRIBUTE_NAME);\n+        final boolean regex \u003d containsRegexAttribute(attributes);\n+        final AbstractImportRule rule;\n+        if (pkg \u003d\u003d null) {\n+            // handle class names which can be normal class names or regular\n+            // expressions\n+            final String clazz \u003d safeGet(attributes, \"class\");\n+            rule \u003d new ClassImportRule(isAllow, isLocalOnly, clazz, regex);\n+        }\n+        else {\n+            final boolean exactMatch \u003d\n+                    attributes.getValue(\"exact-match\") !\u003d null;\n+            rule \u003d new PkgImportRule(isAllow, isLocalOnly, pkg, exactMatch, regex);\n+        }\n+        return rule;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static AbstractImportRule createImportRule(String qName, Attributes attributes)\n            throws SAXException {\n        // Need to handle either \"pkg\" or \"class\" attribute.\n        // May have \"exact-match\" for \"pkg\"\n        // May have \"local-only\"\n        final boolean isAllow \u003d ALLOW_ELEMENT_NAME.equals(qName);\n        final boolean isLocalOnly \u003d attributes.getValue(\"local-only\") !\u003d null;\n        final String pkg \u003d attributes.getValue(PKG_ATTRIBUTE_NAME);\n        final boolean regex \u003d containsRegexAttribute(attributes);\n        final AbstractImportRule rule;\n        if (pkg \u003d\u003d null) {\n            // handle class names which can be normal class names or regular\n            // expressions\n            final String clazz \u003d safeGet(attributes, \"class\");\n            rule \u003d new ClassImportRule(isAllow, isLocalOnly, clazz, regex);\n        }\n        else {\n            final boolean exactMatch \u003d\n                    attributes.getValue(\"exact-match\") !\u003d null;\n            rule \u003d new PkgImportRule(isAllow, isLocalOnly, pkg, exactMatch, regex);\n        }\n        return rule;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlLoader.java"
    }
  }
}