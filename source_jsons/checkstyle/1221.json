{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyLineSeparatorCheck.java",
  "functionName": "checkToken",
  "functionId": "checkToken___ast-DetailAST__nextToken-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
  "functionStartLine": 371,
  "functionEndLine": 395,
  "numCommitsSeen": 56,
  "timeTaken": 636,
  "changeHistory": [
    "52a20827fd243de91654dd7b7fc190b2f434e486"
  ],
  "changeHistoryShort": {
    "52a20827fd243de91654dd7b7fc190b2f434e486": "Yintroduced"
  },
  "changeHistoryDetails": {
    "52a20827fd243de91654dd7b7fc190b2f434e486": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4763: fix empty statement for comment under package\n",
      "commitDate": "20/12/19 10:31 AM",
      "commitName": "52a20827fd243de91654dd7b7fc190b2f434e486",
      "commitAuthor": "Andrei Paikin",
      "diff": "@@ -0,0 +1,25 @@\n+    private void checkToken(DetailAST ast, DetailAST nextToken) {\n+        final int astType \u003d ast.getType();\n+        switch (astType) {\n+            case TokenTypes.VARIABLE_DEF:\n+                processVariableDef(ast, nextToken);\n+                break;\n+            case TokenTypes.IMPORT:\n+            case TokenTypes.STATIC_IMPORT:\n+                processImport(ast, nextToken);\n+                break;\n+            case TokenTypes.PACKAGE_DEF:\n+                processPackage(ast, nextToken);\n+                break;\n+            default:\n+                if (nextToken.getType() \u003d\u003d TokenTypes.RCURLY) {\n+                    if (hasNotAllowedTwoEmptyLinesBefore(nextToken)) {\n+                        log(ast.getLineNo(), MSG_MULTIPLE_LINES_AFTER, ast.getText());\n+                    }\n+                }\n+                else if (!hasEmptyLineAfter(ast)) {\n+                    log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n+                        nextToken.getText());\n+                }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkToken(DetailAST ast, DetailAST nextToken) {\n        final int astType \u003d ast.getType();\n        switch (astType) {\n            case TokenTypes.VARIABLE_DEF:\n                processVariableDef(ast, nextToken);\n                break;\n            case TokenTypes.IMPORT:\n            case TokenTypes.STATIC_IMPORT:\n                processImport(ast, nextToken);\n                break;\n            case TokenTypes.PACKAGE_DEF:\n                processPackage(ast, nextToken);\n                break;\n            default:\n                if (nextToken.getType() \u003d\u003d TokenTypes.RCURLY) {\n                    if (hasNotAllowedTwoEmptyLinesBefore(nextToken)) {\n                        log(ast.getLineNo(), MSG_MULTIPLE_LINES_AFTER, ast.getText());\n                    }\n                }\n                else if (!hasEmptyLineAfter(ast)) {\n                    log(nextToken.getLineNo(), MSG_SHOULD_BE_SEPARATED,\n                        nextToken.getText());\n                }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java"
    }
  }
}