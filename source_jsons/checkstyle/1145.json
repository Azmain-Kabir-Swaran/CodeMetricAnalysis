{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericWhitespaceCheck.java",
  "functionName": "processNestedGenerics",
  "functionId": "processNestedGenerics___ast-DetailAST__line-String__after-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
  "functionStartLine": 202,
  "functionEndLine": 224,
  "numCommitsSeen": 57,
  "timeTaken": 1519,
  "changeHistory": [
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3",
    "208cf3d5b6b9b1544c547681f39fad17bc199728",
    "77733a452387aa2ee99fdc9a737633566cc7af3d",
    "8985e645a8a591b19c729cff16b8440b70a8022e",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983"
  ],
  "changeHistoryShort": {
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3": "Ybodychange",
    "208cf3d5b6b9b1544c547681f39fad17bc199728": "Ybodychange",
    "77733a452387aa2ee99fdc9a737633566cc7af3d": "Ybodychange",
    "8985e645a8a591b19c729cff16b8440b70a8022e": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190": "Ybodychange",
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5759: Update GenericWhitespaceCheck to log DetailAST\n",
      "commitDate": "17/12/18 9:47 PM",
      "commitName": "cd3464f4afeee35eea1f7ca6291f8a275dfd98b3",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 197.05,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n         if (indexOfAmp \u003e\u003d 1\n             \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n-                log(ast.getLineNo(), after, MSG_WS_NOT_PRECEDED, \"\u0026\");\n+                log(ast, MSG_WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n-                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+                log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n-            log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+            log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 1\n            \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast, MSG_WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "208cf3d5b6b9b1544c547681f39fad17bc199728": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5003: increased coverage of pitest-checks-whitespace to 98%\n",
      "commitDate": "26/08/17 2:33 PM",
      "commitName": "208cf3d5b6b9b1544c547681f39fad17bc199728",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "24/04/17 7:55 AM",
      "commitNameOld": "e803943ff515fbec5a2bbdae948af3dd018669a1",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 124.28,
      "commitsBetweenForRepo": 513,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n-        if (indexOfAmp \u003e\u003d 0\n+        if (indexOfAmp \u003e\u003d 1\n             \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n                 log(ast.getLineNo(), after, MSG_WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n                 log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n             log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 1\n            \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, MSG_WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "77733a452387aa2ee99fdc9a737633566cc7af3d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: renamed error message fields to match standard naming",
      "commitDate": "21/01/16 6:40 AM",
      "commitName": "77733a452387aa2ee99fdc9a737633566cc7af3d",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n         if (indexOfAmp \u003e\u003d 0\n             \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n-                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n+                log(ast.getLineNo(), after, MSG_WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n-            log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n+            log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 0\n            \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, MSG_WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, MSG_WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "8985e645a8a591b19c729cff16b8440b70a8022e": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Rename boolean methods to start with question word\n\nFixes `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "28/08/15 10:43 PM",
      "commitName": "8985e645a8a591b19c729cff16b8440b70a8022e",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:50 AM",
      "commitNameOld": "55c92042eb6986e905529de841d3d1c9a7b2b6dd",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.7,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n         if (indexOfAmp \u003e\u003d 0\n-            \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n+            \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n                 log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n             log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 0\n            \u0026\u0026 containsWhitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "19/08/15 8:21 PM",
      "commitNameOld": "efa16e17bf710b7b24af828296c2337612912ba9",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 5.82,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n         if (indexOfAmp \u003e\u003d 0\n             \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n                 log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n-                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n-            log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+            log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 0\n            \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, WS_FOLLOWED, CLOSE_ANGLE_BRACKET);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1289: \u0027GenericWhitespaceCheck\u0027 refactored, UT coverage improved\n",
      "commitDate": "15/07/15 4:58 PM",
      "commitName": "6d3dbe2fd3d64b491ee39ac1d42d0ee88938d190",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "14/06/15 9:56 PM",
      "commitNameOld": "7c1d239748c9a90112bf3a59b189dc31ffe41983",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 30.79,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void processNestedGenerics(DetailAST ast, String line, int after) {\n         // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n \n         // In case of several extends definitions:\n         //\n         //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n         //                                          ^\n         //   should be whitespace if followed by \u0026 -+\n         //\n         final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n-        if (indexOfAmp !\u003d -1\n+        if (indexOfAmp \u003e\u003d 0\n             \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n             if (indexOfAmp - after \u003d\u003d 0) {\n                 log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n             }\n             else if (indexOfAmp - after !\u003d 1) {\n                 log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n             }\n         }\n         else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n             log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp \u003e\u003d 0\n            \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java",
      "extendedDetails": {}
    },
    "7c1d239748c9a90112bf3a59b189dc31ffe41983": {
      "type": "Yintroduced",
      "commitMessage": "GenericWhitespace updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "14/06/15 9:56 PM",
      "commitName": "7c1d239748c9a90112bf3a59b189dc31ffe41983",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,23 @@\n+    private void processNestedGenerics(DetailAST ast, String line, int after) {\n+        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n+\n+        // In case of several extends definitions:\n+        //\n+        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n+        //                                          ^\n+        //   should be whitespace if followed by \u0026 -+\n+        //\n+        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n+        if (indexOfAmp !\u003d -1\n+            \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n+            if (indexOfAmp - after \u003d\u003d 0) {\n+                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n+            }\n+            else if (indexOfAmp - after !\u003d 1) {\n+                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+            }\n+        }\n+        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n+            log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processNestedGenerics(DetailAST ast, String line, int after) {\n        // In a nested Generic type, so can only be a \u0027\u003e\u0027 or \u0027,\u0027 or \u0027\u0026\u0027\n\n        // In case of several extends definitions:\n        //\n        //   class IntEnumValueType\u003cE extends Enum\u003cE\u003e \u0026 IntEnum\u003e\n        //                                          ^\n        //   should be whitespace if followed by \u0026 -+\n        //\n        final int indexOfAmp \u003d line.indexOf(\u0027\u0026\u0027, after);\n        if (indexOfAmp !\u003d -1\n            \u0026\u0026 whitespaceBetween(after, indexOfAmp, line)) {\n            if (indexOfAmp - after \u003d\u003d 0) {\n                log(ast.getLineNo(), after, WS_NOT_PRECEDED, \"\u0026\");\n            }\n            else if (indexOfAmp - after !\u003d 1) {\n                log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n            }\n        }\n        else if (line.charAt(after) \u003d\u003d \u0027 \u0027) {\n            log(ast.getLineNo(), after, WS_FOLLOWED, \"\u003e\");\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/GenericWhitespaceCheck.java"
    }
  }
}