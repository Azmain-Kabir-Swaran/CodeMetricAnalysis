{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfigurationLoader.java",
  "functionName": "replaceProperties",
  "functionId": "replaceProperties___value-String__props-PropertyResolver__defaultValue-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
  "functionStartLine": 352,
  "functionEndLine": 384,
  "numCommitsSeen": 247,
  "timeTaken": 3258,
  "changeHistory": [
    "6054b46c9b717a03cf000c7884d0256335fc01e9",
    "46fa8090954480eecdeb6e7367f0e30655853f42",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "8ad9441bbb78695a924be63444222ae80cfcf114",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72",
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
    "33b6e5d9fc6fae514f508e580d84626dd202c0bb",
    "a955b402b7db322df8f073a0e8f7a3abd8449f17"
  ],
  "changeHistoryShort": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": "Ybodychange",
    "46fa8090954480eecdeb6e7367f0e30655853f42": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "8ad9441bbb78695a924be63444222ae80cfcf114": "Ymodifierchange",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ybodychange",
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": "Ybodychange",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98": "Ymultichange(Yparameterchange,Ybodychange)",
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": "Ymultichange(Yparameterchange,Ybodychange)",
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "33b6e5d9fc6fae514f508e580d84626dd202c0bb": "Ybodychange",
    "a955b402b7db322df8f073a0e8f7a3abd8449f17": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6054b46c9b717a03cf000c7884d0256335fc01e9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4940: fix MultipleReturnPointsPerMethod idea violation\n",
      "commitDate": "19/08/17 10:29 PM",
      "commitName": "6054b46c9b717a03cf000c7884d0256335fc01e9",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "09/08/17 12:17 PM",
      "commitNameOld": "66cc9d43c9620678078d2716308ee61916227fcb",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 10.43,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     private static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n             throws CheckstyleException {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n         final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n         parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuilder sb \u003d new StringBuilder(256);\n         final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n         final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n             String fragment \u003d fragmentsIterator.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d propertyRefsIterator.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n-                        return defaultValue;\n+                        sb.replace(0, sb.length(), defaultValue);\n+                        break;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n            throws CheckstyleException {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder(256);\n        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n        while (fragmentsIterator.hasNext()) {\n            String fragment \u003d fragmentsIterator.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d propertyRefsIterator.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        sb.replace(0, sb.length(), defaultValue);\n                        break;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "46fa8090954480eecdeb6e7367f0e30655853f42": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4812: add report on StringBufferMustHaveInitialCapacity\n",
      "commitDate": "27/07/17 1:18 PM",
      "commitName": "46fa8090954480eecdeb6e7367f0e30655853f42",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "07/07/17 5:45 AM",
      "commitNameOld": "96641268d6ecdae405692c7e4471856a342cc062",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 20.31,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     private static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n             throws CheckstyleException {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n         final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n         parsePropertyString(value, fragments, propertyRefs);\n \n-        final StringBuilder sb \u003d new StringBuilder();\n+        final StringBuilder sb \u003d new StringBuilder(256);\n         final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n         final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n             String fragment \u003d fragmentsIterator.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d propertyRefsIterator.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n                         return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n            throws CheckstyleException {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder(256);\n        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n        while (fragmentsIterator.hasNext()) {\n            String fragment \u003d fragmentsIterator.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d propertyRefsIterator.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "07/05/16 9:41 AM",
      "commitNameOld": "871b20e88b5bfedb324f3e1996b37d0c68eb727b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 136.42,
      "commitsBetweenForRepo": 247,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     private static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n             throws CheckstyleException {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n-        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n-        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n+        final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n+        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n         parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuilder sb \u003d new StringBuilder();\n         final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n         final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n             String fragment \u003d fragmentsIterator.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d propertyRefsIterator.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n                         return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n            throws CheckstyleException {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d new ArrayList\u003c\u003e();\n        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003c\u003e();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder();\n        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n        while (fragmentsIterator.hasNext()) {\n            String fragment \u003d fragmentsIterator.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d propertyRefsIterator.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "8ad9441bbb78695a924be63444222ae80cfcf114": {
      "type": "Ymodifierchange",
      "commitMessage": "Issue #957: Forbid @VisibleForTesting\n",
      "commitDate": "20/02/16 12:25 PM",
      "commitName": "8ad9441bbb78695a924be63444222ae80cfcf114",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.83,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-    static String replaceProperties(\n+    private static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n         throws CheckstyleException {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n         final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n         parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuilder sb \u003d new StringBuilder();\n         final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n         final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n         while (fragmentsIterator.hasNext()) {\n             String fragment \u003d fragmentsIterator.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d propertyRefsIterator.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n                         return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n        throws CheckstyleException {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder();\n        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n        while (fragmentsIterator.hasNext()) {\n            String fragment \u003d fragmentsIterator.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d propertyRefsIterator.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[private, static]"
      }
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ybodychange",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": "07/08/15 9:38 PM",
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "30/07/15 10:52 PM",
      "commitNameOld": "71c16c55c33b368bf373c60a6daafdd69b0b1abc",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 7.95,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n         throws CheckstyleException {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n         final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n         parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuilder sb \u003d new StringBuilder();\n-        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n-        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n-        while (i.hasNext()) {\n-            String fragment \u003d i.next();\n+        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n+        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n+        while (fragmentsIterator.hasNext()) {\n+            String fragment \u003d fragmentsIterator.next();\n             if (fragment \u003d\u003d null) {\n-                final String propertyName \u003d j.next();\n+                final String propertyName \u003d propertyRefsIterator.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n                         return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n        throws CheckstyleException {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder();\n        final Iterator\u003cString\u003e fragmentsIterator \u003d fragments.iterator();\n        final Iterator\u003cString\u003e propertyRefsIterator \u003d propertyRefs.iterator();\n        while (fragmentsIterator.hasNext()) {\n            String fragment \u003d fragmentsIterator.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d propertyRefsIterator.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832": {
      "type": "Ybodychange",
      "commitMessage": "Replace `StringBuffer` with `StringBuilder` to improve performance\n\nThread-safety given by `StringBuffer` doesn\u0027t give any benefit when used within one method, so in such cases `StringBuilder` is safe and more efficient replacement.\n",
      "commitDate": "15/02/15 12:57 AM",
      "commitName": "ca634f7cafbf0d8f21eac1c4badacbe2f3cf8832",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "19/01/15 6:38 AM",
      "commitNameOld": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 26.76,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String replaceProperties(\n             String value, PropertyResolver props, String defaultValue)\n         throws CheckstyleException\n     {\n         if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n         final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n         parsePropertyString(value, fragments, propertyRefs);\n \n-        final StringBuffer sb \u003d new StringBuffer();\n+        final StringBuilder sb \u003d new StringBuilder();\n         final Iterator\u003cString\u003e i \u003d fragments.iterator();\n         final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d j.next();\n                 fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (defaultValue !\u003d null) {\n                         return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n        throws CheckstyleException\n    {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuilder sb \u003d new StringBuilder();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n     static String replaceProperties(\n-            String aValue, PropertyResolver aProps, String aDefaultValue)\n+            String value, PropertyResolver props, String defaultValue)\n         throws CheckstyleException\n     {\n-        if (aValue \u003d\u003d null) {\n+        if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n         final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n-        parsePropertyString(aValue, fragments, propertyRefs);\n+        parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator\u003cString\u003e i \u003d fragments.iterator();\n         final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d j.next();\n-                fragment \u003d aProps.resolve(propertyName);\n+                fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n-                    if (aDefaultValue !\u003d null) {\n-                        return aDefaultValue;\n+                    if (defaultValue !\u003d null) {\n+                        return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n        throws CheckstyleException\n    {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aValue-String, aProps-PropertyResolver, aDefaultValue-String]",
            "newValue": "[value-String, props-PropertyResolver, defaultValue-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 476,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n     static String replaceProperties(\n-            String aValue, PropertyResolver aProps, String aDefaultValue)\n+            String value, PropertyResolver props, String defaultValue)\n         throws CheckstyleException\n     {\n-        if (aValue \u003d\u003d null) {\n+        if (value \u003d\u003d null) {\n             return null;\n         }\n \n         final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n         final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n-        parsePropertyString(aValue, fragments, propertyRefs);\n+        parsePropertyString(value, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator\u003cString\u003e i \u003d fragments.iterator();\n         final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d j.next();\n-                fragment \u003d aProps.resolve(propertyName);\n+                fragment \u003d props.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n-                    if (aDefaultValue !\u003d null) {\n-                        return aDefaultValue;\n+                    if (defaultValue !\u003d null) {\n+                        return defaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n            String value, PropertyResolver props, String defaultValue)\n        throws CheckstyleException\n    {\n        if (value \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(value, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d props.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (defaultValue !\u003d null) {\n                        return defaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    static String replaceProperties(\n            String aValue, PropertyResolver aProps, String aDefaultValue)\n        throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d aProps.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (aDefaultValue !\u003d null) {\n                        return aDefaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java"
      }
    },
    "7552a0b72e07c9a0070e84789b5abe6d293de6e0": {
      "type": "Ybodychange",
      "commitMessage": "Drinking the \"Google Collections\" Kool-Aid.\n\nI like the reduced duplication.\n",
      "commitDate": "22/04/08 5:28 AM",
      "commitName": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 99.2,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String replaceProperties(\n             String aValue, PropertyResolver aProps, String aDefaultValue)\n         throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n-        final List\u003cString\u003e fragments \u003d new ArrayList\u003cString\u003e();\n-        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003cString\u003e();\n+        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n+        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator\u003cString\u003e i \u003d fragments.iterator();\n         final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d j.next();\n                 fragment \u003d aProps.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (aDefaultValue !\u003d null) {\n                         return aDefaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceProperties(\n            String aValue, PropertyResolver aProps, String aDefaultValue)\n        throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d Lists.newArrayList();\n        final List\u003cString\u003e propertyRefs \u003d Lists.newArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d aProps.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (aDefaultValue !\u003d null) {\n                        return aDefaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "15/12/07 12:14 AM",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     static String replaceProperties(\n             String aValue, PropertyResolver aProps, String aDefaultValue)\n         throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n-        final List fragments \u003d new ArrayList();\n-        final List propertyRefs \u003d new ArrayList();\n+        final List\u003cString\u003e fragments \u003d new ArrayList\u003cString\u003e();\n+        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003cString\u003e();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n-        final Iterator i \u003d fragments.iterator();\n-        final Iterator j \u003d propertyRefs.iterator();\n+        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n+        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n-            String fragment \u003d (String) i.next();\n+            String fragment \u003d i.next();\n             if (fragment \u003d\u003d null) {\n-                final String propertyName \u003d (String) j.next();\n+                final String propertyName \u003d j.next();\n                 fragment \u003d aProps.resolve(propertyName);\n                 if (fragment \u003d\u003d null) {\n                     if (aDefaultValue !\u003d null) {\n                         return aDefaultValue;\n                     }\n                     throw new CheckstyleException(\n                         \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    static String replaceProperties(\n            String aValue, PropertyResolver aProps, String aDefaultValue)\n        throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List\u003cString\u003e fragments \u003d new ArrayList\u003cString\u003e();\n        final List\u003cString\u003e propertyRefs \u003d new ArrayList\u003cString\u003e();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator\u003cString\u003e i \u003d fragments.iterator();\n        final Iterator\u003cString\u003e j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d j.next();\n                fragment \u003d aProps.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (aDefaultValue !\u003d null) {\n                        return aDefaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
      "extendedDetails": {}
    },
    "22d0ed9d4cf3c92e70d6315637ce36d572e91e98": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "added default attribute to configuration \u003cproperty\u003e tags,\nsee recent \"property resolution changes\" discussion on checkstyle-devel list\n",
      "commitDate": "28/02/04 11:45 PM",
      "commitName": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "added default attribute to configuration \u003cproperty\u003e tags,\nsee recent \"property resolution changes\" discussion on checkstyle-devel list\n",
          "commitDate": "28/02/04 11:45 PM",
          "commitName": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "26/01/04 2:39 AM",
          "commitNameOld": "433209f256f2f87310b4546cb08218dbdb110556",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 33.88,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,33 @@\n-    static String replaceProperties(String aValue, PropertyResolver aProps)\n+    static String replaceProperties(\n+            String aValue, PropertyResolver aProps, String aDefaultValue)\n         throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n                 fragment \u003d aProps.resolve(propertyName);\n+                if (fragment \u003d\u003d null) {\n+                    if (aDefaultValue !\u003d null) {\n+                        return aDefaultValue;\n+                    }\n+                    throw new CheckstyleException(\n+                        \"Property ${\" + propertyName + \"} has not been set\");\n+                }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n            String aValue, PropertyResolver aProps, String aDefaultValue)\n        throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                fragment \u003d aProps.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (aDefaultValue !\u003d null) {\n                        return aDefaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aValue-String, aProps-PropertyResolver]",
            "newValue": "[aValue-String, aProps-PropertyResolver, aDefaultValue-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "added default attribute to configuration \u003cproperty\u003e tags,\nsee recent \"property resolution changes\" discussion on checkstyle-devel list\n",
          "commitDate": "28/02/04 11:45 PM",
          "commitName": "22d0ed9d4cf3c92e70d6315637ce36d572e91e98",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "26/01/04 2:39 AM",
          "commitNameOld": "433209f256f2f87310b4546cb08218dbdb110556",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 33.88,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,33 @@\n-    static String replaceProperties(String aValue, PropertyResolver aProps)\n+    static String replaceProperties(\n+            String aValue, PropertyResolver aProps, String aDefaultValue)\n         throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n                 fragment \u003d aProps.resolve(propertyName);\n+                if (fragment \u003d\u003d null) {\n+                    if (aDefaultValue !\u003d null) {\n+                        return aDefaultValue;\n+                    }\n+                    throw new CheckstyleException(\n+                        \"Property ${\" + propertyName + \"} has not been set\");\n+                }\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n            String aValue, PropertyResolver aProps, String aDefaultValue)\n        throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                fragment \u003d aProps.resolve(propertyName);\n                if (fragment \u003d\u003d null) {\n                    if (aDefaultValue !\u003d null) {\n                        return aDefaultValue;\n                    }\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "47802121745d9113b54cdb2d8ccef59e74ce3e72": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
      "commitDate": "23/02/03 4:29 AM",
      "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
          "commitDate": "23/02/03 4:29 AM",
          "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "23/02/03 12:20 AM",
          "commitNameOld": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,26 @@\n     static String replaceProperties(\n-        String aValue, Properties aProps)\n+        String aValue, PropertyResolver aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n-                if (!aProps.containsKey(propertyName)) {\n-                    throw new CheckstyleException(\"Property ${\"\n-                        + propertyName + \"} has not been set\");\n-                }\n-                fragment \u003d aProps.getProperty(propertyName);\n+                fragment \u003d aProps.resolve(propertyName);\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n        String aValue, PropertyResolver aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                fragment \u003d aProps.resolve(propertyName);\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[aValue-String, aProps-Properties]",
            "newValue": "[aValue-String, aProps-PropertyResolver]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "use a PropertyResolver interface instead of using Properties directly\n",
          "commitDate": "23/02/03 4:29 AM",
          "commitName": "47802121745d9113b54cdb2d8ccef59e74ce3e72",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "23/02/03 12:20 AM",
          "commitNameOld": "7166b6a1d07452b72cf6f62ae2afe9846b96ad91",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.17,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,30 +1,26 @@\n     static String replaceProperties(\n-        String aValue, Properties aProps)\n+        String aValue, PropertyResolver aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n-                if (!aProps.containsKey(propertyName)) {\n-                    throw new CheckstyleException(\"Property ${\"\n-                        + propertyName + \"} has not been set\");\n-                }\n-                fragment \u003d aProps.getProperty(propertyName);\n+                fragment \u003d aProps.resolve(propertyName);\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n        String aValue, PropertyResolver aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                fragment \u003d aProps.resolve(propertyName);\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "moved property expansion from api package to private method of ConfigurationLoader (bug #670594)\nalso added property expansion of ANT properties\n",
      "commitDate": "28/01/03 11:56 AM",
      "commitName": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "moved property expansion from api package to private method of ConfigurationLoader (bug #670594)\nalso added property expansion of ANT properties\n",
          "commitDate": "28/01/03 11:56 AM",
          "commitName": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "28/01/03 11:32 AM",
          "commitNameOld": "9d11d6a0b07b63e3581468183f2ec359bafbf300",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    public static String replaceProperties(String aValue,  Properties aProps)\n+    static String replaceProperties(\n+        String aValue, Properties aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n                 if (!aProps.containsKey(propertyName)) {\n                     throw new CheckstyleException(\"Property ${\"\n                         + propertyName + \"} has not been set\");\n                 }\n-                fragment \u003d (aProps.containsKey(propertyName))\n-                    ? (String) aProps.get(propertyName)\n-                    : \"${\" + propertyName + \"}\";\n+                fragment \u003d aProps.getProperty(propertyName);\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n        String aValue, Properties aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                if (!aProps.containsKey(propertyName)) {\n                    throw new CheckstyleException(\"Property ${\"\n                        + propertyName + \"} has not been set\");\n                }\n                fragment \u003d aProps.getProperty(propertyName);\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
            "oldMethodName": "replaceProperties",
            "newMethodName": "replaceProperties"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "moved property expansion from api package to private method of ConfigurationLoader (bug #670594)\nalso added property expansion of ANT properties\n",
          "commitDate": "28/01/03 11:56 AM",
          "commitName": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "28/01/03 11:32 AM",
          "commitNameOld": "9d11d6a0b07b63e3581468183f2ec359bafbf300",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    public static String replaceProperties(String aValue,  Properties aProps)\n+    static String replaceProperties(\n+        String aValue, Properties aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n                 if (!aProps.containsKey(propertyName)) {\n                     throw new CheckstyleException(\"Property ${\"\n                         + propertyName + \"} has not been set\");\n                 }\n-                fragment \u003d (aProps.containsKey(propertyName))\n-                    ? (String) aProps.get(propertyName)\n-                    : \"${\" + propertyName + \"}\";\n+                fragment \u003d aProps.getProperty(propertyName);\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n        String aValue, Properties aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                if (!aProps.containsKey(propertyName)) {\n                    throw new CheckstyleException(\"Property ${\"\n                        + propertyName + \"} has not been set\");\n                }\n                fragment \u003d aProps.getProperty(propertyName);\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "moved property expansion from api package to private method of ConfigurationLoader (bug #670594)\nalso added property expansion of ANT properties\n",
          "commitDate": "28/01/03 11:56 AM",
          "commitName": "ee2e1a5cb3c7dd02bf6b63c418126e41735ee0ea",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "28/01/03 11:32 AM",
          "commitNameOld": "9d11d6a0b07b63e3581468183f2ec359bafbf300",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,30 @@\n-    public static String replaceProperties(String aValue,  Properties aProps)\n+    static String replaceProperties(\n+        String aValue, Properties aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n         final List fragments \u003d new ArrayList();\n         final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n         final Iterator i \u003d fragments.iterator();\n         final Iterator j \u003d propertyRefs.iterator();\n         while (i.hasNext()) {\n             String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n                 final String propertyName \u003d (String) j.next();\n                 if (!aProps.containsKey(propertyName)) {\n                     throw new CheckstyleException(\"Property ${\"\n                         + propertyName + \"} has not been set\");\n                 }\n-                fragment \u003d (aProps.containsKey(propertyName))\n-                    ? (String) aProps.get(propertyName)\n-                    : \"${\" + propertyName + \"}\";\n+                fragment \u003d aProps.getProperty(propertyName);\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
          "actualSource": "    static String replaceProperties(\n        String aValue, Properties aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                if (!aProps.containsKey(propertyName)) {\n                    throw new CheckstyleException(\"Property ${\"\n                        + propertyName + \"} has not been set\");\n                }\n                fragment \u003d aProps.getProperty(propertyName);\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/ConfigurationLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "33b6e5d9fc6fae514f508e580d84626dd202c0bb": {
      "type": "Ybodychange",
      "commitMessage": "Brought the code into the 21st century. Do not have\nthe requirement to run on JDK 1.1. I wish ANT would\nmove on as well.\n",
      "commitDate": "30/11/02 7:56 PM",
      "commitName": "33b6e5d9fc6fae514f508e580d84626dd202c0bb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "30/11/02 10:45 AM",
      "commitNameOld": "b21944b2f1d183f6180918e4119b42bc82c0c8a1",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     public static String replaceProperties(String aValue,  Properties aProps)\n             throws CheckstyleException\n     {\n         if (aValue \u003d\u003d null) {\n             return null;\n         }\n \n-        final Vector fragments \u003d new Vector();\n-        final Vector propertyRefs \u003d new Vector();\n+        final List fragments \u003d new ArrayList();\n+        final List propertyRefs \u003d new ArrayList();\n         parsePropertyString(aValue, fragments, propertyRefs);\n \n         final StringBuffer sb \u003d new StringBuffer();\n-        final Enumeration i \u003d fragments.elements();\n-        final Enumeration j \u003d propertyRefs.elements();\n-        while (i.hasMoreElements()) {\n-            String fragment \u003d (String) i.nextElement();\n+        final Iterator i \u003d fragments.iterator();\n+        final Iterator j \u003d propertyRefs.iterator();\n+        while (i.hasNext()) {\n+            String fragment \u003d (String) i.next();\n             if (fragment \u003d\u003d null) {\n-                final String propertyName \u003d (String) j.nextElement();\n+                final String propertyName \u003d (String) j.next();\n                 if (!aProps.containsKey(propertyName)) {\n                     throw new CheckstyleException(\n                             \"Property ${\" + propertyName + \"} has not been set\");\n                 }\n                 fragment \u003d (aProps.containsKey(propertyName))\n                     ? (String) aProps.get(propertyName)\n                     : \"${\" + propertyName + \"}\";\n             }\n             sb.append(fragment);\n         }\n \n         return sb.toString();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static String replaceProperties(String aValue,  Properties aProps)\n            throws CheckstyleException\n    {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final List fragments \u003d new ArrayList();\n        final List propertyRefs \u003d new ArrayList();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Iterator i \u003d fragments.iterator();\n        final Iterator j \u003d propertyRefs.iterator();\n        while (i.hasNext()) {\n            String fragment \u003d (String) i.next();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.next();\n                if (!aProps.containsKey(propertyName)) {\n                    throw new CheckstyleException(\n                            \"Property ${\" + propertyName + \"} has not been set\");\n                }\n                fragment \u003d (aProps.containsKey(propertyName))\n                    ? (String) aProps.get(propertyName)\n                    : \"${\" + propertyName + \"}\";\n            }\n            sb.append(fragment);\n        }\n\n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java",
      "extendedDetails": {}
    },
    "a955b402b7db322df8f073a0e8f7a3abd8449f17": {
      "type": "Yintroduced",
      "commitMessage": "code for properties expansion copied from ant\n",
      "commitDate": "30/11/02 9:07 AM",
      "commitName": "a955b402b7db322df8f073a0e8f7a3abd8449f17",
      "commitAuthor": "Rick Giles",
      "diff": "@@ -0,0 +1,31 @@\n+     public static String replaceProperties(String aValue,  Properties aProps)\n+     throws CheckstyleException\n+     {\n+        if (aValue \u003d\u003d null) {\n+            return null;\n+        }\n+\n+        final Vector fragments \u003d new Vector();\n+        final Vector propertyRefs \u003d new Vector();\n+        parsePropertyString(aValue, fragments, propertyRefs);\n+\n+        final StringBuffer sb \u003d new StringBuffer();\n+        final Enumeration i \u003d fragments.elements();\n+        final Enumeration j \u003d propertyRefs.elements();\n+        while (i.hasMoreElements()) {\n+            String fragment \u003d (String) i.nextElement();\n+            if (fragment \u003d\u003d null) {\n+                final String propertyName \u003d (String) j.nextElement();\n+                if (!aProps.containsKey(propertyName)) {\n+                    throw new CheckstyleException(\n+                        \"Property ${\" + propertyName + \"} has not been set\");\n+                }\n+                fragment \u003d (aProps.containsKey(propertyName)) \n+                    ? (String) aProps.get(propertyName) \n+                    : \"${\" + propertyName + \"}\"; \n+            }\n+            sb.append(fragment);\n+        }                        \n+        \n+        return sb.toString();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "     public static String replaceProperties(String aValue,  Properties aProps)\n     throws CheckstyleException\n     {\n        if (aValue \u003d\u003d null) {\n            return null;\n        }\n\n        final Vector fragments \u003d new Vector();\n        final Vector propertyRefs \u003d new Vector();\n        parsePropertyString(aValue, fragments, propertyRefs);\n\n        final StringBuffer sb \u003d new StringBuffer();\n        final Enumeration i \u003d fragments.elements();\n        final Enumeration j \u003d propertyRefs.elements();\n        while (i.hasMoreElements()) {\n            String fragment \u003d (String) i.nextElement();\n            if (fragment \u003d\u003d null) {\n                final String propertyName \u003d (String) j.nextElement();\n                if (!aProps.containsKey(propertyName)) {\n                    throw new CheckstyleException(\n                        \"Property ${\" + propertyName + \"} has not been set\");\n                }\n                fragment \u003d (aProps.containsKey(propertyName)) \n                    ? (String) aProps.get(propertyName) \n                    : \"${\" + propertyName + \"}\"; \n            }\n            sb.append(fragment);\n        }                        \n        \n        return sb.toString();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/Utils.java"
    }
  }
}