{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegexpHeaderCheck.java",
  "functionName": "setMultiLines",
  "functionId": "setMultiLines___list-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
  "functionStartLine": 229,
  "functionEndLine": 238,
  "numCommitsSeen": 101,
  "timeTaken": 2177,
  "changeHistory": [
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "e3e0c92185f2517de79f58f25be166e636fbd1f2",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "29027109bf962f47b6a6000fdca69b5679ce4b43",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf"
  ],
  "changeHistoryShort": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "e3e0c92185f2517de79f58f25be166e636fbd1f2": "Ybodychange",
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": "Yparameterchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "29027109bf962f47b6a6000fdca69b5679ce4b43": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": "Ybodychange",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": "Yfilerename",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "20/03/16 2:34 PM",
      "commitNameOld": "9777146e28e6457160a7f91d897776f9fe4af10a",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 67.67,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void setMultiLines(int... list) {\n         if (list.length \u003d\u003d 0) {\n             multiLines \u003d EMPTY_INT_ARRAY;\n-            return;\n         }\n-\n-        multiLines \u003d new int[list.length];\n-        System.arraycopy(list, 0, multiLines, 0, list.length);\n-        Arrays.sort(multiLines);\n+        else {\n+            multiLines \u003d new int[list.length];\n+            System.arraycopy(list, 0, multiLines, 0, list.length);\n+            Arrays.sort(multiLines);\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int... list) {\n        if (list.length \u003d\u003d 0) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n        }\n        else {\n            multiLines \u003d new int[list.length];\n            System.arraycopy(list, 0, multiLines, 0, list.length);\n            Arrays.sort(multiLines);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "e3e0c92185f2517de79f58f25be166e636fbd1f2": {
      "type": "Ybodychange",
      "commitMessage": "Coverage has been increased to 100% in RegexpHeaderCheck. Issue #1292\n",
      "commitDate": "28/07/15 8:59 PM",
      "commitName": "e3e0c92185f2517de79f58f25be166e636fbd1f2",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 5.92,
      "commitsBetweenForRepo": 66,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n     public void setMultiLines(int... list) {\n-        if (list \u003d\u003d null || list.length \u003d\u003d 0) {\n+        if (list.length \u003d\u003d 0) {\n             multiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n         multiLines \u003d new int[list.length];\n         System.arraycopy(list, 0, multiLines, 0, list.length);\n         Arrays.sort(multiLines);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int... list) {\n        if (list.length \u003d\u003d 0) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        multiLines \u003d new int[list.length];\n        System.arraycopy(list, 0, multiLines, 0, list.length);\n        Arrays.sort(multiLines);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "c0446a825514ea0279b8c22f633f2c4e3c73dc1f": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations from UseVarargs rule, issue #999\n\nThe changes are fully backward-compatible. Method with vararg can be invoked both using array and list of parameters.\n",
      "commitDate": "29/04/15 5:21 PM",
      "commitName": "c0446a825514ea0279b8c22f633f2c4e3c73dc1f",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "24/04/15 9:10 AM",
      "commitNameOld": "589c5a261a6d13f2e83235ddb2a070ed2da78e9b",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 5.34,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-    public void setMultiLines(int[] list)\n+    public void setMultiLines(int... list)\n     {\n         if (list \u003d\u003d null || list.length \u003d\u003d 0) {\n             multiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n         multiLines \u003d new int[list.length];\n         System.arraycopy(list, 0, multiLines, 0, list.length);\n         Arrays.sort(multiLines);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int... list)\n    {\n        if (list \u003d\u003d null || list.length \u003d\u003d 0) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        multiLines \u003d new int[list.length];\n        System.arraycopy(list, 0, multiLines, 0, list.length);\n        Arrays.sort(multiLines);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldValue": "[list-int[]]",
        "newValue": "[list-int]"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void setMultiLines(int[] list)\n     {\n-        if ((list \u003d\u003d null) || (list.length \u003d\u003d 0)) {\n+        if (list \u003d\u003d null || list.length \u003d\u003d 0) {\n             multiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n         multiLines \u003d new int[list.length];\n         System.arraycopy(list, 0, multiLines, 0, list.length);\n         Arrays.sort(multiLines);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int[] list)\n    {\n        if (list \u003d\u003d null || list.length \u003d\u003d 0) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        multiLines \u003d new int[list.length];\n        System.arraycopy(list, 0, multiLines, 0, list.length);\n        Arrays.sort(multiLines);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "29027109bf962f47b6a6000fdca69b5679ce4b43": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, header, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void setMultiLines(int[] aList)\n+    public void setMultiLines(int[] list)\n     {\n-        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n-            mMultiLines \u003d EMPTY_INT_ARRAY;\n+        if ((list \u003d\u003d null) || (list.length \u003d\u003d 0)) {\n+            multiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n-        mMultiLines \u003d new int[aList.length];\n-        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n-        Arrays.sort(mMultiLines);\n+        multiLines \u003d new int[list.length];\n+        System.arraycopy(list, 0, multiLines, 0, list.length);\n+        Arrays.sort(multiLines);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMultiLines(int[] list)\n    {\n        if ((list \u003d\u003d null) || (list.length \u003d\u003d 0)) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        multiLines \u003d new int[list.length];\n        System.arraycopy(list, 0, multiLines, 0, list.length);\n        Arrays.sort(multiLines);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aList-int[]]",
            "newValue": "[list-int[]]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public void setMultiLines(int[] aList)\n+    public void setMultiLines(int[] list)\n     {\n-        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n-            mMultiLines \u003d EMPTY_INT_ARRAY;\n+        if ((list \u003d\u003d null) || (list.length \u003d\u003d 0)) {\n+            multiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n-        mMultiLines \u003d new int[aList.length];\n-        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n-        Arrays.sort(mMultiLines);\n+        multiLines \u003d new int[list.length];\n+        System.arraycopy(list, 0, multiLines, 0, list.length);\n+        Arrays.sort(multiLines);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMultiLines(int[] list)\n    {\n        if ((list \u003d\u003d null) || (list.length \u003d\u003d 0)) {\n            multiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        multiLines \u003d new int[list.length];\n        System.arraycopy(list, 0, multiLines, 0, list.length);\n        Arrays.sort(multiLines);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n            mMultiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        mMultiLines \u003d new int[aList.length];\n        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n        Arrays.sort(mMultiLines);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": {
      "type": "Ybodychange",
      "commitMessage": "Simplified the code by removing HeaderInfo classes, they were introduced to avoid code duplication between header checks in two separate inheritance trees (Java Check vs. FileSetCheck). Now that we have only FileSetChecks as Header checks, this delegation is no longer necessary.\n",
      "commitDate": "05/02/09 1:22 PM",
      "commitName": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "16/11/08 3:11 AM",
      "commitNameOld": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 81.42,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,11 @@\n     public void setMultiLines(int[] aList)\n     {\n-        getRegexpHeaderInfo().setMultiLines(aList);\n+        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n+            mMultiLines \u003d EMPTY_INT_ARRAY;\n+            return;\n+        }\n+\n+        mMultiLines \u003d new int[aList.length];\n+        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n+        Arrays.sort(mMultiLines);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n            mMultiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        mMultiLines \u003d new int[aList.length];\n        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n        Arrays.sort(mMultiLines);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": {
      "type": "Ybodychange",
      "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
      "commitDate": "19/10/06 1:35 PM",
      "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "06/07/06 8:44 PM",
      "commitNameOld": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 104.7,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,4 @@\n     public void setMultiLines(int[] aList)\n     {\n-        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n-            mMultiLines \u003d EMPTY_INT_ARRAY;\n-            return;\n-        }\n-\n-        mMultiLines \u003d new int[aList.length];\n-        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n-        Arrays.sort(mMultiLines);\n+        getRegexpHeaderInfo().setMultiLines(aList);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        getRegexpHeaderInfo().setMultiLines(aList);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "19/07/05 5:43 AM",
      "commitNameOld": "cbabd6b314a5523a5557e089858d3a3596426d56",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 352.61,
      "commitsBetweenForRepo": 103,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n     public void setMultiLines(int[] aList)\n     {\n-        if (aList \u003d\u003d null || aList.length \u003d\u003d 0) {\n+        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n             mMultiLines \u003d EMPTY_INT_ARRAY;\n             return;\n         }\n \n         mMultiLines \u003d new int[aList.length];\n         System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n         Arrays.sort(mMultiLines);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        if ((aList \u003d\u003d null) || (aList.length \u003d\u003d 0)) {\n            mMultiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        mMultiLines \u003d new int[aList.length];\n        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n        Arrays.sort(mMultiLines);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": {
      "type": "Yfilerename",
      "commitMessage": "moved header checks to their own package\nremoved duplicate usage documentation in javadoc along the way\n",
      "commitDate": "30/01/05 3:32 AM",
      "commitName": "aca96ae1b180a8036cc23e93840c4161ae8f8927",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "30/01/05 3:07 AM",
      "commitNameOld": "0a60a189ed4236fd9be3c26bbb2f27be95e5d967",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        if (aList \u003d\u003d null || aList.length \u003d\u003d 0) {\n            mMultiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        mMultiLines \u003d new int[aList.length];\n        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n        Arrays.sort(mMultiLines);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": {
      "type": "Yintroduced",
      "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
      "commitDate": "10/01/04 8:36 PM",
      "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,11 @@\n+    public void setMultiLines(int[] aList)\n+    {\n+        if (aList \u003d\u003d null || aList.length \u003d\u003d 0) {\n+            mMultiLines \u003d EMPTY_INT_ARRAY;\n+            return;\n+        }\n+\n+        mMultiLines \u003d new int[aList.length];\n+        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n+        Arrays.sort(mMultiLines);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMultiLines(int[] aList)\n    {\n        if (aList \u003d\u003d null || aList.length \u003d\u003d 0) {\n            mMultiLines \u003d EMPTY_INT_ARRAY;\n            return;\n        }\n\n        mMultiLines \u003d new int[aList.length];\n        System.arraycopy(aList, 0, mMultiLines, 0, aList.length);\n        Arrays.sort(mMultiLines);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java"
    }
  }
}