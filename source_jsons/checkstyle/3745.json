{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AutomaticBean.java",
  "functionName": "createBeanUtilsBean",
  "functionId": "createBeanUtilsBean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
  "functionStartLine": 101,
  "functionEndLine": 108,
  "numCommitsSeen": 111,
  "timeTaken": 2033,
  "changeHistory": [
    "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0",
    "3ddf152905d21e640033010bdafcfed6ee3b5bde",
    "ff83a8faecf638f6ea6b859172023ace44fe5709",
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "987d2d67d56e054adbe5ec56136dddb49f533137",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "2c02a737d97980eb4c984056c33265b8a917a717"
  ],
  "changeHistoryShort": {
    "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0": "Ybodychange",
    "3ddf152905d21e640033010bdafcfed6ee3b5bde": "Ybodychange",
    "ff83a8faecf638f6ea6b859172023ace44fe5709": "Ybodychange",
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": "Ybodychange",
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "987d2d67d56e054adbe5ec56136dddb49f533137": "Ybodychange",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "2c02a737d97980eb4c984056c33265b8a917a717": "Yintroduced"
  },
  "changeHistoryDetails": {
    "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3575: changed module setters for uri",
      "commitDate": "05/12/16 1:00 PM",
      "commitName": "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0",
      "commitAuthor": "rnveach",
      "commitDateOld": "30/11/16 10:45 AM",
      "commitNameOld": "3ddf152905d21e640033010bdafcfed6ee3b5bde",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 5.09,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,8 @@\n     private static BeanUtilsBean createBeanUtilsBean() {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n \n-        cub.register(new BooleanConverter(), Boolean.TYPE);\n-        cub.register(new BooleanConverter(), Boolean.class);\n-        cub.register(new ArrayConverter(\n-            boolean[].class, new BooleanConverter()), boolean[].class);\n-        cub.register(new ByteConverter(), Byte.TYPE);\n-        cub.register(new ByteConverter(), Byte.class);\n-        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n-            byte[].class);\n-        cub.register(new CharacterConverter(), Character.TYPE);\n-        cub.register(new CharacterConverter(), Character.class);\n-        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n-            char[].class);\n-        cub.register(new DoubleConverter(), Double.TYPE);\n-        cub.register(new DoubleConverter(), Double.class);\n-        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n-            double[].class);\n-        cub.register(new FloatConverter(), Float.TYPE);\n-        cub.register(new FloatConverter(), Float.class);\n-        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n-            float[].class);\n-        cub.register(new IntegerConverter(), Integer.TYPE);\n-        cub.register(new IntegerConverter(), Integer.class);\n-        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n-            int[].class);\n-        cub.register(new LongConverter(), Long.TYPE);\n-        cub.register(new LongConverter(), Long.class);\n-        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n-            long[].class);\n-        cub.register(new ShortConverter(), Short.TYPE);\n-        cub.register(new ShortConverter(), Short.class);\n-        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n-            short[].class);\n-        cub.register(new PatternConverter(), Pattern.class);\n-        cub.register(new ServerityLevelConverter(), SeverityLevel.class);\n-        cub.register(new ScopeConverter(), Scope.class);\n-        cub.register(new RelaxedStringArrayConverter(), String[].class);\n-\n-        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n-        // do not use defaults in the default configuration of ConvertUtilsBean\n+        registerIntegralTypes(cub);\n+        registerCustomTypes(cub);\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean() {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        registerIntegralTypes(cub);\n        registerCustomTypes(cub);\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "3ddf152905d21e640033010bdafcfed6ee3b5bde": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3575: changed module setters for scope",
      "commitDate": "30/11/16 10:45 AM",
      "commitName": "3ddf152905d21e640033010bdafcfed6ee3b5bde",
      "commitAuthor": "rnveach",
      "commitDateOld": "28/11/16 2:23 PM",
      "commitNameOld": "ff83a8faecf638f6ea6b859172023ace44fe5709",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.85,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,44 +1,45 @@\n     private static BeanUtilsBean createBeanUtilsBean() {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n \n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n         cub.register(new ArrayConverter(\n             boolean[].class, new BooleanConverter()), boolean[].class);\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n         cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n             byte[].class);\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n         cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n             char[].class);\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n         cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n             double[].class);\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n         cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n             float[].class);\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n         cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n             int[].class);\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n         cub.register(new ArrayConverter(long[].class, new LongConverter()),\n             long[].class);\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n         cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n             short[].class);\n         cub.register(new PatternConverter(), Pattern.class);\n         cub.register(new ServerityLevelConverter(), SeverityLevel.class);\n+        cub.register(new ScopeConverter(), Scope.class);\n         cub.register(new RelaxedStringArrayConverter(), String[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean() {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new PatternConverter(), Pattern.class);\n        cub.register(new ServerityLevelConverter(), SeverityLevel.class);\n        cub.register(new ScopeConverter(), Scope.class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "ff83a8faecf638f6ea6b859172023ace44fe5709": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3575: changed module setters for severity level",
      "commitDate": "28/11/16 2:23 PM",
      "commitName": "ff83a8faecf638f6ea6b859172023ace44fe5709",
      "commitAuthor": "rnveach",
      "commitDateOld": "09/11/16 4:34 AM",
      "commitNameOld": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 19.41,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,44 @@\n     private static BeanUtilsBean createBeanUtilsBean() {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n \n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n         cub.register(new ArrayConverter(\n             boolean[].class, new BooleanConverter()), boolean[].class);\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n         cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n             byte[].class);\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n         cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n             char[].class);\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n         cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n             double[].class);\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n         cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n             float[].class);\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n         cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n             int[].class);\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n         cub.register(new ArrayConverter(long[].class, new LongConverter()),\n             long[].class);\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n         cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n             short[].class);\n         cub.register(new PatternConverter(), Pattern.class);\n+        cub.register(new ServerityLevelConverter(), SeverityLevel.class);\n         cub.register(new RelaxedStringArrayConverter(), String[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean() {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new PatternConverter(), Pattern.class);\n        cub.register(new ServerityLevelConverter(), SeverityLevel.class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3255: changed module setters for pattern",
      "commitDate": "09/11/16 4:34 AM",
      "commitName": "8888fa5919dc31c6abe07ddc2f5fe0e29f66ef37",
      "commitAuthor": "rnveach",
      "commitDateOld": "20/09/16 7:52 PM",
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 49.4,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,43 @@\n     private static BeanUtilsBean createBeanUtilsBean() {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n \n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n         cub.register(new ArrayConverter(\n             boolean[].class, new BooleanConverter()), boolean[].class);\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n         cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n             byte[].class);\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n         cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n             char[].class);\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n         cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n             double[].class);\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n         cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n             float[].class);\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n         cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n             int[].class);\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n         cub.register(new ArrayConverter(long[].class, new LongConverter()),\n             long[].class);\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n         cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n             short[].class);\n+        cub.register(new PatternConverter(), Pattern.class);\n         cub.register(new RelaxedStringArrayConverter(), String[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean() {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new PatternConverter(), Pattern.class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "dd6b080a16e0933b3d19305f84ba01c8893839f3": {
      "type": "Ybodychange",
      "commitMessage": "all TODO/FIXME were removed , some of them converted to issues\n",
      "commitDate": "23/04/15 10:38 AM",
      "commitName": "dd6b080a16e0933b3d19305f84ba01c8893839f3",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "21/03/15 3:35 PM",
      "commitNameOld": "91d979ef8eab8d8f6fe5e5b64ec0586b49ea0315",
      "commitAuthorOld": "Damian Szczepanik",
      "daysBetweenCommits": 32.79,
      "commitsBetweenForRepo": 125,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,43 @@\n     private static BeanUtilsBean createBeanUtilsBean()\n     {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n-        // TODO: is there a smarter way to tell beanutils not to use defaults?\n+\n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n         cub.register(new ArrayConverter(\n             boolean[].class, new BooleanConverter()), boolean[].class);\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n         cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n             byte[].class);\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n         cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n             char[].class);\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n         cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n             double[].class);\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n         cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n             float[].class);\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n         cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n             int[].class);\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n         cub.register(new ArrayConverter(long[].class, new LongConverter()),\n             long[].class);\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n         cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n             short[].class);\n         cub.register(new RelaxedStringArrayConverter(), String[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean()\n    {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean()\n    {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n        // TODO: is there a smarter way to tell beanutils not to use defaults?\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java"
      }
    },
    "987d2d67d56e054adbe5ec56136dddb49f533137": {
      "type": "Ybodychange",
      "commitMessage": "Break dependence of deprecated API from Beanutils.\n\nAlso fixed Checkstyle errors (oh the shame:-).\n",
      "commitDate": "04/10/10 4:33 AM",
      "commitName": "987d2d67d56e054adbe5ec56136dddb49f533137",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "29/09/10 8:36 PM",
      "commitNameOld": "6f46bd4e83204417edf9605f97098bb9d34da728",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 4.33,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,43 @@\n     private static BeanUtilsBean createBeanUtilsBean()\n     {\n         final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n-\n         // TODO: is there a smarter way to tell beanutils not to use defaults?\n-\n-        final boolean[] booleanArray \u003d new boolean[0];\n-        final byte[] byteArray \u003d new byte[0];\n-        final char[] charArray \u003d new char[0];\n-        final double[] doubleArray \u003d new double[0];\n-        final float[] floatArray \u003d new float[0];\n-        final int[] intArray \u003d new int[0];\n-        final long[] longArray \u003d new long[0];\n-        final short[] shortArray \u003d new short[0];\n-\n-\n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n-        cub.register(\n-            new BooleanArrayConverter(), booleanArray.getClass());\n+        cub.register(new ArrayConverter(\n+            boolean[].class, new BooleanConverter()), boolean[].class);\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n-        cub.register(\n-            new ByteArrayConverter(byteArray), byteArray.getClass());\n+        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n+            byte[].class);\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n-        cub.register(\n-            new CharacterArrayConverter(), charArray.getClass());\n+        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n+            char[].class);\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n-        cub.register(\n-            new DoubleArrayConverter(doubleArray), doubleArray.getClass());\n+        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n+            double[].class);\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n-        cub.register(new FloatArrayConverter(), floatArray.getClass());\n+        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n+            float[].class);\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n-        cub.register(new IntegerArrayConverter(), intArray.getClass());\n+        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n+            int[].class);\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n-        cub.register(new LongArrayConverter(), longArray.getClass());\n+        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n+            long[].class);\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n-        cub.register(new ShortArrayConverter(), shortArray.getClass());\n-        // TODO: investigate:\n-        // StringArrayConverter doesn\u0027t properly convert an array of tokens with\n-        // elements containing an underscore, \"_\".\n-        // Hacked a replacement class :(\n-        //        cub.register(new StringArrayConverter(),\n-        //                        String[].class);\n-        cub.register(new StrArrayConverter(), String[].class);\n-        cub.register(new IntegerArrayConverter(), Integer[].class);\n+        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n+            short[].class);\n+        cub.register(new RelaxedStringArrayConverter(), String[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean()\n    {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n        // TODO: is there a smarter way to tell beanutils not to use defaults?\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(new ArrayConverter(\n            boolean[].class, new BooleanConverter()), boolean[].class);\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(new ArrayConverter(byte[].class, new ByteConverter()),\n            byte[].class);\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(new ArrayConverter(char[].class, new CharacterConverter()),\n            char[].class);\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(new ArrayConverter(double[].class, new DoubleConverter()),\n            double[].class);\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new ArrayConverter(float[].class, new FloatConverter()),\n            float[].class);\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new ArrayConverter(int[].class, new IntegerConverter()),\n            int[].class);\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new ArrayConverter(long[].class, new LongConverter()),\n            long[].class);\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ArrayConverter(short[].class, new ShortConverter()),\n            short[].class);\n        cub.register(new RelaxedStringArrayConverter(), String[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:33 PM",
      "commitNameOld": "f4a92dad02a3a36b5e2e988bba04debb1e2c9db9",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,58 @@\n     private static BeanUtilsBean createBeanUtilsBean()\n     {\n-        ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n+        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n \n         // TODO: is there a smarter way to tell beanutils not to use defaults?\n \n         final boolean[] booleanArray \u003d new boolean[0];\n         final byte[] byteArray \u003d new byte[0];\n         final char[] charArray \u003d new char[0];\n         final double[] doubleArray \u003d new double[0];\n         final float[] floatArray \u003d new float[0];\n         final int[] intArray \u003d new int[0];\n         final long[] longArray \u003d new long[0];\n         final short[] shortArray \u003d new short[0];\n \n \n         cub.register(new BooleanConverter(), Boolean.TYPE);\n         cub.register(new BooleanConverter(), Boolean.class);\n         cub.register(\n             new BooleanArrayConverter(), booleanArray.getClass());\n         cub.register(new ByteConverter(), Byte.TYPE);\n         cub.register(new ByteConverter(), Byte.class);\n         cub.register(\n             new ByteArrayConverter(byteArray), byteArray.getClass());\n         cub.register(new CharacterConverter(), Character.TYPE);\n         cub.register(new CharacterConverter(), Character.class);\n         cub.register(\n             new CharacterArrayConverter(), charArray.getClass());\n         cub.register(new DoubleConverter(), Double.TYPE);\n         cub.register(new DoubleConverter(), Double.class);\n         cub.register(\n             new DoubleArrayConverter(doubleArray), doubleArray.getClass());\n         cub.register(new FloatConverter(), Float.TYPE);\n         cub.register(new FloatConverter(), Float.class);\n         cub.register(new FloatArrayConverter(), floatArray.getClass());\n         cub.register(new IntegerConverter(), Integer.TYPE);\n         cub.register(new IntegerConverter(), Integer.class);\n         cub.register(new IntegerArrayConverter(), intArray.getClass());\n         cub.register(new LongConverter(), Long.TYPE);\n         cub.register(new LongConverter(), Long.class);\n         cub.register(new LongArrayConverter(), longArray.getClass());\n         cub.register(new ShortConverter(), Short.TYPE);\n         cub.register(new ShortConverter(), Short.class);\n         cub.register(new ShortArrayConverter(), shortArray.getClass());\n         // TODO: investigate:\n         // StringArrayConverter doesn\u0027t properly convert an array of tokens with\n         // elements containing an underscore, \"_\".\n         // Hacked a replacement class :(\n         //        cub.register(new StringArrayConverter(),\n         //                        String[].class);\n         cub.register(new StrArrayConverter(), String[].class);\n         cub.register(new IntegerArrayConverter(), Integer[].class);\n \n         // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n         // do not use defaults in the default configuration of ConvertUtilsBean\n \n         return new BeanUtilsBean(cub, new PropertyUtilsBean());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean()\n    {\n        final ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        // TODO: is there a smarter way to tell beanutils not to use defaults?\n\n        final boolean[] booleanArray \u003d new boolean[0];\n        final byte[] byteArray \u003d new byte[0];\n        final char[] charArray \u003d new char[0];\n        final double[] doubleArray \u003d new double[0];\n        final float[] floatArray \u003d new float[0];\n        final int[] intArray \u003d new int[0];\n        final long[] longArray \u003d new long[0];\n        final short[] shortArray \u003d new short[0];\n\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(\n            new BooleanArrayConverter(), booleanArray.getClass());\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(\n            new ByteArrayConverter(byteArray), byteArray.getClass());\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(\n            new CharacterArrayConverter(), charArray.getClass());\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(\n            new DoubleArrayConverter(doubleArray), doubleArray.getClass());\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new FloatArrayConverter(), floatArray.getClass());\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new IntegerArrayConverter(), intArray.getClass());\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new LongArrayConverter(), longArray.getClass());\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ShortArrayConverter(), shortArray.getClass());\n        // TODO: investigate:\n        // StringArrayConverter doesn\u0027t properly convert an array of tokens with\n        // elements containing an underscore, \"_\".\n        // Hacked a replacement class :(\n        //        cub.register(new StringArrayConverter(),\n        //                        String[].class);\n        cub.register(new StrArrayConverter(), String[].class);\n        cub.register(new IntegerArrayConverter(), Integer[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java",
      "extendedDetails": {}
    },
    "2c02a737d97980eb4c984056c33265b8a917a717": {
      "type": "Yintroduced",
      "commitMessage": "Updated to V 1.7 of commons-beanutils (Apache license 2.0).\n\nThis allows us to change the type converters locally in AutomaticBean,\nnot globally per classloader. This change is beneficial mainly\nin some embedded scenarios like IDE plugins.\n",
      "commitDate": "08/10/04 10:43 PM",
      "commitName": "2c02a737d97980eb4c984056c33265b8a917a717",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,58 @@\n+    private static BeanUtilsBean createBeanUtilsBean()\n+    {\n+        ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n+\n+        // TODO: is there a smarter way to tell beanutils not to use defaults?\n+\n+        final boolean[] booleanArray \u003d new boolean[0];\n+        final byte[] byteArray \u003d new byte[0];\n+        final char[] charArray \u003d new char[0];\n+        final double[] doubleArray \u003d new double[0];\n+        final float[] floatArray \u003d new float[0];\n+        final int[] intArray \u003d new int[0];\n+        final long[] longArray \u003d new long[0];\n+        final short[] shortArray \u003d new short[0];\n+\n+\n+        cub.register(new BooleanConverter(), Boolean.TYPE);\n+        cub.register(new BooleanConverter(), Boolean.class);\n+        cub.register(\n+            new BooleanArrayConverter(), booleanArray.getClass());\n+        cub.register(new ByteConverter(), Byte.TYPE);\n+        cub.register(new ByteConverter(), Byte.class);\n+        cub.register(\n+            new ByteArrayConverter(byteArray), byteArray.getClass());\n+        cub.register(new CharacterConverter(), Character.TYPE);\n+        cub.register(new CharacterConverter(), Character.class);\n+        cub.register(\n+            new CharacterArrayConverter(), charArray.getClass());\n+        cub.register(new DoubleConverter(), Double.TYPE);\n+        cub.register(new DoubleConverter(), Double.class);\n+        cub.register(\n+            new DoubleArrayConverter(doubleArray), doubleArray.getClass());\n+        cub.register(new FloatConverter(), Float.TYPE);\n+        cub.register(new FloatConverter(), Float.class);\n+        cub.register(new FloatArrayConverter(), floatArray.getClass());\n+        cub.register(new IntegerConverter(), Integer.TYPE);\n+        cub.register(new IntegerConverter(), Integer.class);\n+        cub.register(new IntegerArrayConverter(), intArray.getClass());\n+        cub.register(new LongConverter(), Long.TYPE);\n+        cub.register(new LongConverter(), Long.class);\n+        cub.register(new LongArrayConverter(), longArray.getClass());\n+        cub.register(new ShortConverter(), Short.TYPE);\n+        cub.register(new ShortConverter(), Short.class);\n+        cub.register(new ShortArrayConverter(), shortArray.getClass());\n+        // TODO: investigate:\n+        // StringArrayConverter doesn\u0027t properly convert an array of tokens with\n+        // elements containing an underscore, \"_\".\n+        // Hacked a replacement class :(\n+        //        cub.register(new StringArrayConverter(),\n+        //                        String[].class);\n+        cub.register(new StrArrayConverter(), String[].class);\n+        cub.register(new IntegerArrayConverter(), Integer[].class);\n+\n+        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n+        // do not use defaults in the default configuration of ConvertUtilsBean\n+\n+        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static BeanUtilsBean createBeanUtilsBean()\n    {\n        ConvertUtilsBean cub \u003d new ConvertUtilsBean();\n\n        // TODO: is there a smarter way to tell beanutils not to use defaults?\n\n        final boolean[] booleanArray \u003d new boolean[0];\n        final byte[] byteArray \u003d new byte[0];\n        final char[] charArray \u003d new char[0];\n        final double[] doubleArray \u003d new double[0];\n        final float[] floatArray \u003d new float[0];\n        final int[] intArray \u003d new int[0];\n        final long[] longArray \u003d new long[0];\n        final short[] shortArray \u003d new short[0];\n\n\n        cub.register(new BooleanConverter(), Boolean.TYPE);\n        cub.register(new BooleanConverter(), Boolean.class);\n        cub.register(\n            new BooleanArrayConverter(), booleanArray.getClass());\n        cub.register(new ByteConverter(), Byte.TYPE);\n        cub.register(new ByteConverter(), Byte.class);\n        cub.register(\n            new ByteArrayConverter(byteArray), byteArray.getClass());\n        cub.register(new CharacterConverter(), Character.TYPE);\n        cub.register(new CharacterConverter(), Character.class);\n        cub.register(\n            new CharacterArrayConverter(), charArray.getClass());\n        cub.register(new DoubleConverter(), Double.TYPE);\n        cub.register(new DoubleConverter(), Double.class);\n        cub.register(\n            new DoubleArrayConverter(doubleArray), doubleArray.getClass());\n        cub.register(new FloatConverter(), Float.TYPE);\n        cub.register(new FloatConverter(), Float.class);\n        cub.register(new FloatArrayConverter(), floatArray.getClass());\n        cub.register(new IntegerConverter(), Integer.TYPE);\n        cub.register(new IntegerConverter(), Integer.class);\n        cub.register(new IntegerArrayConverter(), intArray.getClass());\n        cub.register(new LongConverter(), Long.TYPE);\n        cub.register(new LongConverter(), Long.class);\n        cub.register(new LongArrayConverter(), longArray.getClass());\n        cub.register(new ShortConverter(), Short.TYPE);\n        cub.register(new ShortConverter(), Short.class);\n        cub.register(new ShortArrayConverter(), shortArray.getClass());\n        // TODO: investigate:\n        // StringArrayConverter doesn\u0027t properly convert an array of tokens with\n        // elements containing an underscore, \"_\".\n        // Hacked a replacement class :(\n        //        cub.register(new StringArrayConverter(),\n        //                        String[].class);\n        cub.register(new StrArrayConverter(), String[].class);\n        cub.register(new IntegerArrayConverter(), Integer[].class);\n\n        // BigDecimal, BigInteger, Class, Date, String, Time, TimeStamp\n        // do not use defaults in the default configuration of ConvertUtilsBean\n\n        return new BeanUtilsBean(cub, new PropertyUtilsBean());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/api/AutomaticBean.java"
    }
  }
}