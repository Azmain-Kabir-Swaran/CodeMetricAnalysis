{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalInstantiationCheck.java",
  "functionName": "postProcessLiteralNew",
  "functionId": "postProcessLiteralNew___newTokenAst-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
  "functionStartLine": 219,
  "functionEndLine": 231,
  "numCommitsSeen": 140,
  "timeTaken": 2992,
  "changeHistory": [
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
    "629364ca98f02d530c2bec38a7d724f0def9c9bd",
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "cc7aeaec906dc3c864477e3050510009b2a946ee",
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "27149f3504a2f350b74f456a9bffbae76a460060",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "5d7063c660b241bce251f1a8c89394619f2791fb",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8"
  ],
  "changeHistoryShort": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": "Ybodychange",
    "629364ca98f02d530c2bec38a7d724f0def9c9bd": "Ybodychange",
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "cc7aeaec906dc3c864477e3050510009b2a946ee": "Yrename",
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": "Ymultichange(Yparameterchange,Ybodychange)",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "27149f3504a2f350b74f456a9bffbae76a460060": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "5d7063c660b241bce251f1a8c89394619f2791fb": "Ybodychange",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7def79ae0ee0fcbd1cc2b719a124bcf095106948": {
      "type": "Ybodychange",
      "commitMessage": "minor: remove unnecessary antlr classes from main code",
      "commitDate": "30/03/19 5:55 AM",
      "commitName": "7def79ae0ee0fcbd1cc2b719a124bcf095106948",
      "commitAuthor": "rnveach",
      "commitDateOld": "22/03/19 5:21 AM",
      "commitNameOld": "c0bcfc82700af78b6c962e1f326e33c91e79a59a",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 8.02,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private void postProcessLiteralNew(DetailAST newTokenAst) {\n         final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n-        final AST nameSibling \u003d typeNameAst.getNextSibling();\n+        final DetailAST nameSibling \u003d typeNameAst.getNextSibling();\n         if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast !\u003d \"new Boolean[]\"\n             final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n             final String typeName \u003d typeIdent.getText();\n             final String fqClassName \u003d getIllegalInstantiation(typeName);\n             if (fqClassName !\u003d null) {\n                 log(newTokenAst, MSG_KEY, fqClassName);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postProcessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final DetailAST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast !\u003d \"new Boolean[]\"\n            final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n            final String typeName \u003d typeIdent.getText();\n            final String fqClassName \u003d getIllegalInstantiation(typeName);\n            if (fqClassName !\u003d null) {\n                log(newTokenAst, MSG_KEY, fqClassName);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "629364ca98f02d530c2bec38a7d724f0def9c9bd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "17/05/18 4:44 PM",
      "commitName": "629364ca98f02d530c2bec38a7d724f0def9c9bd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 29.15,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,13 @@\n     private void postProcessLiteralNew(DetailAST newTokenAst) {\n         final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n         final AST nameSibling \u003d typeNameAst.getNextSibling();\n         if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast !\u003d \"new Boolean[]\"\n             final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n             final String typeName \u003d typeIdent.getText();\n             final String fqClassName \u003d getIllegalInstantiation(typeName);\n             if (fqClassName !\u003d null) {\n-                final int lineNo \u003d newTokenAst.getLineNo();\n-                final int colNo \u003d newTokenAst.getColumnNo();\n-                log(lineNo, colNo, MSG_KEY, fqClassName);\n+                log(newTokenAst, MSG_KEY, fqClassName);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postProcessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast !\u003d \"new Boolean[]\"\n            final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n            final String typeName \u003d typeIdent.getText();\n            final String fqClassName \u003d getIllegalInstantiation(typeName);\n            if (fqClassName !\u003d null) {\n                log(newTokenAst, MSG_KEY, fqClassName);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4328: moved variables inside if blocks to reduce execution time",
      "commitDate": "06/05/17 6:15 PM",
      "commitName": "82bc23f45d7d57dfa26d1a1d4ec0f7dfcd88abb2",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/04/17 12:27 PM",
      "commitNameOld": "9765cda41ba8767f1f187dc1b097793a1dccedcd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 13.24,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private void postProcessLiteralNew(DetailAST newTokenAst) {\n         final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n         final AST nameSibling \u003d typeNameAst.getNextSibling();\n         if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast !\u003d \"new Boolean[]\"\n             final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n             final String typeName \u003d typeIdent.getText();\n-            final int lineNo \u003d newTokenAst.getLineNo();\n-            final int colNo \u003d newTokenAst.getColumnNo();\n             final String fqClassName \u003d getIllegalInstantiation(typeName);\n             if (fqClassName !\u003d null) {\n+                final int lineNo \u003d newTokenAst.getLineNo();\n+                final int colNo \u003d newTokenAst.getColumnNo();\n                 log(lineNo, colNo, MSG_KEY, fqClassName);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postProcessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast !\u003d \"new Boolean[]\"\n            final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n            final String typeName \u003d typeIdent.getText();\n            final String fqClassName \u003d getIllegalInstantiation(typeName);\n            if (fqClassName !\u003d null) {\n                final int lineNo \u003d newTokenAst.getLineNo();\n                final int colNo \u003d newTokenAst.getColumnNo();\n                log(lineNo, colNo, MSG_KEY, fqClassName);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "27/05/16 6:27 AM",
      "commitNameOld": "48d32f40d2253fc94792a8841ce604ba1b91255c",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private void postProcessLiteralNew(DetailAST newTokenAst) {\n         final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n         final AST nameSibling \u003d typeNameAst.getNextSibling();\n-        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n-            // ast \u003d\u003d \"new Boolean[]\"\n-            return;\n-        }\n-\n-        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n-        final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d newTokenAst.getLineNo();\n-        final int colNo \u003d newTokenAst.getColumnNo();\n-        final String fqClassName \u003d getIllegalInstantiation(typeName);\n-        if (fqClassName !\u003d null) {\n-            log(lineNo, colNo, MSG_KEY, fqClassName);\n+        if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n+            // ast !\u003d \"new Boolean[]\"\n+            final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n+            final String typeName \u003d typeIdent.getText();\n+            final int lineNo \u003d newTokenAst.getLineNo();\n+            final int colNo \u003d newTokenAst.getColumnNo();\n+            final String fqClassName \u003d getIllegalInstantiation(typeName);\n+            if (fqClassName !\u003d null) {\n+                log(lineNo, colNo, MSG_KEY, fqClassName);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postProcessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() !\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast !\u003d \"new Boolean[]\"\n            final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n            final String typeName \u003d typeIdent.getText();\n            final int lineNo \u003d newTokenAst.getLineNo();\n            final int colNo \u003d newTokenAst.getColumnNo();\n            final String fqClassName \u003d getIllegalInstantiation(typeName);\n            if (fqClassName !\u003d null) {\n                log(lineNo, colNo, MSG_KEY, fqClassName);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "cc7aeaec906dc3c864477e3050510009b2a946ee": {
      "type": "Yrename",
      "commitMessage": "Fix some typos in coding package. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "27/08/15 10:29 PM",
      "commitName": "cc7aeaec906dc3c864477e3050510009b2a946ee",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 10:26 PM",
      "commitNameOld": "7eb80732e99d1018810eb8cba29d2e3bec9b7ae0",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-    private void postprocessLiteralNew(DetailAST newTokenAst) {\n+    private void postProcessLiteralNew(DetailAST newTokenAst) {\n         final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n         final AST nameSibling \u003d typeNameAst.getNextSibling();\n         if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d newTokenAst.getLineNo();\n         final int colNo \u003d newTokenAst.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, MSG_KEY, fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postProcessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d newTokenAst.getLineNo();\n        final int colNo \u003d newTokenAst.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, MSG_KEY, fqClassName);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldValue": "postprocessLiteralNew",
        "newValue": "postProcessLiteralNew"
      }
    },
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
      "commitDate": "08/08/15 7:32 PM",
      "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
      "commitAuthor": "Baratali Izmailov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
          "commitDate": "08/08/15 7:32 PM",
          "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "07/08/15 10:17 PM",
          "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-    private void postprocessLiteralNew(DetailAST ast) {\n-        final DetailAST typeNameAST \u003d ast.getFirstChild();\n-        final AST nameSibling \u003d typeNameAST.getNextSibling();\n-        if (nameSibling !\u003d null\n-                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n+    private void postprocessLiteralNew(DetailAST newTokenAst) {\n+        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n+        final AST nameSibling \u003d typeNameAst.getNextSibling();\n+        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n-        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n+        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n         final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d ast.getLineNo();\n-        final int colNo \u003d ast.getColumnNo();\n+        final int lineNo \u003d newTokenAst.getLineNo();\n+        final int colNo \u003d newTokenAst.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, MSG_KEY, fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void postprocessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d newTokenAst.getLineNo();\n        final int colNo \u003d newTokenAst.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, MSG_KEY, fqClassName);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {
            "oldValue": "[ast-DetailAST]",
            "newValue": "[newTokenAst-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
          "commitDate": "08/08/15 7:32 PM",
          "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
          "commitAuthor": "Baratali Izmailov",
          "commitDateOld": "07/08/15 10:17 PM",
          "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 0.89,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-    private void postprocessLiteralNew(DetailAST ast) {\n-        final DetailAST typeNameAST \u003d ast.getFirstChild();\n-        final AST nameSibling \u003d typeNameAST.getNextSibling();\n-        if (nameSibling !\u003d null\n-                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n+    private void postprocessLiteralNew(DetailAST newTokenAst) {\n+        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n+        final AST nameSibling \u003d typeNameAst.getNextSibling();\n+        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n             // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n-        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n+        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n         final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d ast.getLineNo();\n-        final int colNo \u003d ast.getColumnNo();\n+        final int lineNo \u003d newTokenAst.getLineNo();\n+        final int colNo \u003d newTokenAst.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, MSG_KEY, fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void postprocessLiteralNew(DetailAST newTokenAst) {\n        final DetailAST typeNameAst \u003d newTokenAst.getFirstChild();\n        final AST nameSibling \u003d typeNameAst.getNextSibling();\n        if (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR) {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAst);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d newTokenAst.getLineNo();\n        final int colNo \u003d newTokenAst.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, MSG_KEY, fqClassName);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.36,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void postprocessLiteralNew(DetailAST ast)\n     {\n         final DetailAST typeNameAST \u003d ast.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n-        if ((nameSibling !\u003d null)\n-                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n+        if (nameSibling !\u003d null\n+                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n         {\n             // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d ast.getLineNo();\n         final int colNo \u003d ast.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, MSG_KEY, fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST ast)\n    {\n        final DetailAST typeNameAST \u003d ast.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d ast.getLineNo();\n        final int colNo \u003d ast.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, MSG_KEY, fqClassName);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "27149f3504a2f350b74f456a9bffbae76a460060": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, coding package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "27149f3504a2f350b74f456a9bffbae76a460060",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void postprocessLiteralNew(DetailAST ast)\n     {\n         final DetailAST typeNameAST \u003d ast.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if ((nameSibling !\u003d null)\n                 \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n         {\n             // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d ast.getLineNo();\n         final int colNo \u003d ast.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n-            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n+            log(lineNo, colNo, MSG_KEY, fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST ast)\n    {\n        final DetailAST typeNameAST \u003d ast.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d ast.getLineNo();\n        final int colNo \u003d ast.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, MSG_KEY, fqClassName);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void postprocessLiteralNew(DetailAST aAST)\n+    private void postprocessLiteralNew(DetailAST ast)\n     {\n-        final DetailAST typeNameAST \u003d aAST.getFirstChild();\n+        final DetailAST typeNameAST \u003d ast.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if ((nameSibling !\u003d null)\n                 \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n         {\n-            // aAST \u003d\u003d \"new Boolean[]\"\n+            // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d aAST.getLineNo();\n-        final int colNo \u003d aAST.getColumnNo();\n+        final int lineNo \u003d ast.getLineNo();\n+        final int colNo \u003d ast.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void postprocessLiteralNew(DetailAST ast)\n    {\n        final DetailAST typeNameAST \u003d ast.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d ast.getLineNo();\n        final int colNo \u003d ast.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-    private void postprocessLiteralNew(DetailAST aAST)\n+    private void postprocessLiteralNew(DetailAST ast)\n     {\n-        final DetailAST typeNameAST \u003d aAST.getFirstChild();\n+        final DetailAST typeNameAST \u003d ast.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if ((nameSibling !\u003d null)\n                 \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n         {\n-            // aAST \u003d\u003d \"new Boolean[]\"\n+            // ast \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d aAST.getLineNo();\n-        final int colNo \u003d aAST.getColumnNo();\n+        final int lineNo \u003d ast.getLineNo();\n+        final int colNo \u003d ast.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void postprocessLiteralNew(DetailAST ast)\n    {\n        final DetailAST typeNameAST \u003d ast.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // ast \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d ast.getLineNo();\n        final int colNo \u003d ast.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void postprocessLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d aAST.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "22/04/08 5:28 AM",
      "commitNameOld": "7552a0b72e07c9a0070e84789b5abe6d293de6e0",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 148.96,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void postprocessLiteralNew(DetailAST aAST)\n     {\n-        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n+        final DetailAST typeNameAST \u003d aAST.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if ((nameSibling !\u003d null)\n                 \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n         {\n             // aAST \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d aAST.getLineNo();\n         final int colNo \u003d aAST.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d aAST.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/10/05 11:23 AM",
      "commitNameOld": "1aee9d55cc5bd8cca011e17369f6e370efcc85bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 248.34,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void postprocessLiteralNew(DetailAST aAST)\n     {\n         final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n-        if (nameSibling !\u003d null\n-                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n+        if ((nameSibling !\u003d null)\n+                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n         {\n             // aAST \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d aAST.getLineNo();\n         final int colNo \u003d aAST.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if ((nameSibling !\u003d null)\n                \u0026\u0026 (nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR))\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "5d7063c660b241bce251f1a8c89394619f2791fb": {
      "type": "Ybodychange",
      "commitMessage": "Tighten up code\n",
      "commitDate": "26/08/04 6:34 AM",
      "commitName": "5d7063c660b241bce251f1a8c89394619f2791fb",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 224.68,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private void postprocessLiteralNew(DetailAST aAST)\n     {\n         final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n         final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if (nameSibling !\u003d null\n                 \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n         {\n             // aAST \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n-        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n+        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d aAST.getLineNo();\n         final int colNo \u003d aAST.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        final FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": {
      "type": "Yintroduced",
      "commitMessage": "fixed bug #772832, Confusion about class named \u0027Boolean\u0027\n",
      "commitDate": "03/08/03 6:22 AM",
      "commitName": "bb1db4938ccae0f7149461ea372398fb8a53f2a8",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,20 @@\n+    private void postprocessLiteralNew(DetailAST aAST)\n+    {\n+        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n+        final AST nameSibling \u003d typeNameAST.getNextSibling();\n+        if (nameSibling !\u003d null\n+                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n+        {\n+            // aAST \u003d\u003d \"new Boolean[]\"\n+            return;\n+        }\n+\n+        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n+        final String typeName \u003d typeIdent.getText();\n+        final int lineNo \u003d aAST.getLineNo();\n+        final int colNo \u003d aAST.getColumnNo();\n+        final String fqClassName \u003d getIllegalInstantiation(typeName);\n+        if (fqClassName !\u003d null) {\n+            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void postprocessLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
    }
  }
}