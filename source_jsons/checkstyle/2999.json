{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AtclauseOrderCheck.java",
  "functionName": "checkOrderInTagSection",
  "functionId": "checkOrderInTagSection___javadoc-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
  "functionStartLine": 177,
  "functionEndLine": 195,
  "numCommitsSeen": 53,
  "timeTaken": 1453,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f",
    "c4928f486c67afa62e7e8fbd5d8f731be7186985",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "fe628e5bbd310d6876842126770719ade93dc7b0"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f": "Ybodychange",
    "c4928f486c67afa62e7e8fbd5d8f731be7186985": "Ybodychange",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": "Ybodychange",
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "fe628e5bbd310d6876842126770719ade93dc7b0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private void checkOrderInTagSection(DetailNode javadoc) {\n         int maxIndexOfPreviousTag \u003d 0;\n \n         for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n-                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n+                final String tagText \u003d JavadocUtil.getFirstChild(node).getText();\n                 final int indexOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n                 if (indexOfCurrentTag !\u003d -1) {\n                     if (indexOfCurrentTag \u003c maxIndexOfPreviousTag) {\n                         log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                     }\n                     else {\n                         maxIndexOfPreviousTag \u003d indexOfCurrentTag;\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc) {\n        int maxIndexOfPreviousTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtil.getFirstChild(node).getText();\n                final int indexOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (indexOfCurrentTag !\u003d -1) {\n                    if (indexOfCurrentTag \u003c maxIndexOfPreviousTag) {\n                        log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                    }\n                    else {\n                        maxIndexOfPreviousTag \u003d indexOfCurrentTag;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
      "extendedDetails": {}
    },
    "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2095: Fix false negative in AtclauseOrder check",
      "commitDate": "17/09/15 1:04 PM",
      "commitName": "3fe3fc67cb39111116eab03f9c91c5dfb1cdbd4f",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 21.32,
      "commitsBetweenForRepo": 304,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n     private void checkOrderInTagSection(DetailNode javadoc) {\n-        int indexOrderOfPreviousTag \u003d 0;\n+        int maxIndexOfPreviousTag \u003d 0;\n \n         for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n-                final int indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n+                final int indexOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n-                if (tagOrder.contains(tagText)\n-                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag) {\n-                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n+                if (indexOfCurrentTag !\u003d -1) {\n+                    if (indexOfCurrentTag \u003c maxIndexOfPreviousTag) {\n+                        log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n+                    }\n+                    else {\n+                        maxIndexOfPreviousTag \u003d indexOfCurrentTag;\n+                    }\n                 }\n-                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc) {\n        int maxIndexOfPreviousTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                final int indexOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (indexOfCurrentTag !\u003d -1) {\n                    if (indexOfCurrentTag \u003c maxIndexOfPreviousTag) {\n                        log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                    }\n                    else {\n                        maxIndexOfPreviousTag \u003d indexOfCurrentTag;\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
      "extendedDetails": {}
    },
    "c4928f486c67afa62e7e8fbd5d8f731be7186985": {
      "type": "Ybodychange",
      "commitMessage": "Decrease scope of variables. #1555\n\nFixes `TooBroadScope` inspection violations.\n\nDescription:\n\u003eReports any variable declarations of which the scope can be narrowed. Especially useful for \"Pascal style\" declarations at the start of a method, but variables with too broad a scope are also often left over after refactorings.\n",
      "commitDate": "11/08/15 9:54 PM",
      "commitName": "c4928f486c67afa62e7e8fbd5d8f731be7186985",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "09/08/15 7:41 AM",
      "commitNameOld": "6d5c0da42fa54ceabbc1959e9db354ed64a2ff86",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 2.59,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n     private void checkOrderInTagSection(DetailNode javadoc) {\n         int indexOrderOfPreviousTag \u003d 0;\n-        int indexOrderOfCurrentTag;\n \n         for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n-                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n+                final int indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n                 if (tagOrder.contains(tagText)\n                         \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag) {\n                     log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                 }\n                 indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc) {\n        int indexOrderOfPreviousTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                final int indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (tagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag) {\n                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
      "extendedDetails": {}
    },
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": {
      "type": "Ybodychange",
      "commitMessage": "Remove unused assignments. #1555\n\nFixes UnusedAssignment inspection violations.\n\nDescription:\n\u003eThis inspection points out the cases where a variable value is never used after its assignment, i.e.:\n- the variable never gets read after assignment OR\n- the value is always overwritten with another assignment before the next variable read OR\n - the variable initializer is redundant (for one of the above two reasons) OR\n - the variable is never used.\n",
      "commitDate": "07/08/15 9:12 PM",
      "commitName": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "e6538f822f3fb690d01b3f27aabb6785d9732a29",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.1,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private void checkOrderInTagSection(DetailNode javadoc) {\n         int indexOrderOfPreviousTag \u003d 0;\n-        int indexOrderOfCurrentTag \u003d 0;\n+        int indexOrderOfCurrentTag;\n \n         for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                 indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n                 if (tagOrder.contains(tagText)\n                         \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag) {\n                     log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                 }\n                 indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc) {\n        int indexOrderOfPreviousTag \u003d 0;\n        int indexOrderOfCurrentTag;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (tagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag) {\n                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
      "extendedDetails": {}
    },
    "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, javadoc package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "cee4f351944dc6bad1c0b91eb8aaa118eed59fcc",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     private void checkOrderInTagSection(DetailNode javadoc)\n     {\n         int indexOrderOfPreviousTag \u003d 0;\n         int indexOrderOfCurrentTag \u003d 0;\n \n         for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                 indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n                 if (tagOrder.contains(tagText)\n                         \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                 {\n-                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());\n+                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                 }\n                 indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc)\n    {\n        int indexOrderOfPreviousTag \u003d 0;\n        int indexOrderOfCurrentTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (tagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                {\n                    log(node.getLineNumber(), MSG_KEY, tagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 79,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    private void checkOrderInTagSection(DetailNode aJavadoc)\n+    private void checkOrderInTagSection(DetailNode javadoc)\n     {\n         int indexOrderOfPreviousTag \u003d 0;\n         int indexOrderOfCurrentTag \u003d 0;\n \n-        for (DetailNode node : aJavadoc.getChildren()) {\n+        for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n-                indexOrderOfCurrentTag \u003d mTagOrder.indexOf(tagText);\n+                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n-                if (mTagOrder.contains(tagText)\n+                if (tagOrder.contains(tagText)\n                         \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                 {\n-                    log(node.getLineNumber(), \"at.clause.order\", mTagOrder.toString());\n+                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());\n                 }\n                 indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc)\n    {\n        int indexOrderOfPreviousTag \u003d 0;\n        int indexOrderOfCurrentTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (tagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                {\n                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aJavadoc-DetailNode]",
            "newValue": "[javadoc-DetailNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 79,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    private void checkOrderInTagSection(DetailNode aJavadoc)\n+    private void checkOrderInTagSection(DetailNode javadoc)\n     {\n         int indexOrderOfPreviousTag \u003d 0;\n         int indexOrderOfCurrentTag \u003d 0;\n \n-        for (DetailNode node : aJavadoc.getChildren()) {\n+        for (DetailNode node : javadoc.getChildren()) {\n             if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                 final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n-                indexOrderOfCurrentTag \u003d mTagOrder.indexOf(tagText);\n+                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n \n-                if (mTagOrder.contains(tagText)\n+                if (tagOrder.contains(tagText)\n                         \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                 {\n-                    log(node.getLineNumber(), \"at.clause.order\", mTagOrder.toString());\n+                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());\n                 }\n                 indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkOrderInTagSection(DetailNode javadoc)\n    {\n        int indexOrderOfPreviousTag \u003d 0;\n        int indexOrderOfCurrentTag \u003d 0;\n\n        for (DetailNode node : javadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                indexOrderOfCurrentTag \u003d tagOrder.indexOf(tagText);\n\n                if (tagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                {\n                    log(node.getLineNumber(), \"at.clause.order\", tagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "fe628e5bbd310d6876842126770719ade93dc7b0": {
      "type": "Yintroduced",
      "commitMessage": "AtclauseOrderCheck #306\n",
      "commitDate": "20/10/14 11:49 PM",
      "commitName": "fe628e5bbd310d6876842126770719ade93dc7b0",
      "commitAuthor": "maxvetrenko",
      "diff": "@@ -0,0 +1,19 @@\n+    private void checkOrderInTagSection(DetailNode aJavadoc)\n+    {\n+        int indexOrderOfPreviousTag \u003d 0;\n+        int indexOrderOfCurrentTag \u003d 0;\n+\n+        for (DetailNode node : aJavadoc.getChildren()) {\n+            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n+                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n+                indexOrderOfCurrentTag \u003d mTagOrder.indexOf(tagText);\n+\n+                if (mTagOrder.contains(tagText)\n+                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n+                {\n+                    log(node.getLineNumber(), \"at.clause.order\", mTagOrder.toString());\n+                }\n+                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkOrderInTagSection(DetailNode aJavadoc)\n    {\n        int indexOrderOfPreviousTag \u003d 0;\n        int indexOrderOfCurrentTag \u003d 0;\n\n        for (DetailNode node : aJavadoc.getChildren()) {\n            if (node.getType() \u003d\u003d JavadocTokenTypes.JAVADOC_TAG) {\n                final String tagText \u003d JavadocUtils.getFirstChild(node).getText();\n                indexOrderOfCurrentTag \u003d mTagOrder.indexOf(tagText);\n\n                if (mTagOrder.contains(tagText)\n                        \u0026\u0026 indexOrderOfCurrentTag \u003c indexOrderOfPreviousTag)\n                {\n                    log(node.getLineNumber(), \"at.clause.order\", mTagOrder.toString());\n                }\n                indexOrderOfPreviousTag \u003d indexOrderOfCurrentTag;\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/AtclauseOrderCheck.java"
    }
  }
}