{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CommentsIndentationCheck.java",
  "functionName": "visitComment",
  "functionId": "visitComment___comment-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
  "functionStartLine": 302,
  "functionEndLine": 324,
  "numCommitsSeen": 78,
  "timeTaken": 2777,
  "changeHistory": [
    "6cc0c90f092b816848ebaab1fba5595a776b16fa",
    "073c370de2e65fc346b51ef09763ecb30b5cd14f",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
    "618e6934e2f841aa07b94d90452418adb93cb544",
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
    "3defd234041f34854f50f1a77ae94d18fb730036",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad",
    "2057a77c3a524b86dff382ac8abdca71dd03764a",
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6"
  ],
  "changeHistoryShort": {
    "6cc0c90f092b816848ebaab1fba5595a776b16fa": "Ybodychange",
    "073c370de2e65fc346b51ef09763ecb30b5cd14f": "Ybodychange",
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": "Ybodychange",
    "618e6934e2f841aa07b94d90452418adb93cb544": "Ybodychange",
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "3defd234041f34854f50f1a77ae94d18fb730036": "Ybodychange",
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": "Ybodychange",
    "2057a77c3a524b86dff382ac8abdca71dd03764a": "Ybodychange",
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6cc0c90f092b816848ebaab1fba5595a776b16fa": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7727: Updated ITs for CommentsIndentation\n",
      "commitDate": "28/04/20 12:06 PM",
      "commitName": "6cc0c90f092b816848ebaab1fba5595a776b16fa",
      "commitAuthor": "Shrey Kumar Singh",
      "commitDateOld": "16/04/20 6:39 AM",
      "commitNameOld": "2e8c277c181487d81231170ff4b959edc008114e",
      "commitAuthorOld": "Joseph Mate",
      "daysBetweenCommits": 12.23,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void visitComment(DetailAST comment) {\n         if (!isTrailingComment(comment)) {\n             final DetailAST prevStmt \u003d getPreviousStatement(comment);\n             final DetailAST nextStmt \u003d getNextStmt(comment);\n \n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n             else if (isFallThroughComment(prevStmt, nextStmt)) {\n                 handleFallThroughComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n             else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                 handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n             else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n-                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n+                log(comment, getMessageKey(comment), nextStmt.getLineNo(),\n                     comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitComment(DetailAST comment) {\n        if (!isTrailingComment(comment)) {\n            final DetailAST prevStmt \u003d getPreviousStatement(comment);\n            final DetailAST nextStmt \u003d getNextStmt(comment);\n\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment, getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "073c370de2e65fc346b51ef09763ecb30b5cd14f": {
      "type": "Ybodychange",
      "commitMessage": "Pull #4343: moved more variables inside if blocks to reduce execution",
      "commitDate": "11/05/17 2:56 PM",
      "commitName": "073c370de2e65fc346b51ef09763ecb30b5cd14f",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/04/17 5:37 AM",
      "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 36.39,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void visitComment(DetailAST comment) {\n-        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n-        final DetailAST nextStmt \u003d getNextStmt(comment);\n-\n         if (!isTrailingComment(comment)) {\n+            final DetailAST prevStmt \u003d getPreviousStatement(comment);\n+            final DetailAST nextStmt \u003d getNextStmt(comment);\n+\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n             else if (isFallThroughComment(prevStmt, nextStmt)) {\n                 handleFallThroughComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n             else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                 handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n             else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                 log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                     comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitComment(DetailAST comment) {\n        if (!isTrailingComment(comment)) {\n            final DetailAST prevStmt \u003d getPreviousStatement(comment);\n            final DetailAST nextStmt \u003d getNextStmt(comment);\n\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "3bd3a52280388520c64ec813dd1e4ffb3a0063a2": {
      "type": "Ybodychange",
      "commitMessage": "spelling: fix some typos in code/javadoc/comments\n",
      "commitDate": "05/04/17 5:37 AM",
      "commitName": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "20/03/17 6:44 AM",
      "commitNameOld": "acca138631cdc81d7c3a9d8ade288ae269002410",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 15.95,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void visitComment(DetailAST comment) {\n         final DetailAST prevStmt \u003d getPreviousStatement(comment);\n         final DetailAST nextStmt \u003d getNextStmt(comment);\n \n         if (!isTrailingComment(comment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n             else if (isFallThroughComment(prevStmt, nextStmt)) {\n-                handleFallThroughtComment(prevStmt, comment, nextStmt);\n+                handleFallThroughComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n             else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                 handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n             else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                 log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                     comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitComment(DetailAST comment) {\n        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n        final DetailAST nextStmt \u003d getNextStmt(comment);\n\n        if (!isTrailingComment(comment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "618e6934e2f841aa07b94d90452418adb93cb544": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3166: fix CommentsIndentation Check incorrect work with subsequent comments (#3275)\n\n",
      "commitDate": "16/06/16 6:32 AM",
      "commitName": "618e6934e2f841aa07b94d90452418adb93cb544",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "12/06/16 6:50 AM",
      "commitNameOld": "43839b3d7107417095b5b915064e7dcf39e3b2b1",
      "commitAuthorOld": "Vladislav Lisetskiy",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private void visitComment(DetailAST comment) {\n         final DetailAST prevStmt \u003d getPreviousStatement(comment);\n-        final DetailAST nextStmt \u003d comment.getNextSibling();\n+        final DetailAST nextStmt \u003d getNextStmt(comment);\n \n         if (!isTrailingComment(comment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n             else if (isFallThroughComment(prevStmt, nextStmt)) {\n                 handleFallThroughtComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                 handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n             else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                 handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n             else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                 log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                     comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitComment(DetailAST comment) {\n        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n        final DetailAST nextStmt \u003d getNextStmt(comment);\n\n        if (!isTrailingComment(comment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughtComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
      "commitDate": "30/05/16 6:08 AM",
      "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
      "commitAuthor": "Vladislav Lisetskiy",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,23 @@\n-    private void visitSingleLineComment(DetailAST singleLineComment) {\n-        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n-        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n+    private void visitComment(DetailAST comment) {\n+        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n+        final DetailAST nextStmt \u003d comment.getNextSibling();\n \n-        if (!isTrailingSingleLineComment(singleLineComment)) {\n+        if (!isTrailingComment(comment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n-                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isFallThroughComment(prevStmt, nextStmt)) {\n+                handleFallThroughtComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n+                handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n-            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n-                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n+                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (nextStmt !\u003d null\n-                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n-                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n-                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n+            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n+                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n+                    comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitComment(DetailAST comment) {\n        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n        final DetailAST nextStmt \u003d comment.getNextSibling();\n\n        if (!isTrailingComment(comment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughtComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "visitSingleLineComment",
            "newValue": "visitComment"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,23 @@\n-    private void visitSingleLineComment(DetailAST singleLineComment) {\n-        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n-        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n+    private void visitComment(DetailAST comment) {\n+        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n+        final DetailAST nextStmt \u003d comment.getNextSibling();\n \n-        if (!isTrailingSingleLineComment(singleLineComment)) {\n+        if (!isTrailingComment(comment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n-                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isFallThroughComment(prevStmt, nextStmt)) {\n+                handleFallThroughtComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n+                handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n-            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n-                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n+                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (nextStmt !\u003d null\n-                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n-                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n-                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n+            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n+                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n+                    comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitComment(DetailAST comment) {\n        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n        final DetailAST nextStmt \u003d comment.getNextSibling();\n\n        if (!isTrailingComment(comment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughtComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {
            "oldValue": "[singleLineComment-DetailAST]",
            "newValue": "[comment-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3126: Fix a lot of CommentsIndentationCheck false-positives and false-negatives\n",
          "commitDate": "30/05/16 6:08 AM",
          "commitName": "e5c8a2a88433c9439b2cd17a60de6913a45ae0b6",
          "commitAuthor": "Vladislav Lisetskiy",
          "commitDateOld": "24/04/16 6:24 AM",
          "commitNameOld": "3defd234041f34854f50f1a77ae94d18fb730036",
          "commitAuthorOld": "Vladislav Lisetskiy",
          "daysBetweenCommits": 35.99,
          "commitsBetweenForRepo": 88,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,23 @@\n-    private void visitSingleLineComment(DetailAST singleLineComment) {\n-        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n-        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n+    private void visitComment(DetailAST comment) {\n+        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n+        final DetailAST nextStmt \u003d comment.getNextSibling();\n \n-        if (!isTrailingSingleLineComment(singleLineComment)) {\n+        if (!isTrailingComment(comment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n-                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isFallThroughComment(prevStmt, nextStmt)) {\n+                handleFallThroughtComment(prevStmt, comment, nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n-                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n+                handleCommentInEmptyCodeBlock(comment, nextStmt);\n             }\n-            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n-                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n-                    nextStmt);\n+            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n+                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n             }\n-            else if (nextStmt !\u003d null\n-                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n-                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n-                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n+            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n+                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n+                    comment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void visitComment(DetailAST comment) {\n        final DetailAST prevStmt \u003d getPreviousStatement(comment);\n        final DetailAST nextStmt \u003d comment.getNextSibling();\n\n        if (!isTrailingComment(comment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCaseBlock(prevStmt, comment, nextStmt);\n            }\n            else if (isFallThroughComment(prevStmt, nextStmt)) {\n                handleFallThroughtComment(prevStmt, comment, nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleCommentInEmptyCodeBlock(comment, nextStmt);\n            }\n            else if (isCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleCommentAtTheEndOfTheCodeBlock(prevStmt, comment, nextStmt);\n            }\n            else if (nextStmt !\u003d null \u0026\u0026 !areSameLevelIndented(comment, nextStmt, nextStmt)) {\n                log(comment.getLineNo(), getMessageKey(comment), nextStmt.getLineNo(),\n                    comment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "3defd234041f34854f50f1a77ae94d18fb730036": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2998: Fix CommentsIndentation Check false-positive at the end of a block (#3123)",
      "commitDate": "24/04/16 6:24 AM",
      "commitName": "3defd234041f34854f50f1a77ae94d18fb730036",
      "commitAuthor": "Vladislav Lisetskiy",
      "commitDateOld": "17/03/16 6:39 AM",
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 37.99,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,27 @@\n     private void visitSingleLineComment(DetailAST singleLineComment) {\n         final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n         final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n \n         if (!isTrailingSingleLineComment(singleLineComment)) {\n             if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                 handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n                     nextStmt);\n             }\n             else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n                 handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n                     nextStmt);\n             }\n             else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                 handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n             }\n             else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n-                handleSIngleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n+                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n                     nextStmt);\n             }\n             else if (nextStmt !\u003d null\n                         \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n                 log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n                     singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitSingleLineComment(DetailAST singleLineComment) {\n        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n\n        if (!isTrailingSingleLineComment(singleLineComment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n            }\n            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleSingleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (nextStmt !\u003d null\n                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2078: Fix FP violations at the end of the block and in the middle of the method\n",
      "commitDate": "31/10/15 3:48 PM",
      "commitName": "0f9490c4ab86e6df2cfe90db1ffe04e906a5edad",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "23/10/15 3:55 PM",
      "commitNameOld": "24f73e69dc69add5fb33af0f54af7ad186b285eb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.0,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,27 @@\n     private void visitSingleLineComment(DetailAST singleLineComment) {\n-        final DetailAST nextStatement \u003d singleLineComment.getNextSibling();\n-        final DetailAST prevStatement \u003d getPrevStatementFromSwitchBlock(singleLineComment);\n+        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n+        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n \n-        if (nextStatement !\u003d null\n-            \u0026\u0026 nextStatement.getType() !\u003d TokenTypes.RCURLY\n-            \u0026\u0026 !isTrailingSingleLineComment(singleLineComment)\n-            \u0026\u0026 !areSameLevelIndented(singleLineComment, prevStatement, nextStatement)) {\n-\n-            log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStatement.getLineNo(),\n-                singleLineComment.getColumnNo(), nextStatement.getColumnNo());\n+        if (!isTrailingSingleLineComment(singleLineComment)) {\n+            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n+                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n+                    nextStmt);\n+            }\n+            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n+                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n+                    nextStmt);\n+            }\n+            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n+                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n+            }\n+            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n+                handleSIngleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n+                    nextStmt);\n+            }\n+            else if (nextStmt !\u003d null\n+                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n+                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n+                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitSingleLineComment(DetailAST singleLineComment) {\n        final DetailAST prevStmt \u003d getPreviousStatementOfSingleLineComment(singleLineComment);\n        final DetailAST nextStmt \u003d singleLineComment.getNextSibling();\n\n        if (!isTrailingSingleLineComment(singleLineComment)) {\n            if (isInEmptyCaseBlock(prevStmt, nextStmt)) {\n                handleSingleLineCommentInEmptyCaseBlock(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (isFallThroughSingleLineComment(prevStmt, nextStmt)) {\n                handleFallThroughtSingleLineComment(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (isInEmptyCodeBlock(prevStmt, nextStmt)) {\n                handleSingleLineCommentInEmptyCodeBlock(singleLineComment, nextStmt);\n            }\n            else if (isSingleLineCommentAtTheEndOfTheCodeBlock(nextStmt)) {\n                handleSIngleLineCommentAtTheEndOfTheCodeBlock(prevStmt, singleLineComment,\n                    nextStmt);\n            }\n            else if (nextStmt !\u003d null\n                        \u0026\u0026 !areSameLevelIndented(singleLineComment, nextStmt, nextStmt)) {\n                log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStmt.getLineNo(),\n                    singleLineComment.getColumnNo(), nextStmt.getColumnNo());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "2057a77c3a524b86dff382ac8abdca71dd03764a": {
      "type": "Ybodychange",
      "commitMessage": "Refactoring of CommentsIndentationCheck, issue #333\n",
      "commitDate": "19/08/15 10:02 PM",
      "commitName": "2057a77c3a524b86dff382ac8abdca71dd03764a",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "16/08/15 9:06 PM",
      "commitNameOld": "828e07e15b1d8b6484b543df07b68fe320025b67",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 3.04,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private void visitSingleLineComment(DetailAST singleLineComment) {\n         final DetailAST nextStatement \u003d singleLineComment.getNextSibling();\n-        final DetailAST prevStatement \u003d getPreviousStmt(singleLineComment);\n+        final DetailAST prevStatement \u003d getPrevStatementFromSwitchBlock(singleLineComment);\n \n         if (nextStatement !\u003d null\n             \u0026\u0026 nextStatement.getType() !\u003d TokenTypes.RCURLY\n             \u0026\u0026 !isTrailingSingleLineComment(singleLineComment)\n             \u0026\u0026 !areSameLevelIndented(singleLineComment, prevStatement, nextStatement)) {\n \n             log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStatement.getLineNo(),\n                 singleLineComment.getColumnNo(), nextStatement.getColumnNo());\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitSingleLineComment(DetailAST singleLineComment) {\n        final DetailAST nextStatement \u003d singleLineComment.getNextSibling();\n        final DetailAST prevStatement \u003d getPrevStatementFromSwitchBlock(singleLineComment);\n\n        if (nextStatement !\u003d null\n            \u0026\u0026 nextStatement.getType() !\u003d TokenTypes.RCURLY\n            \u0026\u0026 !isTrailingSingleLineComment(singleLineComment)\n            \u0026\u0026 !areSameLevelIndented(singleLineComment, prevStatement, nextStatement)) {\n\n            log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStatement.getLineNo(),\n                singleLineComment.getColumnNo(), nextStatement.getColumnNo());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java",
      "extendedDetails": {}
    },
    "df5eac375738952fdaa3bbf7de41965aa01a8cb6": {
      "type": "Yintroduced",
      "commitMessage": "Added new Check: CommentsIndentationCheck, issue #333\n",
      "commitDate": "08/08/15 1:54 AM",
      "commitName": "df5eac375738952fdaa3bbf7de41965aa01a8cb6",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,13 @@\n+    private void visitSingleLineComment(DetailAST singleLineComment) {\n+        final DetailAST nextStatement \u003d singleLineComment.getNextSibling();\n+        final DetailAST prevStatement \u003d getPreviousStmt(singleLineComment);\n+\n+        if (nextStatement !\u003d null\n+            \u0026\u0026 nextStatement.getType() !\u003d TokenTypes.RCURLY\n+            \u0026\u0026 !isTrailingSingleLineComment(singleLineComment)\n+            \u0026\u0026 !areSameLevelIndented(singleLineComment, prevStatement, nextStatement)) {\n+\n+            log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStatement.getLineNo(),\n+                singleLineComment.getColumnNo(), nextStatement.getColumnNo());\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void visitSingleLineComment(DetailAST singleLineComment) {\n        final DetailAST nextStatement \u003d singleLineComment.getNextSibling();\n        final DetailAST prevStatement \u003d getPreviousStmt(singleLineComment);\n\n        if (nextStatement !\u003d null\n            \u0026\u0026 nextStatement.getType() !\u003d TokenTypes.RCURLY\n            \u0026\u0026 !isTrailingSingleLineComment(singleLineComment)\n            \u0026\u0026 !areSameLevelIndented(singleLineComment, prevStatement, nextStatement)) {\n\n            log(singleLineComment.getLineNo(), MSG_KEY_SINGLE, nextStatement.getLineNo(),\n                singleLineComment.getColumnNo(), nextStatement.getColumnNo());\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/CommentsIndentationCheck.java"
    }
  }
}