{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CustomImportOrderCheck.java",
  "functionName": "setCustomImportOrderRules",
  "functionId": "setCustomImportOrderRules___inputCustomImportOrder-String(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
  "functionStartLine": 503,
  "functionEndLine": 511,
  "numCommitsSeen": 129,
  "timeTaken": 2553,
  "changeHistory": [
    "9835f7fc36f4e9589704d982762e547c60036562",
    "776171b71897fde845e1f1c08f7bd2250e1b203d",
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077",
    "3fca3c9250864912e36783302ebe8f04f17ec262",
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "2a3be6769c4a97d090970ed52ca2333cb9aea706"
  ],
  "changeHistoryShort": {
    "9835f7fc36f4e9589704d982762e547c60036562": "Ybodychange",
    "776171b71897fde845e1f1c08f7bd2250e1b203d": "Ybodychange",
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077": "Ybodychange",
    "3fca3c9250864912e36783302ebe8f04f17ec262": "Ybodychange",
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8": "Ymultichange(Yparameterchange,Ybodychange)",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "2a3be6769c4a97d090970ed52ca2333cb9aea706": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9835f7fc36f4e9589704d982762e547c60036562": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7128: CustomImportOrderCheck.customImportOrderRules does not support the default value\n",
      "commitDate": "13/04/20 7:50 AM",
      "commitName": "9835f7fc36f4e9589704d982762e547c60036562",
      "commitAuthor": "wltan",
      "commitDateOld": "20/03/20 4:49 AM",
      "commitNameOld": "2705595ee9925dfd2bfe691aa119658206557240",
      "commitAuthorOld": "malintha1996",
      "daysBetweenCommits": 24.13,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,9 @@\n     public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n-        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n-            addRulesToList(currentState);\n+        if (!customImportOrderRules.equals(inputCustomImportOrder)) {\n+            for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n+                addRulesToList(currentState);\n+            }\n+            customOrderRules.add(NON_GROUP_RULE_GROUP);\n         }\n-        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+        customImportOrderRules \u003d inputCustomImportOrder;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        if (!customImportOrderRules.equals(inputCustomImportOrder)) {\n            for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n                addRulesToList(currentState);\n            }\n            customOrderRules.add(NON_GROUP_RULE_GROUP);\n        }\n        customImportOrderRules \u003d inputCustomImportOrder;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "776171b71897fde845e1f1c08f7bd2250e1b203d": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5004: pitest: increase mutation coverage for pitest-checks-imports profile to 100%\n",
      "commitDate": "22/12/17 6:20 PM",
      "commitName": "776171b71897fde845e1f1c08f7bd2250e1b203d",
      "commitAuthor": "BBG",
      "commitDateOld": "14/11/17 5:16 PM",
      "commitNameOld": "32e2b7ba57e189074662d84a04535a87c3a19b0c",
      "commitAuthorOld": "Subbu Dantu",
      "daysBetweenCommits": 38.04,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,6 @@\n     public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n-        customImportOrderRules.clear();\n         for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n             addRulesToList(currentState);\n         }\n         customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n            addRulesToList(currentState);\n        }\n        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077": {
      "type": "Ybodychange",
      "commitMessage": "Fix typos in import and java8 packages. #1555\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "27/08/15 10:26 PM",
      "commitName": "c57ee4b58a2758a3b8a83a1d14dc3c4835ae2077",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.72,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n         customImportOrderRules.clear();\n         for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n-            addRuleastoList(currentState);\n+            addRulesToList(currentState);\n         }\n         customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        customImportOrderRules.clear();\n        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n            addRulesToList(currentState);\n        }\n        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "3fca3c9250864912e36783302ebe8f04f17ec262": {
      "type": "Ybodychange",
      "commitMessage": "Use compiled pattern instead of dynamic regexp in checks. #1555\n\nFixes some `SpellDynamicRegexReplaceableByCompiledPattern` inspection violations.\n\nDescription:\n\u003eReports calls to the regular expression methods of java.lang.String using constants arguments. Such calls may be profitably replaced with a private static final Pattern field so that the regular expression does not have to be compiled each time it is used.\n",
      "commitDate": "26/08/15 9:28 AM",
      "commitName": "3fca3c9250864912e36783302ebe8f04f17ec262",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "25/08/15 5:20 AM",
      "commitNameOld": "26513d52336c42432ee21565b253297ba4174530",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,7 @@\n     public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n         customImportOrderRules.clear();\n-        for (String currentState : inputCustomImportOrder\n-                .split(\"\\\\s*###\\\\s*\")) {\n+        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n             addRuleastoList(currentState);\n         }\n         customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        customImportOrderRules.clear();\n        for (String currentState : GROUP_SEPARATOR_PATTERN.split(inputCustomImportOrder)) {\n            addRuleastoList(currentState);\n        }\n        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
      "extendedDetails": {}
    },
    "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Improved UT coverage for CustomImportOrder #1128\n",
      "commitDate": "07/07/15 7:37 PM",
      "commitName": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
      "commitAuthor": "Aleksandr Ivanov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Improved UT coverage for CustomImportOrder #1128\n",
          "commitDate": "07/07/15 7:37 PM",
          "commitName": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
          "commitAuthor": "Aleksandr Ivanov",
          "commitDateOld": "05/07/15 11:58 AM",
          "commitNameOld": "ac5dbc736320f6e5807cef97964a8a2928123687",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 2.32,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,8 @@\n-    public final void setCustomImportOrderRules(final String inputCustoimportOrder) {\n+    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n         customImportOrderRules.clear();\n-        try {\n-            for (String currentState : inputCustoimportOrder\n-                    .split(\"\\\\s*###\\\\s*\")) {\n-                addRuleastoList(currentState);\n-            }\n-            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+        for (String currentState : inputCustomImportOrder\n+                .split(\"\\\\s*###\\\\s*\")) {\n+            addRuleastoList(currentState);\n         }\n-        catch (StringIndexOutOfBoundsException exp) {\n-            //if the structure of the input rule isn\u0027t correct\n-            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n-        }\n+        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        customImportOrderRules.clear();\n        for (String currentState : inputCustomImportOrder\n                .split(\"\\\\s*###\\\\s*\")) {\n            addRuleastoList(currentState);\n        }\n        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[inputCustoimportOrder-String(modifiers-final)]",
            "newValue": "[inputCustomImportOrder-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Improved UT coverage for CustomImportOrder #1128\n",
          "commitDate": "07/07/15 7:37 PM",
          "commitName": "6f51fa7e63d3af55e2a6900d9aadb183ecf0cde8",
          "commitAuthor": "Aleksandr Ivanov",
          "commitDateOld": "05/07/15 11:58 AM",
          "commitNameOld": "ac5dbc736320f6e5807cef97964a8a2928123687",
          "commitAuthorOld": "Aleksandr Ivanov",
          "daysBetweenCommits": 2.32,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,8 @@\n-    public final void setCustomImportOrderRules(final String inputCustoimportOrder) {\n+    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n         customImportOrderRules.clear();\n-        try {\n-            for (String currentState : inputCustoimportOrder\n-                    .split(\"\\\\s*###\\\\s*\")) {\n-                addRuleastoList(currentState);\n-            }\n-            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+        for (String currentState : inputCustomImportOrder\n+                .split(\"\\\\s*###\\\\s*\")) {\n+            addRuleastoList(currentState);\n         }\n-        catch (StringIndexOutOfBoundsException exp) {\n-            //if the structure of the input rule isn\u0027t correct\n-            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n-        }\n+        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setCustomImportOrderRules(final String inputCustomImportOrder) {\n        customImportOrderRules.clear();\n        for (String currentState : inputCustomImportOrder\n                .split(\"\\\\s*###\\\\s*\")) {\n            addRuleastoList(currentState);\n        }\n        customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    public final void setCustomImportOrderRules(final String aInputCustomImportOrder)\n+    public final void setCustomImportOrderRules(final String inputCustoimportOrder)\n     {\n-        mCustomImportOrderRules.clear();\n+        customImportOrderRules.clear();\n         try {\n-            for (String currentState : aInputCustomImportOrder\n+            for (String currentState : inputCustoimportOrder\n                     .split(\"\\\\s*###\\\\s*\"))\n             {\n-                addRulesToList(currentState);\n+                addRuleastoList(currentState);\n             }\n-            mCustomImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n         }\n         catch (StringIndexOutOfBoundsException exp) {\n             //if the structure of the input rule isn\u0027t correct\n             throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setCustomImportOrderRules(final String inputCustoimportOrder)\n    {\n        customImportOrderRules.clear();\n        try {\n            for (String currentState : inputCustoimportOrder\n                    .split(\"\\\\s*###\\\\s*\"))\n            {\n                addRuleastoList(currentState);\n            }\n            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n        }\n        catch (StringIndexOutOfBoundsException exp) {\n            //if the structure of the input rule isn\u0027t correct\n            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {
            "oldValue": "[aInputCustomImportOrder-String(modifiers-final)]",
            "newValue": "[inputCustoimportOrder-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 249,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    public final void setCustomImportOrderRules(final String aInputCustomImportOrder)\n+    public final void setCustomImportOrderRules(final String inputCustoimportOrder)\n     {\n-        mCustomImportOrderRules.clear();\n+        customImportOrderRules.clear();\n         try {\n-            for (String currentState : aInputCustomImportOrder\n+            for (String currentState : inputCustoimportOrder\n                     .split(\"\\\\s*###\\\\s*\"))\n             {\n-                addRulesToList(currentState);\n+                addRuleastoList(currentState);\n             }\n-            mCustomImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n         }\n         catch (StringIndexOutOfBoundsException exp) {\n             //if the structure of the input rule isn\u0027t correct\n             throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public final void setCustomImportOrderRules(final String inputCustoimportOrder)\n    {\n        customImportOrderRules.clear();\n        try {\n            for (String currentState : inputCustoimportOrder\n                    .split(\"\\\\s*###\\\\s*\"))\n            {\n                addRuleastoList(currentState);\n            }\n            customImportOrderRules.add(NON_GROUP_RULE_GROUP);\n        }\n        catch (StringIndexOutOfBoundsException exp) {\n            //if the structure of the input rule isn\u0027t correct\n            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "2a3be6769c4a97d090970ed52ca2333cb9aea706": {
      "type": "Yintroduced",
      "commitMessage": "CustomImportOrder was introduced #231\n",
      "commitDate": "10/08/14 4:52 AM",
      "commitName": "2a3be6769c4a97d090970ed52ca2333cb9aea706",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,16 @@\n+    setCustomImportOrderRules(final String aInputCustomImportOrder)\n+    {\n+        mCustomImportOrderRules.clear();\n+        try {\n+            for (String currentState : aInputCustomImportOrder\n+                    .split(\"\\\\s*###\\\\s*\"))\n+            {\n+                addRulesToList(currentState);\n+            }\n+            mCustomImportOrderRules.add(NON_GROUP_RULE_GROUP);\n+        }\n+        catch (StringIndexOutOfBoundsException exp) {\n+            //if the structure of the input rule isn\u0027t correct\n+            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    setCustomImportOrderRules(final String aInputCustomImportOrder)\n    {\n        mCustomImportOrderRules.clear();\n        try {\n            for (String currentState : aInputCustomImportOrder\n                    .split(\"\\\\s*###\\\\s*\"))\n            {\n                addRulesToList(currentState);\n            }\n            mCustomImportOrderRules.add(NON_GROUP_RULE_GROUP);\n        }\n        catch (StringIndexOutOfBoundsException exp) {\n            //if the structure of the input rule isn\u0027t correct\n            throw new RuntimeException(\"Unable to parse input rule: \" + exp);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/CustomImportOrderCheck.java"
    }
  }
}