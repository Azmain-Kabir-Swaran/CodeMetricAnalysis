{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbbreviationAsWordInNameCheck.java",
  "functionName": "hasOverrideAnnotation",
  "functionId": "hasOverrideAnnotation___methodModifiersAST-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
  "functionStartLine": 508,
  "functionEndLine": 519,
  "numCommitsSeen": 61,
  "timeTaken": 1385,
  "changeHistory": [
    "d05e96f082e1a42c510b3dd21da82ef6316b088a",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
    "fb1407c204a960223f78ec8429a5581773e5578b",
    "7c5f94aafd422312a6c19a36f53796d547788827",
    "0ceec1502926f96f81534cf84cf3d50536f17db1"
  ],
  "changeHistoryShort": {
    "d05e96f082e1a42c510b3dd21da82ef6316b088a": "Ybodychange",
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": "Ymultichange(Yparameterchange,Ybodychange)",
    "fb1407c204a960223f78ec8429a5581773e5578b": "Ybodychange",
    "7c5f94aafd422312a6c19a36f53796d547788827": "Yfilerename",
    "0ceec1502926f96f81534cf84cf3d50536f17db1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d05e96f082e1a42c510b3dd21da82ef6316b088a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6320: added REMOVE_CONDITIONALS mutator for naming",
      "commitDate": "28/12/18 11:11 AM",
      "commitName": "d05e96f082e1a42c510b3dd21da82ef6316b088a",
      "commitAuthor": "rnveach",
      "commitDateOld": "06/11/18 5:16 PM",
      "commitNameOld": "18d0a14ea8b91ec8f964a8c59573fca78ecbaebc",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 51.75,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,12 @@\n     private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST) {\n         boolean result \u003d false;\n         for (DetailAST child : getChildren(methodModifiersAST)) {\n-            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n-                final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n+            final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n \n-                if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n-                    result \u003d true;\n-                    break;\n-                }\n+            if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n+                result \u003d true;\n+                break;\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST) {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(methodModifiersAST)) {\n            final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n\n            if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                result \u003d true;\n                break;\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
      "extendedDetails": {}
    },
    "750b733bd124eaea34d4692a1bb8d0fd0fe90976": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, naming, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, naming, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n+    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)\n     {\n         boolean result \u003d false;\n-        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n+        for (DetailAST child : getChildren(methodModifiersAST)) {\n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                 final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n                 if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                     result \u003d true;\n                     break;\n                 }\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)\n    {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(methodModifiersAST)) {\n            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n                if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
          "extendedDetails": {
            "oldValue": "[aMethodModifiersAST-DetailAST]",
            "newValue": "[methodModifiersAST-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, naming, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "750b733bd124eaea34d4692a1bb8d0fd0fe90976",
          "commitAuthor": "alexkravin",
          "commitDateOld": "14/12/14 10:31 PM",
          "commitNameOld": "0e04e5088cb8a9212df8e1c15d774835196ce1b0",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 35.33,
          "commitsBetweenForRepo": 82,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n+    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)\n     {\n         boolean result \u003d false;\n-        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n+        for (DetailAST child : getChildren(methodModifiersAST)) {\n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                 final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n                 if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                     result \u003d true;\n                     break;\n                 }\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST methodModifiersAST)\n    {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(methodModifiersAST)) {\n            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n                if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "fb1407c204a960223f78ec8429a5581773e5578b": {
      "type": "Ybodychange",
      "commitMessage": "Fix NPE in AbbreviationAsWordInNameCheck #241\n",
      "commitDate": "11/08/14 6:54 AM",
      "commitName": "fb1407c204a960223f78ec8429a5581773e5578b",
      "commitAuthor": "Max",
      "commitDateOld": "02/08/14 12:42 PM",
      "commitNameOld": "7c5f94aafd422312a6c19a36f53796d547788827",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 8.76,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n     private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n     {\n         boolean result \u003d false;\n         for (DetailAST child : getChildren(aMethodModifiersAST)) {\n             if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n-                final String annotationText \u003d\n-                        child.findFirstToken(TokenTypes.IDENT).getText();\n-                if (\"Override\".equals(annotationText)) {\n+                final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n+                if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                     result \u003d true;\n                     break;\n                 }\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n    {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final DetailAST annotationIdent \u003d child.findFirstToken(TokenTypes.IDENT);\n                if (annotationIdent !\u003d null \u0026\u0026 \"Override\".equals(annotationIdent.getText())) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
      "extendedDetails": {}
    },
    "7c5f94aafd422312a6c19a36f53796d547788827": {
      "type": "Yfilerename",
      "commitMessage": "AbbreviationAsAWordInName moved to naming package , documentation was rewritten, mTarget was removed from Check (fix after non problematic rebase)\n",
      "commitDate": "02/08/14 12:42 PM",
      "commitName": "7c5f94aafd422312a6c19a36f53796d547788827",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "02/08/14 10:54 AM",
      "commitNameOld": "9c9ba5466dd13f5da92e350772994f896a6e5cdf",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n    {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final String annotationText \u003d\n                        child.findFirstToken(TokenTypes.IDENT).getText();\n                if (\"Override\".equals(annotationText)) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbbreviationAsWordInNameCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/AbbreviationAsWordInNameCheck.java"
      }
    },
    "0ceec1502926f96f81534cf84cf3d50536f17db1": {
      "type": "Yintroduced",
      "commitMessage": "AbbreviationAsWordInName. #212\n",
      "commitDate": "02/08/14 10:54 AM",
      "commitName": "0ceec1502926f96f81534cf84cf3d50536f17db1",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,15 @@\n+    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n+    {\n+        boolean result \u003d false;\n+        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n+            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n+                final String annotationText \u003d\n+                        child.findFirstToken(TokenTypes.IDENT).getText();\n+                if (\"Override\".equals(annotationText)) {\n+                    result \u003d true;\n+                    break;\n+                }\n+            }\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean hasOverrideAnnotation(DetailAST aMethodModifiersAST)\n    {\n        boolean result \u003d false;\n        for (DetailAST child : getChildren(aMethodModifiersAST)) {\n            if (child.getType() \u003d\u003d TokenTypes.ANNOTATION) {\n                final String annotationText \u003d\n                        child.findFirstToken(TokenTypes.IDENT).getText();\n                if (\"Override\".equals(annotationText)) {\n                    result \u003d true;\n                    break;\n                }\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/AbbreviationAsWordInNameCheck.java"
    }
  }
}