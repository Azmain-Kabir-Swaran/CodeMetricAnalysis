{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeftCurlyCheck.java",
  "functionName": "validateEol",
  "functionId": "validateEol___brace-DetailAST__braceLine-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
  "functionStartLine": 365,
  "functionEndLine": 372,
  "numCommitsSeen": 113,
  "timeTaken": 1817,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "085ce12db0983590844ccc24ea49f91686a30ed8",
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd",
    "2b32b003ab81c9bfcb8205b512eb4ea313e529af"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "085ce12db0983590844ccc24ea49f91686a30ed8": "Ybodychange",
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23": "Ymultichange(Yparameterchange,Ybodychange)",
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd": "Ybodychange",
    "2b32b003ab81c9bfcb8205b512eb4ea313e529af": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private void validateEol(DetailAST brace, String braceLine) {\n-        if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        if (CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n             log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (CommonUtil.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "46a52f84c014e4d25379f429f11ed3de11fe8ae7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Rename methods returning boolean to use question word\n\nFixes some `BooleanMethodNameMustStartWithQuestion` inspection violations.\n\nDescription:\n\u003eReports boolean methods whose names do not start with a question word. Boolean methods that override library methods are ignored by this inspection.\n",
      "commitDate": "28/08/15 10:50 PM",
      "commitName": "46a52f84c014e4d25379f429f11ed3de11fe8ae7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/08/15 10:51 PM",
      "commitNameOld": "9ddad74e484384e5ca2d88ab0fe21922189e2b85",
      "commitAuthorOld": "Ruslan Diachenko",
      "daysBetweenCommits": 1.0,
      "commitsBetweenForRepo": 42,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private void validateEol(DetailAST brace, String braceLine) {\n-        if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n             log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (CommonUtils.hasWhitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private void validateEol(DetailAST brace, String braceLine) {\n-        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n+        if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n             log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (CommonUtils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "085ce12db0983590844ccc24ea49f91686a30ed8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations fixed\n",
      "commitDate": "25/08/15 4:00 PM",
      "commitName": "085ce12db0983590844ccc24ea49f91686a30ed8",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "22/08/15 4:35 AM",
      "commitNameOld": "27375d081517bbf69110f3c37f73583a5d3c60fb",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.48,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n     private void validateEol(DetailAST brace, String braceLine) {\n         if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n-            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n+            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n-            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n+            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, OPEN_CURLY_BRACE, brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "289ef67e9e9ee424723b8aa22ae7a6d31f126d23": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
      "commitDate": "11/08/15 10:20 PM",
      "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
      "commitAuthor": "Andrei Selkin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
          "commitDate": "11/08/15 10:20 PM",
          "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n-        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n-            \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n+    private void validateEol(DetailAST brace, String braceLine) {\n+        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n             log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {
            "oldValue": "[brace-DetailAST, braceLine-String, prevLineLen-int]",
            "newValue": "[brace-DetailAST, braceLine-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Marked \u0027maxLineLength\u0027 as \u0027@Deprecated\u0027 at LeftCurlyCheck, issue #965\n",
          "commitDate": "11/08/15 10:20 PM",
          "commitName": "289ef67e9e9ee424723b8aa22ae7a6d31f126d23",
          "commitAuthor": "Andrei Selkin",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-    private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n-        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n-            \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n+    private void validateEol(DetailAST brace, String braceLine) {\n+        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n             log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n             log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void validateEol(DetailAST brace, String braceLine) {\n        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "3a5a73d5c110418f712f5a9a838c6b4106506fdd": {
      "type": "Ybodychange",
      "commitMessage": "Added column number into violation messages for RightCurlyCheck and LeftCurlyCheck, issue #1511.\n",
      "commitDate": "01/08/15 1:16 PM",
      "commitName": "3a5a73d5c110418f712f5a9a838c6b4106506fdd",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "27/07/15 4:13 PM",
      "commitNameOld": "71d0a829e42bfcbfa3fd692a29abf8796e467fc9",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 4.88,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,9 @@\n     private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n         if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n             \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n-            log(brace.getLineNo(), brace.getColumnNo(),\n-                MSG_KEY_LINE_PREVIOUS, \"{\");\n+            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n         }\n         if (!hasLineBreakAfter(brace)) {\n-            log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);\n+            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n            \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n            log(brace, MSG_KEY_LINE_PREVIOUS, \"{\", brace.getColumnNo() + 1);\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace, MSG_KEY_LINE_BREAK_AFTER, \"{\", brace.getColumnNo() + 1);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java",
      "extendedDetails": {}
    },
    "2b32b003ab81c9bfcb8205b512eb4ea313e529af": {
      "type": "Yintroduced",
      "commitMessage": "LeftCurlyCheck updated to follow Cyclomatic Complexity rule. #954\n",
      "commitDate": "13/06/15 11:01 PM",
      "commitName": "2b32b003ab81c9bfcb8205b512eb4ea313e529af",
      "commitAuthor": "Roman Ivanov",
      "diff": "@@ -0,0 +1,10 @@\n+    private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n+        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n+            \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n+            log(brace.getLineNo(), brace.getColumnNo(),\n+                MSG_KEY_LINE_PREVIOUS, \"{\");\n+        }\n+        if (!hasLineBreakAfter(brace)) {\n+            log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void validateEol(DetailAST brace, String braceLine, int prevLineLen) {\n        if (Utils.whitespaceBefore(brace.getColumnNo(), braceLine)\n            \u0026\u0026 prevLineLen + 2 \u003c\u003d maxLineLength) {\n            log(brace.getLineNo(), brace.getColumnNo(),\n                MSG_KEY_LINE_PREVIOUS, \"{\");\n        }\n        if (!hasLineBreakAfter(brace)) {\n            log(brace.getLineNo(), brace.getColumnNo(), MSG_KEY_LINE_BREAK_AFTER);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/LeftCurlyCheck.java"
    }
  }
}