{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NeedBracesCheck.java",
  "functionName": "isBracesNeeded",
  "functionId": "isBracesNeeded___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java",
  "functionStartLine": 242,
  "functionEndLine": 261,
  "numCommitsSeen": 53,
  "timeTaken": 641,
  "changeHistory": [
    "7eaf631b008dc4b27fc42f543e664d0f919b7c7b"
  ],
  "changeHistoryShort": {
    "7eaf631b008dc4b27fc42f543e664d0f919b7c7b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7eaf631b008dc4b27fc42f543e664d0f919b7c7b": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4764: fix false-positive violations in NeedBracesCheck\n",
      "commitDate": "20/06/19 5:32 AM",
      "commitName": "7eaf631b008dc4b27fc42f543e664d0f919b7c7b",
      "commitAuthor": "Andrei Paikin",
      "diff": "@@ -0,0 +1,20 @@\n+    private boolean isBracesNeeded(DetailAST ast) {\n+        final boolean result;\n+        switch (ast.getType()) {\n+            case TokenTypes.LITERAL_FOR:\n+            case TokenTypes.LITERAL_WHILE:\n+                result \u003d !isEmptyLoopBodyAllowed(ast);\n+                break;\n+            case TokenTypes.LITERAL_CASE:\n+            case TokenTypes.LITERAL_DEFAULT:\n+                result \u003d hasUnbracedStatements(ast);\n+                break;\n+            case TokenTypes.LITERAL_ELSE:\n+                result \u003d ast.findFirstToken(TokenTypes.LITERAL_IF) \u003d\u003d null;\n+                break;\n+            default:\n+                result \u003d true;\n+                break;\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isBracesNeeded(DetailAST ast) {\n        final boolean result;\n        switch (ast.getType()) {\n            case TokenTypes.LITERAL_FOR:\n            case TokenTypes.LITERAL_WHILE:\n                result \u003d !isEmptyLoopBodyAllowed(ast);\n                break;\n            case TokenTypes.LITERAL_CASE:\n            case TokenTypes.LITERAL_DEFAULT:\n                result \u003d hasUnbracedStatements(ast);\n                break;\n            case TokenTypes.LITERAL_ELSE:\n                result \u003d ast.findFirstToken(TokenTypes.LITERAL_IF) \u003d\u003d null;\n                break;\n            default:\n                result \u003d true;\n                break;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/blocks/NeedBracesCheck.java"
    }
  }
}