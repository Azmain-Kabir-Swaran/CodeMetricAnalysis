{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RedundantModifierCheck.java",
  "functionName": "checkForRedundantModifier",
  "functionId": "checkForRedundantModifier___ast-DetailAST__modifierType-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
  "functionStartLine": 422,
  "functionEndLine": 432,
  "numCommitsSeen": 100,
  "timeTaken": 1536,
  "changeHistory": [
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "b1eced12b2be801d2f68de4e1f404e1c04b10ae8",
    "da6ebe6de41b7a5afc6f6746ff0c2382c2a4be0f"
  ],
  "changeHistoryShort": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "b1eced12b2be801d2f68de4e1f404e1c04b10ae8": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "da6ebe6de41b7a5afc6f6746ff0c2382c2a4be0f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n     private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n         final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         DetailAST astModifier \u003d astModifiers.getFirstChild();\n         while (astModifier !\u003d null) {\n             if (astModifier.getType() \u003d\u003d modifierType) {\n-                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n-                        MSG_KEY, astModifier.getText());\n+                log(astModifier, MSG_KEY, astModifier.getText());\n             }\n \n             astModifier \u003d astModifier.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        DetailAST astModifier \u003d astModifiers.getFirstChild();\n        while (astModifier !\u003d null) {\n            if (astModifier.getType() \u003d\u003d modifierType) {\n                log(astModifier, MSG_KEY, astModifier.getText());\n            }\n\n            astModifier \u003d astModifier.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
      "extendedDetails": {}
    },
    "b1eced12b2be801d2f68de4e1f404e1c04b10ae8": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3322: added RedundantModifiers for final in abstract methods",
      "commitDate": "04/08/16 5:49 AM",
      "commitName": "b1eced12b2be801d2f68de4e1f404e1c04b10ae8",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "Issue #3322: added RedundantModifiers for final in abstract methods",
          "commitDate": "04/08/16 5:49 AM",
          "commitName": "b1eced12b2be801d2f68de4e1f404e1c04b10ae8",
          "commitAuthor": "rnveach",
          "commitDateOld": "26/07/16 8:19 PM",
          "commitNameOld": "b415ce007ba73732ecfaa9ed7d4ec6dc65f4d354",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 8.4,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void checkForRedundantPublicModifier(DetailAST ast) {\n+    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n         final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         DetailAST astModifier \u003d astModifiers.getFirstChild();\n         while (astModifier !\u003d null) {\n-            if (astModifier.getType() \u003d\u003d TokenTypes.LITERAL_PUBLIC) {\n+            if (astModifier.getType() \u003d\u003d modifierType) {\n                 log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                         MSG_KEY, astModifier.getText());\n             }\n \n             astModifier \u003d astModifier.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        DetailAST astModifier \u003d astModifiers.getFirstChild();\n        while (astModifier !\u003d null) {\n            if (astModifier.getType() \u003d\u003d modifierType) {\n                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                        MSG_KEY, astModifier.getText());\n            }\n\n            astModifier \u003d astModifier.getNextSibling();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
          "extendedDetails": {
            "oldValue": "checkForRedundantPublicModifier",
            "newValue": "checkForRedundantModifier"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3322: added RedundantModifiers for final in abstract methods",
          "commitDate": "04/08/16 5:49 AM",
          "commitName": "b1eced12b2be801d2f68de4e1f404e1c04b10ae8",
          "commitAuthor": "rnveach",
          "commitDateOld": "26/07/16 8:19 PM",
          "commitNameOld": "b415ce007ba73732ecfaa9ed7d4ec6dc65f4d354",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 8.4,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void checkForRedundantPublicModifier(DetailAST ast) {\n+    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n         final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         DetailAST astModifier \u003d astModifiers.getFirstChild();\n         while (astModifier !\u003d null) {\n-            if (astModifier.getType() \u003d\u003d TokenTypes.LITERAL_PUBLIC) {\n+            if (astModifier.getType() \u003d\u003d modifierType) {\n                 log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                         MSG_KEY, astModifier.getText());\n             }\n \n             astModifier \u003d astModifier.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        DetailAST astModifier \u003d astModifiers.getFirstChild();\n        while (astModifier !\u003d null) {\n            if (astModifier.getType() \u003d\u003d modifierType) {\n                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                        MSG_KEY, astModifier.getText());\n            }\n\n            astModifier \u003d astModifier.getNextSibling();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
          "extendedDetails": {
            "oldValue": "[ast-DetailAST]",
            "newValue": "[ast-DetailAST, modifierType-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3322: added RedundantModifiers for final in abstract methods",
          "commitDate": "04/08/16 5:49 AM",
          "commitName": "b1eced12b2be801d2f68de4e1f404e1c04b10ae8",
          "commitAuthor": "rnveach",
          "commitDateOld": "26/07/16 8:19 PM",
          "commitNameOld": "b415ce007ba73732ecfaa9ed7d4ec6dc65f4d354",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 8.4,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void checkForRedundantPublicModifier(DetailAST ast) {\n+    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n         final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n         DetailAST astModifier \u003d astModifiers.getFirstChild();\n         while (astModifier !\u003d null) {\n-            if (astModifier.getType() \u003d\u003d TokenTypes.LITERAL_PUBLIC) {\n+            if (astModifier.getType() \u003d\u003d modifierType) {\n                 log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                         MSG_KEY, astModifier.getText());\n             }\n \n             astModifier \u003d astModifier.getNextSibling();\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkForRedundantModifier(DetailAST ast, int modifierType) {\n        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        DetailAST astModifier \u003d astModifiers.getFirstChild();\n        while (astModifier !\u003d null) {\n            if (astModifier.getType() \u003d\u003d modifierType) {\n                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                        MSG_KEY, astModifier.getText());\n            }\n\n            astModifier \u003d astModifier.getNextSibling();\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "da6ebe6de41b7a5afc6f6746ff0c2382c2a4be0f": {
      "type": "Yintroduced",
      "commitMessage": "Detect public constructors in non-public classes in RedundantModifier,\nfixes issue #1537\n",
      "commitDate": "28/08/15 10:52 AM",
      "commitName": "da6ebe6de41b7a5afc6f6746ff0c2382c2a4be0f",
      "commitAuthor": "liscju",
      "diff": "@@ -0,0 +1,12 @@\n+    private void checkForRedundantPublicModifier(DetailAST ast) {\n+        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n+        DetailAST astModifier \u003d astModifiers.getFirstChild();\n+        while (astModifier !\u003d null) {\n+            if (astModifier.getType() \u003d\u003d TokenTypes.LITERAL_PUBLIC) {\n+                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n+                        MSG_KEY, astModifier.getText());\n+            }\n+\n+            astModifier \u003d astModifier.getNextSibling();\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkForRedundantPublicModifier(DetailAST ast) {\n        final DetailAST astModifiers \u003d ast.findFirstToken(TokenTypes.MODIFIERS);\n        DetailAST astModifier \u003d astModifiers.getFirstChild();\n        while (astModifier !\u003d null) {\n            if (astModifier.getType() \u003d\u003d TokenTypes.LITERAL_PUBLIC) {\n                log(astModifier.getLineNo(), astModifier.getColumnNo(),\n                        MSG_KEY, astModifier.getText());\n            }\n\n            astModifier \u003d astModifier.getNextSibling();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/modifier/RedundantModifierCheck.java"
    }
  }
}