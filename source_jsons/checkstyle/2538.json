{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ImportControlCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
  "functionStartLine": 514,
  "functionEndLine": 537,
  "numCommitsSeen": 67,
  "timeTaken": 2338,
  "changeHistory": [
    "e018b2d6622efa4f1897244856974c45efeda99c",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5",
    "a5d30bf353dde01376d45fb031d9236b11a835d1",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "e018b2d6622efa4f1897244856974c45efeda99c": "Ybodychange",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": "Yparametermetachange",
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9": "Ybodychange",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": "Ybodychange",
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": "Ybodychange",
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5": "Ybodychange",
    "a5d30bf353dde01376d45fb031d9236b11a835d1": "Ybodychange",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e018b2d6622efa4f1897244856974c45efeda99c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3492: add ability to control imports in certain files",
      "commitDate": "20/04/18 5:56 PM",
      "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 2.2,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast) {\n         if (processCurrentFile) {\n             if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n                 if (root \u003d\u003d null) {\n                     log(ast, MSG_MISSING_FILE);\n                 }\n                 else {\n                     packageName \u003d getPackageText(ast);\n-                    currentImportControl \u003d root.locateFinest(packageName);\n+                    currentImportControl \u003d root.locateFinest(packageName, fileName);\n                     if (currentImportControl \u003d\u003d null) {\n                         log(ast, MSG_UNKNOWN_PKG);\n                     }\n                 }\n             }\n             else if (currentImportControl !\u003d null) {\n                 final String importText \u003d getImportText(ast);\n-                final AccessResult access \u003d\n-                        currentImportControl.checkAccess(packageName, importText);\n+                final AccessResult access \u003d currentImportControl.checkAccess(packageName, fileName,\n+                        importText);\n                 if (access !\u003d AccessResult.ALLOWED) {\n                     log(ast, MSG_DISALLOWED, importText);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (processCurrentFile) {\n            if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n                if (root \u003d\u003d null) {\n                    log(ast, MSG_MISSING_FILE);\n                }\n                else {\n                    packageName \u003d getPackageText(ast);\n                    currentImportControl \u003d root.locateFinest(packageName, fileName);\n                    if (currentImportControl \u003d\u003d null) {\n                        log(ast, MSG_UNKNOWN_PKG);\n                    }\n                }\n            }\n            else if (currentImportControl !\u003d null) {\n                final String importText \u003d getImportText(ast);\n                final AccessResult access \u003d currentImportControl.checkAccess(packageName, fileName,\n                        importText);\n                if (access !\u003d AccessResult.ALLOWED) {\n                    log(ast, MSG_DISALLOWED, importText);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": {
      "type": "Yparametermetachange",
      "commitMessage": "Issue #4353: refactoring: remove \u0027final\u0027 modifier from all arguments of method/c-tor at ImportControlCheck and around\n",
      "commitDate": "23/06/17 9:34 AM",
      "commitName": "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
      "commitAuthor": "sharang108",
      "commitDateOld": "26/02/17 7:25 PM",
      "commitNameOld": "ce21086e087661553f3a774c38362327ee88996a",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 116.55,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n-    public void visitToken(final DetailAST ast) {\n+    public void visitToken(DetailAST ast) {\n         if (processCurrentFile) {\n             if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n                 if (root \u003d\u003d null) {\n                     log(ast, MSG_MISSING_FILE);\n                 }\n                 else {\n                     packageName \u003d getPackageText(ast);\n                     currentImportControl \u003d root.locateFinest(packageName);\n                     if (currentImportControl \u003d\u003d null) {\n                         log(ast, MSG_UNKNOWN_PKG);\n                     }\n                 }\n             }\n             else if (currentImportControl !\u003d null) {\n                 final String importText \u003d getImportText(ast);\n                 final AccessResult access \u003d\n                         currentImportControl.checkAccess(packageName, importText);\n                 if (access !\u003d AccessResult.ALLOWED) {\n                     log(ast, MSG_DISALLOWED, importText);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        if (processCurrentFile) {\n            if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n                if (root \u003d\u003d null) {\n                    log(ast, MSG_MISSING_FILE);\n                }\n                else {\n                    packageName \u003d getPackageText(ast);\n                    currentImportControl \u003d root.locateFinest(packageName);\n                    if (currentImportControl \u003d\u003d null) {\n                        log(ast, MSG_UNKNOWN_PKG);\n                    }\n                }\n            }\n            else if (currentImportControl !\u003d null) {\n                final String importText \u003d getImportText(ast);\n                final AccessResult access \u003d\n                        currentImportControl.checkAccess(packageName, importText);\n                if (access !\u003d AccessResult.ALLOWED) {\n                    log(ast, MSG_DISALLOWED, importText);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {
        "oldValue": "[ast-DetailAST(modifiers-final)]",
        "newValue": "[ast-DetailAST]"
      }
    },
    "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3462: Implement \u0027path\u0027 property for ImportControlCheck\n",
      "commitDate": "22/01/17 5:01 AM",
      "commitName": "b57e4d3df67e43c1db34fed4e9c524e0dadde6a9",
      "commitAuthor": "Jochen Van de Velde",
      "commitDateOld": "05/12/16 1:00 PM",
      "commitNameOld": "292ad0ebf2d18e1d8131127d60b3fde99aa0adf0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 47.67,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,24 @@\n     public void visitToken(final DetailAST ast) {\n-        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            if (root \u003d\u003d null) {\n-                log(ast, MSG_MISSING_FILE);\n-            }\n-            else {\n-                packageName \u003d getPackageText(ast);\n-                currentImportControl \u003d root.locateFinest(packageName);\n-                if (currentImportControl \u003d\u003d null) {\n-                    log(ast, MSG_UNKNOWN_PKG);\n+        if (processCurrentFile) {\n+            if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+                if (root \u003d\u003d null) {\n+                    log(ast, MSG_MISSING_FILE);\n+                }\n+                else {\n+                    packageName \u003d getPackageText(ast);\n+                    currentImportControl \u003d root.locateFinest(packageName);\n+                    if (currentImportControl \u003d\u003d null) {\n+                        log(ast, MSG_UNKNOWN_PKG);\n+                    }\n                 }\n             }\n-        }\n-        else if (currentImportControl !\u003d null) {\n-            final String importText \u003d getImportText(ast);\n-            final AccessResult access \u003d currentImportControl.checkAccess(packageName, importText);\n-            if (access !\u003d AccessResult.ALLOWED) {\n-                log(ast, MSG_DISALLOWED, importText);\n+            else if (currentImportControl !\u003d null) {\n+                final String importText \u003d getImportText(ast);\n+                final AccessResult access \u003d\n+                        currentImportControl.checkAccess(packageName, importText);\n+                if (access !\u003d AccessResult.ALLOWED) {\n+                    log(ast, MSG_DISALLOWED, importText);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST ast) {\n        if (processCurrentFile) {\n            if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n                if (root \u003d\u003d null) {\n                    log(ast, MSG_MISSING_FILE);\n                }\n                else {\n                    packageName \u003d getPackageText(ast);\n                    currentImportControl \u003d root.locateFinest(packageName);\n                    if (currentImportControl \u003d\u003d null) {\n                        log(ast, MSG_UNKNOWN_PKG);\n                    }\n                }\n            }\n            else if (currentImportControl !\u003d null) {\n                final String importText \u003d getImportText(ast);\n                final AccessResult access \u003d\n                        currentImportControl.checkAccess(packageName, importText);\n                if (access !\u003d AccessResult.ALLOWED) {\n                    log(ast, MSG_DISALLOWED, importText);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3498: ImportCheckControl refactored\n",
      "commitDate": "28/11/16 2:31 PM",
      "commitName": "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
      "commitAuthor": "kazachka",
      "commitDateOld": "28/11/16 2:19 PM",
      "commitNameOld": "0cdbac0761ef6c80c2875a82bef1d966465d3703",
      "commitAuthorOld": "Jochen Van de Velde",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,21 @@\n     public void visitToken(final DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n-            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n-                log(nameAST, MSG_MISSING_FILE);\n+                log(ast, MSG_MISSING_FILE);\n             }\n             else {\n-                inPkg \u003d full.getText();\n-                currentLeaf \u003d root.locateFinest(inPkg);\n-                if (currentLeaf \u003d\u003d null) {\n-                    log(nameAST, MSG_UNKNOWN_PKG);\n+                packageName \u003d getPackageText(ast);\n+                currentImportControl \u003d root.locateFinest(packageName);\n+                if (currentImportControl \u003d\u003d null) {\n+                    log(ast, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n-        else if (currentLeaf !\u003d null) {\n-            final FullIdent imp;\n-            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n-                imp \u003d FullIdent.createFullIdentBelow(ast);\n-            }\n-            else {\n-                // know it is a static import\n-                imp \u003d FullIdent.createFullIdent(ast\n-                        .getFirstChild().getNextSibling());\n-            }\n-            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n-                    inPkg);\n+        else if (currentImportControl !\u003d null) {\n+            final String importText \u003d getImportText(ast);\n+            final AccessResult access \u003d currentImportControl.checkAccess(packageName, importText);\n             if (access !\u003d AccessResult.ALLOWED) {\n-                log(ast, MSG_DISALLOWED, imp.getText());\n+                log(ast, MSG_DISALLOWED, importText);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            if (root \u003d\u003d null) {\n                log(ast, MSG_MISSING_FILE);\n            }\n            else {\n                packageName \u003d getPackageText(ast);\n                currentImportControl \u003d root.locateFinest(packageName);\n                if (currentImportControl \u003d\u003d null) {\n                    log(ast, MSG_UNKNOWN_PKG);\n                }\n            }\n        }\n        else if (currentImportControl !\u003d null) {\n            final String importText \u003d getImportText(ast);\n            final AccessResult access \u003d currentImportControl.checkAccess(packageName, importText);\n            if (access !\u003d AccessResult.ALLOWED) {\n                log(ast, MSG_DISALLOWED, importText);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": "08/08/15 6:46 PM",
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 16.82,
      "commitsBetweenForRepo": 180,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public void visitToken(final DetailAST ast) {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n                 log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n-            if (AccessResult.ALLOWED !\u003d access) {\n+            if (access !\u003d AccessResult.ALLOWED) {\n                 log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST ast) {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (root \u003d\u003d null) {\n                log(nameAST, MSG_MISSING_FILE);\n            }\n            else {\n                inPkg \u003d full.getText();\n                currentLeaf \u003d root.locateFinest(inPkg);\n                if (currentLeaf \u003d\u003d null) {\n                    log(nameAST, MSG_UNKNOWN_PKG);\n                }\n            }\n        }\n        else if (currentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(ast);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(ast\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                    inPkg);\n            if (access !\u003d AccessResult.ALLOWED) {\n                log(ast, MSG_DISALLOWED, imp.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "89005ddf6d5d8b494e4451d16df9fd8996c735a9": {
      "type": "Ybodychange",
      "commitMessage": "Replace calls to equals() on enums with identity comparison\n\nThis replacement is safe because two enum constants are equal only when they have the same identity.\n",
      "commitDate": "10/03/15 7:46 AM",
      "commitName": "89005ddf6d5d8b494e4451d16df9fd8996c735a9",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "20/02/15 5:02 AM",
      "commitNameOld": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 18.07,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n                 log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n-            if (!AccessResult.ALLOWED.equals(access)) {\n+            if (AccessResult.ALLOWED !\u003d access) {\n                 log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (root \u003d\u003d null) {\n                log(nameAST, MSG_MISSING_FILE);\n            }\n            else {\n                inPkg \u003d full.getText();\n                currentLeaf \u003d root.locateFinest(inPkg);\n                if (currentLeaf \u003d\u003d null) {\n                    log(nameAST, MSG_UNKNOWN_PKG);\n                }\n            }\n        }\n        else if (currentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(ast);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(ast\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                    inPkg);\n            if (AccessResult.ALLOWED !\u003d access) {\n                log(ast, MSG_DISALLOWED, imp.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, imports package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "2ea1a3dbab2b114cfc4d0baefda80590fbd3d6c0",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST ast)\n     {\n         if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (root \u003d\u003d null) {\n-                log(nameAST, \"import.control.missing.file\");\n+                log(nameAST, MSG_MISSING_FILE);\n             }\n             else {\n                 inPkg \u003d full.getText();\n                 currentLeaf \u003d root.locateFinest(inPkg);\n                 if (currentLeaf \u003d\u003d null) {\n-                    log(nameAST, \"import.control.unknown.pkg\");\n+                    log(nameAST, MSG_UNKNOWN_PKG);\n                 }\n             }\n         }\n         else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n                 imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                     inPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n-                log(ast, \"import.control.disallowed\", imp.getText());\n+                log(ast, MSG_DISALLOWED, imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (root \u003d\u003d null) {\n                log(nameAST, MSG_MISSING_FILE);\n            }\n            else {\n                inPkg \u003d full.getText();\n                currentLeaf \u003d root.locateFinest(inPkg);\n                if (currentLeaf \u003d\u003d null) {\n                    log(nameAST, MSG_UNKNOWN_PKG);\n                }\n            }\n        }\n        else if (currentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(ast);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(ast\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                    inPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(ast, MSG_DISALLOWED, imp.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.78,
          "commitsBetweenForRepo": 410,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-    public void visitToken(final DetailAST aAST)\n+    public void visitToken(final DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n-            if (mRoot \u003d\u003d null) {\n+            if (root \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n-                mInPkg \u003d full.getText();\n-                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n-                if (mCurrentLeaf \u003d\u003d null) {\n+                inPkg \u003d full.getText();\n+                currentLeaf \u003d root.locateFinest(inPkg);\n+                if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, \"import.control.unknown.pkg\");\n                 }\n             }\n         }\n-        else if (mCurrentLeaf !\u003d null) {\n+        else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n-            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n-                imp \u003d FullIdent.createFullIdentBelow(aAST);\n+            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n+                imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n-                imp \u003d FullIdent.createFullIdent(aAST\n+                imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n-            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n-                    mInPkg);\n+            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n+                    inPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n-                log(aAST, \"import.control.disallowed\", imp.getText());\n+                log(ast, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(final DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (root \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                inPkg \u003d full.getText();\n                currentLeaf \u003d root.locateFinest(inPkg);\n                if (currentLeaf \u003d\u003d null) {\n                    log(nameAST, \"import.control.unknown.pkg\");\n                }\n            }\n        }\n        else if (currentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(ast);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(ast\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                    inPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(ast, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST(modifiers-final)]",
            "newValue": "[ast-DetailAST(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.78,
          "commitsBetweenForRepo": 410,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,33 @@\n-    public void visitToken(final DetailAST aAST)\n+    public void visitToken(final DetailAST ast)\n     {\n-        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n-            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n+        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n-            if (mRoot \u003d\u003d null) {\n+            if (root \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n-                mInPkg \u003d full.getText();\n-                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n-                if (mCurrentLeaf \u003d\u003d null) {\n+                inPkg \u003d full.getText();\n+                currentLeaf \u003d root.locateFinest(inPkg);\n+                if (currentLeaf \u003d\u003d null) {\n                     log(nameAST, \"import.control.unknown.pkg\");\n                 }\n             }\n         }\n-        else if (mCurrentLeaf !\u003d null) {\n+        else if (currentLeaf !\u003d null) {\n             final FullIdent imp;\n-            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n-                imp \u003d FullIdent.createFullIdentBelow(aAST);\n+            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n+                imp \u003d FullIdent.createFullIdentBelow(ast);\n             }\n             else {\n                 // know it is a static import\n-                imp \u003d FullIdent.createFullIdent(aAST\n+                imp \u003d FullIdent.createFullIdent(ast\n                         .getFirstChild().getNextSibling());\n             }\n-            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n-                    mInPkg);\n+            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n+                    inPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n-                log(aAST, \"import.control.disallowed\", imp.getText());\n+                log(ast, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(final DetailAST ast)\n    {\n        if (ast.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d ast.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (root \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                inPkg \u003d full.getText();\n                currentLeaf \u003d root.locateFinest(inPkg);\n                if (currentLeaf \u003d\u003d null) {\n                    log(nameAST, \"import.control.unknown.pkg\");\n                }\n            }\n        }\n        else if (currentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (ast.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(ast);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(ast\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d currentLeaf.checkAccess(imp.getText(),\n                    inPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(ast, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(final DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (mRoot \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                mInPkg \u003d full.getText();\n                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n                if (mCurrentLeaf \u003d\u003d null) {\n                    log(nameAST, \"import.control.unknown.pkg\");\n                }\n            }\n        }\n        else if (mCurrentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(aAST);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(aAST\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                    mInPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(aAST, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n                 mInPkg \u003d full.getText();\n                 mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n                 if (mCurrentLeaf \u003d\u003d null) {\n                     log(nameAST, \"import.control.unknown.pkg\");\n                 }\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n                 // know it is a static import\n-                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n+                imp \u003d FullIdent.createFullIdent(aAST\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                     mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (mRoot \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                mInPkg \u003d full.getText();\n                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n                if (mCurrentLeaf \u003d\u003d null) {\n                    log(nameAST, \"import.control.unknown.pkg\");\n                }\n            }\n        }\n        else if (mCurrentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(aAST);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent(aAST\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                    mInPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(aAST, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5": {
      "type": "Ybodychange",
      "commitMessage": "Finished unit testing - now need to do documentation.\n",
      "commitDate": "03/08/05 6:34 AM",
      "commitName": "ec4f7b40c6c777d41b1fe5fe41ac4f85b8b80cc5",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/07/05 5:27 AM",
      "commitNameOld": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.05,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,33 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n                 mInPkg \u003d full.getText();\n                 mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n+                if (mCurrentLeaf \u003d\u003d null) {\n+                    log(nameAST, \"import.control.unknown.pkg\");\n+                }\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n+                // know it is a static import\n                 imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                         .getFirstChild().getNextSibling());\n             }\n             final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                     mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (mRoot \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                mInPkg \u003d full.getText();\n                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n                if (mCurrentLeaf \u003d\u003d null) {\n                    log(nameAST, \"import.control.unknown.pkg\");\n                }\n            }\n        }\n        else if (mCurrentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(aAST);\n            }\n            else {\n                // know it is a static import\n                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                    mInPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(aAST, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "a5d30bf353dde01376d45fb031d9236b11a835d1": {
      "type": "Ybodychange",
      "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
      "commitDate": "31/07/05 5:27 AM",
      "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/07/05 1:44 PM",
      "commitNameOld": "28c5d6f06244f45a5673a3ef5bd0d927b0042496",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.66,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n     public void visitToken(final DetailAST aAST)\n     {\n         if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n             final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n             final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n             if (mRoot \u003d\u003d null) {\n                 log(nameAST, \"import.control.missing.file\");\n             }\n             else {\n-                mCurrentLeaf \u003d mRoot.locateFinest(full.getText());\n+                mInPkg \u003d full.getText();\n+                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n             }\n         }\n         else if (mCurrentLeaf !\u003d null) {\n             final FullIdent imp;\n             if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                 imp \u003d FullIdent.createFullIdentBelow(aAST);\n             }\n             else {\n                 imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                         .getFirstChild().getNextSibling());\n             }\n-            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText());\n+            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n+                    mInPkg);\n             if (!AccessResult.ALLOWED.equals(access)) {\n                 log(aAST, \"import.control.disallowed\", imp.getText());\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (mRoot \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                mInPkg \u003d full.getText();\n                mCurrentLeaf \u003d mRoot.locateFinest(mInPkg);\n            }\n        }\n        else if (mCurrentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(aAST);\n            }\n            else {\n                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText(),\n                    mInPkg);\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(aAST, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java",
      "extendedDetails": {}
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": "27/07/05 1:29 PM",
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,27 @@\n+    public void visitToken(final DetailAST aAST)\n+    {\n+        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n+            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n+            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n+            if (mRoot \u003d\u003d null) {\n+                log(nameAST, \"import.control.missing.file\");\n+            }\n+            else {\n+                mCurrentLeaf \u003d mRoot.locateFinest(full.getText());\n+            }\n+        }\n+        else if (mCurrentLeaf !\u003d null) {\n+            final FullIdent imp;\n+            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n+                imp \u003d FullIdent.createFullIdentBelow(aAST);\n+            }\n+            else {\n+                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n+                        .getFirstChild().getNextSibling());\n+            }\n+            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText());\n+            if (!AccessResult.ALLOWED.equals(access)) {\n+                log(aAST, \"import.control.disallowed\", imp.getText());\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(final DetailAST aAST)\n    {\n        if (aAST.getType() \u003d\u003d TokenTypes.PACKAGE_DEF) {\n            final DetailAST nameAST \u003d aAST.getLastChild().getPreviousSibling();\n            final FullIdent full \u003d FullIdent.createFullIdent(nameAST);\n            if (mRoot \u003d\u003d null) {\n                log(nameAST, \"import.control.missing.file\");\n            }\n            else {\n                mCurrentLeaf \u003d mRoot.locateFinest(full.getText());\n            }\n        }\n        else if (mCurrentLeaf !\u003d null) {\n            final FullIdent imp;\n            if (aAST.getType() \u003d\u003d TokenTypes.IMPORT) {\n                imp \u003d FullIdent.createFullIdentBelow(aAST);\n            }\n            else {\n                imp \u003d FullIdent.createFullIdent((DetailAST) aAST\n                        .getFirstChild().getNextSibling());\n            }\n            final AccessResult access \u003d mCurrentLeaf.checkAccess(imp.getText());\n            if (!AccessResult.ALLOWED.equals(access)) {\n                log(aAST, \"import.control.disallowed\", imp.getText());\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/ImportControlCheck.java"
    }
  }
}