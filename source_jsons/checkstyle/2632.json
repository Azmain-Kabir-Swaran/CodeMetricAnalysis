{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SlistHandler.java",
  "functionName": "getSuggestedChildIndent",
  "functionId": "getSuggestedChildIndent___child-AbstractExpressionHandler",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
  "functionStartLine": 71,
  "functionEndLine": 93,
  "numCommitsSeen": 87,
  "timeTaken": 3007,
  "changeHistory": [
    "8174ea2a778fbd3e75c790f89f83f979ad8e3c9a",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab",
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "ab74399c2d18b8881c4a0c13155b7afce869eebf",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c",
    "7f7db38a097a95c264307123924779380fb40077",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "8174ea2a778fbd3e75c790f89f83f979ad8e3c9a": "Ybodychange",
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": "Ybodychange",
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ymultichange(Yrename,Ybodychange)",
    "ab74399c2d18b8881c4a0c13155b7afce869eebf": "Ymultichange(Yrename,Ybodychange)",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yparameterchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c": "Ybodychange",
    "7f7db38a097a95c264307123924779380fb40077": "Yreturntypechange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymultichange(Ymovefromfile,Ybodychange)",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8174ea2a778fbd3e75c790f89f83f979ad8e3c9a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: ReturnCount: enforce max\u003d1 over checkstyle code\n",
      "commitDate": "22/08/17 5:00 AM",
      "commitName": "8174ea2a778fbd3e75c790f89f83f979ad8e3c9a",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "17/02/17 2:04 PM",
      "commitNameOld": "6e8d1e06728b7defbd734253b3818a33676b62bc",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 185.58,
      "commitsBetweenForRepo": 736,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n+        final IndentLevel result;\n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || child instanceof SlistHandler\n                 \u0026\u0026 getParent() instanceof CaseHandler) {\n-            return getParent().getSuggestedChildIndent(child);\n+            result \u003d getParent().getSuggestedChildIndent(child);\n         }\n-        return super.getSuggestedChildIndent(child);\n+        else {\n+            result \u003d super.getSuggestedChildIndent(child);\n+        }\n+        return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        final IndentLevel result;\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || child instanceof SlistHandler\n                \u0026\u0026 getParent() instanceof CaseHandler) {\n            result \u003d getParent().getSuggestedChildIndent(child);\n        }\n        else {\n            result \u003d super.getSuggestedChildIndent(child);\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {}
    },
    "6ee4a0f805d528cdee03cfc175502d15b5722dab": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2661: Enforce LogicConditionNeedOptimizationCheck of sevntu-checkstyle over Checkstyle source code\n",
      "commitDate": "24/12/15 1:59 PM",
      "commitName": "6ee4a0f805d528cdee03cfc175502d15b5722dab",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "16/12/15 8:16 AM",
      "commitNameOld": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.24,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n     public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n-            || getParent() instanceof CaseHandler\n-                \u0026\u0026 child instanceof SlistHandler) {\n+            || child instanceof SlistHandler\n+                \u0026\u0026 getParent() instanceof CaseHandler) {\n             return getParent().getSuggestedChildIndent(child);\n         }\n         return super.getSuggestedChildIndent(child);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || child instanceof SlistHandler\n                \u0026\u0026 getParent() instanceof CaseHandler) {\n            return getParent().getSuggestedChildIndent(child);\n        }\n        return super.getSuggestedChildIndent(child);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {}
    },
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": "16/12/15 8:16 AM",
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/12/15 10:53 AM",
          "commitNameOld": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 11.89,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || getParent() instanceof CaseHandler\n                 \u0026\u0026 child instanceof SlistHandler) {\n-            return getParent().getSuggestedChildLevel(child);\n+            return getParent().getSuggestedChildIndent(child);\n         }\n-        return super.getSuggestedChildLevel(child);\n+        return super.getSuggestedChildIndent(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler) {\n            return getParent().getSuggestedChildIndent(child);\n        }\n        return super.getSuggestedChildIndent(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {
            "oldValue": "getSuggestedChildLevel",
            "newValue": "getSuggestedChildIndent"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "04/12/15 10:53 AM",
          "commitNameOld": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 11.89,
          "commitsBetweenForRepo": 74,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || getParent() instanceof CaseHandler\n                 \u0026\u0026 child instanceof SlistHandler) {\n-            return getParent().getSuggestedChildLevel(child);\n+            return getParent().getSuggestedChildIndent(child);\n         }\n-        return super.getSuggestedChildLevel(child);\n+        return super.getSuggestedChildIndent(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildIndent(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler) {\n            return getParent().getSuggestedChildIndent(child);\n        }\n        return super.getSuggestedChildIndent(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "ab74399c2d18b8881c4a0c13155b7afce869eebf": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": "04/12/15 10:53 AM",
      "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "04/12/15 10:53 AM",
          "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/15 6:02 AM",
          "commitNameOld": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 75.24,
          "commitsBetweenForRepo": 419,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || getParent() instanceof CaseHandler\n                 \u0026\u0026 child instanceof SlistHandler) {\n-            return getParent().suggestedChildLevel(child);\n+            return getParent().getSuggestedChildLevel(child);\n         }\n-        return super.suggestedChildLevel(child);\n+        return super.getSuggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler) {\n            return getParent().getSuggestedChildLevel(child);\n        }\n        return super.getSuggestedChildLevel(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {
            "oldValue": "suggestedChildLevel",
            "newValue": "getSuggestedChildLevel"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "04/12/15 10:53 AM",
          "commitName": "ab74399c2d18b8881c4a0c13155b7afce869eebf",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/09/15 6:02 AM",
          "commitNameOld": "3edd1b53a5d8d407fd33d8c514db8bc1c7274fe5",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 75.24,
          "commitsBetweenForRepo": 419,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n+    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || getParent() instanceof CaseHandler\n                 \u0026\u0026 child instanceof SlistHandler) {\n-            return getParent().suggestedChildLevel(child);\n+            return getParent().getSuggestedChildLevel(child);\n         }\n-        return super.suggestedChildLevel(child);\n+        return super.getSuggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel getSuggestedChildLevel(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler) {\n            return getParent().getSuggestedChildLevel(child);\n        }\n        return super.getSuggestedChildLevel(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yparameterchange",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 32.25,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler child) {\n+    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler)\n             || getParent() instanceof CaseHandler\n                 \u0026\u0026 child instanceof SlistHandler) {\n             return getParent().suggestedChildLevel(child);\n         }\n         return super.suggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(AbstractExpressionHandler child) {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler) {\n            return getParent().suggestedChildLevel(child);\n        }\n        return super.suggestedChildLevel(child);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {
        "oldValue": "[child-ExpressionHandler]",
        "newValue": "[child-AbstractExpressionHandler]"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler child)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n-        if (((getParent() instanceof BlockParentHandler)\n-                \u0026\u0026 !(getParent() instanceof SlistHandler))\n-            || ((getParent() instanceof CaseHandler)\n-                \u0026\u0026 (child instanceof SlistHandler)))\n+        if (getParent() instanceof BlockParentHandler\n+                \u0026\u0026 !(getParent() instanceof SlistHandler)\n+            || getParent() instanceof CaseHandler\n+                \u0026\u0026 child instanceof SlistHandler)\n         {\n             return getParent().suggestedChildLevel(child);\n         }\n         return super.suggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler)\n            || getParent() instanceof CaseHandler\n                \u0026\u0026 child instanceof SlistHandler)\n        {\n            return getParent().suggestedChildLevel(child);\n        }\n        return super.suggestedChildLevel(child);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {}
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/11/14 2:28 PM",
          "commitNameOld": "82c3f19cdcb29b5936be2fe186b4cf9bee372bc4",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 62.67,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (((getParent() instanceof BlockParentHandler)\n                 \u0026\u0026 !(getParent() instanceof SlistHandler))\n             || ((getParent() instanceof CaseHandler)\n-                \u0026\u0026 (aChild instanceof SlistHandler)))\n+                \u0026\u0026 (child instanceof SlistHandler)))\n         {\n-            return getParent().suggestedChildLevel(aChild);\n+            return getParent().suggestedChildLevel(child);\n         }\n-        return super.suggestedChildLevel(aChild);\n+        return super.suggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (((getParent() instanceof BlockParentHandler)\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || ((getParent() instanceof CaseHandler)\n                \u0026\u0026 (child instanceof SlistHandler)))\n        {\n            return getParent().suggestedChildLevel(child);\n        }\n        return super.suggestedChildLevel(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {
            "oldValue": "[aChild-ExpressionHandler]",
            "newValue": "[child-ExpressionHandler]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "17/11/14 2:28 PM",
          "commitNameOld": "82c3f19cdcb29b5936be2fe186b4cf9bee372bc4",
          "commitAuthorOld": "maxvetrenko",
          "daysBetweenCommits": 62.67,
          "commitsBetweenForRepo": 212,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if (((getParent() instanceof BlockParentHandler)\n                 \u0026\u0026 !(getParent() instanceof SlistHandler))\n             || ((getParent() instanceof CaseHandler)\n-                \u0026\u0026 (aChild instanceof SlistHandler)))\n+                \u0026\u0026 (child instanceof SlistHandler)))\n         {\n-            return getParent().suggestedChildLevel(aChild);\n+            return getParent().suggestedChildLevel(child);\n         }\n-        return super.suggestedChildLevel(aChild);\n+        return super.suggestedChildLevel(child);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler child)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (((getParent() instanceof BlockParentHandler)\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || ((getParent() instanceof CaseHandler)\n                \u0026\u0026 (child instanceof SlistHandler)))\n        {\n            return getParent().suggestedChildLevel(child);\n        }\n        return super.suggestedChildLevel(child);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (((getParent() instanceof BlockParentHandler)\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || ((getParent() instanceof CaseHandler)\n                \u0026\u0026 (aChild instanceof SlistHandler)))\n        {\n            return getParent().suggestedChildLevel(aChild);\n        }\n        return super.suggestedChildLevel(aChild);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java"
      }
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 543.69,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n-        if ((getParent() instanceof BlockParentHandler\n+        if (((getParent() instanceof BlockParentHandler)\n                 \u0026\u0026 !(getParent() instanceof SlistHandler))\n-            || (getParent() instanceof CaseHandler\n-                \u0026\u0026 aChild instanceof SlistHandler))\n+            || ((getParent() instanceof CaseHandler)\n+                \u0026\u0026 (aChild instanceof SlistHandler)))\n         {\n             return getParent().suggestedChildLevel(aChild);\n         }\n         return super.suggestedChildLevel(aChild);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if (((getParent() instanceof BlockParentHandler)\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || ((getParent() instanceof CaseHandler)\n                \u0026\u0026 (aChild instanceof SlistHandler)))\n        {\n            return getParent().suggestedChildLevel(aChild);\n        }\n        return super.suggestedChildLevel(aChild);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {}
    },
    "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c": {
      "type": "Ybodychange",
      "commitMessage": "General cleanup.\n",
      "commitDate": "21/07/04 4:35 AM",
      "commitName": "80c8e1c7a8f32c0dd263fdd30d9d87ade317f51c",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/01/04 1:10 PM",
      "commitNameOld": "5670252b46f4915b276e647fa000361915eb4ff4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 188.6,
      "commitsBetweenForRepo": 119,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n     public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if ((getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler))\n             || (getParent() instanceof CaseHandler\n                 \u0026\u0026 aChild instanceof SlistHandler))\n         {\n             return getParent().suggestedChildLevel(aChild);\n         }\n-        else {\n-            return super.suggestedChildLevel(aChild);\n-        }\n+        return super.suggestedChildLevel(aChild);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if ((getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || (getParent() instanceof CaseHandler\n                \u0026\u0026 aChild instanceof SlistHandler))\n        {\n            return getParent().suggestedChildLevel(aChild);\n        }\n        return super.suggestedChildLevel(aChild);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {}
    },
    "7f7db38a097a95c264307123924779380fb40077": {
      "type": "Yreturntypechange",
      "commitMessage": "IndentationCheck: Some refactoring and fixes for some TODOs and bugs.\n",
      "commitDate": "12/08/03 12:19 PM",
      "commitName": "7f7db38a097a95c264307123924779380fb40077",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "14/07/03 3:24 AM",
      "commitNameOld": "e55435125ea57e96f0bf876dd13e78b0ae02cd52",
      "commitAuthorOld": "Rick Giles",
      "daysBetweenCommits": 29.37,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-    public int suggestedChildLevel(ExpressionHandler aChild)\n+    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n     {\n         // this is:\n         //  switch (var) {\n         //     case 3: {\n         //        break;\n         //     }\n         //  }\n         //  ... the case SLIST is followed by a user-created SLIST and\n         //  preceded by a switch\n \n         // if our parent is a block handler we want to be transparent\n         if ((getParent() instanceof BlockParentHandler\n                 \u0026\u0026 !(getParent() instanceof SlistHandler))\n             || (getParent() instanceof CaseHandler\n                 \u0026\u0026 aChild instanceof SlistHandler))\n         {\n             return getParent().suggestedChildLevel(aChild);\n         }\n         else {\n             return super.suggestedChildLevel(aChild);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public IndentLevel suggestedChildLevel(ExpressionHandler aChild)\n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if ((getParent() instanceof BlockParentHandler\n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || (getParent() instanceof CaseHandler\n                \u0026\u0026 aChild instanceof SlistHandler))\n        {\n            return getParent().suggestedChildLevel(aChild);\n        }\n        else {\n            return super.suggestedChildLevel(aChild);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
      "extendedDetails": {
        "oldValue": "int",
        "newValue": "IndentLevel"
      }
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": "11/05/03 12:53 AM",
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
          "commitDate": "11/05/03 12:53 AM",
          "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "11/05/03 12:31 AM",
          "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-        public int suggestedChildLevel(ExpressionHandler aChild) \n-        {\n-            // for whatever reason a method that crosses lines, like asList\n-            // here:\n-            //            System.out.println(\"methods are: \" + Arrays.asList(\n-            //                new String[] {\"method\"}).toString());\n-            // will not have the right line num, so just get the child name\n+    public int suggestedChildLevel(ExpressionHandler aChild) \n+    {\n+        // this is:\n+        //  switch (var) {\n+        //     case 3: {\n+        //        break;\n+        //     }\n+        //  }\n+        //  ... the case SLIST is followed by a user-created SLIST and\n+        //  preceeded by a switch\n \n-            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n-            int indentLevel \u003d getLineStart(first);\n-            if (aChild instanceof MethodCallHandler) {\n-                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n-                    (DetailAST) mMainAst.getFirstChild())) \n-                {\n-                    indentLevel +\u003d mIndentationAmount;\n-                }\n-                \n-            }\n-            return indentLevel;                    \n-        }\n\\ No newline at end of file\n+        // if our parent is a block handler we want to be transparent\n+        if ((getParent() instanceof BlockParentHandler \n+                \u0026\u0026 !(getParent() instanceof SlistHandler))\n+            || (getParent() instanceof CaseHandler \n+                \u0026\u0026 aChild instanceof SlistHandler)) \n+        {\n+            return getParent().suggestedChildLevel(aChild);\n+        } \n+        else {\n+            return super.suggestedChildLevel(aChild);\n+        }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int suggestedChildLevel(ExpressionHandler aChild) \n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceeded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if ((getParent() instanceof BlockParentHandler \n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || (getParent() instanceof CaseHandler \n                \u0026\u0026 aChild instanceof SlistHandler)) \n        {\n            return getParent().suggestedChildLevel(aChild);\n        } \n        else {\n            return super.suggestedChildLevel(aChild);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
            "oldMethodName": "suggestedChildLevel",
            "newMethodName": "suggestedChildLevel"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
          "commitDate": "11/05/03 12:53 AM",
          "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
          "commitAuthor": "Oleg Sukhodolsky",
          "commitDateOld": "11/05/03 12:31 AM",
          "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,23 @@\n-        public int suggestedChildLevel(ExpressionHandler aChild) \n-        {\n-            // for whatever reason a method that crosses lines, like asList\n-            // here:\n-            //            System.out.println(\"methods are: \" + Arrays.asList(\n-            //                new String[] {\"method\"}).toString());\n-            // will not have the right line num, so just get the child name\n+    public int suggestedChildLevel(ExpressionHandler aChild) \n+    {\n+        // this is:\n+        //  switch (var) {\n+        //     case 3: {\n+        //        break;\n+        //     }\n+        //  }\n+        //  ... the case SLIST is followed by a user-created SLIST and\n+        //  preceeded by a switch\n \n-            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n-            int indentLevel \u003d getLineStart(first);\n-            if (aChild instanceof MethodCallHandler) {\n-                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n-                    (DetailAST) mMainAst.getFirstChild())) \n-                {\n-                    indentLevel +\u003d mIndentationAmount;\n-                }\n-                \n-            }\n-            return indentLevel;                    \n-        }\n\\ No newline at end of file\n+        // if our parent is a block handler we want to be transparent\n+        if ((getParent() instanceof BlockParentHandler \n+                \u0026\u0026 !(getParent() instanceof SlistHandler))\n+            || (getParent() instanceof CaseHandler \n+                \u0026\u0026 aChild instanceof SlistHandler)) \n+        {\n+            return getParent().suggestedChildLevel(aChild);\n+        } \n+        else {\n+            return super.suggestedChildLevel(aChild);\n+        }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public int suggestedChildLevel(ExpressionHandler aChild) \n    {\n        // this is:\n        //  switch (var) {\n        //     case 3: {\n        //        break;\n        //     }\n        //  }\n        //  ... the case SLIST is followed by a user-created SLIST and\n        //  preceeded by a switch\n\n        // if our parent is a block handler we want to be transparent\n        if ((getParent() instanceof BlockParentHandler \n                \u0026\u0026 !(getParent() instanceof SlistHandler))\n            || (getParent() instanceof CaseHandler \n                \u0026\u0026 aChild instanceof SlistHandler)) \n        {\n            return getParent().suggestedChildLevel(aChild);\n        } \n        else {\n            return super.suggestedChildLevel(aChild);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/SlistHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": "24/04/03 10:21 PM",
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,20 @@\n+        public int suggestedChildLevel(ExpressionHandler aChild) \n+        {\n+            // for whatever reason a method that crosses lines, like asList\n+            // here:\n+            //            System.out.println(\"methods are: \" + Arrays.asList(\n+            //                new String[] {\"method\"}).toString());\n+            // will not have the right line num, so just get the child name\n+\n+            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n+            int indentLevel \u003d getLineStart(first);\n+            if (aChild instanceof MethodCallHandler) {\n+                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n+                    (DetailAST) mMainAst.getFirstChild())) \n+                {\n+                    indentLevel +\u003d mIndentationAmount;\n+                }\n+                \n+            }\n+            return indentLevel;                    \n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public int suggestedChildLevel(ExpressionHandler aChild) \n        {\n            // for whatever reason a method that crosses lines, like asList\n            // here:\n            //            System.out.println(\"methods are: \" + Arrays.asList(\n            //                new String[] {\"method\"}).toString());\n            // will not have the right line num, so just get the child name\n\n            DetailAST first \u003d (DetailAST) mMainAst.getFirstChild();\n            int indentLevel \u003d getLineStart(first);\n            if (aChild instanceof MethodCallHandler) {\n                if (!areOnSameLine((DetailAST) aChild.mMainAst.getFirstChild(), \n                    (DetailAST) mMainAst.getFirstChild())) \n                {\n                    indentLevel +\u003d mIndentationAmount;\n                }\n                \n            }\n            return indentLevel;                    \n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java"
    }
  }
}