{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MethodCountCheck.java",
  "functionName": "checkCounters",
  "functionId": "checkCounters___counter-MethodCounter__ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
  "functionStartLine": 270,
  "functionEndLine": 280,
  "numCommitsSeen": 67,
  "timeTaken": 1941,
  "changeHistory": [
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "94ea38f6cf5179e6e9998b864664df32349e42e9",
    "45b1afd66692e017852016b7148c44ee4760f5d6",
    "fead6ef45a093f2a4ffbff013802959c89e7a6c6",
    "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a"
  ],
  "changeHistoryShort": {
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2": "Ybodychange",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "94ea38f6cf5179e6e9998b864664df32349e42e9": "Yfilerename",
    "45b1afd66692e017852016b7148c44ee4760f5d6": "Ybodychange",
    "fead6ef45a093f2a4ffbff013802959c89e7a6c6": "Ymultichange(Yparameterchange,Ybodychange)",
    "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2": {
      "type": "Ybodychange",
      "commitMessage": "Refactored UTs, sizes package, issue #537\n",
      "commitDate": "20/02/15 5:02 AM",
      "commitName": "0dc48c7c567555a1efe8fb9cbf7ba1812034a5f2",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     private void checkCounters(MethodCounter counter, DetailAST ast)\n     {\n         checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n-                 \"too.many.privateMethods\", ast);\n+                 MSG_PRIVATE_METHODS, ast);\n         checkMax(maxPackage, counter.value(Scope.PACKAGE),\n-                 \"too.many.packageMethods\", ast);\n+                 MSG_PACKAGE_METHODS, ast);\n         checkMax(maxProtected, counter.value(Scope.PROTECTED),\n-                 \"too.many.protectedMethods\", ast);\n+                 MSG_PROTECTED_METHODS, ast);\n         checkMax(maxPublic, counter.value(Scope.PUBLIC),\n-                 \"too.many.publicMethods\", ast);\n-        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);\n+                 MSG_PUBLIC_METHODS, ast);\n+        checkMax(maxTotal, counter.getTotal(), MSG_MANY_METHODS, ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkCounters(MethodCounter counter, DetailAST ast)\n    {\n        checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n                 MSG_PRIVATE_METHODS, ast);\n        checkMax(maxPackage, counter.value(Scope.PACKAGE),\n                 MSG_PACKAGE_METHODS, ast);\n        checkMax(maxProtected, counter.value(Scope.PROTECTED),\n                 MSG_PROTECTED_METHODS, ast);\n        checkMax(maxPublic, counter.value(Scope.PUBLIC),\n                 MSG_PUBLIC_METHODS, ast);\n        checkMax(maxTotal, counter.getTotal(), MSG_MANY_METHODS, ast);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
      "extendedDetails": {}
    },
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, sizes, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 464,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n+    private void checkCounters(MethodCounter counter, DetailAST ast)\n     {\n-        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n-                 \"too.many.privateMethods\", aAst);\n-        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n-                 \"too.many.packageMethods\", aAst);\n-        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n-                 \"too.many.protectedMethods\", aAst);\n-        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n-                 \"too.many.publicMethods\", aAst);\n-        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n+        checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n+                 \"too.many.privateMethods\", ast);\n+        checkMax(maxPackage, counter.value(Scope.PACKAGE),\n+                 \"too.many.packageMethods\", ast);\n+        checkMax(maxProtected, counter.value(Scope.PROTECTED),\n+                 \"too.many.protectedMethods\", ast);\n+        checkMax(maxPublic, counter.value(Scope.PUBLIC),\n+                 \"too.many.publicMethods\", ast);\n+        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkCounters(MethodCounter counter, DetailAST ast)\n    {\n        checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", ast);\n        checkMax(maxPackage, counter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", ast);\n        checkMax(maxProtected, counter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", ast);\n        checkMax(maxPublic, counter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", ast);\n        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
          "extendedDetails": {
            "oldValue": "[aCounter-MethodCounter, aAst-DetailAST]",
            "newValue": "[counter-MethodCounter, ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.88,
          "commitsBetweenForRepo": 464,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,12 @@\n-    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n+    private void checkCounters(MethodCounter counter, DetailAST ast)\n     {\n-        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n-                 \"too.many.privateMethods\", aAst);\n-        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n-                 \"too.many.packageMethods\", aAst);\n-        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n-                 \"too.many.protectedMethods\", aAst);\n-        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n-                 \"too.many.publicMethods\", aAst);\n-        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n+        checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n+                 \"too.many.privateMethods\", ast);\n+        checkMax(maxPackage, counter.value(Scope.PACKAGE),\n+                 \"too.many.packageMethods\", ast);\n+        checkMax(maxProtected, counter.value(Scope.PROTECTED),\n+                 \"too.many.protectedMethods\", ast);\n+        checkMax(maxPublic, counter.value(Scope.PUBLIC),\n+                 \"too.many.publicMethods\", ast);\n+        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkCounters(MethodCounter counter, DetailAST ast)\n    {\n        checkMax(maxPrivate, counter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", ast);\n        checkMax(maxPackage, counter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", ast);\n        checkMax(maxProtected, counter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", ast);\n        checkMax(maxPublic, counter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", ast);\n        checkMax(maxTotal, counter.getTotal(), \"too.many.methods\", ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n    {\n        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", aAst);\n        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", aAst);\n        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", aAst);\n        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", aAst);\n        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java"
      }
    },
    "94ea38f6cf5179e6e9998b864664df32349e42e9": {
      "type": "Yfilerename",
      "commitMessage": "Move to a better home. It is a better fit.\n",
      "commitDate": "30/09/10 5:47 PM",
      "commitName": "94ea38f6cf5179e6e9998b864664df32349e42e9",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "30/09/10 5:27 PM",
      "commitNameOld": "5c6e03a868c0f756ccd3bb9b796febbbbf25bd4e",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n    {\n        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", aAst);\n        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", aAst);\n        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", aAst);\n        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", aAst);\n        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/MethodCountCheck.java"
      }
    },
    "45b1afd66692e017852016b7148c44ee4760f5d6": {
      "type": "Ybodychange",
      "commitMessage": "Wrote the unit tests, and found a potential bug. Well worth it :-)\n",
      "commitDate": "30/09/10 5:22 AM",
      "commitName": "45b1afd66692e017852016b7148c44ee4760f5d6",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "30/09/10 12:09 AM",
      "commitNameOld": "5320065461ca38393ab2402c7402cc8f65c331d4",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n     private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n     {\n         checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                  \"too.many.privateMethods\", aAst);\n         checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                  \"too.many.packageMethods\", aAst);\n         checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                  \"too.many.protectedMethods\", aAst);\n         checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                  \"too.many.publicMethods\", aAst);\n+        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n    {\n        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", aAst);\n        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", aAst);\n        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", aAst);\n        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", aAst);\n        checkMax(mMaxTotal, aCounter.getTotal(), \"too.many.methods\", aAst);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java",
      "extendedDetails": {}
    },
    "fead6ef45a093f2a4ffbff013802959c89e7a6c6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "A version ready for testing.\n",
      "commitDate": "30/09/10 12:02 AM",
      "commitName": "fead6ef45a093f2a4ffbff013802959c89e7a6c6",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "A version ready for testing.\n",
          "commitDate": "30/09/10 12:02 AM",
          "commitName": "fead6ef45a093f2a4ffbff013802959c89e7a6c6",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "29/09/10 11:20 PM",
          "commitNameOld": "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,11 @@\n-    private void checkCounters(DetailAST aAst)\n+    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n     {\n-        final MethodCounter actualCounter \u003d mCounters.peek();\n-        if (mCheckDefaultMethods) {\n-            if (actualCounter.value(Scope.PACKAGE) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.defaultMethods\",\n-                    actualCounter.value(Scope.PACKAGE), mMax);\n-            }\n-        }\n-        if (mCheckPrivateMethods) {\n-            if (actualCounter.value(Scope.PRIVATE) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.privateMethods\",\n-                    actualCounter.value(Scope.PRIVATE), mMax);\n-            }\n-        }\n-        if (mCheckProtectedMethods) {\n-            if (actualCounter.value(Scope.PROTECTED) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.protectedMethods\",\n-                    actualCounter.value(Scope.PROTECTED), mMax);\n-            }\n-        }\n-        if (mCheckPublicMethods) {\n-            if (actualCounter.value(Scope.PUBLIC) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.publicMethods\",\n-                    actualCounter.value(Scope.PUBLIC), mMax);\n-            }\n-        }\n+        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n+                 \"too.many.privateMethods\", aAst);\n+        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n+                 \"too.many.packageMethods\", aAst);\n+        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n+                 \"too.many.protectedMethods\", aAst);\n+        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n+                 \"too.many.publicMethods\", aAst);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n    {\n        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", aAst);\n        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", aAst);\n        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", aAst);\n        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", aAst);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java",
          "extendedDetails": {
            "oldValue": "[aAst-DetailAST]",
            "newValue": "[aCounter-MethodCounter, aAst-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "A version ready for testing.\n",
          "commitDate": "30/09/10 12:02 AM",
          "commitName": "fead6ef45a093f2a4ffbff013802959c89e7a6c6",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "29/09/10 11:20 PM",
          "commitNameOld": "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,11 @@\n-    private void checkCounters(DetailAST aAst)\n+    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n     {\n-        final MethodCounter actualCounter \u003d mCounters.peek();\n-        if (mCheckDefaultMethods) {\n-            if (actualCounter.value(Scope.PACKAGE) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.defaultMethods\",\n-                    actualCounter.value(Scope.PACKAGE), mMax);\n-            }\n-        }\n-        if (mCheckPrivateMethods) {\n-            if (actualCounter.value(Scope.PRIVATE) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.privateMethods\",\n-                    actualCounter.value(Scope.PRIVATE), mMax);\n-            }\n-        }\n-        if (mCheckProtectedMethods) {\n-            if (actualCounter.value(Scope.PROTECTED) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.protectedMethods\",\n-                    actualCounter.value(Scope.PROTECTED), mMax);\n-            }\n-        }\n-        if (mCheckPublicMethods) {\n-            if (actualCounter.value(Scope.PUBLIC) \u003e mMax) {\n-                log(aAst.getLineNo(), \"too.many.publicMethods\",\n-                    actualCounter.value(Scope.PUBLIC), mMax);\n-            }\n-        }\n+        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n+                 \"too.many.privateMethods\", aAst);\n+        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n+                 \"too.many.packageMethods\", aAst);\n+        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n+                 \"too.many.protectedMethods\", aAst);\n+        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n+                 \"too.many.publicMethods\", aAst);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void checkCounters(MethodCounter aCounter, DetailAST aAst)\n    {\n        checkMax(mMaxPrivate, aCounter.value(Scope.PRIVATE),\n                 \"too.many.privateMethods\", aAst);\n        checkMax(mMaxPackage, aCounter.value(Scope.PACKAGE),\n                 \"too.many.packageMethods\", aAst);\n        checkMax(mMaxProtected, aCounter.value(Scope.PROTECTED),\n                 \"too.many.protectedMethods\", aAst);\n        checkMax(mMaxPublic, aCounter.value(Scope.PUBLIC),\n                 \"too.many.publicMethods\", aAst);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a": {
      "type": "Yintroduced",
      "commitMessage": "Record a first cut.\n",
      "commitDate": "29/09/10 11:20 PM",
      "commitName": "afa1c0d8cd66b51f02b750594cbb9c9855e3e74a",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,28 @@\n+    private void checkCounters(DetailAST aAst)\n+    {\n+        final MethodCounter actualCounter \u003d mCounters.peek();\n+        if (mCheckDefaultMethods) {\n+            if (actualCounter.value(Scope.PACKAGE) \u003e mMax) {\n+                log(aAst.getLineNo(), \"too.many.defaultMethods\",\n+                    actualCounter.value(Scope.PACKAGE), mMax);\n+            }\n+        }\n+        if (mCheckPrivateMethods) {\n+            if (actualCounter.value(Scope.PRIVATE) \u003e mMax) {\n+                log(aAst.getLineNo(), \"too.many.privateMethods\",\n+                    actualCounter.value(Scope.PRIVATE), mMax);\n+            }\n+        }\n+        if (mCheckProtectedMethods) {\n+            if (actualCounter.value(Scope.PROTECTED) \u003e mMax) {\n+                log(aAst.getLineNo(), \"too.many.protectedMethods\",\n+                    actualCounter.value(Scope.PROTECTED), mMax);\n+            }\n+        }\n+        if (mCheckPublicMethods) {\n+            if (actualCounter.value(Scope.PUBLIC) \u003e mMax) {\n+                log(aAst.getLineNo(), \"too.many.publicMethods\",\n+                    actualCounter.value(Scope.PUBLIC), mMax);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkCounters(DetailAST aAst)\n    {\n        final MethodCounter actualCounter \u003d mCounters.peek();\n        if (mCheckDefaultMethods) {\n            if (actualCounter.value(Scope.PACKAGE) \u003e mMax) {\n                log(aAst.getLineNo(), \"too.many.defaultMethods\",\n                    actualCounter.value(Scope.PACKAGE), mMax);\n            }\n        }\n        if (mCheckPrivateMethods) {\n            if (actualCounter.value(Scope.PRIVATE) \u003e mMax) {\n                log(aAst.getLineNo(), \"too.many.privateMethods\",\n                    actualCounter.value(Scope.PRIVATE), mMax);\n            }\n        }\n        if (mCheckProtectedMethods) {\n            if (actualCounter.value(Scope.PROTECTED) \u003e mMax) {\n                log(aAst.getLineNo(), \"too.many.protectedMethods\",\n                    actualCounter.value(Scope.PROTECTED), mMax);\n            }\n        }\n        if (mCheckPublicMethods) {\n            if (actualCounter.value(Scope.PUBLIC) \u003e mMax) {\n                log(aAst.getLineNo(), \"too.many.publicMethods\",\n                    actualCounter.value(Scope.PUBLIC), mMax);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/MethodCountCheck.java"
    }
  }
}