{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Checker.java",
  "functionName": "getExternalResourceLocations",
  "functionId": "getExternalResourceLocations",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionStartLine": 242,
  "functionEndLine": 257,
  "numCommitsSeen": 98,
  "timeTaken": 1332,
  "changeHistory": [
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "de022d2434e58dd633fd50a7f9bb50565a8767b5",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7"
  ],
  "changeHistoryShort": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": "Ybodychange",
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "14/09/16 1:58 PM",
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private Set\u003cString\u003e getExternalResourceLocations() {\n-        final Set\u003cString\u003e externalResources \u003d Sets.newHashSet();\n+        final Set\u003cString\u003e externalResources \u003d new HashSet\u003c\u003e();\n         fileSetChecks.stream().filter(check -\u003e check instanceof ExternalResourceHolder)\n             .forEach(check -\u003e {\n                 final Set\u003cString\u003e locations \u003d\n                     ((ExternalResourceHolder) check).getExternalResourceLocations();\n                 externalResources.addAll(locations);\n             });\n         filters.getFilters().stream().filter(filter -\u003e filter instanceof ExternalResourceHolder)\n             .forEach(filter -\u003e {\n                 final Set\u003cString\u003e locations \u003d\n                     ((ExternalResourceHolder) filter).getExternalResourceLocations();\n                 externalResources.addAll(locations);\n             });\n         return externalResources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e getExternalResourceLocations() {\n        final Set\u003cString\u003e externalResources \u003d new HashSet\u003c\u003e();\n        fileSetChecks.stream().filter(check -\u003e check instanceof ExternalResourceHolder)\n            .forEach(check -\u003e {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) check).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            });\n        filters.getFilters().stream().filter(filter -\u003e filter instanceof ExternalResourceHolder)\n            .forEach(filter -\u003e {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) filter).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            });\n        return externalResources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "de022d2434e58dd633fd50a7f9bb50565a8767b5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3233: Resolve IntelijIdea inspection violations for java8 migration (#3434)\n\n",
      "commitDate": "08/09/16 5:30 AM",
      "commitName": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "commitAuthor": "Mariia Mykhailova",
      "commitDateOld": "27/05/16 6:42 AM",
      "commitNameOld": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 103.95,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n     private Set\u003cString\u003e getExternalResourceLocations() {\n         final Set\u003cString\u003e externalResources \u003d Sets.newHashSet();\n-        for (FileSetCheck check : fileSetChecks) {\n-            if (check instanceof ExternalResourceHolder) {\n+        fileSetChecks.stream().filter(check -\u003e check instanceof ExternalResourceHolder)\n+            .forEach(check -\u003e {\n                 final Set\u003cString\u003e locations \u003d\n                     ((ExternalResourceHolder) check).getExternalResourceLocations();\n                 externalResources.addAll(locations);\n-            }\n-        }\n-        for (Filter filter : filters.getFilters()) {\n-            if (filter instanceof ExternalResourceHolder) {\n+            });\n+        filters.getFilters().stream().filter(filter -\u003e filter instanceof ExternalResourceHolder)\n+            .forEach(filter -\u003e {\n                 final Set\u003cString\u003e locations \u003d\n                     ((ExternalResourceHolder) filter).getExternalResourceLocations();\n                 externalResources.addAll(locations);\n-            }\n-        }\n+            });\n         return externalResources;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e getExternalResourceLocations() {\n        final Set\u003cString\u003e externalResources \u003d Sets.newHashSet();\n        fileSetChecks.stream().filter(check -\u003e check instanceof ExternalResourceHolder)\n            .forEach(check -\u003e {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) check).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            });\n        filters.getFilters().stream().filter(filter -\u003e filter instanceof ExternalResourceHolder)\n            .forEach(filter -\u003e {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) filter).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            });\n        return externalResources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "ecbeaa6e1df7cb021745e111b04395b9fbd509c7": {
      "type": "Yintroduced",
      "commitMessage": "Issue #407: Fix cache usage in presence of modules which use external resources for configuration (#3092)",
      "commitDate": "16/05/16 1:53 PM",
      "commitName": "ecbeaa6e1df7cb021745e111b04395b9fbd509c7",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,18 @@\n+    private Set\u003cString\u003e getExternalResourceLocations() {\n+        final Set\u003cString\u003e externalResources \u003d Sets.newHashSet();\n+        for (FileSetCheck check : fileSetChecks) {\n+            if (check instanceof ExternalResourceHolder) {\n+                final Set\u003cString\u003e locations \u003d\n+                    ((ExternalResourceHolder) check).getExternalResourceLocations();\n+                externalResources.addAll(locations);\n+            }\n+        }\n+        for (Filter filter : filters.getFilters()) {\n+            if (filter instanceof ExternalResourceHolder) {\n+                final Set\u003cString\u003e locations \u003d\n+                    ((ExternalResourceHolder) filter).getExternalResourceLocations();\n+                externalResources.addAll(locations);\n+            }\n+        }\n+        return externalResources;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private Set\u003cString\u003e getExternalResourceLocations() {\n        final Set\u003cString\u003e externalResources \u003d Sets.newHashSet();\n        for (FileSetCheck check : fileSetChecks) {\n            if (check instanceof ExternalResourceHolder) {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) check).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            }\n        }\n        for (Filter filter : filters.getFilters()) {\n            if (filter instanceof ExternalResourceHolder) {\n                final Set\u003cString\u003e locations \u003d\n                    ((ExternalResourceHolder) filter).getExternalResourceLocations();\n                externalResources.addAll(locations);\n            }\n        }\n        return externalResources;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java"
    }
  }
}