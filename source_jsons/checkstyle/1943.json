{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FinalLocalVariableCheck.java",
  "functionName": "updateUninitializedVariables",
  "functionId": "updateUninitializedVariables___scopeUninitializedVariableData-Deque__DetailAST__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
  "functionStartLine": 442,
  "functionEndLine": 467,
  "numCommitsSeen": 210,
  "timeTaken": 2296,
  "changeHistory": [
    "705e0f67579ca9e159bc7facc55678f690bbb774",
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
    "55aa50d8f09d28521f0d0004ce475fa09082faea",
    "628e893f24cf41ad122c5adf656832a89168e766"
  ],
  "changeHistoryShort": {
    "705e0f67579ca9e159bc7facc55678f690bbb774": "Ybodychange",
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2": "Ymultichange(Yparameterchange,Ybodychange)",
    "55aa50d8f09d28521f0d0004ce475fa09082faea": "Ybodychange",
    "628e893f24cf41ad122c5adf656832a89168e766": "Yintroduced"
  },
  "changeHistoryDetails": {
    "705e0f67579ca9e159bc7facc55678f690bbb774": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6377: FinalLocalVariable: IllegalStateException\n",
      "commitDate": "14/02/19 5:28 PM",
      "commitName": "705e0f67579ca9e159bc7facc55678f690bbb774",
      "commitAuthor": "Erik Silkensen",
      "commitDateOld": "26/01/19 5:50 PM",
      "commitNameOld": "63afcb8a76cb73ae198afe87bcf01765e84fc713",
      "commitAuthorOld": "Erik Silkensen",
      "daysBetweenCommits": 18.98,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,26 @@\n     private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n         final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n         while (iterator.hasNext()) {\n             final DetailAST assignedVariable \u003d iterator.next();\n+            boolean shouldRemove \u003d false;\n             for (DetailAST variable : scopeUninitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n                     final FinalVariableCandidate candidate \u003d\n                         scopeData.scope.get(variable.getText());\n                     DetailAST storedVariable \u003d null;\n                     if (candidate !\u003d null) {\n                         storedVariable \u003d candidate.variableIdent;\n                     }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n                             \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                         scopeData.uninitializedVariables.push(variable);\n-                        iterator.remove();\n+                        shouldRemove \u003d true;\n                     }\n                 }\n             }\n+            if (shouldRemove) {\n+                iterator.remove();\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n        while (iterator.hasNext()) {\n            final DetailAST assignedVariable \u003d iterator.next();\n            boolean shouldRemove \u003d false;\n            for (DetailAST variable : scopeUninitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d\n                        scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                        shouldRemove \u003d true;\n                    }\n                }\n            }\n            if (shouldRemove) {\n                iterator.remove();\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "3b531fe996078098c7fa30b8ab0645a6157dc6d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "minor: fix typos\n",
      "commitDate": "23/12/17 9:13 PM",
      "commitName": "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "minor: fix typos\n",
          "commitDate": "23/12/17 9:13 PM",
          "commitName": "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "18/11/17 3:48 PM",
          "commitNameOld": "d56c2c0c1ff467afb93f540a2acd54d10fa89f3a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 35.23,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n+    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n         final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n         while (iterator.hasNext()) {\n             final DetailAST assignedVariable \u003d iterator.next();\n-            for (DetailAST variable : scopeUnitializedVariableData) {\n+            for (DetailAST variable : scopeUninitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n                     final FinalVariableCandidate candidate \u003d\n                         scopeData.scope.get(variable.getText());\n                     DetailAST storedVariable \u003d null;\n                     if (candidate !\u003d null) {\n                         storedVariable \u003d candidate.variableIdent;\n                     }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n                             \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                         scopeData.uninitializedVariables.push(variable);\n                         iterator.remove();\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n        while (iterator.hasNext()) {\n            final DetailAST assignedVariable \u003d iterator.next();\n            for (DetailAST variable : scopeUninitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d\n                        scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                        iterator.remove();\n                    }\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {
            "oldValue": "[scopeUnitializedVariableData-Deque\u003cDetailAST\u003e]",
            "newValue": "[scopeUninitializedVariableData-Deque\u003cDetailAST\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: fix typos\n",
          "commitDate": "23/12/17 9:13 PM",
          "commitName": "3b531fe996078098c7fa30b8ab0645a6157dc6d1",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "18/11/17 3:48 PM",
          "commitNameOld": "d56c2c0c1ff467afb93f540a2acd54d10fa89f3a",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 35.23,
          "commitsBetweenForRepo": 95,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n+    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n         final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n         while (iterator.hasNext()) {\n             final DetailAST assignedVariable \u003d iterator.next();\n-            for (DetailAST variable : scopeUnitializedVariableData) {\n+            for (DetailAST variable : scopeUninitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n                     final FinalVariableCandidate candidate \u003d\n                         scopeData.scope.get(variable.getText());\n                     DetailAST storedVariable \u003d null;\n                     if (candidate !\u003d null) {\n                         storedVariable \u003d candidate.variableIdent;\n                     }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n                             \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                         scopeData.uninitializedVariables.push(variable);\n                         iterator.remove();\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUninitializedVariableData) {\n        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n        while (iterator.hasNext()) {\n            final DetailAST assignedVariable \u003d iterator.next();\n            for (DetailAST variable : scopeUninitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d\n                        scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                        iterator.remove();\n                    }\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #4082: Take \"break\" into consideration in FinalLocalVariable\n",
      "commitDate": "18/04/17 12:54 PM",
      "commitName": "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
      "commitAuthor": "Luolc",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #4082: Take \"break\" into consideration in FinalLocalVariable\n",
          "commitDate": "18/04/17 12:54 PM",
          "commitName": "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
          "commitAuthor": "Luolc",
          "commitDateOld": "05/04/17 5:37 AM",
          "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
          "commitAuthorOld": "Vladislav Lisetskii",
          "daysBetweenCommits": 13.3,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,22 @@\n-    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e prevScopeUnitializedVariableData) {\n-        // Check for only previous scope\n-        for (DetailAST variable : prevScopeUnitializedVariableData) {\n-            for (ScopeData scopeData : scopeStack) {\n-                final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n-                DetailAST storedVariable \u003d null;\n-                if (candidate !\u003d null) {\n-                    storedVariable \u003d candidate.variableIdent;\n-                }\n-                if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n-                        \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n-                    scopeData.uninitializedVariables.push(variable);\n-                }\n-            }\n-        }\n-        // Check for rest of the scope\n-        for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n-            for (DetailAST variable : unitializedVariableData) {\n+    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n+        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n+        while (iterator.hasNext()) {\n+            final DetailAST assignedVariable \u003d iterator.next();\n+            for (DetailAST variable : scopeUnitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n                     final FinalVariableCandidate candidate \u003d\n                         scopeData.scope.get(variable.getText());\n                     DetailAST storedVariable \u003d null;\n                     if (candidate !\u003d null) {\n                         storedVariable \u003d candidate.variableIdent;\n                     }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n-                            \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n+                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                         scopeData.uninitializedVariables.push(variable);\n+                        iterator.remove();\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n        while (iterator.hasNext()) {\n            final DetailAST assignedVariable \u003d iterator.next();\n            for (DetailAST variable : scopeUnitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d\n                        scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                        iterator.remove();\n                    }\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {
            "oldValue": "[prevScopeUnitializedVariableData-Deque\u003cDetailAST\u003e]",
            "newValue": "[scopeUnitializedVariableData-Deque\u003cDetailAST\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #4082: Take \"break\" into consideration in FinalLocalVariable\n",
          "commitDate": "18/04/17 12:54 PM",
          "commitName": "5e0ab75777985f056715f6d9dc5e4667b1a0dfa2",
          "commitAuthor": "Luolc",
          "commitDateOld": "05/04/17 5:37 AM",
          "commitNameOld": "3bd3a52280388520c64ec813dd1e4ffb3a0063a2",
          "commitAuthorOld": "Vladislav Lisetskii",
          "daysBetweenCommits": 13.3,
          "commitsBetweenForRepo": 63,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,22 @@\n-    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e prevScopeUnitializedVariableData) {\n-        // Check for only previous scope\n-        for (DetailAST variable : prevScopeUnitializedVariableData) {\n-            for (ScopeData scopeData : scopeStack) {\n-                final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n-                DetailAST storedVariable \u003d null;\n-                if (candidate !\u003d null) {\n-                    storedVariable \u003d candidate.variableIdent;\n-                }\n-                if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n-                        \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n-                    scopeData.uninitializedVariables.push(variable);\n-                }\n-            }\n-        }\n-        // Check for rest of the scope\n-        for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n-            for (DetailAST variable : unitializedVariableData) {\n+    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n+        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n+        while (iterator.hasNext()) {\n+            final DetailAST assignedVariable \u003d iterator.next();\n+            for (DetailAST variable : scopeUnitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n                     final FinalVariableCandidate candidate \u003d\n                         scopeData.scope.get(variable.getText());\n                     DetailAST storedVariable \u003d null;\n                     if (candidate !\u003d null) {\n                         storedVariable \u003d candidate.variableIdent;\n                     }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n-                            \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n+                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                         scopeData.uninitializedVariables.push(variable);\n+                        iterator.remove();\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e scopeUnitializedVariableData) {\n        final Iterator\u003cDetailAST\u003e iterator \u003d currentScopeAssignedVariables.peek().iterator();\n        while (iterator.hasNext()) {\n            final DetailAST assignedVariable \u003d iterator.next();\n            for (DetailAST variable : scopeUnitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d\n                        scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 isSameVariables(assignedVariable, variable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                        iterator.remove();\n                    }\n                }\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "55aa50d8f09d28521f0d0004ce475fa09082faea": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3006: Fix false positive when variable is assigned multiple times\n",
      "commitDate": "29/03/16 3:47 PM",
      "commitName": "55aa50d8f09d28521f0d0004ce475fa09082faea",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "29/03/16 3:47 PM",
      "commitNameOld": "11210350f58660d96012cea051f0fbc3bc462cb1",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,34 @@\n     private void updateUninitializedVariables(Deque\u003cDetailAST\u003e\n             prevScopeUnitializedVariableData) {\n         // Check for only previous scope\n         for (DetailAST variable : prevScopeUnitializedVariableData) {\n             for (ScopeData scopeData : scopeStack) {\n-                final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n+                final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n+                DetailAST storedVariable \u003d null;\n+                if (candidate !\u003d null) {\n+                    storedVariable \u003d candidate.variableIdent;\n+                }\n                 if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n                         \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                     scopeData.uninitializedVariables.push(variable);\n                 }\n             }\n         }\n         // Check for rest of the scope\n         for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n             for (DetailAST variable : unitializedVariableData) {\n                 for (ScopeData scopeData : scopeStack) {\n-                    final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n+                    final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n+                    DetailAST storedVariable \u003d null;\n+                    if (candidate !\u003d null) {\n+                        storedVariable \u003d candidate.variableIdent;\n+                    }\n                     if (storedVariable !\u003d null\n                             \u0026\u0026 isSameVariables(storedVariable, variable)\n                             \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                         scopeData.uninitializedVariables.push(variable);\n                     }\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e\n            prevScopeUnitializedVariableData) {\n        // Check for only previous scope\n        for (DetailAST variable : prevScopeUnitializedVariableData) {\n            for (ScopeData scopeData : scopeStack) {\n                final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n                DetailAST storedVariable \u003d null;\n                if (candidate !\u003d null) {\n                    storedVariable \u003d candidate.variableIdent;\n                }\n                if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n                        \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                    scopeData.uninitializedVariables.push(variable);\n                }\n            }\n        }\n        // Check for rest of the scope\n        for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n            for (DetailAST variable : unitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final FinalVariableCandidate candidate \u003d scopeData.scope.get(variable.getText());\n                    DetailAST storedVariable \u003d null;\n                    if (candidate !\u003d null) {\n                        storedVariable \u003d candidate.variableIdent;\n                    }\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java",
      "extendedDetails": {}
    },
    "628e893f24cf41ad122c5adf656832a89168e766": {
      "type": "Yintroduced",
      "commitMessage": "Issue #2807: FinalLocalVariable doesn\u0027t report variable when condition separates 2 assignments\n",
      "commitDate": "24/01/16 6:35 AM",
      "commitName": "628e893f24cf41ad122c5adf656832a89168e766",
      "commitAuthor": "Bhavik Patel",
      "diff": "@@ -0,0 +1,26 @@\n+    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e\n+            prevScopeUnitializedVariableData) {\n+        // Check for only previous scope\n+        for (DetailAST variable : prevScopeUnitializedVariableData) {\n+            for (ScopeData scopeData : scopeStack) {\n+                final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n+                if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n+                        \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n+                    scopeData.uninitializedVariables.push(variable);\n+                }\n+            }\n+        }\n+        // Check for rest of the scope\n+        for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n+            for (DetailAST variable : unitializedVariableData) {\n+                for (ScopeData scopeData : scopeStack) {\n+                    final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n+                    if (storedVariable !\u003d null\n+                            \u0026\u0026 isSameVariables(storedVariable, variable)\n+                            \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n+                        scopeData.uninitializedVariables.push(variable);\n+                    }\n+                }\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void updateUninitializedVariables(Deque\u003cDetailAST\u003e\n            prevScopeUnitializedVariableData) {\n        // Check for only previous scope\n        for (DetailAST variable : prevScopeUnitializedVariableData) {\n            for (ScopeData scopeData : scopeStack) {\n                final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n                if (storedVariable !\u003d null \u0026\u0026 isSameVariables(storedVariable, variable)\n                        \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                    scopeData.uninitializedVariables.push(variable);\n                }\n            }\n        }\n        // Check for rest of the scope\n        for (Deque\u003cDetailAST\u003e unitializedVariableData : prevScopeUninitializedVariables) {\n            for (DetailAST variable : unitializedVariableData) {\n                for (ScopeData scopeData : scopeStack) {\n                    final DetailAST storedVariable \u003d scopeData.scope.get(variable.getText());\n                    if (storedVariable !\u003d null\n                            \u0026\u0026 isSameVariables(storedVariable, variable)\n                            \u0026\u0026 !scopeData.uninitializedVariables.contains(storedVariable)) {\n                        scopeData.uninitializedVariables.push(variable);\n                    }\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/FinalLocalVariableCheck.java"
    }
  }
}