{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalTypeCheck.java",
  "functionName": "checkTypeBounds",
  "functionId": "checkTypeBounds___type-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java",
  "functionStartLine": 622,
  "functionEndLine": 631,
  "numCommitsSeen": 76,
  "timeTaken": 585,
  "changeHistory": [
    "fdf3438b48f8753dd2f8b806673089944149ae78"
  ],
  "changeHistoryShort": {
    "fdf3438b48f8753dd2f8b806673089944149ae78": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fdf3438b48f8753dd2f8b806673089944149ae78": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5118: IllegalType does not check type arguments/parameters\n",
      "commitDate": "14/10/18 8:24 AM",
      "commitName": "fdf3438b48f8753dd2f8b806673089944149ae78",
      "commitAuthor": "Pavel Bludov",
      "diff": "@@ -0,0 +1,10 @@\n+    private void checkTypeBounds(DetailAST type) {\n+        final DetailAST upperBounds \u003d type.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n+        if (upperBounds !\u003d null) {\n+            checkType(upperBounds);\n+        }\n+        final DetailAST lowerBounds \u003d type.findFirstToken(TokenTypes.TYPE_LOWER_BOUNDS);\n+        if (lowerBounds !\u003d null) {\n+            checkType(lowerBounds);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void checkTypeBounds(DetailAST type) {\n        final DetailAST upperBounds \u003d type.findFirstToken(TokenTypes.TYPE_UPPER_BOUNDS);\n        if (upperBounds !\u003d null) {\n            checkType(upperBounds);\n        }\n        final DetailAST lowerBounds \u003d type.findFirstToken(TokenTypes.TYPE_LOWER_BOUNDS);\n        if (lowerBounds !\u003d null) {\n            checkType(lowerBounds);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalTypeCheck.java"
    }
  }
}