{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Main.java",
  "functionName": "listFiles",
  "functionId": "listFiles___node-File__patternsToExclude-List__Pattern__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
  "functionStartLine": 221,
  "functionEndLine": 241,
  "numCommitsSeen": 188,
  "timeTaken": 2148,
  "changeHistory": [
    "ad97946912b6278fe7898418058b0405f82ae1b9",
    "df2d98bea645c9186954db4fdc23284d2b08673a",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
    "93e0187129d7ac919a2a366ad75f5f9f7ed4f553",
    "ab2f93f9bf61816d84154e636d32c81c05854e24"
  ],
  "changeHistoryShort": {
    "ad97946912b6278fe7898418058b0405f82ae1b9": "Ybodychange",
    "df2d98bea645c9186954db4fdc23284d2b08673a": "Ybodychange",
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": "Ybodychange",
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": "Ymultichange(Yparameterchange,Ybodychange)",
    "93e0187129d7ac919a2a366ad75f5f9f7ed4f553": "Ybodychange",
    "ab2f93f9bf61816d84154e636d32c81c05854e24": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ad97946912b6278fe7898418058b0405f82ae1b9": {
      "type": "Ybodychange",
      "commitMessage": "minor: remove obsolete pmd suppression\n",
      "commitDate": "07/12/19 8:15 AM",
      "commitName": "ad97946912b6278fe7898418058b0405f82ae1b9",
      "commitAuthor": "pbludov",
      "commitDateOld": "08/09/19 6:04 AM",
      "commitNameOld": "5ed866347e51cac0a4835d93467908d2910a4b8f",
      "commitAuthorOld": "Andrei Paikin",
      "daysBetweenCommits": 90.13,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n     private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n         final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n \n-        if (node.canRead()) {\n-            if (!isPathExcluded(node.getAbsolutePath(), patternsToExclude)) {\n-                if (node.isDirectory()) {\n-                    final File[] files \u003d node.listFiles();\n-                    // listFiles() can return null, so we need to check it\n-                    if (files !\u003d null) {\n-                        for (File element : files) {\n-                            result.addAll(listFiles(element, patternsToExclude));\n-                        }\n+        if (node.canRead() \u0026\u0026 !isPathExcluded(node.getAbsolutePath(), patternsToExclude)) {\n+            if (node.isDirectory()) {\n+                final File[] files \u003d node.listFiles();\n+                // listFiles() can return null, so we need to check it\n+                if (files !\u003d null) {\n+                    for (File element : files) {\n+                        result.addAll(listFiles(element, patternsToExclude));\n                     }\n                 }\n-                else if (node.isFile()) {\n-                    result.add(node);\n-                }\n+            }\n+            else if (node.isFile()) {\n+                result.add(node);\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n\n        if (node.canRead() \u0026\u0026 !isPathExcluded(node.getAbsolutePath(), patternsToExclude)) {\n            if (node.isDirectory()) {\n                final File[] files \u003d node.listFiles();\n                // listFiles() can return null, so we need to check it\n                if (files !\u003d null) {\n                    for (File element : files) {\n                        result.addAll(listFiles(element, patternsToExclude));\n                    }\n                }\n            }\n            else if (node.isFile()) {\n                result.add(node);\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "df2d98bea645c9186954db4fdc23284d2b08673a": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6399: expanded exclude options to include files",
      "commitDate": "17/02/19 3:04 PM",
      "commitName": "df2d98bea645c9186954db4fdc23284d2b08673a",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 33.39,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n         final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n \n         if (node.canRead()) {\n-            if (node.isDirectory()) {\n-                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n+            if (!isPathExcluded(node.getAbsolutePath(), patternsToExclude)) {\n+                if (node.isDirectory()) {\n                     final File[] files \u003d node.listFiles();\n                     // listFiles() can return null, so we need to check it\n                     if (files !\u003d null) {\n                         for (File element : files) {\n                             result.addAll(listFiles(element, patternsToExclude));\n                         }\n                     }\n                 }\n-            }\n-            else if (node.isFile()) {\n-                result.add(node);\n+                else if (node.isFile()) {\n+                    result.add(node);\n+                }\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n\n        if (node.canRead()) {\n            if (!isPathExcluded(node.getAbsolutePath(), patternsToExclude)) {\n                if (node.isDirectory()) {\n                    final File[] files \u003d node.listFiles();\n                    // listFiles() can return null, so we need to check it\n                    if (files !\u003d null) {\n                        for (File element : files) {\n                            result.addAll(listFiles(element, patternsToExclude));\n                        }\n                    }\n                }\n                else if (node.isFile()) {\n                    result.add(node);\n                }\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "fbf3f95c2273be23b966cba6e6ef89390a6fb020": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3433: Cut down on Checkstyle\u0027s dependencies on Guava (part 2) (#3454)\n\n",
      "commitDate": "20/09/16 7:52 PM",
      "commitName": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "14/09/16 1:58 PM",
      "commitNameOld": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 6.25,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n-        final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n+        final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n \n         if (node.canRead()) {\n             if (node.isDirectory()) {\n                 if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n                     final File[] files \u003d node.listFiles();\n                     // listFiles() can return null, so we need to check it\n                     if (files !\u003d null) {\n                         for (File element : files) {\n                             result.addAll(listFiles(element, patternsToExclude));\n                         }\n                     }\n                 }\n             }\n             else if (node.isFile()) {\n                 result.add(node);\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d new LinkedList\u003c\u003e();\n\n        if (node.canRead()) {\n            if (node.isDirectory()) {\n                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n                    final File[] files \u003d node.listFiles();\n                    // listFiles() can return null, so we need to check it\n                    if (files !\u003d null) {\n                        for (File element : files) {\n                            result.addAll(listFiles(element, patternsToExclude));\n                        }\n                    }\n                }\n            }\n            else if (node.isFile()) {\n                result.add(node);\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
      "commitDate": "26/07/16 7:55 PM",
      "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
          "commitDate": "26/07/16 7:55 PM",
          "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
          "commitAuthor": "rnveach",
          "commitDateOld": "11/07/16 9:47 PM",
          "commitNameOld": "44119413b68542bb1db3f50d2585834b9d00d1b3",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 14.92,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-    private static List\u003cFile\u003e listFiles(File node) {\n+    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n         final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n \n         if (node.canRead()) {\n             if (node.isDirectory()) {\n-                final File[] files \u003d node.listFiles();\n-                // listFiles() can return null, so we need to check it\n-                if (files !\u003d null) {\n-                    for (File element : files) {\n-                        result.addAll(listFiles(element));\n+                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n+                    final File[] files \u003d node.listFiles();\n+                    // listFiles() can return null, so we need to check it\n+                    if (files !\u003d null) {\n+                        for (File element : files) {\n+                            result.addAll(listFiles(element, patternsToExclude));\n+                        }\n                     }\n                 }\n             }\n             else if (node.isFile()) {\n                 result.add(node);\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n\n        if (node.canRead()) {\n            if (node.isDirectory()) {\n                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n                    final File[] files \u003d node.listFiles();\n                    // listFiles() can return null, so we need to check it\n                    if (files !\u003d null) {\n                        for (File element : files) {\n                            result.addAll(listFiles(element, patternsToExclude));\n                        }\n                    }\n                }\n            }\n            else if (node.isFile()) {\n                result.add(node);\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[node-File]",
            "newValue": "[node-File, patternsToExclude-List\u003cPattern\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3287: added exclude directory option (#3288)\n\n",
          "commitDate": "26/07/16 7:55 PM",
          "commitName": "6ee753af51a58c1c6ecc5e6d5946a32ee937eaa6",
          "commitAuthor": "rnveach",
          "commitDateOld": "11/07/16 9:47 PM",
          "commitNameOld": "44119413b68542bb1db3f50d2585834b9d00d1b3",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 14.92,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-    private static List\u003cFile\u003e listFiles(File node) {\n+    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n         final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n \n         if (node.canRead()) {\n             if (node.isDirectory()) {\n-                final File[] files \u003d node.listFiles();\n-                // listFiles() can return null, so we need to check it\n-                if (files !\u003d null) {\n-                    for (File element : files) {\n-                        result.addAll(listFiles(element));\n+                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n+                    final File[] files \u003d node.listFiles();\n+                    // listFiles() can return null, so we need to check it\n+                    if (files !\u003d null) {\n+                        for (File element : files) {\n+                            result.addAll(listFiles(element, patternsToExclude));\n+                        }\n                     }\n                 }\n             }\n             else if (node.isFile()) {\n                 result.add(node);\n             }\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static List\u003cFile\u003e listFiles(File node, List\u003cPattern\u003e patternsToExclude) {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n\n        if (node.canRead()) {\n            if (node.isDirectory()) {\n                if (!isDirectoryExcluded(node.getAbsolutePath(), patternsToExclude)) {\n                    final File[] files \u003d node.listFiles();\n                    // listFiles() can return null, so we need to check it\n                    if (files !\u003d null) {\n                        for (File element : files) {\n                            result.addAll(listFiles(element, patternsToExclude));\n                        }\n                    }\n                }\n            }\n            else if (node.isFile()) {\n                result.add(node);\n            }\n        }\n        return result;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "93e0187129d7ac919a2a366ad75f5f9f7ed4f553": {
      "type": "Ybodychange",
      "commitMessage": "removal of validation suppressions, and resoling of them. Issue #596\n",
      "commitDate": "05/05/15 2:40 PM",
      "commitName": "93e0187129d7ac919a2a366ad75f5f9f7ed4f553",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "05/05/15 11:12 AM",
      "commitNameOld": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n     private static List\u003cFile\u003e listFiles(File node)\n     {\n         // could be replaced with org.apache.commons.io.FileUtils.list() method\n         // if only we add commons-io library\n-        final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n+        final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n \n         if (node.canRead()) {\n             if (node.isDirectory()) {\n-                for (File element : node.listFiles()) {\n-                    files.addAll(listFiles(element));\n+                final File[] files \u003d node.listFiles();\n+                // listFiles() can return null, so we need to check it\n+                if (files !\u003d null) {\n+                    for (File element : files) {\n+                        result.addAll(listFiles(element));\n+                    }\n                 }\n             }\n             else if (node.isFile()) {\n-                files.add(node);\n+                result.add(node);\n             }\n         }\n-        return files;\n+        return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cFile\u003e listFiles(File node)\n    {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e result \u003d Lists.newLinkedList();\n\n        if (node.canRead()) {\n            if (node.isDirectory()) {\n                final File[] files \u003d node.listFiles();\n                // listFiles() can return null, so we need to check it\n                if (files !\u003d null) {\n                    for (File element : files) {\n                        result.addAll(listFiles(element));\n                    }\n                }\n            }\n            else if (node.isFile()) {\n                result.add(node);\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "ab2f93f9bf61816d84154e636d32c81c05854e24": {
      "type": "Yintroduced",
      "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
      "commitDate": "23/04/15 10:18 PM",
      "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
      "commitAuthor": "Damian Szczepanik",
      "diff": "@@ -0,0 +1,18 @@\n+    private static List\u003cFile\u003e listFiles(File node)\n+    {\n+        // could be replaced with org.apache.commons.io.FileUtils.list() method\n+        // if only we add commons-io library\n+        final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n+\n+        if (node.canRead()) {\n+            if (node.isDirectory()) {\n+                for (File element : node.listFiles()) {\n+                    files.addAll(listFiles(element));\n+                }\n+            }\n+            else if (node.isFile()) {\n+                files.add(node);\n+            }\n+        }\n+        return files;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static List\u003cFile\u003e listFiles(File node)\n    {\n        // could be replaced with org.apache.commons.io.FileUtils.list() method\n        // if only we add commons-io library\n        final List\u003cFile\u003e files \u003d Lists.newLinkedList();\n\n        if (node.canRead()) {\n            if (node.isDirectory()) {\n                for (File element : node.listFiles()) {\n                    files.addAll(listFiles(element));\n                }\n            }\n            else if (node.isFile()) {\n                files.add(node);\n            }\n        }\n        return files;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java"
    }
  }
}