{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TokenUtil.java",
  "functionName": "findFirstTokenByPredicate",
  "functionId": "findFirstTokenByPredicate___root-DetailAST__predicate-Predicate__DetailAST__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java",
  "functionStartLine": 232,
  "functionEndLine": 242,
  "numCommitsSeen": 24,
  "timeTaken": 1215,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035",
    "06716249cfb86d9f213f33a26877112e8ab45adc"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035": "Ybodychange",
    "06716249cfb86d9f213f33a26877112e8ab45adc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static Optional\u003cDetailAST\u003e findFirstTokenByPredicate(DetailAST root,\n                                                                Predicate\u003cDetailAST\u003e predicate) {\n        Optional\u003cDetailAST\u003e result \u003d Optional.empty();\n        for (DetailAST ast \u003d root.getFirstChild(); ast !\u003d null; ast \u003d ast.getNextSibling()) {\n            if (predicate.test(ast)) {\n                result \u003d Optional.of(ast);\n                break;\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtil.java"
      }
    },
    "257d13b6bb53245d2491e50d4ca8e39ddfc80035": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3830: Fix bug in DesignForExtension when order of annotations changes violation\n",
      "commitDate": "23/02/17 2:51 PM",
      "commitName": "257d13b6bb53245d2491e50d4ca8e39ddfc80035",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "18/02/17 2:16 PM",
      "commitNameOld": "cd88872f9db17c838641bcd32ad7f334893827c0",
      "commitAuthorOld": "Vladislav Lisetskii",
      "daysBetweenCommits": 5.02,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,11 @@\n     public static Optional\u003cDetailAST\u003e findFirstTokenByPredicate(DetailAST root,\n                                                                 Predicate\u003cDetailAST\u003e predicate) {\n         Optional\u003cDetailAST\u003e result \u003d Optional.empty();\n-        DetailAST rootNode \u003d root;\n-        while (rootNode !\u003d null) {\n-            DetailAST toVisit \u003d rootNode.getFirstChild();\n-            if (predicate.test(toVisit)) {\n-                result \u003d Optional.of(toVisit);\n+        for (DetailAST ast \u003d root.getFirstChild(); ast !\u003d null; ast \u003d ast.getNextSibling()) {\n+            if (predicate.test(ast)) {\n+                result \u003d Optional.of(ast);\n                 break;\n             }\n-            while (rootNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n-                toVisit \u003d rootNode.getNextSibling();\n-                if (toVisit \u003d\u003d null) {\n-                    rootNode \u003d rootNode.getParent();\n-                }\n-            }\n-            rootNode \u003d toVisit;\n         }\n         return result;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static Optional\u003cDetailAST\u003e findFirstTokenByPredicate(DetailAST root,\n                                                                Predicate\u003cDetailAST\u003e predicate) {\n        Optional\u003cDetailAST\u003e result \u003d Optional.empty();\n        for (DetailAST ast \u003d root.getFirstChild(); ast !\u003d null; ast \u003d ast.getNextSibling()) {\n            if (predicate.test(ast)) {\n                result \u003d Optional.of(ast);\n                break;\n            }\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java",
      "extendedDetails": {}
    },
    "06716249cfb86d9f213f33a26877112e8ab45adc": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3102: DesignForExtension: consider overridable methods and javadoc\n",
      "commitDate": "22/10/16 3:36 PM",
      "commitName": "06716249cfb86d9f213f33a26877112e8ab45adc",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,20 @@\n+    public static Optional\u003cDetailAST\u003e findFirstTokenByPredicate(DetailAST root,\n+                                                                Predicate\u003cDetailAST\u003e predicate) {\n+        Optional\u003cDetailAST\u003e result \u003d Optional.empty();\n+        DetailAST rootNode \u003d root;\n+        while (rootNode !\u003d null) {\n+            DetailAST toVisit \u003d rootNode.getFirstChild();\n+            if (predicate.test(toVisit)) {\n+                result \u003d Optional.of(toVisit);\n+                break;\n+            }\n+            while (rootNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n+                toVisit \u003d rootNode.getNextSibling();\n+                if (toVisit \u003d\u003d null) {\n+                    rootNode \u003d rootNode.getParent();\n+                }\n+            }\n+            rootNode \u003d toVisit;\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static Optional\u003cDetailAST\u003e findFirstTokenByPredicate(DetailAST root,\n                                                                Predicate\u003cDetailAST\u003e predicate) {\n        Optional\u003cDetailAST\u003e result \u003d Optional.empty();\n        DetailAST rootNode \u003d root;\n        while (rootNode !\u003d null) {\n            DetailAST toVisit \u003d rootNode.getFirstChild();\n            if (predicate.test(toVisit)) {\n                result \u003d Optional.of(toVisit);\n                break;\n            }\n            while (rootNode !\u003d null \u0026\u0026 toVisit \u003d\u003d null) {\n                toVisit \u003d rootNode.getNextSibling();\n                if (toVisit \u003d\u003d null) {\n                    rootNode \u003d rootNode.getParent();\n                }\n            }\n            rootNode \u003d toVisit;\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/TokenUtils.java"
    }
  }
}