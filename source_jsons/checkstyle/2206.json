{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParameterNameCheck.java",
  "functionName": "getAccessModifier",
  "functionId": "getAccessModifier___ast-DetailAST(modifiers-final)",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
  "functionStartLine": 257,
  "functionEndLine": 271,
  "numCommitsSeen": 42,
  "timeTaken": 1144,
  "changeHistory": [
    "6d6bcc02779c140cad181dd0c99ff5c7b645a54c",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "f91b1af3d7c130daaeb52fea303b5d8e4c2769bf"
  ],
  "changeHistoryShort": {
    "6d6bcc02779c140cad181dd0c99ff5c7b645a54c": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "f91b1af3d7c130daaeb52fea303b5d8e4c2769bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d6bcc02779c140cad181dd0c99ff5c7b645a54c": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5894: Remove lambda parameters processing\n",
      "commitDate": "23/07/18 12:10 PM",
      "commitName": "6d6bcc02779c140cad181dd0c99ff5c7b645a54c",
      "commitAuthor": "kazachka",
      "commitDateOld": "11/06/18 11:09 AM",
      "commitNameOld": "45241e404dd869ffb1a239f1388893d6978ae097",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 42.04,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n     private static AccessModifier getAccessModifier(final DetailAST ast) {\n-        final DetailAST params \u003d ast.getParent();\n-        final DetailAST meth \u003d params.getParent();\n-        AccessModifier accessModifier \u003d AccessModifier.PRIVATE;\n+        final AccessModifier accessModifier;\n \n-        if (meth.getType() \u003d\u003d TokenTypes.METHOD_DEF\n-                || meth.getType() \u003d\u003d TokenTypes.CTOR_DEF) {\n-            if (ScopeUtil.isInInterfaceOrAnnotationBlock(ast)) {\n-                accessModifier \u003d AccessModifier.PUBLIC;\n-            }\n-            else {\n-                final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n-                accessModifier \u003d CheckUtil.getAccessModifierFromModifiersToken(modsToken);\n-            }\n+        if (ScopeUtil.isInInterfaceOrAnnotationBlock(ast)) {\n+            accessModifier \u003d AccessModifier.PUBLIC;\n+        }\n+        else {\n+            final DetailAST params \u003d ast.getParent();\n+            final DetailAST meth \u003d params.getParent();\n+            final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n+            accessModifier \u003d CheckUtil.getAccessModifierFromModifiersToken(modsToken);\n         }\n \n         return accessModifier;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AccessModifier getAccessModifier(final DetailAST ast) {\n        final AccessModifier accessModifier;\n\n        if (ScopeUtil.isInInterfaceOrAnnotationBlock(ast)) {\n            accessModifier \u003d AccessModifier.PUBLIC;\n        }\n        else {\n            final DetailAST params \u003d ast.getParent();\n            final DetailAST meth \u003d params.getParent();\n            final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n            accessModifier \u003d CheckUtil.getAccessModifierFromModifiersToken(modsToken);\n        }\n\n        return accessModifier;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "27/05/18 6:03 PM",
      "commitNameOld": "e3d4da5b40c251af2623b1b6e8f329edf8c21c00",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 7.15,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     private static AccessModifier getAccessModifier(final DetailAST ast) {\n         final DetailAST params \u003d ast.getParent();\n         final DetailAST meth \u003d params.getParent();\n         AccessModifier accessModifier \u003d AccessModifier.PRIVATE;\n \n         if (meth.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                 || meth.getType() \u003d\u003d TokenTypes.CTOR_DEF) {\n-            if (ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n+            if (ScopeUtil.isInInterfaceOrAnnotationBlock(ast)) {\n                 accessModifier \u003d AccessModifier.PUBLIC;\n             }\n             else {\n                 final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n-                accessModifier \u003d CheckUtils.getAccessModifierFromModifiersToken(modsToken);\n+                accessModifier \u003d CheckUtil.getAccessModifierFromModifiersToken(modsToken);\n             }\n         }\n \n         return accessModifier;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AccessModifier getAccessModifier(final DetailAST ast) {\n        final DetailAST params \u003d ast.getParent();\n        final DetailAST meth \u003d params.getParent();\n        AccessModifier accessModifier \u003d AccessModifier.PRIVATE;\n\n        if (meth.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                || meth.getType() \u003d\u003d TokenTypes.CTOR_DEF) {\n            if (ScopeUtil.isInInterfaceOrAnnotationBlock(ast)) {\n                accessModifier \u003d AccessModifier.PUBLIC;\n            }\n            else {\n                final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n                accessModifier \u003d CheckUtil.getAccessModifierFromModifiersToken(modsToken);\n            }\n        }\n\n        return accessModifier;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java",
      "extendedDetails": {}
    },
    "f91b1af3d7c130daaeb52fea303b5d8e4c2769bf": {
      "type": "Yintroduced",
      "commitMessage": "Issue #3675: Replace Scope with AccessModifier in ParameterNameCheck to avoid wrong scopes comparison\n",
      "commitDate": "26/01/17 8:47 AM",
      "commitName": "f91b1af3d7c130daaeb52fea303b5d8e4c2769bf",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,18 @@\n+    private static AccessModifier getAccessModifier(final DetailAST ast) {\n+        final DetailAST params \u003d ast.getParent();\n+        final DetailAST meth \u003d params.getParent();\n+        AccessModifier accessModifier \u003d AccessModifier.PRIVATE;\n+\n+        if (meth.getType() \u003d\u003d TokenTypes.METHOD_DEF\n+                || meth.getType() \u003d\u003d TokenTypes.CTOR_DEF) {\n+            if (ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n+                accessModifier \u003d AccessModifier.PUBLIC;\n+            }\n+            else {\n+                final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n+                accessModifier \u003d CheckUtils.getAccessModifierFromModifiersToken(modsToken);\n+            }\n+        }\n+\n+        return accessModifier;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static AccessModifier getAccessModifier(final DetailAST ast) {\n        final DetailAST params \u003d ast.getParent();\n        final DetailAST meth \u003d params.getParent();\n        AccessModifier accessModifier \u003d AccessModifier.PRIVATE;\n\n        if (meth.getType() \u003d\u003d TokenTypes.METHOD_DEF\n                || meth.getType() \u003d\u003d TokenTypes.CTOR_DEF) {\n            if (ScopeUtils.isInInterfaceOrAnnotationBlock(ast)) {\n                accessModifier \u003d AccessModifier.PUBLIC;\n            }\n            else {\n                final DetailAST modsToken \u003d meth.findFirstToken(TokenTypes.MODIFIERS);\n                accessModifier \u003d CheckUtils.getAccessModifierFromModifiersToken(modsToken);\n            }\n        }\n\n        return accessModifier;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/naming/ParameterNameCheck.java"
    }
  }
}