{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocUtil.java",
  "functionName": "findFirstToken",
  "functionId": "findFirstToken___detailNode-DetailNode__type-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
  "functionStartLine": 201,
  "functionEndLine": 212,
  "numCommitsSeen": 103,
  "timeTaken": 2320,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "ce196814d857a4244a80c51d5151cc35e90b6749",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Yfilerename",
    "ce196814d857a4244a80c51d5151cc35e90b6749": "Ybodychange",
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": "Yfilerename",
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": "Ymultichange(Yparameterchange,Ybodychange)",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Yfilerename",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "03/06/18 6:34 PM",
      "commitNameOld": "2b9308a4f532e78a53e090922787175103dfeb34",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.13,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n        DetailNode returnValue \u003d null;\n        DetailNode node \u003d getFirstChild(detailNode);\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d type) {\n                returnValue \u003d node;\n                break;\n            }\n            node \u003d getNextSibling(node);\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtil.java"
      }
    },
    "ce196814d857a4244a80c51d5151cc35e90b6749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2080: Fix typos in code\n",
      "commitDate": "16/10/15 4:35 PM",
      "commitName": "ce196814d857a4244a80c51d5151cc35e90b6749",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "06/10/15 7:33 PM",
      "commitNameOld": "5f5142b2325051f9ed31130167c73d154d547211",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 9.88,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n     public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n-        DetailNode retVal \u003d null;\n+        DetailNode returnValue \u003d null;\n         DetailNode node \u003d getFirstChild(detailNode);\n         while (node !\u003d null) {\n             if (node.getType() \u003d\u003d type) {\n-                retVal \u003d node;\n+                returnValue \u003d node;\n                 break;\n             }\n             node \u003d getNextSibling(node);\n         }\n-        return retVal;\n+        return returnValue;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n        DetailNode returnValue \u003d null;\n        DetailNode node \u003d getFirstChild(detailNode);\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d type) {\n                returnValue \u003d node;\n                break;\n            }\n            node \u003d getNextSibling(node);\n        }\n        return returnValue;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {}
    },
    "ed595de84fba2db507adaf01d04cb089a5e0bac5": {
      "type": "Yfilerename",
      "commitMessage": "Utils classes have been moved to utils package. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "26/08/15 6:08 PM",
      "commitNameOld": "f6113bb56d695719a8803274effb3596cb82120f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n        DetailNode retVal \u003d null;\n        DetailNode node \u003d getFirstChild(detailNode);\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d type) {\n                retVal \u003d node;\n                break;\n            }\n            node \u003d getNextSibling(node);\n        }\n        return retVal;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/utils/JavadocUtils.java"
      }
    },
    "f1e80e4ecae727087ca135dfd02f72e2d6213efb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
      "commitDate": "07/08/15 9:38 PM",
      "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthor": "Michal Kordas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
          "commitDate": "07/08/15 9:38 PM",
          "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "02/08/15 6:48 PM",
          "commitNameOld": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.12,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-    public static DetailNode findFirstToken(DetailNode node, int type) {\n+    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n         DetailNode retVal \u003d null;\n-        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n-            if (i.getType() \u003d\u003d type) {\n-                retVal \u003d i;\n+        DetailNode node \u003d getFirstChild(detailNode);\n+        while (node !\u003d null) {\n+            if (node.getType() \u003d\u003d type) {\n+                retVal \u003d node;\n                 break;\n             }\n+            node \u003d getNextSibling(node);\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n        DetailNode retVal \u003d null;\n        DetailNode node \u003d getFirstChild(detailNode);\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d type) {\n                retVal \u003d node;\n                break;\n            }\n            node \u003d getNextSibling(node);\n        }\n        return retVal;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {
            "oldValue": "[node-DetailNode, type-int]",
            "newValue": "[detailNode-DetailNode, type-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Rename variables with \u0027standard\u0027 names of unexpected types. #1555\n\nFixes `StandardVariableNames` inspection violations.\n\nDescription:\n\u003eReports on any variables with \u0027standard\u0027 names which are of unexpected types. Such names may be confusing. Standard names and types are as follows:\n* i, j, k, m, n - int\n* f - float\n* d - double\n* b - byte\n* c, ch - char\n* l - long\n* s, str - String\n",
          "commitDate": "07/08/15 9:38 PM",
          "commitName": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
          "commitAuthor": "Michal Kordas",
          "commitDateOld": "02/08/15 6:48 PM",
          "commitNameOld": "0a6026c9ab97dc2d5ecd9c8cc6a27197208f4e6a",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 5.12,
          "commitsBetweenForRepo": 36,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-    public static DetailNode findFirstToken(DetailNode node, int type) {\n+    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n         DetailNode retVal \u003d null;\n-        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n-            if (i.getType() \u003d\u003d type) {\n-                retVal \u003d i;\n+        DetailNode node \u003d getFirstChild(detailNode);\n+        while (node !\u003d null) {\n+            if (node.getType() \u003d\u003d type) {\n+                retVal \u003d node;\n                 break;\n             }\n+            node \u003d getNextSibling(node);\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailNode findFirstToken(DetailNode detailNode, int type) {\n        DetailNode retVal \u003d null;\n        DetailNode node \u003d getFirstChild(detailNode);\n        while (node !\u003d null) {\n            if (node.getType() \u003d\u003d type) {\n                retVal \u003d node;\n                break;\n            }\n            node \u003d getNextSibling(node);\n        }\n        return retVal;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/11/14 7:05 AM",
          "commitNameOld": "7b6785343e306845f432154a1a5026ad25306226",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 68.97,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public static DetailNode findFirstToken(DetailNode aNode, int aType)\n+    public static DetailNode findFirstToken(DetailNode node, int type)\n     {\n         DetailNode retVal \u003d null;\n-        for (DetailNode i \u003d getFirstChild(aNode); i !\u003d null; i \u003d getNextSibling(i)) {\n-            if (i.getType() \u003d\u003d aType) {\n+        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n+            if (i.getType() \u003d\u003d type) {\n                 retVal \u003d i;\n                 break;\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailNode findFirstToken(DetailNode node, int type)\n    {\n        DetailNode retVal \u003d null;\n        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n            if (i.getType() \u003d\u003d type) {\n                retVal \u003d i;\n                break;\n            }\n        }\n        return retVal;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {
            "oldValue": "[aNode-DetailNode, aType-int]",
            "newValue": "[node-DetailNode, type-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "11/11/14 7:05 AM",
          "commitNameOld": "7b6785343e306845f432154a1a5026ad25306226",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 68.97,
          "commitsBetweenForRepo": 222,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-    public static DetailNode findFirstToken(DetailNode aNode, int aType)\n+    public static DetailNode findFirstToken(DetailNode node, int type)\n     {\n         DetailNode retVal \u003d null;\n-        for (DetailNode i \u003d getFirstChild(aNode); i !\u003d null; i \u003d getNextSibling(i)) {\n-            if (i.getType() \u003d\u003d aType) {\n+        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n+            if (i.getType() \u003d\u003d type) {\n                 retVal \u003d i;\n                 break;\n             }\n         }\n         return retVal;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public static DetailNode findFirstToken(DetailNode node, int type)\n    {\n        DetailNode retVal \u003d null;\n        for (DetailNode i \u003d getFirstChild(node); i !\u003d null; i \u003d getNextSibling(i)) {\n            if (i.getType() \u003d\u003d type) {\n                retVal \u003d i;\n                break;\n            }\n        }\n        return retVal;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "ff12c1b012a1b18da8a1cd2101efd0173c612534": {
      "type": "Yintroduced",
      "commitMessage": "Issue #49. Added support of Javadoc comments. Extended API to create Javadoc Checks.\n",
      "commitDate": "19/10/14 1:32 PM",
      "commitName": "ff12c1b012a1b18da8a1cd2101efd0173c612534",
      "commitAuthor": "Baratali Izmailov",
      "diff": "@@ -0,0 +1,11 @@\n+    public static DetailNode findFirstToken(DetailNode aNode, int aType)\n+    {\n+        DetailNode retVal \u003d null;\n+        for (DetailNode i \u003d getFirstChild(aNode); i !\u003d null; i \u003d getNextSibling(i)) {\n+            if (i.getType() \u003d\u003d aType) {\n+                retVal \u003d i;\n+                break;\n+            }\n+        }\n+        return retVal;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public static DetailNode findFirstToken(DetailNode aNode, int aType)\n    {\n        DetailNode retVal \u003d null;\n        for (DetailNode i \u003d getFirstChild(aNode); i !\u003d null; i \u003d getNextSibling(i)) {\n            if (i.getType() \u003d\u003d aType) {\n                retVal \u003d i;\n                break;\n            }\n        }\n        return retVal;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocUtils.java"
    }
  }
}