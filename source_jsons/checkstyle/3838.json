{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocPropertiesGenerator.java",
  "functionName": "formatInlineCodeTag",
  "functionId": "formatInlineCodeTag___builder-StringBuilder__inlineTag-DetailNode",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocPropertiesGenerator.java",
  "functionStartLine": 261,
  "functionEndLine": 289,
  "numCommitsSeen": 9,
  "timeTaken": 862,
  "changeHistory": [
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "a0273f9f0a68a5ddf5a638cdef383192807bd433"
  ],
  "changeHistoryShort": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "a0273f9f0a68a5ddf5a638cdef383192807bd433": "Yintroduced"
  },
  "changeHistoryDetails": {
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "20/04/18 11:55 AM",
      "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 44.41,
      "commitsBetweenForRepo": 139,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     private static void formatInlineCodeTag(StringBuilder builder, DetailNode inlineTag)\n             throws CheckstyleException {\n         boolean wrapWithCodeTag \u003d false;\n         for (DetailNode node : inlineTag.getChildren()) {\n             switch (node.getType()) {\n                 case JavadocTokenTypes.CODE_LITERAL:\n                     wrapWithCodeTag \u003d true;\n                     break;\n                 // The text to append.\n                 case JavadocTokenTypes.TEXT:\n                     if (wrapWithCodeTag) {\n                         builder.append(\"\u003ccode\u003e\").append(node.getText()).append(\"\u003c/code\u003e\");\n                     }\n                     else {\n                         builder.append(node.getText());\n                     }\n                     break;\n                 // Empty content tags.\n                 case JavadocTokenTypes.LITERAL_LITERAL:\n                 case JavadocTokenTypes.JAVADOC_INLINE_TAG_START:\n                 case JavadocTokenTypes.JAVADOC_INLINE_TAG_END:\n                 case JavadocTokenTypes.WS:\n                     break;\n                 default:\n                     throw new CheckstyleException(\"Unsupported inline tag \"\n-                        + JavadocUtils.getTokenName(node.getType()));\n+                        + JavadocUtil.getTokenName(node.getType()));\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static void formatInlineCodeTag(StringBuilder builder, DetailNode inlineTag)\n            throws CheckstyleException {\n        boolean wrapWithCodeTag \u003d false;\n        for (DetailNode node : inlineTag.getChildren()) {\n            switch (node.getType()) {\n                case JavadocTokenTypes.CODE_LITERAL:\n                    wrapWithCodeTag \u003d true;\n                    break;\n                // The text to append.\n                case JavadocTokenTypes.TEXT:\n                    if (wrapWithCodeTag) {\n                        builder.append(\"\u003ccode\u003e\").append(node.getText()).append(\"\u003c/code\u003e\");\n                    }\n                    else {\n                        builder.append(node.getText());\n                    }\n                    break;\n                // Empty content tags.\n                case JavadocTokenTypes.LITERAL_LITERAL:\n                case JavadocTokenTypes.JAVADOC_INLINE_TAG_START:\n                case JavadocTokenTypes.JAVADOC_INLINE_TAG_END:\n                case JavadocTokenTypes.WS:\n                    break;\n                default:\n                    throw new CheckstyleException(\"Unsupported inline tag \"\n                        + JavadocUtil.getTokenName(node.getType()));\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocPropertiesGenerator.java",
      "extendedDetails": {}
    },
    "a0273f9f0a68a5ddf5a638cdef383192807bd433": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5431: Remove dependencies of tools.jar\n",
      "commitDate": "25/02/18 6:27 AM",
      "commitName": "a0273f9f0a68a5ddf5a638cdef383192807bd433",
      "commitAuthor": "Pavel Bludov",
      "diff": "@@ -0,0 +1,29 @@\n+    private static void formatInlineCodeTag(StringBuilder builder, DetailNode inlineTag)\n+            throws CheckstyleException {\n+        boolean wrapWithCodeTag \u003d false;\n+        for (DetailNode node : inlineTag.getChildren()) {\n+            switch (node.getType()) {\n+                case JavadocTokenTypes.CODE_LITERAL:\n+                    wrapWithCodeTag \u003d true;\n+                    break;\n+                // The text to append.\n+                case JavadocTokenTypes.TEXT:\n+                    if (wrapWithCodeTag) {\n+                        builder.append(\"\u003ccode\u003e\").append(node.getText()).append(\"\u003c/code\u003e\");\n+                    }\n+                    else {\n+                        builder.append(node.getText());\n+                    }\n+                    break;\n+                // Empty content tags.\n+                case JavadocTokenTypes.LITERAL_LITERAL:\n+                case JavadocTokenTypes.JAVADOC_INLINE_TAG_START:\n+                case JavadocTokenTypes.JAVADOC_INLINE_TAG_END:\n+                case JavadocTokenTypes.WS:\n+                    break;\n+                default:\n+                    throw new CheckstyleException(\"Unsupported inline tag \"\n+                        + JavadocUtils.getTokenName(node.getType()));\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static void formatInlineCodeTag(StringBuilder builder, DetailNode inlineTag)\n            throws CheckstyleException {\n        boolean wrapWithCodeTag \u003d false;\n        for (DetailNode node : inlineTag.getChildren()) {\n            switch (node.getType()) {\n                case JavadocTokenTypes.CODE_LITERAL:\n                    wrapWithCodeTag \u003d true;\n                    break;\n                // The text to append.\n                case JavadocTokenTypes.TEXT:\n                    if (wrapWithCodeTag) {\n                        builder.append(\"\u003ccode\u003e\").append(node.getText()).append(\"\u003c/code\u003e\");\n                    }\n                    else {\n                        builder.append(node.getText());\n                    }\n                    break;\n                // Empty content tags.\n                case JavadocTokenTypes.LITERAL_LITERAL:\n                case JavadocTokenTypes.JAVADOC_INLINE_TAG_START:\n                case JavadocTokenTypes.JAVADOC_INLINE_TAG_END:\n                case JavadocTokenTypes.WS:\n                    break;\n                default:\n                    throw new CheckstyleException(\"Unsupported inline tag \"\n                        + JavadocUtils.getTokenName(node.getType()));\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/JavadocPropertiesGenerator.java"
    }
  }
}