{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavadocMethodCheck.java",
  "functionName": "isInIgnoreBlock",
  "functionId": "isInIgnoreBlock___methodBodyAst-DetailAST__throwAst-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java",
  "functionStartLine": 788,
  "functionEndLine": 808,
  "numCommitsSeen": 121,
  "timeTaken": 486,
  "changeHistory": [
    "050c68d3cce4e8f6486681ae8a15e146b6897c5b"
  ],
  "changeHistoryShort": {
    "050c68d3cce4e8f6486681ae8a15e146b6897c5b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "050c68d3cce4e8f6486681ae8a15e146b6897c5b": {
      "type": "Yintroduced",
      "commitMessage": "Issue #7473: JavadocMethod: false positive with validateThrows\n",
      "commitDate": "29/04/20 5:29 AM",
      "commitName": "050c68d3cce4e8f6486681ae8a15e146b6897c5b",
      "commitAuthor": "wltan",
      "diff": "@@ -0,0 +1,21 @@\n+    private static boolean isInIgnoreBlock(DetailAST methodBodyAst, DetailAST throwAst) {\n+        DetailAST ancestor \u003d throwAst.getParent();\n+        while (ancestor !\u003d methodBodyAst) {\n+            if (ancestor.getType() \u003d\u003d TokenTypes.LITERAL_TRY\n+                    \u0026\u0026 ancestor.findFirstToken(TokenTypes.LITERAL_CATCH) !\u003d null\n+                    || ancestor.getType() \u003d\u003d TokenTypes.LAMBDA\n+                    || ancestor.getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n+                // throw is inside a try block, and there is a catch block,\n+                // or throw is inside a lambda expression/anonymous class/local class\n+                break;\n+            }\n+            if (ancestor.getType() \u003d\u003d TokenTypes.LITERAL_CATCH\n+                    || ancestor.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n+                // if the throw is inside a catch or finally block,\n+                // skip the immediate ancestor (try token)\n+                ancestor \u003d ancestor.getParent();\n+            }\n+            ancestor \u003d ancestor.getParent();\n+        }\n+        return ancestor !\u003d methodBodyAst;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isInIgnoreBlock(DetailAST methodBodyAst, DetailAST throwAst) {\n        DetailAST ancestor \u003d throwAst.getParent();\n        while (ancestor !\u003d methodBodyAst) {\n            if (ancestor.getType() \u003d\u003d TokenTypes.LITERAL_TRY\n                    \u0026\u0026 ancestor.findFirstToken(TokenTypes.LITERAL_CATCH) !\u003d null\n                    || ancestor.getType() \u003d\u003d TokenTypes.LAMBDA\n                    || ancestor.getType() \u003d\u003d TokenTypes.OBJBLOCK) {\n                // throw is inside a try block, and there is a catch block,\n                // or throw is inside a lambda expression/anonymous class/local class\n                break;\n            }\n            if (ancestor.getType() \u003d\u003d TokenTypes.LITERAL_CATCH\n                    || ancestor.getType() \u003d\u003d TokenTypes.LITERAL_FINALLY) {\n                // if the throw is inside a catch or finally block,\n                // skip the immediate ancestor (try token)\n                ancestor \u003d ancestor.getParent();\n            }\n            ancestor \u003d ancestor.getParent();\n        }\n        return ancestor !\u003d methodBodyAst;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/JavadocMethodCheck.java"
    }
  }
}