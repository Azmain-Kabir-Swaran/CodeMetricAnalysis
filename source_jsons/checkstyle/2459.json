{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractImportControl.java",
  "functionName": "localCheckAccess",
  "functionId": "localCheckAccess___inPkg-String__inFileName-String__forImport-String",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportControl.java",
  "functionStartLine": 127,
  "functionEndLine": 140,
  "numCommitsSeen": 58,
  "timeTaken": 3872,
  "changeHistory": [
    "e018b2d6622efa4f1897244856974c45efeda99c",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
    "d6f3a17328226debcddb53ed25c39501f2781764",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
    "5530d4c27d508c513b68af67aadede84b4cfa102",
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b",
    "c38185458ab824874b8465c46b4dc42646440aaa",
    "a5d30bf353dde01376d45fb031d9236b11a835d1",
    "1951594e90a04aa2f2b14021ce3318604218ba19"
  ],
  "changeHistoryShort": {
    "e018b2d6622efa4f1897244856974c45efeda99c": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": "Yparametermetachange",
    "d6f3a17328226debcddb53ed25c39501f2781764": "Ybodychange",
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": "Yparameterchange",
    "5530d4c27d508c513b68af67aadede84b4cfa102": "Ymultichange(Yfilerename,Ybodychange)",
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88": "Ybodychange",
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": "Ybodychange",
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": "Ybodychange",
    "c38185458ab824874b8465c46b4dc42646440aaa": "Ybodychange",
    "a5d30bf353dde01376d45fb031d9236b11a835d1": "Ymultichange(Yparameterchange,Ybodychange)",
    "1951594e90a04aa2f2b14021ce3318604218ba19": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e018b2d6622efa4f1897244856974c45efeda99c": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "Issue #3492: add ability to control imports in certain files",
      "commitDate": "20/04/18 5:56 PM",
      "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(String inPkg, String forImport) {\n+    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n         AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n         for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n-            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n+            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                 final AccessResult result \u003d importRule.verifyImport(forImport);\n                 if (result !\u003d AccessResult.UNKNOWN) {\n                     localCheckAccessResult \u003d result;\n                     break;\n                 }\n             }\n         }\n         return localCheckAccessResult;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n        for (AbstractImportRule importRule : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                final AccessResult result \u003d importRule.verifyImport(forImport);\n                if (result !\u003d AccessResult.UNKNOWN) {\n                    localCheckAccessResult \u003d result;\n                    break;\n                }\n            }\n        }\n        return localCheckAccessResult;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportControl.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportControl.java",
            "oldMethodName": "localCheckAccess",
            "newMethodName": "localCheckAccess"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(String inPkg, String forImport) {\n+    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n         AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n         for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n-            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n+            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                 final AccessResult result \u003d importRule.verifyImport(forImport);\n                 if (result !\u003d AccessResult.UNKNOWN) {\n                     localCheckAccessResult \u003d result;\n                     break;\n                 }\n             }\n         }\n         return localCheckAccessResult;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n        for (AbstractImportRule importRule : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                final AccessResult result \u003d importRule.verifyImport(forImport);\n                if (result !\u003d AccessResult.UNKNOWN) {\n                    localCheckAccessResult \u003d result;\n                    break;\n                }\n            }\n        }\n        return localCheckAccessResult;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportControl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #3492: add ability to control imports in certain files",
          "commitDate": "20/04/18 5:56 PM",
          "commitName": "e018b2d6622efa4f1897244856974c45efeda99c",
          "commitAuthor": "rnveach",
          "commitDateOld": "20/04/18 11:55 AM",
          "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 0.25,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(String inPkg, String forImport) {\n+    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n         AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n         for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n-            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n+            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                 final AccessResult result \u003d importRule.verifyImport(forImport);\n                 if (result !\u003d AccessResult.UNKNOWN) {\n                     localCheckAccessResult \u003d result;\n                     break;\n                 }\n             }\n         }\n         return localCheckAccessResult;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(String inPkg, String inFileName, String forImport) {\n        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n        for (AbstractImportRule importRule : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (!importRule.isLocalOnly() || matchesExactly(inPkg, inFileName)) {\n                final AccessResult result \u003d importRule.verifyImport(forImport);\n                if (result !\u003d AccessResult.UNKNOWN) {\n                    localCheckAccessResult \u003d result;\n                    break;\n                }\n            }\n        }\n        return localCheckAccessResult;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/AbstractImportControl.java",
          "extendedDetails": {
            "oldValue": "[inPkg-String, forImport-String]",
            "newValue": "[inPkg-String, inFileName-String, forImport-String]"
          }
        }
      ]
    },
    "5c40f7d45d541f53abc912020c7d01bc82ac92b5": {
      "type": "Yparametermetachange",
      "commitMessage": "Issue #4353: refactoring: remove \u0027final\u0027 modifier from all arguments of method/c-tor at ImportControlCheck and around\n",
      "commitDate": "23/06/17 9:34 AM",
      "commitName": "5c40f7d45d541f53abc912020c7d01bc82ac92b5",
      "commitAuthor": "sharang108",
      "commitDateOld": "12/06/17 10:11 AM",
      "commitNameOld": "4a087c020c2b97130e94f9292b94cb4bc1f6ed93",
      "commitAuthorOld": "sagar-shah94",
      "daysBetweenCommits": 10.97,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(final String inPkg, final String forImport) {\n+    private AccessResult localCheckAccess(String inPkg, String forImport) {\n         AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n         for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n             if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n                 final AccessResult result \u003d importRule.verifyImport(forImport);\n                 if (result !\u003d AccessResult.UNKNOWN) {\n                     localCheckAccessResult \u003d result;\n                     break;\n                 }\n             }\n         }\n         return localCheckAccessResult;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(String inPkg, String forImport) {\n        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n        for (AbstractImportRule importRule : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n                final AccessResult result \u003d importRule.verifyImport(forImport);\n                if (result !\u003d AccessResult.UNKNOWN) {\n                    localCheckAccessResult \u003d result;\n                    break;\n                }\n            }\n        }\n        return localCheckAccessResult;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
      "extendedDetails": {
        "oldValue": "[inPkg-String(modifiers-final), forImport-String(modifiers-final)]",
        "newValue": "[inPkg-String, forImport-String]"
      }
    },
    "d6f3a17328226debcddb53ed25c39501f2781764": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3496: Enforce ReturnCount max\u003d1 in imports, regexp, naming, design, sizes packages\n",
      "commitDate": "24/04/17 7:55 AM",
      "commitName": "d6f3a17328226debcddb53ed25c39501f2781764",
      "commitAuthor": "Vladislav Lisetskii",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 87.02,
      "commitsBetweenForRepo": 318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(final String inPkg,\n-        final String forImport) {\n-        for (AbstractImportRule r : rules) {\n+    private AccessResult localCheckAccess(final String inPkg, final String forImport) {\n+        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n+        for (AbstractImportRule importRule : rules) {\n             // Check if an import rule is only meant to be applied locally.\n-            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n-                continue;\n-            }\n-            final AccessResult result \u003d r.verifyImport(forImport);\n-            if (result !\u003d AccessResult.UNKNOWN) {\n-                return result;\n+            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n+                final AccessResult result \u003d importRule.verifyImport(forImport);\n+                if (result !\u003d AccessResult.UNKNOWN) {\n+                    localCheckAccessResult \u003d result;\n+                    break;\n+                }\n             }\n         }\n-        return AccessResult.UNKNOWN;\n+        return localCheckAccessResult;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String inPkg, final String forImport) {\n        AccessResult localCheckAccessResult \u003d AccessResult.UNKNOWN;\n        for (AbstractImportRule importRule : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (!importRule.isLocalOnly() || matchesExactly(inPkg)) {\n                final AccessResult result \u003d importRule.verifyImport(forImport);\n                if (result !\u003d AccessResult.UNKNOWN) {\n                    localCheckAccessResult \u003d result;\n                    break;\n                }\n            }\n        }\n        return localCheckAccessResult;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
      "extendedDetails": {}
    },
    "3a8f8d6f398f74889354527f6836a6a99ab2ee11": {
      "type": "Yparameterchange",
      "commitMessage": "Issue #3498: ImportCheckControl refactored\n",
      "commitDate": "28/11/16 2:31 PM",
      "commitName": "3a8f8d6f398f74889354527f6836a6a99ab2ee11",
      "commitAuthor": "kazachka",
      "commitDateOld": "25/10/16 9:46 PM",
      "commitNameOld": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthorOld": "Jochen Van de Velde",
      "daysBetweenCommits": 33.74,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-    private AccessResult localCheckAccess(final String forImport,\n-        final String inPkg) {\n+    private AccessResult localCheckAccess(final String inPkg,\n+        final String forImport) {\n         for (AbstractImportRule r : rules) {\n             // Check if an import rule is only meant to be applied locally.\n             if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String inPkg,\n        final String forImport) {\n        for (AbstractImportRule r : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d r.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
      "extendedDetails": {
        "oldValue": "[forImport-String(modifiers-final), inPkg-String(modifiers-final)]",
        "newValue": "[inPkg-String(modifiers-final), forImport-String(modifiers-final)]"
      }
    },
    "5530d4c27d508c513b68af67aadede84b4cfa102": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
      "commitDate": "25/10/16 9:46 PM",
      "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
      "commitAuthor": "Jochen Van de Velde",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
          "commitDate": "25/10/16 9:46 PM",
          "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
          "commitAuthor": "Jochen Van de Velde",
          "commitDateOld": "23/10/16 12:12 PM",
          "commitNameOld": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
          "commitAuthorOld": "Jochen Van de Velde",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n         for (AbstractImportRule r : rules) {\n-            // Check if a PkgImportRule is only meant to be applied locally.\n+            // Check if an import rule is only meant to be applied locally.\n             if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg) {\n        for (AbstractImportRule r : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d r.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
          "extendedDetails": {
            "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
            "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #3514: Rename PkgControl to ImportControl\n",
          "commitDate": "25/10/16 9:46 PM",
          "commitName": "5530d4c27d508c513b68af67aadede84b4cfa102",
          "commitAuthor": "Jochen Van de Velde",
          "commitDateOld": "23/10/16 12:12 PM",
          "commitNameOld": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
          "commitAuthorOld": "Jochen Van de Velde",
          "daysBetweenCommits": 2.4,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n         for (AbstractImportRule r : rules) {\n-            // Check if a PkgImportRule is only meant to be applied locally.\n+            // Check if an import rule is only meant to be applied locally.\n             if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg) {\n        for (AbstractImportRule r : rules) {\n            // Check if an import rule is only meant to be applied locally.\n            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d r.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/ImportControl.java",
          "extendedDetails": {}
        }
      ]
    },
    "e9b3b9cdede98c359157dd8ccb501901ebe4ca88": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3497: Split Guard class in two\n",
      "commitDate": "23/10/16 12:12 PM",
      "commitName": "e9b3b9cdede98c359157dd8ccb501901ebe4ca88",
      "commitAuthor": "Jochen Van de Velde",
      "commitDateOld": "18/10/16 3:40 PM",
      "commitNameOld": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthorOld": "Volker Boerchers",
      "daysBetweenCommits": 4.86,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n-        for (Guard g : guards) {\n-            // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n+        for (AbstractImportRule r : rules) {\n+            // Check if a PkgImportRule is only meant to be applied locally.\n+            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(forImport);\n+            final AccessResult result \u003d r.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg) {\n        for (AbstractImportRule r : rules) {\n            // Check if a PkgImportRule is only meant to be applied locally.\n            if (r.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d r.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "63e8c1dd4e1da443c8533d40640fe1a3b371afe8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2999: allow regex in subpackage and importcontrol element\n",
      "commitDate": "18/10/16 3:40 PM",
      "commitName": "63e8c1dd4e1da443c8533d40640fe1a3b371afe8",
      "commitAuthor": "Volker Boerchers",
      "commitDateOld": "20/09/16 7:52 PM",
      "commitNameOld": "fbf3f95c2273be23b966cba6e6ef89390a6fb020",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 27.83,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private AccessResult localCheckAccess(final String forImport,\n         final String inPkg) {\n         for (Guard g : guards) {\n             // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n+            if (g.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d g.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg) {\n        for (Guard g : guards) {\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !matchesExactly(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "16dac636b246c658cad31ee9b2e45c53b851d4f2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, imports, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private AccessResult localCheckAccess(final String aForImport,\n-        final String aInPkg)\n+    private AccessResult localCheckAccess(final String forImport,\n+        final String inPkg)\n     {\n-        for (Guard g : mGuards) {\n+        for (Guard g : guards) {\n             // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n+            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(aForImport);\n+            final AccessResult result \u003d g.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg)\n    {\n        for (Guard g : guards) {\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {
            "oldValue": "[aForImport-String(modifiers-final), aInPkg-String(modifiers-final)]",
            "newValue": "[forImport-String(modifiers-final), inPkg-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, imports, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "16dac636b246c658cad31ee9b2e45c53b851d4f2",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 471,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    private AccessResult localCheckAccess(final String aForImport,\n-        final String aInPkg)\n+    private AccessResult localCheckAccess(final String forImport,\n+        final String inPkg)\n     {\n-        for (Guard g : mGuards) {\n+        for (Guard g : guards) {\n             // Check if a Guard is only meant to be applied locally.\n-            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n+            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(aForImport);\n+            final AccessResult result \u003d g.verifyImport(forImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String forImport,\n        final String inPkg)\n    {\n        for (Guard g : guards) {\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !fullPackage.equals(inPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(forImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private AccessResult localCheckAccess(final String aForImport,\n        final String aInPkg)\n    {\n        for (Guard g : mGuards) {\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(aForImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java"
      }
    },
    "f1afaf83f39b83cc3bd07a2388448b262652a76b": {
      "type": "Ybodychange",
      "commitMessage": "Finish of adding generics.\n",
      "commitDate": "15/12/07 12:14 AM",
      "commitName": "f1afaf83f39b83cc3bd07a2388448b262652a76b",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "27/01/07 6:51 AM",
      "commitNameOld": "1efc394250b8f1c79bd7f8344b738a7d13396ed3",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 321.72,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,15 @@\n     private AccessResult localCheckAccess(final String aForImport,\n         final String aInPkg)\n     {\n-        final Iterator it \u003d mGuards.iterator();\n-        while (it.hasNext()) {\n-            final Guard g \u003d (Guard) it.next();\n+        for (Guard g : mGuards) {\n             // Check if a Guard is only meant to be applied locally.\n             if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                 continue;\n             }\n             final AccessResult result \u003d g.verifyImport(aForImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String aForImport,\n        final String aInPkg)\n    {\n        for (Guard g : mGuards) {\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(aForImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "c38185458ab824874b8465c46b4dc42646440aaa": {
      "type": "Ybodychange",
      "commitMessage": "Code cleanup\n",
      "commitDate": "21/01/06 4:43 AM",
      "commitName": "c38185458ab824874b8465c46b4dc42646440aaa",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "31/07/05 5:27 AM",
      "commitNameOld": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 174.01,
      "commitsBetweenForRepo": 80,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     private AccessResult localCheckAccess(final String aForImport,\n         final String aInPkg)\n     {\n         final Iterator it \u003d mGuards.iterator();\n         while (it.hasNext()) {\n             final Guard g \u003d (Guard) it.next();\n             // Check if a Guard is only meant to be applied locally.\n             if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                 continue;\n             }\n-            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n+            final AccessResult result \u003d g.verifyImport(aForImport);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String aForImport,\n        final String aInPkg)\n    {\n        final Iterator it \u003d mGuards.iterator();\n        while (it.hasNext()) {\n            final Guard g \u003d (Guard) it.next();\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(aForImport);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
      "extendedDetails": {}
    },
    "a5d30bf353dde01376d45fb031d9236b11a835d1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
      "commitDate": "31/07/05 5:27 AM",
      "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
          "commitDate": "31/07/05 5:27 AM",
          "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/07/05 1:29 PM",
          "commitNameOld": "1951594e90a04aa2f2b14021ce3318604218ba19",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 3.67,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-    private AccessResult localCheckAccess(final String aForPkg)\n+    private AccessResult localCheckAccess(final String aForImport,\n+        final String aInPkg)\n     {\n         final Iterator it \u003d mGuards.iterator();\n         while (it.hasNext()) {\n             final Guard g \u003d (Guard) it.next();\n-            final AccessResult result \u003d g.verify(aForPkg);\n+            // Check if a Guard is only meant to be applied locally.\n+            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n+                continue;\n+            }\n+            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String aForImport,\n        final String aInPkg)\n    {\n        final Iterator it \u003d mGuards.iterator();\n        while (it.hasNext()) {\n            final Guard g \u003d (Guard) it.next();\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {
            "oldValue": "[aForPkg-String(modifiers-final)]",
            "newValue": "[aForImport-String(modifiers-final), aInPkg-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added a lot more configuration options for the ImportControlCheck that\ncame out of using at work. I still need to improve the unit tests and\nproperly document the support options. Wanted to check in now for\nbackup.\n",
          "commitDate": "31/07/05 5:27 AM",
          "commitName": "a5d30bf353dde01376d45fb031d9236b11a835d1",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "27/07/05 1:29 PM",
          "commitNameOld": "1951594e90a04aa2f2b14021ce3318604218ba19",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 3.67,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,17 @@\n-    private AccessResult localCheckAccess(final String aForPkg)\n+    private AccessResult localCheckAccess(final String aForImport,\n+        final String aInPkg)\n     {\n         final Iterator it \u003d mGuards.iterator();\n         while (it.hasNext()) {\n             final Guard g \u003d (Guard) it.next();\n-            final AccessResult result \u003d g.verify(aForPkg);\n+            // Check if a Guard is only meant to be applied locally.\n+            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n+                continue;\n+            }\n+            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n             if (result !\u003d AccessResult.UNKNOWN) {\n                 return result;\n             }\n         }\n         return AccessResult.UNKNOWN;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private AccessResult localCheckAccess(final String aForImport,\n        final String aInPkg)\n    {\n        final Iterator it \u003d mGuards.iterator();\n        while (it.hasNext()) {\n            final Guard g \u003d (Guard) it.next();\n            // Check if a Guard is only meant to be applied locally.\n            if (g.isLocalOnly() \u0026\u0026 !mFullPackage.equals(aInPkg)) {\n                continue;\n            }\n            final AccessResult result \u003d g.verifyImport(aForImport, aInPkg);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1951594e90a04aa2f2b14021ce3318604218ba19": {
      "type": "Yintroduced",
      "commitMessage": "Added the ImportControl check. This is a check that can be used to\nenforce which packages can import which packages. I was required to\ndevelop this for a large project to enforce application layering rules.\n\nThe check is fairly basic at the moment, but is still sufficiently\npowerful to be useful. I am sure there will be feature requests in the\nfuture.\n",
      "commitDate": "27/07/05 1:29 PM",
      "commitName": "1951594e90a04aa2f2b14021ce3318604218ba19",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,12 @@\n+    private AccessResult localCheckAccess(final String aForPkg)\n+    {\n+        final Iterator it \u003d mGuards.iterator();\n+        while (it.hasNext()) {\n+            final Guard g \u003d (Guard) it.next();\n+            final AccessResult result \u003d g.verify(aForPkg);\n+            if (result !\u003d AccessResult.UNKNOWN) {\n+                return result;\n+            }\n+        }\n+        return AccessResult.UNKNOWN;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private AccessResult localCheckAccess(final String aForPkg)\n    {\n        final Iterator it \u003d mGuards.iterator();\n        while (it.hasNext()) {\n            final Guard g \u003d (Guard) it.next();\n            final AccessResult result \u003d g.verify(aForPkg);\n            if (result !\u003d AccessResult.UNKNOWN) {\n                return result;\n            }\n        }\n        return AccessResult.UNKNOWN;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/imports/PkgControl.java"
    }
  }
}