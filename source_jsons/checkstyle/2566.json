{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ArrayTypeStyleCheck.java",
  "functionName": "visitToken",
  "functionId": "visitToken___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
  "functionStartLine": 126,
  "functionEndLine": 144,
  "numCommitsSeen": 56,
  "timeTaken": 2442,
  "changeHistory": [
    "404143cc4907513e87a5977883336814a202c15f",
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
    "74c41b3aaa97a1b013656d04bba3835920008bbd",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc",
    "c3674faad8a38656e910750fb22a7eef714fb8a7",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d",
    "f8946ef5332dd318bb5108567581b9bd857a51bd",
    "e57fd6346980d2d6248a292b0cb51c5768c81b1f",
    "5133219581cf14cb25c009c31d6067173430261e",
    "669def894ec6fa19946acd3b586508aed450a4de"
  ],
  "changeHistoryShort": {
    "404143cc4907513e87a5977883336814a202c15f": "Ybodychange",
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": "Ybodychange",
    "74c41b3aaa97a1b013656d04bba3835920008bbd": "Ybodychange",
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": "Ybodychange",
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc": "Ybodychange",
    "c3674faad8a38656e910750fb22a7eef714fb8a7": "Ybodychange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d": "Ybodychange",
    "f8946ef5332dd318bb5108567581b9bd857a51bd": "Ybodychange",
    "e57fd6346980d2d6248a292b0cb51c5768c81b1f": "Ybodychange",
    "5133219581cf14cb25c009c31d6067173430261e": "Ybodychange",
    "669def894ec6fa19946acd3b586508aed450a4de": "Yintroduced"
  },
  "changeHistoryDetails": {
    "404143cc4907513e87a5977883336814a202c15f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6301: ArrayTypeStyle support for method definitions\n",
      "commitDate": "22/02/19 11:56 AM",
      "commitName": "404143cc4907513e87a5977883336814a202c15f",
      "commitAuthor": "Erik Silkensen",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 38.26,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n-        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n-                // Do not check method\u0027s return type.\n-                // We have no alternatives here.\n-                \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n+        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE) {\n             final DetailAST variableAST \u003d typeAST.getNextSibling();\n             if (variableAST !\u003d null) {\n-                final boolean isJavaStyle \u003d\n-                    variableAST.getLineNo() \u003e ast.getLineNo()\n+                final boolean isMethod \u003d typeAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_DEF;\n+                final boolean isJavaStyle \u003d variableAST.getLineNo() \u003e ast.getLineNo()\n                     || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n \n-                if (isJavaStyle !\u003d javaStyle) {\n+                // force all methods to be Java style (see note in top Javadoc)\n+                final boolean isMethodViolation \u003d isMethod \u0026\u0026 !isJavaStyle;\n+                final boolean isVariableViolation \u003d !isMethod \u0026\u0026 isJavaStyle !\u003d javaStyle;\n+\n+                if (isMethodViolation || isVariableViolation) {\n                     log(ast, MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE) {\n            final DetailAST variableAST \u003d typeAST.getNextSibling();\n            if (variableAST !\u003d null) {\n                final boolean isMethod \u003d typeAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_DEF;\n                final boolean isJavaStyle \u003d variableAST.getLineNo() \u003e ast.getLineNo()\n                    || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n\n                // force all methods to be Java style (see note in top Javadoc)\n                final boolean isMethodViolation \u003d isMethod \u0026\u0026 !isJavaStyle;\n                final boolean isVariableViolation \u003d !isMethod \u0026\u0026 isJavaStyle !\u003d javaStyle;\n\n                if (isMethodViolation || isVariableViolation) {\n                    log(ast, MSG_KEY);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "e775eaa2e59949961f9b43d22e88d6b4be7774fd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5757: switched simple log line/column to log ast",
      "commitDate": "07/05/18 6:56 PM",
      "commitName": "e775eaa2e59949961f9b43d22e88d6b4be7774fd",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.24,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n                 // Do not check method\u0027s return type.\n                 // We have no alternatives here.\n                 \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n             final DetailAST variableAST \u003d typeAST.getNextSibling();\n             if (variableAST !\u003d null) {\n                 final boolean isJavaStyle \u003d\n                     variableAST.getLineNo() \u003e ast.getLineNo()\n                     || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n \n                 if (isJavaStyle !\u003d javaStyle) {\n-                    log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n+                    log(ast, MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n                // Do not check method\u0027s return type.\n                // We have no alternatives here.\n                \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n            final DetailAST variableAST \u003d typeAST.getNextSibling();\n            if (variableAST !\u003d null) {\n                final boolean isJavaStyle \u003d\n                    variableAST.getLineNo() \u003e ast.getLineNo()\n                    || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n\n                if (isJavaStyle !\u003d javaStyle) {\n                    log(ast, MSG_KEY);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "74c41b3aaa97a1b013656d04bba3835920008bbd": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4675: increase coverage of pitest-checks-misc to 93%\n",
      "commitDate": "21/08/17 5:47 AM",
      "commitName": "74c41b3aaa97a1b013656d04bba3835920008bbd",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "27/01/17 6:31 AM",
      "commitNameOld": "b4a337a599e853cdc44b19a76da28fcfab2956cd",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 205.93,
      "commitsBetweenForRepo": 804,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n                 // Do not check method\u0027s return type.\n                 // We have no alternatives here.\n                 \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n             final DetailAST variableAST \u003d typeAST.getNextSibling();\n             if (variableAST !\u003d null) {\n                 final boolean isJavaStyle \u003d\n                     variableAST.getLineNo() \u003e ast.getLineNo()\n-                    || variableAST.getColumnNo() \u003e ast.getColumnNo();\n+                    || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n \n                 if (isJavaStyle !\u003d javaStyle) {\n                     log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n                 }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n                // Do not check method\u0027s return type.\n                // We have no alternatives here.\n                \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n            final DetailAST variableAST \u003d typeAST.getNextSibling();\n            if (variableAST !\u003d null) {\n                final boolean isJavaStyle \u003d\n                    variableAST.getLineNo() \u003e ast.getLineNo()\n                    || variableAST.getColumnNo() - ast.getColumnNo() \u003e -1;\n\n                if (isJavaStyle !\u003d javaStyle) {\n                    log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "39b343a32a4f1ce18ee98a34618fda0a5404d6a0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3143: forbid empty return statements and fixed violations",
      "commitDate": "27/05/16 6:42 AM",
      "commitName": "39b343a32a4f1ce18ee98a34618fda0a5404d6a0",
      "commitAuthor": "rnveach",
      "commitDateOld": "05/02/16 6:01 AM",
      "commitNameOld": "cf96dd9adcf0c3c8f8f05a9ffdcb765cafe17479",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 111.99,
      "commitsBetweenForRepo": 276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,18 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n-        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n-            return;\n-        }\n-        final DetailAST parentAst \u003d typeAST.getParent();\n-        if (parentAst.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n-            // Do not check method\u0027s return type.\n-            // We have no alternatives here.\n-            return;\n-        }\n+        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n+                // Do not check method\u0027s return type.\n+                // We have no alternatives here.\n+                \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n+            final DetailAST variableAST \u003d typeAST.getNextSibling();\n+            if (variableAST !\u003d null) {\n+                final boolean isJavaStyle \u003d\n+                    variableAST.getLineNo() \u003e ast.getLineNo()\n+                    || variableAST.getColumnNo() \u003e ast.getColumnNo();\n \n-        final DetailAST variableAST \u003d typeAST.getNextSibling();\n-        if (variableAST !\u003d null) {\n-            final boolean isJavaStyle \u003d\n-                variableAST.getLineNo() \u003e ast.getLineNo()\n-                || variableAST.getColumnNo() \u003e ast.getColumnNo();\n-\n-            if (isJavaStyle !\u003d javaStyle) {\n-                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n+                if (isJavaStyle !\u003d javaStyle) {\n+                    log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n+                }\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() \u003d\u003d TokenTypes.TYPE\n                // Do not check method\u0027s return type.\n                // We have no alternatives here.\n                \u0026\u0026 typeAST.getParent().getType() !\u003d TokenTypes.METHOD_DEF) {\n            final DetailAST variableAST \u003d typeAST.getNextSibling();\n            if (variableAST !\u003d null) {\n                final boolean isJavaStyle \u003d\n                    variableAST.getLineNo() \u003e ast.getLineNo()\n                    || variableAST.getColumnNo() \u003e ast.getColumnNo();\n\n                if (isJavaStyle !\u003d javaStyle) {\n                    log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n                }\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "cd8f1c3183f391e13f409d8e9b71d842e7a164bc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2836: moved inline strings to error message fields",
      "commitDate": "21/01/16 6:40 AM",
      "commitName": "cd8f1c3183f391e13f409d8e9b71d842e7a164bc",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 16.59,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST parentAst \u003d typeAST.getParent();\n         if (parentAst.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n                 variableAST.getLineNo() \u003e ast.getLineNo()\n                 || variableAST.getColumnNo() \u003e ast.getColumnNo();\n \n             if (isJavaStyle !\u003d javaStyle) {\n-                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n+                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST parentAst \u003d typeAST.getParent();\n        if (parentAst.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                variableAST.getLineNo() \u003e ast.getLineNo()\n                || variableAST.getColumnNo() \u003e ast.getColumnNo();\n\n            if (isJavaStyle !\u003d javaStyle) {\n                log(ast.getLineNo(), ast.getColumnNo(), MSG_KEY);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "c3674faad8a38656e910750fb22a7eef714fb8a7": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1555: Fix some typos in checks package\n\nFixes some `SpellCheckingInspection` inspection violations.\n\nDescription:\n\u003eSpellchecker inspection helps locate typos and misspelling in your code, comments and literals.\n",
      "commitDate": "28/08/15 10:59 PM",
      "commitName": "c3674faad8a38656e910750fb22a7eef714fb8a7",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/08/15 1:25 AM",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 10.9,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     public void visitToken(DetailAST ast) {\n         final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n-        final DetailAST declAST \u003d typeAST.getParent();\n-        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+        final DetailAST parentAst \u003d typeAST.getParent();\n+        if (parentAst.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n                 variableAST.getLineNo() \u003e ast.getLineNo()\n                 || variableAST.getColumnNo() \u003e ast.getColumnNo();\n \n             if (isJavaStyle !\u003d javaStyle) {\n                 log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast) {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST parentAst \u003d typeAST.getParent();\n        if (parentAst.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                variableAST.getLineNo() \u003e ast.getLineNo()\n                || variableAST.getColumnNo() \u003e ast.getColumnNo();\n\n            if (isJavaStyle !\u003d javaStyle) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST ast)\n     {\n         final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST declAST \u003d typeAST.getParent();\n         if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n-                (variableAST.getLineNo() \u003e ast.getLineNo())\n-                || (variableAST.getColumnNo() \u003e ast.getColumnNo());\n+                variableAST.getLineNo() \u003e ast.getLineNo()\n+                || variableAST.getColumnNo() \u003e ast.getColumnNo();\n \n             if (isJavaStyle !\u003d javaStyle) {\n                 log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                variableAST.getLineNo() \u003e ast.getLineNo()\n                || variableAST.getColumnNo() \u003e ast.getColumnNo();\n\n            if (isJavaStyle !\u003d javaStyle) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
      "commitDate": "19/01/15 6:37 AM",
      "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 475,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final DetailAST typeAST \u003d aAST.getParent();\n+        final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST declAST \u003d typeAST.getParent();\n         if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n-                (variableAST.getLineNo() \u003e aAST.getLineNo())\n-                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n+                (variableAST.getLineNo() \u003e ast.getLineNo())\n+                || (variableAST.getColumnNo() \u003e ast.getColumnNo());\n \n-            if (isJavaStyle !\u003d mJavaStyle) {\n-                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n+            if (isJavaStyle !\u003d javaStyle) {\n+                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e ast.getLineNo())\n                || (variableAST.getColumnNo() \u003e ast.getColumnNo());\n\n            if (isJavaStyle !\u003d javaStyle) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checks, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/checks/NewlineAtEndOfFileCheck.java\n",
          "commitDate": "19/01/15 6:37 AM",
          "commitName": "58219b9bd31c8f7fbc4f4bba0eeb811851f276b3",
          "commitAuthor": "alexkravin",
          "commitDateOld": "04/03/14 9:18 AM",
          "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
          "commitAuthorOld": "Ivan Sopov",
          "daysBetweenCommits": 320.89,
          "commitsBetweenForRepo": 475,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,24 @@\n-    public void visitToken(DetailAST aAST)\n+    public void visitToken(DetailAST ast)\n     {\n-        final DetailAST typeAST \u003d aAST.getParent();\n+        final DetailAST typeAST \u003d ast.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST declAST \u003d typeAST.getParent();\n         if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n-                (variableAST.getLineNo() \u003e aAST.getLineNo())\n-                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n+                (variableAST.getLineNo() \u003e ast.getLineNo())\n+                || (variableAST.getColumnNo() \u003e ast.getColumnNo());\n \n-            if (isJavaStyle !\u003d mJavaStyle) {\n-                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n+            if (isJavaStyle !\u003d javaStyle) {\n+                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void visitToken(DetailAST ast)\n    {\n        final DetailAST typeAST \u003d ast.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e ast.getLineNo())\n                || (variableAST.getColumnNo() \u003e ast.getColumnNo());\n\n            if (isJavaStyle !\u003d javaStyle) {\n                log(ast.getLineNo(), ast.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e aAST.getLineNo())\n                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "13/01/08 11:42 PM",
      "commitNameOld": "fd90bd5aa5cd623b08a2e44ef05e8fac8045d333",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 248.16,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST typeAST \u003d aAST.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST declAST \u003d typeAST.getParent();\n         if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n-        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n+        final DetailAST variableAST \u003d typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n                 (variableAST.getLineNo() \u003e aAST.getLineNo())\n                 || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n \n             if (isJavaStyle !\u003d mJavaStyle) {\n                 log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e aAST.getLineNo())\n                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d": {
      "type": "Ybodychange",
      "commitMessage": "i18n support for HideUtilityClassCtor and ArrayTypeStyle checks (bug 1262825)\n",
      "commitDate": "08/09/05 5:32 AM",
      "commitName": "9cbee6a57e6ad5167c3d9406f272fd44350f5e1d",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/01/05 2:50 AM",
      "commitNameOld": "0d887cde58e54d920644ee543dab346b93e8aae9",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 242.07,
      "commitsBetweenForRepo": 208,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST typeAST \u003d aAST.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n         final DetailAST declAST \u003d typeAST.getParent();\n         if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n             // Do not check method\u0027s return type.\n             // We have no alternatives here.\n             return;\n         }\n \n         final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n                 (variableAST.getLineNo() \u003e aAST.getLineNo())\n                 || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n \n             if (isJavaStyle !\u003d mJavaStyle) {\n-                log(\n-                    aAST.getLineNo(),\n-                    aAST.getColumnNo(),\n-                    \"Array brackets at illegal position.\");\n+                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e aAST.getLineNo())\n                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(aAST.getLineNo(), aAST.getColumnNo(), \"array.type.style\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "f8946ef5332dd318bb5108567581b9bd857a51bd": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 849450 (ArrayTypeStyle should only check variable/parameter decls).\n",
      "commitDate": "26/11/03 10:12 PM",
      "commitName": "f8946ef5332dd318bb5108567581b9bd857a51bd",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "25/11/03 12:55 AM",
      "commitNameOld": "e57fd6346980d2d6248a292b0cb51c5768c81b1f",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,27 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST typeAST \u003d aAST.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n+        final DetailAST declAST \u003d typeAST.getParent();\n+        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n+            // Do not check method\u0027s return type.\n+            // We have no alternatives here.\n+            return;\n+        }\n \n         final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n                 (variableAST.getLineNo() \u003e aAST.getLineNo())\n                 || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n \n             if (isJavaStyle !\u003d mJavaStyle) {\n                 log(\n                     aAST.getLineNo(),\n                     aAST.getColumnNo(),\n                     \"Array brackets at illegal position.\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n        final DetailAST declAST \u003d typeAST.getParent();\n        if (declAST.getType() \u003d\u003d TokenTypes.METHOD_DEF) {\n            // Do not check method\u0027s return type.\n            // We have no alternatives here.\n            return;\n        }\n\n        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e aAST.getLineNo())\n                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(\n                    aAST.getLineNo(),\n                    aAST.getColumnNo(),\n                    \"Array brackets at illegal position.\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "e57fd6346980d2d6248a292b0cb51c5768c81b1f": {
      "type": "Ybodychange",
      "commitMessage": "Fix for 848750 (Linebreak confuses ArrayTypeStyle)\n",
      "commitDate": "25/11/03 12:55 AM",
      "commitName": "e57fd6346980d2d6248a292b0cb51c5768c81b1f",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "09/06/03 12:48 AM",
      "commitNameOld": "889587fdd22ba03ea670e404d36810e9af113c9d",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 169.05,
      "commitsBetweenForRepo": 262,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST typeAST \u003d aAST.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n \n         final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n         if (variableAST !\u003d null) {\n             final boolean isJavaStyle \u003d\n-                (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n+                (variableAST.getLineNo() \u003e aAST.getLineNo())\n+                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n \n             if (isJavaStyle !\u003d mJavaStyle) {\n                 log(\n                     aAST.getLineNo(),\n                     aAST.getColumnNo(),\n                     \"Array brackets at illegal position.\");\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n\n        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getLineNo() \u003e aAST.getLineNo())\n                || (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(\n                    aAST.getLineNo(),\n                    aAST.getColumnNo(),\n                    \"Array brackets at illegal position.\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "5133219581cf14cb25c009c31d6067173430261e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed NPE when running ArrayTypeStyle check (bug 744573)\n",
      "commitDate": "28/05/03 1:40 AM",
      "commitName": "5133219581cf14cb25c009c31d6067173430261e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "17/02/03 9:19 PM",
      "commitNameOld": "669def894ec6fa19946acd3b586508aed450a4de",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 99.14,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n     public void visitToken(DetailAST aAST)\n     {\n         final DetailAST typeAST \u003d aAST.getParent();\n         if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n             return;\n         }\n \n-        DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n-        boolean isJavaStyle \u003d (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n+        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n+        if (variableAST !\u003d null) {\n+            final boolean isJavaStyle \u003d\n+                (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n \n-        if (isJavaStyle !\u003d mJavaStyle) {\n-            log(aAST.getLineNo(), aAST.getColumnNo(),\n+            if (isJavaStyle !\u003d mJavaStyle) {\n+                log(\n+                    aAST.getLineNo(),\n+                    aAST.getColumnNo(),\n                     \"Array brackets at illegal position.\");\n+            }\n         }\n-\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n\n        final DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n        if (variableAST !\u003d null) {\n            final boolean isJavaStyle \u003d\n                (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n            if (isJavaStyle !\u003d mJavaStyle) {\n                log(\n                    aAST.getLineNo(),\n                    aAST.getColumnNo(),\n                    \"Array brackets at illegal position.\");\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java",
      "extendedDetails": {}
    },
    "669def894ec6fa19946acd3b586508aed450a4de": {
      "type": "Yintroduced",
      "commitMessage": "finally added all the new checks that I built during feature freeze\nneed to do more tests and write docs\n",
      "commitDate": "17/02/03 9:19 PM",
      "commitName": "669def894ec6fa19946acd3b586508aed450a4de",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,16 @@\n+    public void visitToken(DetailAST aAST)\n+    {\n+        final DetailAST typeAST \u003d aAST.getParent();\n+        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n+            return;\n+        }\n+\n+        DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n+        boolean isJavaStyle \u003d (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n+\n+        if (isJavaStyle !\u003d mJavaStyle) {\n+            log(aAST.getLineNo(), aAST.getColumnNo(),\n+                    \"Array brackets at illegal position.\");\n+        }\n+\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void visitToken(DetailAST aAST)\n    {\n        final DetailAST typeAST \u003d aAST.getParent();\n        if (typeAST.getType() !\u003d TokenTypes.TYPE) {\n            return;\n        }\n\n        DetailAST variableAST \u003d (DetailAST) typeAST.getNextSibling();\n        boolean isJavaStyle \u003d (variableAST.getColumnNo() \u003e aAST.getColumnNo());\n\n        if (isJavaStyle !\u003d mJavaStyle) {\n            log(aAST.getLineNo(), aAST.getColumnNo(),\n                    \"Array brackets at illegal position.\");\n        }\n\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/ArrayTypeStyleCheck.java"
    }
  }
}