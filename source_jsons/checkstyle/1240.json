{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EmptyLineSeparatorCheck.java",
  "functionName": "isCommentInBeginningOfLine",
  "functionId": "isCommentInBeginningOfLine___comment-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java",
  "functionStartLine": 727,
  "functionEndLine": 736,
  "numCommitsSeen": 56,
  "timeTaken": 567,
  "changeHistory": [
    "8c3743118478035f927056f958eb50a58aa30c2a"
  ],
  "changeHistoryShort": {
    "8c3743118478035f927056f958eb50a58aa30c2a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c3743118478035f927056f958eb50a58aa30c2a": {
      "type": "Yintroduced",
      "commitMessage": "Issue #5981: add validation of new lines before comments\n",
      "commitDate": "27/04/19 8:48 AM",
      "commitName": "8c3743118478035f927056f958eb50a58aa30c2a",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,10 @@\n+    private boolean isCommentInBeginningOfLine(DetailAST comment) {\n+        // [comment.getLineNo() - 1] is the number of the previous line as the numbering starts\n+        // from zero.\n+        boolean result \u003d false;\n+        if (comment !\u003d null) {\n+            final String lineWithComment \u003d getLines()[comment.getLineNo() - 1].trim();\n+            result \u003d lineWithComment.startsWith(\"//\") || lineWithComment.startsWith(\"/*\");\n+        }\n+        return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCommentInBeginningOfLine(DetailAST comment) {\n        // [comment.getLineNo() - 1] is the number of the previous line as the numbering starts\n        // from zero.\n        boolean result \u003d false;\n        if (comment !\u003d null) {\n            final String lineWithComment \u003d getLines()[comment.getLineNo() - 1].trim();\n            result \u003d lineWithComment.startsWith(\"//\") || lineWithComment.startsWith(\"/*\");\n        }\n        return result;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/whitespace/EmptyLineSeparatorCheck.java"
    }
  }
}