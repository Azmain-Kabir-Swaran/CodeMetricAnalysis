{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Checker.java",
  "functionName": "processFiles",
  "functionId": "processFiles___files-List__File__",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
  "functionStartLine": 284,
  "functionEndLine": 322,
  "numCommitsSeen": 98,
  "timeTaken": 2419,
  "changeHistory": [
    "8e7d3578d985e894dd92b2cf4939b5bfca697ac8",
    "ba435b8e49a3b60433db2122190fe50a0a493ad4",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
    "327c0bc843612486ab4ded32a2f01038e1271fd0",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b",
    "25a37e5049b7816b34c552899841a978efc37a63",
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16",
    "77acd41cf13e912caf8e68f92550a6e0b928de92",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609"
  ],
  "changeHistoryShort": {
    "8e7d3578d985e894dd92b2cf4939b5bfca697ac8": "Ybodychange",
    "ba435b8e49a3b60433db2122190fe50a0a493ad4": "Ybodychange",
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": "Ybodychange",
    "327c0bc843612486ab4ded32a2f01038e1271fd0": "Ybodychange",
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": "Ybodychange",
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": "Ybodychange",
    "25a37e5049b7816b34c552899841a978efc37a63": "Ybodychange",
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16": "Ybodychange",
    "77acd41cf13e912caf8e68f92550a6e0b928de92": "Ybodychange",
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8e7d3578d985e894dd92b2cf4939b5bfca697ac8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6297: removed files from cache when an exception occurs",
      "commitDate": "18/02/19 5:33 AM",
      "commitName": "8e7d3578d985e894dd92b2cf4939b5bfca697ac8",
      "commitAuthor": "rnveach",
      "commitDateOld": "15/01/19 5:46 AM",
      "commitNameOld": "a73ff0890c27cbe8affc1a55f2710a231687bd85",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 33.99,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,39 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n+            String fileName \u003d null;\n             try {\n-                final String fileName \u003d file.getAbsolutePath();\n+                fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n                 if (cacheFile !\u003d null) {\n                     cacheFile.put(fileName, timestamp);\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n+                if (fileName !\u003d null \u0026\u0026 cacheFile !\u003d null) {\n+                    cacheFile.remove(fileName);\n+                }\n+\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n+                if (fileName !\u003d null \u0026\u0026 cacheFile !\u003d null) {\n+                    cacheFile.remove(fileName);\n+                }\n+\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            String fileName \u003d null;\n            try {\n                fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                if (cacheFile !\u003d null) {\n                    cacheFile.put(fileName, timestamp);\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                if (fileName !\u003d null \u0026\u0026 cacheFile !\u003d null) {\n                    cacheFile.remove(fileName);\n                }\n\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                if (fileName !\u003d null \u0026\u0026 cacheFile !\u003d null) {\n                    cacheFile.remove(fileName);\n                }\n\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "ba435b8e49a3b60433db2122190fe50a0a493ad4": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6096: improve performance with not lazy usage of file.lastModified()\n",
      "commitDate": "27/11/18 6:50 AM",
      "commitName": "ba435b8e49a3b60433db2122190fe50a0a493ad4",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "05/09/18 5:54 AM",
      "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthorOld": "Boxuan Li",
      "daysBetweenCommits": 83.08,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n-                        || !CommonUtil.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n                 if (cacheFile !\u003d null) {\n                     cacheFile.put(fileName, timestamp);\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                if (cacheFile !\u003d null) {\n                    cacheFile.put(fileName, timestamp);\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5812: Rename all utility classes to xxxxUtil\n",
      "commitDate": "03/06/18 9:40 PM",
      "commitName": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 46.36,
      "commitsBetweenForRepo": 148,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n-                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n+                        || !CommonUtil.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n                 if (cacheFile !\u003d null) {\n                     cacheFile.put(fileName, timestamp);\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                        || !CommonUtil.matchesFileExtension(file, fileExtensions)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                if (cacheFile !\u003d null) {\n                    cacheFile.put(fileName, timestamp);\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "327c0bc843612486ab4ded32a2f01038e1271fd0": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3254: UT to verify all property types and values in XDocs",
      "commitDate": "03/01/18 5:30 PM",
      "commitName": "327c0bc843612486ab4ded32a2f01038e1271fd0",
      "commitAuthor": "rnveach",
      "commitDateOld": "02/01/18 1:24 PM",
      "commitNameOld": "dabb75d43c7e02317565dde4c5e60f380d3b16b8",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n-                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n+                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n-                if (cache !\u003d null) {\n-                    cache.put(fileName, timestamp);\n+                if (cacheFile !\u003d null) {\n+                    cacheFile.put(fileName, timestamp);\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cacheFile !\u003d null \u0026\u0026 cacheFile.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                if (cacheFile !\u003d null) {\n                    cacheFile.put(fileName, timestamp);\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "56cc11416ebdf52dd299d11424fb04fda42fa63f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3488: save files into cache with no un-suppressed violations",
      "commitDate": "10/11/16 11:59 AM",
      "commitName": "56cc11416ebdf52dd299d11424fb04fda42fa63f",
      "commitAuthor": "rnveach",
      "commitDateOld": "08/11/16 9:30 PM",
      "commitNameOld": "8c8fee7432c89b47936c27bcc2c7f60f5cc79923",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 1.6,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                         || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n+                if (cache !\u003d null) {\n+                    cache.put(fileName, timestamp);\n+                }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n-                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n-                    cache.put(fileName, timestamp);\n-                }\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                if (cache !\u003d null) {\n                    cache.put(fileName, timestamp);\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "fbaabe83cf78bcaf563443a3fb866931239eb15b": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2866: added before execution and exclusion file filters",
      "commitDate": "22/10/16 3:53 PM",
      "commitName": "fbaabe83cf78bcaf563443a3fb866931239eb15b",
      "commitAuthor": "rnveach",
      "commitDateOld": "13/10/16 5:27 PM",
      "commitNameOld": "c2847eae889fbeee9d93e875bcc7f72c3eb9fc0b",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 8.93,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n-                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n+                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n+                        || !acceptFileStarted(fileName)) {\n                     continue;\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n             // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)\n                        || !acceptFileStarted(fileName)) {\n                    continue;\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                    cache.put(fileName, timestamp);\n                }\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "25a37e5049b7816b34c552899841a978efc37a63": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2226: Replace line-based suppressions with inline ones (#3443)\n\n",
      "commitDate": "14/09/16 1:58 PM",
      "commitName": "25a37e5049b7816b34c552899841a978efc37a63",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "08/09/16 5:30 AM",
      "commitNameOld": "de022d2434e58dd633fd50a7f9bb50565a8767b5",
      "commitAuthorOld": "Mariia Mykhailova",
      "daysBetweenCommits": 6.35,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,30 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n                 fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n+            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n+            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                         + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                    continue;\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                    cache.put(fileName, timestamp);\n                }\n            }\n            // -@cs[IllegalCatch] There is no other way to deliver filename that was under\n            // processing. See https://github.com/checkstyle/checkstyle/issues/2285\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                        + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3022: Moved file-started audit event after file extension check\n",
      "commitDate": "20/03/16 7:42 AM",
      "commitName": "3b9b0d1e92f3b3bd90b50acb61223c9f7e466c16",
      "commitAuthor": "idarmans",
      "commitDateOld": "17/03/16 6:39 AM",
      "commitNameOld": "167dd96d8ca503a472bf003f187191d6b0ce586c",
      "commitAuthorOld": "Rasmus Kaj",
      "daysBetweenCommits": 3.04,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n-                fireFileStarted(fileName);\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                         || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n+                fireFileStarted(fileName);\n                 final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             catch (Exception ex) {\n                 // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                     + file.getPath(), ex);\n             }\n             catch (Error error) {\n                 // We need to catch all errors to put a reason failure (file name) in error\n                 throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                    continue;\n                }\n                fireFileStarted(fileName);\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                    cache.put(fileName, timestamp);\n                }\n            }\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                    + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "77acd41cf13e912caf8e68f92550a6e0b928de92": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2285: Add possibility to track down the name of source file which caused the internal Exception or Error\n",
      "commitDate": "16/02/16 11:22 AM",
      "commitName": "77acd41cf13e912caf8e68f92550a6e0b928de92",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "09/02/16 9:50 AM",
      "commitNameOld": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthorOld": "Andrei Selkin",
      "daysBetweenCommits": 7.06,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,28 @@\n     private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n         for (final File file : files) {\n             try {\n                 final String fileName \u003d file.getAbsolutePath();\n                 fireFileStarted(fileName);\n                 final long timestamp \u003d file.lastModified();\n                 if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n-                    || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n+                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                     continue;\n                 }\n-                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d Sets.newTreeSet();\n-                try {\n-                    final FileText theText \u003d new FileText(file.getAbsoluteFile(), charset);\n-                    for (final FileSetCheck fsc : fileSetChecks) {\n-                        fileMessages.addAll(fsc.process(file, theText));\n-                    }\n-                }\n-                catch (final IOException ioe) {\n-                    LOG.debug(\"IOException occurred.\", ioe);\n-                    fileMessages.add(new LocalizedMessage(0,\n-                        Definitions.CHECKSTYLE_BUNDLE, \"general.exception\",\n-                        new String[] {ioe.getMessage()}, null, getClass(), null));\n-                }\n+                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                 fireErrors(fileName, fileMessages);\n                 fireFileFinished(fileName);\n                 if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                     cache.put(fileName, timestamp);\n                 }\n             }\n             catch (Exception ex) {\n-                // We need to catch all exception to put a reason failure(file name) in exception\n+                // We need to catch all exceptions to put a reason failure (file name) in exception\n                 throw new CheckstyleException(\"Exception was thrown while processing \"\n                     + file.getPath(), ex);\n             }\n+            catch (Error error) {\n+                // We need to catch all errors to put a reason failure (file name) in error\n+                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n+            }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                fireFileStarted(fileName);\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                        || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                    continue;\n                }\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d processFile(file);\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                    cache.put(fileName, timestamp);\n                }\n            }\n            catch (Exception ex) {\n                // We need to catch all exceptions to put a reason failure (file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                    + file.getPath(), ex);\n            }\n            catch (Error error) {\n                // We need to catch all errors to put a reason failure (file name) in error\n                throw new Error(\"Error was thrown while processing \" + file.getPath(), error);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java",
      "extendedDetails": {}
    },
    "d46c2cf0e9df06bb5f424dbd7645574f082f7609": {
      "type": "Yintroduced",
      "commitMessage": "Issue #569: Move TreeWalker cache to Checker\n",
      "commitDate": "09/02/16 9:50 AM",
      "commitName": "d46c2cf0e9df06bb5f424dbd7645574f082f7609",
      "commitAuthor": "Andrei Selkin",
      "diff": "@@ -0,0 +1,36 @@\n+    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n+        for (final File file : files) {\n+            try {\n+                final String fileName \u003d file.getAbsolutePath();\n+                fireFileStarted(fileName);\n+                final long timestamp \u003d file.lastModified();\n+                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n+                    || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n+                    continue;\n+                }\n+                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d Sets.newTreeSet();\n+                try {\n+                    final FileText theText \u003d new FileText(file.getAbsoluteFile(), charset);\n+                    for (final FileSetCheck fsc : fileSetChecks) {\n+                        fileMessages.addAll(fsc.process(file, theText));\n+                    }\n+                }\n+                catch (final IOException ioe) {\n+                    LOG.debug(\"IOException occurred.\", ioe);\n+                    fileMessages.add(new LocalizedMessage(0,\n+                        Definitions.CHECKSTYLE_BUNDLE, \"general.exception\",\n+                        new String[] {ioe.getMessage()}, null, getClass(), null));\n+                }\n+                fireErrors(fileName, fileMessages);\n+                fireFileFinished(fileName);\n+                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n+                    cache.put(fileName, timestamp);\n+                }\n+            }\n+            catch (Exception ex) {\n+                // We need to catch all exception to put a reason failure(file name) in exception\n+                throw new CheckstyleException(\"Exception was thrown while processing \"\n+                    + file.getPath(), ex);\n+            }\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processFiles(List\u003cFile\u003e files) throws CheckstyleException {\n        for (final File file : files) {\n            try {\n                final String fileName \u003d file.getAbsolutePath();\n                fireFileStarted(fileName);\n                final long timestamp \u003d file.lastModified();\n                if (cache !\u003d null \u0026\u0026 cache.isInCache(fileName, timestamp)\n                    || !CommonUtils.matchesFileExtension(file, fileExtensions)) {\n                    continue;\n                }\n                final SortedSet\u003cLocalizedMessage\u003e fileMessages \u003d Sets.newTreeSet();\n                try {\n                    final FileText theText \u003d new FileText(file.getAbsoluteFile(), charset);\n                    for (final FileSetCheck fsc : fileSetChecks) {\n                        fileMessages.addAll(fsc.process(file, theText));\n                    }\n                }\n                catch (final IOException ioe) {\n                    LOG.debug(\"IOException occurred.\", ioe);\n                    fileMessages.add(new LocalizedMessage(0,\n                        Definitions.CHECKSTYLE_BUNDLE, \"general.exception\",\n                        new String[] {ioe.getMessage()}, null, getClass(), null));\n                }\n                fireErrors(fileName, fileMessages);\n                fireFileFinished(fileName);\n                if (cache !\u003d null \u0026\u0026 fileMessages.isEmpty()) {\n                    cache.put(fileName, timestamp);\n                }\n            }\n            catch (Exception ex) {\n                // We need to catch all exception to put a reason failure(file name) in exception\n                throw new CheckstyleException(\"Exception was thrown while processing \"\n                    + file.getPath(), ex);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Checker.java"
    }
  }
}