{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractExpressionHandler.java",
  "functionName": "checkChildren",
  "functionId": "checkChildren___parentNode-DetailAST__tokenTypes-int[]__startIndent-IndentLevel__firstLineMatches-boolean__allowNesting-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
  "functionStartLine": 363,
  "functionEndLine": 377,
  "numCommitsSeen": 139,
  "timeTaken": 3039,
  "changeHistory": [
    "8c891372187779376158becd95fcaf4e28b8bb8d",
    "3bd699bd593414d63c7139aa410f13ec8341a027",
    "eb5896a4a1d66552f5100046413f15d62b485b62",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
    "4409b0f2432b479bd43ca274f91d1aabd6060575",
    "661a9b0ddb10922458082573d79e0791ba6f38c2",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955"
  ],
  "changeHistoryShort": {
    "8c891372187779376158becd95fcaf4e28b8bb8d": "Ymultichange(Yparameterchange,Ybodychange)",
    "3bd699bd593414d63c7139aa410f13ec8341a027": "Ymultichange(Yparameterchange,Ybodychange)",
    "eb5896a4a1d66552f5100046413f15d62b485b62": "Yfilerename",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": "Ybodychange",
    "4409b0f2432b479bd43ca274f91d1aabd6060575": "Yparameterchange",
    "661a9b0ddb10922458082573d79e0791ba6f38c2": "Ymodifierchange",
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": "Ymovefromfile",
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c891372187779376158becd95fcaf4e28b8bb8d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "minor: renaming indentation methods to more natural name",
      "commitDate": "16/12/15 8:16 AM",
      "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
      "commitAuthor": "rnveach",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "16/12/15 7:56 AM",
          "commitNameOld": "4a6e1a3541fc31dc7450de00943fd94a20d9223e",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n     protected final void checkChildren(DetailAST parentNode,\n                                        int[] tokenTypes,\n-                                       IndentLevel startLevel,\n+                                       IndentLevel startIndent,\n                                        boolean firstLineMatches,\n                                        boolean allowNesting) {\n         Arrays.sort(tokenTypes);\n         for (DetailAST child \u003d parentNode.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n             if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n-                checkExpressionSubtree(child, startLevel,\n+                checkExpressionSubtree(child, startIndent,\n                     firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parentNode,\n                                       int[] tokenTypes,\n                                       IndentLevel startIndent,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting) {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parentNode.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling()) {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startIndent,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {
            "oldValue": "[parentNode-DetailAST, tokenTypes-int[], startLevel-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]",
            "newValue": "[parentNode-DetailAST, tokenTypes-int[], startIndent-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "minor: renaming indentation methods to more natural name",
          "commitDate": "16/12/15 8:16 AM",
          "commitName": "8c891372187779376158becd95fcaf4e28b8bb8d",
          "commitAuthor": "rnveach",
          "commitDateOld": "16/12/15 7:56 AM",
          "commitNameOld": "4a6e1a3541fc31dc7450de00943fd94a20d9223e",
          "commitAuthorOld": "rnveach",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n     protected final void checkChildren(DetailAST parentNode,\n                                        int[] tokenTypes,\n-                                       IndentLevel startLevel,\n+                                       IndentLevel startIndent,\n                                        boolean firstLineMatches,\n                                        boolean allowNesting) {\n         Arrays.sort(tokenTypes);\n         for (DetailAST child \u003d parentNode.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n             if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n-                checkExpressionSubtree(child, startLevel,\n+                checkExpressionSubtree(child, startIndent,\n                     firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parentNode,\n                                       int[] tokenTypes,\n                                       IndentLevel startIndent,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting) {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parentNode.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling()) {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startIndent,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "3bd699bd593414d63c7139aa410f13ec8341a027": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #1566: HiddenField violations fixed\n",
      "commitDate": "11/08/15 10:19 PM",
      "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
      "commitAuthor": "Ruslan Diachenko",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    protected final void checkChildren(DetailAST parent,\n+    protected final void checkChildren(DetailAST parentNode,\n                                        int[] tokenTypes,\n                                        IndentLevel startLevel,\n                                        boolean firstLineMatches,\n                                        boolean allowNesting) {\n         Arrays.sort(tokenTypes);\n-        for (DetailAST child \u003d parent.getFirstChild();\n+        for (DetailAST child \u003d parentNode.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n             if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                 checkExpressionSubtree(child, startLevel,\n                     firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parentNode,\n                                       int[] tokenTypes,\n                                       IndentLevel startLevel,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting) {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parentNode.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling()) {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startLevel,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {
            "oldValue": "[parent-DetailAST, tokenTypes-int[], startLevel-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]",
            "newValue": "[parentNode-DetailAST, tokenTypes-int[], startLevel-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #1566: HiddenField violations fixed\n",
          "commitDate": "11/08/15 10:19 PM",
          "commitName": "3bd699bd593414d63c7139aa410f13ec8341a027",
          "commitAuthor": "Ruslan Diachenko",
          "commitDateOld": "11/08/15 5:18 AM",
          "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 0.71,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-    protected final void checkChildren(DetailAST parent,\n+    protected final void checkChildren(DetailAST parentNode,\n                                        int[] tokenTypes,\n                                        IndentLevel startLevel,\n                                        boolean firstLineMatches,\n                                        boolean allowNesting) {\n         Arrays.sort(tokenTypes);\n-        for (DetailAST child \u003d parent.getFirstChild();\n+        for (DetailAST child \u003d parentNode.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling()) {\n             if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                 checkExpressionSubtree(child, startLevel,\n                     firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parentNode,\n                                       int[] tokenTypes,\n                                       IndentLevel startLevel,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting) {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parentNode.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling()) {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startLevel,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "eb5896a4a1d66552f5100046413f15d62b485b62": {
      "type": "Yfilerename",
      "commitMessage": "Fix PMD violations for AbstractNaming rule #983\n",
      "commitDate": "18/06/15 10:52 AM",
      "commitName": "eb5896a4a1d66552f5100046413f15d62b485b62",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "17/06/15 11:20 PM",
      "commitNameOld": "0382b7907b54e95408344863915a847dabc37f12",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 0.48,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final void checkChildren(DetailAST parent,\n                                       int[] tokenTypes,\n                                       IndentLevel startLevel,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting) {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parent.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling()) {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startLevel,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/AbstractExpressionHandler.java"
      }
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    protected final void checkChildren(DetailAST aParent,\n-                                       int[] aTokenTypes,\n-                                       IndentLevel aStartLevel,\n-                                       boolean aFirstLineMatches,\n-                                       boolean aAllowNesting)\n+    protected final void checkChildren(DetailAST parent,\n+                                       int[] tokenTypes,\n+                                       IndentLevel startLevel,\n+                                       boolean firstLineMatches,\n+                                       boolean allowNesting)\n     {\n-        Arrays.sort(aTokenTypes);\n-        for (DetailAST child \u003d aParent.getFirstChild();\n+        Arrays.sort(tokenTypes);\n+        for (DetailAST child \u003d parent.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling())\n         {\n-            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n-                checkExpressionSubtree(child, aStartLevel,\n-                    aFirstLineMatches, aAllowNesting);\n+            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n+                checkExpressionSubtree(child, startLevel,\n+                    firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parent,\n                                       int[] tokenTypes,\n                                       IndentLevel startLevel,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting)\n    {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parent.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling())\n        {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startLevel,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
          "extendedDetails": {
            "oldValue": "[aParent-DetailAST, aTokenTypes-int[], aStartLevel-IndentLevel, aFirstLineMatches-boolean, aAllowNesting-boolean]",
            "newValue": "[parent-DetailAST, tokenTypes-int[], startLevel-IndentLevel, firstLineMatches-boolean, allowNesting-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, indentation, #512\n",
          "commitDate": "19/01/15 6:34 AM",
          "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
          "commitAuthor": "alexkravin",
          "commitDateOld": "02/11/14 11:48 AM",
          "commitNameOld": "cba6fc8b0a653a795107566f895d2b8f73e2c6c9",
          "commitAuthorOld": "sopov.ivan",
          "daysBetweenCommits": 77.78,
          "commitsBetweenForRepo": 248,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-    protected final void checkChildren(DetailAST aParent,\n-                                       int[] aTokenTypes,\n-                                       IndentLevel aStartLevel,\n-                                       boolean aFirstLineMatches,\n-                                       boolean aAllowNesting)\n+    protected final void checkChildren(DetailAST parent,\n+                                       int[] tokenTypes,\n+                                       IndentLevel startLevel,\n+                                       boolean firstLineMatches,\n+                                       boolean allowNesting)\n     {\n-        Arrays.sort(aTokenTypes);\n-        for (DetailAST child \u003d aParent.getFirstChild();\n+        Arrays.sort(tokenTypes);\n+        for (DetailAST child \u003d parent.getFirstChild();\n                 child !\u003d null;\n                 child \u003d child.getNextSibling())\n         {\n-            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n-                checkExpressionSubtree(child, aStartLevel,\n-                    aFirstLineMatches, aAllowNesting);\n+            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n+                checkExpressionSubtree(child, startLevel,\n+                    firstLineMatches, allowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    protected final void checkChildren(DetailAST parent,\n                                       int[] tokenTypes,\n                                       IndentLevel startLevel,\n                                       boolean firstLineMatches,\n                                       boolean allowNesting)\n    {\n        Arrays.sort(tokenTypes);\n        for (DetailAST child \u003d parent.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling())\n        {\n            if (Arrays.binarySearch(tokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, startLevel,\n                    firstLineMatches, allowNesting);\n            }\n        }\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected final void checkChildren(DetailAST aParent,\n                                       int[] aTokenTypes,\n                                       IndentLevel aStartLevel,\n                                       boolean aFirstLineMatches,\n                                       boolean aAllowNesting)\n    {\n        Arrays.sort(aTokenTypes);\n        for (DetailAST child \u003d aParent.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling())\n        {\n            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, aStartLevel,\n                    aFirstLineMatches, aAllowNesting);\n            }\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java"
      }
    },
    "d62a2cc02092cb6c1a1666630a51a6ec7c50a878": {
      "type": "Ybodychange",
      "commitMessage": "Inspired by patch# 2111354 - changes to remove casting. Neat trick\n",
      "commitDate": "18/09/08 4:34 AM",
      "commitName": "d62a2cc02092cb6c1a1666630a51a6ec7c50a878",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "12/01/08 6:47 PM",
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 249.37,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n     protected final void checkChildren(DetailAST aParent,\n                                        int[] aTokenTypes,\n                                        IndentLevel aStartLevel,\n                                        boolean aFirstLineMatches,\n                                        boolean aAllowNesting)\n     {\n         Arrays.sort(aTokenTypes);\n-        for (DetailAST child \u003d (DetailAST) aParent.getFirstChild();\n+        for (DetailAST child \u003d aParent.getFirstChild();\n                 child !\u003d null;\n-                child \u003d (DetailAST) child.getNextSibling())\n+                child \u003d child.getNextSibling())\n         {\n             if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                 checkExpressionSubtree(child, aStartLevel,\n                     aFirstLineMatches, aAllowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkChildren(DetailAST aParent,\n                                       int[] aTokenTypes,\n                                       IndentLevel aStartLevel,\n                                       boolean aFirstLineMatches,\n                                       boolean aAllowNesting)\n    {\n        Arrays.sort(aTokenTypes);\n        for (DetailAST child \u003d aParent.getFirstChild();\n                child !\u003d null;\n                child \u003d child.getNextSibling())\n        {\n            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, aStartLevel,\n                    aFirstLineMatches, aAllowNesting);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {}
    },
    "4409b0f2432b479bd43ca274f91d1aabd6060575": {
      "type": "Yparameterchange",
      "commitMessage": "Indentation.\nNow the check allows both\nnew int[] {1,\n           2}\nand\nnew int[] {1,\n    2}\nIndent styles.\n",
      "commitDate": "02/06/03 8:37 PM",
      "commitName": "4409b0f2432b479bd43ca274f91d1aabd6060575",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "19/05/03 12:24 PM",
      "commitNameOld": "e24b54962437789e3178758e06c90df5c2f6bbc1",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 14.34,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     protected final void checkChildren(DetailAST aParent, int[] aTokenTypes,\n-        int aStartLevel,\n+        IndentLevel aStartLevel,\n         boolean aFirstLineMatches, boolean aAllowNesting)\n     {\n         Arrays.sort(aTokenTypes);\n         for (DetailAST child \u003d (DetailAST) aParent.getFirstChild();\n                 child !\u003d null;\n                 child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                 checkExpressionSubtree(child, aStartLevel,\n                     aFirstLineMatches, aAllowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkChildren(DetailAST aParent, int[] aTokenTypes,\n        IndentLevel aStartLevel,\n        boolean aFirstLineMatches, boolean aAllowNesting)\n    {\n        Arrays.sort(aTokenTypes);\n        for (DetailAST child \u003d (DetailAST) aParent.getFirstChild();\n                child !\u003d null;\n                child \u003d (DetailAST) child.getNextSibling())\n        {\n            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, aStartLevel,\n                    aFirstLineMatches, aAllowNesting);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {
        "oldValue": "[aParent-DetailAST, aTokenTypes-int[], aStartLevel-int, aFirstLineMatches-boolean, aAllowNesting-boolean]",
        "newValue": "[aParent-DetailAST, aTokenTypes-int[], aStartLevel-IndentLevel, aFirstLineMatches-boolean, aAllowNesting-boolean]"
      }
    },
    "661a9b0ddb10922458082573d79e0791ba6f38c2": {
      "type": "Ymodifierchange",
      "commitMessage": "Cosmetic changes in ExpressionHandle and LineSet.\nFixed bug with:\nif (foo()\n    || con1\n    || con3)\n{\n}\n\nInput for unit-test modified.\n",
      "commitDate": "18/05/03 11:48 AM",
      "commitName": "661a9b0ddb10922458082573d79e0791ba6f38c2",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "15/05/03 7:54 PM",
      "commitNameOld": "8d9d5e58ac50133f15ad8807bea302ab16aa5071",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    protected void checkChildren(DetailAST aParent, int[] aTokenTypes,\n+    protected final void checkChildren(DetailAST aParent, int[] aTokenTypes,\n         int aStartLevel,\n         boolean aFirstLineMatches, boolean aAllowNesting)\n     {\n         Arrays.sort(aTokenTypes);\n         for (DetailAST child \u003d (DetailAST) aParent.getFirstChild();\n                 child !\u003d null;\n                 child \u003d (DetailAST) child.getNextSibling())\n         {\n             if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                 checkExpressionSubtree(child, aStartLevel,\n                     aFirstLineMatches, aAllowNesting);\n             }\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected final void checkChildren(DetailAST aParent, int[] aTokenTypes,\n        int aStartLevel,\n        boolean aFirstLineMatches, boolean aAllowNesting)\n    {\n        Arrays.sort(aTokenTypes);\n        for (DetailAST child \u003d (DetailAST) aParent.getFirstChild();\n                child !\u003d null;\n                child \u003d (DetailAST) child.getNextSibling())\n        {\n            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, aStartLevel,\n                    aFirstLineMatches, aAllowNesting);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[protected, final]"
      }
    },
    "eaad55fdba73e17e103dc6600867f26fd6a3896b": {
      "type": "Ymovefromfile",
      "commitMessage": "Refactoring of original IndentationCheck made by Jeff Weston (Sir Toby) applied.\nFixed two know problems:\n - with static init block (catched by testValidBlockWithChecker())\n - with throws in method definition.\n   unit-test (testInvalidMethodWithChecker()) fixed too.\n",
      "commitDate": "11/05/03 12:53 AM",
      "commitName": "eaad55fdba73e17e103dc6600867f26fd6a3896b",
      "commitAuthor": "Oleg Sukhodolsky",
      "commitDateOld": "11/05/03 12:31 AM",
      "commitNameOld": "bf6758b29dbb6f0e22d4951ea3bd25fdf45299fc",
      "commitAuthorOld": "Lars Kühne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-        protected void checkChildren(DetailAST aParent, int[] aTokenTypes, \n-            int aStartLevel, \n-            boolean aFirstLineMatches, boolean aAllowNesting) \n+    protected void checkChildren(DetailAST aParent, int[] aTokenTypes, \n+        int aStartLevel, \n+        boolean aFirstLineMatches, boolean aAllowNesting) \n+    {\n+        Arrays.sort(aTokenTypes);\n+        for (DetailAST child \u003d (DetailAST) aParent.getFirstChild(); \n+                child !\u003d null; \n+                child \u003d (DetailAST) child.getNextSibling()) \n         {\n-            Arrays.sort(aTokenTypes);\n-            for (DetailAST child \u003d (DetailAST) aParent.getFirstChild(); \n-                    child !\u003d null; \n-                    child \u003d (DetailAST) child.getNextSibling()) \n-            {\n-                if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n-                    checkExpressionSubtree(child, aStartLevel, \n-                        aFirstLineMatches, aAllowNesting);\n-                }\n+            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n+                checkExpressionSubtree(child, aStartLevel, \n+                    aFirstLineMatches, aAllowNesting);\n             }\n-        }\n\\ No newline at end of file\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void checkChildren(DetailAST aParent, int[] aTokenTypes, \n        int aStartLevel, \n        boolean aFirstLineMatches, boolean aAllowNesting) \n    {\n        Arrays.sort(aTokenTypes);\n        for (DetailAST child \u003d (DetailAST) aParent.getFirstChild(); \n                child !\u003d null; \n                child \u003d (DetailAST) child.getNextSibling()) \n        {\n            if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                checkExpressionSubtree(child, aStartLevel, \n                    aFirstLineMatches, aAllowNesting);\n            }\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/ExpressionHandler.java",
        "oldMethodName": "checkChildren",
        "newMethodName": "checkChildren"
      }
    },
    "9aab61241e7970ccfb4a9ee66c8eb7f062d31955": {
      "type": "Yintroduced",
      "commitMessage": "added IndentationCheck, contributed by John Richardson\nThis check currently fails to pass checkstyle.checkstyle\nbecause most methods are missing javadoc, I hope somebody\ncan help me adding it\n",
      "commitDate": "24/04/03 10:21 PM",
      "commitName": "9aab61241e7970ccfb4a9ee66c8eb7f062d31955",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,15 @@\n+        protected void checkChildren(DetailAST aParent, int[] aTokenTypes, \n+            int aStartLevel, \n+            boolean aFirstLineMatches, boolean aAllowNesting) \n+        {\n+            Arrays.sort(aTokenTypes);\n+            for (DetailAST child \u003d (DetailAST) aParent.getFirstChild(); \n+                    child !\u003d null; \n+                    child \u003d (DetailAST) child.getNextSibling()) \n+            {\n+                if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n+                    checkExpressionSubtree(child, aStartLevel, \n+                        aFirstLineMatches, aAllowNesting);\n+                }\n+            }\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        protected void checkChildren(DetailAST aParent, int[] aTokenTypes, \n            int aStartLevel, \n            boolean aFirstLineMatches, boolean aAllowNesting) \n        {\n            Arrays.sort(aTokenTypes);\n            for (DetailAST child \u003d (DetailAST) aParent.getFirstChild(); \n                    child !\u003d null; \n                    child \u003d (DetailAST) child.getNextSibling()) \n            {\n                if (Arrays.binarySearch(aTokenTypes, child.getType()) \u003e\u003d 0) {\n                    checkExpressionSubtree(child, aStartLevel, \n                        aFirstLineMatches, aAllowNesting);\n                }\n            }\n        }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IndentationCheck.java"
    }
  }
}