{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XpathFilterElement.java",
  "functionName": "isXpathQueryMatching",
  "functionId": "isXpathQueryMatching___event-TreeWalkerAuditEvent",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterElement.java",
  "functionStartLine": 208,
  "functionEndLine": 227,
  "numCommitsSeen": 17,
  "timeTaken": 1621,
  "changeHistory": [
    "738b09af0b927e53865ac9f4049203e5f8a38310",
    "817bbaacb3b59a99232072c9e623c1c4a51dca9f",
    "1c73987f2f560ecabb6825943c8362fb11b67749",
    "799b25c1f6202aaa9b5936ae76a4f9ac2fdb0eaa",
    "f994512712c08a16def4a3c5a0426b7ab1590cc9"
  ],
  "changeHistoryShort": {
    "738b09af0b927e53865ac9f4049203e5f8a38310": "Yfilerename",
    "817bbaacb3b59a99232072c9e623c1c4a51dca9f": "Ybodychange",
    "1c73987f2f560ecabb6825943c8362fb11b67749": "Ybodychange",
    "799b25c1f6202aaa9b5936ae76a4f9ac2fdb0eaa": "Ybodychange",
    "f994512712c08a16def4a3c5a0426b7ab1590cc9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "738b09af0b927e53865ac9f4049203e5f8a38310": {
      "type": "Yfilerename",
      "commitMessage": "Issue #4978: renamed sub-children filters to filter element",
      "commitDate": "18/02/19 2:12 PM",
      "commitName": "738b09af0b927e53865ac9f4049203e5f8a38310",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/02/19 8:27 AM",
      "commitNameOld": "287e1edc41038cdcceb463b4bf77af363f73854e",
      "commitAuthorOld": "WANG CHAO",
      "daysBetweenCommits": 0.24,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n        boolean isMatching;\n        if (xpathExpression \u003d\u003d null) {\n            isMatching \u003d true;\n        }\n        else {\n            isMatching \u003d false;\n            final List\u003cAbstractNode\u003e nodes \u003d getItems(event)\n                    .stream().map(item -\u003e (AbstractNode) item).collect(Collectors.toList());\n            for (AbstractNode abstractNode : nodes) {\n                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumnCharIndex();\n                if (isMatching) {\n                    break;\n                }\n            }\n        }\n        return isMatching;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterElement.java",
      "extendedDetails": {
        "oldPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilterElement.java"
      }
    },
    "817bbaacb3b59a99232072c9e623c1c4a51dca9f": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6149: update to saxon 9.9\n",
      "commitDate": "15/11/18 2:48 AM",
      "commitName": "817bbaacb3b59a99232072c9e623c1c4a51dca9f",
      "commitAuthor": "Timur Tibeyev",
      "commitDateOld": "03/06/18 9:40 PM",
      "commitNameOld": "641b6b2c0689fc35d6a3d77a7215fd1d9ce2a2b8",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 164.26,
      "commitsBetweenForRepo": 212,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n         boolean isMatching;\n         if (xpathExpression \u003d\u003d null) {\n             isMatching \u003d true;\n         }\n         else {\n             isMatching \u003d false;\n-            final List\u003cItem\u003e items \u003d getItems(event);\n-            for (Item item : items) {\n-                final AbstractNode abstractNode \u003d (AbstractNode) item;\n+            final List\u003cAbstractNode\u003e nodes \u003d getItems(event)\n+                    .stream().map(item -\u003e (AbstractNode) item).collect(Collectors.toList());\n+            for (AbstractNode abstractNode : nodes) {\n                 isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                         \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                         \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumnCharIndex();\n                 if (isMatching) {\n                     break;\n                 }\n             }\n         }\n         return isMatching;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n        boolean isMatching;\n        if (xpathExpression \u003d\u003d null) {\n            isMatching \u003d true;\n        }\n        else {\n            isMatching \u003d false;\n            final List\u003cAbstractNode\u003e nodes \u003d getItems(event)\n                    .stream().map(item -\u003e (AbstractNode) item).collect(Collectors.toList());\n            for (AbstractNode abstractNode : nodes) {\n                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumnCharIndex();\n                if (isMatching) {\n                    break;\n                }\n            }\n        }\n        return isMatching;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java",
      "extendedDetails": {}
    },
    "1c73987f2f560ecabb6825943c8362fb11b67749": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4421: Support suppression-xpath element in SuppressionLoader\n",
      "commitDate": "27/12/17 7:12 AM",
      "commitName": "1c73987f2f560ecabb6825943c8362fb11b67749",
      "commitAuthor": "Timur Tibeyev",
      "commitDateOld": "10/12/17 7:56 AM",
      "commitNameOld": "70fd1618553f9bff32c4cfc39754ea3c2e99fc88",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 16.97,
      "commitsBetweenForRepo": 47,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n         boolean isMatching;\n         if (xpathExpression \u003d\u003d null) {\n             isMatching \u003d true;\n         }\n         else {\n             isMatching \u003d false;\n             final List\u003cItem\u003e items \u003d getItems(event);\n             for (Item item : items) {\n                 final AbstractNode abstractNode \u003d (AbstractNode) item;\n                 isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                         \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n-                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumn();\n+                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumnCharIndex();\n                 if (isMatching) {\n                     break;\n                 }\n             }\n         }\n         return isMatching;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n        boolean isMatching;\n        if (xpathExpression \u003d\u003d null) {\n            isMatching \u003d true;\n        }\n        else {\n            isMatching \u003d false;\n            final List\u003cItem\u003e items \u003d getItems(event);\n            for (Item item : items) {\n                final AbstractNode abstractNode \u003d (AbstractNode) item;\n                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumnCharIndex();\n                if (isMatching) {\n                    break;\n                }\n            }\n        }\n        return isMatching;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java",
      "extendedDetails": {}
    },
    "799b25c1f6202aaa9b5936ae76a4f9ac2fdb0eaa": {
      "type": "Ybodychange",
      "commitMessage": "Pull #5321: fixed bug on matching xpath when no xpath given",
      "commitDate": "05/12/17 11:15 AM",
      "commitName": "799b25c1f6202aaa9b5936ae76a4f9ac2fdb0eaa",
      "commitAuthor": "rnveach",
      "commitDateOld": "23/08/17 8:11 AM",
      "commitNameOld": "f994512712c08a16def4a3c5a0426b7ab1590cc9",
      "commitAuthorOld": "Timur",
      "daysBetweenCommits": 104.17,
      "commitsBetweenForRepo": 272,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n     private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n-        boolean isMatching \u003d false;\n-        if (xpathExpression !\u003d null) {\n+        boolean isMatching;\n+        if (xpathExpression \u003d\u003d null) {\n+            isMatching \u003d true;\n+        }\n+        else {\n+            isMatching \u003d false;\n             final List\u003cItem\u003e items \u003d getItems(event);\n             for (Item item : items) {\n                 final AbstractNode abstractNode \u003d (AbstractNode) item;\n                 isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                         \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                         \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumn();\n                 if (isMatching) {\n                     break;\n                 }\n             }\n         }\n         return isMatching;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n        boolean isMatching;\n        if (xpathExpression \u003d\u003d null) {\n            isMatching \u003d true;\n        }\n        else {\n            isMatching \u003d false;\n            final List\u003cItem\u003e items \u003d getItems(event);\n            for (Item item : items) {\n                final AbstractNode abstractNode \u003d (AbstractNode) item;\n                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumn();\n                if (isMatching) {\n                    break;\n                }\n            }\n        }\n        return isMatching;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java",
      "extendedDetails": {}
    },
    "f994512712c08a16def4a3c5a0426b7ab1590cc9": {
      "type": "Yintroduced",
      "commitMessage": "Issue #4422: Implement XpathFilter\n",
      "commitDate": "23/08/17 8:11 AM",
      "commitName": "f994512712c08a16def4a3c5a0426b7ab1590cc9",
      "commitAuthor": "Timur",
      "diff": "@@ -0,0 +1,16 @@\n+    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n+        boolean isMatching \u003d false;\n+        if (xpathExpression !\u003d null) {\n+            final List\u003cItem\u003e items \u003d getItems(event);\n+            for (Item item : items) {\n+                final AbstractNode abstractNode \u003d (AbstractNode) item;\n+                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n+                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n+                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumn();\n+                if (isMatching) {\n+                    break;\n+                }\n+            }\n+        }\n+        return isMatching;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isXpathQueryMatching(TreeWalkerAuditEvent event) {\n        boolean isMatching \u003d false;\n        if (xpathExpression !\u003d null) {\n            final List\u003cItem\u003e items \u003d getItems(event);\n            for (Item item : items) {\n                final AbstractNode abstractNode \u003d (AbstractNode) item;\n                isMatching \u003d abstractNode.getTokenType() \u003d\u003d event.getTokenType()\n                        \u0026\u0026 abstractNode.getLineNumber() \u003d\u003d event.getLine()\n                        \u0026\u0026 abstractNode.getColumnNumber() \u003d\u003d event.getColumn();\n                if (isMatching) {\n                    break;\n                }\n            }\n        }\n        return isMatching;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/filters/XpathFilter.java"
    }
  }
}