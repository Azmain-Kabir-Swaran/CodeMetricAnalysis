{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Main.java",
  "functionName": "createListener",
  "functionId": "createListener___format-OutputFormat__outputLocation-Path",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
  "functionStartLine": 490,
  "functionEndLine": 496,
  "numCommitsSeen": 315,
  "timeTaken": 5010,
  "changeHistory": [
    "f3143fa28a339d6409932362307e906741b8c6f9",
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
    "effba275df3b43bc0df4d00ca9a05b144e8006f8",
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
    "dc88a9954baf88df6543cf73baabed710f882363",
    "dab682c2f0e2853858a6d24e1fe2c2088315a0cc",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
    "423ed9e469db620671459827b58c89025d8f6c66",
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af",
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
    "259cc41625b88390ce26737a819aa446cfc72541",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
    "aaf39002ac7fa00b95f4719beca058f6f7445574",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
    "ab2f93f9bf61816d84154e636d32c81c05854e24",
    "702a1a957607881e72bb94b3104c2603ef10891f",
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959",
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "784842200f5307597d721ba0190c912cfab1b77f"
  ],
  "changeHistoryShort": {
    "f3143fa28a339d6409932362307e906741b8c6f9": "Ymultichange(Yparameterchange,Ybodychange)",
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": "Ybodychange",
    "effba275df3b43bc0df4d00ca9a05b144e8006f8": "Ybodychange",
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538": "Ymultichange(Yexceptionschange,Ybodychange)",
    "dc88a9954baf88df6543cf73baabed710f882363": "Ybodychange",
    "dab682c2f0e2853858a6d24e1fe2c2088315a0cc": "Ybodychange",
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": "Ybodychange",
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": "Ybodychange",
    "423ed9e469db620671459827b58c89025d8f6c66": "Ybodychange",
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af": "Yexceptionschange",
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf": "Ybodychange",
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": "Ybodychange",
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": "Ybodychange",
    "259cc41625b88390ce26737a819aa446cfc72541": "Ybodychange",
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": "Ybodychange",
    "aaf39002ac7fa00b95f4719beca058f6f7445574": "Ybodychange",
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "ab2f93f9bf61816d84154e636d32c81c05854e24": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "702a1a957607881e72bb94b3104c2603ef10891f": "Yexceptionschange",
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959": "Ybodychange",
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff": "Ybodychange",
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "784842200f5307597d721ba0190c912cfab1b77f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f3143fa28a339d6409932362307e906741b8c6f9": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
      "commitDate": "29/10/18 4:33 PM",
      "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
      "commitAuthor": "Remko Popma",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
          "commitDate": "29/10/18 4:33 PM",
          "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
          "commitAuthor": "Remko Popma",
          "commitDateOld": "05/09/18 5:54 AM",
          "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
          "commitAuthorOld": "Boxuan Li",
          "daysBetweenCommits": 54.44,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,7 @@\n-    private static AuditListener createListener(String format, String outputLocation)\n+    private static AuditListener createListener(OutputFormat format, Path outputLocation)\n             throws IOException {\n-        final AuditListener listener;\n-        if (XML_FORMAT_NAME.equals(format)) {\n-            final OutputStream out \u003d getOutputStream(outputLocation);\n-            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n-                    getOutputStreamOptions(outputLocation);\n-            listener \u003d new XMLLogger(out, closeOutputStreamOption);\n-        }\n-        else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            final OutputStream out \u003d getOutputStream(outputLocation);\n-            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n-                    getOutputStreamOptions(outputLocation);\n-            listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n-        }\n-        else {\n-            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(1,\n-                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n-                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n-                    Main.class, null);\n-            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n-        }\n-\n-        return listener;\n+        final OutputStream out \u003d getOutputStream(outputLocation);\n+        final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n+                getOutputStreamOptions(outputLocation);\n+        return format.createListener(out, closeOutputStreamOption);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(OutputFormat format, Path outputLocation)\n            throws IOException {\n        final OutputStream out \u003d getOutputStream(outputLocation);\n        final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                getOutputStreamOptions(outputLocation);\n        return format.createListener(out, closeOutputStreamOption);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[format-String, outputLocation-String]",
            "newValue": "[format-OutputFormat, outputLocation-Path]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #6068: migrate to picocli command line parser from Commons CLI\n",
          "commitDate": "29/10/18 4:33 PM",
          "commitName": "f3143fa28a339d6409932362307e906741b8c6f9",
          "commitAuthor": "Remko Popma",
          "commitDateOld": "05/09/18 5:54 AM",
          "commitNameOld": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
          "commitAuthorOld": "Boxuan Li",
          "daysBetweenCommits": 54.44,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,7 @@\n-    private static AuditListener createListener(String format, String outputLocation)\n+    private static AuditListener createListener(OutputFormat format, Path outputLocation)\n             throws IOException {\n-        final AuditListener listener;\n-        if (XML_FORMAT_NAME.equals(format)) {\n-            final OutputStream out \u003d getOutputStream(outputLocation);\n-            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n-                    getOutputStreamOptions(outputLocation);\n-            listener \u003d new XMLLogger(out, closeOutputStreamOption);\n-        }\n-        else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            final OutputStream out \u003d getOutputStream(outputLocation);\n-            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n-                    getOutputStreamOptions(outputLocation);\n-            listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n-        }\n-        else {\n-            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(1,\n-                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n-                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n-                    Main.class, null);\n-            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n-        }\n-\n-        return listener;\n+        final OutputStream out \u003d getOutputStream(outputLocation);\n+        final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n+                getOutputStreamOptions(outputLocation);\n+        return format.createListener(out, closeOutputStreamOption);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(OutputFormat format, Path outputLocation)\n            throws IOException {\n        final OutputStream out \u003d getOutputStream(outputLocation);\n        final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                getOutputStreamOptions(outputLocation);\n        return format.createListener(out, closeOutputStreamOption);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "c998a06ad78213e31b2449e9c9e466c2ff8222f9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6000: Fix zero line violations\n",
      "commitDate": "05/09/18 5:54 AM",
      "commitName": "c998a06ad78213e31b2449e9c9e466c2ff8222f9",
      "commitAuthor": "Boxuan Li",
      "commitDateOld": "29/06/18 6:58 AM",
      "commitNameOld": "433f8b0577a6afb7e8552c0b2a9de1b33892b9d5",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 67.96,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private static AuditListener createListener(String format, String outputLocation)\n             throws IOException {\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             final OutputStream out \u003d getOutputStream(outputLocation);\n             final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                     getOutputStreamOptions(outputLocation);\n             listener \u003d new XMLLogger(out, closeOutputStreamOption);\n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             final OutputStream out \u003d getOutputStream(outputLocation);\n             final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                     getOutputStreamOptions(outputLocation);\n             listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n         }\n         else {\n-            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n+            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(1,\n                     Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                     new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                     Main.class, null);\n             throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format, String outputLocation)\n            throws IOException {\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            final OutputStream out \u003d getOutputStream(outputLocation);\n            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                    getOutputStreamOptions(outputLocation);\n            listener \u003d new XMLLogger(out, closeOutputStreamOption);\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            final OutputStream out \u003d getOutputStream(outputLocation);\n            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                    getOutputStreamOptions(outputLocation);\n            listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n        }\n        else {\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(1,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "effba275df3b43bc0df4d00ca9a05b144e8006f8": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5752: Activate checks related to java.io.Closeable\n",
      "commitDate": "18/05/18 1:09 PM",
      "commitName": "effba275df3b43bc0df4d00ca9a05b144e8006f8",
      "commitAuthor": "Pavel Bludov",
      "commitDateOld": "20/04/18 11:55 AM",
      "commitNameOld": "c28b535e91cb73f7630230695ef52fdf655e46e4",
      "commitAuthorOld": "Pavel Bludov",
      "daysBetweenCommits": 28.05,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,25 @@\n-    private static AuditListener createListener(String format,\n-                                                String outputLocation)\n+    private static AuditListener createListener(String format, String outputLocation)\n             throws IOException {\n-        // setup the output stream\n-        final OutputStream out;\n-        final AutomaticBean.OutputStreamOptions closeOutputStream;\n-        if (outputLocation \u003d\u003d null) {\n-            out \u003d System.out;\n-            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n-        }\n-        else {\n-            out \u003d Files.newOutputStream(Paths.get(outputLocation));\n-            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n-        }\n-\n-        // setup a listener\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n-            listener \u003d new XMLLogger(out, closeOutputStream);\n+            final OutputStream out \u003d getOutputStream(outputLocation);\n+            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n+                    getOutputStreamOptions(outputLocation);\n+            listener \u003d new XMLLogger(out, closeOutputStreamOption);\n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOutputStream, out,\n-                    AutomaticBean.OutputStreamOptions.NONE);\n+            final OutputStream out \u003d getOutputStream(outputLocation);\n+            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n+                    getOutputStreamOptions(outputLocation);\n+            listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n         }\n         else {\n-            if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n-                CommonUtils.close(out);\n-            }\n             final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                     new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                     Main.class, null);\n             throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format, String outputLocation)\n            throws IOException {\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            final OutputStream out \u003d getOutputStream(outputLocation);\n            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                    getOutputStreamOptions(outputLocation);\n            listener \u003d new XMLLogger(out, closeOutputStreamOption);\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            final OutputStream out \u003d getOutputStream(outputLocation);\n            final AutomaticBean.OutputStreamOptions closeOutputStreamOption \u003d\n                    getOutputStreamOptions(outputLocation);\n            listener \u003d new DefaultLogger(out, closeOutputStreamOption);\n        }\n        else {\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "042bf228c796f5fa7c5b4b96b94e0afd7b465538": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "Issue #5638: File{Input,Output}Stream to Files.new{Input,Output}Stream\n",
      "commitDate": "14/04/18 5:52 AM",
      "commitName": "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "Issue #5638: File{Input,Output}Stream to Files.new{Input,Output}Stream\n",
          "commitDate": "14/04/18 5:52 AM",
          "commitName": "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "23/01/18 10:39 PM",
          "commitNameOld": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 80.26,
          "commitsBetweenForRepo": 192,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n-            throws FileNotFoundException {\n+            throws IOException {\n         // setup the output stream\n         final OutputStream out;\n         final AutomaticBean.OutputStreamOptions closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n         }\n         else {\n-            out \u003d new FileOutputStream(outputLocation);\n+            out \u003d Files.newOutputStream(Paths.get(outputLocation));\n             closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n         }\n \n         // setup a listener\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out,\n                     AutomaticBean.OutputStreamOptions.NONE);\n         }\n         else {\n             if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                 CommonUtils.close(out);\n             }\n             final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                     new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                     Main.class, null);\n             throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws IOException {\n        // setup the output stream\n        final OutputStream out;\n        final AutomaticBean.OutputStreamOptions closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n        }\n        else {\n            out \u003d Files.newOutputStream(Paths.get(outputLocation));\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n        }\n\n        // setup a listener\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out,\n                    AutomaticBean.OutputStreamOptions.NONE);\n        }\n        else {\n            if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                CommonUtils.close(out);\n            }\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[FileNotFoundException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5638: File{Input,Output}Stream to Files.new{Input,Output}Stream\n",
          "commitDate": "14/04/18 5:52 AM",
          "commitName": "042bf228c796f5fa7c5b4b96b94e0afd7b465538",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "23/01/18 10:39 PM",
          "commitNameOld": "58327e1dd9707b09f82ae2d4d4ce14c253247154",
          "commitAuthorOld": "Pavel Bludov",
          "daysBetweenCommits": 80.26,
          "commitsBetweenForRepo": 192,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n-            throws FileNotFoundException {\n+            throws IOException {\n         // setup the output stream\n         final OutputStream out;\n         final AutomaticBean.OutputStreamOptions closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n         }\n         else {\n-            out \u003d new FileOutputStream(outputLocation);\n+            out \u003d Files.newOutputStream(Paths.get(outputLocation));\n             closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n         }\n \n         // setup a listener\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out,\n                     AutomaticBean.OutputStreamOptions.NONE);\n         }\n         else {\n             if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                 CommonUtils.close(out);\n             }\n             final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                     new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                     Main.class, null);\n             throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws IOException {\n        // setup the output stream\n        final OutputStream out;\n        final AutomaticBean.OutputStreamOptions closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n        }\n        else {\n            out \u003d Files.newOutputStream(Paths.get(outputLocation));\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n        }\n\n        // setup a listener\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out,\n                    AutomaticBean.OutputStreamOptions.NONE);\n        }\n        else {\n            if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                CommonUtils.close(out);\n            }\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "dc88a9954baf88df6543cf73baabed710f882363": {
      "type": "Ybodychange",
      "commitMessage": "Issue #4709: fix avoid boolean parameters for public methods\n",
      "commitDate": "09/08/17 4:54 AM",
      "commitName": "dc88a9954baf88df6543cf73baabed710f882363",
      "commitAuthor": "vasilyeva",
      "commitDateOld": "29/07/17 6:40 PM",
      "commitNameOld": "dd91dc1cf4dfbffd1bd608a9b0f8a487eb25122d",
      "commitAuthorOld": "vasilyeva",
      "daysBetweenCommits": 10.43,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws FileNotFoundException {\n \n         // setup the output stream\n         final OutputStream out;\n-        final boolean closeOutputStream;\n+        final AutomaticBean.OutputStreamOptions closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n-            closeOutputStream \u003d false;\n+            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n         }\n         else {\n             out \u003d new FileOutputStream(outputLocation);\n-            closeOutputStream \u003d true;\n+            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n         }\n \n         // setup a listener\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n+            listener \u003d new DefaultLogger(out, closeOutputStream, out,\n+                    AutomaticBean.OutputStreamOptions.NONE);\n \n         }\n         else {\n-            if (closeOutputStream) {\n+            if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                 CommonUtils.close(out);\n             }\n             final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                     Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                     new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                     Main.class, null);\n             throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        final OutputStream out;\n        final AutomaticBean.OutputStreamOptions closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.NONE;\n        }\n        else {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d AutomaticBean.OutputStreamOptions.CLOSE;\n        }\n\n        // setup a listener\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out,\n                    AutomaticBean.OutputStreamOptions.NONE);\n\n        }\n        else {\n            if (closeOutputStream \u003d\u003d AutomaticBean.OutputStreamOptions.CLOSE) {\n                CommonUtils.close(out);\n            }\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "dab682c2f0e2853858a6d24e1fe2c2088315a0cc": {
      "type": "Ybodychange",
      "commitMessage": "Issue #3110: Modified Main to remove hardcoded messages and to support i18n for the messages\n",
      "commitDate": "07/07/17 7:55 PM",
      "commitName": "dab682c2f0e2853858a6d24e1fe2c2088315a0cc",
      "commitAuthor": "Subbu Dantu",
      "commitDateOld": "02/07/17 7:43 PM",
      "commitNameOld": "036582d728d2e2bb37f360bb3a74f899f04d587d",
      "commitAuthorOld": "Andrew Kuchev",
      "daysBetweenCommits": 5.01,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,39 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws FileNotFoundException {\n \n         // setup the output stream\n         final OutputStream out;\n         final boolean closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n         else {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n \n         // setup a listener\n         final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n-            throw new IllegalStateException(String.format(\n-                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n-                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n+            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n+                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n+                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n+                    Main.class, null);\n+            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        final OutputStream out;\n        final boolean closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n        else {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n\n        // setup a listener\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            final LocalizedMessage outputFormatExceptionMessage \u003d new LocalizedMessage(0,\n                    Definitions.CHECKSTYLE_BUNDLE, CREATE_LISTENER_EXCEPTION,\n                    new String[] {format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME}, null,\n                    Main.class, null);\n            throw new IllegalStateException(outputFormatExceptionMessage.getMessage());\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "0d8e93ce79ea33b72b3e904d8796984271ee3d8d": {
      "type": "Ybodychange",
      "commitMessage": "minor: enforce FinalLocalVariableCheck on checkstyle code\n",
      "commitDate": "24/01/16 6:35 AM",
      "commitName": "0d8e93ce79ea33b72b3e904d8796984271ee3d8d",
      "commitAuthor": "Bhavik Patel",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 19.59,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws FileNotFoundException {\n \n         // setup the output stream\n-        OutputStream out;\n-        boolean closeOutputStream;\n+        final OutputStream out;\n+        final boolean closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n         else {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n \n         // setup a listener\n-        AuditListener listener;\n+        final AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        final OutputStream out;\n        final boolean closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n        else {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n\n        // setup a listener\n        final AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "70a6e2e6d34fa5a404e88e45cd62a20a06e19556": {
      "type": "Ybodychange",
      "commitMessage": "Issue #2666: Print name of the Check after printing violation message\n",
      "commitDate": "25/12/15 12:20 PM",
      "commitName": "70a6e2e6d34fa5a404e88e45cd62a20a06e19556",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "03/12/15 3:16 PM",
      "commitNameOld": "f65b17cbc30795247fef3077cce16a8bb53e9ffc",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 21.88,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n         if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n         else {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n \n         // setup a listener\n         AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n+            listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n        else {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "423ed9e469db620671459827b58c89025d8f6c66": {
      "type": "Ybodychange",
      "commitMessage": "Issue #974: PMD violation ConfusingTernary (partial fix)\n",
      "commitDate": "07/10/15 5:55 PM",
      "commitName": "423ed9e469db620671459827b58c89025d8f6c66",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "06/10/15 5:46 PM",
      "commitNameOld": "30c3a362d45721e6925fe89ba71f0fe69d0fc471",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 1.01,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n-        if (outputLocation !\u003d null) {\n-            out \u003d new FileOutputStream(outputLocation);\n-            closeOutputStream \u003d true;\n-        }\n-        else {\n+        if (outputLocation \u003d\u003d null) {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n+        else {\n+            out \u003d new FileOutputStream(outputLocation);\n+            closeOutputStream \u003d true;\n+        }\n \n         // setup a listener\n         AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation \u003d\u003d null) {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n        else {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "b6d9344d1c152f225a22ce9ce09341b3cc9488af": {
      "type": "Yexceptionschange",
      "commitMessage": "Pull #2034: Use StandardCharsets and get rid of UnsupportedEncodingException\n",
      "commitDate": "17/09/15 3:01 PM",
      "commitName": "b6d9344d1c152f225a22ce9ce09341b3cc9488af",
      "commitAuthor": "Michael Osipov",
      "commitDateOld": "11/09/15 4:32 PM",
      "commitNameOld": "0fc8b62a35beddc89cb3412388c27e88cd8cab4a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.94,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n-            throws UnsupportedEncodingException, FileNotFoundException {\n+            throws FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {
        "oldValue": "[UnsupportedEncodingException, FileNotFoundException]",
        "newValue": "[FileNotFoundException]"
      }
    },
    "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf": {
      "type": "Ybodychange",
      "commitMessage": "Issue #67: Added support of logging severity for all audit events\n",
      "commitDate": "10/09/15 2:57 AM",
      "commitName": "a29f01a95b9dee1e64ec7ed91b4d0876eb82c0bf",
      "commitAuthor": "Andrei Selkin",
      "commitDateOld": "06/09/15 5:17 AM",
      "commitNameOld": "4d8d047f465f9eb101390da63ee62a735fbedba5",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 3.9,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOutputStream);\n+            listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream, out, false, true);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "cdf3e56bacd3895262af8a1df9ca5c81f4071970": {
      "type": "Ybodychange",
      "commitMessage": "Utils class has been splitted to CommonUtils and TokenUtils. Issue #1898\n",
      "commitDate": "27/08/15 5:17 AM",
      "commitName": "cdf3e56bacd3895262af8a1df9ca5c81f4071970",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "27/08/15 5:17 AM",
      "commitNameOld": "ed595de84fba2db507adaf01d04cb089a5e0bac5",
      "commitAuthorOld": "Ilja Dubinin",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener;\n         if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream);\n \n         }\n         else {\n             if (closeOutputStream) {\n-                Utils.close(out);\n+                CommonUtils.close(out);\n             }\n             throw new IllegalStateException(String.format(\n                     \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                     format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream);\n\n        }\n        else {\n            if (closeOutputStream) {\n                CommonUtils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "8c3e4a50749044ae3177fc4c84db9c4fd93abca2": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1566: MultipleStringLiterals violations partial fix\n",
      "commitDate": "25/08/15 5:12 AM",
      "commitName": "8c3e4a50749044ae3177fc4c84db9c4fd93abca2",
      "commitAuthor": "Ruslan Diachenko",
      "commitDateOld": "19/08/15 8:42 PM",
      "commitNameOld": "da6a8d083cb82a94707146de559911578f39affe",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 91,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,37 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n         boolean closeOutputStream;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOutputStream \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOutputStream \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener;\n-        if (\"xml\".equals(format)) {\n+        if (XML_FORMAT_NAME.equals(format)) {\n             listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n-        else if (\"plain\".equals(format)) {\n+        else if (PLAIN_FORMAT_NAME.equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOutputStream);\n \n         }\n         else {\n             if (closeOutputStream) {\n                 Utils.close(out);\n             }\n-            throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n-                    + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n+            throw new IllegalStateException(String.format(\n+                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n+                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (XML_FORMAT_NAME.equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (PLAIN_FORMAT_NAME.equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream);\n\n        }\n        else {\n            if (closeOutputStream) {\n                Utils.close(out);\n            }\n            throw new IllegalStateException(String.format(\n                    \"Invalid output format. Found \u0027%s\u0027 but expected \u0027%s\u0027 or \u0027%s\u0027.\",\n                    format, PLAIN_FORMAT_NAME, XML_FORMAT_NAME));\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "259cc41625b88390ce26737a819aa446cfc72541": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1243: Output stream has to be closed\n",
      "commitDate": "15/08/15 8:23 PM",
      "commitName": "259cc41625b88390ce26737a819aa446cfc72541",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "11/08/15 5:18 AM",
      "commitNameOld": "1935bed5772c0a939b9168b81acd2ab5aa800538",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 4.63,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,36 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out;\n-        boolean closeOut;\n+        boolean closeOutputStream;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n-            closeOut \u003d true;\n+            closeOutputStream \u003d true;\n         }\n         else {\n             out \u003d System.out;\n-            closeOut \u003d false;\n+            closeOutputStream \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener;\n         if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(out, closeOut);\n+            listener \u003d new XMLLogger(out, closeOutputStream);\n \n         }\n         else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut);\n+            listener \u003d new DefaultLogger(out, closeOutputStream);\n \n         }\n         else {\n+            if (closeOutputStream) {\n+                Utils.close(out);\n+            }\n             throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                     + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOutputStream;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOutputStream \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOutputStream \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOutputStream);\n\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOutputStream);\n\n        }\n        else {\n            if (closeOutputStream) {\n                Utils.close(out);\n            }\n            throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                    + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "8a3f5bf6d5389b9e175c9c769992faece6d76ada": {
      "type": "Ybodychange",
      "commitMessage": "Remove unused assignments. #1555\n\nFixes UnusedAssignment inspection violations.\n\nDescription:\n\u003eThis inspection points out the cases where a variable value is never used after its assignment, i.e.:\n- the variable never gets read after assignment OR\n- the value is always overwritten with another assignment before the next variable read OR\n - the variable initializer is redundant (for one of the above two reasons) OR\n - the variable is never used.\n",
      "commitDate": "07/08/15 9:12 PM",
      "commitName": "8a3f5bf6d5389b9e175c9c769992faece6d76ada",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:48 PM",
      "commitNameOld": "2880edd6554400955fb950bf8127311c436d2a7a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 5.1,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n-        OutputStream out \u003d null;\n-        boolean closeOut \u003d false;\n+        OutputStream out;\n+        boolean closeOut;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOut \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOut \u003d false;\n         }\n \n         // setup a listener\n-        AuditListener listener \u003d null;\n+        AuditListener listener;\n         if (\"xml\".equals(format)) {\n             listener \u003d new XMLLogger(out, closeOut);\n \n         }\n         else if (\"plain\".equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOut);\n \n         }\n         else {\n             throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                     + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out;\n        boolean closeOut;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOut \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOut \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n\n        }\n        else {\n            throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                    + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "aaf39002ac7fa00b95f4719beca058f6f7445574": {
      "type": "Ybodychange",
      "commitMessage": "100% coverage for Main.java . #1294\n",
      "commitDate": "29/07/15 12:29 AM",
      "commitName": "aaf39002ac7fa00b95f4719beca058f6f7445574",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 6.06,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,33 @@\n     private static AuditListener createListener(String format,\n                                                 String outputLocation)\n             throws UnsupportedEncodingException, FileNotFoundException {\n \n         // setup the output stream\n         OutputStream out \u003d null;\n         boolean closeOut \u003d false;\n         if (outputLocation !\u003d null) {\n             out \u003d new FileOutputStream(outputLocation);\n             closeOut \u003d true;\n         }\n         else {\n             out \u003d System.out;\n             closeOut \u003d false;\n         }\n \n         // setup a listener\n         AuditListener listener \u003d null;\n-        switch (format) {\n-            case \"xml\":\n-                listener \u003d new XMLLogger(out, closeOut);\n-                break;\n+        if (\"xml\".equals(format)) {\n+            listener \u003d new XMLLogger(out, closeOut);\n \n-            case \"plain\":\n-                listener \u003d new DefaultLogger(out, closeOut);\n-                break;\n+        }\n+        else if (\"plain\".equals(format)) {\n+            listener \u003d new DefaultLogger(out, closeOut);\n \n-            default:\n-                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n-                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n+        }\n+        else {\n+            throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n+                    + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException {\n\n        // setup the output stream\n        OutputStream out \u003d null;\n        boolean closeOut \u003d false;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOut \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOut \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n\n        }\n        else {\n            throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                    + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "1a2c318e22a0b2b22ccc76019217c0892fe2d59b": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
      "commitDate": "05/05/15 11:12 AM",
      "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
      "commitAuthor": "Roman Ivanov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
          "commitDate": "05/05/15 11:12 AM",
          "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
          "commitAuthor": "Roman Ivanov",
          "commitDateOld": "02/05/15 11:27 PM",
          "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 2.49,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,35 @@\n     private static AuditListener createListener(String format,\n-                                                OutputStream out,\n-                                                boolean closeOut)\n-            throws UnsupportedEncodingException, CheckstyleException\n+                                                String outputLocation)\n+            throws UnsupportedEncodingException, FileNotFoundException\n     {\n+\n+        // setup the output stream\n+        OutputStream out \u003d null;\n+        boolean closeOut \u003d false;\n+        if (outputLocation !\u003d null) {\n+            out \u003d new FileOutputStream(outputLocation);\n+            closeOut \u003d true;\n+        }\n+        else {\n+            out \u003d System.out;\n+            closeOut \u003d false;\n+        }\n+\n+        // setup a listener\n         AuditListener listener \u003d null;\n         switch (format) {\n             case \"xml\":\n                 listener \u003d new XMLLogger(out, closeOut);\n                 break;\n \n             case \"plain\":\n                 listener \u003d new DefaultLogger(out, closeOut);\n                 break;\n \n             default:\n-                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                         + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException\n    {\n\n        // setup the output stream\n        OutputStream out \u003d null;\n        boolean closeOut \u003d false;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOut \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOut \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[format-String, out-OutputStream, closeOut-boolean]",
            "newValue": "[format-String, outputLocation-String]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
          "commitDate": "05/05/15 11:12 AM",
          "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
          "commitAuthor": "Roman Ivanov",
          "commitDateOld": "02/05/15 11:27 PM",
          "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 2.49,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,35 @@\n     private static AuditListener createListener(String format,\n-                                                OutputStream out,\n-                                                boolean closeOut)\n-            throws UnsupportedEncodingException, CheckstyleException\n+                                                String outputLocation)\n+            throws UnsupportedEncodingException, FileNotFoundException\n     {\n+\n+        // setup the output stream\n+        OutputStream out \u003d null;\n+        boolean closeOut \u003d false;\n+        if (outputLocation !\u003d null) {\n+            out \u003d new FileOutputStream(outputLocation);\n+            closeOut \u003d true;\n+        }\n+        else {\n+            out \u003d System.out;\n+            closeOut \u003d false;\n+        }\n+\n+        // setup a listener\n         AuditListener listener \u003d null;\n         switch (format) {\n             case \"xml\":\n                 listener \u003d new XMLLogger(out, closeOut);\n                 break;\n \n             case \"plain\":\n                 listener \u003d new DefaultLogger(out, closeOut);\n                 break;\n \n             default:\n-                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                         + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException\n    {\n\n        // setup the output stream\n        OutputStream out \u003d null;\n        boolean closeOut \u003d false;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOut \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOut \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[UnsupportedEncodingException, CheckstyleException]",
            "newValue": "[UnsupportedEncodingException, FileNotFoundException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "huge refactoring for CLI Main class. Issue #596\n",
          "commitDate": "05/05/15 11:12 AM",
          "commitName": "1a2c318e22a0b2b22ccc76019217c0892fe2d59b",
          "commitAuthor": "Roman Ivanov",
          "commitDateOld": "02/05/15 11:27 PM",
          "commitNameOld": "0f543a21fee9dec9b388bb6f2c42540fe8bf02ec",
          "commitAuthorOld": "Michal Kordas",
          "daysBetweenCommits": 2.49,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,35 @@\n     private static AuditListener createListener(String format,\n-                                                OutputStream out,\n-                                                boolean closeOut)\n-            throws UnsupportedEncodingException, CheckstyleException\n+                                                String outputLocation)\n+            throws UnsupportedEncodingException, FileNotFoundException\n     {\n+\n+        // setup the output stream\n+        OutputStream out \u003d null;\n+        boolean closeOut \u003d false;\n+        if (outputLocation !\u003d null) {\n+            out \u003d new FileOutputStream(outputLocation);\n+            closeOut \u003d true;\n+        }\n+        else {\n+            out \u003d System.out;\n+            closeOut \u003d false;\n+        }\n+\n+        // setup a listener\n         AuditListener listener \u003d null;\n         switch (format) {\n             case \"xml\":\n                 listener \u003d new XMLLogger(out, closeOut);\n                 break;\n \n             case \"plain\":\n                 listener \u003d new DefaultLogger(out, closeOut);\n                 break;\n \n             default:\n-                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                         + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n \n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                String outputLocation)\n            throws UnsupportedEncodingException, FileNotFoundException\n    {\n\n        // setup the output stream\n        OutputStream out \u003d null;\n        boolean closeOut \u003d false;\n        if (outputLocation !\u003d null) {\n            out \u003d new FileOutputStream(outputLocation);\n            closeOut \u003d true;\n        }\n        else {\n            out \u003d System.out;\n            closeOut \u003d false;\n        }\n\n        // setup a listener\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new IllegalStateException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "ab2f93f9bf61816d84154e636d32c81c05854e24": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
      "commitDate": "23/04/15 10:18 PM",
      "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
      "commitAuthor": "Damian Szczepanik",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
          "commitDate": "23/04/15 10:18 PM",
          "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
          "commitAuthor": "Damian Szczepanik",
          "commitDateOld": "08/04/15 10:37 PM",
          "commitNameOld": "702a1a957607881e72bb94b3104c2603ef10891f",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 14.99,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private static AuditListener createListener(CommandLine line,\n+    private static AuditListener createListener(String format,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n-            throws UnsupportedEncodingException\n+            throws UnsupportedEncodingException, CheckstyleException\n     {\n-        final String format \u003d\n-            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n-\n         AuditListener listener \u003d null;\n-        if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(out, closeOut);\n+        switch (format) {\n+            case \"xml\":\n+                listener \u003d new XMLLogger(out, closeOut);\n+                break;\n+\n+            case \"plain\":\n+                listener \u003d new DefaultLogger(out, closeOut);\n+                break;\n+\n+            default:\n+                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n-        else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut);\n-        }\n-        else {\n-            System.out.println(\"Invalid format: (\" + format\n-                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n-            usage();\n-        }\n+\n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                OutputStream out,\n                                                boolean closeOut)\n            throws UnsupportedEncodingException, CheckstyleException\n    {\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[line-CommandLine, out-OutputStream, closeOut-boolean]",
            "newValue": "[format-String, out-OutputStream, closeOut-boolean]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
          "commitDate": "23/04/15 10:18 PM",
          "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
          "commitAuthor": "Damian Szczepanik",
          "commitDateOld": "08/04/15 10:37 PM",
          "commitNameOld": "702a1a957607881e72bb94b3104c2603ef10891f",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 14.99,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private static AuditListener createListener(CommandLine line,\n+    private static AuditListener createListener(String format,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n-            throws UnsupportedEncodingException\n+            throws UnsupportedEncodingException, CheckstyleException\n     {\n-        final String format \u003d\n-            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n-\n         AuditListener listener \u003d null;\n-        if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(out, closeOut);\n+        switch (format) {\n+            case \"xml\":\n+                listener \u003d new XMLLogger(out, closeOut);\n+                break;\n+\n+            case \"plain\":\n+                listener \u003d new DefaultLogger(out, closeOut);\n+                break;\n+\n+            default:\n+                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n-        else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut);\n-        }\n-        else {\n-            System.out.println(\"Invalid format: (\" + format\n-                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n-            usage();\n-        }\n+\n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                OutputStream out,\n                                                boolean closeOut)\n            throws UnsupportedEncodingException, CheckstyleException\n    {\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[UnsupportedEncodingException]",
            "newValue": "[UnsupportedEncodingException, CheckstyleException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Delete System.exit() and delegate exit control into separate method.\n\nIssue #596\n",
          "commitDate": "23/04/15 10:18 PM",
          "commitName": "ab2f93f9bf61816d84154e636d32c81c05854e24",
          "commitAuthor": "Damian Szczepanik",
          "commitDateOld": "08/04/15 10:37 PM",
          "commitNameOld": "702a1a957607881e72bb94b3104c2603ef10891f",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 14.99,
          "commitsBetweenForRepo": 78,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,22 @@\n-    private static AuditListener createListener(CommandLine line,\n+    private static AuditListener createListener(String format,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n-            throws UnsupportedEncodingException\n+            throws UnsupportedEncodingException, CheckstyleException\n     {\n-        final String format \u003d\n-            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n-\n         AuditListener listener \u003d null;\n-        if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(out, closeOut);\n+        switch (format) {\n+            case \"xml\":\n+                listener \u003d new XMLLogger(out, closeOut);\n+                break;\n+\n+            case \"plain\":\n+                listener \u003d new DefaultLogger(out, closeOut);\n+                break;\n+\n+            default:\n+                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n+                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n         }\n-        else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut);\n-        }\n-        else {\n-            System.out.println(\"Invalid format: (\" + format\n-                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n-            usage();\n-        }\n+\n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(String format,\n                                                OutputStream out,\n                                                boolean closeOut)\n            throws UnsupportedEncodingException, CheckstyleException\n    {\n        AuditListener listener \u003d null;\n        switch (format) {\n            case \"xml\":\n                listener \u003d new XMLLogger(out, closeOut);\n                break;\n\n            case \"plain\":\n                listener \u003d new DefaultLogger(out, closeOut);\n                break;\n\n            default:\n                throw new CheckstyleException(\"Invalid output format. Found \u0027\" + format\n                        + \"\u0027 but expected \u0027plain\u0027 or \u0027xml\u0027.\");\n        }\n\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "702a1a957607881e72bb94b3104c2603ef10891f": {
      "type": "Yexceptionschange",
      "commitMessage": "fix for Findbugs violation DM_DEFAULT_ENCODING. Issue #778\n",
      "commitDate": "08/04/15 10:37 PM",
      "commitName": "702a1a957607881e72bb94b3104c2603ef10891f",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "21/03/15 8:17 AM",
      "commitNameOld": "48eee721d989ee5933fe6849a2f693c28a9385c3",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 18.6,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n     private static AuditListener createListener(CommandLine line,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n+            throws UnsupportedEncodingException\n     {\n         final String format \u003d\n             line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n \n         AuditListener listener \u003d null;\n         if (\"xml\".equals(format)) {\n             listener \u003d new XMLLogger(out, closeOut);\n         }\n         else if (\"plain\".equals(format)) {\n             listener \u003d new DefaultLogger(out, closeOut);\n         }\n         else {\n             System.out.println(\"Invalid format: (\" + format\n                                + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n             usage();\n         }\n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(CommandLine line,\n                                                OutputStream out,\n                                                boolean closeOut)\n            throws UnsupportedEncodingException\n    {\n        final String format \u003d\n            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[UnsupportedEncodingException]"
      }
    },
    "e36ae750f6378b9a3cd8e5171c6e6b710bf10959": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"Added support of logging severity for all audit events, issue #67\"\n\nThis reverts commit ca3ffb73abc810385a4ce8fe685ad31c9d172bff.\n",
      "commitDate": "17/03/15 10:15 PM",
      "commitName": "e36ae750f6378b9a3cd8e5171c6e6b710bf10959",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "16/03/15 10:46 PM",
      "commitNameOld": "b9a1bec65f9eec7b96add7336dfcca4bf284e479",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static AuditListener createListener(CommandLine line,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n     {\n         final String format \u003d\n             line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n \n         AuditListener listener \u003d null;\n         if (\"xml\".equals(format)) {\n             listener \u003d new XMLLogger(out, closeOut);\n         }\n         else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut, true);\n+            listener \u003d new DefaultLogger(out, closeOut);\n         }\n         else {\n             System.out.println(\"Invalid format: (\" + format\n                                + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n             usage();\n         }\n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(CommandLine line,\n                                                OutputStream out,\n                                                boolean closeOut)\n    {\n        final String format \u003d\n            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "ca3ffb73abc810385a4ce8fe685ad31c9d172bff": {
      "type": "Ybodychange",
      "commitMessage": "Added support of logging severity for all audit events, issue #67\n",
      "commitDate": "14/03/15 11:32 PM",
      "commitName": "ca3ffb73abc810385a4ce8fe685ad31c9d172bff",
      "commitAuthor": "alexkravin",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 24.39,
      "commitsBetweenForRepo": 136,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private static AuditListener createListener(CommandLine line,\n                                                 OutputStream out,\n                                                 boolean closeOut)\n     {\n         final String format \u003d\n             line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n \n         AuditListener listener \u003d null;\n         if (\"xml\".equals(format)) {\n             listener \u003d new XMLLogger(out, closeOut);\n         }\n         else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(out, closeOut);\n+            listener \u003d new DefaultLogger(out, closeOut, true);\n         }\n         else {\n             System.out.println(\"Invalid format: (\" + format\n                                + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n             usage();\n         }\n         return listener;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(CommandLine line,\n                                                OutputStream out,\n                                                boolean closeOut)\n    {\n        final String format \u003d\n            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut, true);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {}
    },
    "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
      "commitDate": "19/01/15 6:38 AM",
      "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "29/12/14 2:41 PM",
          "commitNameOld": "d91236c5ca052899bfd21ac5f378dcaf8e864750",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 20.66,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private static AuditListener createListener(CommandLine aLine,\n-                                                OutputStream aOut,\n-                                                boolean aCloseOut)\n+    private static AuditListener createListener(CommandLine line,\n+                                                OutputStream out,\n+                                                boolean closeOut)\n     {\n         final String format \u003d\n-            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";\n+            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n \n         AuditListener listener \u003d null;\n         if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(aOut, aCloseOut);\n+            listener \u003d new XMLLogger(out, closeOut);\n         }\n         else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(aOut, aCloseOut);\n+            listener \u003d new DefaultLogger(out, closeOut);\n         }\n         else {\n             System.out.println(\"Invalid format: (\" + format\n                                + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n             usage();\n         }\n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(CommandLine line,\n                                                OutputStream out,\n                                                boolean closeOut)\n    {\n        final String format \u003d\n            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {
            "oldValue": "[aLine-CommandLine, aOut-OutputStream, aCloseOut-boolean]",
            "newValue": "[line-CommandLine, out-OutputStream, closeOut-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, checkstyle, #512\n\nConflicts:\n\tsrc/main/java/com/puppycrawl/tools/checkstyle/TreeWalker.java\n",
          "commitDate": "19/01/15 6:38 AM",
          "commitName": "b8ca6a585b824e91b3b8c72dd5cc53c0eb0ab0f1",
          "commitAuthor": "alexkravin",
          "commitDateOld": "29/12/14 2:41 PM",
          "commitNameOld": "d91236c5ca052899bfd21ac5f378dcaf8e864750",
          "commitAuthorOld": "ychulovskyy",
          "daysBetweenCommits": 20.66,
          "commitsBetweenForRepo": 49,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-    private static AuditListener createListener(CommandLine aLine,\n-                                                OutputStream aOut,\n-                                                boolean aCloseOut)\n+    private static AuditListener createListener(CommandLine line,\n+                                                OutputStream out,\n+                                                boolean closeOut)\n     {\n         final String format \u003d\n-            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";\n+            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n \n         AuditListener listener \u003d null;\n         if (\"xml\".equals(format)) {\n-            listener \u003d new XMLLogger(aOut, aCloseOut);\n+            listener \u003d new XMLLogger(out, closeOut);\n         }\n         else if (\"plain\".equals(format)) {\n-            listener \u003d new DefaultLogger(aOut, aCloseOut);\n+            listener \u003d new DefaultLogger(out, closeOut);\n         }\n         else {\n             System.out.println(\"Invalid format: (\" + format\n                                + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n             usage();\n         }\n         return listener;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static AuditListener createListener(CommandLine line,\n                                                OutputStream out,\n                                                boolean closeOut)\n    {\n        final String format \u003d\n            line.hasOption(\"f\") ? line.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(out, closeOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(out, closeOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private static AuditListener createListener(CommandLine aLine,\n                                                OutputStream aOut,\n                                                boolean aCloseOut)\n    {\n        final String format \u003d\n            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(aOut, aCloseOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(aOut, aCloseOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/Main.java"
      }
    },
    "784842200f5307597d721ba0190c912cfab1b77f": {
      "type": "Yintroduced",
      "commitMessage": "Refactored, that was really ugly code I had written.\n",
      "commitDate": "27/06/03 5:10 AM",
      "commitName": "784842200f5307597d721ba0190c912cfab1b77f",
      "commitAuthor": "Oliver Burn",
      "diff": "@@ -0,0 +1,21 @@\n+    private static AuditListener createListener(CommandLine aLine,\n+                                                OutputStream aOut,\n+                                                boolean aCloseOut)\n+    {\n+        final String format \u003d\n+            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";\n+\n+        AuditListener listener \u003d null;\n+        if (\"xml\".equals(format)) {\n+            listener \u003d new XMLLogger(aOut, aCloseOut);\n+        }\n+        else if (\"plain\".equals(format)) {\n+            listener \u003d new DefaultLogger(aOut, aCloseOut);\n+        }\n+        else {\n+            System.out.println(\"Invalid format: (\" + format\n+                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n+            usage();\n+        }\n+        return listener;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static AuditListener createListener(CommandLine aLine,\n                                                OutputStream aOut,\n                                                boolean aCloseOut)\n    {\n        final String format \u003d\n            aLine.hasOption(\"f\") ? aLine.getOptionValue(\"f\") : \"plain\";\n\n        AuditListener listener \u003d null;\n        if (\"xml\".equals(format)) {\n            listener \u003d new XMLLogger(aOut, aCloseOut);\n        }\n        else if (\"plain\".equals(format)) {\n            listener \u003d new DefaultLogger(aOut, aCloseOut);\n        }\n        else {\n            System.out.println(\"Invalid format: (\" + format\n                               + \"). Must be \u0027plain\u0027 or \u0027xml\u0027.\");\n            usage();\n        }\n        return listener;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/Main.java"
    }
  }
}