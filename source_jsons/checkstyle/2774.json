{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MemberDefHandler.java",
  "functionName": "checkIndentation",
  "functionId": "checkIndentation",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
  "functionStartLine": 45,
  "functionEndLine": 59,
  "numCommitsSeen": 40,
  "timeTaken": 1575,
  "changeHistory": [
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9",
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
    "e3a48d1527341456a798c3f0c1986de6898a8c60",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "33b703a724ddd2090f771cb9834c85e0ccb569e1"
  ],
  "changeHistoryShort": {
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9": "Ybodychange",
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e": "Ybodychange",
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": "Ybodychange",
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c": "Ybodychange",
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": "Ybodychange",
    "e3a48d1527341456a798c3f0c1986de6898a8c60": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "33b703a724ddd2090f771cb9834c85e0ccb569e1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9": {
      "type": "Ybodychange",
      "commitMessage": "Issue #7487: refactor code to use DetailAST.hasChildren()\n",
      "commitDate": "26/01/20 5:04 AM",
      "commitName": "bd45909e6345b2d3ef5c5472d35a3ad926a31eb9",
      "commitAuthor": "pbludov",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 24.52,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void checkIndentation() {\n         final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiersNode.getChildCount() \u003d\u003d 0) {\n-            checkType();\n+        if (modifiersNode.hasChildren()) {\n+            checkModifiers();\n         }\n         else {\n-            checkModifiers();\n+            checkType();\n         }\n         final DetailAST firstNode \u003d getMainAst();\n         final DetailAST lastNode \u003d getVarDefStatementSemicolon(firstNode);\n \n         if (lastNode !\u003d null \u0026\u0026 !isArrayDeclaration(firstNode)) {\n             checkWrappingIndentation(firstNode, lastNode);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation() {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.hasChildren()) {\n            checkModifiers();\n        }\n        else {\n            checkType();\n        }\n        final DetailAST firstNode \u003d getMainAst();\n        final DetailAST lastNode \u003d getVarDefStatementSemicolon(firstNode);\n\n        if (lastNode !\u003d null \u0026\u0026 !isArrayDeclaration(firstNode)) {\n            checkWrappingIndentation(firstNode, lastNode);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e": {
      "type": "Ybodychange",
      "commitMessage": "minor: refactored LineWrappingHandler",
      "commitDate": "24/02/16 5:08 AM",
      "commitName": "a0fed4c0e90c488101c4ecb27f3f6a412c8f9a4e",
      "commitAuthor": "rnveach",
      "commitDateOld": "04/01/16 4:25 PM",
      "commitNameOld": "617ebf2bf27d284dcc7b866f85439fcf6dab3402",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 50.53,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void checkIndentation() {\n         final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersNode.getChildCount() \u003d\u003d 0) {\n             checkType();\n         }\n         else {\n             checkModifiers();\n         }\n-        final LineWrappingHandler lineWrap \u003d\n-            new LineWrappingHandler(getIndentCheck(), getMainAst(),\n-                getVarDefStatementSemicolon(getMainAst()));\n-        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n-            lineWrap.checkIndentation();\n+        final DetailAST firstNode \u003d getMainAst();\n+        final DetailAST lastNode \u003d getVarDefStatementSemicolon(firstNode);\n+\n+        if (lastNode !\u003d null \u0026\u0026 !isArrayDeclaration(firstNode)) {\n+            checkWrappingIndentation(firstNode, lastNode);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation() {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.getChildCount() \u003d\u003d 0) {\n            checkType();\n        }\n        else {\n            checkModifiers();\n        }\n        final DetailAST firstNode \u003d getMainAst();\n        final DetailAST lastNode \u003d getVarDefStatementSemicolon(firstNode);\n\n        if (lastNode !\u003d null \u0026\u0026 !isArrayDeclaration(firstNode)) {\n            checkWrappingIndentation(firstNode, lastNode);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1": {
      "type": "Ybodychange",
      "commitMessage": "Invert if statements with negated conditions. #1555\n\nFixes `NegatedIfElse` inspection violations.\n\nDescription:\n\u003eReports if statements which contain else branches and whose conditions are negated. Flipping the order of the if and else branches will usually increase the clarity of such statements.\n",
      "commitDate": "09/08/15 11:46 PM",
      "commitName": "86826e1fa3fe3d793ee4723bb84ee0fc4ca38df1",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/07/15 9:51 PM",
      "commitNameOld": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 23.08,
      "commitsBetweenForRepo": 292,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     public void checkIndentation() {\n         final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n-        if (modifiersNode.getChildCount() !\u003d 0) {\n-            checkModifiers();\n+        if (modifiersNode.getChildCount() \u003d\u003d 0) {\n+            checkType();\n         }\n         else {\n-            checkType();\n+            checkModifiers();\n         }\n         final LineWrappingHandler lineWrap \u003d\n             new LineWrappingHandler(getIndentCheck(), getMainAst(),\n                 getVarDefStatementSemicolon(getMainAst()));\n         if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n             lineWrap.checkIndentation();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation() {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.getChildCount() \u003d\u003d 0) {\n            checkType();\n        }\n        else {\n            checkModifiers();\n        }\n        final LineWrappingHandler lineWrap \u003d\n            new LineWrappingHandler(getIndentCheck(), getMainAst(),\n                getVarDefStatementSemicolon(getMainAst()));\n        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n            lineWrap.checkIndentation();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "24c13109a52b0b5085b5db2e8b0ae96655d9480c": {
      "type": "Ybodychange",
      "commitMessage": "IndentationCheck. Refactoring: got rid of anonymous classes.\n",
      "commitDate": "18/02/15 7:31 AM",
      "commitName": "24c13109a52b0b5085b5db2e8b0ae96655d9480c",
      "commitAuthor": "Alexey",
      "commitDateOld": "19/01/15 6:34 AM",
      "commitNameOld": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 30.04,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,16 @@\n     public void checkIndentation()\n     {\n         final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersNode.getChildCount() !\u003d 0) {\n             checkModifiers();\n         }\n         else {\n             checkType();\n         }\n         final LineWrappingHandler lineWrap \u003d\n-            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n-                @Override\n-                public DetailAST findLastNode(DetailAST firstNode)\n-                {\n-                    DetailAST lastNode \u003d getFirstNode().getLastChild();\n-                    if (lastNode.getType() !\u003d TokenTypes.SEMI) {\n-                        lastNode \u003d getFirstNode().getNextSibling();\n-                    }\n-                    return lastNode;\n-                }\n-            };\n+            new LineWrappingHandler(getIndentCheck(), getMainAst(),\n+                getVarDefStatementSemicolon(getMainAst()));\n         if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n             lineWrap.checkIndentation();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation()\n    {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.getChildCount() !\u003d 0) {\n            checkModifiers();\n        }\n        else {\n            checkType();\n        }\n        final LineWrappingHandler lineWrap \u003d\n            new LineWrappingHandler(getIndentCheck(), getMainAst(),\n                getVarDefStatementSemicolon(getMainAst()));\n        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n            lineWrap.checkIndentation();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6": {
      "type": "Ybodychange",
      "commitMessage": "Prefixes, indentation, #512\n",
      "commitDate": "19/01/15 6:34 AM",
      "commitName": "d84869bcff9a2f0ad8d6f1d7741e07d22a78e4a6",
      "commitAuthor": "alexkravin",
      "commitDateOld": "13/10/14 4:21 PM",
      "commitNameOld": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthorOld": "maxvetrenko",
      "daysBetweenCommits": 97.63,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     public void checkIndentation()\n     {\n         final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n         if (modifiersNode.getChildCount() !\u003d 0) {\n             checkModifiers();\n         }\n         else {\n             checkType();\n         }\n         final LineWrappingHandler lineWrap \u003d\n             new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n                 @Override\n-                public DetailAST findLastNode(DetailAST aFirstNode)\n+                public DetailAST findLastNode(DetailAST firstNode)\n                 {\n                     DetailAST lastNode \u003d getFirstNode().getLastChild();\n                     if (lastNode.getType() !\u003d TokenTypes.SEMI) {\n                         lastNode \u003d getFirstNode().getNextSibling();\n                     }\n                     return lastNode;\n                 }\n             };\n         if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n             lineWrap.checkIndentation();\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation()\n    {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.getChildCount() !\u003d 0) {\n            checkModifiers();\n        }\n        else {\n            checkType();\n        }\n        final LineWrappingHandler lineWrap \u003d\n            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n                @Override\n                public DetailAST findLastNode(DetailAST firstNode)\n                {\n                    DetailAST lastNode \u003d getFirstNode().getLastChild();\n                    if (lastNode.getType() !\u003d TokenTypes.SEMI) {\n                        lastNode \u003d getFirstNode().getNextSibling();\n                    }\n                    return lastNode;\n                }\n            };\n        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n            lineWrap.checkIndentation();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "e3a48d1527341456a798c3f0c1986de6898a8c60": {
      "type": "Ybodychange",
      "commitMessage": "Update for IndentationCheck. #294\n",
      "commitDate": "13/10/14 4:21 PM",
      "commitName": "e3a48d1527341456a798c3f0c1986de6898a8c60",
      "commitAuthor": "maxvetrenko",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 223.25,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,25 @@\n     public void checkIndentation()\n     {\n-        checkModifiers();\n-        checkType();\n-        checkIdent();\n+        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n+        if (modifiersNode.getChildCount() !\u003d 0) {\n+            checkModifiers();\n+        }\n+        else {\n+            checkType();\n+        }\n+        final LineWrappingHandler lineWrap \u003d\n+            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n+                @Override\n+                public DetailAST findLastNode(DetailAST aFirstNode)\n+                {\n+                    DetailAST lastNode \u003d getFirstNode().getLastChild();\n+                    if (lastNode.getType() !\u003d TokenTypes.SEMI) {\n+                        lastNode \u003d getFirstNode().getNextSibling();\n+                    }\n+                    return lastNode;\n+                }\n+            };\n+        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n+            lineWrap.checkIndentation();\n+        }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation()\n    {\n        final DetailAST modifiersNode \u003d getMainAst().findFirstToken(TokenTypes.MODIFIERS);\n        if (modifiersNode.getChildCount() !\u003d 0) {\n            checkModifiers();\n        }\n        else {\n            checkType();\n        }\n        final LineWrappingHandler lineWrap \u003d\n            new LineWrappingHandler(getIndentCheck(), getMainAst()) {\n                @Override\n                public DetailAST findLastNode(DetailAST aFirstNode)\n                {\n                    DetailAST lastNode \u003d getFirstNode().getLastChild();\n                    if (lastNode.getType() !\u003d TokenTypes.SEMI) {\n                        lastNode \u003d getFirstNode().getNextSibling();\n                    }\n                    return lastNode;\n                }\n            };\n        if (lineWrap.getLastNode() !\u003d null \u0026\u0026 !isArrayDeclaration(getMainAst())) {\n            lineWrap.checkIndentation();\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void checkIndentation()\n    {\n        checkModifiers();\n        checkType();\n        checkIdent();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java"
      }
    },
    "33b703a724ddd2090f771cb9834c85e0ccb569e1": {
      "type": "Yintroduced",
      "commitMessage": "Fixed 1193848, added handler for class fields.\n",
      "commitDate": "18/07/05 12:12 AM",
      "commitName": "33b703a724ddd2090f771cb9834c85e0ccb569e1",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,6 @@\n+    public void checkIndentation()\n+    {\n+        checkModifiers();\n+        checkType();\n+        checkIdent();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void checkIndentation()\n    {\n        checkModifiers();\n        checkType();\n        checkIdent();\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/indentation/MemberDefHandler.java"
    }
  }
}