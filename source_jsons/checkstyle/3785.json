{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LocalizedMessage.java",
  "functionName": "newBundle",
  "functionId": "newBundle___baseName-String__locale-Locale__format-String__loader-ClassLoader__reload-boolean",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
  "functionStartLine": 514,
  "functionEndLine": 533,
  "numCommitsSeen": 128,
  "timeTaken": 2118,
  "changeHistory": [
    "c28b535e91cb73f7630230695ef52fdf655e46e4",
    "b16aef991830dd1fce1ce2640af7e7db8b329d86",
    "bf3e77cc87f01b9ea0d205933749770398fa623b",
    "2880edd6554400955fb950bf8127311c436d2a7a",
    "c3f9d975a814113a5c920da60eb9c7ab7623b3cf",
    "716292c2b86196c2c551b100c7853fc19422cbf8",
    "dcb3029c008907edf6aa4b59a51349f0ca94f54b"
  ],
  "changeHistoryShort": {
    "c28b535e91cb73f7630230695ef52fdf655e46e4": "Ymultichange(Yparameterchange,Ybodychange)",
    "b16aef991830dd1fce1ce2640af7e7db8b329d86": "Ybodychange",
    "bf3e77cc87f01b9ea0d205933749770398fa623b": "Ybodychange",
    "2880edd6554400955fb950bf8127311c436d2a7a": "Ybodychange",
    "c3f9d975a814113a5c920da60eb9c7ab7623b3cf": "Ybodychange",
    "716292c2b86196c2c551b100c7853fc19422cbf8": "Yexceptionschange",
    "dcb3029c008907edf6aa4b59a51349f0ca94f54b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c28b535e91cb73f7630230695ef52fdf655e46e4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Issue #5616: Remove remnants of cobertura usage\n",
      "commitDate": "20/04/18 11:55 AM",
      "commitName": "c28b535e91cb73f7630230695ef52fdf655e46e4",
      "commitAuthor": "Pavel Bludov",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Issue #5616: Remove remnants of cobertura usage\n",
          "commitDate": "20/04/18 11:55 AM",
          "commitName": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "18/04/18 1:06 PM",
          "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,20 @@\n-        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n-                 ClassLoader aLoader, boolean aReload) throws IOException {\n+        public ResourceBundle newBundle(String baseName, Locale locale, String format,\n+                 ClassLoader loader, boolean reload) throws IOException {\n             // The below is a copy of the default implementation.\n-            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n+            final String bundleName \u003d toBundleName(baseName, locale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n-            InputStream stream \u003d null;\n-            if (aReload) {\n-                final URL url \u003d aLoader.getResource(resourceName);\n-                if (url !\u003d null) {\n-                    final URLConnection connection \u003d url.openConnection();\n-                    if (connection !\u003d null) {\n-                        connection.setUseCaches(false);\n-                        stream \u003d connection.getInputStream();\n-                    }\n-                }\n-            }\n-            else {\n-                stream \u003d aLoader.getResourceAsStream(resourceName);\n-            }\n+            final URL url \u003d loader.getResource(resourceName);\n             ResourceBundle resourceBundle \u003d null;\n-            if (stream !\u003d null) {\n-                final Reader streamReader \u003d new InputStreamReader(stream,\n-                        StandardCharsets.UTF_8.name());\n-                try {\n-                    // Only this line is changed to make it to read properties files as UTF-8.\n-                    resourceBundle \u003d new PropertyResourceBundle(streamReader);\n-                }\n-                finally {\n-                    stream.close();\n+            if (url !\u003d null) {\n+                final URLConnection connection \u003d url.openConnection();\n+                if (connection !\u003d null) {\n+                    connection.setUseCaches(!reload);\n+                    try (Reader streamReader \u003d new InputStreamReader(connection.getInputStream(),\n+                            StandardCharsets.UTF_8.name())) {\n+                        // Only this line is changed to make it read property files as UTF-8.\n+                        resourceBundle \u003d new PropertyResourceBundle(streamReader);\n+                    }\n                 }\n             }\n             return resourceBundle;\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public ResourceBundle newBundle(String baseName, Locale locale, String format,\n                 ClassLoader loader, boolean reload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(baseName, locale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            final URL url \u003d loader.getResource(resourceName);\n            ResourceBundle resourceBundle \u003d null;\n            if (url !\u003d null) {\n                final URLConnection connection \u003d url.openConnection();\n                if (connection !\u003d null) {\n                    connection.setUseCaches(!reload);\n                    try (Reader streamReader \u003d new InputStreamReader(connection.getInputStream(),\n                            StandardCharsets.UTF_8.name())) {\n                        // Only this line is changed to make it read property files as UTF-8.\n                        resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                    }\n                }\n            }\n            return resourceBundle;\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
          "extendedDetails": {
            "oldValue": "[aBaseName-String, aLocale-Locale, aFormat-String, aLoader-ClassLoader, aReload-boolean]",
            "newValue": "[baseName-String, locale-Locale, format-String, loader-ClassLoader, reload-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Issue #5616: Remove remnants of cobertura usage\n",
          "commitDate": "20/04/18 11:55 AM",
          "commitName": "c28b535e91cb73f7630230695ef52fdf655e46e4",
          "commitAuthor": "Pavel Bludov",
          "commitDateOld": "18/04/18 1:06 PM",
          "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 1.95,
          "commitsBetweenForRepo": 9,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,20 @@\n-        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n-                 ClassLoader aLoader, boolean aReload) throws IOException {\n+        public ResourceBundle newBundle(String baseName, Locale locale, String format,\n+                 ClassLoader loader, boolean reload) throws IOException {\n             // The below is a copy of the default implementation.\n-            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n+            final String bundleName \u003d toBundleName(baseName, locale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n-            InputStream stream \u003d null;\n-            if (aReload) {\n-                final URL url \u003d aLoader.getResource(resourceName);\n-                if (url !\u003d null) {\n-                    final URLConnection connection \u003d url.openConnection();\n-                    if (connection !\u003d null) {\n-                        connection.setUseCaches(false);\n-                        stream \u003d connection.getInputStream();\n-                    }\n-                }\n-            }\n-            else {\n-                stream \u003d aLoader.getResourceAsStream(resourceName);\n-            }\n+            final URL url \u003d loader.getResource(resourceName);\n             ResourceBundle resourceBundle \u003d null;\n-            if (stream !\u003d null) {\n-                final Reader streamReader \u003d new InputStreamReader(stream,\n-                        StandardCharsets.UTF_8.name());\n-                try {\n-                    // Only this line is changed to make it to read properties files as UTF-8.\n-                    resourceBundle \u003d new PropertyResourceBundle(streamReader);\n-                }\n-                finally {\n-                    stream.close();\n+            if (url !\u003d null) {\n+                final URLConnection connection \u003d url.openConnection();\n+                if (connection !\u003d null) {\n+                    connection.setUseCaches(!reload);\n+                    try (Reader streamReader \u003d new InputStreamReader(connection.getInputStream(),\n+                            StandardCharsets.UTF_8.name())) {\n+                        // Only this line is changed to make it read property files as UTF-8.\n+                        resourceBundle \u003d new PropertyResourceBundle(streamReader);\n+                    }\n                 }\n             }\n             return resourceBundle;\n         }\n\\ No newline at end of file\n",
          "actualSource": "        public ResourceBundle newBundle(String baseName, Locale locale, String format,\n                 ClassLoader loader, boolean reload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(baseName, locale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            final URL url \u003d loader.getResource(resourceName);\n            ResourceBundle resourceBundle \u003d null;\n            if (url !\u003d null) {\n                final URLConnection connection \u003d url.openConnection();\n                if (connection !\u003d null) {\n                    connection.setUseCaches(!reload);\n                    try (Reader streamReader \u003d new InputStreamReader(connection.getInputStream(),\n                            StandardCharsets.UTF_8.name())) {\n                        // Only this line is changed to make it read property files as UTF-8.\n                        resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                    }\n                }\n            }\n            return resourceBundle;\n        }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
          "extendedDetails": {}
        }
      ]
    },
    "b16aef991830dd1fce1ce2640af7e7db8b329d86": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5023: Prohibited the usage of hardcoded encoding in Checkstyle source code;\n",
      "commitDate": "18/10/17 7:19 AM",
      "commitName": "b16aef991830dd1fce1ce2640af7e7db8b329d86",
      "commitAuthor": "Artem Dudkin",
      "commitDateOld": "06/09/17 5:02 AM",
      "commitNameOld": "2f4e7d93d64b61b6762d15422549cb6bdf0d41eb",
      "commitAuthorOld": "Timur Tibeyev",
      "daysBetweenCommits": 42.1,
      "commitsBetweenForRepo": 85,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                  ClassLoader aLoader, boolean aReload) throws IOException {\n             // The below is a copy of the default implementation.\n             final String bundleName \u003d toBundleName(aBaseName, aLocale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n             InputStream stream \u003d null;\n             if (aReload) {\n                 final URL url \u003d aLoader.getResource(resourceName);\n                 if (url !\u003d null) {\n                     final URLConnection connection \u003d url.openConnection();\n                     if (connection !\u003d null) {\n                         connection.setUseCaches(false);\n                         stream \u003d connection.getInputStream();\n                     }\n                 }\n             }\n             else {\n                 stream \u003d aLoader.getResourceAsStream(resourceName);\n             }\n             ResourceBundle resourceBundle \u003d null;\n             if (stream !\u003d null) {\n-                final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n+                final Reader streamReader \u003d new InputStreamReader(stream,\n+                        StandardCharsets.UTF_8.name());\n                 try {\n                     // Only this line is changed to make it to read properties files as UTF-8.\n                     resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                 }\n                 finally {\n                     stream.close();\n                 }\n             }\n             return resourceBundle;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            ResourceBundle resourceBundle \u003d null;\n            if (stream !\u003d null) {\n                final Reader streamReader \u003d new InputStreamReader(stream,\n                        StandardCharsets.UTF_8.name());\n                try {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                }\n                finally {\n                    stream.close();\n                }\n            }\n            return resourceBundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
      "extendedDetails": {}
    },
    "bf3e77cc87f01b9ea0d205933749770398fa623b": {
      "type": "Ybodychange",
      "commitMessage": "Local variables should not shadow class fields. Issue #46\n",
      "commitDate": "18/08/15 8:45 PM",
      "commitName": "bf3e77cc87f01b9ea0d205933749770398fa623b",
      "commitAuthor": "Ilja Dubinin",
      "commitDateOld": "18/08/15 1:25 AM",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 0.81,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                  ClassLoader aLoader, boolean aReload) throws IOException {\n             // The below is a copy of the default implementation.\n             final String bundleName \u003d toBundleName(aBaseName, aLocale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n             InputStream stream \u003d null;\n             if (aReload) {\n                 final URL url \u003d aLoader.getResource(resourceName);\n                 if (url !\u003d null) {\n                     final URLConnection connection \u003d url.openConnection();\n                     if (connection !\u003d null) {\n                         connection.setUseCaches(false);\n                         stream \u003d connection.getInputStream();\n                     }\n                 }\n             }\n             else {\n                 stream \u003d aLoader.getResourceAsStream(resourceName);\n             }\n-            ResourceBundle bundle \u003d null;\n+            ResourceBundle resourceBundle \u003d null;\n             if (stream !\u003d null) {\n                 final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n                 try {\n                     // Only this line is changed to make it to read properties files as UTF-8.\n-                    bundle \u003d new PropertyResourceBundle(streamReader);\n+                    resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                 }\n                 finally {\n                     stream.close();\n                 }\n             }\n-            return bundle;\n+            return resourceBundle;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            ResourceBundle resourceBundle \u003d null;\n            if (stream !\u003d null) {\n                final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n                try {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    resourceBundle \u003d new PropertyResourceBundle(streamReader);\n                }\n                finally {\n                    stream.close();\n                }\n            }\n            return resourceBundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
      "extendedDetails": {}
    },
    "2880edd6554400955fb950bf8127311c436d2a7a": {
      "type": "Ybodychange",
      "commitMessage": "Decrease scope of variables. #1538\n",
      "commitDate": "02/08/15 6:48 PM",
      "commitName": "2880edd6554400955fb950bf8127311c436d2a7a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "02/08/15 6:41 PM",
      "commitNameOld": "fd794d428cc0854ddd4d416f0208d49f1ee9cbe1",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                  ClassLoader aLoader, boolean aReload) throws IOException {\n             // The below is a copy of the default implementation.\n             final String bundleName \u003d toBundleName(aBaseName, aLocale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n-            ResourceBundle bundle \u003d null;\n             InputStream stream \u003d null;\n             if (aReload) {\n                 final URL url \u003d aLoader.getResource(resourceName);\n                 if (url !\u003d null) {\n                     final URLConnection connection \u003d url.openConnection();\n                     if (connection !\u003d null) {\n                         connection.setUseCaches(false);\n                         stream \u003d connection.getInputStream();\n                     }\n                 }\n             }\n             else {\n                 stream \u003d aLoader.getResourceAsStream(resourceName);\n             }\n+            ResourceBundle bundle \u003d null;\n             if (stream !\u003d null) {\n                 final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n                 try {\n                     // Only this line is changed to make it to read properties files as UTF-8.\n                     bundle \u003d new PropertyResourceBundle(streamReader);\n                 }\n                 finally {\n                     stream.close();\n                 }\n             }\n             return bundle;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            ResourceBundle bundle \u003d null;\n            if (stream !\u003d null) {\n                final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n                try {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    bundle \u003d new PropertyResourceBundle(streamReader);\n                }\n                finally {\n                    stream.close();\n                }\n            }\n            return bundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
      "extendedDetails": {}
    },
    "c3f9d975a814113a5c920da60eb9c7ab7623b3cf": {
      "type": "Ybodychange",
      "commitMessage": "100% coverage for UTF8Control. #1295\n",
      "commitDate": "25/07/15 5:05 PM",
      "commitName": "c3f9d975a814113a5c920da60eb9c7ab7623b3cf",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "28/05/15 2:18 PM",
      "commitNameOld": "716292c2b86196c2c551b100c7853fc19422cbf8",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 58.12,
      "commitsBetweenForRepo": 426,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                  ClassLoader aLoader, boolean aReload) throws IOException {\n             // The below is a copy of the default implementation.\n             final String bundleName \u003d toBundleName(aBaseName, aLocale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n             ResourceBundle bundle \u003d null;\n             InputStream stream \u003d null;\n             if (aReload) {\n                 final URL url \u003d aLoader.getResource(resourceName);\n                 if (url !\u003d null) {\n                     final URLConnection connection \u003d url.openConnection();\n                     if (connection !\u003d null) {\n                         connection.setUseCaches(false);\n                         stream \u003d connection.getInputStream();\n                     }\n                 }\n             }\n             else {\n                 stream \u003d aLoader.getResourceAsStream(resourceName);\n             }\n             if (stream !\u003d null) {\n-                try (Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\")) {\n+                final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n+                try {\n                     // Only this line is changed to make it to read properties files as UTF-8.\n                     bundle \u003d new PropertyResourceBundle(streamReader);\n-                } finally {\n+                }\n+                finally {\n                     stream.close();\n                 }\n             }\n             return bundle;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            ResourceBundle bundle \u003d null;\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            if (stream !\u003d null) {\n                final Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\");\n                try {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    bundle \u003d new PropertyResourceBundle(streamReader);\n                }\n                finally {\n                    stream.close();\n                }\n            }\n            return bundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
      "extendedDetails": {}
    },
    "716292c2b86196c2c551b100c7853fc19422cbf8": {
      "type": "Yexceptionschange",
      "commitMessage": "Fix ThrowsCount check violations in Checkstyle code. #945\n",
      "commitDate": "28/05/15 2:18 PM",
      "commitName": "716292c2b86196c2c551b100c7853fc19422cbf8",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "27/05/15 8:37 AM",
      "commitNameOld": "d6966ec1f74912d6bfe3bb1c68bf67436da23f7e",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 1.24,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,30 @@\n         public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n-                 ClassLoader aLoader, boolean aReload) throws IllegalAccessException,\n-                  InstantiationException, IOException {\n+                 ClassLoader aLoader, boolean aReload) throws IOException {\n             // The below is a copy of the default implementation.\n             final String bundleName \u003d toBundleName(aBaseName, aLocale);\n             final String resourceName \u003d toResourceName(bundleName, \"properties\");\n             ResourceBundle bundle \u003d null;\n             InputStream stream \u003d null;\n             if (aReload) {\n                 final URL url \u003d aLoader.getResource(resourceName);\n                 if (url !\u003d null) {\n                     final URLConnection connection \u003d url.openConnection();\n                     if (connection !\u003d null) {\n                         connection.setUseCaches(false);\n                         stream \u003d connection.getInputStream();\n                     }\n                 }\n             }\n             else {\n                 stream \u003d aLoader.getResourceAsStream(resourceName);\n             }\n             if (stream !\u003d null) {\n                 try (Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\")) {\n                     // Only this line is changed to make it to read properties files as UTF-8.\n                     bundle \u003d new PropertyResourceBundle(streamReader);\n                 } finally {\n                     stream.close();\n                 }\n             }\n             return bundle;\n         }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IOException {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            ResourceBundle bundle \u003d null;\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            if (stream !\u003d null) {\n                try (Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\")) {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    bundle \u003d new PropertyResourceBundle(streamReader);\n                } finally {\n                    stream.close();\n                }\n            }\n            return bundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java",
      "extendedDetails": {
        "oldValue": "[IllegalAccessException, InstantiationException, IOException]",
        "newValue": "[IOException]"
      }
    },
    "dcb3029c008907edf6aa4b59a51349f0ca94f54b": {
      "type": "Yintroduced",
      "commitMessage": "Switched Checkstyle and all resources to UTF-8 encoding, issue #489\n",
      "commitDate": "09/01/15 8:44 AM",
      "commitName": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
      "commitAuthor": "alexkravin",
      "diff": "@@ -0,0 +1,32 @@\n+        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n+                 ClassLoader aLoader, boolean aReload) throws IllegalAccessException,\n+                  InstantiationException, IOException\n+        {\n+            // The below is a copy of the default implementation.\n+            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n+            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n+            ResourceBundle bundle \u003d null;\n+            InputStream stream \u003d null;\n+            if (aReload) {\n+                final URL url \u003d aLoader.getResource(resourceName);\n+                if (url !\u003d null) {\n+                    final URLConnection connection \u003d url.openConnection();\n+                    if (connection !\u003d null) {\n+                        connection.setUseCaches(false);\n+                        stream \u003d connection.getInputStream();\n+                    }\n+                }\n+            }\n+            else {\n+                stream \u003d aLoader.getResourceAsStream(resourceName);\n+            }\n+            if (stream !\u003d null) {\n+                try (Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\")) {\n+                    // Only this line is changed to make it to read properties files as UTF-8.\n+                    bundle \u003d new PropertyResourceBundle(streamReader);\n+                } finally {\n+                    stream.close();\n+                }\n+            }\n+            return bundle;\n+        }\n\\ No newline at end of file\n",
      "actualSource": "        public ResourceBundle newBundle(String aBaseName, Locale aLocale, String aFormat,\n                 ClassLoader aLoader, boolean aReload) throws IllegalAccessException,\n                  InstantiationException, IOException\n        {\n            // The below is a copy of the default implementation.\n            final String bundleName \u003d toBundleName(aBaseName, aLocale);\n            final String resourceName \u003d toResourceName(bundleName, \"properties\");\n            ResourceBundle bundle \u003d null;\n            InputStream stream \u003d null;\n            if (aReload) {\n                final URL url \u003d aLoader.getResource(resourceName);\n                if (url !\u003d null) {\n                    final URLConnection connection \u003d url.openConnection();\n                    if (connection !\u003d null) {\n                        connection.setUseCaches(false);\n                        stream \u003d connection.getInputStream();\n                    }\n                }\n            }\n            else {\n                stream \u003d aLoader.getResourceAsStream(resourceName);\n            }\n            if (stream !\u003d null) {\n                try (Reader streamReader \u003d new InputStreamReader(stream, \"UTF-8\")) {\n                    // Only this line is changed to make it to read properties files as UTF-8.\n                    bundle \u003d new PropertyResourceBundle(streamReader);\n                } finally {\n                    stream.close();\n                }\n            }\n            return bundle;\n        }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/api/LocalizedMessage.java"
    }
  }
}