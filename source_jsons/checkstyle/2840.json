{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegexpHeaderCheck.java",
  "functionName": "isMultiLine",
  "functionId": "isMultiLine___lineNo-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
  "functionStartLine": 322,
  "functionEndLine": 324,
  "numCommitsSeen": 105,
  "timeTaken": 2189,
  "changeHistory": [
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "29027109bf962f47b6a6000fdca69b5679ce4b43",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
    "f66b504b06f8c479d338fb5b2797392dfa3ef359",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf"
  ],
  "changeHistoryShort": {
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "29027109bf962f47b6a6000fdca69b5679ce4b43": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": "Ybodychange",
    "f66b504b06f8c479d338fb5b2797392dfa3ef359": "Ymultichange(Ymovefromfile,Ybodychange)",
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": "Ymovefromfile",
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": "Yfilerename",
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n     private boolean isMultiLine(int lineNo)\n     {\n-        return (Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0);\n+        return Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMultiLine(int lineNo)\n    {\n        return Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "29027109bf962f47b6a6000fdca69b5679ce4b43": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, header, #512\n",
      "commitDate": "19/01/15 6:35 AM",
      "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    private boolean isMultiLine(int aLineNo)\n+    private boolean isMultiLine(int lineNo)\n     {\n-        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n+        return (Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMultiLine(int lineNo)\n    {\n        return (Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldValue": "[aLineNo-int]",
            "newValue": "[lineNo-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, header, #512\n",
          "commitDate": "19/01/15 6:35 AM",
          "commitName": "29027109bf962f47b6a6000fdca69b5679ce4b43",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.91,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    private boolean isMultiLine(int aLineNo)\n+    private boolean isMultiLine(int lineNo)\n     {\n-        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n+        return (Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMultiLine(int lineNo)\n    {\n        return (Arrays.binarySearch(multiLines, lineNo + 1) \u003e\u003d 0);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1": {
      "type": "Ybodychange",
      "commitMessage": "Simplified the code by removing HeaderInfo classes, they were introduced to avoid code duplication between header checks in two separate inheritance trees (Java Check vs. FileSetCheck). Now that we have only FileSetChecks as Header checks, this delegation is no longer necessary.\n",
      "commitDate": "05/02/09 1:22 PM",
      "commitName": "b83c9aceef9577eaada5cfd78bc7b2cd04a176d1",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "16/11/08 3:11 AM",
      "commitNameOld": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 81.42,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,4 @@\n     private boolean isMultiLine(int aLineNo)\n     {\n-        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),\n-                aLineNo + 1) \u003e\u003d 0);\n+        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {}
    },
    "f66b504b06f8c479d338fb5b2797392dfa3ef359": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "consolidation of code.\n",
      "commitDate": "16/11/08 3:11 AM",
      "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
      "commitAuthor": "Oliver Burn",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "consolidation of code.\n",
          "commitDate": "16/11/08 3:11 AM",
          "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "16/11/08 2:54 AM",
          "commitNameOld": "4a5491810944bed643a9f2acf46ef3b9da8f1be7",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n     private boolean isMultiLine(int aLineNo)\n     {\n-        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n+        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),\n+                aLineNo + 1) \u003e\u003d 0);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),\n                aLineNo + 1) \u003e\u003d 0);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {
            "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
            "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
            "oldMethodName": "isMultiLine",
            "newMethodName": "isMultiLine"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "consolidation of code.\n",
          "commitDate": "16/11/08 3:11 AM",
          "commitName": "f66b504b06f8c479d338fb5b2797392dfa3ef359",
          "commitAuthor": "Oliver Burn",
          "commitDateOld": "16/11/08 2:54 AM",
          "commitNameOld": "4a5491810944bed643a9f2acf46ef3b9da8f1be7",
          "commitAuthorOld": "Oliver Burn",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,5 @@\n     private boolean isMultiLine(int aLineNo)\n     {\n-        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n+        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),\n+                aLineNo + 1) \u003e\u003d 0);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(getRegexpHeaderInfo().getMultLines(),\n                aLineNo + 1) \u003e\u003d 0);\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "6f1f7bd3fdcca84404e97964b3e48de6db5024ec": {
      "type": "Ymovefromfile",
      "commitMessage": "Added CrossLanguageRegexpHeaderCheck. This involved some refactorings to avoid duplicate code, so lots of files are affected\n- moved AbstractHeaderCheck to header package\n- moved file extension filtering code to Utils, so it\u0027s available not only from FileSetChecks\n- moved regexp header checking logic to RegexpHeaderChecker bean\n- moved check initialization logic and parameter checking to HeaderInfo classes\n",
      "commitDate": "19/10/06 1:35 PM",
      "commitName": "6f1f7bd3fdcca84404e97964b3e48de6db5024ec",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "08/10/06 5:11 AM",
      "commitNameOld": "3296ba06ac6ae5ad8c864ada15cec91d058785d4",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 11.35,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderChecker.java",
        "oldMethodName": "isMultiLine",
        "newMethodName": "isMultiLine"
      }
    },
    "aca96ae1b180a8036cc23e93840c4161ae8f8927": {
      "type": "Yfilerename",
      "commitMessage": "moved header checks to their own package\nremoved duplicate usage documentation in javadoc along the way\n",
      "commitDate": "30/01/05 3:32 AM",
      "commitName": "aca96ae1b180a8036cc23e93840c4161ae8f8927",
      "commitAuthor": "Lars KÃ¼hne",
      "commitDateOld": "30/01/05 3:07 AM",
      "commitNameOld": "0a60a189ed4236fd9be3c26bbb2f27be95e5d967",
      "commitAuthorOld": "Lars KÃ¼hne",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/header/RegexpHeaderCheck.java"
      }
    },
    "0340dcb26d5db9625e8e1f093f39165b8bdb18bf": {
      "type": "Yintroduced",
      "commitMessage": "Added multiLines property for RegexpHeaderCheck. Added AbstractHeaderCheck - superclass for header checks.\n",
      "commitDate": "10/01/04 8:36 PM",
      "commitName": "0340dcb26d5db9625e8e1f093f39165b8bdb18bf",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,4 @@\n+    private boolean isMultiLine(int aLineNo)\n+    {\n+        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isMultiLine(int aLineNo)\n    {\n        return (Arrays.binarySearch(mMultiLines, aLineNo + 1) \u003e\u003d 0);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/RegexpHeaderCheck.java"
    }
  }
}