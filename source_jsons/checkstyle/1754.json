{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VariableDeclarationUsageDistanceCheck.java",
  "functionName": "getFirstNodeInsideTryCatchFinallyBlocks",
  "functionId": "getFirstNodeInsideTryCatchFinallyBlocks___block-DetailAST__variable-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
  "functionStartLine": 764,
  "functionEndLine": 809,
  "numCommitsSeen": 66,
  "timeTaken": 1509,
  "changeHistory": [
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "c4e886312aae13b6cfadceed25b1b8aec18d4a96"
  ],
  "changeHistoryShort": {
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "c4e886312aae13b6cfadceed25b1b8aec18d4a96": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff5cbc39c4882b3a3dcdbedcad9393e170148725": {
      "type": "Ybodychange",
      "commitMessage": "Replace verbose type arguments with diamond type \u003c\u003e\n\nThis syntax is not supported under Java 6 or earlier, but Checkstyle codebase uses Java 7 already.\n",
      "commitDate": "15/02/15 8:22 AM",
      "commitName": "ff5cbc39c4882b3a3dcdbedcad9393e170148725",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "08/02/15 1:46 PM",
      "commitNameOld": "abe2b200312ee72aa552026b1a34e8bd72bfdc4e",
      "commitAuthorOld": "alexkravin",
      "daysBetweenCommits": 6.77,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n             DetailAST block, DetailAST variable)\n     {\n         DetailAST currentNode \u003d block.getFirstChild();\n         final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n-                new ArrayList\u003cDetailAST\u003e();\n+                new ArrayList\u003c\u003e();\n \n         // Checking variable usage inside TRY block.\n         if (isChild(currentNode, variable)) {\n             variableUsageExpressions.add(currentNode);\n         }\n \n         // Switch on CATCH block.\n         currentNode \u003d currentNode.getNextSibling();\n \n         // Checking variable usage inside all CATCH blocks.\n         while (currentNode !\u003d null\n                 \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n         {\n             final DetailAST catchBlock \u003d currentNode.getLastChild();\n \n             if (isChild(catchBlock, variable)) {\n                 variableUsageExpressions.add(catchBlock);\n             }\n             currentNode \u003d currentNode.getNextSibling();\n         }\n \n         // Checking variable usage inside FINALLY block.\n         if (currentNode !\u003d null) {\n             final DetailAST finalBlock \u003d currentNode.getLastChild();\n \n             if (isChild(finalBlock, variable)) {\n                 variableUsageExpressions.add(finalBlock);\n             }\n         }\n \n         DetailAST variableUsageNode \u003d null;\n \n         // If variable usage exists in several related blocks, then\n         // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n         // only inside one block, then get node from\n         // variableUsageExpressions.\n         if (variableUsageExpressions.size() \u003d\u003d 1) {\n             variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n         }\n \n         return variableUsageNode;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n            DetailAST block, DetailAST variable)\n    {\n        DetailAST currentNode \u003d block.getFirstChild();\n        final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                new ArrayList\u003c\u003e();\n\n        // Checking variable usage inside TRY block.\n        if (isChild(currentNode, variable)) {\n            variableUsageExpressions.add(currentNode);\n        }\n\n        // Switch on CATCH block.\n        currentNode \u003d currentNode.getNextSibling();\n\n        // Checking variable usage inside all CATCH blocks.\n        while (currentNode !\u003d null\n                \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n        {\n            final DetailAST catchBlock \u003d currentNode.getLastChild();\n\n            if (isChild(catchBlock, variable)) {\n                variableUsageExpressions.add(catchBlock);\n            }\n            currentNode \u003d currentNode.getNextSibling();\n        }\n\n        // Checking variable usage inside FINALLY block.\n        if (currentNode !\u003d null) {\n            final DetailAST finalBlock \u003d currentNode.getLastChild();\n\n            if (isChild(finalBlock, variable)) {\n                variableUsageExpressions.add(finalBlock);\n            }\n        }\n\n        DetailAST variableUsageNode \u003d null;\n\n        // If variable usage exists in several related blocks, then\n        // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n        // only inside one block, then get node from\n        // variableUsageExpressions.\n        if (variableUsageExpressions.size() \u003d\u003d 1) {\n            variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n        }\n\n        return variableUsageNode;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "07/09/14 6:39 PM",
          "commitNameOld": "465efcd6e07314f81381551c338a50aede5d6626",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 133.53,
          "commitsBetweenForRepo": 343,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,48 @@\n     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n-            DetailAST aBlock, DetailAST aVariable)\n+            DetailAST block, DetailAST variable)\n     {\n-        DetailAST currentNode \u003d aBlock.getFirstChild();\n+        DetailAST currentNode \u003d block.getFirstChild();\n         final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                 new ArrayList\u003cDetailAST\u003e();\n \n         // Checking variable usage inside TRY block.\n-        if (isChild(currentNode, aVariable)) {\n+        if (isChild(currentNode, variable)) {\n             variableUsageExpressions.add(currentNode);\n         }\n \n         // Switch on CATCH block.\n         currentNode \u003d currentNode.getNextSibling();\n \n         // Checking variable usage inside all CATCH blocks.\n         while (currentNode !\u003d null\n                 \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n         {\n             final DetailAST catchBlock \u003d currentNode.getLastChild();\n \n-            if (isChild(catchBlock, aVariable)) {\n+            if (isChild(catchBlock, variable)) {\n                 variableUsageExpressions.add(catchBlock);\n             }\n             currentNode \u003d currentNode.getNextSibling();\n         }\n \n         // Checking variable usage inside FINALLY block.\n         if (currentNode !\u003d null) {\n             final DetailAST finalBlock \u003d currentNode.getLastChild();\n \n-            if (isChild(finalBlock, aVariable)) {\n+            if (isChild(finalBlock, variable)) {\n                 variableUsageExpressions.add(finalBlock);\n             }\n         }\n \n         DetailAST variableUsageNode \u003d null;\n \n         // If variable usage exists in several related blocks, then\n         // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n         // only inside one block, then get node from\n         // variableUsageExpressions.\n         if (variableUsageExpressions.size() \u003d\u003d 1) {\n             variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n         }\n \n         return variableUsageNode;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n            DetailAST block, DetailAST variable)\n    {\n        DetailAST currentNode \u003d block.getFirstChild();\n        final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                new ArrayList\u003cDetailAST\u003e();\n\n        // Checking variable usage inside TRY block.\n        if (isChild(currentNode, variable)) {\n            variableUsageExpressions.add(currentNode);\n        }\n\n        // Switch on CATCH block.\n        currentNode \u003d currentNode.getNextSibling();\n\n        // Checking variable usage inside all CATCH blocks.\n        while (currentNode !\u003d null\n                \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n        {\n            final DetailAST catchBlock \u003d currentNode.getLastChild();\n\n            if (isChild(catchBlock, variable)) {\n                variableUsageExpressions.add(catchBlock);\n            }\n            currentNode \u003d currentNode.getNextSibling();\n        }\n\n        // Checking variable usage inside FINALLY block.\n        if (currentNode !\u003d null) {\n            final DetailAST finalBlock \u003d currentNode.getLastChild();\n\n            if (isChild(finalBlock, variable)) {\n                variableUsageExpressions.add(finalBlock);\n            }\n        }\n\n        DetailAST variableUsageNode \u003d null;\n\n        // If variable usage exists in several related blocks, then\n        // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n        // only inside one block, then get node from\n        // variableUsageExpressions.\n        if (variableUsageExpressions.size() \u003d\u003d 1) {\n            variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n        }\n\n        return variableUsageNode;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
          "extendedDetails": {
            "oldValue": "[aBlock-DetailAST, aVariable-DetailAST]",
            "newValue": "[block-DetailAST, variable-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "07/09/14 6:39 PM",
          "commitNameOld": "465efcd6e07314f81381551c338a50aede5d6626",
          "commitAuthorOld": "Roman Ivanov",
          "daysBetweenCommits": 133.53,
          "commitsBetweenForRepo": 343,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,48 +1,48 @@\n     private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n-            DetailAST aBlock, DetailAST aVariable)\n+            DetailAST block, DetailAST variable)\n     {\n-        DetailAST currentNode \u003d aBlock.getFirstChild();\n+        DetailAST currentNode \u003d block.getFirstChild();\n         final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                 new ArrayList\u003cDetailAST\u003e();\n \n         // Checking variable usage inside TRY block.\n-        if (isChild(currentNode, aVariable)) {\n+        if (isChild(currentNode, variable)) {\n             variableUsageExpressions.add(currentNode);\n         }\n \n         // Switch on CATCH block.\n         currentNode \u003d currentNode.getNextSibling();\n \n         // Checking variable usage inside all CATCH blocks.\n         while (currentNode !\u003d null\n                 \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n         {\n             final DetailAST catchBlock \u003d currentNode.getLastChild();\n \n-            if (isChild(catchBlock, aVariable)) {\n+            if (isChild(catchBlock, variable)) {\n                 variableUsageExpressions.add(catchBlock);\n             }\n             currentNode \u003d currentNode.getNextSibling();\n         }\n \n         // Checking variable usage inside FINALLY block.\n         if (currentNode !\u003d null) {\n             final DetailAST finalBlock \u003d currentNode.getLastChild();\n \n-            if (isChild(finalBlock, aVariable)) {\n+            if (isChild(finalBlock, variable)) {\n                 variableUsageExpressions.add(finalBlock);\n             }\n         }\n \n         DetailAST variableUsageNode \u003d null;\n \n         // If variable usage exists in several related blocks, then\n         // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n         // only inside one block, then get node from\n         // variableUsageExpressions.\n         if (variableUsageExpressions.size() \u003d\u003d 1) {\n             variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n         }\n \n         return variableUsageNode;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n            DetailAST block, DetailAST variable)\n    {\n        DetailAST currentNode \u003d block.getFirstChild();\n        final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                new ArrayList\u003cDetailAST\u003e();\n\n        // Checking variable usage inside TRY block.\n        if (isChild(currentNode, variable)) {\n            variableUsageExpressions.add(currentNode);\n        }\n\n        // Switch on CATCH block.\n        currentNode \u003d currentNode.getNextSibling();\n\n        // Checking variable usage inside all CATCH blocks.\n        while (currentNode !\u003d null\n                \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n        {\n            final DetailAST catchBlock \u003d currentNode.getLastChild();\n\n            if (isChild(catchBlock, variable)) {\n                variableUsageExpressions.add(catchBlock);\n            }\n            currentNode \u003d currentNode.getNextSibling();\n        }\n\n        // Checking variable usage inside FINALLY block.\n        if (currentNode !\u003d null) {\n            final DetailAST finalBlock \u003d currentNode.getLastChild();\n\n            if (isChild(finalBlock, variable)) {\n                variableUsageExpressions.add(finalBlock);\n            }\n        }\n\n        DetailAST variableUsageNode \u003d null;\n\n        // If variable usage exists in several related blocks, then\n        // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n        // only inside one block, then get node from\n        // variableUsageExpressions.\n        if (variableUsageExpressions.size() \u003d\u003d 1) {\n            variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n        }\n\n        return variableUsageNode;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "c4e886312aae13b6cfadceed25b1b8aec18d4a96": {
      "type": "Yintroduced",
      "commitMessage": "VariableDeclarationUsageDistanceCheck was imported #223\n",
      "commitDate": "06/08/14 10:50 PM",
      "commitName": "c4e886312aae13b6cfadceed25b1b8aec18d4a96",
      "commitAuthor": "Max",
      "diff": "@@ -0,0 +1,48 @@\n+    private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n+            DetailAST aBlock, DetailAST aVariable)\n+    {\n+        DetailAST currentNode \u003d aBlock.getFirstChild();\n+        final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n+                new ArrayList\u003cDetailAST\u003e();\n+\n+        // Checking variable usage inside TRY block.\n+        if (isChild(currentNode, aVariable)) {\n+            variableUsageExpressions.add(currentNode);\n+        }\n+\n+        // Switch on CATCH block.\n+        currentNode \u003d currentNode.getNextSibling();\n+\n+        // Checking variable usage inside all CATCH blocks.\n+        while (currentNode !\u003d null\n+                \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n+        {\n+            final DetailAST catchBlock \u003d currentNode.getLastChild();\n+\n+            if (isChild(catchBlock, aVariable)) {\n+                variableUsageExpressions.add(catchBlock);\n+            }\n+            currentNode \u003d currentNode.getNextSibling();\n+        }\n+\n+        // Checking variable usage inside FINALLY block.\n+        if (currentNode !\u003d null) {\n+            final DetailAST finalBlock \u003d currentNode.getLastChild();\n+\n+            if (isChild(finalBlock, aVariable)) {\n+                variableUsageExpressions.add(finalBlock);\n+            }\n+        }\n+\n+        DetailAST variableUsageNode \u003d null;\n+\n+        // If variable usage exists in several related blocks, then\n+        // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n+        // only inside one block, then get node from\n+        // variableUsageExpressions.\n+        if (variableUsageExpressions.size() \u003d\u003d 1) {\n+            variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n+        }\n+\n+        return variableUsageNode;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private static DetailAST getFirstNodeInsideTryCatchFinallyBlocks(\n            DetailAST aBlock, DetailAST aVariable)\n    {\n        DetailAST currentNode \u003d aBlock.getFirstChild();\n        final List\u003cDetailAST\u003e variableUsageExpressions \u003d\n                new ArrayList\u003cDetailAST\u003e();\n\n        // Checking variable usage inside TRY block.\n        if (isChild(currentNode, aVariable)) {\n            variableUsageExpressions.add(currentNode);\n        }\n\n        // Switch on CATCH block.\n        currentNode \u003d currentNode.getNextSibling();\n\n        // Checking variable usage inside all CATCH blocks.\n        while (currentNode !\u003d null\n                \u0026\u0026 currentNode.getType() \u003d\u003d TokenTypes.LITERAL_CATCH)\n        {\n            final DetailAST catchBlock \u003d currentNode.getLastChild();\n\n            if (isChild(catchBlock, aVariable)) {\n                variableUsageExpressions.add(catchBlock);\n            }\n            currentNode \u003d currentNode.getNextSibling();\n        }\n\n        // Checking variable usage inside FINALLY block.\n        if (currentNode !\u003d null) {\n            final DetailAST finalBlock \u003d currentNode.getLastChild();\n\n            if (isChild(finalBlock, aVariable)) {\n                variableUsageExpressions.add(finalBlock);\n            }\n        }\n\n        DetailAST variableUsageNode \u003d null;\n\n        // If variable usage exists in several related blocks, then\n        // firstNodeInsideBlock \u003d null, otherwise if variable usage exists\n        // only inside one block, then get node from\n        // variableUsageExpressions.\n        if (variableUsageExpressions.size() \u003d\u003d 1) {\n            variableUsageNode \u003d variableUsageExpressions.get(0).getFirstChild();\n        }\n\n        return variableUsageNode;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/VariableDeclarationUsageDistanceCheck.java"
    }
  }
}