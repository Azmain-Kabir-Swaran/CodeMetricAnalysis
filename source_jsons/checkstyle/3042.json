{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TagParser.java",
  "functionName": "isTag",
  "functionId": "isTag___javadocText-String[]__pos-Point",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
  "functionStartLine": 160,
  "functionEndLine": 169,
  "numCommitsSeen": 65,
  "timeTaken": 1980,
  "changeHistory": [
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
    "1bc8a685f64ec17d87b465cb765127cc5f0db1ca",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1bd30555eac039d0486dffb3fc43b7a34117909b",
    "89a51ba032fd9126651fa9efad31baf10c006ddf",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "979b0b5c20f79d7ac2281ae539859a60dad48c6e",
    "c2d3932843e70e4bb5df7161800aca248f9af778",
    "fd6a743fd4b3c9283d62174327dd978bda694892"
  ],
  "changeHistoryShort": {
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726": "Ybodychange",
    "1bc8a685f64ec17d87b465cb765127cc5f0db1ca": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1bd30555eac039d0486dffb3fc43b7a34117909b": "Ybodychange",
    "89a51ba032fd9126651fa9efad31baf10c006ddf": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "979b0b5c20f79d7ac2281ae539859a60dad48c6e": "Ybodychange",
    "c2d3932843e70e4bb5df7161800aca248f9af778": "Ybodychange",
    "fd6a743fd4b3c9283d62174327dd978bda694892": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6241: resolved teamcity 2018.3 violations",
      "commitDate": "02/12/18 8:23 PM",
      "commitName": "bc4fe1ec9cc2abb9e370af4e8b44a4f7f71f9726",
      "commitAuthor": "rnveach",
      "commitDateOld": "18/04/18 1:06 PM",
      "commitNameOld": "6893affeac7285afd16f8a389c7d65023d0c327a",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 228.35,
      "commitsBetweenForRepo": 384,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,10 @@\n     private static boolean isTag(String[] javadocText, Point pos) {\n         final int column \u003d pos.getColumnNo() + 1;\n         final String text \u003d javadocText[pos.getLineNo()];\n \n         //Character.isJavaIdentifier... may not be a valid HTML\n         //identifier but is valid for generics\n-        return column \u003c text.length()\n-                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n-                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n-                || column \u003e\u003d text.length();\n+        return column \u003e\u003d text.length()\n+                || Character.isJavaIdentifierStart(text.charAt(column))\n+                    || text.charAt(column) \u003d\u003d \u0027/\u0027;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isTag(String[] javadocText, Point pos) {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavaIdentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return column \u003e\u003d text.length()\n                || Character.isJavaIdentifierStart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {}
    },
    "1bc8a685f64ec17d87b465cb765127cc5f0db1ca": {
      "type": "Ybodychange",
      "commitMessage": "Add tests and refactor TagParser for JavadocStyle check. #1308\n",
      "commitDate": "24/07/15 5:01 PM",
      "commitName": "1bc8a685f64ec17d87b465cb765127cc5f0db1ca",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "22/07/15 10:58 PM",
      "commitNameOld": "acbd47a66b01acc392a7bd37ad3a2e65eecd308a",
      "commitAuthorOld": "Aleksandr Ivanov",
      "daysBetweenCommits": 1.75,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n     private static boolean isTag(String[] javadocText, Point pos) {\n         final int column \u003d pos.getColumnNo() + 1;\n         final String text \u003d javadocText[pos.getLineNo()];\n \n         //Character.isJavidentifier... may not be a valid HTML\n         //identifier but is valid for generics\n         return column \u003c text.length()\n                 \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n-                    || Character.isJavaIdentifierPart(text.charAt(column))\n                     || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                 || column \u003e\u003d text.length();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isTag(String[] javadocText, Point pos) {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavidentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return column \u003c text.length()\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || column \u003e\u003d text.length();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n-    private boolean isTag(String[] javadocText, Point pos) {\n+    private static boolean isTag(String[] javadocText, Point pos) {\n         final int column \u003d pos.getColumnNo() + 1;\n         final String text \u003d javadocText[pos.getLineNo()];\n \n         //Character.isJavidentifier... may not be a valid HTML\n         //identifier but is valid for generics\n         return column \u003c text.length()\n                 \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                     || Character.isJavaIdentifierPart(text.charAt(column))\n                     || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                 || column \u003e\u003d text.length();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isTag(String[] javadocText, Point pos) {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavidentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return column \u003c text.length()\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || column \u003e\u003d text.length();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "1bd30555eac039d0486dffb3fc43b7a34117909b": {
      "type": "Ybodychange",
      "commitMessage": "Remove useless parentheses to fix PMD violations, issue #744\n\nParentheses are considered unnecessary if the evaluation order of an expression remains unchanged if the parentheses are removed.\n",
      "commitDate": "10/03/15 2:36 PM",
      "commitName": "1bd30555eac039d0486dffb3fc43b7a34117909b",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/02/15 1:14 PM",
      "commitNameOld": "c9a9e6508c15e00cf6820b213d79d5ebf41c6343",
      "commitAuthorOld": "Roman Ivanov",
      "daysBetweenCommits": 20.02,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean isTag(String[] javadocText, Point pos)\n     {\n         final int column \u003d pos.getColumnNo() + 1;\n         final String text \u003d javadocText[pos.getLineNo()];\n \n         //Character.isJavidentifier... may not be a valid HTML\n         //identifier but is valid for generics\n-        return ((column \u003c text.length())\n+        return column \u003c text.length()\n                 \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                     || Character.isJavaIdentifierPart(text.charAt(column))\n                     || text.charAt(column) \u003d\u003d \u0027/\u0027)\n-                || (column \u003e\u003d text.length()));\n+                || column \u003e\u003d text.length();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isTag(String[] javadocText, Point pos)\n    {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavidentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return column \u003c text.length()\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || column \u003e\u003d text.length();\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {}
    },
    "89a51ba032fd9126651fa9efad31baf10c006ddf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, javadoc, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.78,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private boolean isTag(String[] aText, Point aPos)\n+    private boolean isTag(String[] javadocText, Point pos)\n     {\n-        final int column \u003d aPos.getColumnNo() + 1;\n-        final String text \u003d aText[aPos.getLineNo()];\n+        final int column \u003d pos.getColumnNo() + 1;\n+        final String text \u003d javadocText[pos.getLineNo()];\n \n-        //Character.isJavaIdentifier... may not be a valid HTML\n+        //Character.isJavidentifier... may not be a valid HTML\n         //identifier but is valid for generics\n         return ((column \u003c text.length())\n                 \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                     || Character.isJavaIdentifierPart(text.charAt(column))\n                     || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                 || (column \u003e\u003d text.length()));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isTag(String[] javadocText, Point pos)\n    {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavidentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return ((column \u003c text.length())\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || (column \u003e\u003d text.length()));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
          "extendedDetails": {
            "oldValue": "[aText-String[], aPos-Point]",
            "newValue": "[javadocText-String[], pos-Point]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, javadoc, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "89a51ba032fd9126651fa9efad31baf10c006ddf",
          "commitAuthor": "alexkravin",
          "commitDateOld": "22/07/14 12:44 PM",
          "commitNameOld": "dfb851e673a879120c80caca7167de3e5c3aa662",
          "commitAuthorOld": "Baratali Izmailov",
          "daysBetweenCommits": 180.78,
          "commitsBetweenForRepo": 399,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-    private boolean isTag(String[] aText, Point aPos)\n+    private boolean isTag(String[] javadocText, Point pos)\n     {\n-        final int column \u003d aPos.getColumnNo() + 1;\n-        final String text \u003d aText[aPos.getLineNo()];\n+        final int column \u003d pos.getColumnNo() + 1;\n+        final String text \u003d javadocText[pos.getLineNo()];\n \n-        //Character.isJavaIdentifier... may not be a valid HTML\n+        //Character.isJavidentifier... may not be a valid HTML\n         //identifier but is valid for generics\n         return ((column \u003c text.length())\n                 \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                     || Character.isJavaIdentifierPart(text.charAt(column))\n                     || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                 || (column \u003e\u003d text.length()));\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isTag(String[] javadocText, Point pos)\n    {\n        final int column \u003d pos.getColumnNo() + 1;\n        final String text \u003d javadocText[pos.getLineNo()];\n\n        //Character.isJavidentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return ((column \u003c text.length())\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || (column \u003e\u003d text.length()));\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isTag(String[] aText, Point aPos)\n    {\n        final int column \u003d aPos.getColumnNo() + 1;\n        final String text \u003d aText[aPos.getLineNo()];\n\n        //Character.isJavaIdentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return ((column \u003c text.length())\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || (column \u003e\u003d text.length()));\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java"
      }
    },
    "979b0b5c20f79d7ac2281ae539859a60dad48c6e": {
      "type": "Ybodychange",
      "commitMessage": "Fixed bug #1649020 where generic parameters for methods\nrecognized as HTML tags. Used patch #1936389 from Travis\nSchneeberger.\n",
      "commitDate": "19/04/08 11:40 PM",
      "commitName": "979b0b5c20f79d7ac2281ae539859a60dad48c6e",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "12/01/08 6:47 PM",
      "commitNameOld": "5a7e221b757e91d49be1aea105eb4b839e653fbd",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 98.16,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean isTag(String[] aText, Point aPos)\n     {\n         final int column \u003d aPos.getColumnNo() + 1;\n         final String text \u003d aText[aPos.getLineNo()];\n \n-        return (((column \u003c text.length())\n-                \u0026\u0026 (((text.charAt(column) \u003e\u003d \u0027A\u0027)\n-                     \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027Z\u0027))\n-                    || ((text.charAt(column) \u003e\u003d \u0027a\u0027)\n-                        \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027z\u0027))\n-                    || (text.charAt(column) \u003d\u003d \u0027/\u0027)))\n+        //Character.isJavaIdentifier... may not be a valid HTML\n+        //identifier but is valid for generics\n+        return ((column \u003c text.length())\n+                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n+                    || Character.isJavaIdentifierPart(text.charAt(column))\n+                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                 || (column \u003e\u003d text.length()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isTag(String[] aText, Point aPos)\n    {\n        final int column \u003d aPos.getColumnNo() + 1;\n        final String text \u003d aText[aPos.getLineNo()];\n\n        //Character.isJavaIdentifier... may not be a valid HTML\n        //identifier but is valid for generics\n        return ((column \u003c text.length())\n                \u0026\u0026 (Character.isJavaIdentifierStart(text.charAt(column))\n                    || Character.isJavaIdentifierPart(text.charAt(column))\n                    || text.charAt(column) \u003d\u003d \u0027/\u0027)\n                || (column \u003e\u003d text.length()));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {}
    },
    "c2d3932843e70e4bb5df7161800aca248f9af778": {
      "type": "Ybodychange",
      "commitMessage": "Clean up the use of ()\u0027s\n",
      "commitDate": "06/07/06 8:26 PM",
      "commitName": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "08/08/05 5:18 PM",
      "commitNameOld": "d6175fd6c95f64e854c1604e0331d8d1ab9dcaf3",
      "commitAuthorOld": "Michael Studman",
      "daysBetweenCommits": 332.13,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n     private boolean isTag(String[] aText, Point aPos)\n     {\n         final int column \u003d aPos.getColumnNo() + 1;\n         final String text \u003d aText[aPos.getLineNo()];\n \n-        return (column \u003c text.length()\n+        return (((column \u003c text.length())\n                 \u0026\u0026 (((text.charAt(column) \u003e\u003d \u0027A\u0027)\n                      \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027Z\u0027))\n                     || ((text.charAt(column) \u003e\u003d \u0027a\u0027)\n                         \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027z\u0027))\n-                    || (text.charAt(column) \u003d\u003d \u0027/\u0027))\n-                || column \u003e\u003d text.length());\n+                    || (text.charAt(column) \u003d\u003d \u0027/\u0027)))\n+                || (column \u003e\u003d text.length()));\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isTag(String[] aText, Point aPos)\n    {\n        final int column \u003d aPos.getColumnNo() + 1;\n        final String text \u003d aText[aPos.getLineNo()];\n\n        return (((column \u003c text.length())\n                \u0026\u0026 (((text.charAt(column) \u003e\u003d \u0027A\u0027)\n                     \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027Z\u0027))\n                    || ((text.charAt(column) \u003e\u003d \u0027a\u0027)\n                        \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027z\u0027))\n                    || (text.charAt(column) \u003d\u003d \u0027/\u0027)))\n                || (column \u003e\u003d text.length()));\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java",
      "extendedDetails": {}
    },
    "fd6a743fd4b3c9283d62174327dd978bda694892": {
      "type": "Yintroduced",
      "commitMessage": "Draft fix for 843887 (XHTML not handled correctly in JavadocStyle).  Feel free to improve it.\n",
      "commitDate": "20/11/03 3:19 AM",
      "commitName": "fd6a743fd4b3c9283d62174327dd978bda694892",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,13 @@\n+    private boolean isTag(String[] aText, Point aPos)\n+    {\n+        final int column \u003d aPos.getColumnNo() + 1;\n+        final String text \u003d aText[aPos.getLineNo()];\n+\n+        return (column \u003c text.length()\n+                \u0026\u0026 (((text.charAt(column) \u003e\u003d \u0027A\u0027)\n+                     \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027Z\u0027))\n+                    || ((text.charAt(column) \u003e\u003d \u0027a\u0027)\n+                        \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027z\u0027))\n+                    || (text.charAt(column) \u003d\u003d \u0027/\u0027))\n+                || column \u003e\u003d text.length());\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isTag(String[] aText, Point aPos)\n    {\n        final int column \u003d aPos.getColumnNo() + 1;\n        final String text \u003d aText[aPos.getLineNo()];\n\n        return (column \u003c text.length()\n                \u0026\u0026 (((text.charAt(column) \u003e\u003d \u0027A\u0027)\n                     \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027Z\u0027))\n                    || ((text.charAt(column) \u003e\u003d \u0027a\u0027)\n                        \u0026\u0026 (text.charAt(column) \u003c\u003d \u0027z\u0027))\n                    || (text.charAt(column) \u003d\u003d \u0027/\u0027))\n                || column \u003e\u003d text.length());\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/javadoc/TagParser.java"
    }
  }
}