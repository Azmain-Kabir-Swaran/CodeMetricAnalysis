{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NPathComplexityCheck.java",
  "functionName": "leaveUnitaryOperator",
  "functionId": "leaveUnitaryOperator",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java",
  "functionStartLine": 436,
  "functionEndLine": 449,
  "numCommitsSeen": 36,
  "timeTaken": 1176,
  "changeHistory": [
    "5ae53778055389cd06939acc7850d98fe5469aeb",
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128",
    "e810918205ff8e99a5cd692d6a99b899f5337eef"
  ],
  "changeHistoryShort": {
    "5ae53778055389cd06939acc7850d98fe5469aeb": "Ybodychange",
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128": "Ybodychange",
    "e810918205ff8e99a5cd692d6a99b899f5337eef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5ae53778055389cd06939acc7850d98fe5469aeb": {
      "type": "Ybodychange",
      "commitMessage": "Issue #5604: resolve Sonar violation \u0027Use the primitive boolean expression here\u0027\n",
      "commitDate": "16/01/20 11:32 PM",
      "commitName": "5ae53778055389cd06939acc7850d98fe5469aeb",
      "commitAuthor": "Roman Ivanov",
      "commitDateOld": "01/01/20 4:38 PM",
      "commitNameOld": "ae9edbd4a8645c8cc1a99ad6890dd0006700d1cb",
      "commitAuthorOld": "rnveach",
      "daysBetweenCommits": 15.29,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void leaveUnitaryOperator() {\n-        if (!afterValues.pop()) {\n+        if (Boolean.FALSE.equals(afterValues.pop())) {\n             final Values valuePair \u003d popValue();\n             BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n             BigInteger expressionValue \u003d valuePair.getExpressionValue();\n             if (expressionValue.equals(BigInteger.ZERO)) {\n                 expressionValue \u003d BigInteger.ONE;\n             }\n             if (basicRangeValue.equals(BigInteger.ZERO)) {\n                 basicRangeValue \u003d BigInteger.ONE;\n             }\n             currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void leaveUnitaryOperator() {\n        if (Boolean.FALSE.equals(afterValues.pop())) {\n            final Values valuePair \u003d popValue();\n            BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n            BigInteger expressionValue \u003d valuePair.getExpressionValue();\n            if (expressionValue.equals(BigInteger.ZERO)) {\n                expressionValue \u003d BigInteger.ONE;\n            }\n            if (basicRangeValue.equals(BigInteger.ZERO)) {\n                basicRangeValue \u003d BigInteger.ONE;\n            }\n            currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java",
      "extendedDetails": {}
    },
    "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128": {
      "type": "Ybodychange",
      "commitMessage": "Issue #6578: Enable PMD rule LinguisticNaming\n",
      "commitDate": "16/03/19 10:46 PM",
      "commitName": "9a96cc860d7f1394ed8d1a60b7b58e0ea3613128",
      "commitAuthor": "pbludov",
      "commitDateOld": "13/03/19 11:08 PM",
      "commitNameOld": "aef7c727ba4a3872e7094f287dc9a506ec172592",
      "commitAuthorOld": "pbludov",
      "daysBetweenCommits": 2.98,
      "commitsBetweenForRepo": 20,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n     private void leaveUnitaryOperator() {\n-        if (!isAfterValues.pop()) {\n+        if (!afterValues.pop()) {\n             final Values valuePair \u003d popValue();\n             BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n             BigInteger expressionValue \u003d valuePair.getExpressionValue();\n             if (expressionValue.equals(BigInteger.ZERO)) {\n                 expressionValue \u003d BigInteger.ONE;\n             }\n             if (basicRangeValue.equals(BigInteger.ZERO)) {\n                 basicRangeValue \u003d BigInteger.ONE;\n             }\n             currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void leaveUnitaryOperator() {\n        if (!afterValues.pop()) {\n            final Values valuePair \u003d popValue();\n            BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n            BigInteger expressionValue \u003d valuePair.getExpressionValue();\n            if (expressionValue.equals(BigInteger.ZERO)) {\n                expressionValue \u003d BigInteger.ONE;\n            }\n            if (basicRangeValue.equals(BigInteger.ZERO)) {\n                basicRangeValue \u003d BigInteger.ONE;\n            }\n            currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java",
      "extendedDetails": {}
    },
    "e810918205ff8e99a5cd692d6a99b899f5337eef": {
      "type": "Yintroduced",
      "commitMessage": "Issue #56: fix NPathComplexityCheck\n",
      "commitDate": "28/04/17 9:38 AM",
      "commitName": "e810918205ff8e99a5cd692d6a99b899f5337eef",
      "commitAuthor": "kazachka",
      "diff": "@@ -0,0 +1,14 @@\n+    private void leaveUnitaryOperator() {\n+        if (!isAfterValues.pop()) {\n+            final Values valuePair \u003d popValue();\n+            BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n+            BigInteger expressionValue \u003d valuePair.getExpressionValue();\n+            if (expressionValue.equals(BigInteger.ZERO)) {\n+                expressionValue \u003d BigInteger.ONE;\n+            }\n+            if (basicRangeValue.equals(BigInteger.ZERO)) {\n+                basicRangeValue \u003d BigInteger.ONE;\n+            }\n+            currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void leaveUnitaryOperator() {\n        if (!isAfterValues.pop()) {\n            final Values valuePair \u003d popValue();\n            BigInteger basicRangeValue \u003d valuePair.getRangeValue();\n            BigInteger expressionValue \u003d valuePair.getExpressionValue();\n            if (expressionValue.equals(BigInteger.ZERO)) {\n                expressionValue \u003d BigInteger.ONE;\n            }\n            if (basicRangeValue.equals(BigInteger.ZERO)) {\n                basicRangeValue \u003d BigInteger.ONE;\n            }\n            currentRangeValue \u003d currentRangeValue.add(expressionValue).multiply(basicRangeValue);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/NPathComplexityCheck.java"
    }
  }
}