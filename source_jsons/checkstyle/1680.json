{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IllegalInstantiationCheck.java",
  "functionName": "processLiteralNew",
  "functionId": "processLiteralNew___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
  "functionStartLine": 207,
  "functionEndLine": 211,
  "numCommitsSeen": 113,
  "timeTaken": 1881,
  "changeHistory": [
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
    "839cd1b10edb01feb771832a69cf351a6c1c91ef",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14",
    "59c9c64381dd92bc877f5a834dae7856603d5546",
    "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1",
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3"
  ],
  "changeHistoryShort": {
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": "Ybodychange",
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": "Ymultichange(Yparameterchange,Ybodychange)",
    "839cd1b10edb01feb771832a69cf351a6c1c91ef": "Ybodychange",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": "Ybodychange",
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": "Yfilerename",
    "59c9c64381dd92bc877f5a834dae7856603d5546": "Ybodychange",
    "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1": "Ybodychange",
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16ae5032c5e25ad35475c9a0f2de578ea6e640e5": {
      "type": "Ybodychange",
      "commitMessage": "Issue #1293: Improved coverage for IllegalInstantiationCheck\n",
      "commitDate": "08/08/15 7:32 PM",
      "commitName": "16ae5032c5e25ad35475c9a0f2de578ea6e640e5",
      "commitAuthor": "Baratali Izmailov",
      "commitDateOld": "07/08/15 10:17 PM",
      "commitNameOld": "4fd298b00126d60147dce7631c6e0d3e0921f82f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.89,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,5 @@\n     private void processLiteralNew(DetailAST ast) {\n-        if (ast.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n-            return;\n+        if (ast.getParent().getType() !\u003d TokenTypes.METHOD_REF) {\n+            instantiations.add(ast);\n         }\n-        instantiations.add(ast);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST ast) {\n        if (ast.getParent().getType() !\u003d TokenTypes.METHOD_REF) {\n            instantiations.add(ast);\n        }\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, coding, #512\n",
      "commitDate": "19/01/15 6:20 AM",
      "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private void processLiteralNew(DetailAST aAST)\n+    private void processLiteralNew(DetailAST ast)\n     {\n-        if (aAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n+        if (ast.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n             return;\n         }\n-        mInstantiations.add(aAST);\n+        instantiations.add(ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void processLiteralNew(DetailAST ast)\n    {\n        if (ast.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n            return;\n        }\n        instantiations.add(ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, coding, #512\n",
          "commitDate": "19/01/15 6:20 AM",
          "commitName": "bb1b29851f14bf7eaf5656e01c285c0f5f3b9000",
          "commitAuthor": "alexkravin",
          "commitDateOld": "10/10/14 11:15 AM",
          "commitNameOld": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
          "commitAuthorOld": "Ryszard Wiśniewski",
          "daysBetweenCommits": 100.84,
          "commitsBetweenForRepo": 299,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,7 @@\n-    private void processLiteralNew(DetailAST aAST)\n+    private void processLiteralNew(DetailAST ast)\n     {\n-        if (aAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n+        if (ast.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n             return;\n         }\n-        mInstantiations.add(aAST);\n+        instantiations.add(ast);\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private void processLiteralNew(DetailAST ast)\n    {\n        if (ast.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n            return;\n        }\n        instantiations.add(ast);\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "839cd1b10edb01feb771832a69cf351a6c1c91ef": {
      "type": "Ybodychange",
      "commitMessage": "Fixed IllegalInstantiationCheck, so it won\u0027t recognize a constructor reference (Java8) as instantiation.\n\nAlso added a test for it.\n",
      "commitDate": "10/10/14 11:15 AM",
      "commitName": "839cd1b10edb01feb771832a69cf351a6c1c91ef",
      "commitAuthor": "Ryszard Wiśniewski",
      "commitDateOld": "04/03/14 9:18 AM",
      "commitNameOld": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthorOld": "Ivan Sopov",
      "daysBetweenCommits": 220.04,
      "commitsBetweenForRepo": 158,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,7 @@\n     private void processLiteralNew(DetailAST aAST)\n     {\n+        if (aAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n+            return;\n+        }\n         mInstantiations.add(aAST);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        if (aAST.getParent().getType() \u003d\u003d TokenTypes.METHOD_REF) {\n            return;\n        }\n        mInstantiations.add(aAST);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        mInstantiations.add(aAST);\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
      }
    },
    "bb1db4938ccae0f7149461ea372398fb8a53f2a8": {
      "type": "Ybodychange",
      "commitMessage": "fixed bug #772832, Confusion about class named \u0027Boolean\u0027\n",
      "commitDate": "03/08/03 6:22 AM",
      "commitName": "bb1db4938ccae0f7149461ea372398fb8a53f2a8",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "23/06/03 6:31 AM",
      "commitNameOld": "32f5f97181f9049af5411a5b8f151b51f1c5f165",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 40.99,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,4 @@\n     private void processLiteralNew(DetailAST aAST)\n     {\n-        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n-\n-        final AST nameSibling \u003d typeNameAST.getNextSibling();\n-        if (nameSibling !\u003d null\n-                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n-        {\n-            // aAST \u003d\u003d \"new Boolean[]\"\n-            return;\n-        }\n-\n-        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n-        final String typeName \u003d typeIdent.getText();\n-        final int lineNo \u003d aAST.getLineNo();\n-        final int colNo \u003d aAST.getColumnNo();\n-        final String fqClassName \u003d getIllegalInstantiation(typeName);\n-        if (fqClassName !\u003d null) {\n-            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n-        }\n+        mInstantiations.add(aAST);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        mInstantiations.add(aAST);\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "9920857810ecc9efdbca19e2749b75abc0cbbf14": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Coding checks\n",
      "commitDate": "15/06/03 5:39 AM",
      "commitName": "9920857810ecc9efdbca19e2749b75abc0cbbf14",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "14/06/03 10:47 AM",
      "commitNameOld": "e464c231eccec72f964131d9aeb5e49982c4b3bb",
      "commitAuthorOld": "Oleg Sukhodolsky",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/coding/IllegalInstantiationCheck.java"
      }
    },
    "59c9c64381dd92bc877f5a834dae7856603d5546": {
      "type": "Ybodychange",
      "commitMessage": "fixed style problems\n",
      "commitDate": "28/10/02 8:27 AM",
      "commitName": "59c9c64381dd92bc877f5a834dae7856603d5546",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "25/10/02 11:21 PM",
      "commitNameOld": "8dd406793d0152390b48097bd5f51696116044a8",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 2.42,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n     private void processLiteralNew(DetailAST aAST)\n     {\n-        DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n+        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n \n-        AST nameSibling \u003d typeNameAST.getNextSibling();\n+        final AST nameSibling \u003d typeNameAST.getNextSibling();\n         if (nameSibling !\u003d null\n                 \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n         {\n             // aAST \u003d\u003d \"new Boolean[]\"\n             return;\n         }\n \n         FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d aAST.getLineNo();\n         final int colNo \u003d aAST.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        final DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n\n        final AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1": {
      "type": "Ybodychange",
      "commitMessage": "fix for bug #626875, array instantiation incorrectly flagged\n",
      "commitDate": "22/10/02 7:13 AM",
      "commitName": "c2b22a74a2e85bbb2cfd4e0e2379bb062cb58dd1",
      "commitAuthor": "Lars Kühne",
      "commitDateOld": "18/10/02 11:28 PM",
      "commitNameOld": "84eddc36730c1eca845257201c71a0d1fb2d40cf",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 3.32,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,21 @@\n     private void processLiteralNew(DetailAST aAST)\n     {\n         DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n+\n+        AST nameSibling \u003d typeNameAST.getNextSibling();\n+        if (nameSibling !\u003d null\n+                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n+        {\n+            // aAST \u003d\u003d \"new Boolean[]\"\n+            return;\n+        }\n+\n         FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n         final String typeName \u003d typeIdent.getText();\n         final int lineNo \u003d aAST.getLineNo();\n         final int colNo \u003d aAST.getColumnNo();\n         final String fqClassName \u003d getIllegalInstantiation(typeName);\n         if (fqClassName !\u003d null) {\n             log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n         }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n\n        AST nameSibling \u003d typeNameAST.getNextSibling();\n        if (nameSibling !\u003d null\n                \u0026\u0026 nameSibling.getType() \u003d\u003d TokenTypes.ARRAY_DECLARATOR)\n        {\n            // aAST \u003d\u003d \"new Boolean[]\"\n            return;\n        }\n\n        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java",
      "extendedDetails": {}
    },
    "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3": {
      "type": "Yintroduced",
      "commitMessage": "ported the illegal instantiations check\nstill need to remove the old code\n",
      "commitDate": "29/09/02 12:43 PM",
      "commitName": "ce175a83d8ab99fe75df384ee9e6faa65e2bb3f3",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,12 @@\n+    private void processLiteralNew(DetailAST aAST)\n+    {\n+        DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n+        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n+        final String typeName \u003d typeIdent.getText();\n+        final int lineNo \u003d aAST.getLineNo();\n+        final int colNo \u003d aAST.getColumnNo();\n+        final String fqClassName \u003d getIllegalInstantiation(typeName);\n+        if (fqClassName !\u003d null) {\n+            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n+        }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void processLiteralNew(DetailAST aAST)\n    {\n        DetailAST typeNameAST \u003d (DetailAST) aAST.getFirstChild();\n        FullIdent typeIdent \u003d FullIdent.createFullIdent(typeNameAST);\n        final String typeName \u003d typeIdent.getText();\n        final int lineNo \u003d aAST.getLineNo();\n        final int colNo \u003d aAST.getColumnNo();\n        final String fqClassName \u003d getIllegalInstantiation(typeName);\n        if (fqClassName !\u003d null) {\n            log(lineNo, colNo, \"instantiation.avoid\", fqClassName);\n        }\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/IllegalInstantiationCheck.java"
    }
  }
}