{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JavaNCSSCheck.java",
  "functionName": "isCountable",
  "functionId": "isCountable___ast-DetailAST",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
  "functionStartLine": 359,
  "functionEndLine": 373,
  "numCommitsSeen": 72,
  "timeTaken": 1594,
  "changeHistory": [
    "4d6e2376db89b69167de867bfc28f8d8624a6b78",
    "4c078ba710068498ca513ce115993e30dab4562a",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "35d1673788bbbac8263fdb69275dc6a63b095a24",
    "36c152edea29cb79e3130742098434a415e6eee4"
  ],
  "changeHistoryShort": {
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": "Ybodychange",
    "4c078ba710068498ca513ce115993e30dab4562a": "Ymodifierchange",
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "35d1673788bbbac8263fdb69275dc6a63b095a24": "Ybodychange",
    "36c152edea29cb79e3130742098434a415e6eee4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4d6e2376db89b69167de867bfc28f8d8624a6b78": {
      "type": "Ybodychange",
      "commitMessage": "Move constants to left side of comparison. #1555\n\nFixes `ConstantOnLHSOfComparison` inspection violations.\n\nDescription:\n\u003eReports on comparison operations with constant values on their left-hand side. Some coding conventions specify that constants should be on the right-hand side of comparisons.\n",
      "commitDate": "08/08/15 6:46 PM",
      "commitName": "4d6e2376db89b69167de867bfc28f8d8624a6b78",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "07/08/15 9:38 PM",
      "commitNameOld": "f1e80e4ecae727087ca135dfd02f72e2d6213efb",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n     private static boolean isCountable(DetailAST ast) {\n         boolean countable \u003d true;\n \n         final int tokenType \u003d ast.getType();\n \n         //check if an expression is countable\n-        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n+        if (tokenType \u003d\u003d TokenTypes.EXPR) {\n             countable \u003d isExpressionCountable(ast);\n         }\n         //check if an variable definition is countable\n-        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n+        else if (tokenType \u003d\u003d TokenTypes.VARIABLE_DEF) {\n             countable \u003d isVariableDefCountable(ast);\n         }\n         return countable;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCountable(DetailAST ast) {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d ast.getType();\n\n        //check if an expression is countable\n        if (tokenType \u003d\u003d TokenTypes.EXPR) {\n            countable \u003d isExpressionCountable(ast);\n        }\n        //check if an variable definition is countable\n        else if (tokenType \u003d\u003d TokenTypes.VARIABLE_DEF) {\n            countable \u003d isVariableDefCountable(ast);\n        }\n        return countable;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
      "extendedDetails": {}
    },
    "4c078ba710068498ca513ce115993e30dab4562a": {
      "type": "Ymodifierchange",
      "commitMessage": "Make \"private\" methods \"static\" where possible. #46\n\nSonarQube rule: [\"private\" methods that don\u0027t access instance data should be \"static\"](http://nemo.sonarqube.org/coding_rules#rule_key\u003dsquid%3AS2325).\n\nRationale: private methods that don\u0027t access instance data can be static to prevent any misunderstanding about the contract of the method.\n",
      "commitDate": "17/07/15 9:51 PM",
      "commitName": "4c078ba710068498ca513ce115993e30dab4562a",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "17/05/15 4:47 AM",
      "commitNameOld": "0f58857d73933c7b6b7e62f0c7c16ad7af51556f",
      "commitAuthorOld": "Michal Kordas",
      "daysBetweenCommits": 61.71,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n-    private boolean isCountable(DetailAST ast) {\n+    private static boolean isCountable(DetailAST ast) {\n         boolean countable \u003d true;\n \n         final int tokenType \u003d ast.getType();\n \n         //check if an expression is countable\n         if (TokenTypes.EXPR \u003d\u003d tokenType) {\n             countable \u003d isExpressionCountable(ast);\n         }\n         //check if an variable definition is countable\n         else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n             countable \u003d isVariableDefCountable(ast);\n         }\n         return countable;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private static boolean isCountable(DetailAST ast) {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d ast.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(ast);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(ast);\n        }\n        return countable;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, static]"
      }
    },
    "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, metrics, #512\n",
      "commitDate": "19/01/15 6:27 AM",
      "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean isCountable(DetailAST aAST)\n+    private boolean isCountable(DetailAST ast)\n     {\n         boolean countable \u003d true;\n \n-        final int tokenType \u003d aAST.getType();\n+        final int tokenType \u003d ast.getType();\n \n         //check if an expression is countable\n         if (TokenTypes.EXPR \u003d\u003d tokenType) {\n-            countable \u003d isExpressionCountable(aAST);\n+            countable \u003d isExpressionCountable(ast);\n         }\n         //check if an variable definition is countable\n         else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n-            countable \u003d isVariableDefCountable(aAST);\n+            countable \u003d isVariableDefCountable(ast);\n         }\n         return countable;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isCountable(DetailAST ast)\n    {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d ast.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(ast);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(ast);\n        }\n        return countable;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
          "extendedDetails": {
            "oldValue": "[aAST-DetailAST]",
            "newValue": "[ast-DetailAST]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, metrics, #512\n",
          "commitDate": "19/01/15 6:27 AM",
          "commitName": "1d6bf23ccda5197dfdd11d9dc2f653128e6b4d82",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,16 @@\n-    private boolean isCountable(DetailAST aAST)\n+    private boolean isCountable(DetailAST ast)\n     {\n         boolean countable \u003d true;\n \n-        final int tokenType \u003d aAST.getType();\n+        final int tokenType \u003d ast.getType();\n \n         //check if an expression is countable\n         if (TokenTypes.EXPR \u003d\u003d tokenType) {\n-            countable \u003d isExpressionCountable(aAST);\n+            countable \u003d isExpressionCountable(ast);\n         }\n         //check if an variable definition is countable\n         else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n-            countable \u003d isVariableDefCountable(aAST);\n+            countable \u003d isVariableDefCountable(ast);\n         }\n         return countable;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private boolean isCountable(DetailAST ast)\n    {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d ast.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(ast);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(ast);\n        }\n        return countable;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private boolean isCountable(DetailAST aAST)\n    {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d aAST.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(aAST);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(aAST);\n        }\n        return countable;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java"
      }
    },
    "35d1673788bbbac8263fdb69275dc6a63b095a24": {
      "type": "Ybodychange",
      "commitMessage": "Making local variables final where possible.\n",
      "commitDate": "06/07/06 8:44 PM",
      "commitName": "35d1673788bbbac8263fdb69275dc6a63b095a24",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "06/07/06 8:26 PM",
      "commitNameOld": "c2d3932843e70e4bb5df7161800aca248f9af778",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n     private boolean isCountable(DetailAST aAST)\n     {\n         boolean countable \u003d true;\n \n-        int tokenType \u003d aAST.getType();\n+        final int tokenType \u003d aAST.getType();\n \n         //check if an expression is countable\n         if (TokenTypes.EXPR \u003d\u003d tokenType) {\n             countable \u003d isExpressionCountable(aAST);\n         }\n         //check if an variable definition is countable\n         else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n             countable \u003d isVariableDefCountable(aAST);\n         }\n         return countable;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCountable(DetailAST aAST)\n    {\n        boolean countable \u003d true;\n\n        final int tokenType \u003d aAST.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(aAST);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(aAST);\n        }\n        return countable;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java",
      "extendedDetails": {}
    },
    "36c152edea29cb79e3130742098434a415e6eee4": {
      "type": "Yintroduced",
      "commitMessage": "Added check for the ncss metric.\n",
      "commitDate": "25/04/04 1:19 AM",
      "commitName": "36c152edea29cb79e3130742098434a415e6eee4",
      "commitAuthor": "Oleg Sukhodolsky",
      "diff": "@@ -0,0 +1,16 @@\n+    private boolean isCountable(DetailAST aAST)\n+    {\n+        boolean countable \u003d true;\n+\n+        int tokenType \u003d aAST.getType();\n+\n+        //check if an expression is countable\n+        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n+            countable \u003d isExpressionCountable(aAST);\n+        }\n+        //check if an variable definition is countable\n+        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n+            countable \u003d isVariableDefCountable(aAST);\n+        }\n+        return countable;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean isCountable(DetailAST aAST)\n    {\n        boolean countable \u003d true;\n\n        int tokenType \u003d aAST.getType();\n\n        //check if an expression is countable\n        if (TokenTypes.EXPR \u003d\u003d tokenType) {\n            countable \u003d isExpressionCountable(aAST);\n        }\n        //check if an variable definition is countable\n        else if (TokenTypes.VARIABLE_DEF \u003d\u003d tokenType) {\n            countable \u003d isVariableDefCountable(aAST);\n        }\n        return countable;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/metrics/JavaNCSSCheck.java"
    }
  }
}