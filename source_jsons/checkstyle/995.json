{
  "origin": "codeshovel",
  "repositoryName": "checkstyle",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/checkstyle/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileLengthCheck.java",
  "functionName": "setMax",
  "functionId": "setMax___length-int",
  "sourceFilePath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
  "functionStartLine": 91,
  "functionEndLine": 93,
  "numCommitsSeen": 58,
  "timeTaken": 1272,
  "changeHistory": [
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d",
    "ec6582beb1c026f1c3a9477d318d723e1caacb4a",
    "e20d45697c937fbb8ae3eb3b43bffb43e211237f",
    "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
    "4b209708c6823dabedb3ba74bbfa92fe638f11be"
  ],
  "changeHistoryShort": {
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": "Ybodychange",
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": "Ymultichange(Yparameterchange,Ybodychange)",
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": "Yfilerename",
    "ec6582beb1c026f1c3a9477d318d723e1caacb4a": "Yfilerename",
    "e20d45697c937fbb8ae3eb3b43bffb43e211237f": "Ymultichange(Yparameterchange,Ybodychange)",
    "a7c5f3314115c62a419bb3d0977ac26d12bcbb96": "Ymultichange(Yparameterchange,Ybodychange)",
    "4b209708c6823dabedb3ba74bbfa92fe638f11be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0": {
      "type": "Ybodychange",
      "commitMessage": "Fix suspicious getters and setters. #1555\n\nFixes `SuspiciousGetterSetter` inspection violations.\n\nDescription:\n\u003eReports suspicious getter or setter methods. A getter or setter is suspicious if it accesses a different field than would be expected by its name.\n",
      "commitDate": "25/08/15 3:34 AM",
      "commitName": "0aec69c702a43a0219a7cc1e3d0c2a21d8d871f0",
      "commitAuthor": "Michal Kordas",
      "commitDateOld": "18/08/15 1:25 AM",
      "commitNameOld": "54ccca18635a4aeea90da86d30590df498f76b08",
      "commitAuthorOld": "Baratali Izmailov",
      "daysBetweenCommits": 7.09,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n     public void setMax(int length) {\n-        maxFileLength \u003d length;\n+        max \u003d length;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMax(int length) {\n        max \u003d length;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
      "extendedDetails": {}
    },
    "3fec4a92e39afc5b68b03c5fd023cb8d13408385": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Prefixes, sizes, #512\n",
      "commitDate": "19/01/15 6:21 AM",
      "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
      "commitAuthor": "alexkravin",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    public void setMax(int aLength)\n+    public void setMax(int length)\n     {\n-        mMaxFileLength \u003d aLength;\n+        maxFileLength \u003d length;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(int length)\n    {\n        maxFileLength \u003d length;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
          "extendedDetails": {
            "oldValue": "[aLength-int]",
            "newValue": "[length-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Prefixes, sizes, #512\n",
          "commitDate": "19/01/15 6:21 AM",
          "commitName": "3fec4a92e39afc5b68b03c5fd023cb8d13408385",
          "commitAuthor": "alexkravin",
          "commitDateOld": "09/01/15 8:44 AM",
          "commitNameOld": "dcb3029c008907edf6aa4b59a51349f0ca94f54b",
          "commitAuthorOld": "alexkravin",
          "daysBetweenCommits": 9.9,
          "commitsBetweenForRepo": 19,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-    public void setMax(int aLength)\n+    public void setMax(int length)\n     {\n-        mMaxFileLength \u003d aLength;\n+        maxFileLength \u003d length;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(int length)\n    {\n        maxFileLength \u003d length;\n    }",
          "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "f1efb27670a93690577f1bae17fc9dcbd88a795d": {
      "type": "Yfilerename",
      "commitMessage": "moving to standard directory layout\n",
      "commitDate": "04/03/14 9:18 AM",
      "commitName": "f1efb27670a93690577f1bae17fc9dcbd88a795d",
      "commitAuthor": "Ivan Sopov",
      "commitDateOld": "26/02/14 10:35 PM",
      "commitNameOld": "1cdaeaaa4fbf02a7388f1fcbea1c86ef0ea32fed",
      "commitAuthorOld": "Andrew Gaul",
      "daysBetweenCommits": 5.45,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void setMax(int aLength)\n    {\n        mMaxFileLength \u003d aLength;\n    }",
      "path": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
        "newPath": "src/main/java/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java"
      }
    },
    "ec6582beb1c026f1c3a9477d318d723e1caacb4a": {
      "type": "Yfilerename",
      "commitMessage": "Refactored the Sizes checks\n",
      "commitDate": "04/06/03 5:23 AM",
      "commitName": "ec6582beb1c026f1c3a9477d318d723e1caacb4a",
      "commitAuthor": "Oliver Burn",
      "commitDateOld": "04/06/03 4:55 AM",
      "commitNameOld": "2e8126e99047befc39560342981b0b8e7cabea21",
      "commitAuthorOld": "Oliver Burn",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void setMax(int aLength)\n    {\n        mMaxFileLength \u003d aLength;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java",
      "extendedDetails": {
        "oldPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java",
        "newPath": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/sizes/FileLengthCheck.java"
      }
    },
    "e20d45697c937fbb8ae3eb3b43bffb43e211237f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "finally managed to tell beanutils what I want, checks now have their \u0027natural\u0027 api\n",
      "commitDate": "06/10/02 6:14 AM",
      "commitName": "e20d45697c937fbb8ae3eb3b43bffb43e211237f",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "finally managed to tell beanutils what I want, checks now have their \u0027natural\u0027 api\n",
          "commitDate": "06/10/02 6:14 AM",
          "commitName": "e20d45697c937fbb8ae3eb3b43bffb43e211237f",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "29/09/02 5:58 AM",
          "commitNameOld": "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 7.01,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,4 @@\n-    public void setMax(String aLength)\n+    public void setMax(int aLength)\n     {\n-        try {\n-            mMaxFileLength \u003d Integer.parseInt(aLength);\n-        }\n-        catch (NumberFormatException ex) {\n-            throw new ConversionException(\"Can\u0027t parse \u0027\"\n-                    + aLength + \"\u0027 as maximal file length\", ex);\n-        }\n+        mMaxFileLength \u003d aLength;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(int aLength)\n    {\n        mMaxFileLength \u003d aLength;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java",
          "extendedDetails": {
            "oldValue": "[aLength-String]",
            "newValue": "[aLength-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "finally managed to tell beanutils what I want, checks now have their \u0027natural\u0027 api\n",
          "commitDate": "06/10/02 6:14 AM",
          "commitName": "e20d45697c937fbb8ae3eb3b43bffb43e211237f",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "29/09/02 5:58 AM",
          "commitNameOld": "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 7.01,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,4 @@\n-    public void setMax(String aLength)\n+    public void setMax(int aLength)\n     {\n-        try {\n-            mMaxFileLength \u003d Integer.parseInt(aLength);\n-        }\n-        catch (NumberFormatException ex) {\n-            throw new ConversionException(\"Can\u0027t parse \u0027\"\n-                    + aLength + \"\u0027 as maximal file length\", ex);\n-        }\n+        mMaxFileLength \u003d aLength;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(int aLength)\n    {\n        mMaxFileLength \u003d aLength;\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "a7c5f3314115c62a419bb3d0977ac26d12bcbb96": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Added test for FileLengthCheck\n",
      "commitDate": "29/09/02 5:58 AM",
      "commitName": "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
      "commitAuthor": "Lars Kühne",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Added test for FileLengthCheck\n",
          "commitDate": "29/09/02 5:58 AM",
          "commitName": "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "29/09/02 2:37 AM",
          "commitNameOld": "031bc6f277b7b3f7160b2877db8005a79d5a3371",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,10 @@\n-    public void setMax(int aLength)\n+    public void setMax(String aLength)\n     {\n-        mMaxFileLength \u003d aLength;\n+        try {\n+            mMaxFileLength \u003d Integer.parseInt(aLength);\n+        }\n+        catch (NumberFormatException ex) {\n+            throw new ConversionException(\"Can\u0027t parse \u0027\"\n+                    + aLength + \"\u0027 as maximal file length\", ex);\n+        }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(String aLength)\n    {\n        try {\n            mMaxFileLength \u003d Integer.parseInt(aLength);\n        }\n        catch (NumberFormatException ex) {\n            throw new ConversionException(\"Can\u0027t parse \u0027\"\n                    + aLength + \"\u0027 as maximal file length\", ex);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java",
          "extendedDetails": {
            "oldValue": "[aLength-int]",
            "newValue": "[aLength-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Added test for FileLengthCheck\n",
          "commitDate": "29/09/02 5:58 AM",
          "commitName": "a7c5f3314115c62a419bb3d0977ac26d12bcbb96",
          "commitAuthor": "Lars Kühne",
          "commitDateOld": "29/09/02 2:37 AM",
          "commitNameOld": "031bc6f277b7b3f7160b2877db8005a79d5a3371",
          "commitAuthorOld": "Lars Kühne",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,10 @@\n-    public void setMax(int aLength)\n+    public void setMax(String aLength)\n     {\n-        mMaxFileLength \u003d aLength;\n+        try {\n+            mMaxFileLength \u003d Integer.parseInt(aLength);\n+        }\n+        catch (NumberFormatException ex) {\n+            throw new ConversionException(\"Can\u0027t parse \u0027\"\n+                    + aLength + \"\u0027 as maximal file length\", ex);\n+        }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public void setMax(String aLength)\n    {\n        try {\n            mMaxFileLength \u003d Integer.parseInt(aLength);\n        }\n        catch (NumberFormatException ex) {\n            throw new ConversionException(\"Can\u0027t parse \u0027\"\n                    + aLength + \"\u0027 as maximal file length\", ex);\n        }\n    }",
          "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java",
          "extendedDetails": {}
        }
      ]
    },
    "4b209708c6823dabedb3ba74bbfa92fe638f11be": {
      "type": "Yintroduced",
      "commitMessage": "ported FileLengthCheck and TabCharacterCheck, tests still missing\n",
      "commitDate": "28/09/02 1:55 PM",
      "commitName": "4b209708c6823dabedb3ba74bbfa92fe638f11be",
      "commitAuthor": "Lars Kühne",
      "diff": "@@ -0,0 +1,4 @@\n+    public void setMax(int aLength)\n+    {\n+        mMaxFileLength \u003d aLength;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void setMax(int aLength)\n    {\n        mMaxFileLength \u003d aLength;\n    }",
      "path": "src/checkstyle/com/puppycrawl/tools/checkstyle/checks/FileLengthCheck.java"
    }
  }
}