{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageCorruptionDetector.java",
  "functionName": "addCorruptedParent",
  "functionId": "addCorruptedParent___id-long__numOfCorruption-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java",
  "functionStartLine": 250,
  "functionEndLine": 261,
  "numCommitsSeen": 1,
  "timeTaken": 795,
  "changeHistory": [
    "fb10803dfa67394650072bdea327296f8ad2a744"
  ],
  "changeHistoryShort": {
    "fb10803dfa67394650072bdea327296f8ad2a744": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb10803dfa67394650072bdea327296f8ad2a744": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13818. Extend OIV to detect FSImage corruption. Contributed by Adam Antal.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "03/12/18 10:34 AM",
      "commitName": "fb10803dfa67394650072bdea327296f8ad2a744",
      "commitAuthor": "Adam Antal",
      "diff": "@@ -0,0 +1,12 @@\n+  private void addCorruptedParent(long id, int numOfCorruption) {\n+    if (!corruptionsMap.containsKey(id)) {\n+      PBImageCorruption c \u003d new PBImageCorruption(id, true, false,\n+          numOfCorruption);\n+      corruptionsMap.put(id, c);\n+    } else {\n+      PBImageCorruption c \u003d corruptionsMap.get(id);\n+      c.addMissingChildCorruption();\n+      c.setNumberOfCorruption(numOfCorruption);\n+      corruptionsMap.put(id, c);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addCorruptedParent(long id, int numOfCorruption) {\n    if (!corruptionsMap.containsKey(id)) {\n      PBImageCorruption c \u003d new PBImageCorruption(id, true, false,\n          numOfCorruption);\n      corruptionsMap.put(id, c);\n    } else {\n      PBImageCorruption c \u003d corruptionsMap.get(id);\n      c.addMissingChildCorruption();\n      c.setNumberOfCorruption(numOfCorruption);\n      corruptionsMap.put(id, c);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageCorruptionDetector.java"
    }
  }
}