{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockPlacementPolicyWithUpgradeDomain.java",
  "functionName": "isMovableBasedOnUpgradeDomain",
  "functionId": "isMovableBasedOnUpgradeDomain___all-Collection__T____source-T__target-T",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyWithUpgradeDomain.java",
  "functionStartLine": 287,
  "functionEndLine": 301,
  "numCommitsSeen": 4,
  "timeTaken": 1364,
  "changeHistory": [
    "ec414600ede8e305c584818565b50e055ea5d2b5"
  ],
  "changeHistoryShort": {
    "ec414600ede8e305c584818565b50e055ea5d2b5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ec414600ede8e305c584818565b50e055ea5d2b5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9007. Fix HDFS Balancer to honor upgrade domain policy. (Ming Ma via lei)\n",
      "commitDate": "04/11/15 10:22 AM",
      "commitName": "ec414600ede8e305c584818565b50e055ea5d2b5",
      "commitAuthor": "Lei Xu",
      "diff": "@@ -0,0 +1,15 @@\n+  private \u003cT\u003e boolean isMovableBasedOnUpgradeDomain(Collection\u003cT\u003e all,\n+      T source, T target) {\n+    Map\u003cString, List\u003cT\u003e\u003e udMap \u003d getUpgradeDomainMap(all);\n+    // shareUDSet includes datanodes that share same upgrade\n+    // domain with another datanode.\n+    List\u003cT\u003e shareUDSet \u003d getShareUDSet(udMap);\n+    // check if removing source reduces the number of upgrade domains\n+    if (notReduceNumOfGroups(shareUDSet, source, target)) {\n+      return true;\n+    } else if (udMap.size() \u003e upgradeDomainFactor) {\n+      return true; // existing number of upgrade domain exceeds the limit.\n+    } else {\n+      return false; // removing source reduces the number of UDs.\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT\u003e boolean isMovableBasedOnUpgradeDomain(Collection\u003cT\u003e all,\n      T source, T target) {\n    Map\u003cString, List\u003cT\u003e\u003e udMap \u003d getUpgradeDomainMap(all);\n    // shareUDSet includes datanodes that share same upgrade\n    // domain with another datanode.\n    List\u003cT\u003e shareUDSet \u003d getShareUDSet(udMap);\n    // check if removing source reduces the number of upgrade domains\n    if (notReduceNumOfGroups(shareUDSet, source, target)) {\n      return true;\n    } else if (udMap.size() \u003e upgradeDomainFactor) {\n      return true; // existing number of upgrade domain exceeds the limit.\n    } else {\n      return false; // removing source reduces the number of UDs.\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockPlacementPolicyWithUpgradeDomain.java"
    }
  }
}