{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KDiag.java",
  "functionName": "validateHadoopTokenFiles",
  "functionId": "validateHadoopTokenFiles___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java",
  "functionStartLine": 519,
  "functionEndLine": 551,
  "numCommitsSeen": 11,
  "timeTaken": 849,
  "changeHistory": [
    "abb9fa7fc69ec7b25f1c44e17c4c7dd17f5de16a"
  ],
  "changeHistoryShort": {
    "abb9fa7fc69ec7b25f1c44e17c4c7dd17f5de16a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "abb9fa7fc69ec7b25f1c44e17c4c7dd17f5de16a": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13018. Make Kdiag check whether hadoop.token.files points to existent and valid files. Contributed by Ravi Prakash\n",
      "commitDate": "24/11/16 8:41 AM",
      "commitName": "abb9fa7fc69ec7b25f1c44e17c4c7dd17f5de16a",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,33 @@\n+  private void validateHadoopTokenFiles(Configuration conf)\n+    throws ClassNotFoundException, KerberosDiagsFailure, NoSuchMethodException,\n+    SecurityException {\n+    title(\"Locating Hadoop token files\");\n+\n+    String tokenFileLocation \u003d System.getProperty(HADOOP_TOKEN_FILES);\n+    if(tokenFileLocation !\u003d null) {\n+      println(\"Found \" + HADOOP_TOKEN_FILES + \" in system properties : \"\n+          + tokenFileLocation);\n+    }\n+\n+    if(conf.get(HADOOP_TOKEN_FILES) !\u003d null) {\n+      println(\"Found \" + HADOOP_TOKEN_FILES + \" in hadoop configuration : \"\n+          + conf.get(HADOOP_TOKEN_FILES));\n+      if(System.getProperty(HADOOP_TOKEN_FILES) !\u003d null) {\n+        println(HADOOP_TOKEN_FILES + \" in the system properties overrides the\"\n+            + \" one specified in hadoop configuration\");\n+      } else {\n+        tokenFileLocation \u003d conf.get(HADOOP_TOKEN_FILES);\n+      }\n+    }\n+\n+    if (tokenFileLocation !\u003d null) {\n+      for (String tokenFileName:\n+          StringUtils.getTrimmedStrings(tokenFileLocation)) {\n+        if (tokenFileName.length() \u003e 0) {\n+          File tokenFile \u003d new File(tokenFileName);\n+          verifyFileIsValid(tokenFile, CAT_TOKEN, \"token\");\n+          verify(tokenFile, conf, CAT_TOKEN, \"token\");\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateHadoopTokenFiles(Configuration conf)\n    throws ClassNotFoundException, KerberosDiagsFailure, NoSuchMethodException,\n    SecurityException {\n    title(\"Locating Hadoop token files\");\n\n    String tokenFileLocation \u003d System.getProperty(HADOOP_TOKEN_FILES);\n    if(tokenFileLocation !\u003d null) {\n      println(\"Found \" + HADOOP_TOKEN_FILES + \" in system properties : \"\n          + tokenFileLocation);\n    }\n\n    if(conf.get(HADOOP_TOKEN_FILES) !\u003d null) {\n      println(\"Found \" + HADOOP_TOKEN_FILES + \" in hadoop configuration : \"\n          + conf.get(HADOOP_TOKEN_FILES));\n      if(System.getProperty(HADOOP_TOKEN_FILES) !\u003d null) {\n        println(HADOOP_TOKEN_FILES + \" in the system properties overrides the\"\n            + \" one specified in hadoop configuration\");\n      } else {\n        tokenFileLocation \u003d conf.get(HADOOP_TOKEN_FILES);\n      }\n    }\n\n    if (tokenFileLocation !\u003d null) {\n      for (String tokenFileName:\n          StringUtils.getTrimmedStrings(tokenFileLocation)) {\n        if (tokenFileName.length() \u003e 0) {\n          File tokenFile \u003d new File(tokenFileName);\n          verifyFileIsValid(tokenFile, CAT_TOKEN, \"token\");\n          verify(tokenFile, conf, CAT_TOKEN, \"token\");\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/KDiag.java"
    }
  }
}