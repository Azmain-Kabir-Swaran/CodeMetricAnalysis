{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "XMLParserMapper.java",
  "functionName": "map",
  "functionId": "map___lineNum-LongWritable__line-Text__context-Mapper__LongWritable,Text,IntWritable,BlockInfo__.Context",
  "sourceFilePath": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java",
  "functionStartLine": 65,
  "functionEndLine": 80,
  "numCommitsSeen": 1,
  "timeTaken": 338,
  "changeHistory": [
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91"
  ],
  "changeHistoryShort": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ab0b180ddb5d0775a2452d5eeb7badd252aadb91": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12345 Add Dynamometer to hadoop-tools, a tool for scale testing the HDFS NameNode with real metadata and workloads. Contributed by Erik Krogen.\n",
      "commitDate": "25/06/19 8:07 AM",
      "commitName": "ab0b180ddb5d0775a2452d5eeb7badd252aadb91",
      "commitAuthor": "Erik Krogen",
      "diff": "@@ -0,0 +1,16 @@\n+  public void map(LongWritable lineNum, Text line,\n+      Mapper\u003cLongWritable, Text, IntWritable, BlockInfo\u003e.Context context)\n+      throws IOException, InterruptedException {\n+    List\u003cBlockInfo\u003e blockInfos \u003d parser.parseLine(line.toString());\n+    for (BlockInfo blockInfo : blockInfos) {\n+      for (short i \u003d 0; i \u003c blockInfo.getReplication(); i++) {\n+        context.write(new IntWritable((blockIndex + i) % numDataNodes),\n+            blockInfo);\n+      }\n+\n+      blockIndex++;\n+      if (blockIndex % 1000000 \u003d\u003d 0) {\n+        LOG.info(\"Processed \" + blockIndex + \" blocks\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void map(LongWritable lineNum, Text line,\n      Mapper\u003cLongWritable, Text, IntWritable, BlockInfo\u003e.Context context)\n      throws IOException, InterruptedException {\n    List\u003cBlockInfo\u003e blockInfos \u003d parser.parseLine(line.toString());\n    for (BlockInfo blockInfo : blockInfos) {\n      for (short i \u003d 0; i \u003c blockInfo.getReplication(); i++) {\n        context.write(new IntWritable((blockIndex + i) % numDataNodes),\n            blockInfo);\n      }\n\n      blockIndex++;\n      if (blockIndex % 1000000 \u003d\u003d 0) {\n        LOG.info(\"Processed \" + blockIndex + \" blocks\");\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-dynamometer/hadoop-dynamometer-blockgen/src/main/java/org/apache/hadoop/tools/dynamometer/blockgenerator/XMLParserMapper.java"
    }
  }
}