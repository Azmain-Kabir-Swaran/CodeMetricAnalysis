{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComponentInstance.java",
  "functionName": "transition",
  "functionId": "transition___instance-ComponentInstance__event-ComponentInstanceEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
  "functionStartLine": 628,
  "functionEndLine": 655,
  "numCommitsSeen": 32,
  "timeTaken": 1683,
  "changeHistory": [
    "913f87dada27776c539dfb352400ecf8d40e7943"
  ],
  "changeHistoryShort": {
    "913f87dada27776c539dfb352400ecf8d40e7943": "Yintroduced"
  },
  "changeHistoryDetails": {
    "913f87dada27776c539dfb352400ecf8d40e7943": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8665.  Added Yarn service cancel upgrade option.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/09/18 11:51 AM",
      "commitName": "913f87dada27776c539dfb352400ecf8d40e7943",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,28 @@\n+    public ComponentInstanceState transition(ComponentInstance instance,\n+        ComponentInstanceEvent event) {\n+      if (instance.upgradeInProgress.compareAndSet(false, true)) {\n+\n+        Component.UpgradeStatus cancelStatus \u003d instance.component\n+            .getCancelUpgradeStatus();\n+\n+        if (instance.getServiceVersion().equals(\n+            cancelStatus.getTargetVersion())) {\n+          // previous upgrade didn\u0027t happen so just go back to READY\n+          LOG.info(\"{} nothing to cancel\", event.getContainerId());\n+          cancelStatus.decContainersThatNeedUpgrade();\n+          instance.setContainerState(ContainerState.READY);\n+          ComponentEvent checkState \u003d new ComponentEvent(\n+              instance.component.getName(), ComponentEventType.CHECK_STABLE);\n+          instance.scheduler.getDispatcher().getEventHandler()\n+              .handle(checkState);\n+          return ComponentInstanceState.READY;\n+        } else {\n+          instance.component.decContainersReady(false);\n+          instance.cancelUpgrade();\n+        }\n+      } else {\n+        LOG.info(\"{} pending cancellation\", event.getContainerId());\n+        instance.pendingCancelUpgrade \u003d true;\n+      }\n+      return ComponentInstanceState.CANCEL_UPGRADING;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public ComponentInstanceState transition(ComponentInstance instance,\n        ComponentInstanceEvent event) {\n      if (instance.upgradeInProgress.compareAndSet(false, true)) {\n\n        Component.UpgradeStatus cancelStatus \u003d instance.component\n            .getCancelUpgradeStatus();\n\n        if (instance.getServiceVersion().equals(\n            cancelStatus.getTargetVersion())) {\n          // previous upgrade didn\u0027t happen so just go back to READY\n          LOG.info(\"{} nothing to cancel\", event.getContainerId());\n          cancelStatus.decContainersThatNeedUpgrade();\n          instance.setContainerState(ContainerState.READY);\n          ComponentEvent checkState \u003d new ComponentEvent(\n              instance.component.getName(), ComponentEventType.CHECK_STABLE);\n          instance.scheduler.getDispatcher().getEventHandler()\n              .handle(checkState);\n          return ComponentInstanceState.READY;\n        } else {\n          instance.component.decContainersReady(false);\n          instance.cancelUpgrade();\n        }\n      } else {\n        LOG.info(\"{} pending cancellation\", event.getContainerId());\n        instance.pendingCancelUpgrade \u003d true;\n      }\n      return ComponentInstanceState.CANCEL_UPGRADING;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java"
    }
  }
}