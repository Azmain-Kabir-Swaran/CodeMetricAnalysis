{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StageAllocatorLowCostAligned.java",
  "functionName": "compare",
  "functionId": "compare___val1-DurationInterval__val2-DurationInterval",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/StageAllocatorLowCostAligned.java",
  "functionStartLine": 114,
  "functionEndLine": 123,
  "numCommitsSeen": 8,
  "timeTaken": 1384,
  "changeHistory": [
    "a3a615eeab8c14ccdc548311097e62a916963dc5",
    "156f24ead00436faad5d4aeef327a546392cd265"
  ],
  "changeHistoryShort": {
    "a3a615eeab8c14ccdc548311097e62a916963dc5": "Ybodychange",
    "156f24ead00436faad5d4aeef327a546392cd265": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a3a615eeab8c14ccdc548311097e62a916963dc5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4359. Update LowCost agents logic to take advantage of YARN-4358. (Jonathan Yaniv and Ishai Menache via Subru).\n",
      "commitDate": "01/05/17 4:01 PM",
      "commitName": "a3a615eeab8c14ccdc548311097e62a916963dc5",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "05/12/15 9:26 PM",
      "commitNameOld": "742632e346604fd2b263bd42367165638fcf2416",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 512.73,
      "commitsBetweenForRepo": 3348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,10 @@\n           public int compare(DurationInterval val1, DurationInterval val2) {\n \n             int cmp \u003d Double.compare(val1.getTotalCost(), val2.getTotalCost());\n             if (cmp !\u003d 0) {\n               return cmp;\n             }\n \n-            return (-1) * Long.compare(val1.getEndTime(), val2.getEndTime());\n+            return preferLeft\n+                * Long.compare(val1.getEndTime(), val2.getEndTime());\n           }\n\\ No newline at end of file\n",
      "actualSource": "          public int compare(DurationInterval val1, DurationInterval val2) {\n\n            int cmp \u003d Double.compare(val1.getTotalCost(), val2.getTotalCost());\n            if (cmp !\u003d 0) {\n              return cmp;\n            }\n\n            return preferLeft\n                * Long.compare(val1.getEndTime(), val2.getEndTime());\n          }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/StageAllocatorLowCostAligned.java",
      "extendedDetails": {}
    },
    "156f24ead00436faad5d4aeef327a546392cd265": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3656. LowCost: A Cost-Based Placement Agent for YARN Reservations. (Jonathan Yaniv and Ishai Menache via curino)\n",
      "commitDate": "25/07/15 7:39 AM",
      "commitName": "156f24ead00436faad5d4aeef327a546392cd265",
      "commitAuthor": "ccurino",
      "diff": "@@ -0,0 +1,9 @@\n+          public int compare(DurationInterval val1, DurationInterval val2) {\n+\n+            int cmp \u003d Double.compare(val1.getTotalCost(), val2.getTotalCost());\n+            if (cmp !\u003d 0) {\n+              return cmp;\n+            }\n+\n+            return (-1) * Long.compare(val1.getEndTime(), val2.getEndTime());\n+          }\n\\ No newline at end of file\n",
      "actualSource": "          public int compare(DurationInterval val1, DurationInterval val2) {\n\n            int cmp \u003d Double.compare(val1.getTotalCost(), val2.getTotalCost());\n            if (cmp !\u003d 0) {\n              return cmp;\n            }\n\n            return (-1) * Long.compare(val1.getEndTime(), val2.getEndTime());\n          }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/StageAllocatorLowCostAligned.java"
    }
  }
}