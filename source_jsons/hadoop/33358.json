{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainersMonitorImpl.java",
  "functionName": "isProcessTreeOverLimit",
  "functionId": "isProcessTreeOverLimit___containerId-String__currentMemUsage-long__curMemUsageOfAgedProcesses-long__memLimit-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
  "functionStartLine": 422,
  "functionEndLine": 442,
  "numCommitsSeen": 128,
  "timeTaken": 10217,
  "changeHistory": [
    "221089760910743eae58eb2cbd5ac86c4ee96a17",
    "cdee0a4f840868d8b8acac15e62da2ab337618c7",
    "9449519a2503c55d9eac8fd7519df28aa0760059",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "221089760910743eae58eb2cbd5ac86c4ee96a17": "Ybodychange",
    "cdee0a4f840868d8b8acac15e62da2ab337618c7": "Ymultichange(Yparameterchange,Ybodychange)",
    "9449519a2503c55d9eac8fd7519df28aa0760059": "Ymodifierchange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "221089760910743eae58eb2cbd5ac86c4ee96a17": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9592. Use Logger format in ContainersMonitorImpl. Contributed by Inigo Goiri.\n",
      "commitDate": "31/05/19 5:35 PM",
      "commitName": "221089760910743eae58eb2cbd5ac86c4ee96a17",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 77.05,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private boolean isProcessTreeOverLimit(String containerId,\n                                   long currentMemUsage,\n                                   long curMemUsageOfAgedProcesses,\n                                   long memLimit) {\n     boolean isOverLimit \u003d false;\n \n     if (currentMemUsage \u003e (2 * memLimit)) {\n-      LOG.warn(\"Process tree for container: \" + containerId\n-          + \" running over twice \" + \"the configured limit. Limit\u003d\" + memLimit\n-          + \", current usage \u003d \" + currentMemUsage);\n+      LOG.warn(\"Process tree for container: {} running over twice \"\n+          + \"the configured limit. Limit\u003d{}, current usage \u003d {}\",\n+          containerId, memLimit, currentMemUsage);\n       isOverLimit \u003d true;\n     } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n-      LOG.warn(\"Process tree for container: \" + containerId\n-          + \" has processes older than 1 \"\n-          + \"iteration running over the configured limit. Limit\u003d\" + memLimit\n-          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n+      LOG.warn(\"Process tree for container: {} has processes older than 1 \"\n+          + \"iteration running over the configured limit. \"\n+          + \"Limit\u003d{}, current usage \u003d {}\",\n+          containerId, memLimit, curMemUsageOfAgedProcesses);\n       isOverLimit \u003d true;\n     }\n \n     return isOverLimit;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long memLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * memLimit)) {\n      LOG.warn(\"Process tree for container: {} running over twice \"\n          + \"the configured limit. Limit\u003d{}, current usage \u003d {}\",\n          containerId, memLimit, currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n      LOG.warn(\"Process tree for container: {} has processes older than 1 \"\n          + \"iteration running over the configured limit. \"\n          + \"Limit\u003d{}, current usage \u003d {}\",\n          containerId, memLimit, curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "cdee0a4f840868d8b8acac15e62da2ab337618c7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8077. The vmemLimit parameter in ContainersMonitorImpl#isProcessTreeOverLimit is confusing. Contributed by Sen Zhao.\n",
      "commitDate": "28/03/18 9:05 AM",
      "commitName": "cdee0a4f840868d8b8acac15e62da2ab337618c7",
      "commitAuthor": "Miklos Szegedi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8077. The vmemLimit parameter in ContainersMonitorImpl#isProcessTreeOverLimit is confusing. Contributed by Sen Zhao.\n",
          "commitDate": "28/03/18 9:05 AM",
          "commitName": "cdee0a4f840868d8b8acac15e62da2ab337618c7",
          "commitAuthor": "Miklos Szegedi",
          "commitDateOld": "26/01/18 4:27 PM",
          "commitNameOld": "649ef7ac334e63a7c676f8e7406f59d9466eb6f2",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 60.65,
          "commitsBetweenForRepo": 540,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   private boolean isProcessTreeOverLimit(String containerId,\n                                   long currentMemUsage,\n                                   long curMemUsageOfAgedProcesses,\n-                                  long vmemLimit) {\n+                                  long memLimit) {\n     boolean isOverLimit \u003d false;\n \n-    if (currentMemUsage \u003e (2 * vmemLimit)) {\n+    if (currentMemUsage \u003e (2 * memLimit)) {\n       LOG.warn(\"Process tree for container: \" + containerId\n-          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n+          + \" running over twice \" + \"the configured limit. Limit\u003d\" + memLimit\n           + \", current usage \u003d \" + currentMemUsage);\n       isOverLimit \u003d true;\n-    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n+    } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n       LOG.warn(\"Process tree for container: \" + containerId\n           + \" has processes older than 1 \"\n-          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n+          + \"iteration running over the configured limit. Limit\u003d\" + memLimit\n           + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n       isOverLimit \u003d true;\n     }\n \n     return isOverLimit;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long memLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * memLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + memLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + memLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {
            "oldValue": "[containerId-String, currentMemUsage-long, curMemUsageOfAgedProcesses-long, vmemLimit-long]",
            "newValue": "[containerId-String, currentMemUsage-long, curMemUsageOfAgedProcesses-long, memLimit-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8077. The vmemLimit parameter in ContainersMonitorImpl#isProcessTreeOverLimit is confusing. Contributed by Sen Zhao.\n",
          "commitDate": "28/03/18 9:05 AM",
          "commitName": "cdee0a4f840868d8b8acac15e62da2ab337618c7",
          "commitAuthor": "Miklos Szegedi",
          "commitDateOld": "26/01/18 4:27 PM",
          "commitNameOld": "649ef7ac334e63a7c676f8e7406f59d9466eb6f2",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 60.65,
          "commitsBetweenForRepo": 540,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   private boolean isProcessTreeOverLimit(String containerId,\n                                   long currentMemUsage,\n                                   long curMemUsageOfAgedProcesses,\n-                                  long vmemLimit) {\n+                                  long memLimit) {\n     boolean isOverLimit \u003d false;\n \n-    if (currentMemUsage \u003e (2 * vmemLimit)) {\n+    if (currentMemUsage \u003e (2 * memLimit)) {\n       LOG.warn(\"Process tree for container: \" + containerId\n-          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n+          + \" running over twice \" + \"the configured limit. Limit\u003d\" + memLimit\n           + \", current usage \u003d \" + currentMemUsage);\n       isOverLimit \u003d true;\n-    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n+    } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n       LOG.warn(\"Process tree for container: \" + containerId\n           + \" has processes older than 1 \"\n-          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n+          + \"iteration running over the configured limit. Limit\u003d\" + memLimit\n           + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n       isOverLimit \u003d true;\n     }\n \n     return isOverLimit;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long memLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * memLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + memLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e memLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + memLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "9449519a2503c55d9eac8fd7519df28aa0760059": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
      "commitDate": "27/10/16 2:36 PM",
      "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "28/09/16 2:48 AM",
      "commitNameOld": "bc2656f09f857fdbc39da6b060cee453d2dec4dc",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 29.49,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n-  boolean isProcessTreeOverLimit(String containerId,\n+  private boolean isProcessTreeOverLimit(String containerId,\n                                   long currentMemUsage,\n                                   long curMemUsageOfAgedProcesses,\n                                   long vmemLimit) {\n     boolean isOverLimit \u003d false;\n \n     if (currentMemUsage \u003e (2 * vmemLimit)) {\n       LOG.warn(\"Process tree for container: \" + containerId\n           + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n           + \", current usage \u003d \" + currentMemUsage);\n       isOverLimit \u003d true;\n     } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n       LOG.warn(\"Process tree for container: \" + containerId\n           + \" has processes older than 1 \"\n           + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n           + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n       isOverLimit \u003d true;\n     }\n \n     return isOverLimit;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long vmemLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * vmemLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[private]"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long vmemLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * vmemLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long vmemLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * vmemLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,21 @@\n+  boolean isProcessTreeOverLimit(String containerId,\n+                                  long currentMemUsage,\n+                                  long curMemUsageOfAgedProcesses,\n+                                  long vmemLimit) {\n+    boolean isOverLimit \u003d false;\n+\n+    if (currentMemUsage \u003e (2 * vmemLimit)) {\n+      LOG.warn(\"Process tree for container: \" + containerId\n+          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n+          + \", current usage \u003d \" + currentMemUsage);\n+      isOverLimit \u003d true;\n+    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n+      LOG.warn(\"Process tree for container: \" + containerId\n+          + \" has processes older than 1 \"\n+          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n+          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n+      isOverLimit \u003d true;\n+    }\n+\n+    return isOverLimit;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean isProcessTreeOverLimit(String containerId,\n                                  long currentMemUsage,\n                                  long curMemUsageOfAgedProcesses,\n                                  long vmemLimit) {\n    boolean isOverLimit \u003d false;\n\n    if (currentMemUsage \u003e (2 * vmemLimit)) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" running over twice \" + \"the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + currentMemUsage);\n      isOverLimit \u003d true;\n    } else if (curMemUsageOfAgedProcesses \u003e vmemLimit) {\n      LOG.warn(\"Process tree for container: \" + containerId\n          + \" has processes older than 1 \"\n          + \"iteration running over the configured limit. Limit\u003d\" + vmemLimit\n          + \", current usage \u003d \" + curMemUsageOfAgedProcesses);\n      isOverLimit \u003d true;\n    }\n\n    return isOverLimit;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
    }
  }
}