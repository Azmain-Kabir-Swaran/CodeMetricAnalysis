{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "OfflineImageReconstructor.java",
  "functionName": "processDirectoryXml",
  "functionId": "processDirectoryXml___node-Node__inodeBld-INodeSection.INode.Builder",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
  "functionStartLine": 760,
  "functionEndLine": 767,
  "numCommitsSeen": 15,
  "timeTaken": 1953,
  "changeHistory": [
    "05391c1845639d4f01da8e5df966e2dc2682f2ca",
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742"
  ],
  "changeHistoryShort": {
    "05391c1845639d4f01da8e5df966e2dc2682f2ca": "Ybodychange",
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05391c1845639d4f01da8e5df966e2dc2682f2ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10506. OIV\u0027s ReverseXML processor cannot reconstruct some snapshot details. Contributed by Akira Ajisaka.\n",
      "commitDate": "25/02/17 2:38 PM",
      "commitName": "05391c1845639d4f01da8e5df966e2dc2682f2ca",
      "commitAuthor": "Wei-Chiu Chuang",
      "commitDateOld": "18/01/17 1:31 PM",
      "commitNameOld": "a2a5d7b5bca715835d92816e7b267b59f7270708",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 38.05,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,8 @@\n   private void processDirectoryXml(Node node,\n           INodeSection.INode.Builder inodeBld) throws IOException {\n     inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n     INodeSection.INodeDirectory.Builder bld \u003d\n-        INodeSection.INodeDirectory.newBuilder();\n-    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n-    if (lval !\u003d null) {\n-      bld.setModificationTime(lval);\n-    }\n-    lval \u003d node.removeChildLong(INODE_SECTION_NS_QUOTA);\n-    if (lval !\u003d null) {\n-      bld.setNsQuota(lval);\n-    }\n-    lval \u003d node.removeChildLong(INODE_SECTION_DS_QUOTA);\n-    if (lval !\u003d null) {\n-      bld.setDsQuota(lval);\n-    }\n-    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n-    if (perm !\u003d null) {\n-      bld.setPermission(permissionXmlToU64(perm));\n-    }\n-    Node acls \u003d node.removeChild(INODE_SECTION_ACLS);\n-    if (acls !\u003d null) {\n-      bld.setAcl(aclXmlToProto(acls));\n-    }\n-    Node xattrs \u003d node.removeChild(INODE_SECTION_XATTRS);\n-    if (xattrs !\u003d null) {\n-      bld.setXAttrs(xattrsXmlToProto(xattrs));\n-    }\n-    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n-        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n-    while (true) {\n-      Node typeQuota \u003d node.removeChild(INODE_SECTION_TYPE_QUOTA);\n-      if (typeQuota \u003d\u003d null) {\n-        break;\n-      }\n-      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n-          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n-      String type \u003d typeQuota.removeChildStr(INODE_SECTION_TYPE);\n-      if (type \u003d\u003d null) {\n-        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n-      }\n-      HdfsProtos.StorageTypeProto storageType \u003d\n-          HdfsProtos.StorageTypeProto.valueOf(type);\n-      if (storageType \u003d\u003d null) {\n-        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n-      }\n-      qbld.setStorageType(storageType);\n-      Long quota \u003d typeQuota.removeChildLong(INODE_SECTION_QUOTA);\n-      if (quota \u003d\u003d null) {\n-        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n-      }\n-      qbld.setQuota(quota);\n-      qf.addQuotas(qbld);\n-    }\n-    bld.setTypeQuotas(qf);\n+        createINodeDirectoryBuilder(node);\n     inodeBld.setDirectory(bld);\n     // Will check remaining keys and serialize in processINodeXml\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processDirectoryXml(Node node,\n          INodeSection.INode.Builder inodeBld) throws IOException {\n    inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n    INodeSection.INodeDirectory.Builder bld \u003d\n        createINodeDirectoryBuilder(node);\n    inodeBld.setDirectory(bld);\n    // Will check remaining keys and serialize in processINodeXml\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "10/03/16 1:41 PM",
      "commitNameOld": "bd49354c6d6387620b0de2219eab1714ec2d64f8",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 10.87,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,59 +1,59 @@\n   private void processDirectoryXml(Node node,\n           INodeSection.INode.Builder inodeBld) throws IOException {\n     inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n     INodeSection.INodeDirectory.Builder bld \u003d\n         INodeSection.INodeDirectory.newBuilder();\n-    Long lval \u003d node.removeChildLong(\"mtime\");\n+    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n     if (lval !\u003d null) {\n       bld.setModificationTime(lval);\n     }\n-    lval \u003d node.removeChildLong(\"nsquota\");\n+    lval \u003d node.removeChildLong(INODE_SECTION_NS_QUOTA);\n     if (lval !\u003d null) {\n       bld.setNsQuota(lval);\n     }\n-    lval \u003d node.removeChildLong(\"dsquota\");\n+    lval \u003d node.removeChildLong(INODE_SECTION_DS_QUOTA);\n     if (lval !\u003d null) {\n       bld.setDsQuota(lval);\n     }\n-    String perm \u003d node.removeChildStr(\"permission\");\n+    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n     if (perm !\u003d null) {\n       bld.setPermission(permissionXmlToU64(perm));\n     }\n-    Node acls \u003d node.removeChild(\"acls\");\n+    Node acls \u003d node.removeChild(INODE_SECTION_ACLS);\n     if (acls !\u003d null) {\n       bld.setAcl(aclXmlToProto(acls));\n     }\n-    Node xattrs \u003d node.removeChild(\"xattrs\");\n+    Node xattrs \u003d node.removeChild(INODE_SECTION_XATTRS);\n     if (xattrs !\u003d null) {\n       bld.setXAttrs(xattrsXmlToProto(xattrs));\n     }\n     INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n         INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n     while (true) {\n-      Node typeQuota \u003d node.removeChild(\"typeQuota\");\n+      Node typeQuota \u003d node.removeChild(INODE_SECTION_TYPE_QUOTA);\n       if (typeQuota \u003d\u003d null) {\n         break;\n       }\n       INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n           INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n-      String type \u003d typeQuota.removeChildStr(\"type\");\n+      String type \u003d typeQuota.removeChildStr(INODE_SECTION_TYPE);\n       if (type \u003d\u003d null) {\n         throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n       }\n       HdfsProtos.StorageTypeProto storageType \u003d\n           HdfsProtos.StorageTypeProto.valueOf(type);\n       if (storageType \u003d\u003d null) {\n         throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n       }\n       qbld.setStorageType(storageType);\n-      Long quota \u003d typeQuota.removeChildLong(\"quota\");\n+      Long quota \u003d typeQuota.removeChildLong(INODE_SECTION_QUOTA);\n       if (quota \u003d\u003d null) {\n         throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n       }\n       qbld.setQuota(quota);\n       qf.addQuotas(qbld);\n     }\n     bld.setTypeQuotas(qf);\n     inodeBld.setDirectory(bld);\n     // Will check remaining keys and serialize in processINodeXml\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processDirectoryXml(Node node,\n          INodeSection.INode.Builder inodeBld) throws IOException {\n    inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n    INodeSection.INodeDirectory.Builder bld \u003d\n        INodeSection.INodeDirectory.newBuilder();\n    Long lval \u003d node.removeChildLong(INODE_SECTION_MTIME);\n    if (lval !\u003d null) {\n      bld.setModificationTime(lval);\n    }\n    lval \u003d node.removeChildLong(INODE_SECTION_NS_QUOTA);\n    if (lval !\u003d null) {\n      bld.setNsQuota(lval);\n    }\n    lval \u003d node.removeChildLong(INODE_SECTION_DS_QUOTA);\n    if (lval !\u003d null) {\n      bld.setDsQuota(lval);\n    }\n    String perm \u003d node.removeChildStr(INODE_SECTION_PERMISSION);\n    if (perm !\u003d null) {\n      bld.setPermission(permissionXmlToU64(perm));\n    }\n    Node acls \u003d node.removeChild(INODE_SECTION_ACLS);\n    if (acls !\u003d null) {\n      bld.setAcl(aclXmlToProto(acls));\n    }\n    Node xattrs \u003d node.removeChild(INODE_SECTION_XATTRS);\n    if (xattrs !\u003d null) {\n      bld.setXAttrs(xattrsXmlToProto(xattrs));\n    }\n    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n    while (true) {\n      Node typeQuota \u003d node.removeChild(INODE_SECTION_TYPE_QUOTA);\n      if (typeQuota \u003d\u003d null) {\n        break;\n      }\n      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n      String type \u003d typeQuota.removeChildStr(INODE_SECTION_TYPE);\n      if (type \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n      }\n      HdfsProtos.StorageTypeProto storageType \u003d\n          HdfsProtos.StorageTypeProto.valueOf(type);\n      if (storageType \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n      }\n      qbld.setStorageType(storageType);\n      Long quota \u003d typeQuota.removeChildLong(INODE_SECTION_QUOTA);\n      if (quota \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n      }\n      qbld.setQuota(quota);\n      qf.addQuotas(qbld);\n    }\n    bld.setTypeQuotas(qf);\n    inodeBld.setDirectory(bld);\n    // Will check remaining keys and serialize in processINodeXml\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,59 @@\n+  private void processDirectoryXml(Node node,\n+          INodeSection.INode.Builder inodeBld) throws IOException {\n+    inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n+    INodeSection.INodeDirectory.Builder bld \u003d\n+        INodeSection.INodeDirectory.newBuilder();\n+    Long lval \u003d node.removeChildLong(\"mtime\");\n+    if (lval !\u003d null) {\n+      bld.setModificationTime(lval);\n+    }\n+    lval \u003d node.removeChildLong(\"nsquota\");\n+    if (lval !\u003d null) {\n+      bld.setNsQuota(lval);\n+    }\n+    lval \u003d node.removeChildLong(\"dsquota\");\n+    if (lval !\u003d null) {\n+      bld.setDsQuota(lval);\n+    }\n+    String perm \u003d node.removeChildStr(\"permission\");\n+    if (perm !\u003d null) {\n+      bld.setPermission(permissionXmlToU64(perm));\n+    }\n+    Node acls \u003d node.removeChild(\"acls\");\n+    if (acls !\u003d null) {\n+      bld.setAcl(aclXmlToProto(acls));\n+    }\n+    Node xattrs \u003d node.removeChild(\"xattrs\");\n+    if (xattrs !\u003d null) {\n+      bld.setXAttrs(xattrsXmlToProto(xattrs));\n+    }\n+    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n+        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n+    while (true) {\n+      Node typeQuota \u003d node.removeChild(\"typeQuota\");\n+      if (typeQuota \u003d\u003d null) {\n+        break;\n+      }\n+      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n+          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n+      String type \u003d typeQuota.removeChildStr(\"type\");\n+      if (type \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n+      }\n+      HdfsProtos.StorageTypeProto storageType \u003d\n+          HdfsProtos.StorageTypeProto.valueOf(type);\n+      if (storageType \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n+      }\n+      qbld.setStorageType(storageType);\n+      Long quota \u003d typeQuota.removeChildLong(\"quota\");\n+      if (quota \u003d\u003d null) {\n+        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n+      }\n+      qbld.setQuota(quota);\n+      qf.addQuotas(qbld);\n+    }\n+    bld.setTypeQuotas(qf);\n+    inodeBld.setDirectory(bld);\n+    // Will check remaining keys and serialize in processINodeXml\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processDirectoryXml(Node node,\n          INodeSection.INode.Builder inodeBld) throws IOException {\n    inodeBld.setType(INodeSection.INode.Type.DIRECTORY);\n    INodeSection.INodeDirectory.Builder bld \u003d\n        INodeSection.INodeDirectory.newBuilder();\n    Long lval \u003d node.removeChildLong(\"mtime\");\n    if (lval !\u003d null) {\n      bld.setModificationTime(lval);\n    }\n    lval \u003d node.removeChildLong(\"nsquota\");\n    if (lval !\u003d null) {\n      bld.setNsQuota(lval);\n    }\n    lval \u003d node.removeChildLong(\"dsquota\");\n    if (lval !\u003d null) {\n      bld.setDsQuota(lval);\n    }\n    String perm \u003d node.removeChildStr(\"permission\");\n    if (perm !\u003d null) {\n      bld.setPermission(permissionXmlToU64(perm));\n    }\n    Node acls \u003d node.removeChild(\"acls\");\n    if (acls !\u003d null) {\n      bld.setAcl(aclXmlToProto(acls));\n    }\n    Node xattrs \u003d node.removeChild(\"xattrs\");\n    if (xattrs !\u003d null) {\n      bld.setXAttrs(xattrsXmlToProto(xattrs));\n    }\n    INodeSection.QuotaByStorageTypeFeatureProto.Builder qf \u003d\n        INodeSection.QuotaByStorageTypeFeatureProto.newBuilder();\n    while (true) {\n      Node typeQuota \u003d node.removeChild(\"typeQuota\");\n      if (typeQuota \u003d\u003d null) {\n        break;\n      }\n      INodeSection.QuotaByStorageTypeEntryProto.Builder qbld \u003d\n          INodeSection.QuotaByStorageTypeEntryProto.newBuilder();\n      String type \u003d typeQuota.removeChildStr(\"type\");\n      if (type \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003ctype\u003e\");\n      }\n      HdfsProtos.StorageTypeProto storageType \u003d\n          HdfsProtos.StorageTypeProto.valueOf(type);\n      if (storageType \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e had unknown \u003ctype\u003e \" + type);\n      }\n      qbld.setStorageType(storageType);\n      Long quota \u003d typeQuota.removeChildLong(\"quota\");\n      if (quota \u003d\u003d null) {\n        throw new IOException(\"\u003ctypeQuota\u003e was missing \u003cquota\u003e\");\n      }\n      qbld.setQuota(quota);\n      qf.addQuotas(qbld);\n    }\n    bld.setTypeQuotas(qf);\n    inodeBld.setDirectory(bld);\n    // Will check remaining keys and serialize in processINodeXml\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/OfflineImageReconstructor.java"
    }
  }
}