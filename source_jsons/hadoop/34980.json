{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMTimelinePublisher.java",
  "functionName": "putEntity",
  "functionId": "putEntity___entity-TimelineEntity__appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
  "functionStartLine": 415,
  "functionEndLine": 435,
  "numCommitsSeen": 28,
  "timeTaken": 1930,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6": "Ybodychange",
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": "Ybodychange",
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": "Ybodychange",
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "05/02/19 12:18 AM",
      "commitNameOld": "e3ec18b0c4fb93bd00c12d90057c2b982ca8a676",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 38.63,
      "commitsBetweenForRepo": 349,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,21 @@\n   private void putEntity(TimelineEntity entity, ApplicationId appId) {\n     try {\n       if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n-            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n+        LOG.debug(\"Publishing the entity {} JSON-style content: {}\",\n+            entity, TimelineUtils.dumpTimelineRecordtoJSON(entity));\n       }\n       TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n       if (timelineClient !\u003d null) {\n         timelineClient.putEntities(entity);\n       } else {\n         LOG.error(\"Seems like client has been removed before the entity \"\n             + \"could be published for \" + entity);\n       }\n     } catch (IOException e) {\n       LOG.error(\"Error when publishing entity \" + entity);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Error when publishing entity \" + entity, e);\n-      }\n+      LOG.debug(\"Error when publishing entity {}\", entity, e);\n     } catch (YarnException e) {\n       LOG.error(\"Error when publishing entity \" + entity, e.getMessage());\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Error when publishing entity \" + entity, e);\n-      }\n+      LOG.debug(\"Error when publishing entity {}\", entity, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Publishing the entity {} JSON-style content: {}\",\n            entity, TimelineUtils.dumpTimelineRecordtoJSON(entity));\n      }\n      TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n      if (timelineClient !\u003d null) {\n        timelineClient.putEntities(entity);\n      } else {\n        LOG.error(\"Seems like client has been removed before the entity \"\n            + \"could be published for \" + entity);\n      }\n    } catch (IOException e) {\n      LOG.error(\"Error when publishing entity \" + entity);\n      LOG.debug(\"Error when publishing entity {}\", entity, e);\n    } catch (YarnException e) {\n      LOG.error(\"Error when publishing entity \" + entity, e.getMessage());\n      LOG.debug(\"Error when publishing entity {}\", entity, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "9119b3cf8f883aa2d5df534afc0c50249fed03c6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8155. Improve ATSv2 client logging in RM and NM publisher. Contributed by Abhishek Modi.\n",
      "commitDate": "14/06/18 12:08 AM",
      "commitName": "9119b3cf8f883aa2d5df534afc0c50249fed03c6",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "14/05/18 11:08 AM",
      "commitNameOld": "2d00a0c71b5dde31e2cf8fcb96d9d541d41fb879",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 30.54,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   private void putEntity(TimelineEntity entity, ApplicationId appId) {\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n             + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n       }\n       TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n       if (timelineClient !\u003d null) {\n         timelineClient.putEntities(entity);\n       } else {\n         LOG.error(\"Seems like client has been removed before the entity \"\n             + \"could be published for \" + entity);\n       }\n-    } catch (Exception e) {\n-      LOG.error(\"Error when publishing entity \" + entity, e);\n+    } catch (IOException e) {\n+      LOG.error(\"Error when publishing entity \" + entity);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Error when publishing entity \" + entity, e);\n+      }\n+    } catch (YarnException e) {\n+      LOG.error(\"Error when publishing entity \" + entity, e.getMessage());\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Error when publishing entity \" + entity, e);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n      }\n      TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n      if (timelineClient !\u003d null) {\n        timelineClient.putEntities(entity);\n      } else {\n        LOG.error(\"Seems like client has been removed before the entity \"\n            + \"could be published for \" + entity);\n      }\n    } catch (IOException e) {\n      LOG.error(\"Error when publishing entity \" + entity);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Error when publishing entity \" + entity, e);\n      }\n    } catch (YarnException e) {\n      LOG.error(\"Error when publishing entity \" + entity, e.getMessage());\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Error when publishing entity \" + entity, e);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "4fa1afdb883dab8786d2fb5c72a195dd2e87d711": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4675. Reorganize TimelineClient and TimelineClientImpl into separate classes for ATSv1.x and ATSv2. Contributed by Naganarasimha G R.\n",
      "commitDate": "16/02/17 11:41 AM",
      "commitName": "4fa1afdb883dab8786d2fb5c72a195dd2e87d711",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "06/01/17 6:41 PM",
      "commitNameOld": "a59df15757fac7f917cb96fc8fcfeb7017475e4f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 40.71,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void putEntity(TimelineEntity entity, ApplicationId appId) {\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n             + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n       }\n-      TimelineClient timelineClient \u003d getTimelineClient(appId);\n+      TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n       if (timelineClient !\u003d null) {\n         timelineClient.putEntities(entity);\n       } else {\n         LOG.error(\"Seems like client has been removed before the entity \"\n             + \"could be published for \" + entity);\n       }\n     } catch (Exception e) {\n       LOG.error(\"Error when publishing entity \" + entity, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n      }\n      TimelineV2Client timelineClient \u003d getTimelineClient(appId);\n      if (timelineClient !\u003d null) {\n        timelineClient.putEntities(entity);\n      } else {\n        LOG.error(\"Seems like client has been removed before the entity \"\n            + \"could be published for \" + entity);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error when publishing entity \" + entity, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "84c35ac6c4a76c31d9bf9c87b87ed29394564611": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4711. NM is going down with NPE\u0027s due to single thread processing of events by Timeline client (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "84c35ac6c4a76c31d9bf9c87b87ed29394564611",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "6f6cc647d6e77f6cc4c66e0534f8c73bc1612a1b",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   private void putEntity(TimelineEntity entity, ApplicationId appId) {\n     try {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n             + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n       }\n-      TimelineClient timelineClient \u003d\n-          context.getApplications().get(appId).getTimelineClient();\n-      timelineClient.putEntities(entity);\n+      TimelineClient timelineClient \u003d getTimelineClient(appId);\n+      if (timelineClient !\u003d null) {\n+        timelineClient.putEntities(entity);\n+      } else {\n+        LOG.error(\"Seems like client has been removed before the entity \"\n+            + \"could be published for \" + entity);\n+      }\n     } catch (Exception e) {\n       LOG.error(\"Error when publishing entity \" + entity, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n      }\n      TimelineClient timelineClient \u003d getTimelineClient(appId);\n      if (timelineClient !\u003d null) {\n        timelineClient.putEntities(entity);\n      } else {\n        LOG.error(\"Seems like client has been removed before the entity \"\n            + \"could be published for \" + entity);\n      }\n    } catch (Exception e) {\n      LOG.error(\"Error when publishing entity \" + entity, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java",
      "extendedDetails": {}
    },
    "477a30f536277bf95d7181bf1b2fdda52d83bf51": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3045. Implement NM writing container lifecycle events to Timeline Service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "477a30f536277bf95d7181bf1b2fdda52d83bf51",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,13 @@\n+  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n+    try {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n+            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n+      }\n+      TimelineClient timelineClient \u003d\n+          context.getApplications().get(appId).getTimelineClient();\n+      timelineClient.putEntities(entity);\n+    } catch (Exception e) {\n+      LOG.error(\"Error when publishing entity \" + entity, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void putEntity(TimelineEntity entity, ApplicationId appId) {\n    try {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Publishing the entity \" + entity + \", JSON-style content: \"\n            + TimelineUtils.dumpTimelineRecordtoJSON(entity));\n      }\n      TimelineClient timelineClient \u003d\n          context.getApplications().get(appId).getTimelineClient();\n      timelineClient.putEntities(entity);\n    } catch (Exception e) {\n      LOG.error(\"Error when publishing entity \" + entity, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/timelineservice/NMTimelinePublisher.java"
    }
  }
}