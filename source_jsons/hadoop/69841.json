{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbfsRestOperation.java",
  "functionName": "execute",
  "functionId": "execute",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
  "functionStartLine": 169,
  "functionEndLine": 196,
  "numCommitsSeen": 16,
  "timeTaken": 2694,
  "changeHistory": [
    "8f78aeb2500011e568929b585ed5b0987355f88d",
    "d1f5976c004292f35b0fc5efbc86273becc4a304",
    "82ad9b549f9ae0867699042e0f5856577919a749",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
    "f044deedbbfee0812316d587139cb828f27172e9"
  ],
  "changeHistoryShort": {
    "8f78aeb2500011e568929b585ed5b0987355f88d": "Ybodychange",
    "d1f5976c004292f35b0fc5efbc86273becc4a304": "Ybodychange",
    "82ad9b549f9ae0867699042e0f5856577919a749": "Ybodychange",
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": "Ybodychange",
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": "Ybodychange",
    "f044deedbbfee0812316d587139cb828f27172e9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f78aeb2500011e568929b585ed5b0987355f88d": {
      "type": "Ybodychange",
      "commitMessage": "Hadoop-17015. ABFS: Handling Rename and Delete idempotency \n\nContributed by Sneha Vijayarajan.",
      "commitDate": "19/05/20 12:30 PM",
      "commitName": "8f78aeb2500011e568929b585ed5b0987355f88d",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "12/05/20 11:35 AM",
      "commitNameOld": "b214bbd2d92a0c02b71d352dba85f3b87317933c",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 7.04,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   void execute() throws AzureBlobFileSystemException {\n     // see if we have latency reports from the previous requests\n     String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n     if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n       AbfsHttpHeader httpHeader \u003d\n               new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n       requestHeaders.add(httpHeader);\n     }\n \n-    int retryCount \u003d 0;\n+    retryCount \u003d 0;\n     LOG.debug(\"First execution of REST operation - {}\", operationType);\n     while (!executeHttpOperation(retryCount++)) {\n       try {\n         LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n             operationType, retryCount);\n         Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n       } catch (InterruptedException ex) {\n         Thread.currentThread().interrupt();\n       }\n     }\n \n     if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n       throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n           result.getStorageErrorMessage(), null, result);\n     }\n \n     LOG.trace(\"{} REST operation complete\", operationType);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    // see if we have latency reports from the previous requests\n    String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n    if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n      AbfsHttpHeader httpHeader \u003d\n              new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n      requestHeaders.add(httpHeader);\n    }\n\n    retryCount \u003d 0;\n    LOG.debug(\"First execution of REST operation - {}\", operationType);\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n            operationType, retryCount);\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n\n    LOG.trace(\"{} REST operation complete\", operationType);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
      "extendedDetails": {}
    },
    "d1f5976c004292f35b0fc5efbc86273becc4a304": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16699. Add verbose TRACE logging to ABFS.\n\nContributed by Sneha Vijayarajan,\n\nChange-Id: Ic616a10406e6e9f11616c9cc05d8630ebbedaf65\n",
      "commitDate": "07/01/20 10:05 AM",
      "commitName": "d1f5976c004292f35b0fc5efbc86273becc4a304",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "27/11/19 3:10 PM",
      "commitNameOld": "82ad9b549f9ae0867699042e0f5856577919a749",
      "commitAuthorOld": "Sneha Vijayarajan",
      "daysBetweenCommits": 40.79,
      "commitsBetweenForRepo": 122,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,28 @@\n   void execute() throws AzureBlobFileSystemException {\n     // see if we have latency reports from the previous requests\n     String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n     if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n       AbfsHttpHeader httpHeader \u003d\n               new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n       requestHeaders.add(httpHeader);\n     }\n \n     int retryCount \u003d 0;\n     LOG.debug(\"First execution of REST operation - {}\", operationType);\n     while (!executeHttpOperation(retryCount++)) {\n       try {\n         LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n             operationType, retryCount);\n         Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n       } catch (InterruptedException ex) {\n         Thread.currentThread().interrupt();\n       }\n     }\n \n     if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n       throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n           result.getStorageErrorMessage(), null, result);\n     }\n+\n+    LOG.trace(\"{} REST operation complete\", operationType);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    // see if we have latency reports from the previous requests\n    String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n    if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n      AbfsHttpHeader httpHeader \u003d\n              new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n      requestHeaders.add(httpHeader);\n    }\n\n    int retryCount \u003d 0;\n    LOG.debug(\"First execution of REST operation - {}\", operationType);\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n            operationType, retryCount);\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n\n    LOG.trace(\"{} REST operation complete\", operationType);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
      "extendedDetails": {}
    },
    "82ad9b549f9ae0867699042e0f5856577919a749": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16660. ABFS: Make RetryCount in ExponentialRetryPolicy Configurable.\n\nContributed by Sneha Vijayarajan.\n",
      "commitDate": "27/11/19 3:10 PM",
      "commitName": "82ad9b549f9ae0867699042e0f5856577919a749",
      "commitAuthor": "Sneha Vijayarajan",
      "commitDateOld": "19/11/19 9:00 AM",
      "commitNameOld": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthorOld": "Jeetesh Mangwani",
      "daysBetweenCommits": 8.26,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   void execute() throws AzureBlobFileSystemException {\n     // see if we have latency reports from the previous requests\n     String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n     if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n       AbfsHttpHeader httpHeader \u003d\n               new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n       requestHeaders.add(httpHeader);\n     }\n \n     int retryCount \u003d 0;\n+    LOG.debug(\"First execution of REST operation - {}\", operationType);\n     while (!executeHttpOperation(retryCount++)) {\n       try {\n+        LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n+            operationType, retryCount);\n         Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n       } catch (InterruptedException ex) {\n         Thread.currentThread().interrupt();\n       }\n     }\n \n     if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n       throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n           result.getStorageErrorMessage(), null, result);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    // see if we have latency reports from the previous requests\n    String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n    if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n      AbfsHttpHeader httpHeader \u003d\n              new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n      requestHeaders.add(httpHeader);\n    }\n\n    int retryCount \u003d 0;\n    LOG.debug(\"First execution of REST operation - {}\", operationType);\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        LOG.debug(\"Retrying REST operation {}. RetryCount \u003d {}\",\n            operationType, retryCount);\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
      "extendedDetails": {}
    },
    "b033c681e4fc3ee1a38caa807e130aee481d99d5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16612. Track Azure Blob File System client-perceived latency\n\nContributed by Jeetesh Mangwani.\n\nThis add the ability to track the end-to-end performance of ADLS Gen 2 REST APIs by measuring latency in the Hadoop ABFS driver.\nThe latency information is sent back to the ADLS Gen 2 REST API endpoints in the subsequent requests.\n",
      "commitDate": "19/11/19 9:00 AM",
      "commitName": "b033c681e4fc3ee1a38caa807e130aee481d99d5",
      "commitAuthor": "Jeetesh Mangwani",
      "commitDateOld": "28/02/19 6:22 AM",
      "commitNameOld": "65f60e56b082faf92e1cd3daee2569d8fc669c67",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 264.11,
      "commitsBetweenForRepo": 1902,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,23 @@\n   void execute() throws AzureBlobFileSystemException {\n+    // see if we have latency reports from the previous requests\n+    String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n+    if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n+      AbfsHttpHeader httpHeader \u003d\n+              new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n+      requestHeaders.add(httpHeader);\n+    }\n+\n     int retryCount \u003d 0;\n     while (!executeHttpOperation(retryCount++)) {\n       try {\n         Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n       } catch (InterruptedException ex) {\n         Thread.currentThread().interrupt();\n       }\n     }\n \n     if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n       throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n           result.getStorageErrorMessage(), null, result);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    // see if we have latency reports from the previous requests\n    String latencyHeader \u003d this.client.getAbfsPerfTracker().getClientLatency();\n    if (latencyHeader !\u003d null \u0026\u0026 !latencyHeader.isEmpty()) {\n      AbfsHttpHeader httpHeader \u003d\n              new AbfsHttpHeader(HttpHeaderConfigurations.X_MS_ABFS_CLIENT_LATENCY, latencyHeader);\n      requestHeaders.add(httpHeader);\n    }\n\n    int retryCount \u003d 0;\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
      "extendedDetails": {}
    },
    "b54b0c1b676c616aef9574e4e88ea30c314c79dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15659. Code changes for bug fix and new tests.\nContributed by Da Zhou.\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "b54b0c1b676c616aef9574e4e88ea30c314c79dc",
      "commitAuthor": "Thomas Marquardt",
      "commitDateOld": "17/09/18 12:54 PM",
      "commitNameOld": "ce03a93f78c4d97ccb48a3906fcd77ad0ac756be",
      "commitAuthorOld": "Thomas Marquardt",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   void execute() throws AzureBlobFileSystemException {\n     int retryCount \u003d 0;\n     while (!executeHttpOperation(retryCount++)) {\n       try {\n         Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n       } catch (InterruptedException ex) {\n         Thread.currentThread().interrupt();\n       }\n     }\n \n-    if (result.getStatusCode() \u003e HttpURLConnection.HTTP_BAD_REQUEST) {\n+    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n       throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n           result.getStorageErrorMessage(), null, result);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    int retryCount \u003d 0;\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e\u003d HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java",
      "extendedDetails": {}
    },
    "f044deedbbfee0812316d587139cb828f27172e9": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15407. HADOOP-15540. Support Windows Azure Storage - Blob file system \"ABFS\" in Hadoop: Core Commit.\n\nContributed by Shane Mainali, Thomas Marquardt, Zichen Sun, Georgi Chalakov, Esfandiar Manii, Amit Singh, Dana Kaban, Da Zhou, Junhua Gu, Saher Ahwal, Saurabh Pant, James Baker, Shaoyu Zhang, Lawrence Chen, Kevin Chen and Steve Loughran\n",
      "commitDate": "17/09/18 12:54 PM",
      "commitName": "f044deedbbfee0812316d587139cb828f27172e9",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,15 @@\n+  void execute() throws AzureBlobFileSystemException {\n+    int retryCount \u003d 0;\n+    while (!executeHttpOperation(retryCount++)) {\n+      try {\n+        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n+      } catch (InterruptedException ex) {\n+        Thread.currentThread().interrupt();\n+      }\n+    }\n+\n+    if (result.getStatusCode() \u003e HttpURLConnection.HTTP_BAD_REQUEST) {\n+      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n+          result.getStorageErrorMessage(), null, result);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void execute() throws AzureBlobFileSystemException {\n    int retryCount \u003d 0;\n    while (!executeHttpOperation(retryCount++)) {\n      try {\n        Thread.sleep(client.getRetryPolicy().getRetryInterval(retryCount));\n      } catch (InterruptedException ex) {\n        Thread.currentThread().interrupt();\n      }\n    }\n\n    if (result.getStatusCode() \u003e HttpURLConnection.HTTP_BAD_REQUEST) {\n      throw new AbfsRestOperationException(result.getStatusCode(), result.getStorageErrorCode(),\n          result.getStorageErrorMessage(), null, result);\n    }\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azurebfs/services/AbfsRestOperation.java"
    }
  }
}