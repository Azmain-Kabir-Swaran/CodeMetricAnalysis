{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Shell.java",
  "functionName": "getQualifiedBinInner",
  "functionId": "getQualifiedBinInner___hadoopHomeDir-File__executable-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java",
  "functionStartLine": 603,
  "functionEndLine": 632,
  "numCommitsSeen": 52,
  "timeTaken": 1435,
  "changeHistory": [
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec"
  ],
  "changeHistoryShort": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c59af2fdf8f7f53117c626a895dab7fd78cf08ec": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10775. Shell operations to fail with meaningful errors on windows if winutils.exe not found. (stevel)\n",
      "commitDate": "13/10/15 1:49 PM",
      "commitName": "c59af2fdf8f7f53117c626a895dab7fd78cf08ec",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,30 @@\n+  static File getQualifiedBinInner(File hadoopHomeDir, String executable)\n+      throws FileNotFoundException {\n+    String binDirText \u003d \"Hadoop bin directory \";\n+    File bin \u003d new File(hadoopHomeDir, \"bin\");\n+    if (!bin.exists()) {\n+      throw new FileNotFoundException(addOsText(binDirText + E_DOES_NOT_EXIST\n+          + \": \" + bin));\n+    }\n+    if (!bin.isDirectory()) {\n+      throw new FileNotFoundException(addOsText(binDirText + E_NOT_DIRECTORY\n+          + \": \" + bin));\n+    }\n+\n+    File exeFile \u003d new File(bin, executable);\n+    if (!exeFile.exists()) {\n+      throw new FileNotFoundException(\n+          addOsText(E_NO_EXECUTABLE + \": \" + exeFile));\n+    }\n+    if (!exeFile.isFile()) {\n+      throw new FileNotFoundException(\n+          addOsText(E_NOT_EXECUTABLE_FILE + \": \" + exeFile));\n+    }\n+    try {\n+      return exeFile.getCanonicalFile();\n+    } catch (IOException e) {\n+      // this isn\u0027t going to happen, because of all the upfront checks.\n+      // so if it does, it gets converted to a FNFE and rethrown\n+      throw fileNotFoundException(e.toString(), e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static File getQualifiedBinInner(File hadoopHomeDir, String executable)\n      throws FileNotFoundException {\n    String binDirText \u003d \"Hadoop bin directory \";\n    File bin \u003d new File(hadoopHomeDir, \"bin\");\n    if (!bin.exists()) {\n      throw new FileNotFoundException(addOsText(binDirText + E_DOES_NOT_EXIST\n          + \": \" + bin));\n    }\n    if (!bin.isDirectory()) {\n      throw new FileNotFoundException(addOsText(binDirText + E_NOT_DIRECTORY\n          + \": \" + bin));\n    }\n\n    File exeFile \u003d new File(bin, executable);\n    if (!exeFile.exists()) {\n      throw new FileNotFoundException(\n          addOsText(E_NO_EXECUTABLE + \": \" + exeFile));\n    }\n    if (!exeFile.isFile()) {\n      throw new FileNotFoundException(\n          addOsText(E_NOT_EXECUTABLE_FILE + \": \" + exeFile));\n    }\n    try {\n      return exeFile.getCanonicalFile();\n    } catch (IOException e) {\n      // this isn\u0027t going to happen, because of all the upfront checks.\n      // so if it does, it gets converted to a FNFE and rethrown\n      throw fileNotFoundException(e.toString(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Shell.java"
    }
  }
}