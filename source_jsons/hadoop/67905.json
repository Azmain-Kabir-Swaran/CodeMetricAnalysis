{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCpSync.java",
  "functionName": "getRenameItem",
  "functionId": "getRenameItem___diff-DiffInfo__renameDiffArray-DiffInfo[]",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
  "functionStartLine": 475,
  "functionEndLine": 494,
  "numCommitsSeen": 12,
  "timeTaken": 2047,
  "changeHistory": [
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926"
  ],
  "changeHistoryShort": {
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n     for (DiffInfo renameItem : renameDiffArray) {\n-      if (diff.source.equals(renameItem.source)) {\n+      if (diff.getSource().equals(renameItem.getSource())) {\n         // The same path string may appear in:\n         // 1. both renamed and modified snapshot diff entries.\n         // 2. both renamed and created snapshot diff entries.\n         // Case 1 is the about same file/directory, whereas case 2\n         // is about two different files/directories.\n         // We are finding case 1 here, thus we check against DiffType.MODIFY.\n         if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n           return renameItem;\n         }\n-      } else if (isParentOf(renameItem.source, diff.source)) {\n+      } else if (isParentOf(renameItem.getSource(), diff.getSource())) {\n         // If rename entry is the parent of diff entry, then both MODIFY and\n         // CREATE diff entries should be handled.\n         return renameItem;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n    for (DiffInfo renameItem : renameDiffArray) {\n      if (diff.getSource().equals(renameItem.getSource())) {\n        // The same path string may appear in:\n        // 1. both renamed and modified snapshot diff entries.\n        // 2. both renamed and created snapshot diff entries.\n        // Case 1 is the about same file/directory, whereas case 2\n        // is about two different files/directories.\n        // We are finding case 1 here, thus we check against DiffType.MODIFY.\n        if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n          return renameItem;\n        }\n      } else if (isParentOf(renameItem.getSource(), diff.getSource())) {\n        // If rename entry is the parent of diff entry, then both MODIFY and\n        // CREATE diff entries should be handled.\n        return renameItem;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n     for (DiffInfo renameItem : renameDiffArray) {\n-      if (diff.getSource().equals(renameItem.getSource())) {\n+      if (diff.source.equals(renameItem.source)) {\n         // The same path string may appear in:\n         // 1. both renamed and modified snapshot diff entries.\n         // 2. both renamed and created snapshot diff entries.\n         // Case 1 is the about same file/directory, whereas case 2\n         // is about two different files/directories.\n         // We are finding case 1 here, thus we check against DiffType.MODIFY.\n         if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n           return renameItem;\n         }\n-      } else if (isParentOf(renameItem.getSource(), diff.getSource())) {\n+      } else if (isParentOf(renameItem.source, diff.source)) {\n         // If rename entry is the parent of diff entry, then both MODIFY and\n         // CREATE diff entries should be handled.\n         return renameItem;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n    for (DiffInfo renameItem : renameDiffArray) {\n      if (diff.source.equals(renameItem.source)) {\n        // The same path string may appear in:\n        // 1. both renamed and modified snapshot diff entries.\n        // 2. both renamed and created snapshot diff entries.\n        // Case 1 is the about same file/directory, whereas case 2\n        // is about two different files/directories.\n        // We are finding case 1 here, thus we check against DiffType.MODIFY.\n        if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n          return renameItem;\n        }\n      } else if (isParentOf(renameItem.source, diff.source)) {\n        // If rename entry is the parent of diff entry, then both MODIFY and\n        // CREATE diff entries should be handled.\n        return renameItem;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "26/04/16 4:08 PM",
      "commitNameOld": "959a28dd1216dfac78d05b438828e8503108d963",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 173.79,
      "commitsBetweenForRepo": 1276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n     for (DiffInfo renameItem : renameDiffArray) {\n-      if (diff.source.equals(renameItem.source)) {\n+      if (diff.getSource().equals(renameItem.getSource())) {\n         // The same path string may appear in:\n         // 1. both renamed and modified snapshot diff entries.\n         // 2. both renamed and created snapshot diff entries.\n         // Case 1 is the about same file/directory, whereas case 2\n         // is about two different files/directories.\n         // We are finding case 1 here, thus we check against DiffType.MODIFY.\n         if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n           return renameItem;\n         }\n-      } else if (isParentOf(renameItem.source, diff.source)) {\n+      } else if (isParentOf(renameItem.getSource(), diff.getSource())) {\n         // If rename entry is the parent of diff entry, then both MODIFY and\n         // CREATE diff entries should be handled.\n         return renameItem;\n       }\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n    for (DiffInfo renameItem : renameDiffArray) {\n      if (diff.getSource().equals(renameItem.getSource())) {\n        // The same path string may appear in:\n        // 1. both renamed and modified snapshot diff entries.\n        // 2. both renamed and created snapshot diff entries.\n        // Case 1 is the about same file/directory, whereas case 2\n        // is about two different files/directories.\n        // We are finding case 1 here, thus we check against DiffType.MODIFY.\n        if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n          return renameItem;\n        }\n      } else if (isParentOf(renameItem.getSource(), diff.getSource())) {\n        // If rename entry is the parent of diff entry, then both MODIFY and\n        // CREATE diff entries should be handled.\n        return renameItem;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java",
      "extendedDetails": {}
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "diff": "@@ -0,0 +1,20 @@\n+  private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n+    for (DiffInfo renameItem : renameDiffArray) {\n+      if (diff.source.equals(renameItem.source)) {\n+        // The same path string may appear in:\n+        // 1. both renamed and modified snapshot diff entries.\n+        // 2. both renamed and created snapshot diff entries.\n+        // Case 1 is the about same file/directory, whereas case 2\n+        // is about two different files/directories.\n+        // We are finding case 1 here, thus we check against DiffType.MODIFY.\n+        if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n+          return renameItem;\n+        }\n+      } else if (isParentOf(renameItem.source, diff.source)) {\n+        // If rename entry is the parent of diff entry, then both MODIFY and\n+        // CREATE diff entries should be handled.\n+        return renameItem;\n+      }\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private DiffInfo getRenameItem(DiffInfo diff, DiffInfo[] renameDiffArray) {\n    for (DiffInfo renameItem : renameDiffArray) {\n      if (diff.source.equals(renameItem.source)) {\n        // The same path string may appear in:\n        // 1. both renamed and modified snapshot diff entries.\n        // 2. both renamed and created snapshot diff entries.\n        // Case 1 is the about same file/directory, whereas case 2\n        // is about two different files/directories.\n        // We are finding case 1 here, thus we check against DiffType.MODIFY.\n        if (diff.getType() \u003d\u003d SnapshotDiffReport.DiffType.MODIFY) {\n          return renameItem;\n        }\n      } else if (isParentOf(renameItem.source, diff.source)) {\n        // If rename entry is the parent of diff entry, then both MODIFY and\n        // CREATE diff entries should be handled.\n        return renameItem;\n      }\n    }\n    return null;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpSync.java"
    }
  }
}