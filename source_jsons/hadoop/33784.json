{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerLinuxContainerRuntime.java",
  "functionName": "setHostname",
  "functionId": "setHostname___runCommand-DockerRunCommand__containerIdStr-String__network-String__name-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
  "functionStartLine": 506,
  "functionEndLine": 529,
  "numCommitsSeen": 160,
  "timeTaken": 3549,
  "changeHistory": [
    "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60",
    "8d335e59cf9fa794a379b12f06d2d54f1b781118",
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3"
  ],
  "changeHistoryShort": {
    "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60": "Ymultichange(Yparameterchange,Ybodychange)",
    "8d335e59cf9fa794a379b12f06d2d54f1b781118": "Ybodychange",
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8675. Remove default hostname for docker containers when net\u003dhost. Contributed by Suma Shivaprasad\n",
      "commitDate": "27/08/18 11:34 AM",
      "commitName": "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8675. Remove default hostname for docker containers when net\u003dhost. Contributed by Suma Shivaprasad\n",
          "commitDate": "27/08/18 11:34 AM",
          "commitName": "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "16/08/18 8:06 AM",
          "commitNameOld": "cb21eaa026d80a2c9836030d959c0dd7f87c4d6b",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 11.14,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,24 @@\n-  private void setHostname(DockerRunCommand runCommand, String\n-      containerIdStr, String name)\n+  private void setHostname(DockerRunCommand runCommand,\n+      String containerIdStr, String network, String name)\n       throws ContainerExecutionException {\n-    if (name \u003d\u003d null || name.isEmpty()) {\n-      name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n \n-      String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n-      if (domain !\u003d null) {\n-        name +\u003d (\".\" + domain);\n+    if (network.equalsIgnoreCase(\"host\")) {\n+      if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n+        LOG.info(\"setting hostname in container to: \" + name);\n+        runCommand.setHostname(name);\n       }\n-      validateHostname(name);\n-    }\n+    } else {\n+      //get default hostname\n+      if (name \u003d\u003d null || name.isEmpty()) {\n+        name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n \n-    LOG.info(\"setting hostname in container to: \" + name);\n-    runCommand.setHostname(name);\n+        String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n+        if (domain !\u003d null) {\n+          name +\u003d (\".\" + domain);\n+        }\n+        validateHostname(name);\n+      }\n+      LOG.info(\"setting hostname in container to: \" + name);\n+      runCommand.setHostname(name);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setHostname(DockerRunCommand runCommand,\n      String containerIdStr, String network, String name)\n      throws ContainerExecutionException {\n\n    if (network.equalsIgnoreCase(\"host\")) {\n      if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n        LOG.info(\"setting hostname in container to: \" + name);\n        runCommand.setHostname(name);\n      }\n    } else {\n      //get default hostname\n      if (name \u003d\u003d null || name.isEmpty()) {\n        name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n\n        String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n        if (domain !\u003d null) {\n          name +\u003d (\".\" + domain);\n        }\n        validateHostname(name);\n      }\n      LOG.info(\"setting hostname in container to: \" + name);\n      runCommand.setHostname(name);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
          "extendedDetails": {
            "oldValue": "[runCommand-DockerRunCommand, containerIdStr-String, name-String]",
            "newValue": "[runCommand-DockerRunCommand, containerIdStr-String, network-String, name-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8675. Remove default hostname for docker containers when net\u003dhost. Contributed by Suma Shivaprasad\n",
          "commitDate": "27/08/18 11:34 AM",
          "commitName": "05b2bbeb357d4fa03e71f2bfd5d8eeb0ea6c3f60",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "16/08/18 8:06 AM",
          "commitNameOld": "cb21eaa026d80a2c9836030d959c0dd7f87c4d6b",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 11.14,
          "commitsBetweenForRepo": 61,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,24 @@\n-  private void setHostname(DockerRunCommand runCommand, String\n-      containerIdStr, String name)\n+  private void setHostname(DockerRunCommand runCommand,\n+      String containerIdStr, String network, String name)\n       throws ContainerExecutionException {\n-    if (name \u003d\u003d null || name.isEmpty()) {\n-      name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n \n-      String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n-      if (domain !\u003d null) {\n-        name +\u003d (\".\" + domain);\n+    if (network.equalsIgnoreCase(\"host\")) {\n+      if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n+        LOG.info(\"setting hostname in container to: \" + name);\n+        runCommand.setHostname(name);\n       }\n-      validateHostname(name);\n-    }\n+    } else {\n+      //get default hostname\n+      if (name \u003d\u003d null || name.isEmpty()) {\n+        name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n \n-    LOG.info(\"setting hostname in container to: \" + name);\n-    runCommand.setHostname(name);\n+        String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n+        if (domain !\u003d null) {\n+          name +\u003d (\".\" + domain);\n+        }\n+        validateHostname(name);\n+      }\n+      LOG.info(\"setting hostname in container to: \" + name);\n+      runCommand.setHostname(name);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void setHostname(DockerRunCommand runCommand,\n      String containerIdStr, String network, String name)\n      throws ContainerExecutionException {\n\n    if (network.equalsIgnoreCase(\"host\")) {\n      if (name !\u003d null \u0026\u0026 !name.isEmpty()) {\n        LOG.info(\"setting hostname in container to: \" + name);\n        runCommand.setHostname(name);\n      }\n    } else {\n      //get default hostname\n      if (name \u003d\u003d null || name.isEmpty()) {\n        name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n\n        String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n        if (domain !\u003d null) {\n          name +\u003d (\".\" + domain);\n        }\n        validateHostname(name);\n      }\n      LOG.info(\"setting hostname in container to: \" + name);\n      runCommand.setHostname(name);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
          "extendedDetails": {}
        }
      ]
    },
    "8d335e59cf9fa794a379b12f06d2d54f1b781118": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6804. [yarn-native-services changes] Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "8d335e59cf9fa794a379b12f06d2d54f1b781118",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "ce05c6e9811bca0bdc01152c2a82508a639480f5",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   private void setHostname(DockerRunCommand runCommand, String\n       containerIdStr, String name)\n       throws ContainerExecutionException {\n     if (name \u003d\u003d null || name.isEmpty()) {\n       name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n+\n+      String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n+      if (domain !\u003d null) {\n+        name +\u003d (\".\" + domain);\n+      }\n       validateHostname(name);\n     }\n \n     LOG.info(\"setting hostname in container to: \" + name);\n     runCommand.setHostname(name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void setHostname(DockerRunCommand runCommand, String\n      containerIdStr, String name)\n      throws ContainerExecutionException {\n    if (name \u003d\u003d null || name.isEmpty()) {\n      name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n\n      String domain \u003d conf.get(RegistryConstants.KEY_DNS_DOMAIN);\n      if (domain !\u003d null) {\n        name +\u003d (\".\" + domain);\n      }\n      validateHostname(name);\n    }\n\n    LOG.info(\"setting hostname in container to: \" + name);\n    runCommand.setHostname(name);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {}
    },
    "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6804. Allow custom hostname for docker containers in native services. Contributed by Billie Rinaldi\n",
      "commitDate": "25/07/17 9:57 AM",
      "commitName": "ac9489f7fc2dd351fbe5be4b7a3add4782da81c3",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,11 @@\n+  private void setHostname(DockerRunCommand runCommand, String\n+      containerIdStr, String name)\n+      throws ContainerExecutionException {\n+    if (name \u003d\u003d null || name.isEmpty()) {\n+      name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n+      validateHostname(name);\n+    }\n+\n+    LOG.info(\"setting hostname in container to: \" + name);\n+    runCommand.setHostname(name);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void setHostname(DockerRunCommand runCommand, String\n      containerIdStr, String name)\n      throws ContainerExecutionException {\n    if (name \u003d\u003d null || name.isEmpty()) {\n      name \u003d RegistryPathUtils.encodeYarnID(containerIdStr);\n      validateHostname(name);\n    }\n\n    LOG.info(\"setting hostname in container to: \" + name);\n    runCommand.setHostname(name);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}