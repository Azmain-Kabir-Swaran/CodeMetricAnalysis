{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KeyProviderFactory.java",
  "functionName": "getProviders",
  "functionId": "getProviders___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProviderFactory.java",
  "functionStartLine": 62,
  "functionEndLine": 81,
  "numCommitsSeen": 5,
  "timeTaken": 706,
  "changeHistory": [
    "41f1662d467ec0b295b742bb80c87482504fbf25",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "41f1662d467ec0b295b742bb80c87482504fbf25": "Ybodychange",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "41f1662d467ec0b295b742bb80c87482504fbf25": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11054. Add a KeyProvider instantiation based on a URI. (tucu)\n",
      "commitDate": "04/09/14 9:09 AM",
      "commitName": "41f1662d467ec0b295b742bb80c87482504fbf25",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "22/07/14 8:44 AM",
      "commitNameOld": "ab6af791262d7382c6d04c43c42742818445c0f4",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 44.02,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,20 @@\n   public static List\u003cKeyProvider\u003e getProviders(Configuration conf\n                                                ) throws IOException {\n     List\u003cKeyProvider\u003e result \u003d new ArrayList\u003cKeyProvider\u003e();\n     for(String path: conf.getStringCollection(KEY_PROVIDER_PATH)) {\n       try {\n         URI uri \u003d new URI(path);\n-        boolean found \u003d false;\n-        for(KeyProviderFactory factory: serviceLoader) {\n-          KeyProvider kp \u003d factory.createProvider(uri, conf);\n-          if (kp !\u003d null) {\n-            result.add(kp);\n-            found \u003d true;\n-            break;\n-          }\n-        }\n-        if (!found) {\n+        KeyProvider kp \u003d get(uri, conf);\n+        if (kp !\u003d null) {\n+          result.add(kp);\n+        } else {\n           throw new IOException(\"No KeyProviderFactory for \" + uri + \" in \" +\n               KEY_PROVIDER_PATH);\n         }\n       } catch (URISyntaxException error) {\n         throw new IOException(\"Bad configuration of \" + KEY_PROVIDER_PATH +\n             \" at \" + path, error);\n       }\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cKeyProvider\u003e getProviders(Configuration conf\n                                               ) throws IOException {\n    List\u003cKeyProvider\u003e result \u003d new ArrayList\u003cKeyProvider\u003e();\n    for(String path: conf.getStringCollection(KEY_PROVIDER_PATH)) {\n      try {\n        URI uri \u003d new URI(path);\n        KeyProvider kp \u003d get(uri, conf);\n        if (kp !\u003d null) {\n          result.add(kp);\n        } else {\n          throw new IOException(\"No KeyProviderFactory for \" + uri + \" in \" +\n              KEY_PROVIDER_PATH);\n        }\n      } catch (URISyntaxException error) {\n        throw new IOException(\"Bad configuration of \" + KEY_PROVIDER_PATH +\n            \" at \" + path, error);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProviderFactory.java",
      "extendedDetails": {}
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,26 @@\n+  public static List\u003cKeyProvider\u003e getProviders(Configuration conf\n+                                               ) throws IOException {\n+    List\u003cKeyProvider\u003e result \u003d new ArrayList\u003cKeyProvider\u003e();\n+    for(String path: conf.getStringCollection(KEY_PROVIDER_PATH)) {\n+      try {\n+        URI uri \u003d new URI(path);\n+        boolean found \u003d false;\n+        for(KeyProviderFactory factory: serviceLoader) {\n+          KeyProvider kp \u003d factory.createProvider(uri, conf);\n+          if (kp !\u003d null) {\n+            result.add(kp);\n+            found \u003d true;\n+            break;\n+          }\n+        }\n+        if (!found) {\n+          throw new IOException(\"No KeyProviderFactory for \" + uri + \" in \" +\n+              KEY_PROVIDER_PATH);\n+        }\n+      } catch (URISyntaxException error) {\n+        throw new IOException(\"Bad configuration of \" + KEY_PROVIDER_PATH +\n+            \" at \" + path, error);\n+      }\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cKeyProvider\u003e getProviders(Configuration conf\n                                               ) throws IOException {\n    List\u003cKeyProvider\u003e result \u003d new ArrayList\u003cKeyProvider\u003e();\n    for(String path: conf.getStringCollection(KEY_PROVIDER_PATH)) {\n      try {\n        URI uri \u003d new URI(path);\n        boolean found \u003d false;\n        for(KeyProviderFactory factory: serviceLoader) {\n          KeyProvider kp \u003d factory.createProvider(uri, conf);\n          if (kp !\u003d null) {\n            result.add(kp);\n            found \u003d true;\n            break;\n          }\n        }\n        if (!found) {\n          throw new IOException(\"No KeyProviderFactory for \" + uri + \" in \" +\n              KEY_PROVIDER_PATH);\n        }\n      } catch (URISyntaxException error) {\n        throw new IOException(\"Bad configuration of \" + KEY_PROVIDER_PATH +\n            \" at \" + path, error);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/KeyProviderFactory.java"
    }
  }
}