{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationClientInterceptor.java",
  "functionName": "init",
  "functionId": "init___userName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
  "functionStartLine": 166,
  "functionEndLine": 199,
  "numCommitsSeen": 16,
  "timeTaken": 1704,
  "changeHistory": [
    "3dc2988a3779590409cbe7062046e3fee68f8d22",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8"
  ],
  "changeHistoryShort": {
    "3dc2988a3779590409cbe7062046e3fee68f8d22": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3dc2988a3779590409cbe7062046e3fee68f8d22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8699. Add Yarnclient#yarnclusterMetrics API implementation in router. Contributed by Bibin A Chundatt.\n",
      "commitDate": "07/09/18 11:32 AM",
      "commitName": "3dc2988a3779590409cbe7062046e3fee68f8d22",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "12/06/18 8:35 AM",
      "commitNameOld": "652bcbb3e4950758e61ce123ecc1798ae2b60a7f",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 87.12,
      "commitsBetweenForRepo": 604,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,34 @@\n   public void init(String userName) {\n     super.init(userName);\n \n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n     rand \u003d new Random(System.currentTimeMillis());\n \n+\n+    int numThreads \u003d getConf().getInt(\n+        YarnConfiguration.ROUTER_USER_CLIENT_THREADS_SIZE,\n+        YarnConfiguration.DEFAULT_ROUTER_USER_CLIENT_THREADS_SIZE);\n+    ThreadFactory threadFactory \u003d new ThreadFactoryBuilder()\n+        .setNameFormat(\"RPC Router Client-\" + userName + \"-%d \").build();\n+\n+    BlockingQueue workQueue \u003d new LinkedBlockingQueue\u003c\u003e();\n+    this.executorService \u003d new ThreadPoolExecutor(numThreads, numThreads,\n+        0L, TimeUnit.MILLISECONDS, workQueue, threadFactory);\n+\n     final Configuration conf \u003d this.getConf();\n \n     try {\n       policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n           this.federationFacade.getSubClusterResolver(), null);\n     } catch (FederationPolicyInitializationException e) {\n       LOG.error(e.getMessage());\n     }\n \n     numSubmitRetries \u003d\n         conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n             YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n     clientRMProxies \u003d\n         new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n     routerMetrics \u003d RouterMetrics.getMetrics();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String userName) {\n    super.init(userName);\n\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n\n    int numThreads \u003d getConf().getInt(\n        YarnConfiguration.ROUTER_USER_CLIENT_THREADS_SIZE,\n        YarnConfiguration.DEFAULT_ROUTER_USER_CLIENT_THREADS_SIZE);\n    ThreadFactory threadFactory \u003d new ThreadFactoryBuilder()\n        .setNameFormat(\"RPC Router Client-\" + userName + \"-%d \").build();\n\n    BlockingQueue workQueue \u003d new LinkedBlockingQueue\u003c\u003e();\n    this.executorService \u003d new ThreadPoolExecutor(numThreads, numThreads,\n        0L, TimeUnit.MILLISECONDS, workQueue, threadFactory);\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    clientRMProxies \u003d\n        new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "86f05c33125af3b435d6793551680ffa35047aa7",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 20.22,
      "commitsBetweenForRepo": 129,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void init(String userName) {\n     super.init(userName);\n \n     federationFacade \u003d FederationStateStoreFacade.getInstance();\n     rand \u003d new Random(System.currentTimeMillis());\n \n     final Configuration conf \u003d this.getConf();\n \n     try {\n       policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n           this.federationFacade.getSubClusterResolver(), null);\n     } catch (FederationPolicyInitializationException e) {\n       LOG.error(e.getMessage());\n     }\n \n     numSubmitRetries \u003d\n         conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n             YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n \n     clientRMProxies \u003d\n         new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n-\n+    routerMetrics \u003d RouterMetrics.getMetrics();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String userName) {\n    super.init(userName);\n\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    clientRMProxies \u003d\n        new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n    routerMetrics \u003d RouterMetrics.getMetrics();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java",
      "extendedDetails": {}
    },
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,23 @@\n+  public void init(String userName) {\n+    super.init(userName);\n+\n+    federationFacade \u003d FederationStateStoreFacade.getInstance();\n+    rand \u003d new Random(System.currentTimeMillis());\n+\n+    final Configuration conf \u003d this.getConf();\n+\n+    try {\n+      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n+          this.federationFacade.getSubClusterResolver(), null);\n+    } catch (FederationPolicyInitializationException e) {\n+      LOG.error(e.getMessage());\n+    }\n+\n+    numSubmitRetries \u003d\n+        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n+            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n+\n+    clientRMProxies \u003d\n+        new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(String userName) {\n    super.init(userName);\n\n    federationFacade \u003d FederationStateStoreFacade.getInstance();\n    rand \u003d new Random(System.currentTimeMillis());\n\n    final Configuration conf \u003d this.getConf();\n\n    try {\n      policyFacade \u003d new RouterPolicyFacade(conf, federationFacade,\n          this.federationFacade.getSubClusterResolver(), null);\n    } catch (FederationPolicyInitializationException e) {\n      LOG.error(e.getMessage());\n    }\n\n    numSubmitRetries \u003d\n        conf.getInt(YarnConfiguration.ROUTER_CLIENTRM_SUBMIT_RETRY,\n            YarnConfiguration.DEFAULT_ROUTER_CLIENTRM_SUBMIT_RETRY);\n\n    clientRMProxies \u003d\n        new ConcurrentHashMap\u003cSubClusterId, ApplicationClientProtocol\u003e();\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/clientrm/FederationClientInterceptor.java"
    }
  }
}