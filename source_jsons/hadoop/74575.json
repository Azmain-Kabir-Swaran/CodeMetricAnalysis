{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Groups.java",
  "functionName": "fetchGroupList",
  "functionId": "fetchGroupList___user-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java",
  "functionStartLine": 385,
  "functionEndLine": 397,
  "numCommitsSeen": 18,
  "timeTaken": 848,
  "changeHistory": [
    "e5a692519956aefb3a540ed0137b63cf598ac10d"
  ],
  "changeHistoryShort": {
    "e5a692519956aefb3a540ed0137b63cf598ac10d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e5a692519956aefb3a540ed0137b63cf598ac10d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11238. Update the NameNode\u0027s Group Cache in the background when possible (Chris Li via Colin P. McCabe)\n",
      "commitDate": "12/12/14 4:30 PM",
      "commitName": "e5a692519956aefb3a540ed0137b63cf598ac10d",
      "commitAuthor": "Colin Patrick Mccabe",
      "diff": "@@ -0,0 +1,13 @@\n+    private List\u003cString\u003e fetchGroupList(String user) throws IOException {\n+      long startMs \u003d timer.monotonicNow();\n+      List\u003cString\u003e groupList \u003d impl.getGroups(user);\n+      long endMs \u003d timer.monotonicNow();\n+      long deltaMs \u003d endMs - startMs ;\n+      UserGroupInformation.metrics.addGetGroups(deltaMs);\n+      if (deltaMs \u003e warningDeltaMs) {\n+        LOG.warn(\"Potential performance problem: getGroups(user\u003d\" + user +\") \" +\n+          \"took \" + deltaMs + \" milliseconds.\");\n+      }\n+\n+      return groupList;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private List\u003cString\u003e fetchGroupList(String user) throws IOException {\n      long startMs \u003d timer.monotonicNow();\n      List\u003cString\u003e groupList \u003d impl.getGroups(user);\n      long endMs \u003d timer.monotonicNow();\n      long deltaMs \u003d endMs - startMs ;\n      UserGroupInformation.metrics.addGetGroups(deltaMs);\n      if (deltaMs \u003e warningDeltaMs) {\n        LOG.warn(\"Potential performance problem: getGroups(user\u003d\" + user +\") \" +\n          \"took \" + deltaMs + \" milliseconds.\");\n      }\n\n      return groupList;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/Groups.java"
    }
  }
}