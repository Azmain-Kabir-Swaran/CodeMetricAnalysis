{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryEventUtils.java",
  "functionName": "countersToTimelineMetric",
  "functionId": "countersToTimelineMetric___counters-Counters__timestamp-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/JobHistoryEventUtils.java",
  "functionStartLine": 63,
  "functionEndLine": 66,
  "numCommitsSeen": 6,
  "timeTaken": 1231,
  "changeHistory": [
    "8bf87eede2b1735993abc0f2cc49c971f9f8e222",
    "f0dbd7a40f0dd9b619ca13b0a0648636c9e21b3b"
  ],
  "changeHistoryShort": {
    "8bf87eede2b1735993abc0f2cc49c971f9f8e222": "Ybodychange",
    "f0dbd7a40f0dd9b619ca13b0a0648636c9e21b3b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8bf87eede2b1735993abc0f2cc49c971f9f8e222": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6720. Inconsistent values of counters across tasks and job reported to timeline service. Contributed by Varun Saxena\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "8bf87eede2b1735993abc0f2cc49c971f9f8e222",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "000a4d8e133920d71af304f2015d3674daed74fa",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,4 @@\n   public static Set\u003cTimelineMetric\u003e countersToTimelineMetric(Counters counters,\n       long timestamp) {\n-    Set\u003cTimelineMetric\u003e entityMetrics \u003d new HashSet\u003cTimelineMetric\u003e();\n-    for (CounterGroup g : counters) {\n-      String groupName \u003d g.getName();\n-      for (Counter c : g) {\n-        String name \u003d groupName + \":\" + c.getName();\n-        TimelineMetric metric \u003d new TimelineMetric();\n-        metric.setId(name);\n-        metric.addValue(timestamp, c.getValue());\n-        entityMetrics.add(metric);\n-      }\n-    }\n-    return entityMetrics;\n+    return countersToTimelineMetric(counters, timestamp, \"\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cTimelineMetric\u003e countersToTimelineMetric(Counters counters,\n      long timestamp) {\n    return countersToTimelineMetric(counters, timestamp, \"\");\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/JobHistoryEventUtils.java",
      "extendedDetails": {}
    },
    "f0dbd7a40f0dd9b619ca13b0a0648636c9e21b3b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6424. Store MR counters as timeline metrics instead of event. (Naganarasimha G R via varunsaxena)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f0dbd7a40f0dd9b619ca13b0a0648636c9e21b3b",
      "commitAuthor": "Varun Saxena",
      "diff": "@@ -0,0 +1,15 @@\n+  public static Set\u003cTimelineMetric\u003e countersToTimelineMetric(Counters counters,\n+      long timestamp) {\n+    Set\u003cTimelineMetric\u003e entityMetrics \u003d new HashSet\u003cTimelineMetric\u003e();\n+    for (CounterGroup g : counters) {\n+      String groupName \u003d g.getName();\n+      for (Counter c : g) {\n+        String name \u003d groupName + \":\" + c.getName();\n+        TimelineMetric metric \u003d new TimelineMetric();\n+        metric.setId(name);\n+        metric.addValue(timestamp, c.getValue());\n+        entityMetrics.add(metric);\n+      }\n+    }\n+    return entityMetrics;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Set\u003cTimelineMetric\u003e countersToTimelineMetric(Counters counters,\n      long timestamp) {\n    Set\u003cTimelineMetric\u003e entityMetrics \u003d new HashSet\u003cTimelineMetric\u003e();\n    for (CounterGroup g : counters) {\n      String groupName \u003d g.getName();\n      for (Counter c : g) {\n        String name \u003d groupName + \":\" + c.getName();\n        TimelineMetric metric \u003d new TimelineMetric();\n        metric.setId(name);\n        metric.addValue(timestamp, c.getValue());\n        entityMetrics.add(metric);\n      }\n    }\n    return entityMetrics;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/util/JobHistoryEventUtils.java"
    }
  }
}