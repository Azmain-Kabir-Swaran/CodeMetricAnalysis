{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractGangliaSink.java",
  "functionName": "loadGangliaConf",
  "functionId": "loadGangliaConf___gtype-GangliaConfType",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java",
  "functionStartLine": 177,
  "functionEndLine": 210,
  "numCommitsSeen": 10,
  "timeTaken": 766,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "224972e0558e7a0022002ed26e765acdfd9f8f6c"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "224972e0558e7a0022002ed26e765acdfd9f8f6c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void loadGangliaConf(GangliaConfType gtype) {\n    String propertyarr[] \u003d conf.getStringArray(gtype.name());\n    if (propertyarr !\u003d null \u0026\u0026 propertyarr.length \u003e 0) {\n      for (String metricNValue : propertyarr) {\n        String metricNValueArr[] \u003d metricNValue.split(EQUAL);\n        if (metricNValueArr.length !\u003d 2 || metricNValueArr[0].length() \u003d\u003d 0) {\n          LOG.error(\"Invalid propertylist for \" + gtype.name());\n        }\n\n        String metricName \u003d metricNValueArr[0].trim();\n        String metricValue \u003d metricNValueArr[1].trim();\n        GangliaConf gconf \u003d gangliaConfMap.get(metricName);\n        if (gconf \u003d\u003d null) {\n          gconf \u003d new GangliaConf();\n          gangliaConfMap.put(metricName, gconf);\n        }\n\n        switch (gtype) {\n        case units:\n          gconf.setUnits(metricValue);\n          break;\n        case dmax:\n          gconf.setDmax(Integer.parseInt(metricValue));\n          break;\n        case tmax:\n          gconf.setTmax(Integer.parseInt(metricValue));\n          break;\n        case slope:\n          gconf.setSlope(GangliaSlope.valueOf(metricValue));\n          break;\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void loadGangliaConf(GangliaConfType gtype) {\n    String propertyarr[] \u003d conf.getStringArray(gtype.name());\n    if (propertyarr !\u003d null \u0026\u0026 propertyarr.length \u003e 0) {\n      for (String metricNValue : propertyarr) {\n        String metricNValueArr[] \u003d metricNValue.split(EQUAL);\n        if (metricNValueArr.length !\u003d 2 || metricNValueArr[0].length() \u003d\u003d 0) {\n          LOG.error(\"Invalid propertylist for \" + gtype.name());\n        }\n\n        String metricName \u003d metricNValueArr[0].trim();\n        String metricValue \u003d metricNValueArr[1].trim();\n        GangliaConf gconf \u003d gangliaConfMap.get(metricName);\n        if (gconf \u003d\u003d null) {\n          gconf \u003d new GangliaConf();\n          gangliaConfMap.put(metricName, gconf);\n        }\n\n        switch (gtype) {\n        case units:\n          gconf.setUnits(metricValue);\n          break;\n        case dmax:\n          gconf.setDmax(Integer.parseInt(metricValue));\n          break;\n        case tmax:\n          gconf.setTmax(Integer.parseInt(metricValue));\n          break;\n        case slope:\n          gconf.setSlope(GangliaSlope.valueOf(metricValue));\n          break;\n        }\n      }\n    }\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java"
      }
    },
    "224972e0558e7a0022002ed26e765acdfd9f8f6c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7324. Ganglia plugins for metrics v2. (Priyo Mustafi via llu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1145525 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/11 3:23 AM",
      "commitName": "224972e0558e7a0022002ed26e765acdfd9f8f6c",
      "commitAuthor": "Luke Lu",
      "diff": "@@ -0,0 +1,34 @@\n+  private void loadGangliaConf(GangliaConfType gtype) {\n+    String propertyarr[] \u003d conf.getStringArray(gtype.name());\n+    if (propertyarr !\u003d null \u0026\u0026 propertyarr.length \u003e 0) {\n+      for (String metricNValue : propertyarr) {\n+        String metricNValueArr[] \u003d metricNValue.split(EQUAL);\n+        if (metricNValueArr.length !\u003d 2 || metricNValueArr[0].length() \u003d\u003d 0) {\n+          LOG.error(\"Invalid propertylist for \" + gtype.name());\n+        }\n+\n+        String metricName \u003d metricNValueArr[0].trim();\n+        String metricValue \u003d metricNValueArr[1].trim();\n+        GangliaConf gconf \u003d gangliaConfMap.get(metricName);\n+        if (gconf \u003d\u003d null) {\n+          gconf \u003d new GangliaConf();\n+          gangliaConfMap.put(metricName, gconf);\n+        }\n+\n+        switch (gtype) {\n+        case units:\n+          gconf.setUnits(metricValue);\n+          break;\n+        case dmax:\n+          gconf.setDmax(Integer.parseInt(metricValue));\n+          break;\n+        case tmax:\n+          gconf.setTmax(Integer.parseInt(metricValue));\n+          break;\n+        case slope:\n+          gconf.setSlope(GangliaSlope.valueOf(metricValue));\n+          break;\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void loadGangliaConf(GangliaConfType gtype) {\n    String propertyarr[] \u003d conf.getStringArray(gtype.name());\n    if (propertyarr !\u003d null \u0026\u0026 propertyarr.length \u003e 0) {\n      for (String metricNValue : propertyarr) {\n        String metricNValueArr[] \u003d metricNValue.split(EQUAL);\n        if (metricNValueArr.length !\u003d 2 || metricNValueArr[0].length() \u003d\u003d 0) {\n          LOG.error(\"Invalid propertylist for \" + gtype.name());\n        }\n\n        String metricName \u003d metricNValueArr[0].trim();\n        String metricValue \u003d metricNValueArr[1].trim();\n        GangliaConf gconf \u003d gangliaConfMap.get(metricName);\n        if (gconf \u003d\u003d null) {\n          gconf \u003d new GangliaConf();\n          gangliaConfMap.put(metricName, gconf);\n        }\n\n        switch (gtype) {\n        case units:\n          gconf.setUnits(metricValue);\n          break;\n        case dmax:\n          gconf.setDmax(Integer.parseInt(metricValue));\n          break;\n        case tmax:\n          gconf.setTmax(Integer.parseInt(metricValue));\n          break;\n        case slope:\n          gconf.setSlope(GangliaSlope.valueOf(metricValue));\n          break;\n        }\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/metrics2/sink/ganglia/AbstractGangliaSink.java"
    }
  }
}