{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecureWasbRemoteCallHelper.java",
  "functionName": "getDelegationToken",
  "functionId": "getDelegationToken___userGroupInformation-UserGroupInformation",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/SecureWasbRemoteCallHelper.java",
  "functionStartLine": 193,
  "functionEndLine": 222,
  "numCommitsSeen": 3,
  "timeTaken": 1078,
  "changeHistory": [
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329"
  ],
  "changeHistoryShort": {
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": "Ymodifierchange",
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b0e78ae085928c82ae63a05a29a628c2e289c0fc": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-14640. Azure: Support affinity for service running on localhost and reuse SPNEGO hadoop.auth cookie for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak.\n",
      "commitDate": "17/07/17 2:27 AM",
      "commitName": "b0e78ae085928c82ae63a05a29a628c2e289c0fc",
      "commitAuthor": "Jitendra Pandey",
      "commitDateOld": "30/06/17 4:53 PM",
      "commitNameOld": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 16.4,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n-  private synchronized Token\u003c?\u003e getDelegationToken(\n+  private Token\u003c?\u003e getDelegationToken(\n       UserGroupInformation userGroupInformation) throws IOException {\n     if (this.delegationToken \u003d\u003d null) {\n       Token\u003c?\u003e token \u003d null;\n       for (Token iterToken : userGroupInformation.getTokens()) {\n         if (iterToken.getKind()\n             .equals(WasbDelegationTokenIdentifier.TOKEN_KIND)) {\n           token \u003d iterToken;\n           LOG.debug(\"{} token found in cache : {}\",\n               WasbDelegationTokenIdentifier.TOKEN_KIND, iterToken);\n           break;\n         }\n       }\n       LOG.debug(\"UGI Information: {}\", userGroupInformation.toString());\n \n       // ugi tokens are usually indicative of a task which can\u0027t\n       // refetch tokens.  even if ugi has credentials, don\u0027t attempt\n       // to get another token to match hdfs/rpc behavior\n       if (token !\u003d null) {\n         LOG.debug(\"Using UGI token: {}\", token);\n         setDelegationToken(token);\n       }\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Delegation token from cache - {}\", delegationToken !\u003d null\n           ? delegationToken.encodeToUrlString()\n           : \"null\");\n     }\n     return this.delegationToken;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Token\u003c?\u003e getDelegationToken(\n      UserGroupInformation userGroupInformation) throws IOException {\n    if (this.delegationToken \u003d\u003d null) {\n      Token\u003c?\u003e token \u003d null;\n      for (Token iterToken : userGroupInformation.getTokens()) {\n        if (iterToken.getKind()\n            .equals(WasbDelegationTokenIdentifier.TOKEN_KIND)) {\n          token \u003d iterToken;\n          LOG.debug(\"{} token found in cache : {}\",\n              WasbDelegationTokenIdentifier.TOKEN_KIND, iterToken);\n          break;\n        }\n      }\n      LOG.debug(\"UGI Information: {}\", userGroupInformation.toString());\n\n      // ugi tokens are usually indicative of a task which can\u0027t\n      // refetch tokens.  even if ugi has credentials, don\u0027t attempt\n      // to get another token to match hdfs/rpc behavior\n      if (token !\u003d null) {\n        LOG.debug(\"Using UGI token: {}\", token);\n        setDelegationToken(token);\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Delegation token from cache - {}\", delegationToken !\u003d null\n          ? delegationToken.encodeToUrlString()\n          : \"null\");\n    }\n    return this.delegationToken;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/SecureWasbRemoteCallHelper.java",
      "extendedDetails": {
        "oldValue": "[private, synchronized]",
        "newValue": "[private]"
      }
    },
    "38996fdcf0987d1da00ce46f8284d8fcdce57329": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14443. Azure: Support retry and client side failover for authorization, SASKey and delegation token generation. Contributed by Santhosh G Nayak\n",
      "commitDate": "30/06/17 4:53 PM",
      "commitName": "38996fdcf0987d1da00ce46f8284d8fcdce57329",
      "commitAuthor": "Mingliang Liu",
      "diff": "@@ -0,0 +1,30 @@\n+  private synchronized Token\u003c?\u003e getDelegationToken(\n+      UserGroupInformation userGroupInformation) throws IOException {\n+    if (this.delegationToken \u003d\u003d null) {\n+      Token\u003c?\u003e token \u003d null;\n+      for (Token iterToken : userGroupInformation.getTokens()) {\n+        if (iterToken.getKind()\n+            .equals(WasbDelegationTokenIdentifier.TOKEN_KIND)) {\n+          token \u003d iterToken;\n+          LOG.debug(\"{} token found in cache : {}\",\n+              WasbDelegationTokenIdentifier.TOKEN_KIND, iterToken);\n+          break;\n+        }\n+      }\n+      LOG.debug(\"UGI Information: {}\", userGroupInformation.toString());\n+\n+      // ugi tokens are usually indicative of a task which can\u0027t\n+      // refetch tokens.  even if ugi has credentials, don\u0027t attempt\n+      // to get another token to match hdfs/rpc behavior\n+      if (token !\u003d null) {\n+        LOG.debug(\"Using UGI token: {}\", token);\n+        setDelegationToken(token);\n+      }\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Delegation token from cache - {}\", delegationToken !\u003d null\n+          ? delegationToken.encodeToUrlString()\n+          : \"null\");\n+    }\n+    return this.delegationToken;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized Token\u003c?\u003e getDelegationToken(\n      UserGroupInformation userGroupInformation) throws IOException {\n    if (this.delegationToken \u003d\u003d null) {\n      Token\u003c?\u003e token \u003d null;\n      for (Token iterToken : userGroupInformation.getTokens()) {\n        if (iterToken.getKind()\n            .equals(WasbDelegationTokenIdentifier.TOKEN_KIND)) {\n          token \u003d iterToken;\n          LOG.debug(\"{} token found in cache : {}\",\n              WasbDelegationTokenIdentifier.TOKEN_KIND, iterToken);\n          break;\n        }\n      }\n      LOG.debug(\"UGI Information: {}\", userGroupInformation.toString());\n\n      // ugi tokens are usually indicative of a task which can\u0027t\n      // refetch tokens.  even if ugi has credentials, don\u0027t attempt\n      // to get another token to match hdfs/rpc behavior\n      if (token !\u003d null) {\n        LOG.debug(\"Using UGI token: {}\", token);\n        setDelegationToken(token);\n      }\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Delegation token from cache - {}\", delegationToken !\u003d null\n          ? delegationToken.encodeToUrlString()\n          : \"null\");\n    }\n    return this.delegationToken;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/SecureWasbRemoteCallHelper.java"
    }
  }
}