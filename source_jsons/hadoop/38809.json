{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeQueueLoadMonitor.java",
  "functionName": "compareAndIncrement",
  "functionId": "compareAndIncrement___c-ClusterNode__incrementSize-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java",
  "functionStartLine": 89,
  "functionEndLine": 100,
  "numCommitsSeen": 12,
  "timeTaken": 1983,
  "changeHistory": [
    "fb512f50877438acb01fe6b3ec96c12b4db61694"
  ],
  "changeHistoryShort": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fb512f50877438acb01fe6b3ec96c12b4db61694": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9697. Efficient allocation of Opportunistic containers. Contributed by Abhishek Modi.\n",
      "commitDate": "12/11/19 3:04 AM",
      "commitName": "fb512f50877438acb01fe6b3ec96c12b4db61694",
      "commitAuthor": "Abhishek Modi",
      "diff": "@@ -0,0 +1,12 @@\n+    public boolean compareAndIncrement(ClusterNode c, int incrementSize) {\n+      if(this \u003d\u003d QUEUE_LENGTH) {\n+        int ret \u003d c.queueLength.addAndGet(incrementSize);\n+        if (ret \u003c\u003d c.queueCapacity) {\n+          return true;\n+        }\n+        c.queueLength.addAndGet(-incrementSize);\n+        return false;\n+      }\n+      // for queue wait time, we don\u0027t have any threshold.\n+      return true;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public boolean compareAndIncrement(ClusterNode c, int incrementSize) {\n      if(this \u003d\u003d QUEUE_LENGTH) {\n        int ret \u003d c.queueLength.addAndGet(incrementSize);\n        if (ret \u003c\u003d c.queueCapacity) {\n          return true;\n        }\n        c.queueLength.addAndGet(-incrementSize);\n        return false;\n      }\n      // for queue wait time, we don\u0027t have any threshold.\n      return true;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/distributed/NodeQueueLoadMonitor.java"
    }
  }
}