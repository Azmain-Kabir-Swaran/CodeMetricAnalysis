{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerPage.java",
  "functionName": "renderLeafQueueInfoWithPartition",
  "functionId": "renderLeafQueueInfoWithPartition___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
  "functionStartLine": 101,
  "functionEndLine": 124,
  "numCommitsSeen": 47,
  "timeTaken": 2412,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "4337b263aa23464a01c316336db2319e2858a2b3",
    "ae5308fe1d08479da0f3929cc6a57816411e9121",
    "0e85044e26da698c45185585310ae0e99448cd80"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "4337b263aa23464a01c316336db2319e2858a2b3": "Ybodychange",
    "ae5308fe1d08479da0f3929cc6a57816411e9121": "Ybodychange",
    "0e85044e26da698c45185585310ae0e99448cd80": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/06/17 11:50 PM",
      "commitNameOld": "ca13b224b2feb9c44de861da9cbba8dd2a12cb35",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 34.72,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private void renderLeafQueueInfoWithPartition(Block html) {\n       String nodeLabelDisplay \u003d nodeLabel.length() \u003d\u003d 0\n           ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n       // first display the queue\u0027s label specific details :\n       ResponseInfo ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n               + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabelDisplay + \"\\\u0027\");\n       renderQueueCapacityInfo(ri, nodeLabel);\n-      html._(InfoBlock.class);\n+      html.__(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n \n       // second display the queue specific details :\n       ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n-              ._(\"Queue State:\", lqinfo.getQueueState());\n+              .__(\"Queue State:\", lqinfo.getQueueState());\n       renderCommonLeafQueueInfo(ri);\n \n-      html._(InfoBlock.class);\n+      html.__(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void renderLeafQueueInfoWithPartition(Block html) {\n      String nodeLabelDisplay \u003d nodeLabel.length() \u003d\u003d 0\n          ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n      // first display the queue\u0027s label specific details :\n      ResponseInfo ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabelDisplay + \"\\\u0027\");\n      renderQueueCapacityInfo(ri, nodeLabel);\n      html.__(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n\n      // second display the queue specific details :\n      ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n              .__(\"Queue State:\", lqinfo.getQueueState());\n      renderCommonLeafQueueInfo(ri);\n\n      html.__(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "4337b263aa23464a01c316336db2319e2858a2b3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
      "commitDate": "16/10/15 3:06 PM",
      "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/09/15 11:55 PM",
      "commitNameOld": "6c6e734f0baaa7b0f8d6b85963e1ce87bac28b17",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 29.63,
      "commitsBetweenForRepo": 232,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n     private void renderLeafQueueInfoWithPartition(Block html) {\n-      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0\n+      String nodeLabelDisplay \u003d nodeLabel.length() \u003d\u003d 0\n           ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n       // first display the queue\u0027s label specific details :\n       ResponseInfo ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n-              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabel + \"\\\u0027\");\n-      renderQueueCapacityInfo(ri);\n+              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabelDisplay + \"\\\u0027\");\n+      renderQueueCapacityInfo(ri, nodeLabel);\n       html._(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n \n       // second display the queue specific details :\n       ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n               ._(\"Queue State:\", lqinfo.getQueueState());\n       renderCommonLeafQueueInfo(ri);\n \n       html._(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void renderLeafQueueInfoWithPartition(Block html) {\n      String nodeLabelDisplay \u003d nodeLabel.length() \u003d\u003d 0\n          ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n      // first display the queue\u0027s label specific details :\n      ResponseInfo ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabelDisplay + \"\\\u0027\");\n      renderQueueCapacityInfo(ri, nodeLabel);\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n\n      // second display the queue specific details :\n      ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n              ._(\"Queue State:\", lqinfo.getQueueState());\n      renderCommonLeafQueueInfo(ri);\n\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "ae5308fe1d08479da0f3929cc6a57816411e9121": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
      "commitDate": "15/09/15 11:40 AM",
      "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "27/07/15 5:12 PM",
      "commitNameOld": "3572ebd738aa5fa8b0906d75fb12cc6cbb991573",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 49.77,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n     private void renderLeafQueueInfoWithPartition(Block html) {\n-      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\" : nodeLabel;\n+      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0\n+          ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n       // first display the queue\u0027s label specific details :\n       ResponseInfo ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n               + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabel + \"\\\u0027\");\n       renderQueueCapacityInfo(ri);\n       html._(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n \n       // second display the queue specific details :\n       ri \u003d\n           info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n               ._(\"Queue State:\", lqinfo.getQueueState());\n       renderCommonLeafQueueInfo(ri);\n \n       html._(InfoBlock.class);\n       // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n       // another queue\u0027s info\n       ri.clear();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void renderLeafQueueInfoWithPartition(Block html) {\n      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0\n          ? NodeLabel.DEFAULT_NODE_LABEL_PARTITION : nodeLabel;\n      // first display the queue\u0027s label specific details :\n      ResponseInfo ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabel + \"\\\u0027\");\n      renderQueueCapacityInfo(ri);\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n\n      // second display the queue specific details :\n      ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n              ._(\"Queue State:\", lqinfo.getQueueState());\n      renderCommonLeafQueueInfo(ri);\n\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java",
      "extendedDetails": {}
    },
    "0e85044e26da698c45185585310ae0e99448cd80": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3362. Add node label usage in RM CapacityScheduler web UI. (Naganarasimha G R via wangda)\n",
      "commitDate": "13/05/15 5:00 PM",
      "commitName": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+    private void renderLeafQueueInfoWithPartition(Block html) {\n+      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\" : nodeLabel;\n+      // first display the queue\u0027s label specific details :\n+      ResponseInfo ri \u003d\n+          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n+              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabel + \"\\\u0027\");\n+      renderQueueCapacityInfo(ri);\n+      html._(InfoBlock.class);\n+      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n+      // another queue\u0027s info\n+      ri.clear();\n+\n+      // second display the queue specific details :\n+      ri \u003d\n+          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n+              ._(\"Queue State:\", lqinfo.getQueueState());\n+      renderCommonLeafQueueInfo(ri);\n+\n+      html._(InfoBlock.class);\n+      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n+      // another queue\u0027s info\n+      ri.clear();\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void renderLeafQueueInfoWithPartition(Block html) {\n      nodeLabel \u003d nodeLabel.length() \u003d\u003d 0 ? \"\u003cDEFAULT_PARTITION\u003e\" : nodeLabel;\n      // first display the queue\u0027s label specific details :\n      ResponseInfo ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5)\n              + \"\\\u0027 Queue Status for Partition \\\u0027\" + nodeLabel + \"\\\u0027\");\n      renderQueueCapacityInfo(ri);\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n\n      // second display the queue specific details :\n      ri \u003d\n          info(\"\\\u0027\" + lqinfo.getQueuePath().substring(5) + \"\\\u0027 Queue Status\")\n              ._(\"Queue State:\", lqinfo.getQueueState());\n      renderCommonLeafQueueInfo(ri);\n\n      html._(InfoBlock.class);\n      // clear the info contents so this queue\u0027s info doesn\u0027t accumulate into\n      // another queue\u0027s info\n      ri.clear();\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/CapacitySchedulerPage.java"
    }
  }
}