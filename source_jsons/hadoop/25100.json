{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientServiceDelegate.java",
  "functionName": "getLogFilePath",
  "functionId": "getLogFilePath___oldJobID-JobID__oldTaskAttemptID-TaskAttemptID",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
  "functionStartLine": 489,
  "functionEndLine": 536,
  "numCommitsSeen": 50,
  "timeTaken": 1768,
  "changeHistory": [
    "643155cbee54809e1a7febd96cbb7d8111689b38",
    "7359dc32d3781d5318efee4cf6185616c7c00c18",
    "47a381e306877750b5a3ce5d76e0a5ff652ec188"
  ],
  "changeHistoryShort": {
    "643155cbee54809e1a7febd96cbb7d8111689b38": "Ybodychange",
    "7359dc32d3781d5318efee4cf6185616c7c00c18": "Yexceptionschange",
    "47a381e306877750b5a3ce5d76e0a5ff652ec188": "Yintroduced"
  },
  "changeHistoryDetails": {
    "643155cbee54809e1a7febd96cbb7d8111689b38": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5270. Migrated MR app from using BuilderUtil factory methods to individual record factory methods. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1486271 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/05/13 6:46 PM",
      "commitName": "643155cbee54809e1a7febd96cbb7d8111689b38",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/05/13 8:34 PM",
      "commitNameOld": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 11.92,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n       throws IOException {\n     org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n         TypeConverter.toYarn(oldJobID);\n     GetJobReportRequest request \u003d\n         recordFactory.newRecordInstance(GetJobReportRequest.class);\n     request.setJobId(jobId);\n \n     JobReport report \u003d\n         ((GetJobReportResponse) invoke(\"getJobReport\",\n             GetJobReportRequest.class, request)).getJobReport();\n     if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n         JobState.ERROR).contains(report.getJobState())) {\n       if (oldTaskAttemptID !\u003d null) {\n         GetTaskAttemptReportRequest taRequest \u003d\n             recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n         taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n         TaskAttemptReport taReport \u003d\n             ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n                 GetTaskAttemptReportRequest.class, taRequest))\n                 .getTaskAttemptReport();\n         if (taReport.getContainerId() \u003d\u003d null\n             || taReport.getNodeManagerHost() \u003d\u003d null) {\n           throw new IOException(\"Unable to get log information for task: \"\n               + oldTaskAttemptID);\n         }\n         return new LogParams(\n             taReport.getContainerId().toString(),\n             taReport.getContainerId().getApplicationAttemptId()\n                 .getApplicationId().toString(),\n-            BuilderUtils.newNodeId(taReport.getNodeManagerHost(),\n+            NodeId.newInstance(taReport.getNodeManagerHost(),\n                 taReport.getNodeManagerPort()).toString(), report.getUser());\n       } else {\n         if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n           throw new IOException(\"Unable to get log information for job: \"\n               + oldJobID);\n         }\n         AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n         return new LogParams(\n             amInfo.getContainerId().toString(),\n             amInfo.getAppAttemptId().getApplicationId().toString(),\n-            BuilderUtils.newNodeId(amInfo.getNodeManagerHost(),\n+            NodeId.newInstance(amInfo.getNodeManagerHost(),\n                 amInfo.getNodeManagerPort()).toString(), report.getUser());\n       }\n     } else {\n       throw new IOException(\"Cannot get log path for a in-progress job\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n      throws IOException {\n    org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n        TypeConverter.toYarn(oldJobID);\n    GetJobReportRequest request \u003d\n        recordFactory.newRecordInstance(GetJobReportRequest.class);\n    request.setJobId(jobId);\n\n    JobReport report \u003d\n        ((GetJobReportResponse) invoke(\"getJobReport\",\n            GetJobReportRequest.class, request)).getJobReport();\n    if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n        JobState.ERROR).contains(report.getJobState())) {\n      if (oldTaskAttemptID !\u003d null) {\n        GetTaskAttemptReportRequest taRequest \u003d\n            recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n        taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n        TaskAttemptReport taReport \u003d\n            ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n                GetTaskAttemptReportRequest.class, taRequest))\n                .getTaskAttemptReport();\n        if (taReport.getContainerId() \u003d\u003d null\n            || taReport.getNodeManagerHost() \u003d\u003d null) {\n          throw new IOException(\"Unable to get log information for task: \"\n              + oldTaskAttemptID);\n        }\n        return new LogParams(\n            taReport.getContainerId().toString(),\n            taReport.getContainerId().getApplicationAttemptId()\n                .getApplicationId().toString(),\n            NodeId.newInstance(taReport.getNodeManagerHost(),\n                taReport.getNodeManagerPort()).toString(), report.getUser());\n      } else {\n        if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n          throw new IOException(\"Unable to get log information for job: \"\n              + oldJobID);\n        }\n        AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n        return new LogParams(\n            amInfo.getContainerId().toString(),\n            amInfo.getAppAttemptId().getApplicationId().toString(),\n            NodeId.newInstance(amInfo.getNodeManagerHost(),\n                amInfo.getNodeManagerPort()).toString(), report.getUser());\n      }\n    } else {\n      throw new IOException(\"Cannot get log path for a in-progress job\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {}
    },
    "7359dc32d3781d5318efee4cf6185616c7c00c18": {
      "type": "Yexceptionschange",
      "commitMessage": "MAPREDUCE-4067. Changed MRClientProtocol api to throw IOException only (Xuan Gong via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1481695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/05/13 8:34 PM",
      "commitName": "7359dc32d3781d5318efee4cf6185616c7c00c18",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/05/13 3:53 PM",
      "commitNameOld": "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 4.2,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,48 @@\n   public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n-      throws YarnRemoteException, IOException {\n+      throws IOException {\n     org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n         TypeConverter.toYarn(oldJobID);\n     GetJobReportRequest request \u003d\n         recordFactory.newRecordInstance(GetJobReportRequest.class);\n     request.setJobId(jobId);\n \n     JobReport report \u003d\n         ((GetJobReportResponse) invoke(\"getJobReport\",\n             GetJobReportRequest.class, request)).getJobReport();\n     if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n         JobState.ERROR).contains(report.getJobState())) {\n       if (oldTaskAttemptID !\u003d null) {\n         GetTaskAttemptReportRequest taRequest \u003d\n             recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n         taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n         TaskAttemptReport taReport \u003d\n             ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n                 GetTaskAttemptReportRequest.class, taRequest))\n                 .getTaskAttemptReport();\n         if (taReport.getContainerId() \u003d\u003d null\n             || taReport.getNodeManagerHost() \u003d\u003d null) {\n           throw new IOException(\"Unable to get log information for task: \"\n               + oldTaskAttemptID);\n         }\n         return new LogParams(\n             taReport.getContainerId().toString(),\n             taReport.getContainerId().getApplicationAttemptId()\n                 .getApplicationId().toString(),\n             BuilderUtils.newNodeId(taReport.getNodeManagerHost(),\n                 taReport.getNodeManagerPort()).toString(), report.getUser());\n       } else {\n         if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n           throw new IOException(\"Unable to get log information for job: \"\n               + oldJobID);\n         }\n         AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n         return new LogParams(\n             amInfo.getContainerId().toString(),\n             amInfo.getAppAttemptId().getApplicationId().toString(),\n             BuilderUtils.newNodeId(amInfo.getNodeManagerHost(),\n                 amInfo.getNodeManagerPort()).toString(), report.getUser());\n       }\n     } else {\n       throw new IOException(\"Cannot get log path for a in-progress job\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n      throws IOException {\n    org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n        TypeConverter.toYarn(oldJobID);\n    GetJobReportRequest request \u003d\n        recordFactory.newRecordInstance(GetJobReportRequest.class);\n    request.setJobId(jobId);\n\n    JobReport report \u003d\n        ((GetJobReportResponse) invoke(\"getJobReport\",\n            GetJobReportRequest.class, request)).getJobReport();\n    if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n        JobState.ERROR).contains(report.getJobState())) {\n      if (oldTaskAttemptID !\u003d null) {\n        GetTaskAttemptReportRequest taRequest \u003d\n            recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n        taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n        TaskAttemptReport taReport \u003d\n            ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n                GetTaskAttemptReportRequest.class, taRequest))\n                .getTaskAttemptReport();\n        if (taReport.getContainerId() \u003d\u003d null\n            || taReport.getNodeManagerHost() \u003d\u003d null) {\n          throw new IOException(\"Unable to get log information for task: \"\n              + oldTaskAttemptID);\n        }\n        return new LogParams(\n            taReport.getContainerId().toString(),\n            taReport.getContainerId().getApplicationAttemptId()\n                .getApplicationId().toString(),\n            BuilderUtils.newNodeId(taReport.getNodeManagerHost(),\n                taReport.getNodeManagerPort()).toString(), report.getUser());\n      } else {\n        if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n          throw new IOException(\"Unable to get log information for job: \"\n              + oldJobID);\n        }\n        AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n        return new LogParams(\n            amInfo.getContainerId().toString(),\n            amInfo.getAppAttemptId().getApplicationId().toString(),\n            BuilderUtils.newNodeId(amInfo.getNodeManagerHost(),\n                amInfo.getNodeManagerPort()).toString(), report.getUser());\n      }\n    } else {\n      throw new IOException(\"Cannot get log path for a in-progress job\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException, IOException]",
        "newValue": "[IOException]"
      }
    },
    "47a381e306877750b5a3ce5d76e0a5ff652ec188": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3146. Added a MR specific command line to dump logs for a given TaskAttemptID. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195349 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/10/11 11:42 PM",
      "commitName": "47a381e306877750b5a3ce5d76e0a5ff652ec188",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,48 @@\n+  public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n+      throws YarnRemoteException, IOException {\n+    org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n+        TypeConverter.toYarn(oldJobID);\n+    GetJobReportRequest request \u003d\n+        recordFactory.newRecordInstance(GetJobReportRequest.class);\n+    request.setJobId(jobId);\n+\n+    JobReport report \u003d\n+        ((GetJobReportResponse) invoke(\"getJobReport\",\n+            GetJobReportRequest.class, request)).getJobReport();\n+    if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n+        JobState.ERROR).contains(report.getJobState())) {\n+      if (oldTaskAttemptID !\u003d null) {\n+        GetTaskAttemptReportRequest taRequest \u003d\n+            recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n+        taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n+        TaskAttemptReport taReport \u003d\n+            ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n+                GetTaskAttemptReportRequest.class, taRequest))\n+                .getTaskAttemptReport();\n+        if (taReport.getContainerId() \u003d\u003d null\n+            || taReport.getNodeManagerHost() \u003d\u003d null) {\n+          throw new IOException(\"Unable to get log information for task: \"\n+              + oldTaskAttemptID);\n+        }\n+        return new LogParams(\n+            taReport.getContainerId().toString(),\n+            taReport.getContainerId().getApplicationAttemptId()\n+                .getApplicationId().toString(),\n+            BuilderUtils.newNodeId(taReport.getNodeManagerHost(),\n+                taReport.getNodeManagerPort()).toString(), report.getUser());\n+      } else {\n+        if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n+          throw new IOException(\"Unable to get log information for job: \"\n+              + oldJobID);\n+        }\n+        AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n+        return new LogParams(\n+            amInfo.getContainerId().toString(),\n+            amInfo.getAppAttemptId().getApplicationId().toString(),\n+            BuilderUtils.newNodeId(amInfo.getNodeManagerHost(),\n+                amInfo.getNodeManagerPort()).toString(), report.getUser());\n+      }\n+    } else {\n+      throw new IOException(\"Cannot get log path for a in-progress job\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public LogParams getLogFilePath(JobID oldJobID, TaskAttemptID oldTaskAttemptID)\n      throws YarnRemoteException, IOException {\n    org.apache.hadoop.mapreduce.v2.api.records.JobId jobId \u003d\n        TypeConverter.toYarn(oldJobID);\n    GetJobReportRequest request \u003d\n        recordFactory.newRecordInstance(GetJobReportRequest.class);\n    request.setJobId(jobId);\n\n    JobReport report \u003d\n        ((GetJobReportResponse) invoke(\"getJobReport\",\n            GetJobReportRequest.class, request)).getJobReport();\n    if (EnumSet.of(JobState.SUCCEEDED, JobState.FAILED, JobState.KILLED,\n        JobState.ERROR).contains(report.getJobState())) {\n      if (oldTaskAttemptID !\u003d null) {\n        GetTaskAttemptReportRequest taRequest \u003d\n            recordFactory.newRecordInstance(GetTaskAttemptReportRequest.class);\n        taRequest.setTaskAttemptId(TypeConverter.toYarn(oldTaskAttemptID));\n        TaskAttemptReport taReport \u003d\n            ((GetTaskAttemptReportResponse) invoke(\"getTaskAttemptReport\",\n                GetTaskAttemptReportRequest.class, taRequest))\n                .getTaskAttemptReport();\n        if (taReport.getContainerId() \u003d\u003d null\n            || taReport.getNodeManagerHost() \u003d\u003d null) {\n          throw new IOException(\"Unable to get log information for task: \"\n              + oldTaskAttemptID);\n        }\n        return new LogParams(\n            taReport.getContainerId().toString(),\n            taReport.getContainerId().getApplicationAttemptId()\n                .getApplicationId().toString(),\n            BuilderUtils.newNodeId(taReport.getNodeManagerHost(),\n                taReport.getNodeManagerPort()).toString(), report.getUser());\n      } else {\n        if (report.getAMInfos() \u003d\u003d null || report.getAMInfos().size() \u003d\u003d 0) {\n          throw new IOException(\"Unable to get log information for job: \"\n              + oldJobID);\n        }\n        AMInfo amInfo \u003d report.getAMInfos().get(report.getAMInfos().size() - 1);\n        return new LogParams(\n            amInfo.getContainerId().toString(),\n            amInfo.getAppAttemptId().getApplicationId().toString(),\n            BuilderUtils.newNodeId(amInfo.getNodeManagerHost(),\n                amInfo.getNodeManagerPort()).toString(), report.getUser());\n      }\n    } else {\n      throw new IOException(\"Cannot get log path for a in-progress job\");\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-jobclient/src/main/java/org/apache/hadoop/mapred/ClientServiceDelegate.java"
    }
  }
}