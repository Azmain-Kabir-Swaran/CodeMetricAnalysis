{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairCallQueue.java",
  "functionName": "offer",
  "functionId": "offer___e-E__timeout-long__unit-TimeUnit",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java",
  "functionStartLine": 256,
  "functionEndLine": 265,
  "numCommitsSeen": 14,
  "timeTaken": 1331,
  "changeHistory": [
    "0c01cf57987bcc7a17154a3538960b67f625a9e5",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
    "4b3a6b87221076a6b5df2bf4243575018e5f1793"
  ],
  "changeHistoryShort": {
    "0c01cf57987bcc7a17154a3538960b67f625a9e5": "Ybodychange",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Ybodychange",
    "4b3a6b87221076a6b5df2bf4243575018e5f1793": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0c01cf57987bcc7a17154a3538960b67f625a9e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14033. Reduce fair call queue lock contention. Contributed by Daryn Sharp.\n",
      "commitDate": "09/02/17 2:17 PM",
      "commitName": "0c01cf57987bcc7a17154a3538960b67f625a9e5",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "09/02/17 8:04 AM",
      "commitNameOld": "a0bfb4150464013a618f30c2e38d88fc6de11ad2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public boolean offer(E e, long timeout, TimeUnit unit)\n       throws InterruptedException {\n     int priorityLevel \u003d e.getPriorityLevel();\n     BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n     boolean ret \u003d q.offer(e, timeout, unit);\n-\n-    signalNotEmpty();\n-\n+    if (ret) {\n+      signalNotEmpty();\n+    }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean offer(E e, long timeout, TimeUnit unit)\n      throws InterruptedException {\n    int priorityLevel \u003d e.getPriorityLevel();\n    BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n    boolean ret \u003d q.offer(e, timeout, unit);\n    if (ret) {\n      signalNotEmpty();\n    }\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java",
      "extendedDetails": {}
    },
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "22/08/14 3:16 PM",
      "commitNameOld": "4b3a6b87221076a6b5df2bf4243575018e5f1793",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 586.73,
      "commitsBetweenForRepo": 4669,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   public boolean offer(E e, long timeout, TimeUnit unit)\n       throws InterruptedException {\n-    int priorityLevel \u003d scheduler.getPriorityLevel(e);\n+    int priorityLevel \u003d e.getPriorityLevel();\n     BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n     boolean ret \u003d q.offer(e, timeout, unit);\n \n     signalNotEmpty();\n \n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean offer(E e, long timeout, TimeUnit unit)\n      throws InterruptedException {\n    int priorityLevel \u003d e.getPriorityLevel();\n    BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n    boolean ret \u003d q.offer(e, timeout, unit);\n\n    signalNotEmpty();\n\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java",
      "extendedDetails": {}
    },
    "4b3a6b87221076a6b5df2bf4243575018e5f1793": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10282. Create a FairCallQueue: a multi-level call queue which schedules incoming calls and multiplexes outgoing calls. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1619938 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/14 3:16 PM",
      "commitName": "4b3a6b87221076a6b5df2bf4243575018e5f1793",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,10 @@\n+  public boolean offer(E e, long timeout, TimeUnit unit)\n+      throws InterruptedException {\n+    int priorityLevel \u003d scheduler.getPriorityLevel(e);\n+    BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n+    boolean ret \u003d q.offer(e, timeout, unit);\n+\n+    signalNotEmpty();\n+\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean offer(E e, long timeout, TimeUnit unit)\n      throws InterruptedException {\n    int priorityLevel \u003d scheduler.getPriorityLevel(e);\n    BlockingQueue\u003cE\u003e q \u003d this.queues.get(priorityLevel);\n    boolean ret \u003d q.offer(e, timeout, unit);\n\n    signalNotEmpty();\n\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java"
    }
  }
}