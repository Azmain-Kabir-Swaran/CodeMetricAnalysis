{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConverterUtils.java",
  "functionName": "toContainerId",
  "functionId": "toContainerId___containerIdStr-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
  "functionStartLine": 139,
  "functionEndLine": 141,
  "numCommitsSeen": 34,
  "timeTaken": 8000,
  "changeHistory": [
    "4cbaa74f623ac8ee2c5b7308ac33a807a33e17f7",
    "95a41bf35d8ba0a1ec087f456914231103d98fb9",
    "0974f434c47ffbf4b77a8478937fd99106c8ddbd",
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
    "b549c107825581b15fd14494099a943ff3213c6f",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "4cbaa74f623ac8ee2c5b7308ac33a807a33e17f7": "Ybodychange",
    "95a41bf35d8ba0a1ec087f456914231103d98fb9": "Ybodychange",
    "0974f434c47ffbf4b77a8478937fd99106c8ddbd": "Ybodychange",
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": "Ymultichange(Yexceptionschange,Ybodychange)",
    "b549c107825581b15fd14494099a943ff3213c6f": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4cbaa74f623ac8ee2c5b7308ac33a807a33e17f7": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-3157. Refactor the exception handling in ConverterUtils#to*Id. Contributed by Bibin A Chundatt.\"\n\nThis reverts commit 95a41bf35d8ba0a1ec087f456914231103d98fb9.\n",
      "commitDate": "12/02/15 1:48 AM",
      "commitName": "4cbaa74f623ac8ee2c5b7308ac33a807a33e17f7",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "12/02/15 1:41 AM",
      "commitNameOld": "95a41bf35d8ba0a1ec087f456914231103d98fb9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,3 @@\n   public static ContainerId toContainerId(String containerIdStr) {\n-    try {\n-      return ContainerId.fromString(containerIdStr);\n-    } catch (NoSuchElementException e) {\n-      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n-          + containerIdStr, e);\n-    }\n+    return ContainerId.fromString(containerIdStr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    return ContainerId.fromString(containerIdStr);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {}
    },
    "95a41bf35d8ba0a1ec087f456914231103d98fb9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3157. Refactor the exception handling in ConverterUtils#to*Id. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/02/15 1:41 AM",
      "commitName": "95a41bf35d8ba0a1ec087f456914231103d98fb9",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "05/02/15 3:13 PM",
      "commitNameOld": "b77ff37686e01b7497d3869fbc62789a5b123c0a",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 6.44,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,8 @@\n   public static ContainerId toContainerId(String containerIdStr) {\n-    return ContainerId.fromString(containerIdStr);\n+    try {\n+      return ContainerId.fromString(containerIdStr);\n+    } catch (NoSuchElementException e) {\n+      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n+          + containerIdStr, e);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    try {\n      return ContainerId.fromString(containerIdStr);\n    } catch (NoSuchElementException e) {\n      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n          + containerIdStr, e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {}
    },
    "0974f434c47ffbf4b77a8478937fd99106c8ddbd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2515. Updated ConverterUtils#toContainerId to parse epoch. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "07/09/14 6:29 PM",
      "commitName": "0974f434c47ffbf4b77a8478937fd99106c8ddbd",
      "commitAuthor": "Jian He",
      "commitDateOld": "04/03/14 12:39 PM",
      "commitNameOld": "88245b6a41171f939b22186c533ea2bc7994f9b3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 187.2,
      "commitsBetweenForRepo": 1332,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,3 @@\n   public static ContainerId toContainerId(String containerIdStr) {\n-    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n-    if (!it.next().equals(CONTAINER_PREFIX)) {\n-      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n-          + containerIdStr);\n-    }\n-    try {\n-      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n-      ContainerId containerId \u003d\n-          ContainerId.newInstance(appAttemptID, Integer.parseInt(it.next()));\n-      return containerId;\n-    } catch (NumberFormatException n) {\n-      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n-          + containerIdStr, n);\n-    }\n+    return ContainerId.fromString(containerIdStr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    return ContainerId.fromString(containerIdStr);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {}
    },
    "39f019f41392d9e46ea1dc86ddd5563aabbeda1e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-735. Make ApplicationAttemptId, ContainerId and NodeId immutable. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/05/13 5:14 PM",
      "commitName": "39f019f41392d9e46ea1dc86ddd5563aabbeda1e",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "30/05/13 1:18 PM",
      "commitNameOld": "982753dc8e49ad51ad75698e0b30e2c75a4605a6",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.16,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   public static ContainerId toContainerId(String containerIdStr) {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n     if (!it.next().equals(CONTAINER_PREFIX)) {\n       throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n           + containerIdStr);\n     }\n     try {\n       ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n-      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n-      containerId.setApplicationAttemptId(appAttemptID);\n-      containerId.setId(Integer.parseInt(it.next()));\n+      ContainerId containerId \u003d\n+          ContainerId.newInstance(appAttemptID, Integer.parseInt(it.next()));\n       return containerId;\n     } catch (NumberFormatException n) {\n       throw new IllegalArgumentException(\"Invalid ContainerId: \"\n           + containerIdStr, n);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n          + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d\n          ContainerId.newInstance(appAttemptID, Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n          + containerIdStr, n);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n          + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n          + containerIdStr, n);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java"
      }
    },
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/11 10:21 PM",
      "commitName": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185976 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/10/11 10:21 PM",
          "commitName": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "30/09/11 5:46 AM",
          "commitNameOld": "063e33a862f99ce93b8399924c35d39ccd880f01",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 18.69,
          "commitsBetweenForRepo": 141,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public static ContainerId toContainerId(String containerIdStr)\n-      throws IOException {\n+  public static ContainerId toContainerId(String containerIdStr) {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n     if (!it.next().equals(CONTAINER_PREFIX)) {\n-      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n+      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n+          + containerIdStr);\n     }\n     try {\n       ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n       ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n       containerId.setApplicationAttemptId(appAttemptID);\n       containerId.setId(Integer.parseInt(it.next()));\n       return containerId;\n     } catch (NumberFormatException n) {\n-      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n+      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n+          + containerIdStr, n);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n          + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n          + containerIdStr, n);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185976 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/10/11 10:21 PM",
          "commitName": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "30/09/11 5:46 AM",
          "commitNameOld": "063e33a862f99ce93b8399924c35d39ccd880f01",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 18.69,
          "commitsBetweenForRepo": 141,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  public static ContainerId toContainerId(String containerIdStr)\n-      throws IOException {\n+  public static ContainerId toContainerId(String containerIdStr) {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n     if (!it.next().equals(CONTAINER_PREFIX)) {\n-      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n+      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n+          + containerIdStr);\n     }\n     try {\n       ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n       ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n       containerId.setApplicationAttemptId(appAttemptID);\n       containerId.setId(Integer.parseInt(it.next()));\n       return containerId;\n     } catch (NumberFormatException n) {\n-      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n+      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n+          + containerIdStr, n);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerId toContainerId(String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IllegalArgumentException(\"Invalid ContainerId prefix: \"\n          + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IllegalArgumentException(\"Invalid ContainerId: \"\n          + containerIdStr, n);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "b549c107825581b15fd14494099a943ff3213c6f": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/11 7:07 AM",
      "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/09/11 7:07 AM",
          "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/09/11 5:05 PM",
          "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 10.58,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,16 @@\n-  public static ContainerId toContainerId(RecordFactory recordFactory,\n-      String containerIdStr) {\n+  public static ContainerId toContainerId(String containerIdStr)\n+      throws IOException {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n-    it.next(); // prefix. TODO: Validate container prefix\n-    ApplicationAttemptId appAttemptID \u003d \n-        toApplicationAttemptId(recordFactory, it);\n-    ContainerId containerId \u003d\n-        recordFactory.newRecordInstance(ContainerId.class);\n-    containerId.setApplicationAttemptId(appAttemptID);\n-    containerId.setId(Integer.parseInt(it.next()));\n-    return containerId;\n+    if (!it.next().equals(CONTAINER_PREFIX)) {\n+      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n+    }\n+    try {\n+      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n+      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n+      containerId.setApplicationAttemptId(appAttemptID);\n+      containerId.setId(Integer.parseInt(it.next()));\n+      return containerId;\n+    } catch (NumberFormatException n) {\n+      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerId toContainerId(String containerIdStr)\n      throws IOException {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
          "extendedDetails": {
            "oldValue": "[recordFactory-RecordFactory, containerIdStr-String]",
            "newValue": "[containerIdStr-String]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/09/11 7:07 AM",
          "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/09/11 5:05 PM",
          "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 10.58,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,16 @@\n-  public static ContainerId toContainerId(RecordFactory recordFactory,\n-      String containerIdStr) {\n+  public static ContainerId toContainerId(String containerIdStr)\n+      throws IOException {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n-    it.next(); // prefix. TODO: Validate container prefix\n-    ApplicationAttemptId appAttemptID \u003d \n-        toApplicationAttemptId(recordFactory, it);\n-    ContainerId containerId \u003d\n-        recordFactory.newRecordInstance(ContainerId.class);\n-    containerId.setApplicationAttemptId(appAttemptID);\n-    containerId.setId(Integer.parseInt(it.next()));\n-    return containerId;\n+    if (!it.next().equals(CONTAINER_PREFIX)) {\n+      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n+    }\n+    try {\n+      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n+      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n+      containerId.setApplicationAttemptId(appAttemptID);\n+      containerId.setId(Integer.parseInt(it.next()));\n+      return containerId;\n+    } catch (NumberFormatException n) {\n+      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerId toContainerId(String containerIdStr)\n      throws IOException {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/09/11 7:07 AM",
          "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "12/09/11 5:05 PM",
          "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 10.58,
          "commitsBetweenForRepo": 72,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,16 @@\n-  public static ContainerId toContainerId(RecordFactory recordFactory,\n-      String containerIdStr) {\n+  public static ContainerId toContainerId(String containerIdStr)\n+      throws IOException {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n-    it.next(); // prefix. TODO: Validate container prefix\n-    ApplicationAttemptId appAttemptID \u003d \n-        toApplicationAttemptId(recordFactory, it);\n-    ContainerId containerId \u003d\n-        recordFactory.newRecordInstance(ContainerId.class);\n-    containerId.setApplicationAttemptId(appAttemptID);\n-    containerId.setId(Integer.parseInt(it.next()));\n-    return containerId;\n+    if (!it.next().equals(CONTAINER_PREFIX)) {\n+      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n+    }\n+    try {\n+      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n+      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n+      containerId.setApplicationAttemptId(appAttemptID);\n+      containerId.setId(Integer.parseInt(it.next()));\n+      return containerId;\n+    } catch (NumberFormatException n) {\n+      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ContainerId toContainerId(String containerIdStr)\n      throws IOException {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    if (!it.next().equals(CONTAINER_PREFIX)) {\n      throw new IOException(\"Invalid ContainerId prefix: \" + containerIdStr);\n    }\n    try {\n      ApplicationAttemptId appAttemptID \u003d toApplicationAttemptId(it);\n      ContainerId containerId \u003d Records.newRecord(ContainerId.class);\n      containerId.setApplicationAttemptId(appAttemptID);\n      containerId.setId(Integer.parseInt(it.next()));\n      return containerId;\n    } catch (NumberFormatException n) {\n      throw new IOException(\"Invalid ContainerId: \" + containerIdStr, n);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 5:05 PM",
      "commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/08/11 4:27 PM",
      "commitNameOld": "fb6ecb9b27798a923ca290ba5d23368e3a820a6c",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 14.03,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public static ContainerId toContainerId(RecordFactory recordFactory,\n       String containerIdStr) {\n     Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n     it.next(); // prefix. TODO: Validate container prefix\n-    ApplicationId appID \u003d toApplicationId(recordFactory, it);\n+    ApplicationAttemptId appAttemptID \u003d \n+        toApplicationAttemptId(recordFactory, it);\n     ContainerId containerId \u003d\n         recordFactory.newRecordInstance(ContainerId.class);\n-    containerId.setAppId(appID);\n+    containerId.setApplicationAttemptId(appAttemptID);\n     containerId.setId(Integer.parseInt(it.next()));\n     return containerId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(RecordFactory recordFactory,\n      String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    it.next(); // prefix. TODO: Validate container prefix\n    ApplicationAttemptId appAttemptID \u003d \n        toApplicationAttemptId(recordFactory, it);\n    ContainerId containerId \u003d\n        recordFactory.newRecordInstance(ContainerId.class);\n    containerId.setApplicationAttemptId(appAttemptID);\n    containerId.setId(Integer.parseInt(it.next()));\n    return containerId;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static ContainerId toContainerId(RecordFactory recordFactory,\n      String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    it.next(); // prefix. TODO: Validate container prefix\n    ApplicationId appID \u003d toApplicationId(recordFactory, it);\n    ContainerId containerId \u003d\n        recordFactory.newRecordInstance(ContainerId.class);\n    containerId.setAppId(appID);\n    containerId.setId(Integer.parseInt(it.next()));\n    return containerId;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  public static ContainerId toContainerId(RecordFactory recordFactory,\n+      String containerIdStr) {\n+    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n+    it.next(); // prefix. TODO: Validate container prefix\n+    ApplicationId appID \u003d toApplicationId(recordFactory, it);\n+    ContainerId containerId \u003d\n+        recordFactory.newRecordInstance(ContainerId.class);\n+    containerId.setAppId(appID);\n+    containerId.setId(Integer.parseInt(it.next()));\n+    return containerId;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ContainerId toContainerId(RecordFactory recordFactory,\n      String containerIdStr) {\n    Iterator\u003cString\u003e it \u003d _split(containerIdStr).iterator();\n    it.next(); // prefix. TODO: Validate container prefix\n    ApplicationId appID \u003d toApplicationId(recordFactory, it);\n    ContainerId containerId \u003d\n        recordFactory.newRecordInstance(ContainerId.class);\n    containerId.setAppId(appID);\n    containerId.setId(Integer.parseInt(it.next()));\n    return containerId;\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/ConverterUtils.java"
    }
  }
}