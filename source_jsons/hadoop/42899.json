{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppImpl.java",
  "functionName": "updateApplicationTimeout",
  "functionId": "updateApplicationTimeout___updateTimeout-Map__ApplicationTimeoutType,Long__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java",
  "functionStartLine": 1848,
  "functionEndLine": 1863,
  "numCommitsSeen": 170,
  "timeTaken": 2871,
  "changeHistory": [
    "bcc15c6290b3912a054323695a6a931b0de163bd"
  ],
  "changeHistoryShort": {
    "bcc15c6290b3912a054323695a6a931b0de163bd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bcc15c6290b3912a054323695a6a931b0de163bd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5611. Provide an API to update lifetime of an application. Contributed by Rohith Sharma K S\n",
      "commitDate": "09/11/16 4:08 PM",
      "commitName": "bcc15c6290b3912a054323695a6a931b0de163bd",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public void updateApplicationTimeout(\n+      Map\u003cApplicationTimeoutType, Long\u003e updateTimeout) {\n+    this.writeLock.lock();\n+    try {\n+      if (COMPLETED_APP_STATES.contains(getState())) {\n+        return;\n+      }\n+      // update monitoring service\n+      this.rmContext.getRMAppLifetimeMonitor()\n+          .updateApplicationTimeouts(getApplicationId(), updateTimeout);\n+      this.applicationTimeouts.putAll(updateTimeout);\n+\n+    } finally {\n+      this.writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateApplicationTimeout(\n      Map\u003cApplicationTimeoutType, Long\u003e updateTimeout) {\n    this.writeLock.lock();\n    try {\n      if (COMPLETED_APP_STATES.contains(getState())) {\n        return;\n      }\n      // update monitoring service\n      this.rmContext.getRMAppLifetimeMonitor()\n          .updateApplicationTimeouts(getApplicationId(), updateTimeout);\n      this.applicationTimeouts.putAll(updateTimeout);\n\n    } finally {\n      this.writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmapp/RMAppImpl.java"
    }
  }
}