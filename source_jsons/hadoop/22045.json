{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Fetcher.java",
  "functionName": "checkTimeoutOrRetry",
  "functionId": "checkTimeoutOrRetry___host-MapHost__ioe-IOException",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/Fetcher.java",
  "functionStartLine": 606,
  "functionEndLine": 625,
  "numCommitsSeen": 35,
  "timeTaken": 1612,
  "changeHistory": [
    "eccb7d46efbf07abcc6a01bd5e7d682f6815b824",
    "177e8090f5809beb3ebcb656cd0affbb3f487de8",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e"
  ],
  "changeHistoryShort": {
    "eccb7d46efbf07abcc6a01bd5e7d682f6815b824": "Ybodychange",
    "177e8090f5809beb3ebcb656cd0affbb3f487de8": "Ybodychange",
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "eccb7d46efbf07abcc6a01bd5e7d682f6815b824": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6303. Read timeout when retrying a fetch error can be fatal to a reducer. Contributed by Jason Lowe.\n",
      "commitDate": "02/04/15 12:13 PM",
      "commitName": "eccb7d46efbf07abcc6a01bd5e7d682f6815b824",
      "commitAuthor": "Junping Du",
      "commitDateOld": "13/11/14 7:42 AM",
      "commitNameOld": "177e8090f5809beb3ebcb656cd0affbb3f487de8",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 140.15,
      "commitsBetweenForRepo": 1085,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n       throws IOException {\n     // First time to retry.\n     long currentTime \u003d Time.monotonicNow();\n     if (retryStartTime \u003d\u003d 0) {\n        retryStartTime \u003d currentTime;\n     }\n   \n     // Retry is not timeout, let\u0027s do retry with throwing an exception.\n     if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n       LOG.warn(\"Shuffle output from \" + host.getHostName() +\n-          \" failed, retry it.\");\n+          \" failed, retry it.\", ioe);\n       throw ioe;\n     } else {\n       // timeout, prepare to be failed.\n       LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n           + \"after \" + fetchRetryTimeout + \" milliseconds.\");\n       \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n      throws IOException {\n    // First time to retry.\n    long currentTime \u003d Time.monotonicNow();\n    if (retryStartTime \u003d\u003d 0) {\n       retryStartTime \u003d currentTime;\n    }\n  \n    // Retry is not timeout, let\u0027s do retry with throwing an exception.\n    if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n      LOG.warn(\"Shuffle output from \" + host.getHostName() +\n          \" failed, retry it.\", ioe);\n      throw ioe;\n    } else {\n      // timeout, prepare to be failed.\n      LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n          + \"after \" + fetchRetryTimeout + \" milliseconds.\");\n      \n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/Fetcher.java",
      "extendedDetails": {}
    },
    "177e8090f5809beb3ebcb656cd0affbb3f487de8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6156. Fetcher - connect() doesn\u0027t handle connection refused correctly. Contributed by Junping Du\n",
      "commitDate": "13/11/14 7:42 AM",
      "commitName": "177e8090f5809beb3ebcb656cd0affbb3f487de8",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "15/10/14 8:52 AM",
      "commitNameOld": "b9edad64034a9c8a121ec2b37792c190ba561e26",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 28.99,
      "commitsBetweenForRepo": 290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n       throws IOException {\n     // First time to retry.\n     long currentTime \u003d Time.monotonicNow();\n     if (retryStartTime \u003d\u003d 0) {\n        retryStartTime \u003d currentTime;\n     }\n   \n     // Retry is not timeout, let\u0027s do retry with throwing an exception.\n     if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n       LOG.warn(\"Shuffle output from \" + host.getHostName() +\n           \" failed, retry it.\");\n       throw ioe;\n     } else {\n       // timeout, prepare to be failed.\n       LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n-          + \"after \" + fetchRetryTimeout + \"milliseconds.\");\n+          + \"after \" + fetchRetryTimeout + \" milliseconds.\");\n       \n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n      throws IOException {\n    // First time to retry.\n    long currentTime \u003d Time.monotonicNow();\n    if (retryStartTime \u003d\u003d 0) {\n       retryStartTime \u003d currentTime;\n    }\n  \n    // Retry is not timeout, let\u0027s do retry with throwing an exception.\n    if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n      LOG.warn(\"Shuffle output from \" + host.getHostName() +\n          \" failed, retry it.\");\n      throw ioe;\n    } else {\n      // timeout, prepare to be failed.\n      LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n          + \"after \" + fetchRetryTimeout + \" milliseconds.\");\n      \n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/Fetcher.java",
      "extendedDetails": {}
    },
    "2c3da25fd718b3a9c1ed67f05b577975ae613f4e": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5891. Improved shuffle error handling across NM restarts. Contributed by Junping Du\n",
      "commitDate": "18/09/14 3:00 PM",
      "commitName": "2c3da25fd718b3a9c1ed67f05b577975ae613f4e",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,20 @@\n+  private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n+      throws IOException {\n+    // First time to retry.\n+    long currentTime \u003d Time.monotonicNow();\n+    if (retryStartTime \u003d\u003d 0) {\n+       retryStartTime \u003d currentTime;\n+    }\n+  \n+    // Retry is not timeout, let\u0027s do retry with throwing an exception.\n+    if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n+      LOG.warn(\"Shuffle output from \" + host.getHostName() +\n+          \" failed, retry it.\");\n+      throw ioe;\n+    } else {\n+      // timeout, prepare to be failed.\n+      LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n+          + \"after \" + fetchRetryTimeout + \"milliseconds.\");\n+      \n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkTimeoutOrRetry(MapHost host, IOException ioe)\n      throws IOException {\n    // First time to retry.\n    long currentTime \u003d Time.monotonicNow();\n    if (retryStartTime \u003d\u003d 0) {\n       retryStartTime \u003d currentTime;\n    }\n  \n    // Retry is not timeout, let\u0027s do retry with throwing an exception.\n    if (currentTime - retryStartTime \u003c this.fetchRetryTimeout) {\n      LOG.warn(\"Shuffle output from \" + host.getHostName() +\n          \" failed, retry it.\");\n      throw ioe;\n    } else {\n      // timeout, prepare to be failed.\n      LOG.warn(\"Timeout for copying MapOutput with retry on host \" + host \n          + \"after \" + fetchRetryTimeout + \"milliseconds.\");\n      \n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/task/reduce/Fetcher.java"
    }
  }
}