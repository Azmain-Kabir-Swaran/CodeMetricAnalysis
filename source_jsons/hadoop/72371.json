{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RpcProgram.java",
  "functionName": "sendAcceptedReply",
  "functionId": "sendAcceptedReply___call-RpcCall__remoteAddress-SocketAddress__acceptState-AcceptState__ctx-ChannelHandlerContext",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/RpcProgram.java",
  "functionStartLine": 214,
  "functionEndLine": 229,
  "numCommitsSeen": 15,
  "timeTaken": 761,
  "changeHistory": [
    "da3992b4e39019cd02e95460518b5d13d0e4eecd"
  ],
  "changeHistoryShort": {
    "da3992b4e39019cd02e95460518b5d13d0e4eecd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "da3992b4e39019cd02e95460518b5d13d0e4eecd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6406. Add capability for NFS gateway to reject connections from unprivileged ports. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595351 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/14 2:23 PM",
      "commitName": "da3992b4e39019cd02e95460518b5d13d0e4eecd",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,16 @@\n+  private void sendAcceptedReply(RpcCall call, SocketAddress remoteAddress,\n+      AcceptState acceptState, ChannelHandlerContext ctx) {\n+    RpcAcceptedReply reply \u003d RpcAcceptedReply.getInstance(call.getXid(),\n+        acceptState, Verifier.VERIFIER_NONE);\n+\n+    XDR out \u003d new XDR();\n+    reply.write(out);\n+    if (acceptState \u003d\u003d AcceptState.PROG_MISMATCH) {\n+      out.writeInt(lowProgVersion);\n+      out.writeInt(highProgVersion);\n+    }\n+    ChannelBuffer b \u003d ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap()\n+        .buffer());\n+    RpcResponse rsp \u003d new RpcResponse(b, remoteAddress);\n+    RpcUtil.sendRpcResponse(ctx, rsp);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendAcceptedReply(RpcCall call, SocketAddress remoteAddress,\n      AcceptState acceptState, ChannelHandlerContext ctx) {\n    RpcAcceptedReply reply \u003d RpcAcceptedReply.getInstance(call.getXid(),\n        acceptState, Verifier.VERIFIER_NONE);\n\n    XDR out \u003d new XDR();\n    reply.write(out);\n    if (acceptState \u003d\u003d AcceptState.PROG_MISMATCH) {\n      out.writeInt(lowProgVersion);\n      out.writeInt(highProgVersion);\n    }\n    ChannelBuffer b \u003d ChannelBuffers.wrappedBuffer(out.asReadOnlyWrap()\n        .buffer());\n    RpcResponse rsp \u003d new RpcResponse(b, remoteAddress);\n    RpcUtil.sendRpcResponse(ctx, rsp);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/RpcProgram.java"
    }
  }
}