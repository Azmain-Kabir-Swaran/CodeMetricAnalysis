{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "fetchAppsWithDemand",
  "functionId": "fetchAppsWithDemand___assignment-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 373,
  "functionEndLine": 388,
  "numCommitsSeen": 117,
  "timeTaken": 2895,
  "changeHistory": [
    "694e680d20dc07f634b539537021b09d9316601c",
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
    "10468529a9b858bd945e7ecb063c9c1438efa474"
  ],
  "changeHistoryShort": {
    "694e680d20dc07f634b539537021b09d9316601c": "Ybodychange",
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": "Ymultichange(Yparameterchange,Ybodychange)",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Yintroduced"
  },
  "changeHistoryDetails": {
    "694e680d20dc07f634b539537021b09d9316601c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6222. TestFairScheduler.testReservationMetrics is flaky. (Yufei Gu via kasha)\n",
      "commitDate": "23/02/17 3:21 PM",
      "commitName": "694e680d20dc07f634b539537021b09d9316601c",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/02/17 11:51 PM",
      "commitNameOld": "11be3f70e029c2324b167563168c8a254d234aef",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 7.65,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n     TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n         new TreeSet\u003c\u003e(policy.getComparator());\n     readLock.lock();\n     try {\n       for (FSAppAttempt app : runnableApps) {\n-        Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n-        if (!Resources.isNone(pending) \u0026\u0026\n+        if (!Resources.isNone(app.getPendingDemand()) \u0026\u0026\n             (assignment || app.shouldCheckForStarvation())) {\n           pendingForResourceApps.add(app);\n         }\n       }\n     } finally {\n       readLock.unlock();\n     }\n     return pendingForResourceApps;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n    TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n        new TreeSet\u003c\u003e(policy.getComparator());\n    readLock.lock();\n    try {\n      for (FSAppAttempt app : runnableApps) {\n        if (!Resources.isNone(app.getPendingDemand()) \u0026\u0026\n            (assignment || app.shouldCheckForStarvation())) {\n          pendingForResourceApps.add(app);\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return pendingForResourceApps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "6c25dbcdc0517a825b92fb16444aa1d3761e160c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6163. FS Preemption is a trickle for severely starved applications. (kasha)\n",
      "commitDate": "15/02/17 11:16 PM",
      "commitName": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6163. FS Preemption is a trickle for severely starved applications. (kasha)\n",
          "commitDate": "15/02/17 11:16 PM",
          "commitName": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/02/17 10:23 AM",
          "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 41,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand() {\n+  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n     TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n         new TreeSet\u003c\u003e(policy.getComparator());\n     readLock.lock();\n     try {\n       for (FSAppAttempt app : runnableApps) {\n         Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n-        if (!pending.equals(none())) {\n+        if (!Resources.isNone(pending) \u0026\u0026\n+            (assignment || app.shouldCheckForStarvation())) {\n           pendingForResourceApps.add(app);\n         }\n       }\n     } finally {\n       readLock.unlock();\n     }\n     return pendingForResourceApps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n    TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n        new TreeSet\u003c\u003e(policy.getComparator());\n    readLock.lock();\n    try {\n      for (FSAppAttempt app : runnableApps) {\n        Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n        if (!Resources.isNone(pending) \u0026\u0026\n            (assignment || app.shouldCheckForStarvation())) {\n          pendingForResourceApps.add(app);\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return pendingForResourceApps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[assignment-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6163. FS Preemption is a trickle for severely starved applications. (kasha)\n",
          "commitDate": "15/02/17 11:16 PM",
          "commitName": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "09/02/17 10:23 AM",
          "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 6.54,
          "commitsBetweenForRepo": 41,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n-  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand() {\n+  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n     TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n         new TreeSet\u003c\u003e(policy.getComparator());\n     readLock.lock();\n     try {\n       for (FSAppAttempt app : runnableApps) {\n         Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n-        if (!pending.equals(none())) {\n+        if (!Resources.isNone(pending) \u0026\u0026\n+            (assignment || app.shouldCheckForStarvation())) {\n           pendingForResourceApps.add(app);\n         }\n       }\n     } finally {\n       readLock.unlock();\n     }\n     return pendingForResourceApps;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand(boolean assignment) {\n    TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n        new TreeSet\u003c\u003e(policy.getComparator());\n    readLock.lock();\n    try {\n      for (FSAppAttempt app : runnableApps) {\n        Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n        if (!Resources.isNone(pending) \u0026\u0026\n            (assignment || app.shouldCheckForStarvation())) {\n          pendingForResourceApps.add(app);\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return pendingForResourceApps;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,16 @@\n+  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand() {\n+    TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n+        new TreeSet\u003c\u003e(policy.getComparator());\n+    readLock.lock();\n+    try {\n+      for (FSAppAttempt app : runnableApps) {\n+        Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n+        if (!pending.equals(none())) {\n+          pendingForResourceApps.add(app);\n+        }\n+      }\n+    } finally {\n+      readLock.unlock();\n+    }\n+    return pendingForResourceApps;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TreeSet\u003cFSAppAttempt\u003e fetchAppsWithDemand() {\n    TreeSet\u003cFSAppAttempt\u003e pendingForResourceApps \u003d\n        new TreeSet\u003c\u003e(policy.getComparator());\n    readLock.lock();\n    try {\n      for (FSAppAttempt app : runnableApps) {\n        Resource pending \u003d app.getAppAttemptResourceUsage().getPending();\n        if (!pending.equals(none())) {\n          pendingForResourceApps.add(app);\n        }\n      }\n    } finally {\n      readLock.unlock();\n    }\n    return pendingForResourceApps;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java"
    }
  }
}