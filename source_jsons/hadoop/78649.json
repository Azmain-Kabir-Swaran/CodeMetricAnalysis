{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NflyFSystem.java",
  "functionName": "rename",
  "functionId": "rename___src-Path__dst-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/NflyFSystem.java",
  "functionStartLine": 740,
  "functionEndLine": 765,
  "numCommitsSeen": 3,
  "timeTaken": 756,
  "changeHistory": [
    "1f3bc63e6772be81bc9a6a7d93ed81d2a9e066c0"
  ],
  "changeHistoryShort": {
    "1f3bc63e6772be81bc9a6a7d93ed81d2a9e066c0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f3bc63e6772be81bc9a6a7d93ed81d2a9e066c0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12077. Provide a multi-URI replication Inode for ViewFs. Contributed by Gera Shegalov\n",
      "commitDate": "05/09/17 11:51 PM",
      "commitName": "1f3bc63e6772be81bc9a6a7d93ed81d2a9e066c0",
      "commitAuthor": "Chris Douglas",
      "diff": "@@ -0,0 +1,26 @@\n+  public boolean rename(Path src, Path dst) throws IOException {\n+    final List\u003cIOException\u003e ioExceptions \u003d new ArrayList\u003cIOException\u003e();\n+    int numNotFounds \u003d 0;\n+    boolean succ \u003d true;\n+    for (final NflyNode nflyNode : nodes) {\n+      try {\n+        succ \u0026\u003d nflyNode.fs.rename(src, dst);\n+      } catch (FileNotFoundException fnfe) {\n+        numNotFounds++;\n+        processThrowable(nflyNode, \"rename\", fnfe, ioExceptions, src, dst);\n+      } catch (Throwable t) {\n+        processThrowable(nflyNode, \"rename\", t, ioExceptions, src, dst);\n+        succ \u003d false;\n+      }\n+    }\n+\n+    mayThrowFileNotFound(ioExceptions, numNotFounds);\n+\n+    // if all destinations threw exceptions throw, otherwise return\n+    //\n+    if (ioExceptions.size() \u003d\u003d nodes.length) {\n+      throw MultipleIOException.createIOException(ioExceptions);\n+    }\n+\n+    return succ;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    final List\u003cIOException\u003e ioExceptions \u003d new ArrayList\u003cIOException\u003e();\n    int numNotFounds \u003d 0;\n    boolean succ \u003d true;\n    for (final NflyNode nflyNode : nodes) {\n      try {\n        succ \u0026\u003d nflyNode.fs.rename(src, dst);\n      } catch (FileNotFoundException fnfe) {\n        numNotFounds++;\n        processThrowable(nflyNode, \"rename\", fnfe, ioExceptions, src, dst);\n      } catch (Throwable t) {\n        processThrowable(nflyNode, \"rename\", t, ioExceptions, src, dst);\n        succ \u003d false;\n      }\n    }\n\n    mayThrowFileNotFound(ioExceptions, numNotFounds);\n\n    // if all destinations threw exceptions throw, otherwise return\n    //\n    if (ioExceptions.size() \u003d\u003d nodes.length) {\n      throw MultipleIOException.createIOException(ioExceptions);\n    }\n\n    return succ;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/viewfs/NflyFSystem.java"
    }
  }
}