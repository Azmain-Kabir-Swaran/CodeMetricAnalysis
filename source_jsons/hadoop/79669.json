{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FTPFileSystem.java",
  "functionName": "open",
  "functionId": "open___file-Path__bufferSize-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
  "functionStartLine": 277,
  "functionEndLine": 306,
  "numCommitsSeen": 25,
  "timeTaken": 1283,
  "changeHistory": [
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7578282edce0eba3f24c96355c944c02156ece79",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7578282edce0eba3f24c96355c944c02156ece79": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9361: Strictly define FileSystem APIs\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1607596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/07/14 5:04 AM",
      "commitName": "e09ea0c06ee1caa5a9ebae0a8f0273dfe04d05e5",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "09/01/13 3:30 PM",
      "commitNameOld": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 539.52,
      "commitsBetweenForRepo": 3454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n     FTPClient client \u003d connect();\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     FileStatus fileStat \u003d getFileStatus(client, absolute);\n     if (fileStat.isDirectory()) {\n       disconnect(client);\n-      throw new IOException(\"Path \" + file + \" is a directory.\");\n+      throw new FileNotFoundException(\"Path \" + file + \" is a directory.\");\n     }\n     client.allocate(bufferSize);\n     Path parent \u003d absolute.getParent();\n     // Change to parent directory on the\n     // server. Only then can we read the\n     // file\n     // on the server by opening up an InputStream. As a side effect the working\n     // directory on the server is changed to the parent directory of the file.\n     // The FTP client connection is closed when close() is called on the\n     // FSDataInputStream.\n     client.changeWorkingDirectory(parent.toUri().getPath());\n     InputStream is \u003d client.retrieveFileStream(file.getName());\n     FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n         client, statistics));\n     if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n       // The ftpClient is an inconsistent state. Must close the stream\n       // which in turn will logout and disconnect from FTP server\n       fis.close();\n       throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n     }\n     return fis;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDirectory()) {\n      disconnect(client);\n      throw new FileNotFoundException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDirectory()) {\n      disconnect(client);\n      throw new IOException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDirectory()) {\n      disconnect(client);\n      throw new IOException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDirectory()) {\n      disconnect(client);\n      throw new IOException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
      }
    },
    "7578282edce0eba3f24c96355c944c02156ece79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6585.  Add FileStatus#isDirectory and isFile.  Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@949658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/10 8:14 PM",
      "commitName": "7578282edce0eba3f24c96355c944c02156ece79",
      "commitAuthor": "Thomas White",
      "commitDateOld": "15/06/09 1:28 PM",
      "commitNameOld": "bcd64325a11cb0dd5096ffc093d0ffa68c4fcc58",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 349.28,
      "commitsBetweenForRepo": 338,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n     FTPClient client \u003d connect();\n     Path workDir \u003d new Path(client.printWorkingDirectory());\n     Path absolute \u003d makeAbsolute(workDir, file);\n     FileStatus fileStat \u003d getFileStatus(client, absolute);\n-    if (fileStat.isDir()) {\n+    if (fileStat.isDirectory()) {\n       disconnect(client);\n       throw new IOException(\"Path \" + file + \" is a directory.\");\n     }\n     client.allocate(bufferSize);\n     Path parent \u003d absolute.getParent();\n     // Change to parent directory on the\n     // server. Only then can we read the\n     // file\n     // on the server by opening up an InputStream. As a side effect the working\n     // directory on the server is changed to the parent directory of the file.\n     // The FTP client connection is closed when close() is called on the\n     // FSDataInputStream.\n     client.changeWorkingDirectory(parent.toUri().getPath());\n     InputStream is \u003d client.retrieveFileStream(file.getName());\n     FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n         client, statistics));\n     if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n       // The ftpClient is an inconsistent state. Must close the stream\n       // which in turn will logout and disconnect from FTP server\n       fis.close();\n       throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n     }\n     return fis;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDirectory()) {\n      disconnect(client);\n      throw new IOException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,30 @@\n+  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n+    FTPClient client \u003d connect();\n+    Path workDir \u003d new Path(client.printWorkingDirectory());\n+    Path absolute \u003d makeAbsolute(workDir, file);\n+    FileStatus fileStat \u003d getFileStatus(client, absolute);\n+    if (fileStat.isDir()) {\n+      disconnect(client);\n+      throw new IOException(\"Path \" + file + \" is a directory.\");\n+    }\n+    client.allocate(bufferSize);\n+    Path parent \u003d absolute.getParent();\n+    // Change to parent directory on the\n+    // server. Only then can we read the\n+    // file\n+    // on the server by opening up an InputStream. As a side effect the working\n+    // directory on the server is changed to the parent directory of the file.\n+    // The FTP client connection is closed when close() is called on the\n+    // FSDataInputStream.\n+    client.changeWorkingDirectory(parent.toUri().getPath());\n+    InputStream is \u003d client.retrieveFileStream(file.getName());\n+    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n+        client, statistics));\n+    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n+      // The ftpClient is an inconsistent state. Must close the stream\n+      // which in turn will logout and disconnect from FTP server\n+      fis.close();\n+      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n+    }\n+    return fis;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public FSDataInputStream open(Path file, int bufferSize) throws IOException {\n    FTPClient client \u003d connect();\n    Path workDir \u003d new Path(client.printWorkingDirectory());\n    Path absolute \u003d makeAbsolute(workDir, file);\n    FileStatus fileStat \u003d getFileStatus(client, absolute);\n    if (fileStat.isDir()) {\n      disconnect(client);\n      throw new IOException(\"Path \" + file + \" is a directory.\");\n    }\n    client.allocate(bufferSize);\n    Path parent \u003d absolute.getParent();\n    // Change to parent directory on the\n    // server. Only then can we read the\n    // file\n    // on the server by opening up an InputStream. As a side effect the working\n    // directory on the server is changed to the parent directory of the file.\n    // The FTP client connection is closed when close() is called on the\n    // FSDataInputStream.\n    client.changeWorkingDirectory(parent.toUri().getPath());\n    InputStream is \u003d client.retrieveFileStream(file.getName());\n    FSDataInputStream fis \u003d new FSDataInputStream(new FTPInputStream(is,\n        client, statistics));\n    if (!FTPReply.isPositivePreliminary(client.getReplyCode())) {\n      // The ftpClient is an inconsistent state. Must close the stream\n      // which in turn will logout and disconnect from FTP server\n      fis.close();\n      throw new IOException(\"Unable to open file: \" + file + \", Aborting\");\n    }\n    return fis;\n  }",
      "path": "src/java/org/apache/hadoop/fs/ftp/FTPFileSystem.java"
    }
  }
}