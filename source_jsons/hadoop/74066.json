{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ProtocolMetaInfoServerSideTranslatorPB.java",
  "functionName": "getProtocolSignature",
  "functionId": "getProtocolSignature___controller-RpcController__request-GetProtocolSignatureRequestProto",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolMetaInfoServerSideTranslatorPB.java",
  "functionStartLine": 71,
  "functionEndLine": 104,
  "numCommitsSeen": 3,
  "timeTaken": 828,
  "changeHistory": [
    "589c68ae09effd6c4f26505d61636f779c22e99f",
    "12289efa2bc0f286ededc4c979cee0d304fadb0b"
  ],
  "changeHistoryShort": {
    "589c68ae09effd6c4f26505d61636f779c22e99f": "Ybodychange",
    "12289efa2bc0f286ededc4c979cee0d304fadb0b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "589c68ae09effd6c4f26505d61636f779c22e99f": {
      "type": "Ybodychange",
      "commitMessage": "    HADOOP-8285 Use ProtoBuf for RpcPayLoadHeader (sanjay radia)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329319 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/12 9:34 AM",
      "commitName": "589c68ae09effd6c4f26505d61636f779c22e99f",
      "commitAuthor": "Sanjay Radia",
      "commitDateOld": "26/01/12 3:23 PM",
      "commitNameOld": "12289efa2bc0f286ededc4c979cee0d304fadb0b",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 87.72,
      "commitsBetweenForRepo": 693,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n   public GetProtocolSignatureResponseProto getProtocolSignature(\n       RpcController controller, GetProtocolSignatureRequestProto request)\n       throws ServiceException {\n     GetProtocolSignatureResponseProto.Builder builder \u003d GetProtocolSignatureResponseProto\n         .newBuilder();\n     String protocol \u003d request.getProtocol();\n     String rpcKind \u003d request.getRpcKind();\n     long[] versions;\n     try {\n-      versions \u003d getProtocolVersionForRpcKind(RpcKind.valueOf(rpcKind),\n+      versions \u003d getProtocolVersionForRpcKind(RPC.RpcKind.valueOf(rpcKind),\n           protocol);\n     } catch (ClassNotFoundException e1) {\n       throw new ServiceException(e1);\n     }\n     if (versions \u003d\u003d null) {\n       return builder.build();\n     }\n     for (long v : versions) {\n       ProtocolSignatureProto.Builder sigBuilder \u003d ProtocolSignatureProto\n           .newBuilder();\n       sigBuilder.setVersion(v);\n       try {\n         ProtocolSignature signature \u003d ProtocolSignature.getProtocolSignature(\n             protocol, v);\n         for (int m : signature.getMethods()) {\n           sigBuilder.addMethods(m);\n         }\n       } catch (ClassNotFoundException e) {\n         throw new ServiceException(e);\n       }\n       builder.addProtocolSignature(sigBuilder.build());\n     }\n     return builder.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetProtocolSignatureResponseProto getProtocolSignature(\n      RpcController controller, GetProtocolSignatureRequestProto request)\n      throws ServiceException {\n    GetProtocolSignatureResponseProto.Builder builder \u003d GetProtocolSignatureResponseProto\n        .newBuilder();\n    String protocol \u003d request.getProtocol();\n    String rpcKind \u003d request.getRpcKind();\n    long[] versions;\n    try {\n      versions \u003d getProtocolVersionForRpcKind(RPC.RpcKind.valueOf(rpcKind),\n          protocol);\n    } catch (ClassNotFoundException e1) {\n      throw new ServiceException(e1);\n    }\n    if (versions \u003d\u003d null) {\n      return builder.build();\n    }\n    for (long v : versions) {\n      ProtocolSignatureProto.Builder sigBuilder \u003d ProtocolSignatureProto\n          .newBuilder();\n      sigBuilder.setVersion(v);\n      try {\n        ProtocolSignature signature \u003d ProtocolSignature.getProtocolSignature(\n            protocol, v);\n        for (int m : signature.getMethods()) {\n          sigBuilder.addMethods(m);\n        }\n      } catch (ClassNotFoundException e) {\n        throw new ServiceException(e);\n      }\n      builder.addProtocolSignature(sigBuilder.build());\n    }\n    return builder.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolMetaInfoServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "12289efa2bc0f286ededc4c979cee0d304fadb0b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7965. Support for protocol version and signature in PB.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/01/12 3:23 PM",
      "commitName": "12289efa2bc0f286ededc4c979cee0d304fadb0b",
      "commitAuthor": "Jitendra Nath Pandey",
      "diff": "@@ -0,0 +1,34 @@\n+  public GetProtocolSignatureResponseProto getProtocolSignature(\n+      RpcController controller, GetProtocolSignatureRequestProto request)\n+      throws ServiceException {\n+    GetProtocolSignatureResponseProto.Builder builder \u003d GetProtocolSignatureResponseProto\n+        .newBuilder();\n+    String protocol \u003d request.getProtocol();\n+    String rpcKind \u003d request.getRpcKind();\n+    long[] versions;\n+    try {\n+      versions \u003d getProtocolVersionForRpcKind(RpcKind.valueOf(rpcKind),\n+          protocol);\n+    } catch (ClassNotFoundException e1) {\n+      throw new ServiceException(e1);\n+    }\n+    if (versions \u003d\u003d null) {\n+      return builder.build();\n+    }\n+    for (long v : versions) {\n+      ProtocolSignatureProto.Builder sigBuilder \u003d ProtocolSignatureProto\n+          .newBuilder();\n+      sigBuilder.setVersion(v);\n+      try {\n+        ProtocolSignature signature \u003d ProtocolSignature.getProtocolSignature(\n+            protocol, v);\n+        for (int m : signature.getMethods()) {\n+          sigBuilder.addMethods(m);\n+        }\n+      } catch (ClassNotFoundException e) {\n+        throw new ServiceException(e);\n+      }\n+      builder.addProtocolSignature(sigBuilder.build());\n+    }\n+    return builder.build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetProtocolSignatureResponseProto getProtocolSignature(\n      RpcController controller, GetProtocolSignatureRequestProto request)\n      throws ServiceException {\n    GetProtocolSignatureResponseProto.Builder builder \u003d GetProtocolSignatureResponseProto\n        .newBuilder();\n    String protocol \u003d request.getProtocol();\n    String rpcKind \u003d request.getRpcKind();\n    long[] versions;\n    try {\n      versions \u003d getProtocolVersionForRpcKind(RpcKind.valueOf(rpcKind),\n          protocol);\n    } catch (ClassNotFoundException e1) {\n      throw new ServiceException(e1);\n    }\n    if (versions \u003d\u003d null) {\n      return builder.build();\n    }\n    for (long v : versions) {\n      ProtocolSignatureProto.Builder sigBuilder \u003d ProtocolSignatureProto\n          .newBuilder();\n      sigBuilder.setVersion(v);\n      try {\n        ProtocolSignature signature \u003d ProtocolSignature.getProtocolSignature(\n            protocol, v);\n        for (int m : signature.getMethods()) {\n          sigBuilder.addMethods(m);\n        }\n      } catch (ClassNotFoundException e) {\n        throw new ServiceException(e);\n      }\n      builder.addProtocolSignature(sigBuilder.build());\n    }\n    return builder.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/ProtocolMetaInfoServerSideTranslatorPB.java"
    }
  }
}