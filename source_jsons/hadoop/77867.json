{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsCommand.java",
  "functionName": "processRawArguments",
  "functionId": "processRawArguments___args-LinkedList__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/FsCommand.java",
  "functionStartLine": 102,
  "functionEndLine": 121,
  "numCommitsSeen": 12,
  "timeTaken": 1666,
  "changeHistory": [
    "263c76b678275dfff867415c71ba9dc00a9235ef",
    "8171874dd198a6d10f48211f311595b222e6b930",
    "374ddd9f9ea43b0e730a7baab3e51e6893d40420"
  ],
  "changeHistoryShort": {
    "263c76b678275dfff867415c71ba9dc00a9235ef": "Ybodychange",
    "8171874dd198a6d10f48211f311595b222e6b930": "Ybodychange",
    "374ddd9f9ea43b0e730a7baab3e51e6893d40420": "Yintroduced"
  },
  "changeHistoryDetails": {
    "263c76b678275dfff867415c71ba9dc00a9235ef": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-17011. Tolerate leading and trailing spaces in fs.defaultFS. Contributed by Ctest\n\nSigned-off-by: Ayush Saxena \u003cayushsaxena@apache.org\u003e\n",
      "commitDate": "30/04/20 2:15 PM",
      "commitName": "263c76b678275dfff867415c71ba9dc00a9235ef",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "17/08/18 11:18 AM",
      "commitNameOld": "60ffec9f7921a50aff20434c1042b16fa59240f7",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 622.12,
      "commitsBetweenForRepo": 3980,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void processRawArguments(LinkedList\u003cString\u003e args)\n       throws IOException {\n     LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n     // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n     // command is not running against HDFS.\n     final boolean displayWarnings \u003d getConf().getBoolean(\n         HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n         HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n     if (displayWarnings) {\n-      final String defaultFs \u003d getConf().get(FS_DEFAULT_NAME_KEY);\n+      final String defaultFs \u003d getConf().getTrimmed(FS_DEFAULT_NAME_KEY);\n       final boolean missingDefaultFs \u003d\n           defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n       if (missingDefaultFs) {\n         err.printf(\n             \"Warning: fs.defaultFS is not set when running \\\"%s\\\" command.%n\",\n             getCommandName());\n       }\n     }\n     processArguments(expendedArgs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processRawArguments(LinkedList\u003cString\u003e args)\n      throws IOException {\n    LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n    // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n    // command is not running against HDFS.\n    final boolean displayWarnings \u003d getConf().getBoolean(\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n    if (displayWarnings) {\n      final String defaultFs \u003d getConf().getTrimmed(FS_DEFAULT_NAME_KEY);\n      final boolean missingDefaultFs \u003d\n          defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n      if (missingDefaultFs) {\n        err.printf(\n            \"Warning: fs.defaultFS is not set when running \\\"%s\\\" command.%n\",\n            getCommandName());\n      }\n    }\n    processArguments(expendedArgs);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/FsCommand.java",
      "extendedDetails": {}
    },
    "8171874dd198a6d10f48211f311595b222e6b930": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12755. Fix typo in defaultFS warning message.\n",
      "commitDate": "02/02/16 11:56 AM",
      "commitName": "8171874dd198a6d10f48211f311595b222e6b930",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/05/15 5:15 PM",
      "commitNameOld": "374ddd9f9ea43b0e730a7baab3e51e6893d40420",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 248.82,
      "commitsBetweenForRepo": 1687,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void processRawArguments(LinkedList\u003cString\u003e args)\n       throws IOException {\n     LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n     // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n     // command is not running against HDFS.\n     final boolean displayWarnings \u003d getConf().getBoolean(\n         HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n         HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n     if (displayWarnings) {\n       final String defaultFs \u003d getConf().get(FS_DEFAULT_NAME_KEY);\n       final boolean missingDefaultFs \u003d\n           defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n       if (missingDefaultFs) {\n         err.printf(\n-            \"Warning: fs.defaultFs is not set when running \\\"%s\\\" command.%n\",\n+            \"Warning: fs.defaultFS is not set when running \\\"%s\\\" command.%n\",\n             getCommandName());\n       }\n     }\n     processArguments(expendedArgs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processRawArguments(LinkedList\u003cString\u003e args)\n      throws IOException {\n    LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n    // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n    // command is not running against HDFS.\n    final boolean displayWarnings \u003d getConf().getBoolean(\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n    if (displayWarnings) {\n      final String defaultFs \u003d getConf().get(FS_DEFAULT_NAME_KEY);\n      final boolean missingDefaultFs \u003d\n          defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n      if (missingDefaultFs) {\n        err.printf(\n            \"Warning: fs.defaultFS is not set when running \\\"%s\\\" command.%n\",\n            getCommandName());\n      }\n    }\n    processArguments(expendedArgs);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/FsCommand.java",
      "extendedDetails": {}
    },
    "374ddd9f9ea43b0e730a7baab3e51e6893d40420": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12043. Display warning if defaultFs is not set when running fs commands. Contributed by Eddy Xu.\n",
      "commitDate": "29/05/15 5:15 PM",
      "commitName": "374ddd9f9ea43b0e730a7baab3e51e6893d40420",
      "commitAuthor": "Andrew Wang",
      "diff": "@@ -0,0 +1,20 @@\n+  protected void processRawArguments(LinkedList\u003cString\u003e args)\n+      throws IOException {\n+    LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n+    // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n+    // command is not running against HDFS.\n+    final boolean displayWarnings \u003d getConf().getBoolean(\n+        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n+        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n+    if (displayWarnings) {\n+      final String defaultFs \u003d getConf().get(FS_DEFAULT_NAME_KEY);\n+      final boolean missingDefaultFs \u003d\n+          defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n+      if (missingDefaultFs) {\n+        err.printf(\n+            \"Warning: fs.defaultFs is not set when running \\\"%s\\\" command.%n\",\n+            getCommandName());\n+      }\n+    }\n+    processArguments(expendedArgs);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void processRawArguments(LinkedList\u003cString\u003e args)\n      throws IOException {\n    LinkedList\u003cPathData\u003e expendedArgs \u003d expandArguments(args);\n    // If \"fs.defaultFs\" is not set appropriately, it warns the user that the\n    // command is not running against HDFS.\n    final boolean displayWarnings \u003d getConf().getBoolean(\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_KEY,\n        HADOOP_SHELL_MISSING_DEFAULT_FS_WARNING_DEFAULT);\n    if (displayWarnings) {\n      final String defaultFs \u003d getConf().get(FS_DEFAULT_NAME_KEY);\n      final boolean missingDefaultFs \u003d\n          defaultFs \u003d\u003d null || defaultFs.equals(FS_DEFAULT_NAME_DEFAULT);\n      if (missingDefaultFs) {\n        err.printf(\n            \"Warning: fs.defaultFs is not set when running \\\"%s\\\" command.%n\",\n            getCommandName());\n      }\n    }\n    processArguments(expendedArgs);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/shell/FsCommand.java"
    }
  }
}