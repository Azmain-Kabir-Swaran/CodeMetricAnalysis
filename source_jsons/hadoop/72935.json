{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserProvider.java",
  "functionName": "createProvider",
  "functionId": "createProvider___providerName-URI__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java",
  "functionStartLine": 146,
  "functionEndLine": 152,
  "numCommitsSeen": 8,
  "timeTaken": 738,
  "changeHistory": [
    "c60da4d3b31e5fa0c4b27cf75ab7ed4add56396a",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "c60da4d3b31e5fa0c4b27cf75ab7ed4add56396a": "Ybodychange",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c60da4d3b31e5fa0c4b27cf75ab7ed4add56396a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10994. KeyProviderCryptoExtension should use CryptoCodec for generation/decryption of keys. (tucu)\n",
      "commitDate": "29/08/14 2:21 PM",
      "commitName": "c60da4d3b31e5fa0c4b27cf75ab7ed4add56396a",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "04/07/14 10:31 AM",
      "commitNameOld": "7b5295513dce9768083ae53282013e31d74573c6",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 56.16,
      "commitsBetweenForRepo": 456,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n     public KeyProvider createProvider(URI providerName,\n                                       Configuration conf) throws IOException {\n       if (SCHEME_NAME.equals(providerName.getScheme())) {\n-        return new UserProvider();\n+        return new UserProvider(conf);\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public KeyProvider createProvider(URI providerName,\n                                      Configuration conf) throws IOException {\n      if (SCHEME_NAME.equals(providerName.getScheme())) {\n        return new UserProvider(conf);\n      }\n      return null;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java",
      "extendedDetails": {}
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,7 @@\n+    public KeyProvider createProvider(URI providerName,\n+                                      Configuration conf) throws IOException {\n+      if (SCHEME_NAME.equals(providerName.getScheme())) {\n+        return new UserProvider();\n+      }\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public KeyProvider createProvider(URI providerName,\n                                      Configuration conf) throws IOException {\n      if (SCHEME_NAME.equals(providerName.getScheme())) {\n        return new UserProvider();\n      }\n      return null;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java"
    }
  }
}