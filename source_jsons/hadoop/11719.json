{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PmemVolumeManager.java",
  "functionName": "reserve",
  "functionId": "reserve___key-ExtendedBlockId__bytesCount-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java",
  "functionStartLine": 196,
  "functionEndLine": 209,
  "numCommitsSeen": 5,
  "timeTaken": 3689,
  "changeHistory": [
    "9b0aace1e6c54f201784912c0b623707aa82b761",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a"
  ],
  "changeHistoryShort": {
    "9b0aace1e6c54f201784912c0b623707aa82b761": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b0aace1e6c54f201784912c0b623707aa82b761": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
      "commitDate": "08/05/19 4:50 AM",
      "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
      "commitAuthor": "Rakesh Radhakrishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
          "commitDate": "08/05/19 4:50 AM",
          "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "30/03/19 11:33 PM",
          "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 38.22,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,14 @@\n-  long reserve(long bytesCount) {\n-    return usedBytesCount.reserve(bytesCount);\n+  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n+    try {\n+      byte index \u003d chooseVolume(bytesCount);\n+      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n+      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n+      if (usedBytes \u003e 0) {\n+        blockKeyToVolume.put(key, index);\n+      }\n+      return usedBytes;\n+    } catch (IOException e) {\n+      LOG.warn(e.getMessage());\n+      return -1L;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n    try {\n      byte index \u003d chooseVolume(bytesCount);\n      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n      if (usedBytes \u003e 0) {\n        blockKeyToVolume.put(key, index);\n      }\n      return usedBytes;\n    } catch (IOException e) {\n      LOG.warn(e.getMessage());\n      return -1L;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java",
          "extendedDetails": {
            "oldValue": "[bytesCount-long]",
            "newValue": "[key-ExtendedBlockId, bytesCount-long]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
          "commitDate": "08/05/19 4:50 AM",
          "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "30/03/19 11:33 PM",
          "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 38.22,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,14 @@\n-  long reserve(long bytesCount) {\n-    return usedBytesCount.reserve(bytesCount);\n+  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n+    try {\n+      byte index \u003d chooseVolume(bytesCount);\n+      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n+      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n+      if (usedBytes \u003e 0) {\n+        blockKeyToVolume.put(key, index);\n+      }\n+      return usedBytes;\n+    } catch (IOException e) {\n+      LOG.warn(e.getMessage());\n+      return -1L;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n    try {\n      byte index \u003d chooseVolume(bytesCount);\n      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n      if (usedBytes \u003e 0) {\n        blockKeyToVolume.put(key, index);\n      }\n      return usedBytes;\n    } catch (IOException e) {\n      LOG.warn(e.getMessage());\n      return -1L;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
          "commitDate": "08/05/19 4:50 AM",
          "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
          "commitAuthor": "Rakesh Radhakrishnan",
          "commitDateOld": "30/03/19 11:33 PM",
          "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
          "commitAuthorOld": "Uma Maheswara Rao G",
          "daysBetweenCommits": 38.22,
          "commitsBetweenForRepo": 236,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,14 @@\n-  long reserve(long bytesCount) {\n-    return usedBytesCount.reserve(bytesCount);\n+  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n+    try {\n+      byte index \u003d chooseVolume(bytesCount);\n+      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n+      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n+      if (usedBytes \u003e 0) {\n+        blockKeyToVolume.put(key, index);\n+      }\n+      return usedBytes;\n+    } catch (IOException e) {\n+      LOG.warn(e.getMessage());\n+      return -1L;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  synchronized long reserve(ExtendedBlockId key, long bytesCount) {\n    try {\n      byte index \u003d chooseVolume(bytesCount);\n      long usedBytes \u003d usedBytesCounts.get(index).reserve(bytesCount);\n      // Put the entry into blockKeyToVolume if reserving bytes succeeded.\n      if (usedBytes \u003e 0) {\n        blockKeyToVolume.put(key, index);\n      }\n      return usedBytes;\n    } catch (IOException e) {\n      LOG.warn(e.getMessage());\n      return -1L;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14355 : Implement HDFS cache on SCM by using pure java mapped byte buffer. Contributed by Feilong He.\n",
      "commitDate": "30/03/19 11:33 PM",
      "commitName": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,3 @@\n+  long reserve(long bytesCount) {\n+    return usedBytesCount.reserve(bytesCount);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  long reserve(long bytesCount) {\n    return usedBytesCount.reserve(bytesCount);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemVolumeManager.java"
    }
  }
}