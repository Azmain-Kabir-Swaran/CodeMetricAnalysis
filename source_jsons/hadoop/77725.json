{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReadaheadPool.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
  "functionStartLine": 200,
  "functionEndLine": 221,
  "numCommitsSeen": 9,
  "timeTaken": 1603,
  "changeHistory": [
    "274eee32841082a734c57f9e383e5e2f02f97f78",
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3",
    "efea68dc3538de9aafae206d64903506e41fc9e1",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
    "638801cce16fc1dc3259c541dc30a599faaddda1",
    "78336e717be194683f863ca15a12cde90b9e936d"
  ],
  "changeHistoryShort": {
    "274eee32841082a734c57f9e383e5e2f02f97f78": "Ybodychange",
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3": "Ybodychange",
    "efea68dc3538de9aafae206d64903506e41fc9e1": "Ybodychange",
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Ybodychange",
    "78336e717be194683f863ca15a12cde90b9e936d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "274eee32841082a734c57f9e383e5e2f02f97f78": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7095. Race conditions in closing FadvisedChunkedFile. (Miklos Szegedi via Haibo Chen)\n",
      "commitDate": "10/05/18 10:46 AM",
      "commitName": "274eee32841082a734c57f9e383e5e2f02f97f78",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 296.55,
      "commitsBetweenForRepo": 2780,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n     public void run() {\n       if (canceled) return;\n       // There\u0027s a very narrow race here that the file will close right at\n       // this instant. But if that happens, we\u0027ll likely receive an EBADF\n       // error below, and see that it\u0027s canceled, ignoring the error.\n       // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n       // other FD, which may be wasted work, but won\u0027t cause a problem.\n       try {\n-        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n-            fd, off, len, POSIX_FADV_WILLNEED);\n+        if (fd.valid()) {\n+          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(\n+              identifier, fd, off, len, POSIX_FADV_WILLNEED);\n+        }\n       } catch (IOException ioe) {\n         if (canceled) {\n           // no big deal - the reader canceled the request and closed\n           // the file.\n           return;\n         }\n         LOG.warn(\"Failed readahead on \" + identifier,\n             ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        if (fd.valid()) {\n          NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(\n              identifier, fd, off, len, POSIX_FADV_WILLNEED);\n        }\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
      "extendedDetails": {}
    },
    "21d10ccc6e463cf250414264c78acb4a6e7c83e3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7824. NativeIO.java flags and identifiers must be set correctly for each platform, not hardcoded to their Linux values (Martin Walsh via Colin P. McCabe)\n",
      "commitDate": "31/07/15 3:01 PM",
      "commitName": "21d10ccc6e463cf250414264c78acb4a6e7c83e3",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "19/11/13 4:48 PM",
      "commitNameOld": "efea68dc3538de9aafae206d64903506e41fc9e1",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 618.88,
      "commitsBetweenForRepo": 4858,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       if (canceled) return;\n       // There\u0027s a very narrow race here that the file will close right at\n       // this instant. But if that happens, we\u0027ll likely receive an EBADF\n       // error below, and see that it\u0027s canceled, ignoring the error.\n       // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n       // other FD, which may be wasted work, but won\u0027t cause a problem.\n       try {\n         NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n-            fd, off, len, NativeIO.POSIX.POSIX_FADV_WILLNEED);\n+            fd, off, len, POSIX_FADV_WILLNEED);\n       } catch (IOException ioe) {\n         if (canceled) {\n           // no big deal - the reader canceled the request and closed\n           // the file.\n           return;\n         }\n         LOG.warn(\"Failed readahead on \" + identifier,\n             ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n            fd, off, len, POSIX_FADV_WILLNEED);\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
      "extendedDetails": {}
    },
    "efea68dc3538de9aafae206d64903506e41fc9e1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5511. improve CacheManipulator interface to allow better unit testing (cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543676 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 4:48 PM",
      "commitName": "efea68dc3538de9aafae206d64903506e41fc9e1",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "22/07/13 11:15 AM",
      "commitNameOld": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 120.27,
      "commitsBetweenForRepo": 765,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       if (canceled) return;\n       // There\u0027s a very narrow race here that the file will close right at\n       // this instant. But if that happens, we\u0027ll likely receive an EBADF\n       // error below, and see that it\u0027s canceled, ignoring the error.\n       // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n       // other FD, which may be wasted work, but won\u0027t cause a problem.\n       try {\n-        NativeIO.POSIX.posixFadviseIfPossible(identifier, fd, off, len,\n-            NativeIO.POSIX.POSIX_FADV_WILLNEED);\n+        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n+            fd, off, len, NativeIO.POSIX.POSIX_FADV_WILLNEED);\n       } catch (IOException ioe) {\n         if (canceled) {\n           // no big deal - the reader canceled the request and closed\n           // the file.\n           return;\n         }\n         LOG.warn(\"Failed readahead on \" + identifier,\n             ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        NativeIO.POSIX.getCacheManipulator().posixFadviseIfPossible(identifier,\n            fd, off, len, NativeIO.POSIX.POSIX_FADV_WILLNEED);\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
      "extendedDetails": {}
    },
    "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4817.  Make HDFS advisory caching configurable on a per-file basis.  (Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1505753 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/13 11:15 AM",
      "commitName": "c1314eb2a382bd9ce045a2fcc4a9e5c1fc368a24",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "06/03/13 11:15 AM",
      "commitNameOld": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 137.96,
      "commitsBetweenForRepo": 857,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       if (canceled) return;\n       // There\u0027s a very narrow race here that the file will close right at\n       // this instant. But if that happens, we\u0027ll likely receive an EBADF\n       // error below, and see that it\u0027s canceled, ignoring the error.\n       // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n       // other FD, which may be wasted work, but won\u0027t cause a problem.\n       try {\n-        NativeIO.POSIX.posixFadviseIfPossible(fd, off, len,\n+        NativeIO.POSIX.posixFadviseIfPossible(identifier, fd, off, len,\n             NativeIO.POSIX.POSIX_FADV_WILLNEED);\n       } catch (IOException ioe) {\n         if (canceled) {\n           // no big deal - the reader canceled the request and closed\n           // the file.\n           return;\n         }\n         LOG.warn(\"Failed readahead on \" + identifier,\n             ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        NativeIO.POSIX.posixFadviseIfPossible(identifier, fd, off, len,\n            NativeIO.POSIX.POSIX_FADV_WILLNEED);\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 193.76,
      "commitsBetweenForRepo": 940,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n     public void run() {\n       if (canceled) return;\n       // There\u0027s a very narrow race here that the file will close right at\n       // this instant. But if that happens, we\u0027ll likely receive an EBADF\n       // error below, and see that it\u0027s canceled, ignoring the error.\n       // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n       // other FD, which may be wasted work, but won\u0027t cause a problem.\n       try {\n-        NativeIO.posixFadviseIfPossible(fd, off, len,\n-            NativeIO.POSIX_FADV_WILLNEED);\n+        NativeIO.POSIX.posixFadviseIfPossible(fd, off, len,\n+            NativeIO.POSIX.POSIX_FADV_WILLNEED);\n       } catch (IOException ioe) {\n         if (canceled) {\n           // no big deal - the reader canceled the request and closed\n           // the file.\n           return;\n         }\n         LOG.warn(\"Failed readahead on \" + identifier,\n             ioe);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        NativeIO.POSIX.posixFadviseIfPossible(fd, off, len,\n            NativeIO.POSIX.POSIX_FADV_WILLNEED);\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java",
      "extendedDetails": {}
    },
    "78336e717be194683f863ca15a12cde90b9e936d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7753. Support fadvise and sync_file_range in NativeIO. Add ReadaheadPool infrastructure for use in HDFS and MR. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190067 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 3:19 PM",
      "commitName": "78336e717be194683f863ca15a12cde90b9e936d",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+    public void run() {\n+      if (canceled) return;\n+      // There\u0027s a very narrow race here that the file will close right at\n+      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n+      // error below, and see that it\u0027s canceled, ignoring the error.\n+      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n+      // other FD, which may be wasted work, but won\u0027t cause a problem.\n+      try {\n+        NativeIO.posixFadviseIfPossible(fd, off, len,\n+            NativeIO.POSIX_FADV_WILLNEED);\n+      } catch (IOException ioe) {\n+        if (canceled) {\n+          // no big deal - the reader canceled the request and closed\n+          // the file.\n+          return;\n+        }\n+        LOG.warn(\"Failed readahead on \" + identifier,\n+            ioe);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      if (canceled) return;\n      // There\u0027s a very narrow race here that the file will close right at\n      // this instant. But if that happens, we\u0027ll likely receive an EBADF\n      // error below, and see that it\u0027s canceled, ignoring the error.\n      // It\u0027s also possible that we\u0027ll end up requesting readahead on some\n      // other FD, which may be wasted work, but won\u0027t cause a problem.\n      try {\n        NativeIO.posixFadviseIfPossible(fd, off, len,\n            NativeIO.POSIX_FADV_WILLNEED);\n      } catch (IOException ioe) {\n        if (canceled) {\n          // no big deal - the reader canceled the request and closed\n          // the file.\n          return;\n        }\n        LOG.warn(\"Failed readahead on \" + identifier,\n            ioe);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/ReadaheadPool.java"
    }
  }
}