{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NvidiaGPUPluginForRuntimeV2.java",
  "functionName": "searchBinary",
  "functionId": "searchBinary",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java",
  "functionStartLine": 658,
  "functionEndLine": 693,
  "numCommitsSeen": 3,
  "timeTaken": 711,
  "changeHistory": [
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0"
  ],
  "changeHistoryShort": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9060. [YARN-8851] Phase 1 - Support device isolation and use the Nvidia GPU plugin as an example. Contributed by Zhankun Tang.\n",
      "commitDate": "18/02/19 2:28 AM",
      "commitName": "db4d1a1e2fd5931df9a866c97c581bdbc280f6e0",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,36 @@\n+    public void searchBinary() throws Exception {\n+      if (pathOfGpuBinary !\u003d null) {\n+        LOG.info(\"Skip searching, the nvidia gpu binary is already set: \"\n+            + pathOfGpuBinary);\n+        return;\n+      }\n+      // search env for the binary\n+      String envBinaryPath \u003d System.getenv(ENV_BINARY_PATH);\n+      if (null !\u003d envBinaryPath) {\n+        if (new File(envBinaryPath).exists()) {\n+          pathOfGpuBinary \u003d envBinaryPath;\n+          LOG.info(\"Use nvidia gpu binary: \" + pathOfGpuBinary);\n+          return;\n+        }\n+      }\n+      LOG.info(\"Search binary..\");\n+      // search if binary exists in default folders\n+      File binaryFile;\n+      boolean found \u003d false;\n+      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n+        binaryFile \u003d new File(dir, DEFAULT_BINARY_NAME);\n+        if (binaryFile.exists()) {\n+          found \u003d true;\n+          pathOfGpuBinary \u003d binaryFile.getAbsolutePath();\n+          LOG.info(\"Found binary:\" + pathOfGpuBinary);\n+          break;\n+        }\n+      }\n+      if (!found) {\n+        LOG.error(\"No binary found from env variable: \"\n+            + ENV_BINARY_PATH + \" or path \"\n+            + DEFAULT_BINARY_SEARCH_DIRS.toString());\n+        throw new Exception(\"No binary found for \"\n+            + NvidiaGPUPluginForRuntimeV2.class);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void searchBinary() throws Exception {\n      if (pathOfGpuBinary !\u003d null) {\n        LOG.info(\"Skip searching, the nvidia gpu binary is already set: \"\n            + pathOfGpuBinary);\n        return;\n      }\n      // search env for the binary\n      String envBinaryPath \u003d System.getenv(ENV_BINARY_PATH);\n      if (null !\u003d envBinaryPath) {\n        if (new File(envBinaryPath).exists()) {\n          pathOfGpuBinary \u003d envBinaryPath;\n          LOG.info(\"Use nvidia gpu binary: \" + pathOfGpuBinary);\n          return;\n        }\n      }\n      LOG.info(\"Search binary..\");\n      // search if binary exists in default folders\n      File binaryFile;\n      boolean found \u003d false;\n      for (String dir : DEFAULT_BINARY_SEARCH_DIRS) {\n        binaryFile \u003d new File(dir, DEFAULT_BINARY_NAME);\n        if (binaryFile.exists()) {\n          found \u003d true;\n          pathOfGpuBinary \u003d binaryFile.getAbsolutePath();\n          LOG.info(\"Found binary:\" + pathOfGpuBinary);\n          break;\n        }\n      }\n      if (!found) {\n        LOG.error(\"No binary found from env variable: \"\n            + ENV_BINARY_PATH + \" or path \"\n            + DEFAULT_BINARY_SEARCH_DIRS.toString());\n        throw new Exception(\"No binary found for \"\n            + NvidiaGPUPluginForRuntimeV2.class);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/resourceplugin/com/nvidia/NvidiaGPUPluginForRuntimeV2.java"
    }
  }
}