{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenFetcher.java",
  "functionName": "saveDelegationToken",
  "functionId": "saveDelegationToken___conf-Configuration__fs-FileSystem__renewer-String(modifiers-final)__tokenFile-Path(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
  "functionStartLine": 196,
  "functionEndLine": 214,
  "numCommitsSeen": 32,
  "timeTaken": 3596,
  "changeHistory": [
    "f19638333b11da6dcab9a964e73a49947b8390fd",
    "2753185a010e70f8d9539f42151c79177781122d",
    "d6402fadedade4289949ba9f70f7a0bfb9bca140",
    "4838b735f0d472765f402fe6b1c8b6ce85b9fbf1",
    "1396867b52533ecf894158a464c6cd3abc7041b9",
    "7ba5bbac02b688f68a8d23671a1e869234b4cebe",
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a"
  ],
  "changeHistoryShort": {
    "f19638333b11da6dcab9a964e73a49947b8390fd": "Ybodychange",
    "2753185a010e70f8d9539f42151c79177781122d": "Ybodychange",
    "d6402fadedade4289949ba9f70f7a0bfb9bca140": "Ybodychange",
    "4838b735f0d472765f402fe6b1c8b6ce85b9fbf1": "Ybodychange",
    "1396867b52533ecf894158a464c6cd3abc7041b9": "Ybodychange",
    "7ba5bbac02b688f68a8d23671a1e869234b4cebe": "Ybodychange",
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f19638333b11da6dcab9a964e73a49947b8390fd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15059. Undoing the switch of Credentials to PB format as default - done via HADOOP-12563 for supporting 2.x to 3.x upgrades.\n",
      "commitDate": "08/12/17 8:00 AM",
      "commitName": "f19638333b11da6dcab9a964e73a49947b8390fd",
      "commitAuthor": "Vinod Kumar Vavilapalli (I am also known as @tshooter.)",
      "commitDateOld": "17/05/16 2:03 PM",
      "commitNameOld": "e24fe2641b4117601105fa097c8848d82b96b74c",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 569.79,
      "commitsBetweenForRepo": 3896,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n     if (null !\u003d token) {\n       Credentials cred \u003d new Credentials();\n       cred.addToken(token.getService(), token);\n       // dtutil is replacing this tool; preserve legacy functionality\n-      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n+      cred.writeTokenStorageFile(tokenFile, conf,\n+          Credentials.SerializedFormat.WRITABLE);\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n             token.getService() + \" into \" + tokenFile);\n       }\n     } else {\n       System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getService(), token);\n      // dtutil is replacing this tool; preserve legacy functionality\n      cred.writeTokenStorageFile(tokenFile, conf,\n          Credentials.SerializedFormat.WRITABLE);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "2753185a010e70f8d9539f42151c79177781122d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\n",
      "commitDate": "29/04/16 10:32 PM",
      "commitName": "2753185a010e70f8d9539f42151c79177781122d",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "22/04/16 10:17 AM",
      "commitNameOld": "d6402fadedade4289949ba9f70f7a0bfb9bca140",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 7.51,
      "commitsBetweenForRepo": 45,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n     if (null !\u003d token) {\n       Credentials cred \u003d new Credentials();\n       cred.addToken(token.getService(), token);\n-      cred.writeTokenStorageFile(tokenFile, conf);\n+      // dtutil is replacing this tool; preserve legacy functionality\n+      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n             token.getService() + \" into \" + tokenFile);\n       }\n     } else {\n       System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getService(), token);\n      // dtutil is replacing this tool; preserve legacy functionality\n      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "d6402fadedade4289949ba9f70f7a0bfb9bca140": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\"\n\nThis reverts commit 4838b735f0d472765f402fe6b1c8b6ce85b9fbf1.\n",
      "commitDate": "22/04/16 10:17 AM",
      "commitName": "d6402fadedade4289949ba9f70f7a0bfb9bca140",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "21/04/16 11:32 AM",
      "commitNameOld": "4838b735f0d472765f402fe6b1c8b6ce85b9fbf1",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 0.95,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n     if (null !\u003d token) {\n       Credentials cred \u003d new Credentials();\n       cred.addToken(token.getService(), token);\n-      // dtutil is replacing this tool; preserve legacy functionality\n-      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n+      cred.writeTokenStorageFile(tokenFile, conf);\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n             token.getService() + \" into \" + tokenFile);\n       }\n     } else {\n       System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getService(), token);\n      cred.writeTokenStorageFile(tokenFile, conf);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "4838b735f0d472765f402fe6b1c8b6ce85b9fbf1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12563. Updated utility (dtutil) to create/modify token files. Contributed by Matthew Paduano\n",
      "commitDate": "21/04/16 11:32 AM",
      "commitName": "4838b735f0d472765f402fe6b1c8b6ce85b9fbf1",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "27/10/15 12:02 PM",
      "commitNameOld": "1396867b52533ecf894158a464c6cd3abc7041b9",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 176.98,
      "commitsBetweenForRepo": 1132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n     if (null !\u003d token) {\n       Credentials cred \u003d new Credentials();\n       cred.addToken(token.getService(), token);\n-      cred.writeTokenStorageFile(tokenFile, conf);\n+      // dtutil is replacing this tool; preserve legacy functionality\n+      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n             token.getService() + \" into \" + tokenFile);\n       }\n     } else {\n       System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getService(), token);\n      // dtutil is replacing this tool; preserve legacy functionality\n      cred.writeLegacyTokenStorageFile(tokenFile, conf);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "1396867b52533ecf894158a464c6cd3abc7041b9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12494. fetchdt stores the token based on token kind instead of token service (HeeSoo Kim via aw)\n",
      "commitDate": "27/10/15 12:02 PM",
      "commitName": "1396867b52533ecf894158a464c6cd3abc7041b9",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "30/06/15 3:12 AM",
      "commitNameOld": "7ba5bbac02b688f68a8d23671a1e869234b4cebe",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 119.37,
      "commitsBetweenForRepo": 819,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n     if (null !\u003d token) {\n       Credentials cred \u003d new Credentials();\n-      cred.addToken(token.getKind(), token);\n+      cred.addToken(token.getService(), token);\n       cred.writeTokenStorageFile(tokenFile, conf);\n \n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n             token.getService() + \" into \" + tokenFile);\n       }\n     } else {\n       System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getService(), token);\n      cred.writeTokenStorageFile(tokenFile, conf);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "7ba5bbac02b688f68a8d23671a1e869234b4cebe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8627. NPE thrown if unable to fetch token from Namenode (Contributed by J.Andreina)\n",
      "commitDate": "30/06/15 3:12 AM",
      "commitName": "7ba5bbac02b688f68a8d23671a1e869234b4cebe",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "21/04/15 9:59 PM",
      "commitNameOld": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 69.22,
      "commitsBetweenForRepo": 617,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,17 @@\n   static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                   final String renewer, final Path tokenFile)\n           throws IOException {\n     Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n+    if (null !\u003d token) {\n+      Credentials cred \u003d new Credentials();\n+      cred.addToken(token.getKind(), token);\n+      cred.writeTokenStorageFile(tokenFile, conf);\n \n-    Credentials cred \u003d new Credentials();\n-    cred.addToken(token.getKind(), token);\n-    cred.writeTokenStorageFile(tokenFile, conf);\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" + token.getService()\n-              + \" into \" + tokenFile);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n+            token.getService() + \" into \" + tokenFile);\n+      }\n+    } else {\n+      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n    if (null !\u003d token) {\n      Credentials cred \u003d new Credentials();\n      cred.addToken(token.getKind(), token);\n      cred.writeTokenStorageFile(tokenFile, conf);\n\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" +\n            token.getService() + \" into \" + tokenFile);\n      }\n    } else {\n      System.err.println(\"ERROR: Failed to fetch token from \" + fs.getUri());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
      "extendedDetails": {}
    },
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5570. Deprecate hftp / hsftp and replace them with webhdfs / swebhdfs. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 10:28 AM",
      "commitName": "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,14 @@\n+  static void saveDelegationToken(Configuration conf, FileSystem fs,\n+                                  final String renewer, final Path tokenFile)\n+          throws IOException {\n+    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n+\n+    Credentials cred \u003d new Credentials();\n+    cred.addToken(token.getKind(), token);\n+    cred.writeTokenStorageFile(tokenFile, conf);\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" + token.getService()\n+              + \" into \" + tokenFile);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void saveDelegationToken(Configuration conf, FileSystem fs,\n                                  final String renewer, final Path tokenFile)\n          throws IOException {\n    Token\u003c?\u003e token \u003d fs.getDelegationToken(renewer);\n\n    Credentials cred \u003d new Credentials();\n    cred.addToken(token.getKind(), token);\n    cred.writeTokenStorageFile(tokenFile, conf);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Fetched token \" + fs.getUri() + \" for \" + token.getService()\n              + \" into \" + tokenFile);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java"
    }
  }
}