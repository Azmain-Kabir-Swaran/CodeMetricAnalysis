{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockingThreadPoolExecutorService.java",
  "functionName": "newDaemonThreadFactory",
  "functionId": "newDaemonThreadFactory___prefix-String(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
  "functionStartLine": 88,
  "functionEndLine": 104,
  "numCommitsSeen": 24,
  "timeTaken": 3376,
  "changeHistory": [
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
    "28792b6b7f137df1db58496f27de23bbe99cdfd6",
    "73b86979d661f4ad56fcfc3a05a403dfcb2a860e",
    "2158496f6bed5f9d14751b82bd5d43b9fd786b95",
    "bff7c90a5686de106ca7a866982412c5dfa01632",
    "27d8395867f665fea1360087325cda5ed70efd0c"
  ],
  "changeHistoryShort": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": "Ymultichange(Yfilerename,Ymodifierchange)",
    "28792b6b7f137df1db58496f27de23bbe99cdfd6": "Ymodifierchange",
    "73b86979d661f4ad56fcfc3a05a403dfcb2a860e": "Ymodifierchange",
    "2158496f6bed5f9d14751b82bd5d43b9fd786b95": "Ymodifierchange",
    "bff7c90a5686de106ca7a866982412c5dfa01632": "Ymovefromfile",
    "27d8395867f665fea1360087325cda5ed70efd0c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7": {
      "type": "Ymultichange(Yfilerename,Ymodifierchange)",
      "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
      "commitDate": "13/12/17 7:14 PM",
      "commitName": "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
          "commitDate": "13/12/17 7:14 PM",
          "commitName": "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "13/12/17 7:05 PM",
          "commitNameOld": "28792b6b7f137df1db58496f27de23bbe99cdfd6",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n     final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n     return new ThreadFactory() {\n       @Override\n       public Thread newThread(Runnable r) {\n         Thread t \u003d namedFactory.newThread(r);\n         if (!t.isDaemon()) {\n           t.setDaemon(true);\n         }\n         if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n           t.setPriority(Thread.NORM_PRIORITY);\n         }\n         return t;\n       }\n \n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
          "extendedDetails": {
            "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
            "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
          "commitDate": "13/12/17 7:14 PM",
          "commitName": "f86c81d923ecce9d1c9fb691bbc78e93b4a65ae7",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "13/12/17 7:05 PM",
          "commitNameOld": "28792b6b7f137df1db58496f27de23bbe99cdfd6",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,17 @@\n-  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n     final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n     return new ThreadFactory() {\n       @Override\n       public Thread newThread(Runnable r) {\n         Thread t \u003d namedFactory.newThread(r);\n         if (!t.isDaemon()) {\n           t.setDaemon(true);\n         }\n         if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n           t.setPriority(Thread.NORM_PRIORITY);\n         }\n         return t;\n       }\n \n     };\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/BlockingThreadPoolExecutorService.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public, static]"
          }
        }
      ]
    },
    "28792b6b7f137df1db58496f27de23bbe99cdfd6": {
      "type": "Ymodifierchange",
      "commitMessage": "Revert \"HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\"\n\nThis reverts commit 479d6a5792262c977025c26fd4960574b0db6847\n",
      "commitDate": "13/12/17 7:05 PM",
      "commitName": "28792b6b7f137df1db58496f27de23bbe99cdfd6",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "05/12/17 8:01 PM",
      "commitNameOld": "73b86979d661f4ad56fcfc3a05a403dfcb2a860e",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 7.96,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n     final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n     return new ThreadFactory() {\n       @Override\n       public Thread newThread(Runnable r) {\n         Thread t \u003d namedFactory.newThread(r);\n         if (!t.isDaemon()) {\n           t.setDaemon(true);\n         }\n         if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n           t.setPriority(Thread.NORM_PRIORITY);\n         }\n         return t;\n       }\n \n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldValue": "[public, static]",
        "newValue": "[static]"
      }
    },
    "73b86979d661f4ad56fcfc3a05a403dfcb2a860e": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-15039. Move SemaphoredDelegatingExecutor to hadoop-common. Contributed by Genmao Yu\n",
      "commitDate": "05/12/17 8:01 PM",
      "commitName": "73b86979d661f4ad56fcfc3a05a403dfcb2a860e",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "22/11/17 7:28 AM",
      "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 13.52,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n     final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n     return new ThreadFactory() {\n       @Override\n       public Thread newThread(Runnable r) {\n         Thread t \u003d namedFactory.newThread(r);\n         if (!t.isDaemon()) {\n           t.setDaemon(true);\n         }\n         if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n           t.setPriority(Thread.NORM_PRIORITY);\n         }\n         return t;\n       }\n \n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldValue": "[static]",
        "newValue": "[public, static]"
      }
    },
    "2158496f6bed5f9d14751b82bd5d43b9fd786b95": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-13826. S3A Deadlock in multipart copy due to thread pool limits. Contributed by  Sean Mackrory.\n\n(cherry picked from commit e3a74e0369e6e2217d1280179b390227fe1b1684)\n",
      "commitDate": "21/02/17 10:28 AM",
      "commitName": "2158496f6bed5f9d14751b82bd5d43b9fd786b95",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "18/10/16 1:16 PM",
      "commitNameOld": "6c348c56918973fd988b110e79231324a8befe12",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 125.93,
      "commitsBetweenForRepo": 766,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  private static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n     final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n     return new ThreadFactory() {\n       @Override\n       public Thread newThread(Runnable r) {\n         Thread t \u003d namedFactory.newThread(r);\n         if (!t.isDaemon()) {\n           t.setDaemon(true);\n         }\n         if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n           t.setPriority(Thread.NORM_PRIORITY);\n         }\n         return t;\n       }\n \n     };\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[static]"
      }
    },
    "bff7c90a5686de106ca7a866982412c5dfa01632": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-11684. S3a to use thread pool that blocks clients. (Thomas Demoor and Aaron Fabbri via lei)\n",
      "commitDate": "05/11/15 6:35 PM",
      "commitName": "bff7c90a5686de106ca7a866982412c5dfa01632",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "05/11/15 4:57 PM",
      "commitNameOld": "19a0c2660cce0dccf968376bed249de94b58b8a2",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/BlockingThreadPoolExecutorService.java",
        "oldMethodName": "newDaemonThreadFactory",
        "newMethodName": "newDaemonThreadFactory"
      }
    },
    "27d8395867f665fea1360087325cda5ed70efd0c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-11446 S3AOutputStream should use shared thread pool to avoid OutOfMemoryError\n",
      "commitDate": "05/01/15 5:00 AM",
      "commitName": "27d8395867f665fea1360087325cda5ed70efd0c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,17 @@\n+  private static ThreadFactory newDaemonThreadFactory(final String prefix) {\n+    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n+    return new ThreadFactory() {\n+      @Override\n+      public Thread newThread(Runnable r) {\n+        Thread t \u003d namedFactory.newThread(r);\n+        if (!t.isDaemon()) {\n+          t.setDaemon(true);\n+        }\n+        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n+          t.setPriority(Thread.NORM_PRIORITY);\n+        }\n+        return t;\n+      }\n+\n+    };\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static ThreadFactory newDaemonThreadFactory(final String prefix) {\n    final ThreadFactory namedFactory \u003d getNamedThreadFactory(prefix);\n    return new ThreadFactory() {\n      @Override\n      public Thread newThread(Runnable r) {\n        Thread t \u003d namedFactory.newThread(r);\n        if (!t.isDaemon()) {\n          t.setDaemon(true);\n        }\n        if (t.getPriority() !\u003d Thread.NORM_PRIORITY) {\n          t.setPriority(Thread.NORM_PRIORITY);\n        }\n        return t;\n      }\n\n    };\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AFileSystem.java"
    }
  }
}