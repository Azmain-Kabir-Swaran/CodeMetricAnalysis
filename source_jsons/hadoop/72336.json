{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleUdpServer.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java",
  "functionStartLine": 55,
  "functionEndLine": 76,
  "numCommitsSeen": 6,
  "timeTaken": 1160,
  "changeHistory": [
    "899d5c4d49f00d90ddc3632efb2df92841867192",
    "60ce825a71850fe0622d551159e8d66f32448bb5",
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0",
    "25cdbdb71a65242b2bc08ca1d61f2c0f7d7ea891",
    "8ef140d38b16a18050e9e7901e8aadd424aef20f"
  ],
  "changeHistoryShort": {
    "899d5c4d49f00d90ddc3632efb2df92841867192": "Ybodychange",
    "60ce825a71850fe0622d551159e8d66f32448bb5": "Ybodychange",
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0": "Ybodychange",
    "25cdbdb71a65242b2bc08ca1d61f2c0f7d7ea891": "Ybodychange",
    "8ef140d38b16a18050e9e7901e8aadd424aef20f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "899d5c4d49f00d90ddc3632efb2df92841867192": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11479. Socket re-use address option should be used in SimpleUdpServer. Contributed by Mukul Kumar Singh.\n",
      "commitDate": "01/03/17 12:59 PM",
      "commitName": "899d5c4d49f00d90ddc3632efb2df92841867192",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/04/15 5:04 PM",
      "commitNameOld": "60ce825a71850fe0622d551159e8d66f32448bb5",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 699.87,
      "commitsBetweenForRepo": 5031,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public void run() {\n     // Configure the client.\n     DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n         Executors.newCachedThreadPool(), workerCount);\n \n     server \u003d new ConnectionlessBootstrap(f);\n     server.setPipeline(Channels.pipeline(RpcUtil.STAGE_RPC_MESSAGE_PARSER,\n         rpcProgram, RpcUtil.STAGE_RPC_UDP_RESPONSE));\n \n     server.setOption(\"broadcast\", \"false\");\n     server.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n     server.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n+    server.setOption(\"reuseAddress\", true);\n \n     // Listen to the UDP port\n     ch \u003d server.bind(new InetSocketAddress(port));\n     InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n     boundPort \u003d socketAddr.getPort();\n \n     LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n         + rpcProgram + \" with workerCount \" + workerCount);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n        Executors.newCachedThreadPool(), workerCount);\n\n    server \u003d new ConnectionlessBootstrap(f);\n    server.setPipeline(Channels.pipeline(RpcUtil.STAGE_RPC_MESSAGE_PARSER,\n        rpcProgram, RpcUtil.STAGE_RPC_UDP_RESPONSE));\n\n    server.setOption(\"broadcast\", \"false\");\n    server.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n    server.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n    server.setOption(\"reuseAddress\", true);\n\n    // Listen to the UDP port\n    ch \u003d server.bind(new InetSocketAddress(port));\n    InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n    boundPort \u003d socketAddr.getPort();\n\n    LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n        + rpcProgram + \" with workerCount \" + workerCount);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java",
      "extendedDetails": {}
    },
    "60ce825a71850fe0622d551159e8d66f32448bb5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11757. NFS gateway should shutdown when it can\u0027t start UDP or TCP server. Contributed by Brandon Li\n",
      "commitDate": "01/04/15 5:04 PM",
      "commitName": "60ce825a71850fe0622d551159e8d66f32448bb5",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "09/11/13 8:07 PM",
      "commitNameOld": "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 507.83,
      "commitsBetweenForRepo": 3968,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   public void run() {\n     // Configure the client.\n     DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n         Executors.newCachedThreadPool(), workerCount);\n \n-    ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n-    b.setPipeline(Channels.pipeline(\n-            RpcUtil.STAGE_RPC_MESSAGE_PARSER, rpcProgram,\n-            RpcUtil.STAGE_RPC_UDP_RESPONSE));\n+    server \u003d new ConnectionlessBootstrap(f);\n+    server.setPipeline(Channels.pipeline(RpcUtil.STAGE_RPC_MESSAGE_PARSER,\n+        rpcProgram, RpcUtil.STAGE_RPC_UDP_RESPONSE));\n \n-    b.setOption(\"broadcast\", \"false\");\n-    b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n-    b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n-    \n+    server.setOption(\"broadcast\", \"false\");\n+    server.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n+    server.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n+\n     // Listen to the UDP port\n-    Channel ch \u003d b.bind(new InetSocketAddress(port));\n+    ch \u003d server.bind(new InetSocketAddress(port));\n     InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n     boundPort \u003d socketAddr.getPort();\n-    \n+\n     LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n         + rpcProgram + \" with workerCount \" + workerCount);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n        Executors.newCachedThreadPool(), workerCount);\n\n    server \u003d new ConnectionlessBootstrap(f);\n    server.setPipeline(Channels.pipeline(RpcUtil.STAGE_RPC_MESSAGE_PARSER,\n        rpcProgram, RpcUtil.STAGE_RPC_UDP_RESPONSE));\n\n    server.setOption(\"broadcast\", \"false\");\n    server.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n    server.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n\n    // Listen to the UDP port\n    ch \u003d server.bind(new InetSocketAddress(port));\n    InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n    boundPort \u003d socketAddr.getPort();\n\n    LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n        + rpcProgram + \" with workerCount \" + workerCount);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java",
      "extendedDetails": {}
    },
    "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5469. Add configuration property for the sub-directroy export path. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1540443 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/11/13 8:07 PM",
      "commitName": "ec9ec0084eccdd45a8c3e37ef8121fb8bd44ecd0",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "30/09/13 12:21 PM",
      "commitNameOld": "25cdbdb71a65242b2bc08ca1d61f2c0f7d7ea891",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 40.37,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public void run() {\n     // Configure the client.\n     DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n         Executors.newCachedThreadPool(), workerCount);\n \n     ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n     b.setPipeline(Channels.pipeline(\n             RpcUtil.STAGE_RPC_MESSAGE_PARSER, rpcProgram,\n             RpcUtil.STAGE_RPC_UDP_RESPONSE));\n \n     b.setOption(\"broadcast\", \"false\");\n     b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n     b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n     \n     // Listen to the UDP port\n-    b.bind(new InetSocketAddress(port));\n-\n-    LOG.info(\"Started listening to UDP requests at port \" + port + \" for \"\n+    Channel ch \u003d b.bind(new InetSocketAddress(port));\n+    InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n+    boundPort \u003d socketAddr.getPort();\n+    \n+    LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n         + rpcProgram + \" with workerCount \" + workerCount);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n        Executors.newCachedThreadPool(), workerCount);\n\n    ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n    b.setPipeline(Channels.pipeline(\n            RpcUtil.STAGE_RPC_MESSAGE_PARSER, rpcProgram,\n            RpcUtil.STAGE_RPC_UDP_RESPONSE));\n\n    b.setOption(\"broadcast\", \"false\");\n    b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n    b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n    \n    // Listen to the UDP port\n    Channel ch \u003d b.bind(new InetSocketAddress(port));\n    InetSocketAddress socketAddr \u003d (InetSocketAddress) ch.getLocalAddress();\n    boundPort \u003d socketAddr.getPort();\n    \n    LOG.info(\"Started listening to UDP requests at port \" + boundPort + \" for \"\n        + rpcProgram + \" with workerCount \" + workerCount);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java",
      "extendedDetails": {}
    },
    "25cdbdb71a65242b2bc08ca1d61f2c0f7d7ea891": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5230. Introduce RpcInfo to decouple XDR classes from the RPC API. Contributed by Haohui Mai\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1527726 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/13 12:21 PM",
      "commitName": "25cdbdb71a65242b2bc08ca1d61f2c0f7d7ea891",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "07/06/13 2:45 PM",
      "commitNameOld": "8ef140d38b16a18050e9e7901e8aadd424aef20f",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 114.9,
      "commitsBetweenForRepo": 666,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,20 @@\n   public void run() {\n     // Configure the client.\n     DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n         Executors.newCachedThreadPool(), workerCount);\n \n     ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n-    ChannelPipeline p \u003d b.getPipeline();\n-    p.addLast(\"handler\", new SimpleUdpServerHandler(rpcProgram));\n+    b.setPipeline(Channels.pipeline(\n+            RpcUtil.STAGE_RPC_MESSAGE_PARSER, rpcProgram,\n+            RpcUtil.STAGE_RPC_UDP_RESPONSE));\n \n     b.setOption(\"broadcast\", \"false\");\n     b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n     b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n     \n     // Listen to the UDP port\n     b.bind(new InetSocketAddress(port));\n \n     LOG.info(\"Started listening to UDP requests at port \" + port + \" for \"\n         + rpcProgram + \" with workerCount \" + workerCount);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n        Executors.newCachedThreadPool(), workerCount);\n\n    ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n    b.setPipeline(Channels.pipeline(\n            RpcUtil.STAGE_RPC_MESSAGE_PARSER, rpcProgram,\n            RpcUtil.STAGE_RPC_UDP_RESPONSE));\n\n    b.setOption(\"broadcast\", \"false\");\n    b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n    b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n    \n    // Listen to the UDP port\n    b.bind(new InetSocketAddress(port));\n\n    LOG.info(\"Started listening to UDP requests at port \" + port + \" for \"\n        + rpcProgram + \" with workerCount \" + workerCount);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java",
      "extendedDetails": {}
    },
    "8ef140d38b16a18050e9e7901e8aadd424aef20f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9509. Implement ONCRPC and XDR. Contributed by Brandon Li\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1490845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/06/13 2:45 PM",
      "commitName": "8ef140d38b16a18050e9e7901e8aadd424aef20f",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,19 @@\n+  public void run() {\n+    // Configure the client.\n+    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n+        Executors.newCachedThreadPool(), workerCount);\n+\n+    ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n+    ChannelPipeline p \u003d b.getPipeline();\n+    p.addLast(\"handler\", new SimpleUdpServerHandler(rpcProgram));\n+\n+    b.setOption(\"broadcast\", \"false\");\n+    b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n+    b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n+    \n+    // Listen to the UDP port\n+    b.bind(new InetSocketAddress(port));\n+\n+    LOG.info(\"Started listening to UDP requests at port \" + port + \" for \"\n+        + rpcProgram + \" with workerCount \" + workerCount);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Configure the client.\n    DatagramChannelFactory f \u003d new NioDatagramChannelFactory(\n        Executors.newCachedThreadPool(), workerCount);\n\n    ConnectionlessBootstrap b \u003d new ConnectionlessBootstrap(f);\n    ChannelPipeline p \u003d b.getPipeline();\n    p.addLast(\"handler\", new SimpleUdpServerHandler(rpcProgram));\n\n    b.setOption(\"broadcast\", \"false\");\n    b.setOption(\"sendBufferSize\", SEND_BUFFER_SIZE);\n    b.setOption(\"receiveBufferSize\", RECEIVE_BUFFER_SIZE);\n    \n    // Listen to the UDP port\n    b.bind(new InetSocketAddress(port));\n\n    LOG.info(\"Started listening to UDP requests at port \" + port + \" for \"\n        + rpcProgram + \" with workerCount \" + workerCount);\n  }",
      "path": "hadoop-common-project/hadoop-nfs/src/main/java/org/apache/hadoop/oncrpc/SimpleUdpServer.java"
    }
  }
}