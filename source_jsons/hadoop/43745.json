{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ServiceApiUtil.java",
  "functionName": "validateServiceResource",
  "functionId": "validateServiceResource___resource-Resource__comp-Component",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
  "functionStartLine": 394,
  "functionEndLine": 444,
  "numCommitsSeen": 52,
  "timeTaken": 5786,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Ymultichange(Yfilerename,Ybodychange,Yrename)",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yfilerename",
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": "Ymultichange(Yparameterchange,Ybodychange)",
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Ymultichange(Yfilerename,Ybodychange,Yrename)",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,51 @@\n-  private static void validateApplicationResource(Resource resource,\n+  private static void validateServiceResource(Resource resource,\n       Component comp) {\n-    // Only apps/components of type APPLICATION can skip resource requirement\n+    // Only services/components of type SERVICE can skip resource requirement\n     if (resource \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n               .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n     if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n         resource.getCpus() !\u003d null || StringUtils\n             .isNotEmpty(resource.getMemory()))) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n           String.format(\n               RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n               comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n           .format(\n               RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n               comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateServiceResource(Resource resource,\n      Component comp) {\n    // Only services/components of type SERVICE can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,51 @@\n-  private static void validateApplicationResource(Resource resource,\n+  private static void validateServiceResource(Resource resource,\n       Component comp) {\n-    // Only apps/components of type APPLICATION can skip resource requirement\n+    // Only services/components of type SERVICE can skip resource requirement\n     if (resource \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n               .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n     if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n         resource.getCpus() !\u003d null || StringUtils\n             .isNotEmpty(resource.getMemory()))) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n           String.format(\n               RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n               comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n           .format(\n               RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n               comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateServiceResource(Resource resource,\n      Component comp) {\n    // Only services/components of type SERVICE can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
          "commitAuthor": "Billie Rinaldi",
          "commitDateOld": "06/11/17 1:30 PM",
          "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
          "commitAuthorOld": "Gour Saha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,51 +1,51 @@\n-  private static void validateApplicationResource(Resource resource,\n+  private static void validateServiceResource(Resource resource,\n       Component comp) {\n-    // Only apps/components of type APPLICATION can skip resource requirement\n+    // Only services/components of type SERVICE can skip resource requirement\n     if (resource \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n               .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n     if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n         resource.getCpus() !\u003d null || StringUtils\n             .isNotEmpty(resource.getMemory()))) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n           String.format(\n               RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n               comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n           .format(\n               RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n               comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateServiceResource(Resource resource,\n      Component comp) {\n    // Only services/components of type SERVICE can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
          "extendedDetails": {
            "oldValue": "validateApplicationResource",
            "newValue": "validateServiceResource"
          }
        }
      ]
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yfilerename",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "27dcc679596edaaeb18dc42d2a812957a9d34e89",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/utils/ServiceApiUtil.java"
      }
    },
    "a0574e7f4f5a6e53677ada4381db5504f263d70f": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,51 @@\n   private static void validateApplicationResource(Resource resource,\n-      Component comp, Artifact.TypeEnum artifactType) {\n+      Component comp) {\n     // Only apps/components of type APPLICATION can skip resource requirement\n-    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n-      return;\n-    }\n     if (resource \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n               .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n     if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n         resource.getCpus() !\u003d null || StringUtils\n             .isNotEmpty(resource.getMemory()))) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n           String.format(\n               RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n               comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n           .format(\n               RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n               comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
          "extendedDetails": {
            "oldValue": "[resource-Resource, comp-Component, artifactType-Artifact.TypeEnum]",
            "newValue": "[resource-Resource, comp-Component]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6613. Update json validation for new native services providers. Contributed by Billie Rinaldi\n",
          "commitDate": "06/11/17 1:30 PM",
          "commitName": "a0574e7f4f5a6e53677ada4381db5504f263d70f",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "845764da146e98927e8ea5b2209f19f4fc3feda5",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 10,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,54 +1,51 @@\n   private static void validateApplicationResource(Resource resource,\n-      Component comp, Artifact.TypeEnum artifactType) {\n+      Component comp) {\n     // Only apps/components of type APPLICATION can skip resource requirement\n-    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n-      return;\n-    }\n     if (resource \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n               .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n     if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n         resource.getCpus() !\u003d null || StringUtils\n             .isNotEmpty(resource.getMemory()))) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n           String.format(\n               RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n               comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n           RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n           comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n               String.format(\n                   RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                   comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n       throw new IllegalArgumentException(comp \u003d\u003d null ?\n           RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n           .format(\n               RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n               comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "c31cd981ebabc0747cabcc07a8c8797619ed2c53": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "024e90a50838f19e92630902d7af21ad30b5772c",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,46 +1,54 @@\n-  private void validateApplicationResource(Resource resource, Component comp,\n-      Artifact.TypeEnum artifactType) {\n+  private static void validateApplicationResource(Resource resource,\n+      Component comp, Artifact.TypeEnum artifactType) {\n     // Only apps/components of type APPLICATION can skip resource requirement\n     if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n       return;\n     }\n     if (resource \u003d\u003d null) {\n-      throw new IllegalArgumentException(comp \u003d\u003d null ? ERROR_RESOURCE_INVALID\n-          : String.format(ERROR_RESOURCE_FOR_COMP_INVALID, comp.getName()));\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n+              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n-    if (StringUtils.isNotEmpty(resource.getProfile())\n-        \u0026\u0026 (resource.getCpus() !\u003d null\n-            || StringUtils.isNotEmpty(resource.getMemory()))) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED\n-              : String.format(\n-                  ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n-                  comp.getName()));\n+    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n+        resource.getCpus() !\u003d null || StringUtils\n+            .isNotEmpty(resource.getMemory()))) {\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n+          String.format(\n+              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n+              comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n-          ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_MEMORY_INVALID : String.format(\n-              ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID_RANGE : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE, comp.getName()));\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n+          .format(\n+              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n+              comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp, Artifact.TypeEnum artifactType) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n      return;\n    }\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/api/impl/ApplicationApiService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
            "oldMethodName": "validateApplicationResource",
            "newMethodName": "validateApplicationResource"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "024e90a50838f19e92630902d7af21ad30b5772c",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,46 +1,54 @@\n-  private void validateApplicationResource(Resource resource, Component comp,\n-      Artifact.TypeEnum artifactType) {\n+  private static void validateApplicationResource(Resource resource,\n+      Component comp, Artifact.TypeEnum artifactType) {\n     // Only apps/components of type APPLICATION can skip resource requirement\n     if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n       return;\n     }\n     if (resource \u003d\u003d null) {\n-      throw new IllegalArgumentException(comp \u003d\u003d null ? ERROR_RESOURCE_INVALID\n-          : String.format(ERROR_RESOURCE_FOR_COMP_INVALID, comp.getName()));\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n+              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n-    if (StringUtils.isNotEmpty(resource.getProfile())\n-        \u0026\u0026 (resource.getCpus() !\u003d null\n-            || StringUtils.isNotEmpty(resource.getMemory()))) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED\n-              : String.format(\n-                  ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n-                  comp.getName()));\n+    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n+        resource.getCpus() !\u003d null || StringUtils\n+            .isNotEmpty(resource.getMemory()))) {\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n+          String.format(\n+              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n+              comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n-          ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_MEMORY_INVALID : String.format(\n-              ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID_RANGE : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE, comp.getName()));\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n+          .format(\n+              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n+              comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp, Artifact.TypeEnum artifactType) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n      return;\n    }\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6255. Refactor yarn-native-services framework. Contributed by Jian He\n",
          "commitDate": "06/11/17 1:28 PM",
          "commitName": "c31cd981ebabc0747cabcc07a8c8797619ed2c53",
          "commitAuthor": "Jian He",
          "commitDateOld": "06/11/17 1:28 PM",
          "commitNameOld": "024e90a50838f19e92630902d7af21ad30b5772c",
          "commitAuthorOld": "Billie Rinaldi",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,46 +1,54 @@\n-  private void validateApplicationResource(Resource resource, Component comp,\n-      Artifact.TypeEnum artifactType) {\n+  private static void validateApplicationResource(Resource resource,\n+      Component comp, Artifact.TypeEnum artifactType) {\n     // Only apps/components of type APPLICATION can skip resource requirement\n     if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n       return;\n     }\n     if (resource \u003d\u003d null) {\n-      throw new IllegalArgumentException(comp \u003d\u003d null ? ERROR_RESOURCE_INVALID\n-          : String.format(ERROR_RESOURCE_FOR_COMP_INVALID, comp.getName()));\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n+              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n     // both raises validation error.\n-    if (StringUtils.isNotEmpty(resource.getProfile())\n-        \u0026\u0026 (resource.getCpus() !\u003d null\n-            || StringUtils.isNotEmpty(resource.getMemory()))) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED\n-              : String.format(\n-                  ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n-                  comp.getName()));\n+    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n+        resource.getCpus() !\u003d null || StringUtils\n+            .isNotEmpty(resource.getMemory()))) {\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n+          String.format(\n+              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n+              comp.getName()));\n     }\n     // Currently resource profile is not supported yet, so we will raise\n     // validation error if only resource profile is specified\n     if (StringUtils.isNotEmpty(resource.getProfile())) {\n       throw new IllegalArgumentException(\n-          ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n+          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n     }\n \n     String memory \u003d resource.getMemory();\n     Integer cpus \u003d resource.getCpus();\n     if (StringUtils.isEmpty(memory)) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_MEMORY_INVALID : String.format(\n-              ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003d\u003d null) {\n       throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID, comp.getName()));\n+          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n+              String.format(\n+                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n+                  comp.getName()));\n     }\n     if (cpus \u003c\u003d 0) {\n-      throw new IllegalArgumentException(\n-          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID_RANGE : String.format(\n-              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE, comp.getName()));\n+      throw new IllegalArgumentException(comp \u003d\u003d null ?\n+          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n+          .format(\n+              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n+              comp.getName()));\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateApplicationResource(Resource resource,\n      Component comp, Artifact.TypeEnum artifactType) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n      return;\n    }\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_INVALID : String\n              .format(RestApiErrorMessages.ERROR_RESOURCE_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile()) \u0026\u0026 (\n        resource.getCpus() !\u003d null || StringUtils\n            .isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED :\n          String.format(\n              RestApiErrorMessages.ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n              comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          RestApiErrorMessages.ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_MEMORY_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID :\n              String.format(\n                  RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID,\n                  comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ?\n          RestApiErrorMessages.ERROR_RESOURCE_CPUS_INVALID_RANGE : String\n          .format(\n              RestApiErrorMessages.ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE,\n              comp.getName()));\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/slider/util/ServiceApiUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "18bf0dce28a9a602f67a0c28fe5c350065931bd0": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5610. Initial code for native services REST API. Contributed by Gour Saha\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "18bf0dce28a9a602f67a0c28fe5c350065931bd0",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,46 @@\n+  private void validateApplicationResource(Resource resource, Component comp,\n+      Artifact.TypeEnum artifactType) {\n+    // Only apps/components of type APPLICATION can skip resource requirement\n+    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n+      return;\n+    }\n+    if (resource \u003d\u003d null) {\n+      throw new IllegalArgumentException(comp \u003d\u003d null ? ERROR_RESOURCE_INVALID\n+          : String.format(ERROR_RESOURCE_FOR_COMP_INVALID, comp.getName()));\n+    }\n+    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n+    // both raises validation error.\n+    if (StringUtils.isNotEmpty(resource.getProfile())\n+        \u0026\u0026 (resource.getCpus() !\u003d null\n+            || StringUtils.isNotEmpty(resource.getMemory()))) {\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED\n+              : String.format(\n+                  ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n+                  comp.getName()));\n+    }\n+    // Currently resource profile is not supported yet, so we will raise\n+    // validation error if only resource profile is specified\n+    if (StringUtils.isNotEmpty(resource.getProfile())) {\n+      throw new IllegalArgumentException(\n+          ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n+    }\n+\n+    String memory \u003d resource.getMemory();\n+    Integer cpus \u003d resource.getCpus();\n+    if (StringUtils.isEmpty(memory)) {\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? ERROR_RESOURCE_MEMORY_INVALID : String.format(\n+              ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID, comp.getName()));\n+    }\n+    if (cpus \u003d\u003d null) {\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID : String.format(\n+              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID, comp.getName()));\n+    }\n+    if (cpus \u003c\u003d 0) {\n+      throw new IllegalArgumentException(\n+          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID_RANGE : String.format(\n+              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE, comp.getName()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void validateApplicationResource(Resource resource, Component comp,\n      Artifact.TypeEnum artifactType) {\n    // Only apps/components of type APPLICATION can skip resource requirement\n    if (resource \u003d\u003d null \u0026\u0026 artifactType \u003d\u003d Artifact.TypeEnum.APPLICATION) {\n      return;\n    }\n    if (resource \u003d\u003d null) {\n      throw new IllegalArgumentException(comp \u003d\u003d null ? ERROR_RESOURCE_INVALID\n          : String.format(ERROR_RESOURCE_FOR_COMP_INVALID, comp.getName()));\n    }\n    // One and only one of profile OR cpus \u0026 memory can be specified. Specifying\n    // both raises validation error.\n    if (StringUtils.isNotEmpty(resource.getProfile())\n        \u0026\u0026 (resource.getCpus() !\u003d null\n            || StringUtils.isNotEmpty(resource.getMemory()))) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_NOT_SUPPORTED\n              : String.format(\n                  ERROR_RESOURCE_PROFILE_MULTIPLE_VALUES_FOR_COMP_NOT_SUPPORTED,\n                  comp.getName()));\n    }\n    // Currently resource profile is not supported yet, so we will raise\n    // validation error if only resource profile is specified\n    if (StringUtils.isNotEmpty(resource.getProfile())) {\n      throw new IllegalArgumentException(\n          ERROR_RESOURCE_PROFILE_NOT_SUPPORTED_YET);\n    }\n\n    String memory \u003d resource.getMemory();\n    Integer cpus \u003d resource.getCpus();\n    if (StringUtils.isEmpty(memory)) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? ERROR_RESOURCE_MEMORY_INVALID : String.format(\n              ERROR_RESOURCE_MEMORY_FOR_COMP_INVALID, comp.getName()));\n    }\n    if (cpus \u003d\u003d null) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID : String.format(\n              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID, comp.getName()));\n    }\n    if (cpus \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          comp \u003d\u003d null ? ERROR_RESOURCE_CPUS_INVALID_RANGE : String.format(\n              ERROR_RESOURCE_CPUS_FOR_COMP_INVALID_RANGE, comp.getName()));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services-api/src/main/java/org/apache/hadoop/yarn/services/api/impl/ApplicationApiService.java"
    }
  }
}