{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DistCpOptions.java",
  "functionName": "validate",
  "functionId": "validate",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
  "functionStartLine": 546,
  "functionEndLine": 603,
  "numCommitsSeen": 52,
  "timeTaken": 5685,
  "changeHistory": [
    "19a001826f6ab9ac2caa92b66864f62218557beb",
    "ee3115f488ce8e44bffac15af9c646190bf67b88",
    "7ef4d942dd96232b0743a40ed25f77065254f94d",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30",
    "26172a94d6431e70d7fe15d66be9a7e195f79f60",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
    "03788d3015c962eac1a35fa5df39356e8b84731c",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": "Ybodychange",
    "ee3115f488ce8e44bffac15af9c646190bf67b88": "Ybodychange",
    "7ef4d942dd96232b0743a40ed25f77065254f94d": "Ybodychange",
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": "Ybodychange",
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": "Ymultichange(Ymodifierchange,Ybodychange)",
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": "Ybodychange",
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": "Ybodychange",
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": "Ybodychange",
    "03788d3015c962eac1a35fa5df39356e8b84731c": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": "Ybodychange",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": "Ybodychange",
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19a001826f6ab9ac2caa92b66864f62218557beb": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\"\n\nReverting due to test failures if ~/.Trash not present during test setup.\n\nThis reverts commit ee3115f488ce8e44bffac15af9c646190bf67b88.\n\nChange-Id: Icbeeb261570b9131ff99d765ac0945c335b26658\n",
      "commitDate": "17/07/19 5:13 AM",
      "commitName": "19a001826f6ab9ac2caa92b66864f62218557beb",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/19 3:50 AM",
      "commitNameOld": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthorOld": "Shen Yinjie",
      "daysBetweenCommits": 0.06,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,58 @@\n     private void validate() {\n       if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n         // -delete and -diff/-rdiff are mutually exclusive.\n         throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n             + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n \n       if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n         throw new IllegalArgumentException(\n             \"-tmp work-path can only be specified along with -atomic\");\n       }\n \n       if (syncFolder \u0026\u0026 atomicCommit) {\n         throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n             + \"sync folder or overwrite options\");\n       }\n \n       if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n         throw new IllegalArgumentException(\"Delete missing is applicable \"\n             + \"only with update or overwrite options\");\n       }\n \n-      if (deleteUseTrash \u0026\u0026 !deleteMissing) {\n-        throw new IllegalArgumentException(\"Delete useTrash is applicable \"\n-            + \"only with delete option\");\n-      }\n-\n       if (overwrite \u0026\u0026 syncFolder) {\n         throw new IllegalArgumentException(\"Overwrite and update options are \"\n             + \"mutually exclusive\");\n       }\n \n       if (!syncFolder \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is valid only with update options\");\n       }\n       if (skipCRC \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is disallowed when skipping CRC\");\n       }\n       if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n         throw new IllegalArgumentException(\n             \"-diff/-rdiff is valid only with -update option\");\n       }\n \n       if (useDiff || useRdiff) {\n         if (StringUtils.isBlank(fromSnapshot) ||\n             StringUtils.isBlank(toSnapshot)) {\n           throw new IllegalArgumentException(\n               \"Must provide both the starting and ending \" +\n                   \"snapshot names for -diff/-rdiff\");\n         }\n       }\n       if (useDiff \u0026\u0026 useRdiff) {\n         throw new IllegalArgumentException(\n             \"-diff and -rdiff are mutually exclusive\");\n       }\n \n       if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n         throw new IllegalArgumentException(\n             \"-v is valid only with -log option\");\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n\n      if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n        throw new IllegalArgumentException(\n            \"-v is valid only with -log option\");\n      }\n    }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ee3115f488ce8e44bffac15af9c646190bf67b88": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9913. DistCp to add -useTrash to move deleted files to Trash.\n\nContributed by Shen Yinjie.\n\nChange-Id: I03ac7d22ab1054f8e5de4aa7552909c734438f4a\n",
      "commitDate": "17/07/19 3:50 AM",
      "commitName": "ee3115f488ce8e44bffac15af9c646190bf67b88",
      "commitAuthor": "Shen Yinjie",
      "commitDateOld": "07/02/19 2:07 AM",
      "commitNameOld": "de804e53b9d20a2df75a4c7252bf83ed52011488",
      "commitAuthorOld": "Andrew Olson",
      "daysBetweenCommits": 160.03,
      "commitsBetweenForRepo": 1184,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,63 @@\n     private void validate() {\n       if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n         // -delete and -diff/-rdiff are mutually exclusive.\n         throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n             + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n \n       if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n         throw new IllegalArgumentException(\n             \"-tmp work-path can only be specified along with -atomic\");\n       }\n \n       if (syncFolder \u0026\u0026 atomicCommit) {\n         throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n             + \"sync folder or overwrite options\");\n       }\n \n       if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n         throw new IllegalArgumentException(\"Delete missing is applicable \"\n             + \"only with update or overwrite options\");\n       }\n \n+      if (deleteUseTrash \u0026\u0026 !deleteMissing) {\n+        throw new IllegalArgumentException(\"Delete useTrash is applicable \"\n+            + \"only with delete option\");\n+      }\n+\n       if (overwrite \u0026\u0026 syncFolder) {\n         throw new IllegalArgumentException(\"Overwrite and update options are \"\n             + \"mutually exclusive\");\n       }\n \n       if (!syncFolder \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is valid only with update options\");\n       }\n       if (skipCRC \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is disallowed when skipping CRC\");\n       }\n       if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n         throw new IllegalArgumentException(\n             \"-diff/-rdiff is valid only with -update option\");\n       }\n \n       if (useDiff || useRdiff) {\n         if (StringUtils.isBlank(fromSnapshot) ||\n             StringUtils.isBlank(toSnapshot)) {\n           throw new IllegalArgumentException(\n               \"Must provide both the starting and ending \" +\n                   \"snapshot names for -diff/-rdiff\");\n         }\n       }\n       if (useDiff \u0026\u0026 useRdiff) {\n         throw new IllegalArgumentException(\n             \"-diff and -rdiff are mutually exclusive\");\n       }\n \n       if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n         throw new IllegalArgumentException(\n             \"-v is valid only with -log option\");\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (deleteUseTrash \u0026\u0026 !deleteMissing) {\n        throw new IllegalArgumentException(\"Delete useTrash is applicable \"\n            + \"only with delete option\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n\n      if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n        throw new IllegalArgumentException(\n            \"-v is valid only with -log option\");\n      }\n    }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "7ef4d942dd96232b0743a40ed25f77065254f94d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15273.distcp can\u0027t handle remote stores with different checksum algorithms.\nContributed by Steve Loughran.\n",
      "commitDate": "08/03/18 3:24 AM",
      "commitName": "7ef4d942dd96232b0743a40ed25f77065254f94d",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/09/17 11:34 PM",
      "commitNameOld": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 183.2,
      "commitsBetweenForRepo": 1318,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,63 +1,58 @@\n     private void validate() {\n       if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n         // -delete and -diff/-rdiff are mutually exclusive.\n         throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n             + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n \n       if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n         throw new IllegalArgumentException(\n             \"-tmp work-path can only be specified along with -atomic\");\n       }\n \n       if (syncFolder \u0026\u0026 atomicCommit) {\n         throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n             + \"sync folder or overwrite options\");\n       }\n \n       if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n         throw new IllegalArgumentException(\"Delete missing is applicable \"\n             + \"only with update or overwrite options\");\n       }\n \n       if (overwrite \u0026\u0026 syncFolder) {\n         throw new IllegalArgumentException(\"Overwrite and update options are \"\n             + \"mutually exclusive\");\n       }\n \n-      if (!syncFolder \u0026\u0026 skipCRC) {\n-        throw new IllegalArgumentException(\n-            \"Skip CRC is valid only with update options\");\n-      }\n-\n       if (!syncFolder \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is valid only with update options\");\n       }\n       if (skipCRC \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is disallowed when skipping CRC\");\n       }\n       if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n         throw new IllegalArgumentException(\n             \"-diff/-rdiff is valid only with -update option\");\n       }\n \n       if (useDiff || useRdiff) {\n         if (StringUtils.isBlank(fromSnapshot) ||\n             StringUtils.isBlank(toSnapshot)) {\n           throw new IllegalArgumentException(\n               \"Must provide both the starting and ending \" +\n                   \"snapshot names for -diff/-rdiff\");\n         }\n       }\n       if (useDiff \u0026\u0026 useRdiff) {\n         throw new IllegalArgumentException(\n             \"-diff and -rdiff are mutually exclusive\");\n       }\n \n       if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n         throw new IllegalArgumentException(\n             \"-v is valid only with -log option\");\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n\n      if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n        throw new IllegalArgumentException(\n            \"-v is valid only with -log option\");\n      }\n    }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "63720ef574df6d79a9bab0628edb915d1e3a7c30": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14839. DistCp log output should contain copied and deleted files and directories. Contributed by Yiqun Lin.\n",
      "commitDate": "05/09/17 11:34 PM",
      "commitName": "63720ef574df6d79a9bab0628edb915d1e3a7c30",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "18/05/17 3:35 PM",
      "commitNameOld": "b4adc8392c1314d6d6fbdd00f2afb306ef20a650",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 110.33,
      "commitsBetweenForRepo": 692,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,63 @@\n     private void validate() {\n       if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n         // -delete and -diff/-rdiff are mutually exclusive.\n         throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n             + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n \n       if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n         throw new IllegalArgumentException(\n             \"-tmp work-path can only be specified along with -atomic\");\n       }\n \n       if (syncFolder \u0026\u0026 atomicCommit) {\n         throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n             + \"sync folder or overwrite options\");\n       }\n \n       if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n         throw new IllegalArgumentException(\"Delete missing is applicable \"\n             + \"only with update or overwrite options\");\n       }\n \n       if (overwrite \u0026\u0026 syncFolder) {\n         throw new IllegalArgumentException(\"Overwrite and update options are \"\n             + \"mutually exclusive\");\n       }\n \n       if (!syncFolder \u0026\u0026 skipCRC) {\n         throw new IllegalArgumentException(\n             \"Skip CRC is valid only with update options\");\n       }\n \n       if (!syncFolder \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is valid only with update options\");\n       }\n       if (skipCRC \u0026\u0026 append) {\n         throw new IllegalArgumentException(\n             \"Append is disallowed when skipping CRC\");\n       }\n       if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n         throw new IllegalArgumentException(\n             \"-diff/-rdiff is valid only with -update option\");\n       }\n \n       if (useDiff || useRdiff) {\n         if (StringUtils.isBlank(fromSnapshot) ||\n             StringUtils.isBlank(toSnapshot)) {\n           throw new IllegalArgumentException(\n               \"Must provide both the starting and ending \" +\n                   \"snapshot names for -diff/-rdiff\");\n         }\n       }\n       if (useDiff \u0026\u0026 useRdiff) {\n         throw new IllegalArgumentException(\n             \"-diff and -rdiff are mutually exclusive\");\n       }\n+\n+      if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n+        throw new IllegalArgumentException(\n+            \"-v is valid only with -log option\");\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 skipCRC) {\n        throw new IllegalArgumentException(\n            \"Skip CRC is valid only with update options\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n\n      if (verboseLog \u0026\u0026 logPath \u003d\u003d null) {\n        throw new IllegalArgumentException(\n            \"-v is valid only with -log option\");\n      }\n    }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "26172a94d6431e70d7fe15d66be9a7e195f79f60": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
      "commitDate": "31/03/17 8:04 PM",
      "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthor": "Mingliang Liu",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,58 @@\n-  void validate() {\n-    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n-      // -delete and -diff/-rdiff are mutually exclusive. For backward\n-      // compatibility, we ignore the -delete option here, instead of throwing\n-      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n-      OptionsParser.LOG.warn(\n-          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n-          \"The -delete option will be ignored.\");\n-      setDeleteMissing(false);\n-    }\n-\n-    if (syncFolder \u0026\u0026 atomicCommit) {\n-      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n-          \"sync folder or overwrite options\");\n-    }\n-\n-    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n-      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n-          \"only with update or overwrite options\");\n-    }\n-\n-    if (overwrite \u0026\u0026 syncFolder) {\n-      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n-          \"mutually exclusive\");\n-    }\n-\n-    if (!syncFolder \u0026\u0026 skipCRC) {\n-      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n-    }\n-\n-    if (!syncFolder \u0026\u0026 append) {\n-      throw new IllegalArgumentException(\n-          \"Append is valid only with update options\");\n-    }\n-    if (skipCRC \u0026\u0026 append) {\n-      throw new IllegalArgumentException(\n-          \"Append is disallowed when skipping CRC\");\n-    }\n-    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n-      throw new IllegalArgumentException(\n-          \"-diff/-rdiff is valid only with -update option\");\n-    }\n-\n-    if (useDiff || useRdiff) {\n-      if (StringUtils.isBlank(fromSnapshot) ||\n-          StringUtils.isBlank(toSnapshot)) {\n-        throw new IllegalArgumentException(\n-            \"Must provide both the starting and ending \" +\n-            \"snapshot names for -diff/-rdiff\");\n+    private void validate() {\n+      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n+        // -delete and -diff/-rdiff are mutually exclusive.\n+        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n+            + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n-    }\n-    if (useDiff \u0026\u0026 useRdiff) {\n-      throw new IllegalArgumentException(\n-          \"-diff and -rdiff are mutually exclusive\");\n-    }\n-  }\n\\ No newline at end of file\n+\n+      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n+        throw new IllegalArgumentException(\n+            \"-tmp work-path can only be specified along with -atomic\");\n+      }\n+\n+      if (syncFolder \u0026\u0026 atomicCommit) {\n+        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n+            + \"sync folder or overwrite options\");\n+      }\n+\n+      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n+        throw new IllegalArgumentException(\"Delete missing is applicable \"\n+            + \"only with update or overwrite options\");\n+      }\n+\n+      if (overwrite \u0026\u0026 syncFolder) {\n+        throw new IllegalArgumentException(\"Overwrite and update options are \"\n+            + \"mutually exclusive\");\n+      }\n+\n+      if (!syncFolder \u0026\u0026 skipCRC) {\n+        throw new IllegalArgumentException(\n+            \"Skip CRC is valid only with update options\");\n+      }\n+\n+      if (!syncFolder \u0026\u0026 append) {\n+        throw new IllegalArgumentException(\n+            \"Append is valid only with update options\");\n+      }\n+      if (skipCRC \u0026\u0026 append) {\n+        throw new IllegalArgumentException(\n+            \"Append is disallowed when skipping CRC\");\n+      }\n+      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n+        throw new IllegalArgumentException(\n+            \"-diff/-rdiff is valid only with -update option\");\n+      }\n+\n+      if (useDiff || useRdiff) {\n+        if (StringUtils.isBlank(fromSnapshot) ||\n+            StringUtils.isBlank(toSnapshot)) {\n+          throw new IllegalArgumentException(\n+              \"Must provide both the starting and ending \" +\n+                  \"snapshot names for -diff/-rdiff\");\n+        }\n+      }\n+      if (useDiff \u0026\u0026 useRdiff) {\n+        throw new IllegalArgumentException(\n+            \"-diff and -rdiff are mutually exclusive\");\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 skipCRC) {\n        throw new IllegalArgumentException(\n            \"Skip CRC is valid only with update options\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n    }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-14267. Make DistCpOptions immutable. Contributed by Mingliang Liu\n",
          "commitDate": "31/03/17 8:04 PM",
          "commitName": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
          "commitAuthor": "Mingliang Liu",
          "commitDateOld": "30/03/17 5:38 PM",
          "commitNameOld": "bf3fb585aaf2b179836e139c041fc87920a3c886",
          "commitAuthorOld": "Yongjun Zhang",
          "daysBetweenCommits": 1.1,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,56 +1,58 @@\n-  void validate() {\n-    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n-      // -delete and -diff/-rdiff are mutually exclusive. For backward\n-      // compatibility, we ignore the -delete option here, instead of throwing\n-      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n-      OptionsParser.LOG.warn(\n-          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n-          \"The -delete option will be ignored.\");\n-      setDeleteMissing(false);\n-    }\n-\n-    if (syncFolder \u0026\u0026 atomicCommit) {\n-      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n-          \"sync folder or overwrite options\");\n-    }\n-\n-    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n-      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n-          \"only with update or overwrite options\");\n-    }\n-\n-    if (overwrite \u0026\u0026 syncFolder) {\n-      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n-          \"mutually exclusive\");\n-    }\n-\n-    if (!syncFolder \u0026\u0026 skipCRC) {\n-      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n-    }\n-\n-    if (!syncFolder \u0026\u0026 append) {\n-      throw new IllegalArgumentException(\n-          \"Append is valid only with update options\");\n-    }\n-    if (skipCRC \u0026\u0026 append) {\n-      throw new IllegalArgumentException(\n-          \"Append is disallowed when skipping CRC\");\n-    }\n-    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n-      throw new IllegalArgumentException(\n-          \"-diff/-rdiff is valid only with -update option\");\n-    }\n-\n-    if (useDiff || useRdiff) {\n-      if (StringUtils.isBlank(fromSnapshot) ||\n-          StringUtils.isBlank(toSnapshot)) {\n-        throw new IllegalArgumentException(\n-            \"Must provide both the starting and ending \" +\n-            \"snapshot names for -diff/-rdiff\");\n+    private void validate() {\n+      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n+        // -delete and -diff/-rdiff are mutually exclusive.\n+        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n+            + \"mutually exclusive. The -delete option will be ignored.\");\n       }\n-    }\n-    if (useDiff \u0026\u0026 useRdiff) {\n-      throw new IllegalArgumentException(\n-          \"-diff and -rdiff are mutually exclusive\");\n-    }\n-  }\n\\ No newline at end of file\n+\n+      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n+        throw new IllegalArgumentException(\n+            \"-tmp work-path can only be specified along with -atomic\");\n+      }\n+\n+      if (syncFolder \u0026\u0026 atomicCommit) {\n+        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n+            + \"sync folder or overwrite options\");\n+      }\n+\n+      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n+        throw new IllegalArgumentException(\"Delete missing is applicable \"\n+            + \"only with update or overwrite options\");\n+      }\n+\n+      if (overwrite \u0026\u0026 syncFolder) {\n+        throw new IllegalArgumentException(\"Overwrite and update options are \"\n+            + \"mutually exclusive\");\n+      }\n+\n+      if (!syncFolder \u0026\u0026 skipCRC) {\n+        throw new IllegalArgumentException(\n+            \"Skip CRC is valid only with update options\");\n+      }\n+\n+      if (!syncFolder \u0026\u0026 append) {\n+        throw new IllegalArgumentException(\n+            \"Append is valid only with update options\");\n+      }\n+      if (skipCRC \u0026\u0026 append) {\n+        throw new IllegalArgumentException(\n+            \"Append is disallowed when skipping CRC\");\n+      }\n+      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n+        throw new IllegalArgumentException(\n+            \"-diff/-rdiff is valid only with -update option\");\n+      }\n+\n+      if (useDiff || useRdiff) {\n+        if (StringUtils.isBlank(fromSnapshot) ||\n+            StringUtils.isBlank(toSnapshot)) {\n+          throw new IllegalArgumentException(\n+              \"Must provide both the starting and ending \" +\n+                  \"snapshot names for -diff/-rdiff\");\n+        }\n+      }\n+      if (useDiff \u0026\u0026 useRdiff) {\n+        throw new IllegalArgumentException(\n+            \"-diff and -rdiff are mutually exclusive\");\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    private void validate() {\n      if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n        // -delete and -diff/-rdiff are mutually exclusive.\n        throw new IllegalArgumentException(\"-delete and -diff/-rdiff are \"\n            + \"mutually exclusive. The -delete option will be ignored.\");\n      }\n\n      if (!atomicCommit \u0026\u0026 atomicWorkPath !\u003d null) {\n        throw new IllegalArgumentException(\n            \"-tmp work-path can only be specified along with -atomic\");\n      }\n\n      if (syncFolder \u0026\u0026 atomicCommit) {\n        throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \"\n            + \"sync folder or overwrite options\");\n      }\n\n      if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n        throw new IllegalArgumentException(\"Delete missing is applicable \"\n            + \"only with update or overwrite options\");\n      }\n\n      if (overwrite \u0026\u0026 syncFolder) {\n        throw new IllegalArgumentException(\"Overwrite and update options are \"\n            + \"mutually exclusive\");\n      }\n\n      if (!syncFolder \u0026\u0026 skipCRC) {\n        throw new IllegalArgumentException(\n            \"Skip CRC is valid only with update options\");\n      }\n\n      if (!syncFolder \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is valid only with update options\");\n      }\n      if (skipCRC \u0026\u0026 append) {\n        throw new IllegalArgumentException(\n            \"Append is disallowed when skipping CRC\");\n      }\n      if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n        throw new IllegalArgumentException(\n            \"-diff/-rdiff is valid only with -update option\");\n      }\n\n      if (useDiff || useRdiff) {\n        if (StringUtils.isBlank(fromSnapshot) ||\n            StringUtils.isBlank(toSnapshot)) {\n          throw new IllegalArgumentException(\n              \"Must provide both the starting and ending \" +\n                  \"snapshot names for -diff/-rdiff\");\n        }\n      }\n      if (useDiff \u0026\u0026 useRdiff) {\n        throw new IllegalArgumentException(\n            \"-diff and -rdiff are mutually exclusive\");\n      }\n    }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
          "extendedDetails": {}
        }
      ]
    },
    "8650cc84f20e7d8c32dcdcd91c94372d476e2276": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "19/10/16 5:37 PM",
      "commitName": "8650cc84f20e7d8c32dcdcd91c94372d476e2276",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 10:47 PM",
      "commitNameOld": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 1.78,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,56 @@\n   void validate() {\n-    if (useDiff \u0026\u0026 deleteMissing) {\n-      // -delete and -diff are mutually exclusive. For backward compatibility,\n-      // we ignore the -delete option here, instead of throwing an\n-      // IllegalArgumentException. See HDFS-10397 for more discussion.\n-      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n+    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n+      // -delete and -diff/-rdiff are mutually exclusive. For backward\n+      // compatibility, we ignore the -delete option here, instead of throwing\n+      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\n+          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n           \"The -delete option will be ignored.\");\n       setDeleteMissing(false);\n     }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if (!syncFolder \u0026\u0026 useDiff) {\n+    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n       throw new IllegalArgumentException(\n-          \"Diff is valid only with update options\");\n+          \"-diff/-rdiff is valid only with -update option\");\n+    }\n+\n+    if (useDiff || useRdiff) {\n+      if (StringUtils.isBlank(fromSnapshot) ||\n+          StringUtils.isBlank(toSnapshot)) {\n+        throw new IllegalArgumentException(\n+            \"Must provide both the starting and ending \" +\n+            \"snapshot names for -diff/-rdiff\");\n+      }\n+    }\n+    if (useDiff \u0026\u0026 useRdiff) {\n+      throw new IllegalArgumentException(\n+          \"-diff and -rdiff are mutually exclusive\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void validate() {\n    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n      // -delete and -diff/-rdiff are mutually exclusive. For backward\n      // compatibility, we ignore the -delete option here, instead of throwing\n      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\n          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n      throw new IllegalArgumentException(\n          \"-diff/-rdiff is valid only with -update option\");\n    }\n\n    if (useDiff || useRdiff) {\n      if (StringUtils.isBlank(fromSnapshot) ||\n          StringUtils.isBlank(toSnapshot)) {\n        throw new IllegalArgumentException(\n            \"Must provide both the starting and ending \" +\n            \"snapshot names for -diff/-rdiff\");\n      }\n    }\n    if (useDiff \u0026\u0026 useRdiff) {\n      throw new IllegalArgumentException(\n          \"-diff and -rdiff are mutually exclusive\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\"\n\nThis reverts commit 412c4c9a342b73bf1c1a7f43ea91245cbf94d02d.\n",
      "commitDate": "17/10/16 10:47 PM",
      "commitName": "0bc6d37f3c1e7c2a8682dffa95461a884bd6ba17",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "17/10/16 11:04 AM",
      "commitNameOld": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.49,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,42 @@\n   void validate() {\n-    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n-      // -delete and -diff/-rdiff are mutually exclusive. For backward\n-      // compatibility, we ignore the -delete option here, instead of throwing\n-      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n-      OptionsParser.LOG.warn(\n-          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n+    if (useDiff \u0026\u0026 deleteMissing) {\n+      // -delete and -diff are mutually exclusive. For backward compatibility,\n+      // we ignore the -delete option here, instead of throwing an\n+      // IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n           \"The -delete option will be ignored.\");\n       setDeleteMissing(false);\n     }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n+    if (!syncFolder \u0026\u0026 useDiff) {\n       throw new IllegalArgumentException(\n-          \"-diff/-rdiff is valid only with -update option\");\n-    }\n-\n-    if (useDiff || useRdiff) {\n-      if (StringUtils.isBlank(fromSnapshot) ||\n-          StringUtils.isBlank(toSnapshot)) {\n-        throw new IllegalArgumentException(\n-            \"Must provide both the starting and ending \" +\n-            \"snapshot names for -diff/-rdiff\");\n-      }\n-    }\n-    if (useDiff \u0026\u0026 useRdiff) {\n-      throw new IllegalArgumentException(\n-          \"-diff and -rdiff are mutually exclusive\");\n+          \"Diff is valid only with update options\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void validate() {\n    if (useDiff \u0026\u0026 deleteMissing) {\n      // -delete and -diff are mutually exclusive. For backward compatibility,\n      // we ignore the -delete option here, instead of throwing an\n      // IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update options\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9820. Improve distcp to support efficient restore to an earlier snapshot. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/10/16 11:04 AM",
      "commitName": "412c4c9a342b73bf1c1a7f43ea91245cbf94d02d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "12/09/16 8:26 AM",
      "commitNameOld": "9faccd104672dfef123735ca8ada178fc3a6196f",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 35.11,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,56 @@\n   void validate() {\n-    if (useDiff \u0026\u0026 deleteMissing) {\n-      // -delete and -diff are mutually exclusive. For backward compatibility,\n-      // we ignore the -delete option here, instead of throwing an\n-      // IllegalArgumentException. See HDFS-10397 for more discussion.\n-      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n+    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n+      // -delete and -diff/-rdiff are mutually exclusive. For backward\n+      // compatibility, we ignore the -delete option here, instead of throwing\n+      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\n+          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n           \"The -delete option will be ignored.\");\n       setDeleteMissing(false);\n     }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if (!syncFolder \u0026\u0026 useDiff) {\n+    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n       throw new IllegalArgumentException(\n-          \"Diff is valid only with update options\");\n+          \"-diff/-rdiff is valid only with -update option\");\n+    }\n+\n+    if (useDiff || useRdiff) {\n+      if (StringUtils.isBlank(fromSnapshot) ||\n+          StringUtils.isBlank(toSnapshot)) {\n+        throw new IllegalArgumentException(\n+            \"Must provide both the starting and ending \" +\n+            \"snapshot names for -diff/-rdiff\");\n+      }\n+    }\n+    if (useDiff \u0026\u0026 useRdiff) {\n+      throw new IllegalArgumentException(\n+          \"-diff and -rdiff are mutually exclusive\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void validate() {\n    if ((useDiff || useRdiff) \u0026\u0026 deleteMissing) {\n      // -delete and -diff/-rdiff are mutually exclusive. For backward\n      // compatibility, we ignore the -delete option here, instead of throwing\n      // an IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\n          \"-delete and -diff/-rdiff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 (useDiff || useRdiff)) {\n      throw new IllegalArgumentException(\n          \"-diff/-rdiff is valid only with -update option\");\n    }\n\n    if (useDiff || useRdiff) {\n      if (StringUtils.isBlank(fromSnapshot) ||\n          StringUtils.isBlank(toSnapshot)) {\n        throw new IllegalArgumentException(\n            \"Must provide both the starting and ending \" +\n            \"snapshot names for -diff/-rdiff\");\n      }\n    }\n    if (useDiff \u0026\u0026 useRdiff) {\n      throw new IllegalArgumentException(\n          \"-diff and -rdiff are mutually exclusive\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "03788d3015c962eac1a35fa5df39356e8b84731c": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-10397. Distcp should ignore -delete option if -diff option is provided instead of exiting. Contributed by Mingliang Liu.\n",
      "commitDate": "17/05/16 3:46 PM",
      "commitName": "03788d3015c962eac1a35fa5df39356e8b84731c",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10397. Distcp should ignore -delete option if -diff option is provided instead of exiting. Contributed by Mingliang Liu.\n",
          "commitDate": "17/05/16 3:46 PM",
          "commitName": "03788d3015c962eac1a35fa5df39356e8b84731c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/03/16 11:32 PM",
          "commitNameOld": "18c7e582839ea0b550463569b18b5827d23f8849",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 50.68,
          "commitsBetweenForRepo": 336,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,47 +1,42 @@\n-  public void validate(DistCpOptionSwitch option, boolean value) {\n-\n-    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n-        value : this.syncFolder);\n-    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n-        value : this.overwrite);\n-    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n-        value : this.deleteMissing);\n-    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n-        value : this.atomicCommit);\n-    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n-        value : this.skipCRC);\n-    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n-    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n+  void validate() {\n+    if (useDiff \u0026\u0026 deleteMissing) {\n+      // -delete and -diff are mutually exclusive. For backward compatibility,\n+      // we ignore the -delete option here, instead of throwing an\n+      // IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n+          \"The -delete option will be ignored.\");\n+      setDeleteMissing(false);\n+    }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if ((!syncFolder || deleteMissing) \u0026\u0026 useDiff) {\n+    if (!syncFolder \u0026\u0026 useDiff) {\n       throw new IllegalArgumentException(\n           \"Diff is valid only with update options\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void validate() {\n    if (useDiff \u0026\u0026 deleteMissing) {\n      // -delete and -diff are mutually exclusive. For backward compatibility,\n      // we ignore the -delete option here, instead of throwing an\n      // IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update options\");\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
          "extendedDetails": {
            "oldValue": "[option-DistCpOptionSwitch, value-boolean]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10397. Distcp should ignore -delete option if -diff option is provided instead of exiting. Contributed by Mingliang Liu.\n",
          "commitDate": "17/05/16 3:46 PM",
          "commitName": "03788d3015c962eac1a35fa5df39356e8b84731c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/03/16 11:32 PM",
          "commitNameOld": "18c7e582839ea0b550463569b18b5827d23f8849",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 50.68,
          "commitsBetweenForRepo": 336,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,47 +1,42 @@\n-  public void validate(DistCpOptionSwitch option, boolean value) {\n-\n-    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n-        value : this.syncFolder);\n-    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n-        value : this.overwrite);\n-    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n-        value : this.deleteMissing);\n-    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n-        value : this.atomicCommit);\n-    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n-        value : this.skipCRC);\n-    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n-    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n+  void validate() {\n+    if (useDiff \u0026\u0026 deleteMissing) {\n+      // -delete and -diff are mutually exclusive. For backward compatibility,\n+      // we ignore the -delete option here, instead of throwing an\n+      // IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n+          \"The -delete option will be ignored.\");\n+      setDeleteMissing(false);\n+    }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if ((!syncFolder || deleteMissing) \u0026\u0026 useDiff) {\n+    if (!syncFolder \u0026\u0026 useDiff) {\n       throw new IllegalArgumentException(\n           \"Diff is valid only with update options\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void validate() {\n    if (useDiff \u0026\u0026 deleteMissing) {\n      // -delete and -diff are mutually exclusive. For backward compatibility,\n      // we ignore the -delete option here, instead of throwing an\n      // IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update options\");\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10397. Distcp should ignore -delete option if -diff option is provided instead of exiting. Contributed by Mingliang Liu.\n",
          "commitDate": "17/05/16 3:46 PM",
          "commitName": "03788d3015c962eac1a35fa5df39356e8b84731c",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "27/03/16 11:32 PM",
          "commitNameOld": "18c7e582839ea0b550463569b18b5827d23f8849",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 50.68,
          "commitsBetweenForRepo": 336,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,47 +1,42 @@\n-  public void validate(DistCpOptionSwitch option, boolean value) {\n-\n-    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n-        value : this.syncFolder);\n-    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n-        value : this.overwrite);\n-    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n-        value : this.deleteMissing);\n-    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n-        value : this.atomicCommit);\n-    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n-        value : this.skipCRC);\n-    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n-    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n+  void validate() {\n+    if (useDiff \u0026\u0026 deleteMissing) {\n+      // -delete and -diff are mutually exclusive. For backward compatibility,\n+      // we ignore the -delete option here, instead of throwing an\n+      // IllegalArgumentException. See HDFS-10397 for more discussion.\n+      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n+          \"The -delete option will be ignored.\");\n+      setDeleteMissing(false);\n+    }\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if ((!syncFolder || deleteMissing) \u0026\u0026 useDiff) {\n+    if (!syncFolder \u0026\u0026 useDiff) {\n       throw new IllegalArgumentException(\n           \"Diff is valid only with update options\");\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void validate() {\n    if (useDiff \u0026\u0026 deleteMissing) {\n      // -delete and -diff are mutually exclusive. For backward compatibility,\n      // we ignore the -delete option here, instead of throwing an\n      // IllegalArgumentException. See HDFS-10397 for more discussion.\n      OptionsParser.LOG.warn(\"-delete and -diff are mutually exclusive. \" +\n          \"The -delete option will be ignored.\");\n      setDeleteMissing(false);\n    }\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if (!syncFolder \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update options\");\n    }\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
          "extendedDetails": {}
        }
      ]
    },
    "0bc15cb6e60dc60885234e01dec1c7cb4557a926": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8828. Utilize Snapshot diff report to build diff copy list in distcp. (Yufei Gu via Yongjun Zhang)\n",
      "commitDate": "20/08/15 8:02 AM",
      "commitName": "0bc15cb6e60dc60885234e01dec1c7cb4557a926",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "25/06/15 9:22 PM",
      "commitNameOld": "8ef07f767f0421b006b0fc77e5daf36c7b06abf1",
      "commitAuthorOld": "Amareshwari Sriramadasu",
      "daysBetweenCommits": 55.45,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   public void validate(DistCpOptionSwitch option, boolean value) {\n \n     boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n         value : this.syncFolder);\n     boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n         value : this.overwrite);\n     boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n         value : this.deleteMissing);\n     boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n         value : this.atomicCommit);\n     boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n         value : this.skipCRC);\n     boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n     boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n-    if ((!syncFolder || !deleteMissing) \u0026\u0026 useDiff) {\n+    if ((!syncFolder || deleteMissing) \u0026\u0026 useDiff) {\n       throw new IllegalArgumentException(\n-          \"Diff is valid only with update and delete options\");\n+          \"Diff is valid only with update options\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void validate(DistCpOptionSwitch option, boolean value) {\n\n    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n        value : this.syncFolder);\n    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n        value : this.overwrite);\n    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n        value : this.deleteMissing);\n    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n        value : this.atomicCommit);\n    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n        value : this.skipCRC);\n    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if ((!syncFolder || deleteMissing) \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update options\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7535. Utilize Snapshot diff report for distcp. Contributed by Jing Zhao.\n",
      "commitDate": "04/03/15 10:30 AM",
      "commitName": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/09/14 3:38 PM",
      "commitNameOld": "3cde37c991b18370cc1b383f920a9d5bd2d91adb",
      "commitAuthorOld": "Allen Wittenauer",
      "daysBetweenCommits": 160.83,
      "commitsBetweenForRepo": 1314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,47 @@\n   public void validate(DistCpOptionSwitch option, boolean value) {\n \n     boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n         value : this.syncFolder);\n     boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n         value : this.overwrite);\n     boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n         value : this.deleteMissing);\n     boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n         value : this.atomicCommit);\n     boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n         value : this.skipCRC);\n     boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n+    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n     if (!syncFolder \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is valid only with update options\");\n     }\n     if (skipCRC \u0026\u0026 append) {\n       throw new IllegalArgumentException(\n           \"Append is disallowed when skipping CRC\");\n     }\n+    if ((!syncFolder || !deleteMissing) \u0026\u0026 useDiff) {\n+      throw new IllegalArgumentException(\n+          \"Diff is valid only with update and delete options\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void validate(DistCpOptionSwitch option, boolean value) {\n\n    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n        value : this.syncFolder);\n    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n        value : this.overwrite);\n    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n        value : this.deleteMissing);\n    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n        value : this.atomicCommit);\n    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n        value : this.skipCRC);\n    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n    boolean useDiff \u003d (option \u003d\u003d DistCpOptionSwitch.DIFF ? value : this.useDiff);\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n    if ((!syncFolder || !deleteMissing) \u0026\u0026 useDiff) {\n      throw new IllegalArgumentException(\n          \"Diff is valid only with update and delete options\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "3671a5e16fbddbe5a0516289ce98e1305e02291c": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5899. Support incremental data copy in DistCp. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1596931 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/14 11:17 AM",
      "commitName": "3671a5e16fbddbe5a0516289ce98e1305e02291c",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "16/05/14 11:25 AM",
      "commitNameOld": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 5.99,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,42 @@\n   public void validate(DistCpOptionSwitch option, boolean value) {\n \n     boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n         value : this.syncFolder);\n     boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n         value : this.overwrite);\n     boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n         value : this.deleteMissing);\n     boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n         value : this.atomicCommit);\n     boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n         value : this.skipCRC);\n+    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n \n     if (syncFolder \u0026\u0026 atomicCommit) {\n       throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n           \"sync folder or overwrite options\");\n     }\n \n     if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n       throw new IllegalArgumentException(\"Delete missing is applicable \" +\n           \"only with update or overwrite options\");\n     }\n \n     if (overwrite \u0026\u0026 syncFolder) {\n       throw new IllegalArgumentException(\"Overwrite and update options are \" +\n           \"mutually exclusive\");\n     }\n \n     if (!syncFolder \u0026\u0026 skipCRC) {\n       throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n     }\n \n+    if (!syncFolder \u0026\u0026 append) {\n+      throw new IllegalArgumentException(\n+          \"Append is valid only with update options\");\n+    }\n+    if (skipCRC \u0026\u0026 append) {\n+      throw new IllegalArgumentException(\n+          \"Append is disallowed when skipping CRC\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void validate(DistCpOptionSwitch option, boolean value) {\n\n    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n        value : this.syncFolder);\n    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n        value : this.overwrite);\n    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n        value : this.deleteMissing);\n    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n        value : this.atomicCommit);\n    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n        value : this.skipCRC);\n    boolean append \u003d (option \u003d\u003d DistCpOptionSwitch.APPEND ? value : this.append);\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n    if (!syncFolder \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is valid only with update options\");\n    }\n    if (skipCRC \u0026\u0026 append) {\n      throw new IllegalArgumentException(\n          \"Append is disallowed when skipping CRC\");\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,33 @@\n+  public void validate(DistCpOptionSwitch option, boolean value) {\n+\n+    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n+        value : this.syncFolder);\n+    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n+        value : this.overwrite);\n+    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n+        value : this.deleteMissing);\n+    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n+        value : this.atomicCommit);\n+    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n+        value : this.skipCRC);\n+\n+    if (syncFolder \u0026\u0026 atomicCommit) {\n+      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n+          \"sync folder or overwrite options\");\n+    }\n+\n+    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n+      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n+          \"only with update or overwrite options\");\n+    }\n+\n+    if (overwrite \u0026\u0026 syncFolder) {\n+      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n+          \"mutually exclusive\");\n+    }\n+\n+    if (!syncFolder \u0026\u0026 skipCRC) {\n+      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void validate(DistCpOptionSwitch option, boolean value) {\n\n    boolean syncFolder \u003d (option \u003d\u003d DistCpOptionSwitch.SYNC_FOLDERS ?\n        value : this.syncFolder);\n    boolean overwrite \u003d (option \u003d\u003d DistCpOptionSwitch.OVERWRITE ?\n        value : this.overwrite);\n    boolean deleteMissing \u003d (option \u003d\u003d DistCpOptionSwitch.DELETE_MISSING ?\n        value : this.deleteMissing);\n    boolean atomicCommit \u003d (option \u003d\u003d DistCpOptionSwitch.ATOMIC_COMMIT ?\n        value : this.atomicCommit);\n    boolean skipCRC \u003d (option \u003d\u003d DistCpOptionSwitch.SKIP_CRC ?\n        value : this.skipCRC);\n\n    if (syncFolder \u0026\u0026 atomicCommit) {\n      throw new IllegalArgumentException(\"Atomic commit can\u0027t be used with \" +\n          \"sync folder or overwrite options\");\n    }\n\n    if (deleteMissing \u0026\u0026 !(overwrite || syncFolder)) {\n      throw new IllegalArgumentException(\"Delete missing is applicable \" +\n          \"only with update or overwrite options\");\n    }\n\n    if (overwrite \u0026\u0026 syncFolder) {\n      throw new IllegalArgumentException(\"Overwrite and update options are \" +\n          \"mutually exclusive\");\n    }\n\n    if (!syncFolder \u0026\u0026 skipCRC) {\n      throw new IllegalArgumentException(\"Skip CRC is valid only with update options\");\n    }\n\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/DistCpOptions.java"
    }
  }
}