{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCSQueue.java",
  "functionName": "getQueueInfo",
  "functionId": "getQueueInfo",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
  "functionStartLine": 699,
  "functionEndLine": 718,
  "numCommitsSeen": 76,
  "timeTaken": 4965,
  "changeHistory": [
    "949721508467968d5f46170353716ad04349cd6f",
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
    "c5e6e3de1c31eda052f89eddd7bba288625936b9",
    "9ff25408bc096dfc0a8522106eec54282303c7ab",
    "0840b4329b2428b20b862f70d72cbdcd6d1618ed",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "7faa406f27f687844c941346f59a27a375af3233",
    "577d755e4bf72d6adedeba51be01ff5f3f028de0",
    "18a594257e052e8f10a03e5594e6cc6901dc56be",
    "dd57c2047bfd21910acc38c98153eedf1db75169"
  ],
  "changeHistoryShort": {
    "949721508467968d5f46170353716ad04349cd6f": "Ybodychange",
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922": "Ybodychange",
    "c5e6e3de1c31eda052f89eddd7bba288625936b9": "Ybodychange",
    "9ff25408bc096dfc0a8522106eec54282303c7ab": "Ybodychange",
    "0840b4329b2428b20b862f70d72cbdcd6d1618ed": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ybodychange",
    "7faa406f27f687844c941346f59a27a375af3233": "Ybodychange",
    "577d755e4bf72d6adedeba51be01ff5f3f028de0": "Ybodychange",
    "18a594257e052e8f10a03e5594e6cc6901dc56be": "Ybodychange",
    "dd57c2047bfd21910acc38c98153eedf1db75169": "Yintroduced"
  },
  "changeHistoryDetails": {
    "949721508467968d5f46170353716ad04349cd6f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7813. Capacity Scheduler Intra-queue Preemption should be configurable for each queue. Contributed by Eric Payne\n",
      "commitDate": "19/02/18 12:06 PM",
      "commitName": "949721508467968d5f46170353716ad04349cd6f",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "14/02/18 12:29 PM",
      "commitNameOld": "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 4.98,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   protected QueueInfo getQueueInfo() {\n     // Deliberately doesn\u0027t use lock here, because this method will be invoked\n     // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n     // consistency here.\n     // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(getState());\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n+    queueInfo.setIntraQueuePreemptionDisabled(\n+        getIntraQueuePreemptionDisabled());\n     queueInfo.setQueueConfigurations(getQueueConfigurations());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(getState());\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    queueInfo.setIntraQueuePreemptionDisabled(\n        getIntraQueuePreemptionDisabled());\n    queueInfo.setQueueConfigurations(getQueueConfigurations());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "bddfe42e2ccda2e6cc9d149461640ba36eca5922": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7813: Capacity Scheduler Intra-queue Preemption should be configurable for each queue\"\n\nThis reverts commit c5e6e3de1c31eda052f89eddd7bba288625936b9.\n",
      "commitDate": "14/02/18 12:29 PM",
      "commitName": "bddfe42e2ccda2e6cc9d149461640ba36eca5922",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "13/02/18 8:11 AM",
      "commitNameOld": "c5e6e3de1c31eda052f89eddd7bba288625936b9",
      "commitAuthorOld": "Eric Payne",
      "daysBetweenCommits": 1.18,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,18 @@\n   protected QueueInfo getQueueInfo() {\n     // Deliberately doesn\u0027t use lock here, because this method will be invoked\n     // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n     // consistency here.\n     // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(getState());\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n-    queueInfo.setIntraQueuePreemptionDisabled(\n-        getIntraQueuePreemptionDisabled());\n     queueInfo.setQueueConfigurations(getQueueConfigurations());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(getState());\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    queueInfo.setQueueConfigurations(getQueueConfigurations());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "c5e6e3de1c31eda052f89eddd7bba288625936b9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7813: Capacity Scheduler Intra-queue Preemption should be configurable for each queue\n",
      "commitDate": "13/02/18 8:11 AM",
      "commitName": "c5e6e3de1c31eda052f89eddd7bba288625936b9",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "13/12/17 9:19 AM",
      "commitNameOld": "cb87e4dc927731e32b0bbcf678bb5600835ff28d",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 61.95,
      "commitsBetweenForRepo": 362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   protected QueueInfo getQueueInfo() {\n     // Deliberately doesn\u0027t use lock here, because this method will be invoked\n     // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n     // consistency here.\n     // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(getState());\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n+    queueInfo.setIntraQueuePreemptionDisabled(\n+        getIntraQueuePreemptionDisabled());\n     queueInfo.setQueueConfigurations(getQueueConfigurations());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(getState());\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    queueInfo.setIntraQueuePreemptionDisabled(\n        getIntraQueuePreemptionDisabled());\n    queueInfo.setQueueConfigurations(getQueueConfigurations());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "9ff25408bc096dfc0a8522106eec54282303c7ab": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6164. Expose Queue Configurations per Node Label through YARN client api. Contributed by Benson Qiu.\n",
      "commitDate": "19/04/17 8:09 AM",
      "commitName": "9ff25408bc096dfc0a8522106eec54282303c7ab",
      "commitAuthor": "Sunil G",
      "commitDateOld": "11/04/17 6:44 AM",
      "commitNameOld": "0e065f2edead41f6f894c9d70def389af1c0f239",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 8.06,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   protected QueueInfo getQueueInfo() {\n     // Deliberately doesn\u0027t use lock here, because this method will be invoked\n     // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n     // consistency here.\n     // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(getState());\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n+    queueInfo.setQueueConfigurations(getQueueConfigurations());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(getState());\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    queueInfo.setQueueConfigurations(getQueueConfigurations());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "0840b4329b2428b20b862f70d72cbdcd6d1618ed": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5756. Add state-machine implementation for scheduler queues. (Xuan Gong via wangda)\n",
      "commitDate": "27/12/16 9:18 PM",
      "commitName": "0840b4329b2428b20b862f70d72cbdcd6d1618ed",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "06/12/16 9:09 PM",
      "commitNameOld": "563480dccd0136d82730f4228f1df44449ed5822",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 21.01,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   protected QueueInfo getQueueInfo() {\n     // Deliberately doesn\u0027t use lock here, because this method will be invoked\n     // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n     // consistency here.\n     // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n-    queueInfo.setQueueState(state);\n+    queueInfo.setQueueState(getState());\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(getState());\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "commitDateOld": "05/08/16 10:27 AM",
      "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 45.57,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   protected QueueInfo getQueueInfo() {\n+    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n+    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n+    // consistency here.\n+    // TODO, improve this\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(state);\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n     queueInfo.setPreemptionDisabled(preemptionDisabled);\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    // Deliberately doesn\u0027t use lock here, because this method will be invoked\n    // from schedulerApplicationAttempt, to avoid deadlock, sacrifice\n    // consistency here.\n    // TODO, improve this\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(state);\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "7faa406f27f687844c941346f59a27a375af3233": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4225. Add preemption status to yarn queue -status for capacity scheduler. (Eric Payne via wangda)\n",
      "commitDate": "16/12/15 1:19 PM",
      "commitName": "7faa406f27f687844c941346f59a27a375af3233",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "26/10/15 1:07 PM",
      "commitNameOld": "3cc73773eb26f7469c99b25a76814d6fad0be28e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 51.05,
      "commitsBetweenForRepo": 361,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   protected QueueInfo getQueueInfo() {\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(state);\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     queueInfo.setQueueStatistics(getQueueStatistics());\n+    queueInfo.setPreemptionDisabled(preemptionDisabled);\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(state);\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    queueInfo.setPreemptionDisabled(preemptionDisabled);\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "577d755e4bf72d6adedeba51be01ff5f3f028de0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3348. Add a \u0027yarn top\u0027 tool to help understand cluster usage. Contributed by Varun Vasudev\n",
      "commitDate": "10/04/15 9:57 AM",
      "commitName": "577d755e4bf72d6adedeba51be01ff5f3f028de0",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/03/15 1:54 PM",
      "commitNameOld": "586348e4cbf197188057d6b843a6701cfffdaff3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 20.84,
      "commitsBetweenForRepo": 189,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   protected QueueInfo getQueueInfo() {\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n     queueInfo.setCapacity(queueCapacities.getCapacity());\n     queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(state);\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n+    queueInfo.setQueueStatistics(getQueueStatistics());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(state);\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    queueInfo.setQueueStatistics(getQueueStatistics());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "18a594257e052e8f10a03e5594e6cc6901dc56be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3124. Fixed CS LeafQueue/ParentQueue to use QueueCapacities to track capacities-by-label. Contributed by Wangda Tan\n",
      "commitDate": "12/02/15 2:58 PM",
      "commitName": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthor": "Jian He",
      "commitDateOld": "09/02/15 8:34 PM",
      "commitNameOld": "23bf6c72071782e3fd5a628e21495d6b974c7a9e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 2.77,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   protected QueueInfo getQueueInfo() {\n     QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n     queueInfo.setQueueName(queueName);\n     queueInfo.setAccessibleNodeLabels(accessibleLabels);\n-    queueInfo.setCapacity(capacity);\n-    queueInfo.setMaximumCapacity(maximumCapacity);\n+    queueInfo.setCapacity(queueCapacities.getCapacity());\n+    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n     queueInfo.setQueueState(state);\n     queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n     queueInfo.setCurrentCapacity(getUsedCapacity());\n     return queueInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(queueCapacities.getCapacity());\n    queueInfo.setMaximumCapacity(queueCapacities.getMaximumCapacity());\n    queueInfo.setQueueState(state);\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java",
      "extendedDetails": {}
    },
    "dd57c2047bfd21910acc38c98153eedf1db75169": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2978. Fixed potential NPE while getting queue info. Contributed by Varun Saxena\n",
      "commitDate": "06/01/15 2:15 PM",
      "commitName": "dd57c2047bfd21910acc38c98153eedf1db75169",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,11 @@\n+  protected QueueInfo getQueueInfo() {\n+    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n+    queueInfo.setQueueName(queueName);\n+    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n+    queueInfo.setCapacity(capacity);\n+    queueInfo.setMaximumCapacity(maximumCapacity);\n+    queueInfo.setQueueState(state);\n+    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n+    queueInfo.setCurrentCapacity(getUsedCapacity());\n+    return queueInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected QueueInfo getQueueInfo() {\n    QueueInfo queueInfo \u003d recordFactory.newRecordInstance(QueueInfo.class);\n    queueInfo.setQueueName(queueName);\n    queueInfo.setAccessibleNodeLabels(accessibleLabels);\n    queueInfo.setCapacity(capacity);\n    queueInfo.setMaximumCapacity(maximumCapacity);\n    queueInfo.setQueueState(state);\n    queueInfo.setDefaultNodeLabelExpression(defaultLabelExpression);\n    queueInfo.setCurrentCapacity(getUsedCapacity());\n    return queueInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AbstractCSQueue.java"
    }
  }
}