{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionName": "getHAServiceState",
  "functionId": "getHAServiceState___controller-RpcController__request-HAServiceStateRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 2008,
  "functionEndLine": 2036,
  "numCommitsSeen": 141,
  "timeTaken": 1403,
  "changeHistory": [
    "652b257478f723a9e119e5e9181f3c7450ac92b5"
  ],
  "changeHistoryShort": {
    "652b257478f723a9e119e5e9181f3c7450ac92b5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "652b257478f723a9e119e5e9181f3c7450ac92b5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14035. NN status discovery does not leverage delegation token. Contributed by Chen Liang.\n",
      "commitDate": "24/12/18 9:34 AM",
      "commitName": "652b257478f723a9e119e5e9181f3c7450ac92b5",
      "commitAuthor": "Chen Liang",
      "diff": "@@ -0,0 +1,29 @@\n+  public HAServiceStateResponseProto getHAServiceState(\n+      RpcController controller,\n+      HAServiceStateRequestProto request) throws ServiceException {\n+    try {\n+      HAServiceProtocol.HAServiceState state \u003d server.getHAServiceState();\n+      HAServiceStateProto retState;\n+      switch (state) {\n+      case ACTIVE:\n+        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.ACTIVE;\n+        break;\n+      case STANDBY:\n+        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.STANDBY;\n+        break;\n+      case OBSERVER:\n+        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.OBSERVER;\n+        break;\n+      case INITIALIZING:\n+      default:\n+        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.INITIALIZING;\n+        break;\n+      }\n+      HAServiceStateResponseProto.Builder builder \u003d\n+          HAServiceStateResponseProto.newBuilder();\n+      builder.setState(retState);\n+      return builder.build();\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public HAServiceStateResponseProto getHAServiceState(\n      RpcController controller,\n      HAServiceStateRequestProto request) throws ServiceException {\n    try {\n      HAServiceProtocol.HAServiceState state \u003d server.getHAServiceState();\n      HAServiceStateProto retState;\n      switch (state) {\n      case ACTIVE:\n        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.ACTIVE;\n        break;\n      case STANDBY:\n        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.STANDBY;\n        break;\n      case OBSERVER:\n        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.OBSERVER;\n        break;\n      case INITIALIZING:\n      default:\n        retState \u003d HAServiceProtocolProtos.HAServiceStateProto.INITIALIZING;\n        break;\n      }\n      HAServiceStateResponseProto.Builder builder \u003d\n          HAServiceStateResponseProto.newBuilder();\n      builder.setState(retState);\n      return builder.build();\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/ClientNamenodeProtocolServerSideTranslatorPB.java"
    }
  }
}