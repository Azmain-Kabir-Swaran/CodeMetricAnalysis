{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobImpl.java",
  "functionName": "handle",
  "functionId": "handle___event-JobEvent",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
  "functionStartLine": 1003,
  "functionEndLine": 1031,
  "numCommitsSeen": 96,
  "timeTaken": 8419,
  "changeHistory": [
    "19295b36d90e26616accee73b1f7743aab5df692",
    "524dad1109946e760deb7e447306c50c99a9c9ef",
    "dd72ca35365b59fcfc5724d2c182ff77e013fc47",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
    "68615600985dfadf067a4967a5e08c1421e7a1c8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "19295b36d90e26616accee73b1f7743aab5df692": "Ybodychange",
    "524dad1109946e760deb7e447306c50c99a9c9ef": "Ybodychange",
    "dd72ca35365b59fcfc5724d2c182ff77e013fc47": "Ybodychange",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": "Ybodychange",
    "68615600985dfadf067a4967a5e08c1421e7a1c8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "19295b36d90e26616accee73b1f7743aab5df692": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3381. Fix typo InvalidStateTransitonException. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "13/07/15 1:52 AM",
      "commitName": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/06/15 2:22 PM",
      "commitNameOld": "b6ba56457c6b01dae795c11d587c3fe3855ee707",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 12.48,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public void handle(JobEvent event) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n           + event.getType());\n     }\n     try {\n       writeLock.lock();\n       JobStateInternal oldState \u003d getInternalState();\n       try {\n          getStateMachine().doTransition(event.getType(), event);\n-      } catch (InvalidStateTransitonException e) {\n+      } catch (InvalidStateTransitionException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         addDiagnostic(\"Invalid event \" + event.getType() + \n             \" on Job \" + this.jobId);\n         eventHandler.handle(new JobEvent(this.jobId,\n             JobEventType.INTERNAL_ERROR));\n       }\n       //notify the eventhandler of state change\n       if (oldState !\u003d getInternalState()) {\n         LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                  + getInternalState());\n         rememberLastNonFinalState(oldState);\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n          + event.getType());\n    }\n    try {\n      writeLock.lock();\n      JobStateInternal oldState \u003d getInternalState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitionException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getInternalState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getInternalState());\n        rememberLastNonFinalState(oldState);\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "524dad1109946e760deb7e447306c50c99a9c9ef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5505. Clients should be notified job finished only after job successfully unregistered (Zhijie Shen via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526071 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/09/13 5:46 PM",
      "commitName": "524dad1109946e760deb7e447306c50c99a9c9ef",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "29/08/13 2:07 PM",
      "commitNameOld": "5d4b684c02ef8b702c68345d7306be2d19195161",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 26.15,
      "commitsBetweenForRepo": 124,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n   public void handle(JobEvent event) {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n           + event.getType());\n     }\n     try {\n       writeLock.lock();\n       JobStateInternal oldState \u003d getInternalState();\n       try {\n          getStateMachine().doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         addDiagnostic(\"Invalid event \" + event.getType() + \n             \" on Job \" + this.jobId);\n         eventHandler.handle(new JobEvent(this.jobId,\n             JobEventType.INTERNAL_ERROR));\n       }\n       //notify the eventhandler of state change\n       if (oldState !\u003d getInternalState()) {\n         LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                  + getInternalState());\n+        rememberLastNonFinalState(oldState);\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n          + event.getType());\n    }\n    try {\n      writeLock.lock();\n      JobStateInternal oldState \u003d getInternalState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getInternalState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getInternalState());\n        rememberLastNonFinalState(oldState);\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "dd72ca35365b59fcfc5724d2c182ff77e013fc47": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4751. AM stuck in KILL_WAIT for days (vinodkv via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1408314 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/11/12 7:15 AM",
      "commitName": "dd72ca35365b59fcfc5724d2c182ff77e013fc47",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "09/11/12 2:55 PM",
      "commitNameOld": "7c9778e2c3bc030daa995a8fb630047739cd484b",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 2.68,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public void handle(JobEvent event) {\n-    LOG.debug(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n+          + event.getType());\n+    }\n     try {\n       writeLock.lock();\n       JobStateInternal oldState \u003d getInternalState();\n       try {\n          getStateMachine().doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         addDiagnostic(\"Invalid event \" + event.getType() + \n             \" on Job \" + this.jobId);\n         eventHandler.handle(new JobEvent(this.jobId,\n             JobEventType.INTERNAL_ERROR));\n       }\n       //notify the eventhandler of state change\n       if (oldState !\u003d getInternalState()) {\n         LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                  + getInternalState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Processing \" + event.getJobId() + \" of type \"\n          + event.getType());\n    }\n    try {\n      writeLock.lock();\n      JobStateInternal oldState \u003d getInternalState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getInternalState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getInternalState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4596. Split StateMachine state from states seen by MRClientProtocol for Job, Task and TaskAttempt. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/12 10:57 PM",
      "commitName": "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/09/12 5:59 PM",
      "commitNameOld": "229a79bbc3c0855aae7c3c3ff0a48ead98767a47",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 37.21,
      "commitsBetweenForRepo": 209,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(JobEvent event) {\n     LOG.debug(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n-      JobState oldState \u003d getState();\n+      JobStateInternal oldState \u003d getInternalState();\n       try {\n          getStateMachine().doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         addDiagnostic(\"Invalid event \" + event.getType() + \n             \" on Job \" + this.jobId);\n         eventHandler.handle(new JobEvent(this.jobId,\n             JobEventType.INTERNAL_ERROR));\n       }\n       //notify the eventhandler of state change\n-      if (oldState !\u003d getState()) {\n+      if (oldState !\u003d getInternalState()) {\n         LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n-                 + getState());\n+                 + getInternalState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    LOG.debug(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      JobStateInternal oldState \u003d getInternalState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getInternalState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getInternalState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "68615600985dfadf067a4967a5e08c1421e7a1c8": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3692. yarn-resourcemanager out and log files can get big. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233605 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/01/12 2:23 PM",
      "commitName": "68615600985dfadf067a4967a5e08c1421e7a1c8",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "09/01/12 1:04 PM",
      "commitNameOld": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 10.05,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public void handle(JobEvent event) {\n-    LOG.info(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n+    LOG.debug(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n     try {\n       writeLock.lock();\n       JobState oldState \u003d getState();\n       try {\n          getStateMachine().doTransition(event.getType(), event);\n       } catch (InvalidStateTransitonException e) {\n         LOG.error(\"Can\u0027t handle this event at current state\", e);\n         addDiagnostic(\"Invalid event \" + event.getType() + \n             \" on Job \" + this.jobId);\n         eventHandler.handle(new JobEvent(this.jobId,\n             JobEventType.INTERNAL_ERROR));\n       }\n       //notify the eventhandler of state change\n       if (oldState !\u003d getState()) {\n         LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                  + getState());\n       }\n     }\n     \n     finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    LOG.debug(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      JobState oldState \u003d getState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(JobEvent event) {\n    LOG.info(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      JobState oldState \u003d getState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,25 @@\n+  public void handle(JobEvent event) {\n+    LOG.info(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n+    try {\n+      writeLock.lock();\n+      JobState oldState \u003d getState();\n+      try {\n+         getStateMachine().doTransition(event.getType(), event);\n+      } catch (InvalidStateTransitonException e) {\n+        LOG.error(\"Can\u0027t handle this event at current state\", e);\n+        addDiagnostic(\"Invalid event \" + event.getType() + \n+            \" on Job \" + this.jobId);\n+        eventHandler.handle(new JobEvent(this.jobId,\n+            JobEventType.INTERNAL_ERROR));\n+      }\n+      //notify the eventhandler of state change\n+      if (oldState !\u003d getState()) {\n+        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n+                 + getState());\n+      }\n+    }\n+    \n+    finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(JobEvent event) {\n    LOG.info(\"Processing \" + event.getJobId() + \" of type \" + event.getType());\n    try {\n      writeLock.lock();\n      JobState oldState \u003d getState();\n      try {\n         getStateMachine().doTransition(event.getType(), event);\n      } catch (InvalidStateTransitonException e) {\n        LOG.error(\"Can\u0027t handle this event at current state\", e);\n        addDiagnostic(\"Invalid event \" + event.getType() + \n            \" on Job \" + this.jobId);\n        eventHandler.handle(new JobEvent(this.jobId,\n            JobEventType.INTERNAL_ERROR));\n      }\n      //notify the eventhandler of state change\n      if (oldState !\u003d getState()) {\n        LOG.info(jobId + \"Job Transitioned from \" + oldState + \" to \"\n                 + getState());\n      }\n    }\n    \n    finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/JobImpl.java"
    }
  }
}