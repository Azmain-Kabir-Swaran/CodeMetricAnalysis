{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TableListing.java",
  "functionName": "getRow",
  "functionId": "getRow___idx-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tools/TableListing.java",
  "functionStartLine": 100,
  "functionEndLine": 116,
  "numCommitsSeen": 10,
  "timeTaken": 2526,
  "changeHistory": [
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
    "be3fdd1c40140e24df1a5414cf91537862b66e82",
    "eb2175db1a99348c80457e3ffda172cc461de8bc",
    "02e0e158a26f81ce8375426ba0ea56db09ee36be"
  ],
  "changeHistoryShort": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": "Ybodychange",
    "be3fdd1c40140e24df1a5414cf91537862b66e82": "Yfilerename",
    "eb2175db1a99348c80457e3ffda172cc461de8bc": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "02e0e158a26f81ce8375426ba0ea56db09ee36be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b2399d623539ab68e71a38fa9fbfc9a405bddb8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15495. Upgrade commons-lang version to 3.7 in hadoop-common-project and hadoop-tools. Contributed by Takanobu Asanuma.\n",
      "commitDate": "27/06/18 10:37 PM",
      "commitName": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "12/06/14 11:39 PM",
      "commitNameOld": "be3fdd1c40140e24df1a5414cf91537862b66e82",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1475.96,
      "commitsBetweenForRepo": 11427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n     String[] getRow(int idx) {\n       String raw \u003d rows.get(idx);\n       // Line-wrap if it\u0027s too long\n       String[] lines \u003d new String[] {raw};\n       if (wrap) {\n-        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n+        lines \u003d org.apache.hadoop.util.StringUtils.wrap(lines[0], wrapWidth,\n+            \"\\n\", true).split(\"\\n\");\n       }\n       for (int i\u003d0; i\u003clines.length; i++) {\n         if (justification \u003d\u003d Justification.LEFT) {\n           lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n         } else if (justification \u003d\u003d Justification.RIGHT) {\n           lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n         }\n       }\n       return lines;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    String[] getRow(int idx) {\n      String raw \u003d rows.get(idx);\n      // Line-wrap if it\u0027s too long\n      String[] lines \u003d new String[] {raw};\n      if (wrap) {\n        lines \u003d org.apache.hadoop.util.StringUtils.wrap(lines[0], wrapWidth,\n            \"\\n\", true).split(\"\\n\");\n      }\n      for (int i\u003d0; i\u003clines.length; i++) {\n        if (justification \u003d\u003d Justification.LEFT) {\n          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n        } else if (justification \u003d\u003d Justification.RIGHT) {\n          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n        }\n      }\n      return lines;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tools/TableListing.java",
      "extendedDetails": {}
    },
    "be3fdd1c40140e24df1a5414cf91537862b66e82": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10691. Improve the readability of \u0027hadoop fs -help\u0027. Contributed by Lei Xu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/14 11:39 PM",
      "commitName": "be3fdd1c40140e24df1a5414cf91537862b66e82",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "12/06/14 7:56 PM",
      "commitNameOld": "ab54276440f75d88fbaf190e07264a17700f9750",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    String[] getRow(int idx) {\n      String raw \u003d rows.get(idx);\n      // Line-wrap if it\u0027s too long\n      String[] lines \u003d new String[] {raw};\n      if (wrap) {\n        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n      }\n      for (int i\u003d0; i\u003clines.length; i++) {\n        if (justification \u003d\u003d Justification.LEFT) {\n          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n        } else if (justification \u003d\u003d Justification.RIGHT) {\n          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n        }\n      }\n      return lines;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tools/TableListing.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/TableListing.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/tools/TableListing.java"
      }
    },
    "eb2175db1a99348c80457e3ffda172cc461de8bc": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-5190. Move cache pool related CLI commands to CacheAdmin. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1529334 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/10/13 3:28 PM",
      "commitName": "eb2175db1a99348c80457e3ffda172cc461de8bc",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5190. Move cache pool related CLI commands to CacheAdmin. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1529334 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/10/13 3:28 PM",
          "commitName": "eb2175db1a99348c80457e3ffda172cc461de8bc",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "11/09/13 8:55 PM",
          "commitNameOld": "02e0e158a26f81ce8375426ba0ea56db09ee36be",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 22.77,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-    String getRow(int i) {\n-      String raw \u003d rows.get(i);\n-      int paddingLength \u003d maxLength - raw.length();\n-      String padding \u003d (paddingLength \u003c\u003d 0) ? \"\" :\n-        StringUtils.repeat(\" \", paddingLength);\n-      if (justification \u003d\u003d Justification.LEFT) {\n-        return raw + padding;\n-      } else {\n-        return padding + raw;\n+    String[] getRow(int idx) {\n+      String raw \u003d rows.get(idx);\n+      // Line-wrap if it\u0027s too long\n+      String[] lines \u003d new String[] {raw};\n+      if (wrap) {\n+        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n       }\n+      for (int i\u003d0; i\u003clines.length; i++) {\n+        if (justification \u003d\u003d Justification.LEFT) {\n+          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n+        } else if (justification \u003d\u003d Justification.RIGHT) {\n+          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n+        }\n+      }\n+      return lines;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    String[] getRow(int idx) {\n      String raw \u003d rows.get(idx);\n      // Line-wrap if it\u0027s too long\n      String[] lines \u003d new String[] {raw};\n      if (wrap) {\n        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n      }\n      for (int i\u003d0; i\u003clines.length; i++) {\n        if (justification \u003d\u003d Justification.LEFT) {\n          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n        } else if (justification \u003d\u003d Justification.RIGHT) {\n          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n        }\n      }\n      return lines;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/TableListing.java",
          "extendedDetails": {
            "oldValue": "[i-int]",
            "newValue": "[idx-int]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-5190. Move cache pool related CLI commands to CacheAdmin. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1529334 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/10/13 3:28 PM",
          "commitName": "eb2175db1a99348c80457e3ffda172cc461de8bc",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "11/09/13 8:55 PM",
          "commitNameOld": "02e0e158a26f81ce8375426ba0ea56db09ee36be",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 22.77,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-    String getRow(int i) {\n-      String raw \u003d rows.get(i);\n-      int paddingLength \u003d maxLength - raw.length();\n-      String padding \u003d (paddingLength \u003c\u003d 0) ? \"\" :\n-        StringUtils.repeat(\" \", paddingLength);\n-      if (justification \u003d\u003d Justification.LEFT) {\n-        return raw + padding;\n-      } else {\n-        return padding + raw;\n+    String[] getRow(int idx) {\n+      String raw \u003d rows.get(idx);\n+      // Line-wrap if it\u0027s too long\n+      String[] lines \u003d new String[] {raw};\n+      if (wrap) {\n+        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n       }\n+      for (int i\u003d0; i\u003clines.length; i++) {\n+        if (justification \u003d\u003d Justification.LEFT) {\n+          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n+        } else if (justification \u003d\u003d Justification.RIGHT) {\n+          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n+        }\n+      }\n+      return lines;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    String[] getRow(int idx) {\n      String raw \u003d rows.get(idx);\n      // Line-wrap if it\u0027s too long\n      String[] lines \u003d new String[] {raw};\n      if (wrap) {\n        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n      }\n      for (int i\u003d0; i\u003clines.length; i++) {\n        if (justification \u003d\u003d Justification.LEFT) {\n          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n        } else if (justification \u003d\u003d Justification.RIGHT) {\n          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n        }\n      }\n      return lines;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/TableListing.java",
          "extendedDetails": {
            "oldValue": "String",
            "newValue": "String[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5190. Move cache pool related CLI commands to CacheAdmin. (Contributed by Andrew Wang)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1529334 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "04/10/13 3:28 PM",
          "commitName": "eb2175db1a99348c80457e3ffda172cc461de8bc",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "11/09/13 8:55 PM",
          "commitNameOld": "02e0e158a26f81ce8375426ba0ea56db09ee36be",
          "commitAuthorOld": "Colin McCabe",
          "daysBetweenCommits": 22.77,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-    String getRow(int i) {\n-      String raw \u003d rows.get(i);\n-      int paddingLength \u003d maxLength - raw.length();\n-      String padding \u003d (paddingLength \u003c\u003d 0) ? \"\" :\n-        StringUtils.repeat(\" \", paddingLength);\n-      if (justification \u003d\u003d Justification.LEFT) {\n-        return raw + padding;\n-      } else {\n-        return padding + raw;\n+    String[] getRow(int idx) {\n+      String raw \u003d rows.get(idx);\n+      // Line-wrap if it\u0027s too long\n+      String[] lines \u003d new String[] {raw};\n+      if (wrap) {\n+        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n       }\n+      for (int i\u003d0; i\u003clines.length; i++) {\n+        if (justification \u003d\u003d Justification.LEFT) {\n+          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n+        } else if (justification \u003d\u003d Justification.RIGHT) {\n+          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n+        }\n+      }\n+      return lines;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    String[] getRow(int idx) {\n      String raw \u003d rows.get(idx);\n      // Line-wrap if it\u0027s too long\n      String[] lines \u003d new String[] {raw};\n      if (wrap) {\n        lines \u003d WordUtils.wrap(lines[0], wrapWidth, \"\\n\", true).split(\"\\n\");\n      }\n      for (int i\u003d0; i\u003clines.length; i++) {\n        if (justification \u003d\u003d Justification.LEFT) {\n          lines[i] \u003d StringUtils.rightPad(lines[i], maxWidth);\n        } else if (justification \u003d\u003d Justification.RIGHT) {\n          lines[i] \u003d StringUtils.leftPad(lines[i], maxWidth);\n        }\n      }\n      return lines;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/TableListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "02e0e158a26f81ce8375426ba0ea56db09ee36be": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5158. Add command-line support for manipulating cache directives\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-4949@1522272 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/13 8:55 PM",
      "commitName": "02e0e158a26f81ce8375426ba0ea56db09ee36be",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,11 @@\n+    String getRow(int i) {\n+      String raw \u003d rows.get(i);\n+      int paddingLength \u003d maxLength - raw.length();\n+      String padding \u003d (paddingLength \u003c\u003d 0) ? \"\" :\n+        StringUtils.repeat(\" \", paddingLength);\n+      if (justification \u003d\u003d Justification.LEFT) {\n+        return raw + padding;\n+      } else {\n+        return padding + raw;\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    String getRow(int i) {\n      String raw \u003d rows.get(i);\n      int paddingLength \u003d maxLength - raw.length();\n      String padding \u003d (paddingLength \u003c\u003d 0) ? \"\" :\n        StringUtils.repeat(\" \", paddingLength);\n      if (justification \u003d\u003d Justification.LEFT) {\n        return raw + padding;\n      } else {\n        return padding + raw;\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/TableListing.java"
    }
  }
}