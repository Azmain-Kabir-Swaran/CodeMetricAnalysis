{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebApps.java",
  "functionName": "addFiltersForNewContext",
  "functionId": "addFiltersForNewContext___ui2Context-WebAppContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApps.java",
  "functionStartLine": 481,
  "functionEndLine": 500,
  "numCommitsSeen": 30,
  "timeTaken": 1607,
  "changeHistory": [
    "298b174f663a06e67098f7b5cd645769c1a98a80"
  ],
  "changeHistoryShort": {
    "298b174f663a06e67098f7b5cd645769c1a98a80": "Yintroduced"
  },
  "changeHistoryDetails": {
    "298b174f663a06e67098f7b5cd645769c1a98a80": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7338. Support same origin policy for cross site scripting prevention. (Sunil G via wangda)\n",
      "commitDate": "19/10/17 2:44 PM",
      "commitName": "298b174f663a06e67098f7b5cd645769c1a98a80",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,20 @@\n+    private void addFiltersForNewContext(WebAppContext ui2Context) {\n+      Map\u003cString, String\u003e params \u003d getConfigParameters(csrfConfigPrefix);\n+\n+      if (hasCSRFEnabled(params)) {\n+        LOG.info(\"CSRF Protection has been enabled for the {} application. \"\n+            + \"Please ensure that there is an authentication mechanism \"\n+            + \"enabled (kerberos, custom, etc).\", name);\n+        String restCsrfClassName \u003d RestCsrfPreventionFilter.class.getName();\n+        HttpServer2.defineFilter(ui2Context, restCsrfClassName,\n+            restCsrfClassName, params, new String[]{\"/*\"});\n+      }\n+\n+      params \u003d getConfigParameters(xfsConfigPrefix);\n+\n+      if (hasXFSEnabled()) {\n+        String xfsClassName \u003d XFrameOptionsFilter.class.getName();\n+        HttpServer2.defineFilter(ui2Context, xfsClassName, xfsClassName, params,\n+            new String[]{\"/*\"});\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void addFiltersForNewContext(WebAppContext ui2Context) {\n      Map\u003cString, String\u003e params \u003d getConfigParameters(csrfConfigPrefix);\n\n      if (hasCSRFEnabled(params)) {\n        LOG.info(\"CSRF Protection has been enabled for the {} application. \"\n            + \"Please ensure that there is an authentication mechanism \"\n            + \"enabled (kerberos, custom, etc).\", name);\n        String restCsrfClassName \u003d RestCsrfPreventionFilter.class.getName();\n        HttpServer2.defineFilter(ui2Context, restCsrfClassName,\n            restCsrfClassName, params, new String[]{\"/*\"});\n      }\n\n      params \u003d getConfigParameters(xfsConfigPrefix);\n\n      if (hasXFSEnabled()) {\n        String xfsClassName \u003d XFrameOptionsFilter.class.getName();\n        HttpServer2.defineFilter(ui2Context, xfsClassName, xfsClassName, params,\n            new String[]{\"/*\"});\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/WebApps.java"
    }
  }
}