{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "validateResourceTypes",
  "functionId": "validateResourceTypes___resourceNames-Iterable__String____resourceTypeInfos-List__ResourceTypeInfo__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 892,
  "functionEndLine": 903,
  "numCommitsSeen": 42,
  "timeTaken": 3530,
  "changeHistory": [
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
    "cadbc8b57f94896aeff2ff5583c9a5ec374c80e2"
  ],
  "changeHistoryShort": {
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparameterchange)",
    "cadbc8b57f94896aeff2ff5583c9a5ec374c80e2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a4bd64e724cbe2ef639c984ddfe2da3baf170a96": {
      "type": "Ymultichange(Ymovefromfile,Yexceptionschange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
      "commitDate": "24/01/19 1:53 AM",
      "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n-      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n+  private static void validateResourceTypes(\n+          Iterable\u003cString\u003e resourceNames,\n+          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n+          throws ResourceNotFoundException {\n     for (String resourceName : resourceNames) {\n-      if (!resourceTypes.stream().anyMatch(\n+      if (!resourceTypeInfos.stream().anyMatch(\n           e -\u003e e.getName().equals(resourceName))) {\n         throw new ResourceNotFoundException(\n-            \"Unknown resource: \" + resourceName);\n+                \"Unknown resource: \" + resourceName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateResourceTypes(\n          Iterable\u003cString\u003e resourceNames,\n          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n          throws ResourceNotFoundException {\n    for (String resourceName : resourceNames) {\n      if (!resourceTypeInfos.stream().anyMatch(\n          e -\u003e e.getName().equals(resourceName))) {\n        throw new ResourceNotFoundException(\n                \"Unknown resource: \" + resourceName);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-submarine/src/main/java/org/apache/hadoop/yarn/submarine/client/cli/CliUtils.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
            "oldMethodName": "validateResourceTypes",
            "newMethodName": "validateResourceTypes"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n-      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n+  private static void validateResourceTypes(\n+          Iterable\u003cString\u003e resourceNames,\n+          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n+          throws ResourceNotFoundException {\n     for (String resourceName : resourceNames) {\n-      if (!resourceTypes.stream().anyMatch(\n+      if (!resourceTypeInfos.stream().anyMatch(\n           e -\u003e e.getName().equals(resourceName))) {\n         throw new ResourceNotFoundException(\n-            \"Unknown resource: \" + resourceName);\n+                \"Unknown resource: \" + resourceName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateResourceTypes(\n          Iterable\u003cString\u003e resourceNames,\n          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n          throws ResourceNotFoundException {\n    for (String resourceName : resourceNames) {\n      if (!resourceTypeInfos.stream().anyMatch(\n          e -\u003e e.getName().equals(resourceName))) {\n        throw new ResourceNotFoundException(\n                \"Unknown resource: \" + resourceName);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldValue": "[IOException, YarnException]",
            "newValue": "[ResourceNotFoundException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n-      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n+  private static void validateResourceTypes(\n+          Iterable\u003cString\u003e resourceNames,\n+          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n+          throws ResourceNotFoundException {\n     for (String resourceName : resourceNames) {\n-      if (!resourceTypes.stream().anyMatch(\n+      if (!resourceTypeInfos.stream().anyMatch(\n           e -\u003e e.getName().equals(resourceName))) {\n         throw new ResourceNotFoundException(\n-            \"Unknown resource: \" + resourceName);\n+                \"Unknown resource: \" + resourceName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateResourceTypes(\n          Iterable\u003cString\u003e resourceNames,\n          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n          throws ResourceNotFoundException {\n    for (String resourceName : resourceNames) {\n      if (!resourceTypeInfos.stream().anyMatch(\n          e -\u003e e.getName().equals(resourceName))) {\n        throw new ResourceNotFoundException(\n                \"Unknown resource: \" + resourceName);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9116. Capacity Scheduler: implements queue level maximum-allocation inheritance. Contributed by Aihua Xu.\n",
          "commitDate": "24/01/19 1:53 AM",
          "commitName": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "24/01/19 1:31 AM",
          "commitNameOld": "c7264459901e59021e180228cea3a6ae334a339f",
          "commitAuthorOld": "Sunil G",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,12 @@\n-  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n-      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n+  private static void validateResourceTypes(\n+          Iterable\u003cString\u003e resourceNames,\n+          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n+          throws ResourceNotFoundException {\n     for (String resourceName : resourceNames) {\n-      if (!resourceTypes.stream().anyMatch(\n+      if (!resourceTypeInfos.stream().anyMatch(\n           e -\u003e e.getName().equals(resourceName))) {\n         throw new ResourceNotFoundException(\n-            \"Unknown resource: \" + resourceName);\n+                \"Unknown resource: \" + resourceName);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void validateResourceTypes(\n          Iterable\u003cString\u003e resourceNames,\n          List\u003cResourceTypeInfo\u003e resourceTypeInfos)\n          throws ResourceNotFoundException {\n    for (String resourceName : resourceNames) {\n      if (!resourceTypeInfos.stream().anyMatch(\n          e -\u003e e.getName().equals(resourceName))) {\n        throw new ResourceNotFoundException(\n                \"Unknown resource: \" + resourceName);\n      }\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
          "extendedDetails": {
            "oldValue": "[resourceNames-Iterable\u003cString\u003e, resourceTypes-List\u003cResourceTypeInfo\u003e]",
            "newValue": "[resourceNames-Iterable\u003cString\u003e, resourceTypeInfos-List\u003cResourceTypeInfo\u003e]"
          }
        }
      ]
    },
    "cadbc8b57f94896aeff2ff5583c9a5ec374c80e2": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8561. [Submarine] Initial implementation: Training job submission and job history retrieval. Contributed by Wangda Tan.\n",
      "commitDate": "13/08/18 1:52 AM",
      "commitName": "cadbc8b57f94896aeff2ff5583c9a5ec374c80e2",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,10 @@\n+  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n+      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n+    for (String resourceName : resourceNames) {\n+      if (!resourceTypes.stream().anyMatch(\n+          e -\u003e e.getName().equals(resourceName))) {\n+        throw new ResourceNotFoundException(\n+            \"Unknown resource: \" + resourceName);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void validateResourceTypes(Iterable\u003cString\u003e resourceNames,\n      List\u003cResourceTypeInfo\u003e resourceTypes) throws IOException, YarnException {\n    for (String resourceName : resourceNames) {\n      if (!resourceTypes.stream().anyMatch(\n          e -\u003e e.getName().equals(resourceName))) {\n        throw new ResourceNotFoundException(\n            \"Unknown resource: \" + resourceName);\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-submarine/src/main/java/org/apache/hadoop/yarn/submarine/client/cli/CliUtils.java"
    }
  }
}