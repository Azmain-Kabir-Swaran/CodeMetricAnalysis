{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ActiveStandbyElector.java",
  "functionName": "writeBreadCrumbNode",
  "functionId": "writeBreadCrumbNode___oldBreadcrumbStat-Stat",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
  "functionStartLine": 916,
  "functionEndLine": 930,
  "numCommitsSeen": 38,
  "timeTaken": 1681,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "8a4ff65b3cf5c9b2d544733956fe22e1d03aefe4",
    "805c1280ce2773bc61ea718723b42b09d795688f"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "8a4ff65b3cf5c9b2d544733956fe22e1d03aefe4": "Ybodychange",
    "805c1280ce2773bc61ea718723b42b09d795688f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n       throws KeeperException, InterruptedException {\n     Preconditions.checkState(appData !\u003d null, \"no appdata\");\n     \n-    LOG.info(\"Writing znode \" + zkBreadCrumbPath +\n-        \" to indicate that the local node is the most recent active...\");\n+    LOG.info(\"Writing znode {} to indicate that the local \" +\n+        \"node is the most recent active...\", zkBreadCrumbPath);\n     if (oldBreadcrumbStat \u003d\u003d null) {\n       // No previous active, just create the node\n       createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n         CreateMode.PERSISTENT);\n     } else {\n       // There was a previous active, update the node\n       setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n      throws KeeperException, InterruptedException {\n    Preconditions.checkState(appData !\u003d null, \"no appdata\");\n    \n    LOG.info(\"Writing znode {} to indicate that the local \" +\n        \"node is the most recent active...\", zkBreadCrumbPath);\n    if (oldBreadcrumbStat \u003d\u003d null) {\n      // No previous active, just create the node\n      createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n        CreateMode.PERSISTENT);\n    } else {\n      // There was a previous active, update the node\n      setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "8a4ff65b3cf5c9b2d544733956fe22e1d03aefe4": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9459. ActiveStandbyElector can join election even before Service HEALTHY, and results in null data at ActiveBreadCrumb. Contributed by Vinay and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1482227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/13 11:43 PM",
      "commitName": "8a4ff65b3cf5c9b2d544733956fe22e1d03aefe4",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "10/01/13 2:05 AM",
      "commitNameOld": "d863f7a1e452ecb26c3cb92bc6c90e552731304b",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 123.86,
      "commitsBetweenForRepo": 734,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,15 @@\n   private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n       throws KeeperException, InterruptedException {\n+    Preconditions.checkState(appData !\u003d null, \"no appdata\");\n+    \n     LOG.info(\"Writing znode \" + zkBreadCrumbPath +\n         \" to indicate that the local node is the most recent active...\");\n     if (oldBreadcrumbStat \u003d\u003d null) {\n       // No previous active, just create the node\n       createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n         CreateMode.PERSISTENT);\n     } else {\n       // There was a previous active, update the node\n       setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n      throws KeeperException, InterruptedException {\n    Preconditions.checkState(appData !\u003d null, \"no appdata\");\n    \n    LOG.info(\"Writing znode \" + zkBreadCrumbPath +\n        \" to indicate that the local node is the most recent active...\");\n    if (oldBreadcrumbStat \u003d\u003d null) {\n      // No previous active, just create the node\n      createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n        CreateMode.PERSISTENT);\n    } else {\n      // There was a previous active, update the node\n      setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java",
      "extendedDetails": {}
    },
    "805c1280ce2773bc61ea718723b42b09d795688f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8163. Improve ActiveStandbyElector to provide hooks for fencing old active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304675 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/03/12 5:05 PM",
      "commitName": "805c1280ce2773bc61ea718723b42b09d795688f",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,13 @@\n+  private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n+      throws KeeperException, InterruptedException {\n+    LOG.info(\"Writing znode \" + zkBreadCrumbPath +\n+        \" to indicate that the local node is the most recent active...\");\n+    if (oldBreadcrumbStat \u003d\u003d null) {\n+      // No previous active, just create the node\n+      createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n+        CreateMode.PERSISTENT);\n+    } else {\n+      // There was a previous active, update the node\n+      setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeBreadCrumbNode(Stat oldBreadcrumbStat)\n      throws KeeperException, InterruptedException {\n    LOG.info(\"Writing znode \" + zkBreadCrumbPath +\n        \" to indicate that the local node is the most recent active...\");\n    if (oldBreadcrumbStat \u003d\u003d null) {\n      // No previous active, just create the node\n      createWithRetries(zkBreadCrumbPath, appData, zkAcl,\n        CreateMode.PERSISTENT);\n    } else {\n      // There was a previous active, update the node\n      setDataWithRetries(zkBreadCrumbPath, appData, oldBreadcrumbStat.getVersion());\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ActiveStandbyElector.java"
    }
  }
}