{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IFile.java",
  "functionName": "append",
  "functionId": "append___key-K__value-V",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java",
  "functionStartLine": 189,
  "functionEndLine": 226,
  "numCommitsSeen": 8,
  "timeTaken": 5849,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void append(K key, V value) throws IOException {\n      if (key.getClass() !\u003d keyClass)\n        throw new IOException(\"wrong key class: \"+ key.getClass()\n                              +\" is not \"+ keyClass);\n      if (value.getClass() !\u003d valueClass)\n        throw new IOException(\"wrong value class: \"+ value.getClass()\n                              +\" is not \"+ valueClass);\n\n      // Append the \u0027key\u0027\n      keySerializer.serialize(key);\n      int keyLength \u003d buffer.getLength();\n      if (keyLength \u003c 0) {\n        throw new IOException(\"Negative key-length not allowed: \" + keyLength + \n                              \" for \" + key);\n      }\n\n      // Append the \u0027value\u0027\n      valueSerializer.serialize(value);\n      int valueLength \u003d buffer.getLength() - keyLength;\n      if (valueLength \u003c 0) {\n        throw new IOException(\"Negative value-length not allowed: \" + \n                              valueLength + \" for \" + value);\n      }\n      \n      // Write the record out\n      WritableUtils.writeVInt(out, keyLength);                  // key length\n      WritableUtils.writeVInt(out, valueLength);                // value length\n      out.write(buffer.getData(), 0, buffer.getLength());       // data\n\n      // Reset\n      buffer.reset();\n      \n      // Update bytes written\n      decompressedBytesWritten +\u003d keyLength + valueLength + \n                                  WritableUtils.getVIntSize(keyLength) + \n                                  WritableUtils.getVIntSize(valueLength);\n      ++numRecordsWritten;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void append(K key, V value) throws IOException {\n      if (key.getClass() !\u003d keyClass)\n        throw new IOException(\"wrong key class: \"+ key.getClass()\n                              +\" is not \"+ keyClass);\n      if (value.getClass() !\u003d valueClass)\n        throw new IOException(\"wrong value class: \"+ value.getClass()\n                              +\" is not \"+ valueClass);\n\n      // Append the \u0027key\u0027\n      keySerializer.serialize(key);\n      int keyLength \u003d buffer.getLength();\n      if (keyLength \u003c 0) {\n        throw new IOException(\"Negative key-length not allowed: \" + keyLength + \n                              \" for \" + key);\n      }\n\n      // Append the \u0027value\u0027\n      valueSerializer.serialize(value);\n      int valueLength \u003d buffer.getLength() - keyLength;\n      if (valueLength \u003c 0) {\n        throw new IOException(\"Negative value-length not allowed: \" + \n                              valueLength + \" for \" + value);\n      }\n      \n      // Write the record out\n      WritableUtils.writeVInt(out, keyLength);                  // key length\n      WritableUtils.writeVInt(out, valueLength);                // value length\n      out.write(buffer.getData(), 0, buffer.getLength());       // data\n\n      // Reset\n      buffer.reset();\n      \n      // Update bytes written\n      decompressedBytesWritten +\u003d keyLength + valueLength + \n                                  WritableUtils.getVIntSize(keyLength) + \n                                  WritableUtils.getVIntSize(valueLength);\n      ++numRecordsWritten;\n    }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/IFile.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IFile.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,38 @@\n+    public void append(K key, V value) throws IOException {\n+      if (key.getClass() !\u003d keyClass)\n+        throw new IOException(\"wrong key class: \"+ key.getClass()\n+                              +\" is not \"+ keyClass);\n+      if (value.getClass() !\u003d valueClass)\n+        throw new IOException(\"wrong value class: \"+ value.getClass()\n+                              +\" is not \"+ valueClass);\n+\n+      // Append the \u0027key\u0027\n+      keySerializer.serialize(key);\n+      int keyLength \u003d buffer.getLength();\n+      if (keyLength \u003c 0) {\n+        throw new IOException(\"Negative key-length not allowed: \" + keyLength + \n+                              \" for \" + key);\n+      }\n+\n+      // Append the \u0027value\u0027\n+      valueSerializer.serialize(value);\n+      int valueLength \u003d buffer.getLength() - keyLength;\n+      if (valueLength \u003c 0) {\n+        throw new IOException(\"Negative value-length not allowed: \" + \n+                              valueLength + \" for \" + value);\n+      }\n+      \n+      // Write the record out\n+      WritableUtils.writeVInt(out, keyLength);                  // key length\n+      WritableUtils.writeVInt(out, valueLength);                // value length\n+      out.write(buffer.getData(), 0, buffer.getLength());       // data\n+\n+      // Reset\n+      buffer.reset();\n+      \n+      // Update bytes written\n+      decompressedBytesWritten +\u003d keyLength + valueLength + \n+                                  WritableUtils.getVIntSize(keyLength) + \n+                                  WritableUtils.getVIntSize(valueLength);\n+      ++numRecordsWritten;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void append(K key, V value) throws IOException {\n      if (key.getClass() !\u003d keyClass)\n        throw new IOException(\"wrong key class: \"+ key.getClass()\n                              +\" is not \"+ keyClass);\n      if (value.getClass() !\u003d valueClass)\n        throw new IOException(\"wrong value class: \"+ value.getClass()\n                              +\" is not \"+ valueClass);\n\n      // Append the \u0027key\u0027\n      keySerializer.serialize(key);\n      int keyLength \u003d buffer.getLength();\n      if (keyLength \u003c 0) {\n        throw new IOException(\"Negative key-length not allowed: \" + keyLength + \n                              \" for \" + key);\n      }\n\n      // Append the \u0027value\u0027\n      valueSerializer.serialize(value);\n      int valueLength \u003d buffer.getLength() - keyLength;\n      if (valueLength \u003c 0) {\n        throw new IOException(\"Negative value-length not allowed: \" + \n                              valueLength + \" for \" + value);\n      }\n      \n      // Write the record out\n      WritableUtils.writeVInt(out, keyLength);                  // key length\n      WritableUtils.writeVInt(out, valueLength);                // value length\n      out.write(buffer.getData(), 0, buffer.getLength());       // data\n\n      // Reset\n      buffer.reset();\n      \n      // Update bytes written\n      decompressedBytesWritten +\u003d keyLength + valueLength + \n                                  WritableUtils.getVIntSize(keyLength) + \n                                  WritableUtils.getVIntSize(valueLength);\n      ++numRecordsWritten;\n    }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/IFile.java"
    }
  }
}