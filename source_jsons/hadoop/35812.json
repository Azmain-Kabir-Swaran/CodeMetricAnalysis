{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMNodeImpl.java",
  "functionName": "updateRMNodeFromStatusEvents",
  "functionId": "updateRMNodeFromStatusEvents___rmNode-RMNodeImpl__statusEvent-RMNodeStatusEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
  "functionStartLine": 839,
  "functionEndLine": 850,
  "numCommitsSeen": 92,
  "timeTaken": 2314,
  "changeHistory": [
    "ff8378eb1b960c72d18a984c7e5d145b407ca11a",
    "321072ba8114ed5ad2e9c5c2cfd7e1a54def6ebe"
  ],
  "changeHistoryShort": {
    "ff8378eb1b960c72d18a984c7e5d145b407ca11a": "Ybodychange",
    "321072ba8114ed5ad2e9c5c2cfd7e1a54def6ebe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff8378eb1b960c72d18a984c7e5d145b407ca11a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7102. NM heartbeat stuck when responseId overflows MAX_INT. Contributed by Botong Huang\n",
      "commitDate": "25/01/18 3:47 PM",
      "commitName": "ff8378eb1b960c72d18a984c7e5d145b407ca11a",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "22/11/17 7:18 PM",
      "commitNameOld": "b46ca7e73b8bac3fdbff0b13afe009308078acf2",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 63.85,
      "commitsBetweenForRepo": 340,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,12 @@\n   private static NodeHealthStatus updateRMNodeFromStatusEvents(\n       RMNodeImpl rmNode, RMNodeStatusEvent statusEvent) {\n     // Switch the last heartbeatresponse.\n-    rmNode.latestNodeHeartBeatResponse \u003d statusEvent.getLatestResponse();\n     NodeHealthStatus remoteNodeHealthStatus \u003d statusEvent.getNodeHealthStatus();\n     rmNode.setHealthReport(remoteNodeHealthStatus.getHealthReport());\n     rmNode.setLastHealthReportTime(remoteNodeHealthStatus\n         .getLastHealthReportTime());\n     rmNode.setAggregatedContainersUtilization(statusEvent\n         .getAggregatedContainersUtilization());\n     rmNode.setNodeUtilization(statusEvent.getNodeUtilization());\n     return remoteNodeHealthStatus;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static NodeHealthStatus updateRMNodeFromStatusEvents(\n      RMNodeImpl rmNode, RMNodeStatusEvent statusEvent) {\n    // Switch the last heartbeatresponse.\n    NodeHealthStatus remoteNodeHealthStatus \u003d statusEvent.getNodeHealthStatus();\n    rmNode.setHealthReport(remoteNodeHealthStatus.getHealthReport());\n    rmNode.setLastHealthReportTime(remoteNodeHealthStatus\n        .getLastHealthReportTime());\n    rmNode.setAggregatedContainersUtilization(statusEvent\n        .getAggregatedContainersUtilization());\n    rmNode.setNodeUtilization(statusEvent.getNodeUtilization());\n    return remoteNodeHealthStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java",
      "extendedDetails": {}
    },
    "321072ba8114ed5ad2e9c5c2cfd7e1a54def6ebe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4551. Address the duplication between StatusUpdateWhenHealthy and StatusUpdateWhenUnhealthy transitions. (Sunil G via kasha)\n",
      "commitDate": "13/01/16 12:09 PM",
      "commitName": "321072ba8114ed5ad2e9c5c2cfd7e1a54def6ebe",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,13 @@\n+  private static NodeHealthStatus updateRMNodeFromStatusEvents(\n+      RMNodeImpl rmNode, RMNodeStatusEvent statusEvent) {\n+    // Switch the last heartbeatresponse.\n+    rmNode.latestNodeHeartBeatResponse \u003d statusEvent.getLatestResponse();\n+    NodeHealthStatus remoteNodeHealthStatus \u003d statusEvent.getNodeHealthStatus();\n+    rmNode.setHealthReport(remoteNodeHealthStatus.getHealthReport());\n+    rmNode.setLastHealthReportTime(remoteNodeHealthStatus\n+        .getLastHealthReportTime());\n+    rmNode.setAggregatedContainersUtilization(statusEvent\n+        .getAggregatedContainersUtilization());\n+    rmNode.setNodeUtilization(statusEvent.getNodeUtilization());\n+    return remoteNodeHealthStatus;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static NodeHealthStatus updateRMNodeFromStatusEvents(\n      RMNodeImpl rmNode, RMNodeStatusEvent statusEvent) {\n    // Switch the last heartbeatresponse.\n    rmNode.latestNodeHeartBeatResponse \u003d statusEvent.getLatestResponse();\n    NodeHealthStatus remoteNodeHealthStatus \u003d statusEvent.getNodeHealthStatus();\n    rmNode.setHealthReport(remoteNodeHealthStatus.getHealthReport());\n    rmNode.setLastHealthReportTime(remoteNodeHealthStatus\n        .getLastHealthReportTime());\n    rmNode.setAggregatedContainersUtilization(statusEvent\n        .getAggregatedContainersUtilization());\n    rmNode.setNodeUtilization(statusEvent.getNodeUtilization());\n    return remoteNodeHealthStatus;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java"
    }
  }
}