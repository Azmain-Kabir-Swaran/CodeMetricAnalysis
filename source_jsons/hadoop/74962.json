{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShellBasedIdMapping.java",
  "functionName": "updateMapIncr",
  "functionId": "updateMapIncr___name-String(modifiers-final)__isGrp-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
  "functionStartLine": 457,
  "functionEndLine": 495,
  "numCommitsSeen": 13,
  "timeTaken": 1487,
  "changeHistory": [
    "0f3d6bc65e58513ee159d48daf026e64f6230bbc",
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3",
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f"
  ],
  "changeHistoryShort": {
    "0f3d6bc65e58513ee159d48daf026e64f6230bbc": "Ybodychange",
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": "Ybodychange",
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0f3d6bc65e58513ee159d48daf026e64f6230bbc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12581. ShellBasedIdMapping needs suport for Solaris (Alan Burlison via aw)\n",
      "commitDate": "12/05/16 2:42 PM",
      "commitName": "0f3d6bc65e58513ee159d48daf026e64f6230bbc",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "24/01/16 8:47 PM",
      "commitNameOld": "736eb17a796a1c1ad5f4db2c6a64f6752db7bec3",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 108.7,
      "commitsBetweenForRepo": 690,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   synchronized private void updateMapIncr(final String name,\n       final boolean isGrp) throws IOException {\n     if (!checkSupportedPlatform()) {\n       return;\n     }\n     if (isInteger(name) \u0026\u0026 isGrp) {\n       loadFullGroupMap();\n       return;\n     }\n \n     boolean updated \u003d false;\n     updateStaticMapping();\n \n-    if (OS.startsWith(\"Linux\")) {\n+    if (OS.startsWith(\"Linux\") || OS.equals(\"SunOS\") || OS.contains(\"BSD\")) {\n       if (isGrp) {\n         updated \u003d updateMapInternal(gidNameMap, \"group\",\n-            getName2IdCmdLinux(name, true), \":\",\n+            getName2IdCmdNIX(name, true), \":\",\n             staticMapping.gidMapping);\n       } else {\n         updated \u003d updateMapInternal(uidNameMap, \"user\",\n-            getName2IdCmdLinux(name, false), \":\",\n+            getName2IdCmdNIX(name, false), \":\",\n             staticMapping.uidMapping);\n       }\n     } else {\n       // Mac\n       if (isGrp) {        \n         updated \u003d updateMapInternal(gidNameMap, \"group\",\n             getName2IdCmdMac(name, true), \"\\\\s+\",\n             staticMapping.gidMapping);\n       } else {\n         updated \u003d updateMapInternal(uidNameMap, \"user\",\n             getName2IdCmdMac(name, false), \"\\\\s+\",\n             staticMapping.uidMapping);\n       }\n     }\n     if (updated) {\n       lastUpdateTime \u003d Time.monotonicNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void updateMapIncr(final String name,\n      final boolean isGrp) throws IOException {\n    if (!checkSupportedPlatform()) {\n      return;\n    }\n    if (isInteger(name) \u0026\u0026 isGrp) {\n      loadFullGroupMap();\n      return;\n    }\n\n    boolean updated \u003d false;\n    updateStaticMapping();\n\n    if (OS.startsWith(\"Linux\") || OS.equals(\"SunOS\") || OS.contains(\"BSD\")) {\n      if (isGrp) {\n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdNIX(name, true), \":\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdNIX(name, false), \":\",\n            staticMapping.uidMapping);\n      }\n    } else {\n      // Mac\n      if (isGrp) {        \n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdMac(name, true), \"\\\\s+\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdMac(name, false), \"\\\\s+\",\n            staticMapping.uidMapping);\n      }\n    }\n    if (updated) {\n      lastUpdateTime \u003d Time.monotonicNow();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
      "extendedDetails": {}
    },
    "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7564. NFS gateway dynamically reload UID/GID mapping file /etc/nfs.map. Contributed by Yongjun Zhang\n",
      "commitDate": "06/01/15 4:19 PM",
      "commitName": "788ee35e2bf0f3d445e03e6ea9bd02c40c8fdfe3",
      "commitAuthor": "Brandon Li",
      "commitDateOld": "05/01/15 7:45 PM",
      "commitNameOld": "9803ae374f69942aec82ec6eeeb9722523a1ade0",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,39 @@\n   synchronized private void updateMapIncr(final String name,\n       final boolean isGrp) throws IOException {\n     if (!checkSupportedPlatform()) {\n       return;\n     }\n     if (isInteger(name) \u0026\u0026 isGrp) {\n       loadFullGroupMap();\n       return;\n     }\n \n     boolean updated \u003d false;\n-    if (staticMapping \u003d\u003d null) {\n-      initStaticMapping();\n-    }\n+    updateStaticMapping();\n \n     if (OS.startsWith(\"Linux\")) {\n       if (isGrp) {\n         updated \u003d updateMapInternal(gidNameMap, \"group\",\n             getName2IdCmdLinux(name, true), \":\",\n             staticMapping.gidMapping);\n       } else {\n         updated \u003d updateMapInternal(uidNameMap, \"user\",\n             getName2IdCmdLinux(name, false), \":\",\n             staticMapping.uidMapping);\n       }\n     } else {\n       // Mac\n       if (isGrp) {        \n         updated \u003d updateMapInternal(gidNameMap, \"group\",\n             getName2IdCmdMac(name, true), \"\\\\s+\",\n             staticMapping.gidMapping);\n       } else {\n         updated \u003d updateMapInternal(uidNameMap, \"user\",\n             getName2IdCmdMac(name, false), \"\\\\s+\",\n             staticMapping.uidMapping);\n       }\n     }\n     if (updated) {\n       lastUpdateTime \u003d Time.monotonicNow();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void updateMapIncr(final String name,\n      final boolean isGrp) throws IOException {\n    if (!checkSupportedPlatform()) {\n      return;\n    }\n    if (isInteger(name) \u0026\u0026 isGrp) {\n      loadFullGroupMap();\n      return;\n    }\n\n    boolean updated \u003d false;\n    updateStaticMapping();\n\n    if (OS.startsWith(\"Linux\")) {\n      if (isGrp) {\n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdLinux(name, true), \":\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdLinux(name, false), \":\",\n            staticMapping.uidMapping);\n      }\n    } else {\n      // Mac\n      if (isGrp) {        \n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdMac(name, true), \"\\\\s+\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdMac(name, false), \"\\\\s+\",\n            staticMapping.uidMapping);\n      }\n    }\n    if (updated) {\n      lastUpdateTime \u003d Time.monotonicNow();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java",
      "extendedDetails": {}
    },
    "351c5561c2fd380ab7746ca4e91d7b838e61e03f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7146. NFS ID/Group lookup requires SSSD enumeration on the server. Contributed by Yongjun Zhang\n",
      "commitDate": "17/11/14 1:23 PM",
      "commitName": "351c5561c2fd380ab7746ca4e91d7b838e61e03f",
      "commitAuthor": "Brandon Li",
      "diff": "@@ -0,0 +1,41 @@\n+  synchronized private void updateMapIncr(final String name,\n+      final boolean isGrp) throws IOException {\n+    if (!checkSupportedPlatform()) {\n+      return;\n+    }\n+    if (isInteger(name) \u0026\u0026 isGrp) {\n+      loadFullGroupMap();\n+      return;\n+    }\n+\n+    boolean updated \u003d false;\n+    if (staticMapping \u003d\u003d null) {\n+      initStaticMapping();\n+    }\n+\n+    if (OS.startsWith(\"Linux\")) {\n+      if (isGrp) {\n+        updated \u003d updateMapInternal(gidNameMap, \"group\",\n+            getName2IdCmdLinux(name, true), \":\",\n+            staticMapping.gidMapping);\n+      } else {\n+        updated \u003d updateMapInternal(uidNameMap, \"user\",\n+            getName2IdCmdLinux(name, false), \":\",\n+            staticMapping.uidMapping);\n+      }\n+    } else {\n+      // Mac\n+      if (isGrp) {        \n+        updated \u003d updateMapInternal(gidNameMap, \"group\",\n+            getName2IdCmdMac(name, true), \"\\\\s+\",\n+            staticMapping.gidMapping);\n+      } else {\n+        updated \u003d updateMapInternal(uidNameMap, \"user\",\n+            getName2IdCmdMac(name, false), \"\\\\s+\",\n+            staticMapping.uidMapping);\n+      }\n+    }\n+    if (updated) {\n+      lastUpdateTime \u003d Time.monotonicNow();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized private void updateMapIncr(final String name,\n      final boolean isGrp) throws IOException {\n    if (!checkSupportedPlatform()) {\n      return;\n    }\n    if (isInteger(name) \u0026\u0026 isGrp) {\n      loadFullGroupMap();\n      return;\n    }\n\n    boolean updated \u003d false;\n    if (staticMapping \u003d\u003d null) {\n      initStaticMapping();\n    }\n\n    if (OS.startsWith(\"Linux\")) {\n      if (isGrp) {\n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdLinux(name, true), \":\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdLinux(name, false), \":\",\n            staticMapping.uidMapping);\n      }\n    } else {\n      // Mac\n      if (isGrp) {        \n        updated \u003d updateMapInternal(gidNameMap, \"group\",\n            getName2IdCmdMac(name, true), \"\\\\s+\",\n            staticMapping.gidMapping);\n      } else {\n        updated \u003d updateMapInternal(uidNameMap, \"user\",\n            getName2IdCmdMac(name, false), \"\\\\s+\",\n            staticMapping.uidMapping);\n      }\n    }\n    if (updated) {\n      lastUpdateTime \u003d Time.monotonicNow();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/ShellBasedIdMapping.java"
    }
  }
}