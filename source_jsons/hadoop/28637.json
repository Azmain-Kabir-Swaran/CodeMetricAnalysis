{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UnmanagedApplicationManager.java",
  "functionName": "initializeUnmanagedAM",
  "functionId": "initializeUnmanagedAM___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java",
  "functionStartLine": 382,
  "functionEndLine": 403,
  "numCommitsSeen": 13,
  "timeTaken": 1561,
  "changeHistory": [
    "d5f66888b8d767ee6706fab9950c194a1bf26d32",
    "859aa1f9d621d07693825e610bdc0149f7a2770a"
  ],
  "changeHistoryShort": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": "Ymultichange(Yreturntypechange,Ybodychange)",
    "859aa1f9d621d07693825e610bdc0149f7a2770a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d5f66888b8d767ee6706fab9950c194a1bf26d32": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
      "commitDate": "17/11/17 5:39 PM",
      "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
          "commitDate": "17/11/17 5:39 PM",
          "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "29/08/17 2:53 PM",
          "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 80.16,
          "commitsBetweenForRepo": 783,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,22 @@\n-  protected UnmanagedAMIdentifier initializeUnmanagedAM(ApplicationId appId)\n-      throws IOException, YarnException {\n+  protected Token\u003cAMRMTokenIdentifier\u003e initializeUnmanagedAM(\n+      ApplicationId appId) throws IOException, YarnException {\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(this.submitter);\n       this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n           appSubmitter, null);\n \n       // Submit the application\n       submitUnmanagedApp(appId);\n \n       // Monitor the application attempt to wait for launch state\n-      ApplicationAttemptReport attemptReport \u003d monitorCurrentAppAttempt(appId,\n+      monitorCurrentAppAttempt(appId,\n           EnumSet.of(YarnApplicationState.ACCEPTED,\n               YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n               YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n           YarnApplicationAttemptState.LAUNCHED);\n-      this.attemptId \u003d attemptReport.getApplicationAttemptId();\n-      return getUAMIdentifier();\n+      return getUAMToken();\n     } finally {\n       this.rmClient \u003d null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Token\u003cAMRMTokenIdentifier\u003e initializeUnmanagedAM(\n      ApplicationId appId) throws IOException, YarnException {\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(this.submitter);\n      this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n          appSubmitter, null);\n\n      // Submit the application\n      submitUnmanagedApp(appId);\n\n      // Monitor the application attempt to wait for launch state\n      monitorCurrentAppAttempt(appId,\n          EnumSet.of(YarnApplicationState.ACCEPTED,\n              YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n              YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n          YarnApplicationAttemptState.LAUNCHED);\n      return getUAMToken();\n    } finally {\n      this.rmClient \u003d null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java",
          "extendedDetails": {
            "oldValue": "UnmanagedAMIdentifier",
            "newValue": "Token\u003cAMRMTokenIdentifier\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6128. Add support for AMRMProxy HA. (Botong Huang via Subru).\n",
          "commitDate": "17/11/17 5:39 PM",
          "commitName": "d5f66888b8d767ee6706fab9950c194a1bf26d32",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "29/08/17 2:53 PM",
          "commitNameOld": "cc8893edc0b7960e958723c81062986c12f06ade",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 80.16,
          "commitsBetweenForRepo": 783,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,22 @@\n-  protected UnmanagedAMIdentifier initializeUnmanagedAM(ApplicationId appId)\n-      throws IOException, YarnException {\n+  protected Token\u003cAMRMTokenIdentifier\u003e initializeUnmanagedAM(\n+      ApplicationId appId) throws IOException, YarnException {\n     try {\n       UserGroupInformation appSubmitter \u003d\n           UserGroupInformation.createRemoteUser(this.submitter);\n       this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n           appSubmitter, null);\n \n       // Submit the application\n       submitUnmanagedApp(appId);\n \n       // Monitor the application attempt to wait for launch state\n-      ApplicationAttemptReport attemptReport \u003d monitorCurrentAppAttempt(appId,\n+      monitorCurrentAppAttempt(appId,\n           EnumSet.of(YarnApplicationState.ACCEPTED,\n               YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n               YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n           YarnApplicationAttemptState.LAUNCHED);\n-      this.attemptId \u003d attemptReport.getApplicationAttemptId();\n-      return getUAMIdentifier();\n+      return getUAMToken();\n     } finally {\n       this.rmClient \u003d null;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Token\u003cAMRMTokenIdentifier\u003e initializeUnmanagedAM(\n      ApplicationId appId) throws IOException, YarnException {\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(this.submitter);\n      this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n          appSubmitter, null);\n\n      // Submit the application\n      submitUnmanagedApp(appId);\n\n      // Monitor the application attempt to wait for launch state\n      monitorCurrentAppAttempt(appId,\n          EnumSet.of(YarnApplicationState.ACCEPTED,\n              YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n              YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n          YarnApplicationAttemptState.LAUNCHED);\n      return getUAMToken();\n    } finally {\n      this.rmClient \u003d null;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "859aa1f9d621d07693825e610bdc0149f7a2770a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5531. UnmanagedAM pool manager for federating application across clusters. (Botong Huang via Subru).\n\n(cherry picked from commit 73bb2102ce4b82b3a3bed91319f7c8f067ddc3e8)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "859aa1f9d621d07693825e610bdc0149f7a2770a",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,23 @@\n+  protected UnmanagedAMIdentifier initializeUnmanagedAM(ApplicationId appId)\n+      throws IOException, YarnException {\n+    try {\n+      UserGroupInformation appSubmitter \u003d\n+          UserGroupInformation.createRemoteUser(this.submitter);\n+      this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n+          appSubmitter, null);\n+\n+      // Submit the application\n+      submitUnmanagedApp(appId);\n+\n+      // Monitor the application attempt to wait for launch state\n+      ApplicationAttemptReport attemptReport \u003d monitorCurrentAppAttempt(appId,\n+          EnumSet.of(YarnApplicationState.ACCEPTED,\n+              YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n+              YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n+          YarnApplicationAttemptState.LAUNCHED);\n+      this.attemptId \u003d attemptReport.getApplicationAttemptId();\n+      return getUAMIdentifier();\n+    } finally {\n+      this.rmClient \u003d null;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected UnmanagedAMIdentifier initializeUnmanagedAM(ApplicationId appId)\n      throws IOException, YarnException {\n    try {\n      UserGroupInformation appSubmitter \u003d\n          UserGroupInformation.createRemoteUser(this.submitter);\n      this.rmClient \u003d createRMProxy(ApplicationClientProtocol.class, this.conf,\n          appSubmitter, null);\n\n      // Submit the application\n      submitUnmanagedApp(appId);\n\n      // Monitor the application attempt to wait for launch state\n      ApplicationAttemptReport attemptReport \u003d monitorCurrentAppAttempt(appId,\n          EnumSet.of(YarnApplicationState.ACCEPTED,\n              YarnApplicationState.RUNNING, YarnApplicationState.KILLED,\n              YarnApplicationState.FAILED, YarnApplicationState.FINISHED),\n          YarnApplicationAttemptState.LAUNCHED);\n      this.attemptId \u003d attemptReport.getApplicationAttemptId();\n      return getUAMIdentifier();\n    } finally {\n      this.rmClient \u003d null;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/uam/UnmanagedApplicationManager.java"
    }
  }
}