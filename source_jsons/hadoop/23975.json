{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ShuffleHandler.java",
  "functionName": "serviceStop",
  "functionId": "serviceStop",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
  "functionStartLine": 578,
  "functionEndLine": 596,
  "numCommitsSeen": 59,
  "timeTaken": 3326,
  "changeHistory": [
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64",
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4",
    "0928502029ef141759008997335ea2cd836a7154"
  ],
  "changeHistoryShort": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": "Ybodychange",
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64": "Ybodychange",
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": "Ybodychange",
    "0928502029ef141759008997335ea2cd836a7154": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c7a5a4435ec3098c2765e8ef53b7771e0532ff61": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9075.  Add ability to register/remove auxiliary service without restart node manager.\n            Contributed by Billie Rinaldi\n",
      "commitDate": "18/12/18 2:05 PM",
      "commitName": "c7a5a4435ec3098c2765e8ef53b7771e0532ff61",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "06/11/18 3:55 PM",
      "commitNameOld": "ba1f9d66d94ed0b85084d7c40c09a87478b3a05a",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 41.92,
      "commitsBetweenForRepo": 270,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,19 @@\n   protected void serviceStop() throws Exception {\n     accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n     if (selector !\u003d null) {\n       ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n       bootstrap.releaseExternalResources();\n     }\n     if (pipelineFact !\u003d null) {\n       pipelineFact.destroy();\n     }\n     if (timer !\u003d null) {\n       // Release this shared timer resource\n       timer.stop();\n     }\n     if (stateDb !\u003d null) {\n       stateDb.close();\n     }\n+    ms.unregisterSource(ShuffleMetrics.class.getSimpleName());\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n    if (selector !\u003d null) {\n      ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n      bootstrap.releaseExternalResources();\n    }\n    if (pipelineFact !\u003d null) {\n      pipelineFact.destroy();\n    }\n    if (timer !\u003d null) {\n      // Release this shared timer resource\n      timer.stop();\n    }\n    if (stateDb !\u003d null) {\n      stateDb.close();\n    }\n    ms.unregisterSource(ShuffleMetrics.class.getSimpleName());\n    super.serviceStop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6850. Shuffle Handler keep-alive connections are closed from the server side. Contributed by Jonathan Eagles\n",
      "commitDate": "30/03/17 8:57 AM",
      "commitName": "c8bd5fc7a86f9890ceaa37a89491ab650e7e9a64",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "25/01/17 2:32 PM",
      "commitNameOld": "a7463b6c88f698950a2f326030261001aa51b35e",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 63.73,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   protected void serviceStop() throws Exception {\n     accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n     if (selector !\u003d null) {\n       ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n       bootstrap.releaseExternalResources();\n     }\n     if (pipelineFact !\u003d null) {\n       pipelineFact.destroy();\n     }\n+    if (timer !\u003d null) {\n+      // Release this shared timer resource\n+      timer.stop();\n+    }\n     if (stateDb !\u003d null) {\n       stateDb.close();\n     }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n    if (selector !\u003d null) {\n      ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n      bootstrap.releaseExternalResources();\n    }\n    if (pipelineFact !\u003d null) {\n      pipelineFact.destroy();\n    }\n    if (timer !\u003d null) {\n      // Release this shared timer resource\n      timer.stop();\n    }\n    if (stateDb !\u003d null) {\n      stateDb.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5652. NM Recovery. ShuffleHandler should handle NM restarts. (Jason Lowe via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1594329 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/05/14 12:10 PM",
      "commitName": "f3c3d9e0c6eae02dd21f875097ef76d85025ffe4",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "24/03/14 11:57 AM",
      "commitNameOld": "a90a5c24525bf6b92c49f7476b6de286338018c0",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 50.01,
      "commitsBetweenForRepo": 305,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,14 @@\n   protected void serviceStop() throws Exception {\n     accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n     if (selector !\u003d null) {\n       ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n       bootstrap.releaseExternalResources();\n     }\n     if (pipelineFact !\u003d null) {\n       pipelineFact.destroy();\n     }\n+    if (stateDb !\u003d null) {\n+      stateDb.close();\n+    }\n     super.serviceStop();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n    if (selector !\u003d null) {\n      ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n      bootstrap.releaseExternalResources();\n    }\n    if (pipelineFact !\u003d null) {\n      pipelineFact.destroy();\n    }\n    if (stateDb !\u003d null) {\n      stateDb.close();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java",
      "extendedDetails": {}
    },
    "0928502029ef141759008997335ea2cd836a7154": {
      "type": "Yintroduced",
      "commitMessage": "YARN-530. Defined Service model strictly, implemented AbstractService for robust subclassing and migrated yarn-common services. Contributed by Steve Loughran.\nYARN-117. Migrated rest of YARN to the new service model. Contributed by Steve Louhran.\nMAPREDUCE-5298. Moved MapReduce services to YARN-530 stricter lifecycle. Contributed by Steve Loughran.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492718 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 8:54 AM",
      "commitName": "0928502029ef141759008997335ea2cd836a7154",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,11 @@\n+  protected void serviceStop() throws Exception {\n+    accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n+    if (selector !\u003d null) {\n+      ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n+      bootstrap.releaseExternalResources();\n+    }\n+    if (pipelineFact !\u003d null) {\n+      pipelineFact.destroy();\n+    }\n+    super.serviceStop();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStop() throws Exception {\n    accepted.close().awaitUninterruptibly(10, TimeUnit.SECONDS);\n    if (selector !\u003d null) {\n      ServerBootstrap bootstrap \u003d new ServerBootstrap(selector);\n      bootstrap.releaseExternalResources();\n    }\n    if (pipelineFact !\u003d null) {\n      pipelineFact.destroy();\n    }\n    super.serviceStop();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-shuffle/src/main/java/org/apache/hadoop/mapred/ShuffleHandler.java"
    }
  }
}