{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EventWriter.java",
  "functionName": "toAvro",
  "functionId": "toAvro___counters-Counters__name-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
  "functionStartLine": 128,
  "functionEndLine": 148,
  "numCommitsSeen": 13,
  "timeTaken": 9325,
  "changeHistory": [
    "6afe20a7a4bbfa30fce3e3c9873ad43201987998",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6afe20a7a4bbfa30fce3e3c9873ad43201987998": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6afe20a7a4bbfa30fce3e3c9873ad43201987998": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6388. Remove deprecation warnings from JobHistoryServer classes. Contributed by Ray Chiang.\n",
      "commitDate": "08/06/15 3:06 PM",
      "commitName": "6afe20a7a4bbfa30fce3e3c9873ad43201987998",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/10/11 1:41 AM",
      "commitNameOld": "408656614495674992349fbda3981559ada3de0b",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1323.56,
      "commitsBetweenForRepo": 9263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   static JhCounters toAvro(Counters counters, String name) {\n     JhCounters result \u003d new JhCounters();\n-    result.name \u003d new Utf8(name);\n-    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n+    result.setName(new Utf8(name));\n+    result.setGroups(new ArrayList\u003cJhCounterGroup\u003e(0));\n     if (counters \u003d\u003d null) return result;\n     for (CounterGroup group : counters) {\n       JhCounterGroup g \u003d new JhCounterGroup();\n-      g.name \u003d new Utf8(group.getName());\n-      g.displayName \u003d new Utf8(group.getDisplayName());\n-      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n+      g.setName(new Utf8(group.getName()));\n+      g.setDisplayName(new Utf8(group.getDisplayName()));\n+      g.setCounts(new ArrayList\u003cJhCounter\u003e(group.size()));\n       for (Counter counter : group) {\n         JhCounter c \u003d new JhCounter();\n-        c.name \u003d new Utf8(counter.getName());\n-        c.displayName \u003d new Utf8(counter.getDisplayName());\n-        c.value \u003d counter.getValue();\n-        g.counts.add(c);\n+        c.setName(new Utf8(counter.getName()));\n+        c.setDisplayName(new Utf8(counter.getDisplayName()));\n+        c.setValue(counter.getValue());\n+        g.getCounts().add(c);\n       }\n-      result.groups.add(g);\n+      result.getGroups().add(g);\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static JhCounters toAvro(Counters counters, String name) {\n    JhCounters result \u003d new JhCounters();\n    result.setName(new Utf8(name));\n    result.setGroups(new ArrayList\u003cJhCounterGroup\u003e(0));\n    if (counters \u003d\u003d null) return result;\n    for (CounterGroup group : counters) {\n      JhCounterGroup g \u003d new JhCounterGroup();\n      g.setName(new Utf8(group.getName()));\n      g.setDisplayName(new Utf8(group.getDisplayName()));\n      g.setCounts(new ArrayList\u003cJhCounter\u003e(group.size()));\n      for (Counter counter : group) {\n        JhCounter c \u003d new JhCounter();\n        c.setName(new Utf8(counter.getName()));\n        c.setDisplayName(new Utf8(counter.getDisplayName()));\n        c.setValue(counter.getValue());\n        g.getCounts().add(c);\n      }\n      result.getGroups().add(g);\n    }\n    return result;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static JhCounters toAvro(Counters counters, String name) {\n    JhCounters result \u003d new JhCounters();\n    result.name \u003d new Utf8(name);\n    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n    if (counters \u003d\u003d null) return result;\n    for (CounterGroup group : counters) {\n      JhCounterGroup g \u003d new JhCounterGroup();\n      g.name \u003d new Utf8(group.getName());\n      g.displayName \u003d new Utf8(group.getDisplayName());\n      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n      for (Counter counter : group) {\n        JhCounter c \u003d new JhCounter();\n        c.name \u003d new Utf8(counter.getName());\n        c.displayName \u003d new Utf8(counter.getDisplayName());\n        c.value \u003d counter.getValue();\n        g.counts.add(c);\n      }\n      result.groups.add(g);\n    }\n    return result;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   static JhCounters toAvro(Counters counters, String name) {\n     JhCounters result \u003d new JhCounters();\n     result.name \u003d new Utf8(name);\n-    result.groups \u003d new GenericData.Array\u003cJhCounterGroup\u003e(0, GROUPS);\n+    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n     if (counters \u003d\u003d null) return result;\n     for (CounterGroup group : counters) {\n       JhCounterGroup g \u003d new JhCounterGroup();\n       g.name \u003d new Utf8(group.getName());\n       g.displayName \u003d new Utf8(group.getDisplayName());\n-      g.counts \u003d new GenericData.Array\u003cJhCounter\u003e(group.size(), COUNTERS);\n+      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n       for (Counter counter : group) {\n         JhCounter c \u003d new JhCounter();\n         c.name \u003d new Utf8(counter.getName());\n         c.displayName \u003d new Utf8(counter.getDisplayName());\n         c.value \u003d counter.getValue();\n         g.counts.add(c);\n       }\n       result.groups.add(g);\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static JhCounters toAvro(Counters counters, String name) {\n    JhCounters result \u003d new JhCounters();\n    result.name \u003d new Utf8(name);\n    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n    if (counters \u003d\u003d null) return result;\n    for (CounterGroup group : counters) {\n      JhCounterGroup g \u003d new JhCounterGroup();\n      g.name \u003d new Utf8(group.getName());\n      g.displayName \u003d new Utf8(group.getDisplayName());\n      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n      for (Counter counter : group) {\n        JhCounter c \u003d new JhCounter();\n        c.name \u003d new Utf8(counter.getName());\n        c.displayName \u003d new Utf8(counter.getDisplayName());\n        c.value \u003d counter.getValue();\n        g.counts.add(c);\n      }\n      result.groups.add(g);\n    }\n    return result;\n  }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
            "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
            "oldMethodName": "toAvro",
            "newMethodName": "toAvro"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n   static JhCounters toAvro(Counters counters, String name) {\n     JhCounters result \u003d new JhCounters();\n     result.name \u003d new Utf8(name);\n-    result.groups \u003d new GenericData.Array\u003cJhCounterGroup\u003e(0, GROUPS);\n+    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n     if (counters \u003d\u003d null) return result;\n     for (CounterGroup group : counters) {\n       JhCounterGroup g \u003d new JhCounterGroup();\n       g.name \u003d new Utf8(group.getName());\n       g.displayName \u003d new Utf8(group.getDisplayName());\n-      g.counts \u003d new GenericData.Array\u003cJhCounter\u003e(group.size(), COUNTERS);\n+      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n       for (Counter counter : group) {\n         JhCounter c \u003d new JhCounter();\n         c.name \u003d new Utf8(counter.getName());\n         c.displayName \u003d new Utf8(counter.getDisplayName());\n         c.value \u003d counter.getValue();\n         g.counts.add(c);\n       }\n       result.groups.add(g);\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static JhCounters toAvro(Counters counters, String name) {\n    JhCounters result \u003d new JhCounters();\n    result.name \u003d new Utf8(name);\n    result.groups \u003d new ArrayList\u003cJhCounterGroup\u003e(0);\n    if (counters \u003d\u003d null) return result;\n    for (CounterGroup group : counters) {\n      JhCounterGroup g \u003d new JhCounterGroup();\n      g.name \u003d new Utf8(group.getName());\n      g.displayName \u003d new Utf8(group.getDisplayName());\n      g.counts \u003d new ArrayList\u003cJhCounter\u003e(group.size());\n      for (Counter counter : group) {\n        JhCounter c \u003d new JhCounter();\n        c.name \u003d new Utf8(counter.getName());\n        c.displayName \u003d new Utf8(counter.getDisplayName());\n        c.value \u003d counter.getValue();\n        g.counts.add(c);\n      }\n      result.groups.add(g);\n    }\n    return result;\n  }",
          "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,21 @@\n+  static JhCounters toAvro(Counters counters, String name) {\n+    JhCounters result \u003d new JhCounters();\n+    result.name \u003d new Utf8(name);\n+    result.groups \u003d new GenericData.Array\u003cJhCounterGroup\u003e(0, GROUPS);\n+    if (counters \u003d\u003d null) return result;\n+    for (CounterGroup group : counters) {\n+      JhCounterGroup g \u003d new JhCounterGroup();\n+      g.name \u003d new Utf8(group.getName());\n+      g.displayName \u003d new Utf8(group.getDisplayName());\n+      g.counts \u003d new GenericData.Array\u003cJhCounter\u003e(group.size(), COUNTERS);\n+      for (Counter counter : group) {\n+        JhCounter c \u003d new JhCounter();\n+        c.name \u003d new Utf8(counter.getName());\n+        c.displayName \u003d new Utf8(counter.getDisplayName());\n+        c.value \u003d counter.getValue();\n+        g.counts.add(c);\n+      }\n+      result.groups.add(g);\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static JhCounters toAvro(Counters counters, String name) {\n    JhCounters result \u003d new JhCounters();\n    result.name \u003d new Utf8(name);\n    result.groups \u003d new GenericData.Array\u003cJhCounterGroup\u003e(0, GROUPS);\n    if (counters \u003d\u003d null) return result;\n    for (CounterGroup group : counters) {\n      JhCounterGroup g \u003d new JhCounterGroup();\n      g.name \u003d new Utf8(group.getName());\n      g.displayName \u003d new Utf8(group.getDisplayName());\n      g.counts \u003d new GenericData.Array\u003cJhCounter\u003e(group.size(), COUNTERS);\n      for (Counter counter : group) {\n        JhCounter c \u003d new JhCounter();\n        c.name \u003d new Utf8(counter.getName());\n        c.displayName \u003d new Utf8(counter.getDisplayName());\n        c.value \u003d counter.getValue();\n        g.counts.add(c);\n      }\n      result.groups.add(g);\n    }\n    return result;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/jobhistory/EventWriter.java"
    }
  }
}