{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CredentialProviderFactory.java",
  "functionName": "getProviders",
  "functionId": "getProviders___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialProviderFactory.java",
  "functionStartLine": 62,
  "functionEndLine": 91,
  "numCommitsSeen": 5,
  "timeTaken": 1117,
  "changeHistory": [
    "128015584d69492806fd1700c8f840d78aa9c729",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1"
  ],
  "changeHistoryShort": {
    "128015584d69492806fd1700c8f840d78aa9c729": "Ybodychange",
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "128015584d69492806fd1700c8f840d78aa9c729": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14195. CredentialProviderFactory$getProviders is not thread-safe. Contributed by Vihang Karajgaonkar.\n",
      "commitDate": "23/03/17 1:57 PM",
      "commitName": "128015584d69492806fd1700c8f840d78aa9c729",
      "commitAuthor": "John Zhuge",
      "commitDateOld": "11/08/16 11:57 AM",
      "commitNameOld": "d892ae9576d07d01927443b6dc6c934a6c2f317f",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 224.08,
      "commitsBetweenForRepo": 1390,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,30 @@\n   public static List\u003cCredentialProvider\u003e getProviders(Configuration conf\n                                                ) throws IOException {\n     List\u003cCredentialProvider\u003e result \u003d new ArrayList\u003cCredentialProvider\u003e();\n     for(String path: conf.getStringCollection(CREDENTIAL_PROVIDER_PATH)) {\n       try {\n         URI uri \u003d new URI(path);\n         boolean found \u003d false;\n-        for(CredentialProviderFactory factory: serviceLoader) {\n-          CredentialProvider kp \u003d factory.createProvider(uri, conf);\n-          if (kp !\u003d null) {\n-            result.add(kp);\n-            found \u003d true;\n-            break;\n+        // Iterate serviceLoader in a synchronized block since\n+        // serviceLoader iterator is not thread-safe.\n+        synchronized (serviceLoader) {\n+          for (CredentialProviderFactory factory : serviceLoader) {\n+            CredentialProvider kp \u003d factory.createProvider(uri, conf);\n+            if (kp !\u003d null) {\n+              result.add(kp);\n+              found \u003d true;\n+              break;\n+            }\n           }\n         }\n         if (!found) {\n           throw new IOException(\"No CredentialProviderFactory for \" + uri + \" in \" +\n               CREDENTIAL_PROVIDER_PATH);\n         }\n       } catch (URISyntaxException error) {\n         throw new IOException(\"Bad configuration of \" + CREDENTIAL_PROVIDER_PATH +\n             \" at \" + path, error);\n       }\n     }\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cCredentialProvider\u003e getProviders(Configuration conf\n                                               ) throws IOException {\n    List\u003cCredentialProvider\u003e result \u003d new ArrayList\u003cCredentialProvider\u003e();\n    for(String path: conf.getStringCollection(CREDENTIAL_PROVIDER_PATH)) {\n      try {\n        URI uri \u003d new URI(path);\n        boolean found \u003d false;\n        // Iterate serviceLoader in a synchronized block since\n        // serviceLoader iterator is not thread-safe.\n        synchronized (serviceLoader) {\n          for (CredentialProviderFactory factory : serviceLoader) {\n            CredentialProvider kp \u003d factory.createProvider(uri, conf);\n            if (kp !\u003d null) {\n              result.add(kp);\n              found \u003d true;\n              break;\n            }\n          }\n        }\n        if (!found) {\n          throw new IOException(\"No CredentialProviderFactory for \" + uri + \" in \" +\n              CREDENTIAL_PROVIDER_PATH);\n        }\n      } catch (URISyntaxException error) {\n        throw new IOException(\"Bad configuration of \" + CREDENTIAL_PROVIDER_PATH +\n            \" at \" + path, error);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialProviderFactory.java",
      "extendedDetails": {}
    },
    "c79728478caadd8374bce2bc3f466db1da1e3ad1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10607. Create API to separate credential/password storage from\napplications. (Larry McCay via omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/14 8:45 AM",
      "commitName": "c79728478caadd8374bce2bc3f466db1da1e3ad1",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,26 @@\n+  public static List\u003cCredentialProvider\u003e getProviders(Configuration conf\n+                                               ) throws IOException {\n+    List\u003cCredentialProvider\u003e result \u003d new ArrayList\u003cCredentialProvider\u003e();\n+    for(String path: conf.getStringCollection(CREDENTIAL_PROVIDER_PATH)) {\n+      try {\n+        URI uri \u003d new URI(path);\n+        boolean found \u003d false;\n+        for(CredentialProviderFactory factory: serviceLoader) {\n+          CredentialProvider kp \u003d factory.createProvider(uri, conf);\n+          if (kp !\u003d null) {\n+            result.add(kp);\n+            found \u003d true;\n+            break;\n+          }\n+        }\n+        if (!found) {\n+          throw new IOException(\"No CredentialProviderFactory for \" + uri + \" in \" +\n+              CREDENTIAL_PROVIDER_PATH);\n+        }\n+      } catch (URISyntaxException error) {\n+        throw new IOException(\"Bad configuration of \" + CREDENTIAL_PROVIDER_PATH +\n+            \" at \" + path, error);\n+      }\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cCredentialProvider\u003e getProviders(Configuration conf\n                                               ) throws IOException {\n    List\u003cCredentialProvider\u003e result \u003d new ArrayList\u003cCredentialProvider\u003e();\n    for(String path: conf.getStringCollection(CREDENTIAL_PROVIDER_PATH)) {\n      try {\n        URI uri \u003d new URI(path);\n        boolean found \u003d false;\n        for(CredentialProviderFactory factory: serviceLoader) {\n          CredentialProvider kp \u003d factory.createProvider(uri, conf);\n          if (kp !\u003d null) {\n            result.add(kp);\n            found \u003d true;\n            break;\n          }\n        }\n        if (!found) {\n          throw new IOException(\"No CredentialProviderFactory for \" + uri + \" in \" +\n              CREDENTIAL_PROVIDER_PATH);\n        }\n      } catch (URISyntaxException error) {\n        throw new IOException(\"Bad configuration of \" + CREDENTIAL_PROVIDER_PATH +\n            \" at \" + path, error);\n      }\n    }\n    return result;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/CredentialProviderFactory.java"
    }
  }
}