{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMAppManager.java",
  "functionName": "checkAppNumCompletedLimit",
  "functionId": "checkAppNumCompletedLimit",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
  "functionStartLine": 318,
  "functionEndLine": 342,
  "numCommitsSeen": 121,
  "timeTaken": 3375,
  "changeHistory": [
    "6ef01646ba9540248ffaf322f4678fbdac28fcd4",
    "b2517dd66b3c88fdd478411cf208921bd3023755",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "df2991c0cbc3f35c2640b93680667507c4f810dd",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "8af5c4b24aae932ecc8f09e72fdc7dc8307b6cc5"
  ],
  "changeHistoryShort": {
    "6ef01646ba9540248ffaf322f4678fbdac28fcd4": "Ybodychange",
    "b2517dd66b3c88fdd478411cf208921bd3023755": "Ybodychange",
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "8af5c4b24aae932ecc8f09e72fdc7dc8307b6cc5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6ef01646ba9540248ffaf322f4678fbdac28fcd4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9848. Revert YARN-4946. Contributed by Steven Rand.\n",
      "commitDate": "27/04/20 1:35 PM",
      "commitName": "6ef01646ba9540248ffaf322f4678fbdac28fcd4",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "25/03/20 10:41 AM",
      "commitNameOld": "6ce189c62132706d9aaee5abf020ae4dc783ba26",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 33.12,
      "commitsBetweenForRepo": 105,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,25 @@\n   protected synchronized void checkAppNumCompletedLimit() {\n-    if (completedAppsInStateStore \u003e maxCompletedAppsInStateStore) {\n-      removeCompletedAppsFromStateStore();\n+    // check apps kept in state store.\n+    while (completedAppsInStateStore \u003e this.maxCompletedAppsInStateStore) {\n+      ApplicationId removeId \u003d\n+          completedApps.get(completedApps.size() - completedAppsInStateStore);\n+      RMApp removeApp \u003d rmContext.getRMApps().get(removeId);\n+      LOG.info(\"Max number of completed apps kept in state store met:\"\n+          + \" maxCompletedAppsInStateStore \u003d \" + maxCompletedAppsInStateStore\n+          + \", removing app \" + removeApp.getApplicationId()\n+          + \" from state store.\");\n+      rmContext.getStateStore().removeApplication(removeApp);\n+      completedAppsInStateStore--;\n     }\n \n-    if (completedApps.size() \u003e maxCompletedAppsInMemory) {\n-      removeCompletedAppsFromMemory();\n+    // check apps kept in memory.\n+    while (completedApps.size() \u003e this.maxCompletedAppsInMemory) {\n+      ApplicationId removeId \u003d completedApps.remove();\n+      LOG.info(\"Application should be expired, max number of completed apps\"\n+          + \" kept in memory met: maxCompletedAppsInMemory \u003d \"\n+          + this.maxCompletedAppsInMemory + \", removing app \" + removeId\n+          + \" from memory: \");\n+      rmContext.getRMApps().remove(removeId);\n+      this.applicationACLsManager.removeApplication(removeId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    // check apps kept in state store.\n    while (completedAppsInStateStore \u003e this.maxCompletedAppsInStateStore) {\n      ApplicationId removeId \u003d\n          completedApps.get(completedApps.size() - completedAppsInStateStore);\n      RMApp removeApp \u003d rmContext.getRMApps().get(removeId);\n      LOG.info(\"Max number of completed apps kept in state store met:\"\n          + \" maxCompletedAppsInStateStore \u003d \" + maxCompletedAppsInStateStore\n          + \", removing app \" + removeApp.getApplicationId()\n          + \" from state store.\");\n      rmContext.getStateStore().removeApplication(removeApp);\n      completedAppsInStateStore--;\n    }\n\n    // check apps kept in memory.\n    while (completedApps.size() \u003e this.maxCompletedAppsInMemory) {\n      ApplicationId removeId \u003d completedApps.remove();\n      LOG.info(\"Application should be expired, max number of completed apps\"\n          + \" kept in memory met: maxCompletedAppsInMemory \u003d \"\n          + this.maxCompletedAppsInMemory + \", removing app \" + removeId\n          + \" from memory: \");\n      rmContext.getRMApps().remove(removeId);\n      this.applicationACLsManager.removeApplication(removeId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "b2517dd66b3c88fdd478411cf208921bd3023755": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4946. RM should not consider an application as COMPLETED when log aggregation is not in a terminal state (snemeth via rkanter)\n",
      "commitDate": "09/08/18 2:58 PM",
      "commitName": "b2517dd66b3c88fdd478411cf208921bd3023755",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "24/07/18 10:56 AM",
      "commitNameOld": "e673dd1d4d78b66e7b6705ec6dc3679d2347d704",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 16.17,
      "commitsBetweenForRepo": 116,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,9 @@\n   protected synchronized void checkAppNumCompletedLimit() {\n-    // check apps kept in state store.\n-    while (completedAppsInStateStore \u003e this.maxCompletedAppsInStateStore) {\n-      ApplicationId removeId \u003d\n-          completedApps.get(completedApps.size() - completedAppsInStateStore);\n-      RMApp removeApp \u003d rmContext.getRMApps().get(removeId);\n-      LOG.info(\"Max number of completed apps kept in state store met:\"\n-          + \" maxCompletedAppsInStateStore \u003d \" + maxCompletedAppsInStateStore\n-          + \", removing app \" + removeApp.getApplicationId()\n-          + \" from state store.\");\n-      rmContext.getStateStore().removeApplication(removeApp);\n-      completedAppsInStateStore--;\n+    if (completedAppsInStateStore \u003e maxCompletedAppsInStateStore) {\n+      removeCompletedAppsFromStateStore();\n     }\n \n-    // check apps kept in memorty.\n-    while (completedApps.size() \u003e this.maxCompletedAppsInMemory) {\n-      ApplicationId removeId \u003d completedApps.remove();\n-      LOG.info(\"Application should be expired, max number of completed apps\"\n-          + \" kept in memory met: maxCompletedAppsInMemory \u003d \"\n-          + this.maxCompletedAppsInMemory + \", removing app \" + removeId\n-          + \" from memory: \");\n-      rmContext.getRMApps().remove(removeId);\n-      this.applicationACLsManager.removeApplication(removeId);\n+    if (completedApps.size() \u003e maxCompletedAppsInMemory) {\n+      removeCompletedAppsFromMemory();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    if (completedAppsInStateStore \u003e maxCompletedAppsInStateStore) {\n      removeCompletedAppsFromStateStore();\n    }\n\n    if (completedApps.size() \u003e maxCompletedAppsInMemory) {\n      removeCompletedAppsFromMemory();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "305ae48136d6e201de4451e824cb7b84f94ba2e0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1378. Implemented a cleaner of old finished applications from the RM state-store. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548990 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/12/13 8:17 PM",
      "commitName": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/11/13 9:20 PM",
      "commitNameOld": "512475e56f0a27bf3c3ff596184f96993bb4bef4",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 18.96,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,25 @@\n   protected synchronized void checkAppNumCompletedLimit() {\n-    while (completedApps.size() \u003e this.completedAppsMax) {\n-      ApplicationId removeId \u003d completedApps.remove();  \n-      LOG.info(\"Application should be expired, max # apps\"\n-          + \" met. Removing app: \" + removeId); \n+    // check apps kept in state store.\n+    while (completedAppsInStateStore \u003e this.maxCompletedAppsInStateStore) {\n+      ApplicationId removeId \u003d\n+          completedApps.get(completedApps.size() - completedAppsInStateStore);\n+      RMApp removeApp \u003d rmContext.getRMApps().get(removeId);\n+      LOG.info(\"Max number of completed apps kept in state store met:\"\n+          + \" maxCompletedAppsInStateStore \u003d \" + maxCompletedAppsInStateStore\n+          + \", removing app \" + removeApp.getApplicationId()\n+          + \" from state store.\");\n+      rmContext.getStateStore().removeApplication(removeApp);\n+      completedAppsInStateStore--;\n+    }\n+\n+    // check apps kept in memorty.\n+    while (completedApps.size() \u003e this.maxCompletedAppsInMemory) {\n+      ApplicationId removeId \u003d completedApps.remove();\n+      LOG.info(\"Application should be expired, max number of completed apps\"\n+          + \" kept in memory met: maxCompletedAppsInMemory \u003d \"\n+          + this.maxCompletedAppsInMemory + \", removing app \" + removeId\n+          + \" from memory: \");\n       rmContext.getRMApps().remove(removeId);\n       this.applicationACLsManager.removeApplication(removeId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    // check apps kept in state store.\n    while (completedAppsInStateStore \u003e this.maxCompletedAppsInStateStore) {\n      ApplicationId removeId \u003d\n          completedApps.get(completedApps.size() - completedAppsInStateStore);\n      RMApp removeApp \u003d rmContext.getRMApps().get(removeId);\n      LOG.info(\"Max number of completed apps kept in state store met:\"\n          + \" maxCompletedAppsInStateStore \u003d \" + maxCompletedAppsInStateStore\n          + \", removing app \" + removeApp.getApplicationId()\n          + \" from state store.\");\n      rmContext.getStateStore().removeApplication(removeApp);\n      completedAppsInStateStore--;\n    }\n\n    // check apps kept in memorty.\n    while (completedApps.size() \u003e this.maxCompletedAppsInMemory) {\n      ApplicationId removeId \u003d completedApps.remove();\n      LOG.info(\"Application should be expired, max number of completed apps\"\n          + \" kept in memory met: maxCompletedAppsInMemory \u003d \"\n          + this.maxCompletedAppsInMemory + \", removing app \" + removeId\n          + \" from memory: \");\n      rmContext.getRMApps().remove(removeId);\n      this.applicationACLsManager.removeApplication(removeId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    while (completedApps.size() \u003e this.completedAppsMax) {\n      ApplicationId removeId \u003d completedApps.remove();  \n      LOG.info(\"Application should be expired, max # apps\"\n          + \" met. Removing app: \" + removeId); \n      rmContext.getRMApps().remove(removeId);\n      this.applicationACLsManager.removeApplication(removeId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java"
      }
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/10/11 10:21 PM",
      "commitNameOld": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,9 @@\n   protected synchronized void checkAppNumCompletedLimit() {\n     while (completedApps.size() \u003e this.completedAppsMax) {\n       ApplicationId removeId \u003d completedApps.remove();  \n       LOG.info(\"Application should be expired, max # apps\"\n           + \" met. Removing app: \" + removeId); \n       rmContext.getRMApps().remove(removeId);\n+      this.applicationACLsManager.removeApplication(removeId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    while (completedApps.size() \u003e this.completedAppsMax) {\n      ApplicationId removeId \u003d completedApps.remove();  \n      LOG.info(\"Application should be expired, max # apps\"\n          + \" met. Removing app: \" + removeId); \n      rmContext.getRMApps().remove(removeId);\n      this.applicationACLsManager.removeApplication(removeId);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    while (completedApps.size() \u003e this.completedAppsMax) {\n      ApplicationId removeId \u003d completedApps.remove();  \n      LOG.info(\"Application should be expired, max # apps\"\n          + \" met. Removing app: \" + removeId); \n      rmContext.getRMApps().remove(removeId);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java"
      }
    },
    "8af5c4b24aae932ecc8f09e72fdc7dc8307b6cc5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2649. Handling of finished applications in RM. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1160521 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/11 6:32 PM",
      "commitName": "8af5c4b24aae932ecc8f09e72fdc7dc8307b6cc5",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,8 @@\n+  protected synchronized void checkAppNumCompletedLimit() {\n+    while (completedApps.size() \u003e this.completedAppsMax) {\n+      ApplicationId removeId \u003d completedApps.remove();  \n+      LOG.info(\"Application should be expired, max # apps\"\n+          + \" met. Removing app: \" + removeId); \n+      rmContext.getRMApps().remove(removeId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void checkAppNumCompletedLimit() {\n    while (completedApps.size() \u003e this.completedAppsMax) {\n      ApplicationId removeId \u003d completedApps.remove();  \n      LOG.info(\"Application should be expired, max # apps\"\n          + \" met. Removing app: \" + removeId); \n      rmContext.getRMApps().remove(removeId);\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMAppManager.java"
    }
  }
}