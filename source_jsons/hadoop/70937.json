{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AliyunOSSFileSystem.java",
  "functionName": "copyDirectory",
  "functionId": "copyDirectory___srcPath-Path__dstPath-Path",
  "sourceFilePath": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
  "functionStartLine": 693,
  "functionEndLine": 749,
  "numCommitsSeen": 22,
  "timeTaken": 2396,
  "changeHistory": [
    "040a202b202a37f3b922cd321eb0a8ded457d88b",
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
    "d67a5e2dec5c60d96b0c216182891cdfd7832ac5",
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
    "a5d5342228050a778b20e95adf7885bdba39985d"
  ],
  "changeHistoryShort": {
    "040a202b202a37f3b922cd321eb0a8ded457d88b": "Ybodychange",
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": "Ybodychange",
    "d67a5e2dec5c60d96b0c216182891cdfd7832ac5": "Ybodychange",
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e": "Ymultichange(Yexceptionschange,Ybodychange)",
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": "Ybodychange",
    "a5d5342228050a778b20e95adf7885bdba39985d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "040a202b202a37f3b922cd321eb0a8ded457d88b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15323. AliyunOSS: Improve copy file performance for AliyunOSSFileSystemStore. Contributed wujinhu.\n",
      "commitDate": "03/01/19 5:37 AM",
      "commitName": "040a202b202a37f3b922cd321eb0a8ded457d88b",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "22/11/18 9:56 PM",
      "commitNameOld": "5ff0cf86a940fd83f1425794921cc075b19f1108",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 41.32,
      "commitsBetweenForRepo": 237,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,57 @@\n   private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n     String srcKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(srcPath));\n     String dstKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(dstPath));\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n     store.storeEmptyFile(dstKey);\n     AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n     ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n         new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n             maxConcurrentCopyTasksPerDir, true));\n     ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n     // Copy files from src folder to dst\n     int copiesToFinish \u003d 0;\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n \n         //copy operation just copies metadata, oss will support shallow copy\n         executorService.execute(new AliyunOSSCopyFileTask(\n-            store, objectSummary.getKey(), newKey, copyFileContext));\n+            store, objectSummary.getKey(),\n+            objectSummary.getSize(), newKey, copyFileContext));\n         copiesToFinish++;\n         // No need to call lock() here.\n         // It\u0027s ok to copy one more file if the rename operation failed\n         // Reduce the call of lock() can also improve our performance\n         if (copyFileContext.isCopyFailure()) {\n           //some error occurs, break\n           break;\n         }\n       }\n       if (objects.isTruncated()) {\n         String nextMarker \u003d objects.getNextMarker();\n         objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n       } else {\n         break;\n       }\n     }\n     //wait operations in progress to finish\n     copyFileContext.lock();\n     try {\n       copyFileContext.awaitAllFinish(copiesToFinish);\n     } catch (InterruptedException e) {\n       LOG.warn(\"interrupted when wait copies to finish\");\n     } finally {\n       copyFileContext.unlock();\n     }\n     return !copyFileContext.isCopyFailure();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n    String srcKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(srcPath));\n    String dstKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(dstPath));\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    store.storeEmptyFile(dstKey);\n    AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n    ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n        new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n            maxConcurrentCopyTasksPerDir, true));\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n    // Copy files from src folder to dst\n    int copiesToFinish \u003d 0;\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n\n        //copy operation just copies metadata, oss will support shallow copy\n        executorService.execute(new AliyunOSSCopyFileTask(\n            store, objectSummary.getKey(),\n            objectSummary.getSize(), newKey, copyFileContext));\n        copiesToFinish++;\n        // No need to call lock() here.\n        // It\u0027s ok to copy one more file if the rename operation failed\n        // Reduce the call of lock() can also improve our performance\n        if (copyFileContext.isCopyFailure()) {\n          //some error occurs, break\n          break;\n        }\n      }\n      if (objects.isTruncated()) {\n        String nextMarker \u003d objects.getNextMarker();\n        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n      } else {\n        break;\n      }\n    }\n    //wait operations in progress to finish\n    copyFileContext.lock();\n    try {\n      copyFileContext.awaitAllFinish(copiesToFinish);\n    } catch (InterruptedException e) {\n      LOG.warn(\"interrupted when wait copies to finish\");\n    } finally {\n      copyFileContext.unlock();\n    }\n    return !copyFileContext.isCopyFailure();\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15917. AliyunOSS: fix incorrect ReadOps and WriteOps in statistics. Contributed by Jinhu Wu.\n",
      "commitDate": "13/11/18 8:58 PM",
      "commitName": "3fade865ce84dcf68bcd7de5a5ed1c7d904796e9",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "27/06/18 10:37 PM",
      "commitNameOld": "2b2399d623539ab68e71a38fa9fbfc9a405bddb8",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 138.97,
      "commitsBetweenForRepo": 1172,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,56 @@\n   private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n     String srcKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(srcPath));\n     String dstKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(dstPath));\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n     store.storeEmptyFile(dstKey);\n     AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n     ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n         new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n             maxConcurrentCopyTasksPerDir, true));\n     ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n-    statistics.incrementReadOps(1);\n     // Copy files from src folder to dst\n     int copiesToFinish \u003d 0;\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n \n         //copy operation just copies metadata, oss will support shallow copy\n         executorService.execute(new AliyunOSSCopyFileTask(\n             store, objectSummary.getKey(), newKey, copyFileContext));\n         copiesToFinish++;\n         // No need to call lock() here.\n         // It\u0027s ok to copy one more file if the rename operation failed\n         // Reduce the call of lock() can also improve our performance\n         if (copyFileContext.isCopyFailure()) {\n           //some error occurs, break\n           break;\n         }\n       }\n       if (objects.isTruncated()) {\n         String nextMarker \u003d objects.getNextMarker();\n         objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n-        statistics.incrementReadOps(1);\n       } else {\n         break;\n       }\n     }\n     //wait operations in progress to finish\n     copyFileContext.lock();\n     try {\n       copyFileContext.awaitAllFinish(copiesToFinish);\n     } catch (InterruptedException e) {\n       LOG.warn(\"interrupted when wait copies to finish\");\n     } finally {\n       copyFileContext.unlock();\n     }\n     return !copyFileContext.isCopyFailure();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n    String srcKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(srcPath));\n    String dstKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(dstPath));\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    store.storeEmptyFile(dstKey);\n    AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n    ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n        new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n            maxConcurrentCopyTasksPerDir, true));\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n    // Copy files from src folder to dst\n    int copiesToFinish \u003d 0;\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n\n        //copy operation just copies metadata, oss will support shallow copy\n        executorService.execute(new AliyunOSSCopyFileTask(\n            store, objectSummary.getKey(), newKey, copyFileContext));\n        copiesToFinish++;\n        // No need to call lock() here.\n        // It\u0027s ok to copy one more file if the rename operation failed\n        // Reduce the call of lock() can also improve our performance\n        if (copyFileContext.isCopyFailure()) {\n          //some error occurs, break\n          break;\n        }\n      }\n      if (objects.isTruncated()) {\n        String nextMarker \u003d objects.getNextMarker();\n        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n      } else {\n        break;\n      }\n    }\n    //wait operations in progress to finish\n    copyFileContext.lock();\n    try {\n      copyFileContext.awaitAllFinish(copiesToFinish);\n    } catch (InterruptedException e) {\n      LOG.warn(\"interrupted when wait copies to finish\");\n    } finally {\n      copyFileContext.unlock();\n    }\n    return !copyFileContext.isCopyFailure();\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "d67a5e2dec5c60d96b0c216182891cdfd7832ac5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15262. AliyunOSS: move files under a directory in parallel when rename a directory. Contributed by Jinhu Wu.\n",
      "commitDate": "19/03/18 12:02 AM",
      "commitName": "d67a5e2dec5c60d96b0c216182891cdfd7832ac5",
      "commitAuthor": "Sammi Chen",
      "commitDateOld": "16/01/18 11:55 PM",
      "commitNameOld": "9195a6e302028ed3921d1016ac2fa5754f06ebf0",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 60.96,
      "commitsBetweenForRepo": 411,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,58 @@\n   private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n     String srcKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(srcPath));\n     String dstKey \u003d AliyunOSSUtils\n         .maybeAddTrailingSlash(pathToKey(dstPath));\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n     store.storeEmptyFile(dstKey);\n+    AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n+    ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n+        new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n+            maxConcurrentCopyTasksPerDir, true));\n     ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n     statistics.incrementReadOps(1);\n     // Copy files from src folder to dst\n+    int copiesToFinish \u003d 0;\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n-        store.copyFile(objectSummary.getKey(), newKey);\n+\n+        //copy operation just copies metadata, oss will support shallow copy\n+        executorService.execute(new AliyunOSSCopyFileTask(\n+            store, objectSummary.getKey(), newKey, copyFileContext));\n+        copiesToFinish++;\n+        // No need to call lock() here.\n+        // It\u0027s ok to copy one more file if the rename operation failed\n+        // Reduce the call of lock() can also improve our performance\n+        if (copyFileContext.isCopyFailure()) {\n+          //some error occurs, break\n+          break;\n+        }\n       }\n       if (objects.isTruncated()) {\n         String nextMarker \u003d objects.getNextMarker();\n         objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n         statistics.incrementReadOps(1);\n       } else {\n         break;\n       }\n     }\n-    return true;\n+    //wait operations in progress to finish\n+    copyFileContext.lock();\n+    try {\n+      copyFileContext.awaitAllFinish(copiesToFinish);\n+    } catch (InterruptedException e) {\n+      LOG.warn(\"interrupted when wait copies to finish\");\n+    } finally {\n+      copyFileContext.unlock();\n+    }\n+    return !copyFileContext.isCopyFailure();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n    String srcKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(srcPath));\n    String dstKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(dstPath));\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    store.storeEmptyFile(dstKey);\n    AliyunOSSCopyFileContext copyFileContext \u003d new AliyunOSSCopyFileContext();\n    ExecutorService executorService \u003d MoreExecutors.listeningDecorator(\n        new SemaphoredDelegatingExecutor(boundedCopyThreadPool,\n            maxConcurrentCopyTasksPerDir, true));\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n    statistics.incrementReadOps(1);\n    // Copy files from src folder to dst\n    int copiesToFinish \u003d 0;\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n\n        //copy operation just copies metadata, oss will support shallow copy\n        executorService.execute(new AliyunOSSCopyFileTask(\n            store, objectSummary.getKey(), newKey, copyFileContext));\n        copiesToFinish++;\n        // No need to call lock() here.\n        // It\u0027s ok to copy one more file if the rename operation failed\n        // Reduce the call of lock() can also improve our performance\n        if (copyFileContext.isCopyFailure()) {\n          //some error occurs, break\n          break;\n        }\n      }\n      if (objects.isTruncated()) {\n        String nextMarker \u003d objects.getNextMarker();\n        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n        statistics.incrementReadOps(1);\n      } else {\n        break;\n      }\n    }\n    //wait operations in progress to finish\n    copyFileContext.lock();\n    try {\n      copyFileContext.awaitAllFinish(copiesToFinish);\n    } catch (InterruptedException e) {\n      LOG.warn(\"interrupted when wait copies to finish\");\n    } finally {\n      copyFileContext.unlock();\n    }\n    return !copyFileContext.isCopyFailure();\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "08b37603d9c0be67c4e0790c1ad266551ef21f5e": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu\n",
      "commitDate": "20/09/16 12:12 AM",
      "commitName": "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
      "commitAuthor": "Kai Zheng",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu\n",
          "commitDate": "20/09/16 12:12 AM",
          "commitName": "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "19/09/16 8:39 PM",
          "commitNameOld": "9cd47602576cd01a905e27642b685905a88eee72",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,33 @@\n-  private boolean copyDirectory(Path srcPath, Path dstPath) {\n-    String srcKey \u003d pathToKey(srcPath);\n-    String dstKey \u003d pathToKey(dstPath);\n-\n-    if (!srcKey.endsWith(\"/\")) {\n-      srcKey \u003d srcKey + \"/\";\n-    }\n-    if (!dstKey.endsWith(\"/\")) {\n-      dstKey \u003d dstKey + \"/\";\n-    }\n+  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n+    String srcKey \u003d AliyunOSSUtils\n+        .maybeAddTrailingSlash(pathToKey(srcPath));\n+    String dstKey \u003d AliyunOSSUtils\n+        .maybeAddTrailingSlash(pathToKey(dstPath));\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n-    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, null);\n+    store.storeEmptyFile(dstKey);\n+    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n     statistics.incrementReadOps(1);\n     // Copy files from src folder to dst\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n         store.copyFile(objectSummary.getKey(), newKey);\n       }\n       if (objects.isTruncated()) {\n-        objects \u003d store.listObjects(srcKey, maxKeys, null,\n-            objects.getNextMarker());\n+        String nextMarker \u003d objects.getNextMarker();\n+        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n         statistics.incrementReadOps(1);\n       } else {\n         break;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n    String srcKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(srcPath));\n    String dstKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(dstPath));\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    store.storeEmptyFile(dstKey);\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n    statistics.incrementReadOps(1);\n    // Copy files from src folder to dst\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n        store.copyFile(objectSummary.getKey(), newKey);\n      }\n      if (objects.isTruncated()) {\n        String nextMarker \u003d objects.getNextMarker();\n        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n        statistics.incrementReadOps(1);\n      } else {\n        break;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13591. Unit test failure in TestOSSContractGetFileStatus and TestOSSContractRootDir. Contributed by Genmao Yu\n",
          "commitDate": "20/09/16 12:12 AM",
          "commitName": "08b37603d9c0be67c4e0790c1ad266551ef21f5e",
          "commitAuthor": "Kai Zheng",
          "commitDateOld": "19/09/16 8:39 PM",
          "commitNameOld": "9cd47602576cd01a905e27642b685905a88eee72",
          "commitAuthorOld": "Kai Zheng",
          "daysBetweenCommits": 0.15,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,33 @@\n-  private boolean copyDirectory(Path srcPath, Path dstPath) {\n-    String srcKey \u003d pathToKey(srcPath);\n-    String dstKey \u003d pathToKey(dstPath);\n-\n-    if (!srcKey.endsWith(\"/\")) {\n-      srcKey \u003d srcKey + \"/\";\n-    }\n-    if (!dstKey.endsWith(\"/\")) {\n-      dstKey \u003d dstKey + \"/\";\n-    }\n+  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n+    String srcKey \u003d AliyunOSSUtils\n+        .maybeAddTrailingSlash(pathToKey(srcPath));\n+    String dstKey \u003d AliyunOSSUtils\n+        .maybeAddTrailingSlash(pathToKey(dstPath));\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n-    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, null);\n+    store.storeEmptyFile(dstKey);\n+    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n     statistics.incrementReadOps(1);\n     // Copy files from src folder to dst\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n         store.copyFile(objectSummary.getKey(), newKey);\n       }\n       if (objects.isTruncated()) {\n-        objects \u003d store.listObjects(srcKey, maxKeys, null,\n-            objects.getNextMarker());\n+        String nextMarker \u003d objects.getNextMarker();\n+        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n         statistics.incrementReadOps(1);\n       } else {\n         break;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) throws IOException {\n    String srcKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(srcPath));\n    String dstKey \u003d AliyunOSSUtils\n        .maybeAddTrailingSlash(pathToKey(dstPath));\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    store.storeEmptyFile(dstKey);\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, true);\n    statistics.incrementReadOps(1);\n    // Copy files from src folder to dst\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n        store.copyFile(objectSummary.getKey(), newKey);\n      }\n      if (objects.isTruncated()) {\n        String nextMarker \u003d objects.getNextMarker();\n        objects \u003d store.listObjects(srcKey, maxKeys, nextMarker, true);\n        statistics.incrementReadOps(1);\n      } else {\n        break;\n      }\n    }\n    return true;\n  }",
          "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "d33e928fbeb1764a724c8f3c051bb0d8be82bbff": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13529. Do some code refactoring. Contributed by Genmao Yu.\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "d33e928fbeb1764a724c8f3c051bb0d8be82bbff",
      "commitAuthor": "Mingfei",
      "commitDateOld": "06/09/16 8:15 PM",
      "commitNameOld": "cdb77110e77b70ed0c1125b2a6a422a8c7c28ec7",
      "commitAuthorOld": "Mingfei",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,37 @@\n   private boolean copyDirectory(Path srcPath, Path dstPath) {\n     String srcKey \u003d pathToKey(srcPath);\n     String dstKey \u003d pathToKey(dstPath);\n \n     if (!srcKey.endsWith(\"/\")) {\n       srcKey \u003d srcKey + \"/\";\n     }\n     if (!dstKey.endsWith(\"/\")) {\n       dstKey \u003d dstKey + \"/\";\n     }\n \n     if (dstKey.startsWith(srcKey)) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n       }\n       return false;\n     }\n \n-    ListObjectsRequest listObjectsRequest \u003d new ListObjectsRequest(bucketName);\n-    listObjectsRequest.setPrefix(srcKey);\n-    listObjectsRequest.setMaxKeys(maxKeys);\n-\n-    ObjectListing objects \u003d ossClient.listObjects(listObjectsRequest);\n+    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, null);\n     statistics.incrementReadOps(1);\n     // Copy files from src folder to dst\n     while (true) {\n       for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n         String newKey \u003d\n             dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n-        copyFile(objectSummary.getKey(), newKey);\n+        store.copyFile(objectSummary.getKey(), newKey);\n       }\n       if (objects.isTruncated()) {\n-        listObjectsRequest.setMarker(objects.getNextMarker());\n+        objects \u003d store.listObjects(srcKey, maxKeys, null,\n+            objects.getNextMarker());\n         statistics.incrementReadOps(1);\n       } else {\n         break;\n       }\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) {\n    String srcKey \u003d pathToKey(srcPath);\n    String dstKey \u003d pathToKey(dstPath);\n\n    if (!srcKey.endsWith(\"/\")) {\n      srcKey \u003d srcKey + \"/\";\n    }\n    if (!dstKey.endsWith(\"/\")) {\n      dstKey \u003d dstKey + \"/\";\n    }\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    ObjectListing objects \u003d store.listObjects(srcKey, maxKeys, null, null);\n    statistics.incrementReadOps(1);\n    // Copy files from src folder to dst\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n        store.copyFile(objectSummary.getKey(), newKey);\n      }\n      if (objects.isTruncated()) {\n        objects \u003d store.listObjects(srcKey, maxKeys, null,\n            objects.getNextMarker());\n        statistics.incrementReadOps(1);\n      } else {\n        break;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java",
      "extendedDetails": {}
    },
    "a5d5342228050a778b20e95adf7885bdba39985d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12756. Incorporate Aliyun OSS file system implementation. Contributed by Mingfei Shi and Lin Zhou\n",
      "commitDate": "06/09/16 8:15 PM",
      "commitName": "a5d5342228050a778b20e95adf7885bdba39985d",
      "commitAuthor": "Kai Zheng",
      "diff": "@@ -0,0 +1,40 @@\n+  private boolean copyDirectory(Path srcPath, Path dstPath) {\n+    String srcKey \u003d pathToKey(srcPath);\n+    String dstKey \u003d pathToKey(dstPath);\n+\n+    if (!srcKey.endsWith(\"/\")) {\n+      srcKey \u003d srcKey + \"/\";\n+    }\n+    if (!dstKey.endsWith(\"/\")) {\n+      dstKey \u003d dstKey + \"/\";\n+    }\n+\n+    if (dstKey.startsWith(srcKey)) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n+      }\n+      return false;\n+    }\n+\n+    ListObjectsRequest listObjectsRequest \u003d new ListObjectsRequest(bucketName);\n+    listObjectsRequest.setPrefix(srcKey);\n+    listObjectsRequest.setMaxKeys(maxKeys);\n+\n+    ObjectListing objects \u003d ossClient.listObjects(listObjectsRequest);\n+    statistics.incrementReadOps(1);\n+    // Copy files from src folder to dst\n+    while (true) {\n+      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n+        String newKey \u003d\n+            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n+        copyFile(objectSummary.getKey(), newKey);\n+      }\n+      if (objects.isTruncated()) {\n+        listObjectsRequest.setMarker(objects.getNextMarker());\n+        statistics.incrementReadOps(1);\n+      } else {\n+        break;\n+      }\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean copyDirectory(Path srcPath, Path dstPath) {\n    String srcKey \u003d pathToKey(srcPath);\n    String dstKey \u003d pathToKey(dstPath);\n\n    if (!srcKey.endsWith(\"/\")) {\n      srcKey \u003d srcKey + \"/\";\n    }\n    if (!dstKey.endsWith(\"/\")) {\n      dstKey \u003d dstKey + \"/\";\n    }\n\n    if (dstKey.startsWith(srcKey)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Cannot rename a directory to a subdirectory of self\");\n      }\n      return false;\n    }\n\n    ListObjectsRequest listObjectsRequest \u003d new ListObjectsRequest(bucketName);\n    listObjectsRequest.setPrefix(srcKey);\n    listObjectsRequest.setMaxKeys(maxKeys);\n\n    ObjectListing objects \u003d ossClient.listObjects(listObjectsRequest);\n    statistics.incrementReadOps(1);\n    // Copy files from src folder to dst\n    while (true) {\n      for (OSSObjectSummary objectSummary : objects.getObjectSummaries()) {\n        String newKey \u003d\n            dstKey.concat(objectSummary.getKey().substring(srcKey.length()));\n        copyFile(objectSummary.getKey(), newKey);\n      }\n      if (objects.isTruncated()) {\n        listObjectsRequest.setMarker(objects.getNextMarker());\n        statistics.incrementReadOps(1);\n      } else {\n        break;\n      }\n    }\n    return true;\n  }",
      "path": "hadoop-tools/hadoop-aliyun/src/main/java/org/apache/hadoop/fs/aliyun/oss/AliyunOSSFileSystem.java"
    }
  }
}