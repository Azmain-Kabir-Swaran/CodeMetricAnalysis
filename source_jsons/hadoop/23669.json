{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HsWebServices.java",
  "functionName": "getJobTaskAttemptId",
  "functionId": "getJobTaskAttemptId___hsr-HttpServletRequest(annotations-@Context)__jid-String(annotations-@PathParam(\"jobid\"))__tid-String(annotations-@PathParam(\"taskid\"))__attId-String(annotations-@PathParam(\"attemptid\"))",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
  "functionStartLine": 392,
  "functionEndLine": 407,
  "numCommitsSeen": 26,
  "timeTaken": 2197,
  "changeHistory": [
    "488806baca6d84c12b24532ddeacf6d249c2136b",
    "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "488806baca6d84c12b24532ddeacf6d249c2136b": "Ybodychange",
    "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede": "Ymultichange(Yparameterchange,Ybodychange)",
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": "Ybodychange",
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": "Ybodychange",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "488806baca6d84c12b24532ddeacf6d249c2136b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7140. Refactoring TaskAttemptInfo to separate Map and Reduce tasks. Contributed by Oleksandr Shevchenko\n",
      "commitDate": "14/09/18 1:10 PM",
      "commitName": "488806baca6d84c12b24532ddeacf6d249c2136b",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "27/10/16 4:09 PM",
      "commitNameOld": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 686.88,
      "commitsBetweenForRepo": 5214,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n       @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n       @PathParam(\"attemptid\") String attId) {\n \n     init();\n     Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n     checkAccess(job, hsr);\n     Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n     TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n         task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n-      return new ReduceTaskAttemptInfo(ta, task.getType());\n+      return new ReduceTaskAttemptInfo(ta);\n     } else {\n-      return new TaskAttemptInfo(ta, task.getType(), false);\n+      return new MapTaskAttemptInfo(ta, false);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n      @PathParam(\"attemptid\") String attId) {\n\n    init();\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n    checkAccess(job, hsr);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta);\n    } else {\n      return new MapTaskAttemptInfo(ta, false);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
      "extendedDetails": {}
    },
    "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "Add ACL check to JHS web-services.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547159 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/12/13 11:32 AM",
      "commitName": "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Add ACL check to JHS web-services.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547159 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 11:32 AM",
          "commitName": "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "13/06/13 4:25 PM",
          "commitNameOld": "c0cd68d8fbf5c8cafa6d563c7d0401e7a87a2d9e",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 171.84,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n-      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n+  public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n+      @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n+      @PathParam(\"attemptid\") String attId) {\n \n     init();\n     Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n+    checkAccess(job, hsr);\n     Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n     TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n         task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n       return new ReduceTaskAttemptInfo(ta, task.getType());\n     } else {\n       return new TaskAttemptInfo(ta, task.getType(), false);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n      @PathParam(\"attemptid\") String attId) {\n\n    init();\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n    checkAccess(job, hsr);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
          "extendedDetails": {
            "oldValue": "[jid-String(annotations-@PathParam(\"jobid\")), tid-String(annotations-@PathParam(\"taskid\")), attId-String(annotations-@PathParam(\"attemptid\"))]",
            "newValue": "[hsr-HttpServletRequest(annotations-@Context), jid-String(annotations-@PathParam(\"jobid\")), tid-String(annotations-@PathParam(\"taskid\")), attId-String(annotations-@PathParam(\"attemptid\"))]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Add ACL check to JHS web-services.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1547159 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "02/12/13 11:32 AM",
          "commitName": "eec0ec2d3f05818095f3ef5a5b0766a08e4d3ede",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "13/06/13 4:25 PM",
          "commitNameOld": "c0cd68d8fbf5c8cafa6d563c7d0401e7a87a2d9e",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 171.84,
          "commitsBetweenForRepo": 1050,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,16 @@\n-  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n-      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n+  public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n+      @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n+      @PathParam(\"attemptid\") String attId) {\n \n     init();\n     Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n+    checkAccess(job, hsr);\n     Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n     TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n         task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n       return new ReduceTaskAttemptInfo(ta, task.getType());\n     } else {\n       return new TaskAttemptInfo(ta, task.getType(), false);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@Context HttpServletRequest hsr,\n      @PathParam(\"jobid\") String jid, @PathParam(\"taskid\") String tid,\n      @PathParam(\"attemptid\") String attId) {\n\n    init();\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n    checkAccess(job, hsr);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
          "extendedDetails": {}
        }
      ]
    },
    "e7583d816a69677bbaa4280deb58ea73dbc42cef": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3613. web service calls header contains 2 content types (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 2:13 PM",
      "commitName": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/04/12 6:59 PM",
      "commitNameOld": "7d04a96027ad75877b41b7cd8f67455dd13159d7",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 7.8,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n       @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n \n+    init();\n     Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n     Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n     TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n         task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n       return new ReduceTaskAttemptInfo(ta, task.getType());\n     } else {\n       return new TaskAttemptInfo(ta, task.getType(), false);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n\n    init();\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
      "extendedDetails": {}
    },
    "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4059. The history server should have a separate pluggable storage/query interface. (Robert Evans via tgraves).\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1311896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 11:11 AM",
      "commitName": "cbb5f6109097a77f18f5fb0ba62ac132b8fa980f",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "02/04/12 2:06 PM",
      "commitNameOld": "01ce7ba3a4af867763e437ce46a4f5e1d6e5a6bf",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 7.88,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n       @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n \n-    Job job \u003d AMWebServices.getJobFromJobIdString(jid, appCtx);\n+    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n     Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n     TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n         task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n       return new ReduceTaskAttemptInfo(ta, task.getType());\n     } else {\n       return new TaskAttemptInfo(ta, task.getType(), false);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, ctx);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
      "extendedDetails": {}
    },
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3548. Added more unit tests for MR AM \u0026 JHS web-services. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 12:01 PM",
      "commitName": "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 22.87,
      "commitsBetweenForRepo": 99,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,13 @@\n   public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n       @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n-    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n-    if (job \u003d\u003d null) {\n-      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n-    }\n-    TaskId taskID \u003d MRApps.toTaskID(tid);\n-    if (taskID \u003d\u003d null) {\n-      throw new NotFoundException(\"taskid \" + tid + \" not found or invalid\");\n-    }\n-    Task task \u003d job.getTask(taskID);\n-    if (task \u003d\u003d null) {\n-      throw new NotFoundException(\"task not found with id \" + tid);\n-    }\n-    TaskAttemptId attemptId \u003d MRApps.toTaskAttemptID(attId);\n-    if (attemptId \u003d\u003d null) {\n-      throw new NotFoundException(\"task attempt id \" + attId\n-          + \" not found or invalid\");\n-    }\n-    TaskAttempt ta \u003d task.getAttempt(attemptId);\n-    if (ta \u003d\u003d null) {\n-      throw new NotFoundException(\"Error getting info on task attempt id \"\n-          + attId);\n-    }\n+\n+    Job job \u003d AMWebServices.getJobFromJobIdString(jid, appCtx);\n+    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n+    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n+        task);\n     if (task.getType() \u003d\u003d TaskType.REDUCE) {\n       return new ReduceTaskAttemptInfo(ta, task.getType());\n     } else {\n       return new TaskAttemptInfo(ta, task.getType(), false);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n\n    Job job \u003d AMWebServices.getJobFromJobIdString(jid, appCtx);\n    Task task \u003d AMWebServices.getTaskFromTaskIdString(tid, job);\n    TaskAttempt ta \u003d AMWebServices.getTaskAttemptFromTaskAttemptString(attId,\n        task);\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n+      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n+    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n+    if (job \u003d\u003d null) {\n+      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n+    }\n+    TaskId taskID \u003d MRApps.toTaskID(tid);\n+    if (taskID \u003d\u003d null) {\n+      throw new NotFoundException(\"taskid \" + tid + \" not found or invalid\");\n+    }\n+    Task task \u003d job.getTask(taskID);\n+    if (task \u003d\u003d null) {\n+      throw new NotFoundException(\"task not found with id \" + tid);\n+    }\n+    TaskAttemptId attemptId \u003d MRApps.toTaskAttemptID(attId);\n+    if (attemptId \u003d\u003d null) {\n+      throw new NotFoundException(\"task attempt id \" + attId\n+          + \" not found or invalid\");\n+    }\n+    TaskAttempt ta \u003d task.getAttempt(attemptId);\n+    if (ta \u003d\u003d null) {\n+      throw new NotFoundException(\"Error getting info on task attempt id \"\n+          + attId);\n+    }\n+    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n+      return new ReduceTaskAttemptInfo(ta, task.getType());\n+    } else {\n+      return new TaskAttemptInfo(ta, task.getType(), false);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TaskAttemptInfo getJobTaskAttemptId(@PathParam(\"jobid\") String jid,\n      @PathParam(\"taskid\") String tid, @PathParam(\"attemptid\") String attId) {\n    Job job \u003d this.appCtx.getJob(MRApps.toJobID(jid));\n    if (job \u003d\u003d null) {\n      throw new NotFoundException(\"job, \" + jid + \", is not found\");\n    }\n    TaskId taskID \u003d MRApps.toTaskID(tid);\n    if (taskID \u003d\u003d null) {\n      throw new NotFoundException(\"taskid \" + tid + \" not found or invalid\");\n    }\n    Task task \u003d job.getTask(taskID);\n    if (task \u003d\u003d null) {\n      throw new NotFoundException(\"task not found with id \" + tid);\n    }\n    TaskAttemptId attemptId \u003d MRApps.toTaskAttemptID(attId);\n    if (attemptId \u003d\u003d null) {\n      throw new NotFoundException(\"task attempt id \" + attId\n          + \" not found or invalid\");\n    }\n    TaskAttempt ta \u003d task.getAttempt(attemptId);\n    if (ta \u003d\u003d null) {\n      throw new NotFoundException(\"Error getting info on task attempt id \"\n          + attId);\n    }\n    if (task.getType() \u003d\u003d TaskType.REDUCE) {\n      return new ReduceTaskAttemptInfo(ta, task.getType());\n    } else {\n      return new TaskAttemptInfo(ta, task.getType(), false);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-hs/src/main/java/org/apache/hadoop/mapreduce/v2/hs/webapp/HsWebServices.java"
    }
  }
}