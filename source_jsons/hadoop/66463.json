{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DAGAMSimulator.java",
  "functionName": "init",
  "functionId": "init___heartbeatInterval-int__containerList-List__ContainerSimulator____resourceManager-ResourceManager__slsRunnner-SLSRunner__startTime-long__finishTime-long__simUser-String__simQueue-String__tracked-boolean__oldApp-String__baseTimeMS-long__amResource-Resource__nodeLabelExpr-String__params-Map__String,String____appIdAMSim-Map__ApplicationId,AMSimulator__",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java",
  "functionStartLine": 96,
  "functionEndLine": 112,
  "numCommitsSeen": 2,
  "timeTaken": 555,
  "changeHistory": [
    "16576fde8e3697025e1d37a4c21f8ad904208f8e"
  ],
  "changeHistoryShort": {
    "16576fde8e3697025e1d37a4c21f8ad904208f8e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "16576fde8e3697025e1d37a4c21f8ad904208f8e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9754. Add support for arbitrary DAG AM Simulator. Contributed by Abhishek Modi.\n",
      "commitDate": "28/08/19 11:13 PM",
      "commitName": "16576fde8e3697025e1d37a4c21f8ad904208f8e",
      "commitAuthor": "Abhishek Modi",
      "diff": "@@ -0,0 +1,17 @@\n+  public void init(int heartbeatInterval,\n+      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n+      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n+      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n+      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n+      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n+    super.init(heartbeatInterval, containerList, resourceManager, slsRunnner,\n+        startTime, finishTime, simUser, simQueue, tracked, oldApp, baseTimeMS,\n+        amResource, nodeLabelExpr, params, appIdAMSim);\n+    super.amtype \u003d \"dag\";\n+\n+    allContainers.addAll(containerList);\n+    pendingContainers.addAll(containerList);\n+    totalContainers \u003d allContainers.size();\n+\n+    LOG.info(\"Added new job with {} containers\", allContainers.size());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager resourceManager,\n      SLSRunner slsRunnner, long startTime, long finishTime, String simUser,\n      String simQueue, boolean tracked, String oldApp, long baseTimeMS,\n      Resource amResource, String nodeLabelExpr, Map\u003cString, String\u003e params,\n      Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n    super.init(heartbeatInterval, containerList, resourceManager, slsRunnner,\n        startTime, finishTime, simUser, simQueue, tracked, oldApp, baseTimeMS,\n        amResource, nodeLabelExpr, params, appIdAMSim);\n    super.amtype \u003d \"dag\";\n\n    allContainers.addAll(containerList);\n    pendingContainers.addAll(containerList);\n    totalContainers \u003d allContainers.size();\n\n    LOG.info(\"Added new job with {} containers\", allContainers.size());\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/DAGAMSimulator.java"
    }
  }
}