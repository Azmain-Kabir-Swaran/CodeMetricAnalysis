{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MurmurHash.java",
  "functionName": "hash",
  "functionId": "hash___data-byte[]__length-int__seed-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java",
  "functionStartLine": 41,
  "functionEndLine": 43,
  "numCommitsSeen": 7,
  "timeTaken": 951,
  "changeHistory": [
    "aac260faa15d69218f179b6475607fc63af31a53",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "aac260faa15d69218f179b6475607fc63af31a53": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aac260faa15d69218f179b6475607fc63af31a53": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10555. Add offset support to MurmurHash. Contributed by Sergey Shelukhin.\n",
      "commitDate": "22/11/15 6:00 PM",
      "commitName": "aac260faa15d69218f179b6475607fc63af31a53",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/08/12 6:03 PM",
      "commitNameOld": "deead78e35b0cb81af875b5a8032cbd06c9a2dae",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 1185.04,
      "commitsBetweenForRepo": 8541,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,48 +1,3 @@\n   public int hash(byte[] data, int length, int seed) {\n-    int m \u003d 0x5bd1e995;\n-    int r \u003d 24;\n-\n-    int h \u003d seed ^ length;\n-\n-    int len_4 \u003d length \u003e\u003e 2;\n-\n-    for (int i \u003d 0; i \u003c len_4; i++) {\n-      int i_4 \u003d i \u003c\u003c 2;\n-      int k \u003d data[i_4 + 3];\n-      k \u003d k \u003c\u003c 8;\n-      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n-      k \u003d k \u003c\u003c 8;\n-      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n-      k \u003d k \u003c\u003c 8;\n-      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n-      k *\u003d m;\n-      k ^\u003d k \u003e\u003e\u003e r;\n-      k *\u003d m;\n-      h *\u003d m;\n-      h ^\u003d k;\n-    }\n-\n-    // avoid calculating modulo\n-    int len_m \u003d len_4 \u003c\u003c 2;\n-    int left \u003d length - len_m;\n-\n-    if (left !\u003d 0) {\n-      if (left \u003e\u003d 3) {\n-        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n-      }\n-      if (left \u003e\u003d 2) {\n-        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n-      }\n-      if (left \u003e\u003d 1) {\n-        h ^\u003d (int) data[length - 1];\n-      }\n-\n-      h *\u003d m;\n-    }\n-\n-    h ^\u003d h \u003e\u003e\u003e 13;\n-    h *\u003d m;\n-    h ^\u003d h \u003e\u003e\u003e 15;\n-\n-    return h;\n+    return hash(data, 0, length, seed);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int hash(byte[] data, int length, int seed) {\n    return hash(data, 0, length, seed);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int hash(byte[] data, int length, int seed) {\n    int m \u003d 0x5bd1e995;\n    int r \u003d 24;\n\n    int h \u003d seed ^ length;\n\n    int len_4 \u003d length \u003e\u003e 2;\n\n    for (int i \u003d 0; i \u003c len_4; i++) {\n      int i_4 \u003d i \u003c\u003c 2;\n      int k \u003d data[i_4 + 3];\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n      k *\u003d m;\n      k ^\u003d k \u003e\u003e\u003e r;\n      k *\u003d m;\n      h *\u003d m;\n      h ^\u003d k;\n    }\n\n    // avoid calculating modulo\n    int len_m \u003d len_4 \u003c\u003c 2;\n    int left \u003d length - len_m;\n\n    if (left !\u003d 0) {\n      if (left \u003e\u003d 3) {\n        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n      }\n      if (left \u003e\u003d 2) {\n        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n      }\n      if (left \u003e\u003d 1) {\n        h ^\u003d (int) data[length - 1];\n      }\n\n      h *\u003d m;\n    }\n\n    h ^\u003d h \u003e\u003e\u003e 13;\n    h *\u003d m;\n    h ^\u003d h \u003e\u003e\u003e 15;\n\n    return h;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int hash(byte[] data, int length, int seed) {\n    int m \u003d 0x5bd1e995;\n    int r \u003d 24;\n\n    int h \u003d seed ^ length;\n\n    int len_4 \u003d length \u003e\u003e 2;\n\n    for (int i \u003d 0; i \u003c len_4; i++) {\n      int i_4 \u003d i \u003c\u003c 2;\n      int k \u003d data[i_4 + 3];\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n      k *\u003d m;\n      k ^\u003d k \u003e\u003e\u003e r;\n      k *\u003d m;\n      h *\u003d m;\n      h ^\u003d k;\n    }\n\n    // avoid calculating modulo\n    int len_m \u003d len_4 \u003c\u003c 2;\n    int left \u003d length - len_m;\n\n    if (left !\u003d 0) {\n      if (left \u003e\u003d 3) {\n        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n      }\n      if (left \u003e\u003d 2) {\n        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n      }\n      if (left \u003e\u003d 1) {\n        h ^\u003d (int) data[length - 1];\n      }\n\n      h *\u003d m;\n    }\n\n    h ^\u003d h \u003e\u003e\u003e 13;\n    h *\u003d m;\n    h ^\u003d h \u003e\u003e\u003e 15;\n\n    return h;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/hash/MurmurHash.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/hash/MurmurHash.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int hash(byte[] data, int length, int seed) {\n    int m \u003d 0x5bd1e995;\n    int r \u003d 24;\n\n    int h \u003d seed ^ length;\n\n    int len_4 \u003d length \u003e\u003e 2;\n\n    for (int i \u003d 0; i \u003c len_4; i++) {\n      int i_4 \u003d i \u003c\u003c 2;\n      int k \u003d data[i_4 + 3];\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n      k *\u003d m;\n      k ^\u003d k \u003e\u003e\u003e r;\n      k *\u003d m;\n      h *\u003d m;\n      h ^\u003d k;\n    }\n\n    // avoid calculating modulo\n    int len_m \u003d len_4 \u003c\u003c 2;\n    int left \u003d length - len_m;\n\n    if (left !\u003d 0) {\n      if (left \u003e\u003d 3) {\n        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n      }\n      if (left \u003e\u003d 2) {\n        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n      }\n      if (left \u003e\u003d 1) {\n        h ^\u003d (int) data[length - 1];\n      }\n\n      h *\u003d m;\n    }\n\n    h ^\u003d h \u003e\u003e\u003e 13;\n    h *\u003d m;\n    h ^\u003d h \u003e\u003e\u003e 15;\n\n    return h;\n  }",
      "path": "common/src/java/org/apache/hadoop/util/hash/MurmurHash.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/hash/MurmurHash.java",
        "newPath": "common/src/java/org/apache/hadoop/util/hash/MurmurHash.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,48 @@\n+  public int hash(byte[] data, int length, int seed) {\n+    int m \u003d 0x5bd1e995;\n+    int r \u003d 24;\n+\n+    int h \u003d seed ^ length;\n+\n+    int len_4 \u003d length \u003e\u003e 2;\n+\n+    for (int i \u003d 0; i \u003c len_4; i++) {\n+      int i_4 \u003d i \u003c\u003c 2;\n+      int k \u003d data[i_4 + 3];\n+      k \u003d k \u003c\u003c 8;\n+      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n+      k \u003d k \u003c\u003c 8;\n+      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n+      k \u003d k \u003c\u003c 8;\n+      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n+      k *\u003d m;\n+      k ^\u003d k \u003e\u003e\u003e r;\n+      k *\u003d m;\n+      h *\u003d m;\n+      h ^\u003d k;\n+    }\n+\n+    // avoid calculating modulo\n+    int len_m \u003d len_4 \u003c\u003c 2;\n+    int left \u003d length - len_m;\n+\n+    if (left !\u003d 0) {\n+      if (left \u003e\u003d 3) {\n+        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n+      }\n+      if (left \u003e\u003d 2) {\n+        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n+      }\n+      if (left \u003e\u003d 1) {\n+        h ^\u003d (int) data[length - 1];\n+      }\n+\n+      h *\u003d m;\n+    }\n+\n+    h ^\u003d h \u003e\u003e\u003e 13;\n+    h *\u003d m;\n+    h ^\u003d h \u003e\u003e\u003e 15;\n+\n+    return h;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int hash(byte[] data, int length, int seed) {\n    int m \u003d 0x5bd1e995;\n    int r \u003d 24;\n\n    int h \u003d seed ^ length;\n\n    int len_4 \u003d length \u003e\u003e 2;\n\n    for (int i \u003d 0; i \u003c len_4; i++) {\n      int i_4 \u003d i \u003c\u003c 2;\n      int k \u003d data[i_4 + 3];\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 2] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 1] \u0026 0xff);\n      k \u003d k \u003c\u003c 8;\n      k \u003d k | (data[i_4 + 0] \u0026 0xff);\n      k *\u003d m;\n      k ^\u003d k \u003e\u003e\u003e r;\n      k *\u003d m;\n      h *\u003d m;\n      h ^\u003d k;\n    }\n\n    // avoid calculating modulo\n    int len_m \u003d len_4 \u003c\u003c 2;\n    int left \u003d length - len_m;\n\n    if (left !\u003d 0) {\n      if (left \u003e\u003d 3) {\n        h ^\u003d (int) data[length - 3] \u003c\u003c 16;\n      }\n      if (left \u003e\u003d 2) {\n        h ^\u003d (int) data[length - 2] \u003c\u003c 8;\n      }\n      if (left \u003e\u003d 1) {\n        h ^\u003d (int) data[length - 1];\n      }\n\n      h *\u003d m;\n    }\n\n    h ^\u003d h \u003e\u003e\u003e 13;\n    h *\u003d m;\n    h ^\u003d h \u003e\u003e\u003e 15;\n\n    return h;\n  }",
      "path": "src/java/org/apache/hadoop/util/hash/MurmurHash.java"
    }
  }
}