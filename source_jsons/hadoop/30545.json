{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineV1DelegationTokenSecretManagerService.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineV1DelegationTokenSecretManagerService.java",
  "functionStartLine": 52,
  "functionEndLine": 59,
  "numCommitsSeen": 12,
  "timeTaken": 2184,
  "changeHistory": [
    "879de51206ddef132c092ee21e8b6c6e5976a56e",
    "9e33116d1d8944a393937337b3963e192b9c74d1",
    "149512a83743715bb100feb6747b7e88301018ab",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2",
    "b867b695565c588e8f86c867cba76397cab62848"
  ],
  "changeHistoryShort": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": "Ymultichange(Yfilerename,Ybodychange)",
    "9e33116d1d8944a393937337b3963e192b9c74d1": "Ybodychange",
    "149512a83743715bb100feb6747b7e88301018ab": "Ybodychange",
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": "Yfilerename",
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2": "Ybodychange",
    "b867b695565c588e8f86c867cba76397cab62848": "Yintroduced"
  },
  "changeHistoryDetails": {
    "879de51206ddef132c092ee21e8b6c6e5976a56e": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-5647. [ATSv2 Security] Collector side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "879de51206ddef132c092ee21e8b6c6e5976a56e",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-5647. [ATSv2 Security] Collector side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "879de51206ddef132c092ee21e8b6c6e5976a56e",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "24447b36260f930acec60b9306f7e381f816a99e",
          "commitAuthorOld": "vrushali",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,8 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n       stateStore \u003d createStateStore(conf);\n       stateStore.init(conf);\n     }\n-\n-    long secretKeyInterval \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL);\n-    long tokenMaxLifetime \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME);\n-    long tokenRenewInterval \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL);\n-    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n-        tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n      stateStore \u003d createStateStore(conf);\n      stateStore.init(conf);\n    }\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineV1DelegationTokenSecretManagerService.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineDelegationTokenSecretManagerService.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineV1DelegationTokenSecretManagerService.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5647. [ATSv2 Security] Collector side changes for loading auth filters and principals. Contributed by Varun Saxena\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "879de51206ddef132c092ee21e8b6c6e5976a56e",
          "commitAuthor": "Jian He",
          "commitDateOld": "29/08/17 10:59 PM",
          "commitNameOld": "24447b36260f930acec60b9306f7e381f816a99e",
          "commitAuthorOld": "vrushali",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,8 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n       stateStore \u003d createStateStore(conf);\n       stateStore.init(conf);\n     }\n-\n-    long secretKeyInterval \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL);\n-    long tokenMaxLifetime \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME);\n-    long tokenRenewInterval \u003d\n-        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL,\n-            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL);\n-    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n-        tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n-    super.init(conf);\n+    super.serviceInit(conf);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n      stateStore \u003d createStateStore(conf);\n      stateStore.init(conf);\n    }\n    super.serviceInit(conf);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineV1DelegationTokenSecretManagerService.java",
          "extendedDetails": {}
        }
      ]
    },
    "9e33116d1d8944a393937337b3963e192b9c74d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2861. Fixed Timeline DT secret manager to not reuse RM\u0027s configs. Contributed by Zhijie Shen\n",
      "commitDate": "15/01/15 11:07 AM",
      "commitName": "9e33116d1d8944a393937337b3963e192b9c74d1",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/12/14 6:25 PM",
      "commitNameOld": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 22.7,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n         YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n       stateStore \u003d createStateStore(conf);\n       stateStore.init(conf);\n     }\n \n     long secretKeyInterval \u003d\n-        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n-            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n+        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL,\n+            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL);\n     long tokenMaxLifetime \u003d\n-        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n-            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n+        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME,\n+            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME);\n     long tokenRenewInterval \u003d\n-        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n-            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n+        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL,\n+            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL);\n     secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n         tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n     super.init(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n      stateStore \u003d createStateStore(conf);\n      stateStore.init(conf);\n    }\n\n    long secretKeyInterval \u003d\n        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL,\n            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_KEY_UPDATE_INTERVAL);\n    long tokenMaxLifetime \u003d\n        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME,\n            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_MAX_LIFETIME);\n    long tokenRenewInterval \u003d\n        conf.getLong(YarnConfiguration.TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL,\n            YarnConfiguration.DEFAULT_TIMELINE_DELEGATION_TOKEN_RENEW_INTERVAL);\n    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n        tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineDelegationTokenSecretManagerService.java",
      "extendedDetails": {}
    },
    "149512a83743715bb100feb6747b7e88301018ab": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2837. Support TimeLine server to recover delegation token when restarting. Contributed by Zhijie Shen\n",
      "commitDate": "23/12/14 6:25 PM",
      "commitName": "149512a83743715bb100feb6747b7e88301018ab",
      "commitAuthor": "Jian He",
      "commitDateOld": "17/10/14 10:02 PM",
      "commitNameOld": "39063cd36f96e351e4a6bf0bc2b6185711d4b059",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 66.89,
      "commitsBetweenForRepo": 545,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n+    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n+        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n+      stateStore \u003d createStateStore(conf);\n+      stateStore.init(conf);\n+    }\n+\n     long secretKeyInterval \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n             YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n     long tokenMaxLifetime \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n             YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n     long tokenRenewInterval \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n             YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n     secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n-        tokenMaxLifetime, tokenRenewInterval,\n-        3600000);\n-    secretManager.startThreads();\n-\n-    serviceAddr \u003d TimelineUtils.getTimelineTokenServiceAddress(getConfig());\n+        tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n     super.init(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    if (conf.getBoolean(YarnConfiguration.TIMELINE_SERVICE_RECOVERY_ENABLED,\n        YarnConfiguration.DEFAULT_TIMELINE_SERVICE_RECOVERY_ENABLED)) {\n      stateStore \u003d createStateStore(conf);\n      stateStore.init(conf);\n    }\n\n    long secretKeyInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n    long tokenMaxLifetime \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n    long tokenRenewInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n        tokenMaxLifetime, tokenRenewInterval, 3600000, stateStore);\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineDelegationTokenSecretManagerService.java",
      "extendedDetails": {}
    },
    "001078e0677e39b962ca1da81fc34d7ac9a7e65c": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2107. Refactored timeline classes into o.a.h.y.s.timeline package. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598094 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/05/14 11:09 AM",
      "commitName": "001078e0677e39b962ca1da81fc34d7ac9a7e65c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "28/05/14 10:44 AM",
      "commitNameOld": "cfd8647d0f20c08761f908be1f5b718c1c372498",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    long secretKeyInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n    long tokenMaxLifetime \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n    long tokenRenewInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n        tokenMaxLifetime, tokenRenewInterval,\n        3600000);\n    secretManager.startThreads();\n\n    serviceAddr \u003d TimelineUtils.getTimelineTokenServiceAddress(getConfig());\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineDelegationTokenSecretManagerService.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/security/TimelineDelegationTokenSecretManagerService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/security/TimelineDelegationTokenSecretManagerService.java"
      }
    },
    "af8b09af75b252aa75b86ca42323c5b21eb41ee2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1936. Added security support for the Timeline Client. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597153 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 11:47 AM",
      "commitName": "af8b09af75b252aa75b86ca42323c5b21eb41ee2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/05/14 10:09 AM",
      "commitNameOld": "b867b695565c588e8f86c867cba76397cab62848",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,18 @@\n   protected void serviceInit(Configuration conf) throws Exception {\n     long secretKeyInterval \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n             YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n     long tokenMaxLifetime \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n             YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n     long tokenRenewInterval \u003d\n         conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n             YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n     secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n         tokenMaxLifetime, tokenRenewInterval,\n         3600000);\n     secretManager.startThreads();\n \n-    if (YarnConfiguration.useHttps(getConfig())) {\n-      serviceAddr \u003d getConfig().getSocketAddr(\n-          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT);\n-    } else {\n-      serviceAddr \u003d getConfig().getSocketAddr(\n-          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS,\n-          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_PORT);\n-    }\n+    serviceAddr \u003d TimelineUtils.getTimelineTokenServiceAddress(getConfig());\n     super.init(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    long secretKeyInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n    long tokenMaxLifetime \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n    long tokenRenewInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n        tokenMaxLifetime, tokenRenewInterval,\n        3600000);\n    secretManager.startThreads();\n\n    serviceAddr \u003d TimelineUtils.getTimelineTokenServiceAddress(getConfig());\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/security/TimelineDelegationTokenSecretManagerService.java",
      "extendedDetails": {}
    },
    "b867b695565c588e8f86c867cba76397cab62848": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2049. Added delegation-token support for the Timeline Server. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1597130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/14 10:09 AM",
      "commitName": "b867b695565c588e8f86c867cba76397cab62848",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  protected void serviceInit(Configuration conf) throws Exception {\n+    long secretKeyInterval \u003d\n+        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n+            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n+    long tokenMaxLifetime \u003d\n+        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n+            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n+    long tokenRenewInterval \u003d\n+        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n+            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n+    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n+        tokenMaxLifetime, tokenRenewInterval,\n+        3600000);\n+    secretManager.startThreads();\n+\n+    if (YarnConfiguration.useHttps(getConfig())) {\n+      serviceAddr \u003d getConfig().getSocketAddr(\n+          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT);\n+    } else {\n+      serviceAddr \u003d getConfig().getSocketAddr(\n+          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS,\n+          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_PORT);\n+    }\n+    super.init(conf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceInit(Configuration conf) throws Exception {\n    long secretKeyInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_KEY_UPDATE_INTERVAL_DEFAULT);\n    long tokenMaxLifetime \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_MAX_LIFETIME_DEFAULT);\n    long tokenRenewInterval \u003d\n        conf.getLong(YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_KEY,\n            YarnConfiguration.DELEGATION_TOKEN_RENEW_INTERVAL_DEFAULT);\n    secretManager \u003d new TimelineDelegationTokenSecretManager(secretKeyInterval,\n        tokenMaxLifetime, tokenRenewInterval,\n        3600000);\n    secretManager.startThreads();\n\n    if (YarnConfiguration.useHttps(getConfig())) {\n      serviceAddr \u003d getConfig().getSocketAddr(\n          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_HTTPS_PORT);\n    } else {\n      serviceAddr \u003d getConfig().getSocketAddr(\n          YarnConfiguration.TIMELINE_SERVICE_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_ADDRESS,\n          YarnConfiguration.DEFAULT_TIMELINE_SERVICE_WEBAPP_PORT);\n    }\n    super.init(conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/timeline/security/TimelineDelegationTokenSecretManagerService.java"
    }
  }
}