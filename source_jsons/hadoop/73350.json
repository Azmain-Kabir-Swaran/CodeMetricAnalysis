{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "getDecayedCallCosts",
  "functionId": "getDecayedCallCosts",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 989,
  "functionEndLine": 1002,
  "numCommitsSeen": 36,
  "timeTaken": 2066,
  "changeHistory": [
    "129576f628d370def74e56112aba3a93e97bbf70",
    "0761379fe45898c44c8f161834c298ef932e4d8c"
  ],
  "changeHistoryShort": {
    "129576f628d370def74e56112aba3a93e97bbf70": "Ymultichange(Yrename,Ybodychange)",
    "0761379fe45898c44c8f161834c298ef932e4d8c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "129576f628d370def74e56112aba3a93e97bbf70": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
      "commitDate": "24/06/19 12:09 PM",
      "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
      "commitAuthor": "Christopher Gregorian",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
          "commitDate": "24/06/19 12:09 PM",
          "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "23/05/19 10:28 AM",
          "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthorOld": "Christopher Gregorian",
          "daysBetweenCommits": 32.07,
          "commitsBetweenForRepo": 314,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Map\u003cObject, Long\u003e getDecayedCallCounts() {\n-    Map\u003cObject, Long\u003e decayedCallCounts \u003d new HashMap\u003c\u003e(callCounts.size());\n+  private Map\u003cObject, Long\u003e getDecayedCallCosts() {\n+    Map\u003cObject, Long\u003e decayedCallCosts \u003d new HashMap\u003c\u003e(callCosts.size());\n     Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n-        callCounts.entrySet().iterator();\n+        callCosts.entrySet().iterator();\n     while (it.hasNext()) {\n       Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n       Object user \u003d entry.getKey();\n-      Long decayedCount \u003d entry.getValue().get(0).get();\n-      if (decayedCount \u003e 0) {\n-        decayedCallCounts.put(user, decayedCount);\n+      Long decayedCost \u003d entry.getValue().get(0).get();\n+      if (decayedCost \u003e 0) {\n+        decayedCallCosts.put(user, decayedCost);\n       }\n     }\n-    return decayedCallCounts;\n+    return decayedCallCosts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cObject, Long\u003e getDecayedCallCosts() {\n    Map\u003cObject, Long\u003e decayedCallCosts \u003d new HashMap\u003c\u003e(callCosts.size());\n    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n        callCosts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n      Object user \u003d entry.getKey();\n      Long decayedCost \u003d entry.getValue().get(0).get();\n      if (decayedCost \u003e 0) {\n        decayedCallCosts.put(user, decayedCost);\n      }\n    }\n    return decayedCallCosts;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {
            "oldValue": "getDecayedCallCounts",
            "newValue": "getDecayedCallCosts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
          "commitDate": "24/06/19 12:09 PM",
          "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
          "commitAuthor": "Christopher Gregorian",
          "commitDateOld": "23/05/19 10:28 AM",
          "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
          "commitAuthorOld": "Christopher Gregorian",
          "daysBetweenCommits": 32.07,
          "commitsBetweenForRepo": 314,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n-  private Map\u003cObject, Long\u003e getDecayedCallCounts() {\n-    Map\u003cObject, Long\u003e decayedCallCounts \u003d new HashMap\u003c\u003e(callCounts.size());\n+  private Map\u003cObject, Long\u003e getDecayedCallCosts() {\n+    Map\u003cObject, Long\u003e decayedCallCosts \u003d new HashMap\u003c\u003e(callCosts.size());\n     Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n-        callCounts.entrySet().iterator();\n+        callCosts.entrySet().iterator();\n     while (it.hasNext()) {\n       Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n       Object user \u003d entry.getKey();\n-      Long decayedCount \u003d entry.getValue().get(0).get();\n-      if (decayedCount \u003e 0) {\n-        decayedCallCounts.put(user, decayedCount);\n+      Long decayedCost \u003d entry.getValue().get(0).get();\n+      if (decayedCost \u003e 0) {\n+        decayedCallCosts.put(user, decayedCost);\n       }\n     }\n-    return decayedCallCounts;\n+    return decayedCallCosts;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private Map\u003cObject, Long\u003e getDecayedCallCosts() {\n    Map\u003cObject, Long\u003e decayedCallCosts \u003d new HashMap\u003c\u003e(callCosts.size());\n    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n        callCosts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n      Object user \u003d entry.getKey();\n      Long decayedCost \u003d entry.getValue().get(0).get();\n      if (decayedCost \u003e 0) {\n        decayedCallCosts.put(user, decayedCost);\n      }\n    }\n    return decayedCallCosts;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "0761379fe45898c44c8f161834c298ef932e4d8c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13285. DecayRpcScheduler MXBean should only report decayed CallVolumeSummary. Contributed by Xiaoyu Yao.\n",
      "commitDate": "17/06/16 3:25 PM",
      "commitName": "0761379fe45898c44c8f161834c298ef932e4d8c",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,14 @@\n+  private Map\u003cObject, Long\u003e getDecayedCallCounts() {\n+    Map\u003cObject, Long\u003e decayedCallCounts \u003d new HashMap\u003c\u003e(callCounts.size());\n+    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n+        callCounts.entrySet().iterator();\n+    while (it.hasNext()) {\n+      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n+      Object user \u003d entry.getKey();\n+      Long decayedCount \u003d entry.getValue().get(0).get();\n+      if (decayedCount \u003e 0) {\n+        decayedCallCounts.put(user, decayedCount);\n+      }\n+    }\n+    return decayedCallCounts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Map\u003cObject, Long\u003e getDecayedCallCounts() {\n    Map\u003cObject, Long\u003e decayedCallCounts \u003d new HashMap\u003c\u003e(callCounts.size());\n    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n        callCounts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n      Object user \u003d entry.getKey();\n      Long decayedCount \u003d entry.getValue().get(0).get();\n      if (decayedCount \u003e 0) {\n        decayedCallCounts.put(user, decayedCount);\n      }\n    }\n    return decayedCallCounts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}