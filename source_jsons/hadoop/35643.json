{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV1Publisher.java",
  "functionName": "containerFinished",
  "functionId": "containerFinished___container-RMContainer__finishedTime-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
  "functionStartLine": 322,
  "functionEndLine": 347,
  "numCommitsSeen": 40,
  "timeTaken": 4686,
  "changeHistory": [
    "1f304b0c7f261369dd68839507bb609a949965ad",
    "6d943038f61211594d017f631710e6710ec71372",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
    "f3c661e8dddc80726f1084ff27815d179540889c",
    "b2ed6ae73197990a950ce71ece80c0f23221c384",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "1f304b0c7f261369dd68839507bb609a949965ad": "Ybodychange",
    "6d943038f61211594d017f631710e6710ec71372": "Ybodychange",
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "f3c661e8dddc80726f1084ff27815d179540889c": "Ymultichange(Ymovefromfile,Ymodifierchange)",
    "b2ed6ae73197990a950ce71ece80c0f23221c384": "Ybodychange",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f304b0c7f261369dd68839507bb609a949965ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5699. Retrospect yarn entity fields which are publishing in events info fields. Contributed by Rohith Sharma K S.\n",
      "commitDate": "15/10/16 1:54 PM",
      "commitName": "1f304b0c7f261369dd68839507bb609a949965ad",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "28/09/16 3:40 AM",
      "commitNameOld": "9b0fd01d2ee002ac4c30c2862e18ca8f1626fa8d",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 17.43,
      "commitsBetweenForRepo": 134,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public void containerFinished(RMContainer container, long finishedTime) {\n     TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n-    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n+    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n         container.getDiagnosticsInfo());\n-    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n+    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n         container.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+    eventInfo.put(ContainerMetricsConstants.STATE_INFO,\n         container.getContainerState().toString());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_INFO,\n         container.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_INFO,\n         container.getAllocatedNode().getPort());\n     entity.setOtherInfo(entityInfo);\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n             .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_INFO,\n        container.getContainerState().toString());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_INFO,\n        container.getAllocatedNode().getPort());\n    entity.setOtherInfo(entityInfo);\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "6d943038f61211594d017f631710e6710ec71372": {
      "type": "Ybodychange",
      "commitMessage": "Cleanup changes during rebase with trunk (Vrushali C)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "6d943038f61211594d017f631710e6710ec71372",
      "commitAuthor": "Vrushali",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n   public void containerFinished(RMContainer container, long finishedTime) {\n     TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n         container.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n         container.getContainerExitStatus());\n     eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n         container.getContainerState().toString());\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        container.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+       container.getAllocatedNode().getPort());\n+    entity.setOtherInfo(entityInfo);\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n     getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n         SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n             .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        container.getContainerState().toString());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        container.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n       container.getAllocatedNode().getPort());\n    entity.setOtherInfo(entityInfo);\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
      "extendedDetails": {}
    },
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerFinished(RMContainer container, long finishedTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n-        event.getDiagnosticsInfo());\n+        container.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n-        event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n-        .getContainerState().toString());\n-    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n-    entity.setOtherInfo(entityInfo);\n+        container.getContainerExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+        container.getContainerState().toString());\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        container.getContainerState().toString());\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "publishContainerFinishedEvent",
            "newValue": "containerFinished"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerFinished(RMContainer container, long finishedTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n-        event.getDiagnosticsInfo());\n+        container.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n-        event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n-        .getContainerState().toString());\n-    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n-    entity.setOtherInfo(entityInfo);\n+        container.getContainerExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+        container.getContainerState().toString());\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        container.getContainerState().toString());\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[event-ContainerFinishedEvent]",
            "newValue": "[container-RMContainer, finishedTime-long]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerFinished(RMContainer container, long finishedTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n-        event.getDiagnosticsInfo());\n+        container.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n-        event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n-        .getContainerState().toString());\n-    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n-    entity.setOtherInfo(entityInfo);\n+        container.getContainerExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+        container.getContainerState().toString());\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        container.getContainerState().toString());\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 31,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,20 @@\n-  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n-    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+  public void containerFinished(RMContainer container, long finishedTime) {\n+    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n \n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n-    tEvent.setTimestamp(event.getTimestamp());\n+    tEvent.setTimestamp(finishedTime);\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n-        event.getDiagnosticsInfo());\n+        container.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n-        event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n-        .getContainerState().toString());\n-    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n-        event.getAllocatedNode().getHost());\n-    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n-        event.getAllocatedNode().getPort());\n-    entity.setOtherInfo(entityInfo);\n+        container.getContainerExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+        container.getContainerState().toString());\n     tEvent.setEventInfo(eventInfo);\n \n     entity.addEvent(tEvent);\n-    putEntity(entity);\n+    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n+        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n+            .getContainerId().getApplicationAttemptId().getApplicationId()));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void containerFinished(RMContainer container, long finishedTime) {\n    TimelineEntity entity \u003d createContainerEntity(container.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(finishedTime);\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        container.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        container.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        container.getContainerState().toString());\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    getDispatcher().getEventHandler().handle(new TimelineV1PublishEvent(\n        SystemMetricsEventType.PUBLISH_ENTITY, entity, container\n            .getContainerId().getApplicationAttemptId().getApplicationId()));\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {}
        }
      ]
    },
    "f3c661e8dddc80726f1084ff27815d179540889c": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange)",
      "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n+  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n         event.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n         event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n-        event.getContainerState().toString());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n+        .getContainerState().toString());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n         event.getAllocatedNode().getHost());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n         event.getAllocatedNode().getPort());\n     entity.setOtherInfo(entityInfo);\n     tEvent.setEventInfo(eventInfo);\n+\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        event.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        event.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n        .getContainerState().toString());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entity.setOtherInfo(entityInfo);\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
            "oldMethodName": "publishContainerFinishedEvent",
            "newMethodName": "publishContainerFinishedEvent"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,24 @@\n-  private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n+  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n         event.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n         event.getContainerExitStatus());\n-    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n-        event.getContainerState().toString());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n+        .getContainerState().toString());\n     Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n         event.getAllocatedNode().getHost());\n     entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n         event.getAllocatedNode().getPort());\n     entity.setOtherInfo(entityInfo);\n     tEvent.setEventInfo(eventInfo);\n+\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        event.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        event.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO, event\n        .getContainerState().toString());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entity.setOtherInfo(entityInfo);\n    tEvent.setEventInfo(eventInfo);\n\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV1Publisher.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[]"
          }
        }
      ]
    },
    "b2ed6ae73197990a950ce71ece80c0f23221c384": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4747. AHS error 500 due to NPE when container start event is missing. Contributed by Varun Saxena\n",
      "commitDate": "06/05/16 3:59 PM",
      "commitName": "b2ed6ae73197990a950ce71ece80c0f23221c384",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "18/01/16 4:58 PM",
      "commitNameOld": "f385851141522633184ce394899c659af5ace92a",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 108.92,
      "commitsBetweenForRepo": 702,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n     TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n     tEvent.setTimestamp(event.getTimestamp());\n     Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n     eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n         event.getDiagnosticsInfo());\n     eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n         event.getContainerExitStatus());\n     eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n         event.getContainerState().toString());\n+    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n+        event.getAllocatedNode().getHost());\n+    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n+        event.getAllocatedNode().getPort());\n+    entity.setOtherInfo(entityInfo);\n     tEvent.setEventInfo(eventInfo);\n     entity.addEvent(tEvent);\n     putEntity(entity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        event.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        event.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        event.getContainerState().toString());\n    Map\u003cString, Object\u003e entityInfo \u003d new HashMap\u003cString, Object\u003e();\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_HOST_ENTITY_INFO,\n        event.getAllocatedNode().getHost());\n    entityInfo.put(ContainerMetricsConstants.ALLOCATED_PORT_ENTITY_INFO,\n        event.getAllocatedNode().getPort());\n    entity.setOtherInfo(entityInfo);\n    tEvent.setEventInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
      "extendedDetails": {}
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,16 @@\n+  private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n+    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n+    tEvent.setTimestamp(event.getTimestamp());\n+    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n+    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n+        event.getDiagnosticsInfo());\n+    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n+        event.getContainerExitStatus());\n+    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n+        event.getContainerState().toString());\n+    tEvent.setEventInfo(eventInfo);\n+    entity.addEvent(tEvent);\n+    putEntity(entity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void publishContainerFinishedEvent(ContainerFinishedEvent event) {\n    TimelineEntity entity \u003d createContainerEntity(event.getContainerId());\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(ContainerMetricsConstants.FINISHED_EVENT_TYPE);\n    tEvent.setTimestamp(event.getTimestamp());\n    Map\u003cString, Object\u003e eventInfo \u003d new HashMap\u003cString, Object\u003e();\n    eventInfo.put(ContainerMetricsConstants.DIAGNOSTICS_INFO_EVENT_INFO,\n        event.getDiagnosticsInfo());\n    eventInfo.put(ContainerMetricsConstants.EXIT_STATUS_EVENT_INFO,\n        event.getContainerExitStatus());\n    eventInfo.put(ContainerMetricsConstants.STATE_EVENT_INFO,\n        event.getContainerState().toString());\n    tEvent.setEventInfo(eventInfo);\n    entity.addEvent(tEvent);\n    putEntity(entity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java"
    }
  }
}