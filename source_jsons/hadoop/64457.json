{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3AInputStream.java",
  "functionName": "calculateRequestLimit",
  "functionId": "calculateRequestLimit___inputPolicy-S3AInputPolicy__targetPos-long__length-long__contentLength-long__readahead-long",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
  "functionStartLine": 777,
  "functionEndLine": 807,
  "numCommitsSeen": 28,
  "timeTaken": 1485,
  "changeHistory": [
    "1ba491ff907fc5d2618add980734a3534e2be098",
    "4ee3543625c77c06d566fe81644d21c607d6d74d"
  ],
  "changeHistoryShort": {
    "1ba491ff907fc5d2618add980734a3534e2be098": "Ybodychange",
    "4ee3543625c77c06d566fe81644d21c607d6d74d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ba491ff907fc5d2618add980734a3534e2be098": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14965. S3a input stream \"normal\" fadvise mode to be adaptive\n",
      "commitDate": "20/12/17 10:25 AM",
      "commitName": "1ba491ff907fc5d2618add980734a3534e2be098",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/11/17 7:28 AM",
      "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 28.12,
      "commitsBetweenForRepo": 198,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   static long calculateRequestLimit(\n       S3AInputPolicy inputPolicy,\n       long targetPos,\n       long length,\n       long contentLength,\n       long readahead) {\n     long rangeLimit;\n     switch (inputPolicy) {\n     case Random:\n       // positioned.\n       // read either this block, or the here + readahead value.\n       rangeLimit \u003d (length \u003c 0) ? contentLength\n           : targetPos + Math.max(readahead, length);\n       break;\n \n     case Sequential:\n       // sequential: plan for reading the entire object.\n       rangeLimit \u003d contentLength;\n       break;\n \n     case Normal:\n+      // normal is considered sequential until a backwards seek switches\n+      // it to \u0027Random\u0027\n     default:\n       rangeLimit \u003d contentLength;\n \n     }\n     // cannot read past the end of the object\n     rangeLimit \u003d Math.min(contentLength, rangeLimit);\n     return rangeLimit;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static long calculateRequestLimit(\n      S3AInputPolicy inputPolicy,\n      long targetPos,\n      long length,\n      long contentLength,\n      long readahead) {\n    long rangeLimit;\n    switch (inputPolicy) {\n    case Random:\n      // positioned.\n      // read either this block, or the here + readahead value.\n      rangeLimit \u003d (length \u003c 0) ? contentLength\n          : targetPos + Math.max(readahead, length);\n      break;\n\n    case Sequential:\n      // sequential: plan for reading the entire object.\n      rangeLimit \u003d contentLength;\n      break;\n\n    case Normal:\n      // normal is considered sequential until a backwards seek switches\n      // it to \u0027Random\u0027\n    default:\n      rangeLimit \u003d contentLength;\n\n    }\n    // cannot read past the end of the object\n    rangeLimit \u003d Math.min(contentLength, rangeLimit);\n    return rangeLimit;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java",
      "extendedDetails": {}
    },
    "4ee3543625c77c06d566fe81644d21c607d6d74d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13203 S3A: Support fadvise \"random\" mode for high performance readPositioned() reads. Contributed by Rajesh Balamohan and stevel.\n",
      "commitDate": "22/06/16 7:45 AM",
      "commitName": "4ee3543625c77c06d566fe81644d21c607d6d74d",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,29 @@\n+  static long calculateRequestLimit(\n+      S3AInputPolicy inputPolicy,\n+      long targetPos,\n+      long length,\n+      long contentLength,\n+      long readahead) {\n+    long rangeLimit;\n+    switch (inputPolicy) {\n+    case Random:\n+      // positioned.\n+      // read either this block, or the here + readahead value.\n+      rangeLimit \u003d (length \u003c 0) ? contentLength\n+          : targetPos + Math.max(readahead, length);\n+      break;\n+\n+    case Sequential:\n+      // sequential: plan for reading the entire object.\n+      rangeLimit \u003d contentLength;\n+      break;\n+\n+    case Normal:\n+    default:\n+      rangeLimit \u003d contentLength;\n+\n+    }\n+    // cannot read past the end of the object\n+    rangeLimit \u003d Math.min(contentLength, rangeLimit);\n+    return rangeLimit;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static long calculateRequestLimit(\n      S3AInputPolicy inputPolicy,\n      long targetPos,\n      long length,\n      long contentLength,\n      long readahead) {\n    long rangeLimit;\n    switch (inputPolicy) {\n    case Random:\n      // positioned.\n      // read either this block, or the here + readahead value.\n      rangeLimit \u003d (length \u003c 0) ? contentLength\n          : targetPos + Math.max(readahead, length);\n      break;\n\n    case Sequential:\n      // sequential: plan for reading the entire object.\n      rangeLimit \u003d contentLength;\n      break;\n\n    case Normal:\n    default:\n      rangeLimit \u003d contentLength;\n\n    }\n    // cannot read past the end of the object\n    rangeLimit \u003d Math.min(contentLength, rangeLimit);\n    return rangeLimit;\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/S3AInputStream.java"
    }
  }
}