{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobSubmitter.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
  "functionStartLine": 84,
  "functionEndLine": 161,
  "numCommitsSeen": 7,
  "timeTaken": 4377,
  "changeHistory": [
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "8a2073cc61699f5692fcf638f4bae4d1c544870a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "8a2073cc61699f5692fcf638f4bae4d1c544870a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      JobStats stats \u003d \n        Statistics.generateJobStats(job.getJob(), job.getJobDesc());\n      try {\n        // pre-compute split information\n        try {\n          long start \u003d System.currentTimeMillis();\n          job.buildSplits(inputDir);\n          long end \u003d System.currentTimeMillis();\n          LOG.info(\"[JobSubmitter] Time taken to build splits for job \" \n                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(stats);\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(stats);\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          long start \u003d System.currentTimeMillis();\n          job.call();\n          long end \u003d System.currentTimeMillis();\n          LOG.info(\"[JobSubmitter] Time taken to submit the job \" \n                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n          \n          // mark it as submitted\n          job.setSubmitted();\n          \n          // add to the monitor\n          monitor.add(stats);\n          \n          // add to the statistics\n          statistics.addJobStats(stats);\n          if (LOG.isDebugEnabled()) {\n            String jobID \u003d \n              job.getJob().getConfiguration().get(Gridmix.ORIGINAL_JOB_ID);\n            LOG.debug(\"Original job \u0027\" + jobID + \"\u0027 is being simulated as \u0027\" \n                      + job.getJob().getJobID() + \"\u0027\");\n            LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() \n                      + \" (\" + job.getJob().getJobID() + \")\");\n          }\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(stats);\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(stats);\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(stats);\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n        monitor.submissionFailed(stats);\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java"
      }
    },
    "8a2073cc61699f5692fcf638f4bae4d1c544870a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3787. [Gridmix] Optimize job monitoring and STRESS mode for faster job submission. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1292736 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/02/12 2:41 AM",
      "commitName": "8a2073cc61699f5692fcf638f4bae4d1c544870a",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 182.44,
      "commitsBetweenForRepo": 1146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,78 @@\n     public void run() {\n+      JobStats stats \u003d \n+        Statistics.generateJobStats(job.getJob(), job.getJobDesc());\n       try {\n         // pre-compute split information\n         try {\n+          long start \u003d System.currentTimeMillis();\n           job.buildSplits(inputDir);\n+          long end \u003d System.currentTimeMillis();\n+          LOG.info(\"[JobSubmitter] Time taken to build splits for job \" \n+                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n         } catch (IOException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n-          monitor.submissionFailed(job.getJob());\n+          monitor.submissionFailed(stats);\n           return;\n         } catch (Exception e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n-          monitor.submissionFailed(job.getJob());\n+          monitor.submissionFailed(stats);\n           return;\n         }\n         // Sleep until deadline\n         long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n         while (nsDelay \u003e 0) {\n           TimeUnit.NANOSECONDS.sleep(nsDelay);\n           nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n         }\n         try {\n           // submit job\n-          monitor.add(job.call());\n-          statistics.addJobStats(job.getJob(), job.getJobDesc());\n-          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n-              \" (\" + job.getJob().getJobID() + \")\");\n+          long start \u003d System.currentTimeMillis();\n+          job.call();\n+          long end \u003d System.currentTimeMillis();\n+          LOG.info(\"[JobSubmitter] Time taken to submit the job \" \n+                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n+          \n+          // mark it as submitted\n+          job.setSubmitted();\n+          \n+          // add to the monitor\n+          monitor.add(stats);\n+          \n+          // add to the statistics\n+          statistics.addJobStats(stats);\n+          if (LOG.isDebugEnabled()) {\n+            String jobID \u003d \n+              job.getJob().getConfiguration().get(Gridmix.ORIGINAL_JOB_ID);\n+            LOG.debug(\"Original job \u0027\" + jobID + \"\u0027 is being simulated as \u0027\" \n+                      + job.getJob().getJobID() + \"\u0027\");\n+            LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() \n+                      + \" (\" + job.getJob().getJobID() + \")\");\n+          }\n         } catch (IOException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n           if (e.getCause() instanceof ClosedByInterruptException) {\n             throw new InterruptedException(\"Failed to submit \" +\n                 job.getJob().getJobName());\n           }\n-          monitor.submissionFailed(job.getJob());\n+          monitor.submissionFailed(stats);\n         } catch (ClassNotFoundException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n-          monitor.submissionFailed(job.getJob());\n+          monitor.submissionFailed(stats);\n         }\n       } catch (InterruptedException e) {\n         // abort execution, remove splits if nesc\n         // TODO release ThdLoc\n         GridmixJob.pullDescription(job.id());\n         Thread.currentThread().interrupt();\n-        monitor.submissionFailed(job.getJob());\n+        monitor.submissionFailed(stats);\n       } catch(Exception e) {\n         //Due to some exception job wasnt submitted.\n         LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n-        monitor.submissionFailed(job.getJob());\n+        monitor.submissionFailed(stats);\n       } finally {\n         sem.release();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      JobStats stats \u003d \n        Statistics.generateJobStats(job.getJob(), job.getJobDesc());\n      try {\n        // pre-compute split information\n        try {\n          long start \u003d System.currentTimeMillis();\n          job.buildSplits(inputDir);\n          long end \u003d System.currentTimeMillis();\n          LOG.info(\"[JobSubmitter] Time taken to build splits for job \" \n                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(stats);\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(stats);\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          long start \u003d System.currentTimeMillis();\n          job.call();\n          long end \u003d System.currentTimeMillis();\n          LOG.info(\"[JobSubmitter] Time taken to submit the job \" \n                   + job.getJob().getJobID() + \": \" + (end - start) + \" ms.\");\n          \n          // mark it as submitted\n          job.setSubmitted();\n          \n          // add to the monitor\n          monitor.add(stats);\n          \n          // add to the statistics\n          statistics.addJobStats(stats);\n          if (LOG.isDebugEnabled()) {\n            String jobID \u003d \n              job.getJob().getConfiguration().get(Gridmix.ORIGINAL_JOB_ID);\n            LOG.debug(\"Original job \u0027\" + jobID + \"\u0027 is being simulated as \u0027\" \n                      + job.getJob().getJobID() + \"\u0027\");\n            LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() \n                      + \" (\" + job.getJob().getJobID() + \")\");\n          }\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(stats);\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(stats);\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(stats);\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n        monitor.submissionFailed(stats);\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      try {\n        // pre-compute split information\n        try {\n          job.buildSplits(inputDir);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          monitor.add(job.call());\n          statistics.addJobStats(job.getJob(), job.getJobDesc());\n          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n              \" (\" + job.getJob().getJobID() + \")\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(job.getJob());\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(job.getJob());\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(job.getJob());\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n        monitor.submissionFailed(job.getJob());\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public void run() {\n      try {\n        // pre-compute split information\n        try {\n          job.buildSplits(inputDir);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          monitor.add(job.call());\n          statistics.addJobStats(job.getJob(), job.getJobDesc());\n          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n              \" (\" + job.getJob().getJobID() + \")\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(job.getJob());\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(job.getJob());\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(job.getJob());\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n        monitor.submissionFailed(job.getJob());\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java"
      }
    },
    "787dcfb8cd6e1f30a2a508b052e9d31f314b2169": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2596. [Gridmix] Summarize Gridmix runs. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1144403 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/07/11 10:53 AM",
      "commitName": "787dcfb8cd6e1f30a2a508b052e9d31f314b2169",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 25.83,
      "commitsBetweenForRepo": 81,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,54 +1,54 @@\n     public void run() {\n       try {\n         // pre-compute split information\n         try {\n           job.buildSplits(inputDir);\n         } catch (IOException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n           monitor.submissionFailed(job.getJob());\n           return;\n         } catch (Exception e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n           monitor.submissionFailed(job.getJob());\n           return;\n         }\n         // Sleep until deadline\n         long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n         while (nsDelay \u003e 0) {\n           TimeUnit.NANOSECONDS.sleep(nsDelay);\n           nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n         }\n         try {\n           // submit job\n           monitor.add(job.call());\n           statistics.addJobStats(job.getJob(), job.getJobDesc());\n           LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n               \" (\" + job.getJob().getJobID() + \")\");\n         } catch (IOException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                    + job.getUgi(), e);\n           if (e.getCause() instanceof ClosedByInterruptException) {\n             throw new InterruptedException(\"Failed to submit \" +\n                 job.getJob().getJobName());\n           }\n           monitor.submissionFailed(job.getJob());\n         } catch (ClassNotFoundException e) {\n           LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n           monitor.submissionFailed(job.getJob());\n         }\n       } catch (InterruptedException e) {\n         // abort execution, remove splits if nesc\n         // TODO release ThdLoc\n         GridmixJob.pullDescription(job.id());\n         Thread.currentThread().interrupt();\n         monitor.submissionFailed(job.getJob());\n       } catch(Exception e) {\n         //Due to some exception job wasnt submitted.\n-        LOG.info(\" Job \" + job.getJob() + \" submission failed \" , e);\n+        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n         monitor.submissionFailed(job.getJob());\n       } finally {\n         sem.release();\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        // pre-compute split information\n        try {\n          job.buildSplits(inputDir);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          monitor.add(job.call());\n          statistics.addJobStats(job.getJob(), job.getJobDesc());\n          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n              \" (\" + job.getJob().getJobID() + \")\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(job.getJob());\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(job.getJob());\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(job.getJob());\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob().getJobID() + \" submission failed \" , e);\n        monitor.submissionFailed(job.getJob());\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,54 @@\n+    public void run() {\n+      try {\n+        // pre-compute split information\n+        try {\n+          job.buildSplits(inputDir);\n+        } catch (IOException e) {\n+          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n+                   + job.getUgi(), e);\n+          monitor.submissionFailed(job.getJob());\n+          return;\n+        } catch (Exception e) {\n+          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n+                   + job.getUgi(), e);\n+          monitor.submissionFailed(job.getJob());\n+          return;\n+        }\n+        // Sleep until deadline\n+        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n+        while (nsDelay \u003e 0) {\n+          TimeUnit.NANOSECONDS.sleep(nsDelay);\n+          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n+        }\n+        try {\n+          // submit job\n+          monitor.add(job.call());\n+          statistics.addJobStats(job.getJob(), job.getJobDesc());\n+          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n+              \" (\" + job.getJob().getJobID() + \")\");\n+        } catch (IOException e) {\n+          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n+                   + job.getUgi(), e);\n+          if (e.getCause() instanceof ClosedByInterruptException) {\n+            throw new InterruptedException(\"Failed to submit \" +\n+                job.getJob().getJobName());\n+          }\n+          monitor.submissionFailed(job.getJob());\n+        } catch (ClassNotFoundException e) {\n+          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n+          monitor.submissionFailed(job.getJob());\n+        }\n+      } catch (InterruptedException e) {\n+        // abort execution, remove splits if nesc\n+        // TODO release ThdLoc\n+        GridmixJob.pullDescription(job.id());\n+        Thread.currentThread().interrupt();\n+        monitor.submissionFailed(job.getJob());\n+      } catch(Exception e) {\n+        //Due to some exception job wasnt submitted.\n+        LOG.info(\" Job \" + job.getJob() + \" submission failed \" , e);\n+        monitor.submissionFailed(job.getJob());\n+      } finally {\n+        sem.release();\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        // pre-compute split information\n        try {\n          job.buildSplits(inputDir);\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        } catch (Exception e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          monitor.submissionFailed(job.getJob());\n          return;\n        }\n        // Sleep until deadline\n        long nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        while (nsDelay \u003e 0) {\n          TimeUnit.NANOSECONDS.sleep(nsDelay);\n          nsDelay \u003d job.getDelay(TimeUnit.NANOSECONDS);\n        }\n        try {\n          // submit job\n          monitor.add(job.call());\n          statistics.addJobStats(job.getJob(), job.getJobDesc());\n          LOG.debug(\"SUBMIT \" + job + \"@\" + System.currentTimeMillis() +\n              \" (\" + job.getJob().getJobID() + \")\");\n        } catch (IOException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName() + \" as \" \n                   + job.getUgi(), e);\n          if (e.getCause() instanceof ClosedByInterruptException) {\n            throw new InterruptedException(\"Failed to submit \" +\n                job.getJob().getJobName());\n          }\n          monitor.submissionFailed(job.getJob());\n        } catch (ClassNotFoundException e) {\n          LOG.warn(\"Failed to submit \" + job.getJob().getJobName(), e);\n          monitor.submissionFailed(job.getJob());\n        }\n      } catch (InterruptedException e) {\n        // abort execution, remove splits if nesc\n        // TODO release ThdLoc\n        GridmixJob.pullDescription(job.id());\n        Thread.currentThread().interrupt();\n        monitor.submissionFailed(job.getJob());\n      } catch(Exception e) {\n        //Due to some exception job wasnt submitted.\n        LOG.info(\" Job \" + job.getJob() + \" submission failed \" , e);\n        monitor.submissionFailed(job.getJob());\n      } finally {\n        sem.release();\n      }\n    }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/JobSubmitter.java"
    }
  }
}