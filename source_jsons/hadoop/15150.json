{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageLoader.java",
  "functionName": "getFileStatusList",
  "functionId": "getFileStatusList___path-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
  "functionStartLine": 301,
  "functionEndLine": 319,
  "numCommitsSeen": 22,
  "timeTaken": 1543,
  "changeHistory": [
    "1f5b42ac4881b734c799bfb527884c0d117929bd",
    "ed6f32c54035f022604d650427cae0833bf8cfb6",
    "54c1daa580e1cceee541be86fc2b694fa1be26df"
  ],
  "changeHistoryShort": {
    "1f5b42ac4881b734c799bfb527884c0d117929bd": "Ymultichange(Yexceptionschange,Ybodychange)",
    "ed6f32c54035f022604d650427cae0833bf8cfb6": "Ybodychange",
    "54c1daa580e1cceee541be86fc2b694fa1be26df": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1f5b42ac4881b734c799bfb527884c0d117929bd": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
      "commitDate": "01/10/14 10:53 AM",
      "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n+  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path)\n+          throws IOException {\n     List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n-    long id \u003d getINodeId(path);\n-    FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n+    long id \u003d lookup(path);\n+    FsImageProto.INodeSection.INode inode \u003d fromINodeId(id);\n     if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n       if (!dirmap.containsKey(id)) {\n         // if the directory is empty, return empty list\n         return list;\n       }\n       long[] children \u003d dirmap.get(id);\n       for (long cid : children) {\n-        list.add(getFileStatus(inodes.get(cid), true));\n+        list.add(getFileStatus(fromINodeId(cid), true));\n       }\n     } else {\n       list.add(getFileStatus(inode, false));\n     }\n     return list;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path)\n          throws IOException {\n    List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n    long id \u003d lookup(path);\n    FsImageProto.INodeSection.INode inode \u003d fromINodeId(id);\n    if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n      if (!dirmap.containsKey(id)) {\n        // if the directory is empty, return empty list\n        return list;\n      }\n      long[] children \u003d dirmap.get(id);\n      for (long cid : children) {\n        list.add(getFileStatus(fromINodeId(cid), true));\n      }\n    } else {\n      list.add(getFileStatus(inode, false));\n    }\n    return list;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7158. Reduce the memory usage of WebImageViewer. Contributed by Haohui Mai.\n",
          "commitDate": "01/10/14 10:53 AM",
          "commitName": "1f5b42ac4881b734c799bfb527884c0d117929bd",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "29/09/14 10:27 PM",
          "commitNameOld": "bb84f1fccb18c6c7373851e05d2451d55e908242",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 1.52,
          "commitsBetweenForRepo": 22,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n+  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path)\n+          throws IOException {\n     List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n-    long id \u003d getINodeId(path);\n-    FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n+    long id \u003d lookup(path);\n+    FsImageProto.INodeSection.INode inode \u003d fromINodeId(id);\n     if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n       if (!dirmap.containsKey(id)) {\n         // if the directory is empty, return empty list\n         return list;\n       }\n       long[] children \u003d dirmap.get(id);\n       for (long cid : children) {\n-        list.add(getFileStatus(inodes.get(cid), true));\n+        list.add(getFileStatus(fromINodeId(cid), true));\n       }\n     } else {\n       list.add(getFileStatus(inode, false));\n     }\n     return list;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path)\n          throws IOException {\n    List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n    long id \u003d lookup(path);\n    FsImageProto.INodeSection.INode inode \u003d fromINodeId(id);\n    if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n      if (!dirmap.containsKey(id)) {\n        // if the directory is empty, return empty list\n        return list;\n      }\n      long[] children \u003d dirmap.get(id);\n      for (long cid : children) {\n        list.add(getFileStatus(fromINodeId(cid), true));\n      }\n    } else {\n      list.add(getFileStatus(inode, false));\n    }\n    return list;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
          "extendedDetails": {}
        }
      ]
    },
    "ed6f32c54035f022604d650427cae0833bf8cfb6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6240. WebImageViewer returns 404 if LISTSTATUS to an empty directory. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1593591 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/14 11:43 AM",
      "commitName": "ed6f32c54035f022604d650427cae0833bf8cfb6",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "24/04/14 10:55 PM",
      "commitNameOld": "bce5a92c54cf2fc6162383eac5af27a8b12b7b51",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 14.53,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,18 @@\n   private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n     List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n     long id \u003d getINodeId(path);\n     FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n     if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n+      if (!dirmap.containsKey(id)) {\n+        // if the directory is empty, return empty list\n+        return list;\n+      }\n       long[] children \u003d dirmap.get(id);\n       for (long cid : children) {\n         list.add(getFileStatus(inodes.get(cid), true));\n       }\n     } else {\n       list.add(getFileStatus(inode, false));\n     }\n     return list;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n    List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n    long id \u003d getINodeId(path);\n    FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n    if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n      if (!dirmap.containsKey(id)) {\n        // if the directory is empty, return empty list\n        return list;\n      }\n      long[] children \u003d dirmap.get(id);\n      for (long cid : children) {\n        list.add(getFileStatus(inodes.get(cid), true));\n      }\n    } else {\n      list.add(getFileStatus(inode, false));\n    }\n    return list;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java",
      "extendedDetails": {}
    },
    "54c1daa580e1cceee541be86fc2b694fa1be26df": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5978. Create a tool to take fsimage and expose read-only WebHDFS API. Contributed by Akira Ajisaka.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1582433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/03/14 11:15 AM",
      "commitName": "54c1daa580e1cceee541be86fc2b694fa1be26df",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,14 @@\n+  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n+    List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n+    long id \u003d getINodeId(path);\n+    FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n+    if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n+      long[] children \u003d dirmap.get(id);\n+      for (long cid : children) {\n+        list.add(getFileStatus(inodes.get(cid), true));\n+      }\n+    } else {\n+      list.add(getFileStatus(inode, false));\n+    }\n+    return list;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cMap\u003cString, Object\u003e\u003e getFileStatusList(String path) {\n    List\u003cMap\u003cString, Object\u003e\u003e list \u003d new ArrayList\u003cMap\u003cString, Object\u003e\u003e();\n    long id \u003d getINodeId(path);\n    FsImageProto.INodeSection.INode inode \u003d inodes.get(id);\n    if (inode.getType() \u003d\u003d FsImageProto.INodeSection.INode.Type.DIRECTORY) {\n      long[] children \u003d dirmap.get(id);\n      for (long cid : children) {\n        list.add(getFileStatus(inodes.get(cid), true));\n      }\n    } else {\n      list.add(getFileStatus(inode, false));\n    }\n    return list;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/FSImageLoader.java"
    }
  }
}