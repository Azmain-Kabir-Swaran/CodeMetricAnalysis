{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerPage.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
  "functionStartLine": 62,
  "functionEndLine": 91,
  "numCommitsSeen": 16,
  "timeTaken": 8039,
  "changeHistory": [
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "0aafc122d401a2f49d0f9ca556343f9ba871e979",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
    "81926396f69c36bc2420841d2b1fed69d78934ad",
    "b549c107825581b15fd14494099a943ff3213c6f",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "0aafc122d401a2f49d0f9ca556343f9ba871e979": "Ybodychange",
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Ybodychange",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": "Ybodychange",
    "81926396f69c36bc2420841d2b1fed69d78934ad": "Ybodychange",
    "b549c107825581b15fd14494099a943ff3213c6f": "Ybodychange",
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "04/11/16 7:31 AM",
      "commitNameOld": "0aafc122d401a2f49d0f9ca556343f9ba871e979",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 265.4,
      "commitsBetweenForRepo": 1434,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n-        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n+        html.p().__(\"Invalid containerId \" + $(CONTAINER_ID)).__();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n-                + \"please go back to the previous page and retry.\")._();\n+                + \"please go back to the previous page and retry.\").__();\n         return;\n       }\n       ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n \n       info(\"Container information\")\n-        ._(\"ContainerID\", info.getId())\n-        ._(\"ContainerState\", info.getState())\n-        ._(\"ExitStatus\", info.getExitStatus())\n-        ._(\"Diagnostics\", info.getDiagnostics())\n-        ._(\"User\", info.getUser())\n-        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n-        ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n-        ._(\"ExecutionType\", info.getExecutionType())\n-        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n-      html._(InfoBlock.class);\n+        .__(\"ContainerID\", info.getId())\n+        .__(\"ContainerState\", info.getState())\n+        .__(\"ExitStatus\", info.getExitStatus())\n+        .__(\"Diagnostics\", info.getDiagnostics())\n+        .__(\"User\", info.getUser())\n+        .__(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n+        .__(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n+        .__(\"ExecutionType\", info.getExecutionType())\n+        .__(\"logs\", info.getShortLogLink(), \"Link to logs\");\n+      html.__(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p().__(\"Invalid containerId \" + $(CONTAINER_ID)).__();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\").__();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        .__(\"ContainerID\", info.getId())\n        .__(\"ContainerState\", info.getState())\n        .__(\"ExitStatus\", info.getExitStatus())\n        .__(\"Diagnostics\", info.getDiagnostics())\n        .__(\"User\", info.getUser())\n        .__(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        .__(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n        .__(\"ExecutionType\", info.getExecutionType())\n        .__(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html.__(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "0aafc122d401a2f49d0f9ca556343f9ba871e979": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2995. Enhance UI to show cluster resource utilization of various container Execution types. (Konstantinos Karanasos via asuresh)\n",
      "commitDate": "04/11/16 7:31 AM",
      "commitName": "0aafc122d401a2f49d0f9ca556343f9ba871e979",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "14/06/16 3:06 PM",
      "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 142.68,
      "commitsBetweenForRepo": 1138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n       ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n \n       info(\"Container information\")\n         ._(\"ContainerID\", info.getId())\n         ._(\"ContainerState\", info.getState())\n         ._(\"ExitStatus\", info.getExitStatus())\n         ._(\"Diagnostics\", info.getDiagnostics())\n         ._(\"User\", info.getUser())\n         ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n         ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n+        ._(\"ExecutionType\", info.getExecutionType())\n         ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        ._(\"ContainerID\", info.getId())\n        ._(\"ContainerState\", info.getState())\n        ._(\"ExitStatus\", info.getExitStatus())\n        ._(\"Diagnostics\", info.getDiagnostics())\n        ._(\"User\", info.getUser())\n        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n        ._(\"ExecutionType\", info.getExecutionType())\n        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "24/06/14 12:34 PM",
      "commitNameOld": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 721.11,
      "commitsBetweenForRepo": 5675,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n-        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n+        containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n       ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n \n       info(\"Container information\")\n         ._(\"ContainerID\", info.getId())\n         ._(\"ContainerState\", info.getState())\n         ._(\"ExitStatus\", info.getExitStatus())\n         ._(\"Diagnostics\", info.getDiagnostics())\n         ._(\"User\", info.getUser())\n         ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n         ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n         ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ContainerId.fromString($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        ._(\"ContainerID\", info.getId())\n        ._(\"ContainerState\", info.getState())\n        ._(\"ExitStatus\", info.getExitStatus())\n        ._(\"Diagnostics\", info.getDiagnostics())\n        ._(\"User\", info.getUser())\n        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2072. RM/NM UIs and webservices are missing vcore information. (Nathan Roberts via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605162 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 12:34 PM",
      "commitName": "1f9a0fd927ab7bef13db42dd80368fd781b3d2d1",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 685.59,
      "commitsBetweenForRepo": 4274,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n       ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n \n       info(\"Container information\")\n         ._(\"ContainerID\", info.getId())\n         ._(\"ContainerState\", info.getState())\n         ._(\"ExitStatus\", info.getExitStatus())\n         ._(\"Diagnostics\", info.getDiagnostics())\n         ._(\"User\", info.getUser())\n         ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n+        ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n         ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        ._(\"ContainerID\", info.getId())\n        ._(\"ContainerState\", info.getState())\n        ._(\"ExitStatus\", info.getExitStatus())\n        ._(\"Diagnostics\", info.getDiagnostics())\n        ._(\"User\", info.getUser())\n        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        ._(\"TotalVCoresNeeded\", info.getVCoresNeeded())\n        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        ._(\"ContainerID\", info.getId())\n        ._(\"ContainerState\", info.getState())\n        ._(\"ExitStatus\", info.getExitStatus())\n        ._(\"Diagnostics\", info.getDiagnostics())\n        ._(\"User\", info.getUser())\n        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java"
      }
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 1:02 AM",
      "commitNameOld": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 40.63,
      "commitsBetweenForRepo": 202,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,28 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n-      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n-      int exitCode \u003d containerData.getExitStatus();\n-      String exiStatus \u003d \n-          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n-              \"N/A\" : String.valueOf(exitCode);\n+      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n+\n       info(\"Container information\")\n-        ._(\"ContainerID\", $(CONTAINER_ID))\n-        ._(\"ContainerState\", container.getContainerState())\n-        ._(\"ExitStatus\", exiStatus)\n-        ._(\"Diagnostics\", containerData.getDiagnostics())\n-        ._(\"User\", container.getUser())\n-        ._(\"TotalMemoryNeeded\",\n-            container.getLaunchContext().getResource().getMemory())\n-        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID), container.getUser()),\n-            \"Link to logs\");\n+        ._(\"ContainerID\", info.getId())\n+        ._(\"ContainerState\", info.getState())\n+        ._(\"ExitStatus\", info.getExitStatus())\n+        ._(\"Diagnostics\", info.getDiagnostics())\n+        ._(\"User\", info.getUser())\n+        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n+        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerInfo info \u003d new ContainerInfo(this.nmContext, container);\n\n      info(\"Container information\")\n        ._(\"ContainerID\", info.getId())\n        ._(\"ContainerState\", info.getState())\n        ._(\"ExitStatus\", info.getExitStatus())\n        ._(\"Diagnostics\", info.getDiagnostics())\n        ._(\"User\", info.getUser())\n        ._(\"TotalMemoryNeeded\", info.getMemoryNeeded())\n        ._(\"logs\", info.getShortLogLink(), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/10/11 10:21 PM",
      "commitNameOld": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 9.06,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n       } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n       ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n       int exitCode \u003d containerData.getExitStatus();\n       String exiStatus \u003d \n           (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n               \"N/A\" : String.valueOf(exitCode);\n       info(\"Container information\")\n         ._(\"ContainerID\", $(CONTAINER_ID))\n         ._(\"ContainerState\", container.getContainerState())\n         ._(\"ExitStatus\", exiStatus)\n         ._(\"Diagnostics\", containerData.getDiagnostics())\n         ._(\"User\", container.getUser())\n         ._(\"TotalMemoryNeeded\",\n             container.getLaunchContext().getResource().getMemory())\n-        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n+        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID), container.getUser()),\n+            \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      int exitCode \u003d containerData.getExitStatus();\n      String exiStatus \u003d \n          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n              \"N/A\" : String.valueOf(exitCode);\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", exiStatus)\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID), container.getUser()),\n            \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/11 10:21 PM",
      "commitName": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/09/11 1:45 PM",
      "commitNameOld": "81926396f69c36bc2420841d2b1fed69d78934ad",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 22.36,
      "commitsBetweenForRepo": 178,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n-      } catch (IOException e) {\n+      } catch (IllegalArgumentException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n       DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       if (container \u003d\u003d null) {\n         div.h1(\"Unknown Container. Container might have completed, \"\n                 + \"please go back to the previous page and retry.\")._();\n         return;\n       }\n       ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n       int exitCode \u003d containerData.getExitStatus();\n       String exiStatus \u003d \n           (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n               \"N/A\" : String.valueOf(exitCode);\n       info(\"Container information\")\n         ._(\"ContainerID\", $(CONTAINER_ID))\n         ._(\"ContainerState\", container.getContainerState())\n         ._(\"ExitStatus\", exiStatus)\n         ._(\"Diagnostics\", containerData.getDiagnostics())\n         ._(\"User\", container.getUser())\n         ._(\"TotalMemoryNeeded\",\n             container.getLaunchContext().getResource().getMemory())\n         ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IllegalArgumentException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      int exitCode \u003d containerData.getExitStatus();\n      String exiStatus \u003d \n          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n              \"N/A\" : String.valueOf(exitCode);\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", exiStatus)\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "81926396f69c36bc2420841d2b1fed69d78934ad": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2984. Better error message for displaying completed containers. Contributed by Devaraj K.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1176045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/09/11 1:45 PM",
      "commitName": "81926396f69c36bc2420841d2b1fed69d78934ad",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "23/09/11 7:07 AM",
      "commitNameOld": "b549c107825581b15fd14494099a943ff3213c6f",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 3.28,
      "commitsBetweenForRepo": 14,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,32 @@\n     protected void render(Block html) {\n       ContainerId containerID;\n       try {\n         containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n       } catch (IOException e) {\n         html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n         return;\n       }\n \n+      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n+      if (container \u003d\u003d null) {\n+        div.h1(\"Unknown Container. Container might have completed, \"\n+                + \"please go back to the previous page and retry.\")._();\n+        return;\n+      }\n       ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n       int exitCode \u003d containerData.getExitStatus();\n       String exiStatus \u003d \n           (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n               \"N/A\" : String.valueOf(exitCode);\n       info(\"Container information\")\n         ._(\"ContainerID\", $(CONTAINER_ID))\n         ._(\"ContainerState\", container.getContainerState())\n         ._(\"ExitStatus\", exiStatus)\n         ._(\"Diagnostics\", containerData.getDiagnostics())\n         ._(\"User\", container.getUser())\n         ._(\"TotalMemoryNeeded\",\n             container.getLaunchContext().getResource().getMemory())\n         ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IOException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      DIV\u003cHamlet\u003e div \u003d html.div(\"#content\");\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      if (container \u003d\u003d null) {\n        div.h1(\"Unknown Container. Container might have completed, \"\n                + \"please go back to the previous page and retry.\")._();\n        return;\n      }\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      int exitCode \u003d containerData.getExitStatus();\n      String exiStatus \u003d \n          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n              \"N/A\" : String.valueOf(exitCode);\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", exiStatus)\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "b549c107825581b15fd14494099a943ff3213c6f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3055. Simplified ApplicationAttemptId passing to ApplicationMaster via environment variable. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1174785 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/09/11 7:07 AM",
      "commitName": "b549c107825581b15fd14494099a943ff3213c6f",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/09/11 5:05 PM",
      "commitNameOld": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 10.58,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,26 @@\n     protected void render(Block html) {\n-      ContainerId containerID \u003d\n-        ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n+      ContainerId containerID;\n+      try {\n+        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n+      } catch (IOException e) {\n+        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n+        return;\n+      }\n+\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n       int exitCode \u003d containerData.getExitStatus();\n       String exiStatus \u003d \n           (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n               \"N/A\" : String.valueOf(exitCode);\n       info(\"Container information\")\n         ._(\"ContainerID\", $(CONTAINER_ID))\n         ._(\"ContainerState\", container.getContainerState())\n         ._(\"ExitStatus\", exiStatus)\n         ._(\"Diagnostics\", containerData.getDiagnostics())\n         ._(\"User\", container.getUser())\n         ._(\"TotalMemoryNeeded\",\n             container.getLaunchContext().getResource().getMemory())\n         ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID;\n      try {\n        containerID \u003d ConverterUtils.toContainerId($(CONTAINER_ID));\n      } catch (IOException e) {\n        html.p()._(\"Invalid containerId \" + $(CONTAINER_ID))._();\n        return;\n      }\n\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      int exitCode \u003d containerData.getExitStatus();\n      String exiStatus \u003d \n          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n              \"N/A\" : String.valueOf(exitCode);\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", exiStatus)\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2896. Simplify all apis to in org.apache.hadoop.yarn.api.records.* to be get/set only. Added javadocs to all public records.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169980 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 5:05 PM",
      "commitName": "6165875dc6bf67d72fc3ce1d96dfc80ba312d4a1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 18.99,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,20 @@\n     protected void render(Block html) {\n       ContainerId containerID \u003d\n         ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n       Container container \u003d this.nmContext.getContainers().get(containerID);\n       ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n+      int exitCode \u003d containerData.getExitStatus();\n+      String exiStatus \u003d \n+          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n+              \"N/A\" : String.valueOf(exitCode);\n       info(\"Container information\")\n         ._(\"ContainerID\", $(CONTAINER_ID))\n         ._(\"ContainerState\", container.getContainerState())\n-        ._(\"ExitStatus\", containerData.getExitStatus())\n+        ._(\"ExitStatus\", exiStatus)\n         ._(\"Diagnostics\", containerData.getDiagnostics())\n         ._(\"User\", container.getUser())\n         ._(\"TotalMemoryNeeded\",\n             container.getLaunchContext().getResource().getMemory())\n         ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n       html._(InfoBlock.class);\n     }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID \u003d\n        ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      int exitCode \u003d containerData.getExitStatus();\n      String exiStatus \u003d \n          (exitCode \u003d\u003d YarnConfiguration.INVALID_CONTAINER_EXIT_STATUS) ? \n              \"N/A\" : String.valueOf(exitCode);\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", exiStatus)\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID \u003d\n        ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", containerData.getExitStatus())\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,16 @@\n+    protected void render(Block html) {\n+      ContainerId containerID \u003d\n+        ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n+      Container container \u003d this.nmContext.getContainers().get(containerID);\n+      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n+      info(\"Container information\")\n+        ._(\"ContainerID\", $(CONTAINER_ID))\n+        ._(\"ContainerState\", container.getContainerState())\n+        ._(\"ExitStatus\", containerData.getExitStatus())\n+        ._(\"Diagnostics\", containerData.getDiagnostics())\n+        ._(\"User\", container.getUser())\n+        ._(\"TotalMemoryNeeded\",\n+            container.getLaunchContext().getResource().getMemory())\n+        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n+      html._(InfoBlock.class);\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    protected void render(Block html) {\n      ContainerId containerID \u003d\n        ConverterUtils.toContainerId(this.recordFactory, $(CONTAINER_ID));\n      Container container \u003d this.nmContext.getContainers().get(containerID);\n      ContainerStatus containerData \u003d container.cloneAndGetContainerStatus();\n      info(\"Container information\")\n        ._(\"ContainerID\", $(CONTAINER_ID))\n        ._(\"ContainerState\", container.getContainerState())\n        ._(\"ExitStatus\", containerData.getExitStatus())\n        ._(\"Diagnostics\", containerData.getDiagnostics())\n        ._(\"User\", container.getUser())\n        ._(\"TotalMemoryNeeded\",\n            container.getLaunchContext().getResource().getMemory())\n        ._(\"logs\", ujoin(\"containerlogs\", $(CONTAINER_ID)), \"Link to logs\");\n      html._(InfoBlock.class);\n    }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/webapp/ContainerPage.java"
    }
  }
}