{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TypeConverter.java",
  "functionName": "fromYarn",
  "functionId": "fromYarn___report-org.apache.hadoop.mapreduce.v2.api.records.TaskReport",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java",
  "functionStartLine": 424,
  "functionEndLine": 451,
  "numCommitsSeen": 34,
  "timeTaken": 7297,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static TaskReport fromYarn(org.apache.hadoop.mapreduce.v2.api.records.TaskReport report) {\n    String[] diagnostics \u003d null;\n    if (report.getDiagnosticsList() !\u003d null) {\n      diagnostics \u003d new String[report.getDiagnosticsCount()];\n      int i \u003d 0;\n      for (String cs : report.getDiagnosticsList()) {\n        diagnostics[i++] \u003d cs.toString();\n      }\n    } else {\n      diagnostics \u003d new String[0];\n    }\n    \n    TaskReport rep \u003d new TaskReport(fromYarn(report.getTaskId()), \n        report.getProgress(), report.getTaskState().toString(),\n      diagnostics, fromYarn(report.getTaskState()), report.getStartTime(), report.getFinishTime(),\n      fromYarn(report.getCounters()));\n    List\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e runningAtts \n          \u003d new ArrayList\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e();\n    for (org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId id \n        : report.getRunningAttemptsList()) {\n      runningAtts.add(fromYarn(id));\n    }\n    rep.setRunningTaskAttemptIds(runningAtts);\n    if (report.getSuccessfulAttempt() !\u003d null) {\n      rep.setSuccessfulAttemptId(fromYarn(report.getSuccessfulAttempt()));\n    }\n    return rep;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  public static TaskReport fromYarn(org.apache.hadoop.mapreduce.v2.api.records.TaskReport report) {\n+    String[] diagnostics \u003d null;\n+    if (report.getDiagnosticsList() !\u003d null) {\n+      diagnostics \u003d new String[report.getDiagnosticsCount()];\n+      int i \u003d 0;\n+      for (String cs : report.getDiagnosticsList()) {\n+        diagnostics[i++] \u003d cs.toString();\n+      }\n+    } else {\n+      diagnostics \u003d new String[0];\n+    }\n+    \n+    TaskReport rep \u003d new TaskReport(fromYarn(report.getTaskId()), \n+        report.getProgress(), report.getTaskState().toString(),\n+      diagnostics, fromYarn(report.getTaskState()), report.getStartTime(), report.getFinishTime(),\n+      fromYarn(report.getCounters()));\n+    List\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e runningAtts \n+          \u003d new ArrayList\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e();\n+    for (org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId id \n+        : report.getRunningAttemptsList()) {\n+      runningAtts.add(fromYarn(id));\n+    }\n+    rep.setRunningTaskAttemptIds(runningAtts);\n+    if (report.getSuccessfulAttempt() !\u003d null) {\n+      rep.setSuccessfulAttemptId(fromYarn(report.getSuccessfulAttempt()));\n+    }\n+    return rep;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static TaskReport fromYarn(org.apache.hadoop.mapreduce.v2.api.records.TaskReport report) {\n    String[] diagnostics \u003d null;\n    if (report.getDiagnosticsList() !\u003d null) {\n      diagnostics \u003d new String[report.getDiagnosticsCount()];\n      int i \u003d 0;\n      for (String cs : report.getDiagnosticsList()) {\n        diagnostics[i++] \u003d cs.toString();\n      }\n    } else {\n      diagnostics \u003d new String[0];\n    }\n    \n    TaskReport rep \u003d new TaskReport(fromYarn(report.getTaskId()), \n        report.getProgress(), report.getTaskState().toString(),\n      diagnostics, fromYarn(report.getTaskState()), report.getStartTime(), report.getFinishTime(),\n      fromYarn(report.getCounters()));\n    List\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e runningAtts \n          \u003d new ArrayList\u003corg.apache.hadoop.mapreduce.TaskAttemptID\u003e();\n    for (org.apache.hadoop.mapreduce.v2.api.records.TaskAttemptId id \n        : report.getRunningAttemptsList()) {\n      runningAtts.add(fromYarn(id));\n    }\n    rep.setRunningTaskAttemptIds(runningAtts);\n    if (report.getSuccessfulAttempt() !\u003d null) {\n      rep.setSuccessfulAttemptId(fromYarn(report.getSuccessfulAttempt()));\n    }\n    return rep;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/TypeConverter.java"
    }
  }
}