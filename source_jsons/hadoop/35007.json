{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractNodeDescriptorsProvider.java",
  "functionName": "serviceStart",
  "functionId": "serviceStart",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeDescriptorsProvider.java",
  "functionStartLine": 82,
  "functionEndLine": 94,
  "numCommitsSeen": 4,
  "timeTaken": 2461,
  "changeHistory": [
    "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3",
    "77666105b4557d5706e5844a4ca286917d966c5f",
    "fc07464d1a48b0413da5e921614430e41263fdb7"
  ],
  "changeHistoryShort": {
    "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3": "Ymultichange(Ymovefromfile,Ybodychange)",
    "77666105b4557d5706e5844a4ca286917d966c5f": "Ybodychange",
    "fc07464d1a48b0413da5e921614430e41263fdb7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-7757. Refactor NodeLabelsProvider to be more generic and reusable for node attributes providers. Contributed by Weiwei Yang.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-7757. Refactor NodeLabelsProvider to be more generic and reusable for node attributes providers. Contributed by Weiwei Yang.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "4458b2772f481259453ab5472a476bdebb8c835b",
          "commitAuthorOld": "bibinchundatt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   protected void serviceStart() throws Exception {\n     timerTask \u003d createTimerTask();\n     timerTask.run();\n-    if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n-      nodeLabelsScheduler \u003d\n-          new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n+    long taskInterval \u003d getIntervalTime();\n+    if (taskInterval !\u003d DISABLE_NODE_DESCRIPTORS_PROVIDER_FETCH_TIMER) {\n+      scheduler \u003d\n+          new Timer(\"DistributedNodeDescriptorsRunner-Timer\", true);\n       // Start the timer task and then periodically at the configured interval\n       // time. Illegal values for intervalTime is handled by timer api\n-      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, intervalTime,\n-          intervalTime);\n+      scheduler.schedule(timerTask, taskInterval, taskInterval);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    timerTask \u003d createTimerTask();\n    timerTask.run();\n    long taskInterval \u003d getIntervalTime();\n    if (taskInterval !\u003d DISABLE_NODE_DESCRIPTORS_PROVIDER_FETCH_TIMER) {\n      scheduler \u003d\n          new Timer(\"DistributedNodeDescriptorsRunner-Timer\", true);\n      // Start the timer task and then periodically at the configured interval\n      // time. Illegal values for intervalTime is handled by timer api\n      scheduler.schedule(timerTask, taskInterval, taskInterval);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeDescriptorsProvider.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeLabelsProvider.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeDescriptorsProvider.java",
            "oldMethodName": "serviceStart",
            "newMethodName": "serviceStart"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7757. Refactor NodeLabelsProvider to be more generic and reusable for node attributes providers. Contributed by Weiwei Yang.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "d312b5cf9ffff016432ec5a7e64b81ab7a8c31f3",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "4458b2772f481259453ab5472a476bdebb8c835b",
          "commitAuthorOld": "bibinchundatt",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n   protected void serviceStart() throws Exception {\n     timerTask \u003d createTimerTask();\n     timerTask.run();\n-    if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n-      nodeLabelsScheduler \u003d\n-          new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n+    long taskInterval \u003d getIntervalTime();\n+    if (taskInterval !\u003d DISABLE_NODE_DESCRIPTORS_PROVIDER_FETCH_TIMER) {\n+      scheduler \u003d\n+          new Timer(\"DistributedNodeDescriptorsRunner-Timer\", true);\n       // Start the timer task and then periodically at the configured interval\n       // time. Illegal values for intervalTime is handled by timer api\n-      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, intervalTime,\n-          intervalTime);\n+      scheduler.schedule(timerTask, taskInterval, taskInterval);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected void serviceStart() throws Exception {\n    timerTask \u003d createTimerTask();\n    timerTask.run();\n    long taskInterval \u003d getIntervalTime();\n    if (taskInterval !\u003d DISABLE_NODE_DESCRIPTORS_PROVIDER_FETCH_TIMER) {\n      scheduler \u003d\n          new Timer(\"DistributedNodeDescriptorsRunner-Timer\", true);\n      // Start the timer task and then periodically at the configured interval\n      // time. Illegal values for intervalTime is handled by timer api\n      scheduler.schedule(timerTask, taskInterval, taskInterval);\n    }\n    super.serviceStart();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeDescriptorsProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "77666105b4557d5706e5844a4ca286917d966c5f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4106. NodeLabels for NM in distributed mode is not updated even after clusterNodelabel addition in RM. (Bibin A Chundatt via wangda)\n",
      "commitDate": "10/09/15 9:30 AM",
      "commitName": "77666105b4557d5706e5844a4ca286917d966c5f",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "20/08/15 11:51 AM",
      "commitNameOld": "fc07464d1a48b0413da5e921614430e41263fdb7",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 20.9,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   protected void serviceStart() throws Exception {\n     timerTask \u003d createTimerTask();\n+    timerTask.run();\n     if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n       nodeLabelsScheduler \u003d\n           new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n       // Start the timer task and then periodically at the configured interval\n       // time. Illegal values for intervalTime is handled by timer api\n-      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, startTime,\n+      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, intervalTime,\n           intervalTime);\n     }\n     super.serviceStart();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    timerTask \u003d createTimerTask();\n    timerTask.run();\n    if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n      nodeLabelsScheduler \u003d\n          new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n      // Start the timer task and then periodically at the configured interval\n      // time. Illegal values for intervalTime is handled by timer api\n      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, intervalTime,\n          intervalTime);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeLabelsProvider.java",
      "extendedDetails": {}
    },
    "fc07464d1a48b0413da5e921614430e41263fdb7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2923. Support configuration based NodeLabelsProvider Service in Distributed Node Label Configuration Setup. (Naganarasimha G R)\n",
      "commitDate": "20/08/15 11:51 AM",
      "commitName": "fc07464d1a48b0413da5e921614430e41263fdb7",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,12 @@\n+  protected void serviceStart() throws Exception {\n+    timerTask \u003d createTimerTask();\n+    if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n+      nodeLabelsScheduler \u003d\n+          new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n+      // Start the timer task and then periodically at the configured interval\n+      // time. Illegal values for intervalTime is handled by timer api\n+      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, startTime,\n+          intervalTime);\n+    }\n+    super.serviceStart();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void serviceStart() throws Exception {\n    timerTask \u003d createTimerTask();\n    if (intervalTime !\u003d DISABLE_NODE_LABELS_PROVIDER_FETCH_TIMER) {\n      nodeLabelsScheduler \u003d\n          new Timer(\"DistributedNodeLabelsRunner-Timer\", true);\n      // Start the timer task and then periodically at the configured interval\n      // time. Illegal values for intervalTime is handled by timer api\n      nodeLabelsScheduler.scheduleAtFixedRate(timerTask, startTime,\n          intervalTime);\n    }\n    super.serviceStart();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/nodelabels/AbstractNodeLabelsProvider.java"
    }
  }
}