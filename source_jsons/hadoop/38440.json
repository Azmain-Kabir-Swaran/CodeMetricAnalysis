{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeAttributesManagerImpl.java",
  "functionName": "getAttributesToNodes",
  "functionId": "getAttributesToNodes___attributes-Set__NodeAttributeKey__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
  "functionStartLine": 403,
  "functionEndLine": 422,
  "numCommitsSeen": 24,
  "timeTaken": 3700,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
    "0a01b1350d69dacaf101d52e54f67c91e28ab1ee"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "0a01b1350d69dacaf101d52e54f67c91e28ab1ee": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n       Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n       Set\u003cNodeAttributeKey\u003e attributes) {\n+    readLock.lock();\n     try {\n-      readLock.lock();\n       boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n       Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n           new HashMap\u003c\u003e();\n       for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n           clusterAttributes.entrySet()) {\n         if (fetchAllAttributes\n             || attributes.contains(attributeEntry.getKey())) {\n           attributesToNodes.put(attributeEntry.getKey(),\n               attributeEntry.getValue().getAssociatedNodeIds());\n         }\n       }\n       return attributesToNodes;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "      Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n      Set\u003cNodeAttributeKey\u003e attributes) {\n    readLock.lock();\n    try {\n      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n          new HashMap\u003c\u003e();\n      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n          clusterAttributes.entrySet()) {\n        if (fetchAllAttributes\n            || attributes.contains(attributeEntry.getKey())) {\n          attributesToNodes.put(attributeEntry.getKey(),\n              attributeEntry.getValue().getAssociatedNodeIds());\n        }\n      }\n      return attributesToNodes;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
      "extendedDetails": {}
    },
    "8cf6a9a2bde9d4ccad95a514885634792889ec7f": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthor": "bibinchundatt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  public Map\u003cNodeAttribute, Set\u003cString\u003e\u003e getAttributesToNodes(\n-      Set\u003cNodeAttribute\u003e attributes) {\n+  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n+      Set\u003cNodeAttributeKey\u003e attributes) {\n     try {\n       readLock.lock();\n       boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n-      Map\u003cNodeAttribute, Set\u003cString\u003e\u003e attributesToNodes \u003d new HashMap\u003c\u003e();\n-      for (Entry\u003cNodeAttribute, RMNodeAttribute\u003e attributeEntry :\n+      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n+          new HashMap\u003c\u003e();\n+      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n           clusterAttributes.entrySet()) {\n-        if (fetchAllAttributes || attributes\n-            .contains(attributeEntry.getKey())) {\n+        if (fetchAllAttributes\n+            || attributes.contains(attributeEntry.getKey())) {\n           attributesToNodes.put(attributeEntry.getKey(),\n               attributeEntry.getValue().getAssociatedNodeIds());\n         }\n       }\n       return attributesToNodes;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n      Set\u003cNodeAttributeKey\u003e attributes) {\n    try {\n      readLock.lock();\n      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n          new HashMap\u003c\u003e();\n      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n          clusterAttributes.entrySet()) {\n        if (fetchAllAttributes\n            || attributes.contains(attributeEntry.getKey())) {\n          attributesToNodes.put(attributeEntry.getKey(),\n              attributeEntry.getValue().getAssociatedNodeIds());\n        }\n      }\n      return attributesToNodes;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[attributes-Set\u003cNodeAttribute\u003e]",
            "newValue": "[attributes-Set\u003cNodeAttributeKey\u003e]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  public Map\u003cNodeAttribute, Set\u003cString\u003e\u003e getAttributesToNodes(\n-      Set\u003cNodeAttribute\u003e attributes) {\n+  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n+      Set\u003cNodeAttributeKey\u003e attributes) {\n     try {\n       readLock.lock();\n       boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n-      Map\u003cNodeAttribute, Set\u003cString\u003e\u003e attributesToNodes \u003d new HashMap\u003c\u003e();\n-      for (Entry\u003cNodeAttribute, RMNodeAttribute\u003e attributeEntry :\n+      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n+          new HashMap\u003c\u003e();\n+      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n           clusterAttributes.entrySet()) {\n-        if (fetchAllAttributes || attributes\n-            .contains(attributeEntry.getKey())) {\n+        if (fetchAllAttributes\n+            || attributes.contains(attributeEntry.getKey())) {\n           attributesToNodes.put(attributeEntry.getKey(),\n               attributeEntry.getValue().getAssociatedNodeIds());\n         }\n       }\n       return attributesToNodes;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n      Set\u003cNodeAttributeKey\u003e attributes) {\n    try {\n      readLock.lock();\n      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n          new HashMap\u003c\u003e();\n      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n          clusterAttributes.entrySet()) {\n        if (fetchAllAttributes\n            || attributes.contains(attributeEntry.getKey())) {\n          attributesToNodes.put(attributeEntry.getKey(),\n              attributeEntry.getValue().getAssociatedNodeIds());\n        }\n      }\n      return attributesToNodes;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
          "extendedDetails": {
            "oldValue": "Map\u003cNodeAttribute,Set\u003cString\u003e\u003e",
            "newValue": "Map\u003cNodeAttributeKey,Map\u003cString,AttributeValue\u003e\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7892. Revisit NodeAttribute class structure. Contributed by  Naganarasimha G R.\n",
          "commitDate": "12/09/18 3:31 AM",
          "commitName": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "12/09/18 3:31 AM",
          "commitNameOld": "5dc7d6e0f3f46277f0615d61755970a7aa28b8d7",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,20 @@\n-  public Map\u003cNodeAttribute, Set\u003cString\u003e\u003e getAttributesToNodes(\n-      Set\u003cNodeAttribute\u003e attributes) {\n+  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n+      Set\u003cNodeAttributeKey\u003e attributes) {\n     try {\n       readLock.lock();\n       boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n-      Map\u003cNodeAttribute, Set\u003cString\u003e\u003e attributesToNodes \u003d new HashMap\u003c\u003e();\n-      for (Entry\u003cNodeAttribute, RMNodeAttribute\u003e attributeEntry :\n+      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n+          new HashMap\u003c\u003e();\n+      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n           clusterAttributes.entrySet()) {\n-        if (fetchAllAttributes || attributes\n-            .contains(attributeEntry.getKey())) {\n+        if (fetchAllAttributes\n+            || attributes.contains(attributeEntry.getKey())) {\n           attributesToNodes.put(attributeEntry.getKey(),\n               attributeEntry.getValue().getAssociatedNodeIds());\n         }\n       }\n       return attributesToNodes;\n     } finally {\n       readLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e getAttributesToNodes(\n      Set\u003cNodeAttributeKey\u003e attributes) {\n    try {\n      readLock.lock();\n      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n      Map\u003cNodeAttributeKey, Map\u003cString, AttributeValue\u003e\u003e attributesToNodes \u003d\n          new HashMap\u003c\u003e();\n      for (Entry\u003cNodeAttributeKey, RMNodeAttribute\u003e attributeEntry :\n          clusterAttributes.entrySet()) {\n        if (fetchAllAttributes\n            || attributes.contains(attributeEntry.getKey())) {\n          attributesToNodes.put(attributeEntry.getKey(),\n              attributeEntry.getValue().getAssociatedNodeIds());\n        }\n      }\n      return attributesToNodes;\n    } finally {\n      readLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a01b1350d69dacaf101d52e54f67c91e28ab1ee": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8100. Support API interface to query cluster attributes and attribute to nodes. Contributed by Bibin A Chundatt.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "0a01b1350d69dacaf101d52e54f67c91e28ab1ee",
      "commitAuthor": "Naganarasimha",
      "diff": "@@ -0,0 +1,19 @@\n+  public Map\u003cNodeAttribute, Set\u003cString\u003e\u003e getAttributesToNodes(\n+      Set\u003cNodeAttribute\u003e attributes) {\n+    try {\n+      readLock.lock();\n+      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n+      Map\u003cNodeAttribute, Set\u003cString\u003e\u003e attributesToNodes \u003d new HashMap\u003c\u003e();\n+      for (Entry\u003cNodeAttribute, RMNodeAttribute\u003e attributeEntry :\n+          clusterAttributes.entrySet()) {\n+        if (fetchAllAttributes || attributes\n+            .contains(attributeEntry.getKey())) {\n+          attributesToNodes.put(attributeEntry.getKey(),\n+              attributeEntry.getValue().getAssociatedNodeIds());\n+        }\n+      }\n+      return attributesToNodes;\n+    } finally {\n+      readLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Map\u003cNodeAttribute, Set\u003cString\u003e\u003e getAttributesToNodes(\n      Set\u003cNodeAttribute\u003e attributes) {\n    try {\n      readLock.lock();\n      boolean fetchAllAttributes \u003d (attributes \u003d\u003d null || attributes.isEmpty());\n      Map\u003cNodeAttribute, Set\u003cString\u003e\u003e attributesToNodes \u003d new HashMap\u003c\u003e();\n      for (Entry\u003cNodeAttribute, RMNodeAttribute\u003e attributeEntry :\n          clusterAttributes.entrySet()) {\n        if (fetchAllAttributes || attributes\n            .contains(attributeEntry.getKey())) {\n          attributesToNodes.put(attributeEntry.getKey(),\n              attributeEntry.getValue().getAssociatedNodeIds());\n        }\n      }\n      return attributesToNodes;\n    } finally {\n      readLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/nodelabels/NodeAttributesManagerImpl.java"
    }
  }
}