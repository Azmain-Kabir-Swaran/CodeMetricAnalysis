{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Job.java",
  "functionName": "setSharedCacheUploadPolicies",
  "functionId": "setSharedCacheUploadPolicies___conf-Configuration__policies-Map__String,Boolean____areFiles-boolean",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java",
  "functionStartLine": 1451,
  "functionEndLine": 1473,
  "numCommitsSeen": 39,
  "timeTaken": 1616,
  "changeHistory": [
    "e46d5bb962b0c942f993afc505b165b1cd96e51b"
  ],
  "changeHistoryShort": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e46d5bb962b0c942f993afc505b165b1cd96e51b": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5951. Add support for the YARN Shared Cache.\n",
      "commitDate": "12/10/17 10:59 AM",
      "commitName": "e46d5bb962b0c942f993afc505b165b1cd96e51b",
      "commitAuthor": "Chris Trezzo",
      "diff": "@@ -0,0 +1,23 @@\n+  private static void setSharedCacheUploadPolicies(Configuration conf,\n+      Map\u003cString, Boolean\u003e policies, boolean areFiles) {\n+    if (policies !\u003d null) {\n+      StringBuilder sb \u003d new StringBuilder();\n+      Iterator\u003cMap.Entry\u003cString, Boolean\u003e\u003e it \u003d policies.entrySet().iterator();\n+      Map.Entry\u003cString, Boolean\u003e e;\n+      if (it.hasNext()) {\n+        e \u003d it.next();\n+        sb.append(e.getKey() + DELIM + e.getValue());\n+      } else {\n+        // policies is an empty map, just skip setting the parameter\n+        return;\n+      }\n+      while (it.hasNext()) {\n+        e \u003d it.next();\n+        sb.append(\",\" + e.getKey() + DELIM + e.getValue());\n+      }\n+      String confParam \u003d\n+          areFiles ? MRJobConfig.CACHE_FILES_SHARED_CACHE_UPLOAD_POLICIES\n+              : MRJobConfig.CACHE_ARCHIVES_SHARED_CACHE_UPLOAD_POLICIES;\n+      conf.set(confParam, sb.toString());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void setSharedCacheUploadPolicies(Configuration conf,\n      Map\u003cString, Boolean\u003e policies, boolean areFiles) {\n    if (policies !\u003d null) {\n      StringBuilder sb \u003d new StringBuilder();\n      Iterator\u003cMap.Entry\u003cString, Boolean\u003e\u003e it \u003d policies.entrySet().iterator();\n      Map.Entry\u003cString, Boolean\u003e e;\n      if (it.hasNext()) {\n        e \u003d it.next();\n        sb.append(e.getKey() + DELIM + e.getValue());\n      } else {\n        // policies is an empty map, just skip setting the parameter\n        return;\n      }\n      while (it.hasNext()) {\n        e \u003d it.next();\n        sb.append(\",\" + e.getKey() + DELIM + e.getValue());\n      }\n      String confParam \u003d\n          areFiles ? MRJobConfig.CACHE_FILES_SHARED_CACHE_UPLOAD_POLICIES\n              : MRJobConfig.CACHE_ARCHIVES_SHARED_CACHE_UPLOAD_POLICIES;\n      conf.set(confParam, sb.toString());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/Job.java"
    }
  }
}