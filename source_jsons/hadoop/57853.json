{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WebAppUtils.java",
  "functionName": "getResolvedAddress",
  "functionId": "getResolvedAddress___address-InetSocketAddress",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
  "functionStartLine": 294,
  "functionEndLine": 312,
  "numCommitsSeen": 29,
  "timeTaken": 1230,
  "changeHistory": [
    "9b5636408005676ae580f8d929f8e912c27828e7",
    "4224e613409ec97ff52ba28a7cedfe0485577257"
  ],
  "changeHistoryShort": {
    "9b5636408005676ae580f8d929f8e912c27828e7": "Ymodifierchange",
    "4224e613409ec97ff52ba28a7cedfe0485577257": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9b5636408005676ae580f8d929f8e912c27828e7": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-3039. Implemented the app-level timeline aggregator discovery service. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "19/06/16 5:44 PM",
      "commitNameOld": "d0162f2040a4d98fbac51527dfc9447888cb32ab",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 20.63,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  private static String getResolvedAddress(InetSocketAddress address) {\n+  public static String getResolvedAddress(InetSocketAddress address) {\n     address \u003d NetUtils.getConnectAddress(address);\n     StringBuilder sb \u003d new StringBuilder();\n     InetAddress resolved \u003d address.getAddress();\n     if (resolved \u003d\u003d null || resolved.isAnyLocalAddress() ||\n         resolved.isLoopbackAddress()) {\n       String lh \u003d address.getHostName();\n       try {\n         lh \u003d InetAddress.getLocalHost().getCanonicalHostName();\n       } catch (UnknownHostException e) {\n         //Ignore and fallback.\n       }\n       sb.append(lh);\n     } else {\n       sb.append(address.getHostName());\n     }\n     sb.append(\":\").append(address.getPort());\n     return sb.toString();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getResolvedAddress(InetSocketAddress address) {\n    address \u003d NetUtils.getConnectAddress(address);\n    StringBuilder sb \u003d new StringBuilder();\n    InetAddress resolved \u003d address.getAddress();\n    if (resolved \u003d\u003d null || resolved.isAnyLocalAddress() ||\n        resolved.isLoopbackAddress()) {\n      String lh \u003d address.getHostName();\n      try {\n        lh \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      } catch (UnknownHostException e) {\n        //Ignore and fallback.\n      }\n      sb.append(lh);\n    } else {\n      sb.append(address.getHostName());\n    }\n    sb.append(\":\").append(address.getPort());\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[public, static]"
      }
    },
    "4224e613409ec97ff52ba28a7cedfe0485577257": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1811. Fixed AMFilters in YARN to correctly accept requests from either web-app proxy or the RMs when HA is enabled. Contributed by Robert Kanter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 9:20 PM",
      "commitName": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  private static String getResolvedAddress(InetSocketAddress address) {\n+    address \u003d NetUtils.getConnectAddress(address);\n+    StringBuilder sb \u003d new StringBuilder();\n+    InetAddress resolved \u003d address.getAddress();\n+    if (resolved \u003d\u003d null || resolved.isAnyLocalAddress() ||\n+        resolved.isLoopbackAddress()) {\n+      String lh \u003d address.getHostName();\n+      try {\n+        lh \u003d InetAddress.getLocalHost().getCanonicalHostName();\n+      } catch (UnknownHostException e) {\n+        //Ignore and fallback.\n+      }\n+      sb.append(lh);\n+    } else {\n+      sb.append(address.getHostName());\n+    }\n+    sb.append(\":\").append(address.getPort());\n+    return sb.toString();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getResolvedAddress(InetSocketAddress address) {\n    address \u003d NetUtils.getConnectAddress(address);\n    StringBuilder sb \u003d new StringBuilder();\n    InetAddress resolved \u003d address.getAddress();\n    if (resolved \u003d\u003d null || resolved.isAnyLocalAddress() ||\n        resolved.isLoopbackAddress()) {\n      String lh \u003d address.getHostName();\n      try {\n        lh \u003d InetAddress.getLocalHost().getCanonicalHostName();\n      } catch (UnknownHostException e) {\n        //Ignore and fallback.\n      }\n      sb.append(lh);\n    } else {\n      sb.append(address.getHostName());\n    }\n    sb.append(\":\").append(address.getPort());\n    return sb.toString();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/webapp/util/WebAppUtils.java"
    }
  }
}