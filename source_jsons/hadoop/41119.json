{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DominantResourceFairnessPolicy.java",
  "functionName": "initialize",
  "functionId": "initialize___fsContext-FSContext",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
  "functionStartLine": 121,
  "functionEndLine": 124,
  "numCommitsSeen": 35,
  "timeTaken": 2779,
  "changeHistory": [
    "9711b78998ca3a1f7734058a78c7baddd130ce0f",
    "b10e962224a8ae1c6031a05322b0cc5e564bd078",
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650"
  ],
  "changeHistoryShort": {
    "9711b78998ca3a1f7734058a78c7baddd130ce0f": "Ybodychange",
    "b10e962224a8ae1c6031a05322b0cc5e564bd078": "Ymultichange(Yparameterchange,Ybodychange)",
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc": "Ybodychange",
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9711b78998ca3a1f7734058a78c7baddd130ce0f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7374. Improve performance of DRF comparisons for resource types in fair scheduler\n",
      "commitDate": "29/10/17 6:54 PM",
      "commitName": "9711b78998ca3a1f7734058a78c7baddd130ce0f",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "14/09/17 11:23 AM",
      "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 45.31,
      "commitsBetweenForRepo": 334,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,4 @@\n   public void initialize(FSContext fsContext) {\n-    COMPARATOR.setFSContext(fsContext);\n+    COMPARATORN.setFSContext(fsContext);\n+    COMPARATOR2.setFSContext(fsContext);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(FSContext fsContext) {\n    COMPARATORN.setFSContext(fsContext);\n    COMPARATOR2.setFSContext(fsContext);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
      "extendedDetails": {}
    },
    "b10e962224a8ae1c6031a05322b0cc5e564bd078": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6194. Cluster capacity in SchedulingPolicy is updated only on allocation file reload. (Yufei Gu via kasha)\n",
      "commitDate": "22/02/17 3:58 PM",
      "commitName": "b10e962224a8ae1c6031a05322b0cc5e564bd078",
      "commitAuthor": "Karthik Kambatla",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6194. Cluster capacity in SchedulingPolicy is updated only on allocation file reload. (Yufei Gu via kasha)\n",
          "commitDate": "22/02/17 3:58 PM",
          "commitName": "b10e962224a8ae1c6031a05322b0cc5e564bd078",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "22/02/17 3:46 PM",
          "commitNameOld": "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void initialize(Resource clusterCapacity) {\n-    COMPARATOR.setClusterCapacity(clusterCapacity);\n+  public void initialize(FSContext fsContext) {\n+    COMPARATOR.setFSContext(fsContext);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(FSContext fsContext) {\n    COMPARATOR.setFSContext(fsContext);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
          "extendedDetails": {
            "oldValue": "[clusterCapacity-Resource]",
            "newValue": "[fsContext-FSContext]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6194. Cluster capacity in SchedulingPolicy is updated only on allocation file reload. (Yufei Gu via kasha)\n",
          "commitDate": "22/02/17 3:58 PM",
          "commitName": "b10e962224a8ae1c6031a05322b0cc5e564bd078",
          "commitAuthor": "Karthik Kambatla",
          "commitDateOld": "22/02/17 3:46 PM",
          "commitNameOld": "718ad9f6ee93d4145f2bb19b7582ce4e1174feaf",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,3 @@\n-  public void initialize(Resource clusterCapacity) {\n-    COMPARATOR.setClusterCapacity(clusterCapacity);\n+  public void initialize(FSContext fsContext) {\n+    COMPARATOR.setFSContext(fsContext);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void initialize(FSContext fsContext) {\n    COMPARATOR.setFSContext(fsContext);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "ac94ba3e185115b83351e35c610c2b8ff91b1ebc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3453. Ensure preemption logic in FairScheduler uses DominantResourceCalculator in DRF queues to prevent unnecessary thrashing. (asuresh)\n",
      "commitDate": "14/07/15 12:23 AM",
      "commitName": "ac94ba3e185115b83351e35c610c2b8ff91b1ebc",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "28/04/15 9:00 PM",
      "commitNameOld": "8f82970e0c247b37b2bf33aa21f6a39afa07efde",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 76.14,
      "commitsBetweenForRepo": 630,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public void initialize(Resource clusterCapacity) {\n-    comparator.setClusterCapacity(clusterCapacity);\n+    COMPARATOR.setClusterCapacity(clusterCapacity);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Resource clusterCapacity) {\n    COMPARATOR.setClusterCapacity(clusterCapacity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java",
      "extendedDetails": {}
    },
    "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650": {
      "type": "Yintroduced",
      "commitMessage": "YARN-326. Add multi-resource scheduling to the fair scheduler. (sandyr via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489070 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 10:33 AM",
      "commitName": "c1b635ed4826b0f9c8574d262dfeb13fa5ceb650",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,3 @@\n+  public void initialize(Resource clusterCapacity) {\n+    comparator.setClusterCapacity(clusterCapacity);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Resource clusterCapacity) {\n    comparator.setClusterCapacity(clusterCapacity);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/DominantResourceFairnessPolicy.java"
    }
  }
}