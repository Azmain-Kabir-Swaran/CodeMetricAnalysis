{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NetworkTagMappingJsonManager.java",
  "functionName": "getNetworkTagHexID",
  "functionId": "getNetworkTagHexID___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/NetworkTagMappingJsonManager.java",
  "functionStartLine": 78,
  "functionEndLine": 95,
  "numCommitsSeen": 1,
  "timeTaken": 708,
  "changeHistory": [
    "edcc3a95d5248883492f2960f4fd22e09612ee9c"
  ],
  "changeHistoryShort": {
    "edcc3a95d5248883492f2960f4fd22e09612ee9c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "edcc3a95d5248883492f2960f4fd22e09612ee9c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7468. Provide means for container network policy control. (Xuan Gong via wangda)\n\nChange-Id: I73678c343f663412917758feef35d8308c216e76\n",
      "commitDate": "12/01/18 4:14 PM",
      "commitName": "edcc3a95d5248883492f2960f4fd22e09612ee9c",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,18 @@\n+  public String getNetworkTagHexID(Container container) {\n+    String userNetworkTagID \u003d this.networkTagMapping.getUserNetworkTagID(\n+        container.getUser());\n+    if (userNetworkTagID !\u003d null) {\n+      return userNetworkTagID;\n+    }\n+\n+    UserGroupInformation userUGI \u003d UserGroupInformation.createRemoteUser(\n+        container.getUser());\n+    List\u003cGroup\u003e groups \u003d this.networkTagMapping.getGroups();\n+    for(Group group : groups) {\n+      if (userUGI.getGroups().contains(group.getGroupName())) {\n+        return group.getNetworkTagID();\n+      }\n+    }\n+\n+    return this.networkTagMapping.getDefaultNetworkTagID();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getNetworkTagHexID(Container container) {\n    String userNetworkTagID \u003d this.networkTagMapping.getUserNetworkTagID(\n        container.getUser());\n    if (userNetworkTagID !\u003d null) {\n      return userNetworkTagID;\n    }\n\n    UserGroupInformation userUGI \u003d UserGroupInformation.createRemoteUser(\n        container.getUser());\n    List\u003cGroup\u003e groups \u003d this.networkTagMapping.getGroups();\n    for(Group group : groups) {\n      if (userUGI.getGroups().contains(group.getGroupName())) {\n        return group.getNetworkTagID();\n      }\n    }\n\n    return this.networkTagMapping.getDefaultNetworkTagID();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/resources/NetworkTagMappingJsonManager.java"
    }
  }
}