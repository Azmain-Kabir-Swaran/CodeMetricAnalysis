{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TasksBlock.java",
  "functionName": "render",
  "functionId": "render___html-Block",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
  "functionStartLine": 47,
  "functionEndLine": 123,
  "numCommitsSeen": 13,
  "timeTaken": 8331,
  "changeHistory": [
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
    "857d134fda8b7bb7faa6eb3606639554de4db47a",
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
    "04dac636953532c9c4ab6692e193e3ffe292edb2",
    "d2b9a604bd0e27509f1fa207e04b95312bd049c2",
    "0ea8570be578be60e2f32849900a1c50506d78d3",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2": "Ybodychange",
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": "Ybodychange",
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34": "Ybodychange",
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": "Ybodychange",
    "857d134fda8b7bb7faa6eb3606639554de4db47a": "Ybodychange",
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0": "Ybodychange",
    "04dac636953532c9c4ab6692e193e3ffe292edb2": "Ybodychange",
    "d2b9a604bd0e27509f1fa207e04b95312bd049c2": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Ybodychange",
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7098. Upgrade common-langs version to 3.7 in hadoop-mapreduce-project\n\nSigned-off-by: Akira Ajisaka \u003caajisaka@apache.org\u003e\n",
      "commitDate": "31/05/18 2:31 AM",
      "commitName": "d1e2b8098078af4af31392ed7f2fa350a7d1c3b2",
      "commitAuthor": "Takanobu Asanuma",
      "commitDateOld": "27/07/17 5:10 PM",
      "commitNameOld": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 307.39,
      "commitsBetweenForRepo": 2911,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,77 +1,77 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\").__().__().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String taskStateStr \u003d $(TASK_STATE);\n       if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n         taskStateStr \u003d \"ALL\";\n       }\n \n       if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n       {\n         try {\n           // get stateUI enum\n           MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n           if (!stateUI.correspondsTo(task.getState()))\n           {\n             continue;\n           }\n         } catch (IllegalArgumentException e) {\n           continue; // not supported state, ignore\n         }\n       }\n \n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n-      .append(StringEscapeUtils.escapeJavaScript(\n-              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n+      .append(StringEscapeUtils.escapeEcmaScript(\n+              StringEscapeUtils.escapeHtml4(info.getStatus()))).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n         __(\"var tasksTableData\u003d\" + tasksTableData).__();\n \n     tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\").__().__().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(StringEscapeUtils.escapeEcmaScript(\n              StringEscapeUtils.escapeHtml4(info.getStatus()))).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n        __(\"var tasksTableData\u003d\" + tasksTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11875. [JDK9] Adding a second copy of Hamlet without _ as a one-character identifier.\n",
      "commitDate": "27/07/17 5:10 PM",
      "commitName": "38c6fa5c7a61c7f6d4d2db5f12f9c60d477fb397",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "06/12/16 1:41 PM",
      "commitNameOld": "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 233.1,
      "commitsBetweenForRepo": 1201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,77 +1,77 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n-            th(\"Elapsed Time\")._()._().\n+            th(\"Elapsed Time\").__().__().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String taskStateStr \u003d $(TASK_STATE);\n       if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n         taskStateStr \u003d \"ALL\";\n       }\n \n       if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n       {\n         try {\n           // get stateUI enum\n           MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n           if (!stateUI.correspondsTo(task.getState()))\n           {\n             continue;\n           }\n         } catch (IllegalArgumentException e) {\n           continue; // not supported state, ignore\n         }\n       }\n \n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n       .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n-    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n+        __(\"var tasksTableData\u003d\" + tasksTableData).__();\n \n-    tbody._()._();\n+    tbody.__().__();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\").__().__().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n        __(\"var tasksTableData\u003d\" + tasksTableData).__();\n\n    tbody.__().__();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "da4ecc9f8223ac82bff8483594fb29be2f8d4d34": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6816. Progress bars in Web UI always at 100%. Contributed by Shen Yinjie.\n",
      "commitDate": "06/12/16 1:41 PM",
      "commitName": "da4ecc9f8223ac82bff8483594fb29be2f8d4d34",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "05/05/15 10:40 AM",
      "commitNameOld": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthorOld": "Xuan",
      "daysBetweenCommits": 581.17,
      "commitsBetweenForRepo": 4334,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,77 +1,77 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String taskStateStr \u003d $(TASK_STATE);\n       if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n         taskStateStr \u003d \"ALL\";\n       }\n \n       if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n       {\n         try {\n           // get stateUI enum\n           MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n           if (!stateUI.correspondsTo(task.getState()))\n           {\n             continue;\n           }\n         } catch (IllegalArgumentException e) {\n           continue; // not supported state, ignore\n         }\n       }\n \n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n-      String pct \u003d StringUtils.formatPercent(info.getProgress() / 100, 2);\n+      String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n       .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n     _(\"var tasksTableData\u003d\" + tasksTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d StringUtils.format(\"%.2f\", info.getProgress());\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2123. Progress bars in Web UI always at 100% due to non-US locale.\nContributed by Akira AJISAKA\n",
      "commitDate": "05/05/15 10:40 AM",
      "commitName": "b7dd3a4f04f712b7594c4e6e7ce50fd314f7c342",
      "commitAuthor": "Xuan",
      "commitDateOld": "05/08/14 2:52 PM",
      "commitNameOld": "857d134fda8b7bb7faa6eb3606639554de4db47a",
      "commitAuthorOld": "Jason Darrell Lowe",
      "daysBetweenCommits": 272.82,
      "commitsBetweenForRepo": 2366,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,77 +1,77 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String taskStateStr \u003d $(TASK_STATE);\n       if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n         taskStateStr \u003d \"ALL\";\n       }\n \n       if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n       {\n         try {\n           // get stateUI enum\n           MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n           if (!stateUI.correspondsTo(task.getState()))\n           {\n             continue;\n           }\n         } catch (IllegalArgumentException e) {\n           continue; // not supported state, ignore\n         }\n       }\n \n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n-      String pct \u003d percent(info.getProgress() / 100);\n+      String pct \u003d StringUtils.formatPercent(info.getProgress() / 100, 2);\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n       .append(StringEscapeUtils.escapeJavaScript(\n               StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n     _(\"var tasksTableData\u003d\" + tasksTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d StringUtils.formatPercent(info.getProgress() / 100, 2);\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "857d134fda8b7bb7faa6eb3606639554de4db47a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6014. New task status field in task attempts table can lead to an empty web page. Contributed by Mit Desai\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616018 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 2:52 PM",
      "commitName": "857d134fda8b7bb7faa6eb3606639554de4db47a",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "12/03/14 3:04 PM",
      "commitNameOld": "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 145.99,
      "commitsBetweenForRepo": 937,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,76 +1,77 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String taskStateStr \u003d $(TASK_STATE);\n       if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n         taskStateStr \u003d \"ALL\";\n       }\n \n       if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n       {\n         try {\n           // get stateUI enum\n           MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n           if (!stateUI.correspondsTo(task.getState()))\n           {\n             continue;\n           }\n         } catch (IllegalArgumentException e) {\n           continue; // not supported state, ignore\n         }\n       }\n \n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d percent(info.getProgress() / 100);\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n-      .append(info.getStatus()).append(\"\\\",\\\"\")\n+      .append(StringEscapeUtils.escapeJavaScript(\n+              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n     _(\"var tasksTableData\u003d\" + tasksTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d percent(info.getProgress() / 100);\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(StringEscapeUtils.escapeJavaScript(\n              StringEscapeUtils.escapeHtml(info.getStatus()))).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5553. Allow users to easily access completed/pending/successful/failed tasks on MR AM web-ui. Contributed by Paul Han.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1576946 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/03/14 3:04 PM",
      "commitName": "3bbd67173eaf776b7b5e4af8a24dd8738e02fed0",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "20/12/13 1:00 PM",
      "commitNameOld": "04dac636953532c9c4ab6692e193e3ffe292edb2",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 82.04,
      "commitsBetweenForRepo": 598,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,57 +1,76 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n+      String taskStateStr \u003d $(TASK_STATE);\n+      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n+        taskStateStr \u003d \"ALL\";\n+      }\n+\n+      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n+      {\n+        try {\n+          // get stateUI enum\n+          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n+          if (!stateUI.correspondsTo(task.getState()))\n+          {\n+            continue;\n+          }\n+        } catch (IllegalArgumentException e) {\n+          continue; // not supported state, ignore\n+        }\n+      }\n+\n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d percent(info.getProgress() / 100);\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n       .append(info.getStatus()).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n     _(\"var tasksTableData\u003d\" + tasksTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String taskStateStr \u003d $(TASK_STATE);\n      if (taskStateStr \u003d\u003d null || taskStateStr.trim().equals(\"\")) {\n        taskStateStr \u003d \"ALL\";\n      }\n\n      if (!taskStateStr.equalsIgnoreCase(\"ALL\"))\n      {\n        try {\n          // get stateUI enum\n          MRApps.TaskStateUI stateUI \u003d MRApps.taskState(taskStateStr);\n          if (!stateUI.correspondsTo(task.getState()))\n          {\n            continue;\n          }\n        } catch (IllegalArgumentException e) {\n          continue; // not supported state, ignore\n        }\n      }\n\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d percent(info.getProgress() / 100);\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(info.getStatus()).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "04dac636953532c9c4ab6692e193e3ffe292edb2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5550. Task Status message (reporter.setStatus) not shown in UI with Hadoop 2.0 (Gera Shegalov via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552808 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/12/13 1:00 PM",
      "commitName": "04dac636953532c9c4ab6692e193e3ffe292edb2",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "16/11/12 9:30 AM",
      "commitNameOld": "d2b9a604bd0e27509f1fa207e04b95312bd049c2",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 399.15,
      "commitsBetweenForRepo": 2360,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,55 +1,57 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n+            th(\"Status\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n \n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d percent(info.getProgress() / 100);\n       tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n       .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n       //Progress bar\n       .append(\"\u003cbr title\u003d\u0027\").append(pct)\n       .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n       .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n       .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n       .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n+      .append(info.getStatus()).append(\"\\\",\\\"\")\n \n       .append(info.getState()).append(\"\\\",\\\"\")\n       .append(info.getStartTime()).append(\"\\\",\\\"\")\n       .append(info.getFinishTime()).append(\"\\\",\\\"\")\n       .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n     //Remove the last comma and close off the array of arrays\n     if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n       tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n     }\n     tasksTableData.append(\"]\");\n     html.script().$type(\"text/javascript\").\n     _(\"var tasksTableData\u003d\" + tasksTableData)._();\n \n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"Status\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d percent(info.getProgress() / 100);\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n      .append(info.getStatus()).append(\"\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "d2b9a604bd0e27509f1fa207e04b95312bd049c2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4802. Takes a long time to load the task list on the AM for large jobs (Ravi Prakash via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1410498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/11/12 9:30 AM",
      "commitName": "d2b9a604bd0e27509f1fa207e04b95312bd049c2",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 338.77,
      "commitsBetweenForRepo": 2169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,55 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n+    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n+\n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       TaskInfo info \u003d new TaskInfo(task);\n       String tid \u003d info.getId();\n       String pct \u003d percent(info.getProgress() / 100);\n-      long startTime \u003d info.getStartTime();\n-      long finishTime \u003d info.getFinishTime();\n-      long elapsed \u003d info.getElapsedTime();\n-      tbody.\n-        tr().\n-          td().\n-            br().$title(String.valueOf(info.getTaskNum()))._(). // sorting\n-            a(url(\"task\", tid), tid)._().\n-          td().\n-            br().$title(pct)._().\n-            div(_PROGRESSBAR).\n-              $title(join(pct, \u0027%\u0027)). // tooltip\n-              div(_PROGRESSBAR_VALUE).\n-                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n-          td(info.getState()).\n-          td().\n-            br().$title(String.valueOf(startTime))._().\n-            _(Times.format(startTime))._().\n-          td().\n-            br().$title(String.valueOf(finishTime))._().\n-            _(Times.format(finishTime))._().\n-          td().\n-            br().$title(String.valueOf(elapsed))._().\n-            _(StringUtils.formatTime(elapsed))._()._();\n+      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n+      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n+      //Progress bar\n+      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n+      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n+      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n+      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n+      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n+\n+      .append(info.getState()).append(\"\\\",\\\"\")\n+      .append(info.getStartTime()).append(\"\\\",\\\"\")\n+      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n+      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n     }\n+    //Remove the last comma and close off the array of arrays\n+    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n+      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n+    }\n+    tasksTableData.append(\"]\");\n+    html.script().$type(\"text/javascript\").\n+    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n+\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    StringBuilder tasksTableData \u003d new StringBuilder(\"[\\n\");\n\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d percent(info.getProgress() / 100);\n      tasksTableData.append(\"[\\\"\u003ca href\u003d\u0027\").append(url(\"task\", tid))\n      .append(\"\u0027\u003e\").append(tid).append(\"\u003c/a\u003e\\\",\\\"\")\n      //Progress bar\n      .append(\"\u003cbr title\u003d\u0027\").append(pct)\n      .append(\"\u0027\u003e \u003cdiv class\u003d\u0027\").append(C_PROGRESSBAR).append(\"\u0027 title\u003d\u0027\")\n      .append(join(pct, \u0027%\u0027)).append(\"\u0027\u003e \").append(\"\u003cdiv class\u003d\u0027\")\n      .append(C_PROGRESSBAR_VALUE).append(\"\u0027 style\u003d\u0027\")\n      .append(join(\"width:\", pct, \u0027%\u0027)).append(\"\u0027\u003e \u003c/div\u003e \u003c/div\u003e\\\",\\\"\")\n\n      .append(info.getState()).append(\"\\\",\\\"\")\n      .append(info.getStartTime()).append(\"\\\",\\\"\")\n      .append(info.getFinishTime()).append(\"\\\",\\\"\")\n      .append(info.getElapsedTime()).append(\"\\\"],\\n\");\n    }\n    //Remove the last comma and close off the array of arrays\n    if(tasksTableData.charAt(tasksTableData.length() - 2) \u003d\u003d \u0027,\u0027) {\n      tasksTableData.delete(tasksTableData.length()-2, tasksTableData.length()-1);\n    }\n    tasksTableData.append(\"]\");\n    html.script().$type(\"text/javascript\").\n    _(\"var tasksTableData\u003d\" + tasksTableData)._();\n\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 1:59 PM",
      "commitNameOld": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 96.09,
      "commitsBetweenForRepo": 670,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n   @Override protected void render(Block html) {\n     if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n     for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n-      String tid \u003d MRApps.toString(task.getID());\n-      TaskReport report \u003d task.getReport();\n-      String pct \u003d percent(report.getProgress());\n-      long startTime \u003d report.getStartTime();\n-      long finishTime \u003d report.getFinishTime();\n-      long elapsed \u003d Times.elapsed(startTime, finishTime);\n+      TaskInfo info \u003d new TaskInfo(task);\n+      String tid \u003d info.getId();\n+      String pct \u003d percent(info.getProgress() / 100);\n+      long startTime \u003d info.getStartTime();\n+      long finishTime \u003d info.getFinishTime();\n+      long elapsed \u003d info.getElapsedTime();\n       tbody.\n         tr().\n           td().\n-            br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n+            br().$title(String.valueOf(info.getTaskNum()))._(). // sorting\n             a(url(\"task\", tid), tid)._().\n           td().\n             br().$title(pct)._().\n             div(_PROGRESSBAR).\n               $title(join(pct, \u0027%\u0027)). // tooltip\n               div(_PROGRESSBAR_VALUE).\n                 $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n-          td(report.getTaskState().toString()).\n+          td(info.getState()).\n           td().\n             br().$title(String.valueOf(startTime))._().\n             _(Times.format(startTime))._().\n           td().\n             br().$title(String.valueOf(finishTime))._().\n             _(Times.format(finishTime))._().\n           td().\n             br().$title(String.valueOf(elapsed))._().\n             _(StringUtils.formatTime(elapsed))._()._();\n     }\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      TaskInfo info \u003d new TaskInfo(task);\n      String tid \u003d info.getId();\n      String pct \u003d percent(info.getProgress() / 100);\n      long startTime \u003d info.getStartTime();\n      long finishTime \u003d info.getFinishTime();\n      long elapsed \u003d info.getElapsedTime();\n      tbody.\n        tr().\n          td().\n            br().$title(String.valueOf(info.getTaskNum()))._(). // sorting\n            a(url(\"task\", tid), tid)._().\n          td().\n            br().$title(pct)._().\n            div(_PROGRESSBAR).\n              $title(join(pct, \u0027%\u0027)). // tooltip\n              div(_PROGRESSBAR_VALUE).\n                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n          td(info.getState()).\n          td().\n            br().$title(String.valueOf(startTime))._().\n            _(Times.format(startTime))._().\n          td().\n            br().$title(String.valueOf(finishTime))._().\n            _(Times.format(finishTime))._().\n          td().\n            br().$title(String.valueOf(elapsed))._().\n            _(StringUtils.formatTime(elapsed))._()._();\n    }\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2677. Fixed 404 for some links from HistoryServer. Contributed by Robert Evans.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1166901 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/11 1:59 PM",
      "commitName": "b3c9c3c182f1fead0f47ef560e90fcc86042ea7f",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 14.86,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,56 @@\n   @Override protected void render(Block html) {\n-    if (app.job \u003d\u003d null) {\n+    if (app.getJob() \u003d\u003d null) {\n       html.\n         h2($(TITLE));\n       return;\n     }\n     TaskType type \u003d null;\n     String symbol \u003d $(TASK_TYPE);\n     if (!symbol.isEmpty()) {\n       type \u003d MRApps.taskType(symbol);\n     }\n     TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n       table(\"#tasks\").\n         thead().\n           tr().\n             th(\"Task\").\n             th(\"Progress\").\n             th(\"State\").\n             th(\"Start Time\").\n             th(\"Finish Time\").\n             th(\"Elapsed Time\")._()._().\n         tbody();\n-    for (Task task : app.job.getTasks().values()) {\n+    for (Task task : app.getJob().getTasks().values()) {\n       if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n         continue;\n       }\n       String tid \u003d MRApps.toString(task.getID());\n       TaskReport report \u003d task.getReport();\n       String pct \u003d percent(report.getProgress());\n       long startTime \u003d report.getStartTime();\n       long finishTime \u003d report.getFinishTime();\n       long elapsed \u003d Times.elapsed(startTime, finishTime);\n       tbody.\n         tr().\n           td().\n             br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n             a(url(\"task\", tid), tid)._().\n           td().\n             br().$title(pct)._().\n             div(_PROGRESSBAR).\n               $title(join(pct, \u0027%\u0027)). // tooltip\n               div(_PROGRESSBAR_VALUE).\n                 $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n           td(report.getTaskState().toString()).\n           td().\n             br().$title(String.valueOf(startTime))._().\n             _(Times.format(startTime))._().\n           td().\n             br().$title(String.valueOf(finishTime))._().\n             _(Times.format(finishTime))._().\n           td().\n             br().$title(String.valueOf(elapsed))._().\n             _(StringUtils.formatTime(elapsed))._()._();\n     }\n     tbody._()._();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.getJob() \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    for (Task task : app.getJob().getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String tid \u003d MRApps.toString(task.getID());\n      TaskReport report \u003d task.getReport();\n      String pct \u003d percent(report.getProgress());\n      long startTime \u003d report.getStartTime();\n      long finishTime \u003d report.getFinishTime();\n      long elapsed \u003d Times.elapsed(startTime, finishTime);\n      tbody.\n        tr().\n          td().\n            br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n            a(url(\"task\", tid), tid)._().\n          td().\n            br().$title(pct)._().\n            div(_PROGRESSBAR).\n              $title(join(pct, \u0027%\u0027)). // tooltip\n              div(_PROGRESSBAR_VALUE).\n                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n          td(report.getTaskState().toString()).\n          td().\n            br().$title(String.valueOf(startTime))._().\n            _(Times.format(startTime))._().\n          td().\n            br().$title(String.valueOf(finishTime))._().\n            _(Times.format(finishTime))._().\n          td().\n            br().$title(String.valueOf(elapsed))._().\n            _(StringUtils.formatTime(elapsed))._()._();\n    }\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.job \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    for (Task task : app.job.getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String tid \u003d MRApps.toString(task.getID());\n      TaskReport report \u003d task.getReport();\n      String pct \u003d percent(report.getProgress());\n      long startTime \u003d report.getStartTime();\n      long finishTime \u003d report.getFinishTime();\n      long elapsed \u003d Times.elapsed(startTime, finishTime);\n      tbody.\n        tr().\n          td().\n            br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n            a(url(\"task\", tid), tid)._().\n          td().\n            br().$title(pct)._().\n            div(_PROGRESSBAR).\n              $title(join(pct, \u0027%\u0027)). // tooltip\n              div(_PROGRESSBAR_VALUE).\n                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n          td(report.getTaskState().toString()).\n          td().\n            br().$title(String.valueOf(startTime))._().\n            _(Times.format(startTime))._().\n          td().\n            br().$title(String.valueOf(finishTime))._().\n            _(Times.format(finishTime))._().\n          td().\n            br().$title(String.valueOf(elapsed))._().\n            _(StringUtils.formatTime(elapsed))._()._();\n    }\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,56 @@\n+  @Override protected void render(Block html) {\n+    if (app.job \u003d\u003d null) {\n+      html.\n+        h2($(TITLE));\n+      return;\n+    }\n+    TaskType type \u003d null;\n+    String symbol \u003d $(TASK_TYPE);\n+    if (!symbol.isEmpty()) {\n+      type \u003d MRApps.taskType(symbol);\n+    }\n+    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n+      table(\"#tasks\").\n+        thead().\n+          tr().\n+            th(\"Task\").\n+            th(\"Progress\").\n+            th(\"State\").\n+            th(\"Start Time\").\n+            th(\"Finish Time\").\n+            th(\"Elapsed Time\")._()._().\n+        tbody();\n+    for (Task task : app.job.getTasks().values()) {\n+      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n+        continue;\n+      }\n+      String tid \u003d MRApps.toString(task.getID());\n+      TaskReport report \u003d task.getReport();\n+      String pct \u003d percent(report.getProgress());\n+      long startTime \u003d report.getStartTime();\n+      long finishTime \u003d report.getFinishTime();\n+      long elapsed \u003d Times.elapsed(startTime, finishTime);\n+      tbody.\n+        tr().\n+          td().\n+            br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n+            a(url(\"task\", tid), tid)._().\n+          td().\n+            br().$title(pct)._().\n+            div(_PROGRESSBAR).\n+              $title(join(pct, \u0027%\u0027)). // tooltip\n+              div(_PROGRESSBAR_VALUE).\n+                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n+          td(report.getTaskState().toString()).\n+          td().\n+            br().$title(String.valueOf(startTime))._().\n+            _(Times.format(startTime))._().\n+          td().\n+            br().$title(String.valueOf(finishTime))._().\n+            _(Times.format(finishTime))._().\n+          td().\n+            br().$title(String.valueOf(elapsed))._().\n+            _(StringUtils.formatTime(elapsed))._()._();\n+    }\n+    tbody._()._();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  @Override protected void render(Block html) {\n    if (app.job \u003d\u003d null) {\n      html.\n        h2($(TITLE));\n      return;\n    }\n    TaskType type \u003d null;\n    String symbol \u003d $(TASK_TYPE);\n    if (!symbol.isEmpty()) {\n      type \u003d MRApps.taskType(symbol);\n    }\n    TBODY\u003cTABLE\u003cHamlet\u003e\u003e tbody \u003d html.\n      table(\"#tasks\").\n        thead().\n          tr().\n            th(\"Task\").\n            th(\"Progress\").\n            th(\"State\").\n            th(\"Start Time\").\n            th(\"Finish Time\").\n            th(\"Elapsed Time\")._()._().\n        tbody();\n    for (Task task : app.job.getTasks().values()) {\n      if (type !\u003d null \u0026\u0026 task.getType() !\u003d type) {\n        continue;\n      }\n      String tid \u003d MRApps.toString(task.getID());\n      TaskReport report \u003d task.getReport();\n      String pct \u003d percent(report.getProgress());\n      long startTime \u003d report.getStartTime();\n      long finishTime \u003d report.getFinishTime();\n      long elapsed \u003d Times.elapsed(startTime, finishTime);\n      tbody.\n        tr().\n          td().\n            br().$title(String.valueOf(task.getID().getId()))._(). // sorting\n            a(url(\"task\", tid), tid)._().\n          td().\n            br().$title(pct)._().\n            div(_PROGRESSBAR).\n              $title(join(pct, \u0027%\u0027)). // tooltip\n              div(_PROGRESSBAR_VALUE).\n                $style(join(\"width:\", pct, \u0027%\u0027))._()._()._().\n          td(report.getTaskState().toString()).\n          td().\n            br().$title(String.valueOf(startTime))._().\n            _(Times.format(startTime))._().\n          td().\n            br().$title(String.valueOf(finishTime))._().\n            _(Times.format(finishTime))._().\n          td().\n            br().$title(String.valueOf(elapsed))._().\n            _(StringUtils.formatTime(elapsed))._()._();\n    }\n    tbody._()._();\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/TasksBlock.java"
    }
  }
}