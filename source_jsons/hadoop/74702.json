{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Token.java",
  "functionName": "getClassForIdentifier",
  "functionId": "getClassForIdentifier___kind-Text",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
  "functionStartLine": 127,
  "functionEndLine": 154,
  "numCommitsSeen": 29,
  "timeTaken": 2571,
  "changeHistory": [
    "7f46d13dac8cf85b094f41b3dd68e02c69e5afbc",
    "202926ac3301298753abd0e6e1f324caf0202ec6",
    "3bfd29949fef6d8fb5df4c6398e77cde320d8c2d",
    "4fe42683360e562dec86b904464b7fd038c7aae6",
    "aea890f7d215d97feec873228158daefa2e63217"
  ],
  "changeHistoryShort": {
    "7f46d13dac8cf85b094f41b3dd68e02c69e5afbc": "Ybodychange",
    "202926ac3301298753abd0e6e1f324caf0202ec6": "Ybodychange",
    "3bfd29949fef6d8fb5df4c6398e77cde320d8c2d": "Ybodychange",
    "4fe42683360e562dec86b904464b7fd038c7aae6": "Ymultichange(Ymodifierchange,Ybodychange)",
    "aea890f7d215d97feec873228158daefa2e63217": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7f46d13dac8cf85b094f41b3dd68e02c69e5afbc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16079. Token.toString faulting if any token listed can\u0027t load.\n\nContributed by Steve Loughran.\n",
      "commitDate": "01/02/19 6:31 AM",
      "commitName": "7f46d13dac8cf85b094f41b3dd68e02c69e5afbc",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "11/01/19 10:54 AM",
      "commitNameOld": "fb8932a727f757b2e9c1c61a18145878d0eb77bd",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 20.82,
      "commitsBetweenForRepo": 152,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n       getClassForIdentifier(Text kind) {\n     Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n     synchronized (Token.class) {\n       if (tokenKindMap \u003d\u003d null) {\n         tokenKindMap \u003d Maps.newHashMap();\n         // start the service load process; it\u0027s only in the \"next()\" calls\n         // where implementations are loaded.\n         final Iterator\u003cTokenIdentifier\u003e tokenIdentifiers \u003d\n             ServiceLoader.load(TokenIdentifier.class).iterator();\n         while (tokenIdentifiers.hasNext()) {\n           try {\n             TokenIdentifier id \u003d tokenIdentifiers.next();\n             tokenKindMap.put(id.getKind(), id.getClass());\n-          } catch (ServiceConfigurationError e) {\n+          } catch (ServiceConfigurationError | LinkageError e) {\n             // failure to load a token implementation\n             // log at debug and continue.\n             LOG.debug(\"Failed to load token identifier implementation\", e);\n           }\n         }\n       }\n       cls \u003d tokenKindMap.get(kind);\n     }\n     if (cls \u003d\u003d null) {\n       LOG.debug(\"Cannot find class for token kind {}\", kind);\n       return null;\n     }\n     return cls;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getClassForIdentifier(Text kind) {\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n    synchronized (Token.class) {\n      if (tokenKindMap \u003d\u003d null) {\n        tokenKindMap \u003d Maps.newHashMap();\n        // start the service load process; it\u0027s only in the \"next()\" calls\n        // where implementations are loaded.\n        final Iterator\u003cTokenIdentifier\u003e tokenIdentifiers \u003d\n            ServiceLoader.load(TokenIdentifier.class).iterator();\n        while (tokenIdentifiers.hasNext()) {\n          try {\n            TokenIdentifier id \u003d tokenIdentifiers.next();\n            tokenKindMap.put(id.getKind(), id.getClass());\n          } catch (ServiceConfigurationError | LinkageError e) {\n            // failure to load a token implementation\n            // log at debug and continue.\n            LOG.debug(\"Failed to load token identifier implementation\", e);\n          }\n        }\n      }\n      cls \u003d tokenKindMap.get(kind);\n    }\n    if (cls \u003d\u003d null) {\n      LOG.debug(\"Cannot find class for token kind {}\", kind);\n      return null;\n    }\n    return cls;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
      "extendedDetails": {}
    },
    "202926ac3301298753abd0e6e1f324caf0202ec6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15808. Harden Token service loader use.\n\nContributed by Steve Loughran.\n",
      "commitDate": "11/12/18 9:33 AM",
      "commitName": "202926ac3301298753abd0e6e1f324caf0202ec6",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "16/07/18 3:45 PM",
      "commitNameOld": "d2153577181f900ee6d8bf67d254e408bbaad243",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 147.78,
      "commitsBetweenForRepo": 1234,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,28 @@\n       getClassForIdentifier(Text kind) {\n     Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n     synchronized (Token.class) {\n       if (tokenKindMap \u003d\u003d null) {\n         tokenKindMap \u003d Maps.newHashMap();\n-        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n-          tokenKindMap.put(id.getKind(), id.getClass());\n+        // start the service load process; it\u0027s only in the \"next()\" calls\n+        // where implementations are loaded.\n+        final Iterator\u003cTokenIdentifier\u003e tokenIdentifiers \u003d\n+            ServiceLoader.load(TokenIdentifier.class).iterator();\n+        while (tokenIdentifiers.hasNext()) {\n+          try {\n+            TokenIdentifier id \u003d tokenIdentifiers.next();\n+            tokenKindMap.put(id.getKind(), id.getClass());\n+          } catch (ServiceConfigurationError e) {\n+            // failure to load a token implementation\n+            // log at debug and continue.\n+            LOG.debug(\"Failed to load token identifier implementation\", e);\n+          }\n         }\n       }\n       cls \u003d tokenKindMap.get(kind);\n     }\n     if (cls \u003d\u003d null) {\n-      LOG.debug(\"Cannot find class for token kind \" + kind);\n+      LOG.debug(\"Cannot find class for token kind {}\", kind);\n       return null;\n     }\n     return cls;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getClassForIdentifier(Text kind) {\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n    synchronized (Token.class) {\n      if (tokenKindMap \u003d\u003d null) {\n        tokenKindMap \u003d Maps.newHashMap();\n        // start the service load process; it\u0027s only in the \"next()\" calls\n        // where implementations are loaded.\n        final Iterator\u003cTokenIdentifier\u003e tokenIdentifiers \u003d\n            ServiceLoader.load(TokenIdentifier.class).iterator();\n        while (tokenIdentifiers.hasNext()) {\n          try {\n            TokenIdentifier id \u003d tokenIdentifiers.next();\n            tokenKindMap.put(id.getKind(), id.getClass());\n          } catch (ServiceConfigurationError e) {\n            // failure to load a token implementation\n            // log at debug and continue.\n            LOG.debug(\"Failed to load token identifier implementation\", e);\n          }\n        }\n      }\n      cls \u003d tokenKindMap.get(kind);\n    }\n    if (cls \u003d\u003d null) {\n      LOG.debug(\"Cannot find class for token kind {}\", kind);\n      return null;\n    }\n    return cls;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
      "extendedDetails": {}
    },
    "3bfd29949fef6d8fb5df4c6398e77cde320d8c2d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11180. Change log message \"token.Token: Cannot find class for token kind kms-dt\" to debug. Contributed by Yi Liu.\n",
      "commitDate": "12/05/16 11:48 PM",
      "commitName": "3bfd29949fef6d8fb5df4c6398e77cde320d8c2d",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "29/04/16 10:32 PM",
      "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 13.05,
      "commitsBetweenForRepo": 79,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n       getClassForIdentifier(Text kind) {\n     Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n     synchronized (Token.class) {\n       if (tokenKindMap \u003d\u003d null) {\n         tokenKindMap \u003d Maps.newHashMap();\n         for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n           tokenKindMap.put(id.getKind(), id.getClass());\n         }\n       }\n       cls \u003d tokenKindMap.get(kind);\n     }\n     if (cls \u003d\u003d null) {\n-      LOG.warn(\"Cannot find class for token kind \" + kind);\n+      LOG.debug(\"Cannot find class for token kind \" + kind);\n       return null;\n     }\n     return cls;\n   }\n\\ No newline at end of file\n",
      "actualSource": "      getClassForIdentifier(Text kind) {\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n    synchronized (Token.class) {\n      if (tokenKindMap \u003d\u003d null) {\n        tokenKindMap \u003d Maps.newHashMap();\n        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n          tokenKindMap.put(id.getKind(), id.getClass());\n        }\n      }\n      cls \u003d tokenKindMap.get(kind);\n    }\n    if (cls \u003d\u003d null) {\n      LOG.debug(\"Cannot find class for token kind \" + kind);\n      return null;\n    }\n    return cls;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
      "extendedDetails": {}
    },
    "4fe42683360e562dec86b904464b7fd038c7aae6": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569382 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/02/14 7:23 AM",
      "commitName": "4fe42683360e562dec86b904464b7fd038c7aae6",
      "commitAuthor": "Jason Darrell Lowe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569382 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/02/14 7:23 AM",
          "commitName": "4fe42683360e562dec86b904464b7fd038c7aae6",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "01/10/13 9:00 PM",
          "commitNameOld": "703838c59841952757d941df4414aa77d57fe492",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 139.47,
          "commitsBetweenForRepo": 849,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n       getClassForIdentifier(Text kind) {\n-    if (tokenKindMap \u003d\u003d null) {\n-      tokenKindMap \u003d Maps.newHashMap();\n-      for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n-        tokenKindMap.put(id.getKind(), id.getClass());\n+    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n+    synchronized (Token.class) {\n+      if (tokenKindMap \u003d\u003d null) {\n+        tokenKindMap \u003d Maps.newHashMap();\n+        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n+          tokenKindMap.put(id.getKind(), id.getClass());\n+        }\n       }\n+      cls \u003d tokenKindMap.get(kind);\n     }\n-    Class\u003c? extends TokenIdentifier\u003e cls \u003d tokenKindMap.get(kind);\n     if (cls \u003d\u003d null) {\n       LOG.warn(\"Cannot find class for token kind \" + kind);\n-       return null;\n+      return null;\n     }\n     return cls;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getClassForIdentifier(Text kind) {\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n    synchronized (Token.class) {\n      if (tokenKindMap \u003d\u003d null) {\n        tokenKindMap \u003d Maps.newHashMap();\n        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n          tokenKindMap.put(id.getKind(), id.getClass());\n        }\n      }\n      cls \u003d tokenKindMap.get(kind);\n    }\n    if (cls \u003d\u003d null) {\n      LOG.warn(\"Cannot find class for token kind \" + kind);\n      return null;\n    }\n    return cls;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
          "extendedDetails": {
            "oldValue": "[private, static, synchronized]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10346. Deadlock while logging tokens. Contributed by Jason Lowe\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569382 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/02/14 7:23 AM",
          "commitName": "4fe42683360e562dec86b904464b7fd038c7aae6",
          "commitAuthor": "Jason Darrell Lowe",
          "commitDateOld": "01/10/13 9:00 PM",
          "commitNameOld": "703838c59841952757d941df4414aa77d57fe492",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 139.47,
          "commitsBetweenForRepo": 849,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,17 @@\n       getClassForIdentifier(Text kind) {\n-    if (tokenKindMap \u003d\u003d null) {\n-      tokenKindMap \u003d Maps.newHashMap();\n-      for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n-        tokenKindMap.put(id.getKind(), id.getClass());\n+    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n+    synchronized (Token.class) {\n+      if (tokenKindMap \u003d\u003d null) {\n+        tokenKindMap \u003d Maps.newHashMap();\n+        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n+          tokenKindMap.put(id.getKind(), id.getClass());\n+        }\n       }\n+      cls \u003d tokenKindMap.get(kind);\n     }\n-    Class\u003c? extends TokenIdentifier\u003e cls \u003d tokenKindMap.get(kind);\n     if (cls \u003d\u003d null) {\n       LOG.warn(\"Cannot find class for token kind \" + kind);\n-       return null;\n+      return null;\n     }\n     return cls;\n   }\n\\ No newline at end of file\n",
          "actualSource": "      getClassForIdentifier(Text kind) {\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d null;\n    synchronized (Token.class) {\n      if (tokenKindMap \u003d\u003d null) {\n        tokenKindMap \u003d Maps.newHashMap();\n        for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n          tokenKindMap.put(id.getKind(), id.getClass());\n        }\n      }\n      cls \u003d tokenKindMap.get(kind);\n    }\n    if (cls \u003d\u003d null) {\n      LOG.warn(\"Cannot find class for token kind \" + kind);\n      return null;\n    }\n    return cls;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java",
          "extendedDetails": {}
        }
      ]
    },
    "aea890f7d215d97feec873228158daefa2e63217": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-4148. MapReduce should not have a compile-time dependency on HDFS.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1337199 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/05/12 8:00 AM",
      "commitName": "aea890f7d215d97feec873228158daefa2e63217",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,14 @@\n+      getClassForIdentifier(Text kind) {\n+    if (tokenKindMap \u003d\u003d null) {\n+      tokenKindMap \u003d Maps.newHashMap();\n+      for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n+        tokenKindMap.put(id.getKind(), id.getClass());\n+      }\n+    }\n+    Class\u003c? extends TokenIdentifier\u003e cls \u003d tokenKindMap.get(kind);\n+    if (cls \u003d\u003d null) {\n+      LOG.warn(\"Cannot find class for token kind \" + kind);\n+       return null;\n+    }\n+    return cls;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "      getClassForIdentifier(Text kind) {\n    if (tokenKindMap \u003d\u003d null) {\n      tokenKindMap \u003d Maps.newHashMap();\n      for (TokenIdentifier id : ServiceLoader.load(TokenIdentifier.class)) {\n        tokenKindMap.put(id.getKind(), id.getClass());\n      }\n    }\n    Class\u003c? extends TokenIdentifier\u003e cls \u003d tokenKindMap.get(kind);\n    if (cls \u003d\u003d null) {\n      LOG.warn(\"Cannot find class for token kind \" + kind);\n       return null;\n    }\n    return cls;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/Token.java"
    }
  }
}