{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PriorityRouterPolicy.java",
  "functionName": "getHomeSubcluster",
  "functionId": "getHomeSubcluster___appSubmissionContext-ApplicationSubmissionContext__blacklist-List__SubClusterId__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
  "functionStartLine": 40,
  "functionEndLine": 75,
  "numCommitsSeen": 9,
  "timeTaken": 2497,
  "changeHistory": [
    "108ecf992f0004dd64a7143d1c400de1361b13f3",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
    "4cfec943b177e2123a935e70d39776521883c2bc",
    "4128c9522dcdc16bb3527f74a48ed1242458a165",
    "0662996b6af19deece21b95b961d9362accc5159"
  ],
  "changeHistoryShort": {
    "108ecf992f0004dd64a7143d1c400de1361b13f3": "Ybodychange",
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": "Ybodychange",
    "4cfec943b177e2123a935e70d39776521883c2bc": "Ymultichange(Yparameterchange,Ybodychange)",
    "4128c9522dcdc16bb3527f74a48ed1242458a165": "Ybodychange",
    "0662996b6af19deece21b95b961d9362accc5159": "Yintroduced"
  },
  "changeHistoryDetails": {
    "108ecf992f0004dd64a7143d1c400de1361b13f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8942. PriorityBasedRouterPolicy throws exception if all sub-cluster weights have negative value. Contributed by Bilwa S T.\n",
      "commitDate": "13/05/20 10:04 AM",
      "commitName": "108ecf992f0004dd64a7143d1c400de1361b13f3",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 1015.69,
      "commitsBetweenForRepo": 7452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   public SubClusterId getHomeSubcluster(\n       ApplicationSubmissionContext appSubmissionContext,\n       List\u003cSubClusterId\u003e blacklist) throws YarnException {\n \n     // null checks and default-queue behavior\n     validate(appSubmissionContext);\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n         getActiveSubclusters();\n \n     FederationPolicyUtils.validateSubClusterAvailability(\n         new ArrayList\u003cSubClusterId\u003e(activeSubclusters.keySet()), blacklist);\n \n     // This finds the sub-cluster with the highest weight among the\n     // currently active ones.\n     Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n         getPolicyInfo().getRouterPolicyWeights();\n     SubClusterId chosen \u003d null;\n     Float currentBest \u003d Float.MIN_VALUE;\n     for (SubClusterId id : activeSubclusters.keySet()) {\n       SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n       if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n         continue;\n       }\n       if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n         currentBest \u003d weights.get(idInfo);\n         chosen \u003d id;\n       }\n     }\n+    if (chosen \u003d\u003d null) {\n+      throw new FederationPolicyException(\n+          \"No Active Subcluster with weight vector greater than zero\");\n+    }\n \n     return chosen;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext,\n      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n\n    // null checks and default-queue behavior\n    validate(appSubmissionContext);\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    FederationPolicyUtils.validateSubClusterAvailability(\n        new ArrayList\u003cSubClusterId\u003e(activeSubclusters.keySet()), blacklist);\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n        getPolicyInfo().getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n        continue;\n      }\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n    if (chosen \u003d\u003d null) {\n      throw new FederationPolicyException(\n          \"No Active Subcluster with weight vector greater than zero\");\n    }\n\n    return chosen;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
      "extendedDetails": {}
    },
    "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3659. Federation: routing client invocations transparently to multiple RMs. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit 52daa6d971ae408d121b3737ea8c0575e7e8516d)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "43a97174fe49aa0c25d03b8a970a46d4bebf1aa8",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "4cfec943b177e2123a935e70d39776521883c2bc",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,32 @@\n   public SubClusterId getHomeSubcluster(\n       ApplicationSubmissionContext appSubmissionContext,\n       List\u003cSubClusterId\u003e blacklist) throws YarnException {\n \n     // null checks and default-queue behavior\n     validate(appSubmissionContext);\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n         getActiveSubclusters();\n \n+    FederationPolicyUtils.validateSubClusterAvailability(\n+        new ArrayList\u003cSubClusterId\u003e(activeSubclusters.keySet()), blacklist);\n+\n     // This finds the sub-cluster with the highest weight among the\n     // currently active ones.\n     Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n         getPolicyInfo().getRouterPolicyWeights();\n     SubClusterId chosen \u003d null;\n     Float currentBest \u003d Float.MIN_VALUE;\n     for (SubClusterId id : activeSubclusters.keySet()) {\n       SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n       if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n         continue;\n       }\n       if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n         currentBest \u003d weights.get(idInfo);\n         chosen \u003d id;\n       }\n     }\n \n     return chosen;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext,\n      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n\n    // null checks and default-queue behavior\n    validate(appSubmissionContext);\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    FederationPolicyUtils.validateSubClusterAvailability(\n        new ArrayList\u003cSubClusterId\u003e(activeSubclusters.keySet()), blacklist);\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n        getPolicyInfo().getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n        continue;\n      }\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n\n    return chosen;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
      "extendedDetails": {}
    },
    "4cfec943b177e2123a935e70d39776521883c2bc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6724. Add ability to blacklist sub-clusters when invoking Routing policies. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit f8e5de59697cb78686f0e605dc7e93628b5f3297)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "4cfec943b177e2123a935e70d39776521883c2bc",
      "commitAuthor": "Subru Krishnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6724. Add ability to blacklist sub-clusters when invoking Routing policies. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit f8e5de59697cb78686f0e605dc7e93628b5f3297)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "4cfec943b177e2123a935e70d39776521883c2bc",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "4128c9522dcdc16bb3527f74a48ed1242458a165",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,29 @@\n   public SubClusterId getHomeSubcluster(\n-      ApplicationSubmissionContext appSubmissionContext) throws YarnException {\n+      ApplicationSubmissionContext appSubmissionContext,\n+      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n \n     // null checks and default-queue behavior\n     validate(appSubmissionContext);\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n         getActiveSubclusters();\n \n     // This finds the sub-cluster with the highest weight among the\n     // currently active ones.\n     Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n         getPolicyInfo().getRouterPolicyWeights();\n     SubClusterId chosen \u003d null;\n     Float currentBest \u003d Float.MIN_VALUE;\n     for (SubClusterId id : activeSubclusters.keySet()) {\n       SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n+      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n+        continue;\n+      }\n       if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n         currentBest \u003d weights.get(idInfo);\n         chosen \u003d id;\n       }\n     }\n \n     return chosen;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext,\n      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n\n    // null checks and default-queue behavior\n    validate(appSubmissionContext);\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n        getPolicyInfo().getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n        continue;\n      }\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n\n    return chosen;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
          "extendedDetails": {
            "oldValue": "[appSubmissionContext-ApplicationSubmissionContext]",
            "newValue": "[appSubmissionContext-ApplicationSubmissionContext, blacklist-List\u003cSubClusterId\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6724. Add ability to blacklist sub-clusters when invoking Routing policies. (Giovanni Matteo Fumarola via Subru).\n\n(cherry picked from commit f8e5de59697cb78686f0e605dc7e93628b5f3297)\n",
          "commitDate": "01/08/17 5:28 PM",
          "commitName": "4cfec943b177e2123a935e70d39776521883c2bc",
          "commitAuthor": "Subru Krishnan",
          "commitDateOld": "01/08/17 5:28 PM",
          "commitNameOld": "4128c9522dcdc16bb3527f74a48ed1242458a165",
          "commitAuthorOld": "Subru Krishnan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 20,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,29 @@\n   public SubClusterId getHomeSubcluster(\n-      ApplicationSubmissionContext appSubmissionContext) throws YarnException {\n+      ApplicationSubmissionContext appSubmissionContext,\n+      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n \n     // null checks and default-queue behavior\n     validate(appSubmissionContext);\n \n     Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n         getActiveSubclusters();\n \n     // This finds the sub-cluster with the highest weight among the\n     // currently active ones.\n     Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n         getPolicyInfo().getRouterPolicyWeights();\n     SubClusterId chosen \u003d null;\n     Float currentBest \u003d Float.MIN_VALUE;\n     for (SubClusterId id : activeSubclusters.keySet()) {\n       SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n+      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n+        continue;\n+      }\n       if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n         currentBest \u003d weights.get(idInfo);\n         chosen \u003d id;\n       }\n     }\n \n     return chosen;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext,\n      List\u003cSubClusterId\u003e blacklist) throws YarnException {\n\n    // null checks and default-queue behavior\n    validate(appSubmissionContext);\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n        getPolicyInfo().getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (blacklist !\u003d null \u0026\u0026 blacklist.contains(id)) {\n        continue;\n      }\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n\n    return chosen;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
          "extendedDetails": {}
        }
      ]
    },
    "4128c9522dcdc16bb3527f74a48ed1242458a165": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5676. Add a HashBasedRouterPolicy, and small policies and test refactoring. (Carlo Curino via Subru).\n\n(cherry picked from commit 575137f41c27eb72d05d923337f3030a35403e8f)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "4128c9522dcdc16bb3527f74a48ed1242458a165",
      "commitAuthor": "Subru Krishnan",
      "commitDateOld": "01/08/17 5:28 PM",
      "commitNameOld": "1dadd0b45a6a605da72eb304808edb49fc66da45",
      "commitAuthorOld": "Subru Krishnan",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   public SubClusterId getHomeSubcluster(\n       ApplicationSubmissionContext appSubmissionContext) throws YarnException {\n \n+    // null checks and default-queue behavior\n+    validate(appSubmissionContext);\n+\n     Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n         getActiveSubclusters();\n \n     // This finds the sub-cluster with the highest weight among the\n     // currently active ones.\n     Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n         getPolicyInfo().getRouterPolicyWeights();\n     SubClusterId chosen \u003d null;\n     Float currentBest \u003d Float.MIN_VALUE;\n     for (SubClusterId id : activeSubclusters.keySet()) {\n       SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n       if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n         currentBest \u003d weights.get(idInfo);\n         chosen \u003d id;\n       }\n     }\n \n     return chosen;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext) throws YarnException {\n\n    // null checks and default-queue behavior\n    validate(appSubmissionContext);\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d\n        getPolicyInfo().getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n\n    return chosen;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java",
      "extendedDetails": {}
    },
    "0662996b6af19deece21b95b961d9362accc5159": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5324. Stateless Federation router policies implementation. (Carlo Curino via Subru).\n\n(cherry picked from commit 1298127bdad60a961441dc7e25cdc2553c119f33)\n",
      "commitDate": "01/08/17 5:28 PM",
      "commitName": "0662996b6af19deece21b95b961d9362accc5159",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,23 @@\n+  public SubClusterId getHomeSubcluster(\n+      ApplicationSubmissionContext appSubmissionContext)\n+      throws YarnException {\n+\n+    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n+        getActiveSubclusters();\n+\n+    // This finds the sub-cluster with the highest weight among the\n+    // currently active ones.\n+    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d getPolicyInfo()\n+        .getRouterPolicyWeights();\n+    SubClusterId chosen \u003d null;\n+    Float currentBest \u003d Float.MIN_VALUE;\n+    for (SubClusterId id : activeSubclusters.keySet()) {\n+      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n+      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n+        currentBest \u003d weights.get(idInfo);\n+        chosen \u003d id;\n+      }\n+    }\n+\n+    return chosen;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterId getHomeSubcluster(\n      ApplicationSubmissionContext appSubmissionContext)\n      throws YarnException {\n\n    Map\u003cSubClusterId, SubClusterInfo\u003e activeSubclusters \u003d\n        getActiveSubclusters();\n\n    // This finds the sub-cluster with the highest weight among the\n    // currently active ones.\n    Map\u003cSubClusterIdInfo, Float\u003e weights \u003d getPolicyInfo()\n        .getRouterPolicyWeights();\n    SubClusterId chosen \u003d null;\n    Float currentBest \u003d Float.MIN_VALUE;\n    for (SubClusterId id : activeSubclusters.keySet()) {\n      SubClusterIdInfo idInfo \u003d new SubClusterIdInfo(id);\n      if (weights.containsKey(idInfo) \u0026\u0026 weights.get(idInfo) \u003e currentBest) {\n        currentBest \u003d weights.get(idInfo);\n        chosen \u003d id;\n      }\n    }\n\n    return chosen;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/policies/router/PriorityRouterPolicy.java"
    }
  }
}