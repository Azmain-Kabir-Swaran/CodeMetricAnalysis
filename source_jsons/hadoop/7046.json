{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSPermissionChecker.java",
  "functionName": "checkPermissionWithContext",
  "functionId": "checkPermissionWithContext___authzContext-INodeAttributeProvider.AuthorizationContext",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java",
  "functionStartLine": 355,
  "functionEndLine": 368,
  "numCommitsSeen": 51,
  "timeTaken": 1291,
  "changeHistory": [
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea"
  ],
  "changeHistoryShort": {
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4b95c242eca540455a4d5d0899aaf73b6064b5ea": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14743. Enhance INodeAttributeProvider/ AccessControlEnforcer Interface in HDFS to support Authorization of mkdir, rm, rmdir, copy, move etc... (#1829)\n\nReviewed-by: Xiaoyu Yao \u003cxyao@apache.org\u003e",
      "commitDate": "13/03/20 11:29 AM",
      "commitName": "4b95c242eca540455a4d5d0899aaf73b6064b5ea",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,14 @@\n+  public void checkPermissionWithContext(\n+      INodeAttributeProvider.AuthorizationContext authzContext)\n+      throws AccessControlException {\n+    // The default authorization provider does not use the additional context\n+    // parameters including operationName and callerContext.\n+    this.checkPermission(authzContext.getFsOwner(),\n+        authzContext.getSupergroup(), authzContext.getCallerUgi(),\n+        authzContext.getInodeAttrs(), authzContext.getInodes(),\n+        authzContext.getPathByNameArr(), authzContext.getSnapshotId(),\n+        authzContext.getPath(), authzContext.getAncestorIndex(),\n+        authzContext.isDoCheckOwner(), authzContext.getAncestorAccess(),\n+        authzContext.getParentAccess(), authzContext.getAccess(),\n+        authzContext.getSubAccess(), authzContext.isIgnoreEmptyDir());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void checkPermissionWithContext(\n      INodeAttributeProvider.AuthorizationContext authzContext)\n      throws AccessControlException {\n    // The default authorization provider does not use the additional context\n    // parameters including operationName and callerContext.\n    this.checkPermission(authzContext.getFsOwner(),\n        authzContext.getSupergroup(), authzContext.getCallerUgi(),\n        authzContext.getInodeAttrs(), authzContext.getInodes(),\n        authzContext.getPathByNameArr(), authzContext.getSnapshotId(),\n        authzContext.getPath(), authzContext.getAncestorIndex(),\n        authzContext.isDoCheckOwner(), authzContext.getAncestorAccess(),\n        authzContext.getParentAccess(), authzContext.getAccess(),\n        authzContext.getSubAccess(), authzContext.isIgnoreEmptyDir());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSPermissionChecker.java"
    }
  }
}