{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Listing.java",
  "functionName": "requestNextBatch",
  "functionId": "requestNextBatch",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java",
  "functionStartLine": 435,
  "functionEndLine": 451,
  "numCommitsSeen": 11,
  "timeTaken": 807,
  "changeHistory": [
    "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c"
  ],
  "changeHistoryShort": {
    "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13208. S3A listFiles(recursive\u003dtrue) to do a bulk listObjects instead of walking the pseudo-tree of directories. Contributed by Steve Loughran.\n",
      "commitDate": "17/08/16 2:54 PM",
      "commitName": "822d661b8fcc42bec6eea958d9fd02ef1aaa4b6c",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,17 @@\n+    private boolean requestNextBatch() throws IOException {\n+      // look for more object listing batches being available\n+      while (source.hasNext()) {\n+        // if available, retrieve it and build the next status\n+        if (buildNextStatusBatch(source.next())) {\n+          // this batch successfully generated entries matching the filters/\n+          // acceptors; declare that the request was successful\n+          return true;\n+        } else {\n+          LOG.debug(\"All entries in batch were filtered...continuing\");\n+        }\n+      }\n+      // if this code is reached, it means that all remaining\n+      // object lists have been retrieved, and there are no new entries\n+      // to return.\n+      return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private boolean requestNextBatch() throws IOException {\n      // look for more object listing batches being available\n      while (source.hasNext()) {\n        // if available, retrieve it and build the next status\n        if (buildNextStatusBatch(source.next())) {\n          // this batch successfully generated entries matching the filters/\n          // acceptors; declare that the request was successful\n          return true;\n        } else {\n          LOG.debug(\"All entries in batch were filtered...continuing\");\n        }\n      }\n      // if this code is reached, it means that all remaining\n      // object lists have been retrieved, and there are no new entries\n      // to return.\n      return false;\n    }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/Listing.java"
    }
  }
}