{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "copy",
  "functionId": "copy___srcFS-FileSystem__srcStatus-FileStatus__dstFS-FileSystem__dst-Path__deleteSource-boolean__overwrite-boolean__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 394,
  "functionEndLine": 431,
  "numCommitsSeen": 68,
  "timeTaken": 1869,
  "changeHistory": [
    "53790d33000cb5804779a56ac3891d0e0e5a904d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "7578282edce0eba3f24c96355c944c02156ece79",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "53790d33000cb5804779a56ac3891d0e0e5a904d": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "7578282edce0eba3f24c96355c944c02156ece79": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "53790d33000cb5804779a56ac3891d0e0e5a904d": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1771. Reduce the number of NameNode operations during localization of\npublic resources using a cache. Contributed by Sangjin Lee\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/03/14 5:30 PM",
      "commitName": "53790d33000cb5804779a56ac3891d0e0e5a904d",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "08/09/13 12:51 PM",
      "commitNameOld": "40cf0068d8aae2c50c90e0661aaa1170a4c03e42",
      "commitAuthorOld": "Ivan Mitic",
      "daysBetweenCommits": 186.19,
      "commitsBetweenForRepo": 1312,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n-  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n-                              FileSystem dstFS, Path dst,\n-                              boolean deleteSource,\n-                              boolean overwrite,\n-                              Configuration conf) throws IOException {\n+  public static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n+                             FileSystem dstFS, Path dst,\n+                             boolean deleteSource,\n+                             boolean overwrite,\n+                             Configuration conf) throws IOException {\n     Path src \u003d srcStatus.getPath();\n     dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n     if (srcStatus.isDirectory()) {\n       checkDependencies(srcFS, src, dstFS, dst);\n       if (!dstFS.mkdirs(dst)) {\n         return false;\n       }\n       FileStatus contents[] \u003d srcFS.listStatus(src);\n       for (int i \u003d 0; i \u003c contents.length; i++) {\n         copy(srcFS, contents[i], dstFS,\n              new Path(dst, contents[i].getPath().getName()),\n              deleteSource, overwrite, conf);\n       }\n     } else {\n       InputStream in\u003dnull;\n       OutputStream out \u003d null;\n       try {\n         in \u003d srcFS.open(src);\n         out \u003d dstFS.create(dst, overwrite);\n         IOUtils.copyBytes(in, out, conf, true);\n       } catch (IOException e) {\n         IOUtils.closeStream(out);\n         IOUtils.closeStream(in);\n         throw e;\n       }\n     }\n     if (deleteSource) {\n       return srcFS.delete(src, true);\n     } else {\n       return true;\n     }\n   \n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                             FileSystem dstFS, Path dst,\n                             boolean deleteSource,\n                             boolean overwrite,\n                             Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[public, static]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite,\n                              Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite,\n                              Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite,\n                              Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileUtil.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileUtil.java"
      }
    },
    "7578282edce0eba3f24c96355c944c02156ece79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6585.  Add FileStatus#isDirectory and isFile.  Contributed by Eli Collins.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@949658 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/10 8:14 PM",
      "commitName": "7578282edce0eba3f24c96355c944c02156ece79",
      "commitAuthor": "Thomas White",
      "commitDateOld": "06/05/10 4:18 AM",
      "commitNameOld": "44ebf5db23ac5c22e347458fcc75389d78e4249d",
      "commitAuthorOld": "Sharad Agarwal",
      "daysBetweenCommits": 24.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                               FileSystem dstFS, Path dst,\n                               boolean deleteSource,\n                               boolean overwrite,\n                               Configuration conf) throws IOException {\n     Path src \u003d srcStatus.getPath();\n     dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n-    if (srcStatus.isDir()) {\n+    if (srcStatus.isDirectory()) {\n       checkDependencies(srcFS, src, dstFS, dst);\n       if (!dstFS.mkdirs(dst)) {\n         return false;\n       }\n       FileStatus contents[] \u003d srcFS.listStatus(src);\n       for (int i \u003d 0; i \u003c contents.length; i++) {\n         copy(srcFS, contents[i], dstFS,\n              new Path(dst, contents[i].getPath().getName()),\n              deleteSource, overwrite, conf);\n       }\n     } else {\n       InputStream in\u003dnull;\n       OutputStream out \u003d null;\n       try {\n         in \u003d srcFS.open(src);\n         out \u003d dstFS.create(dst, overwrite);\n         IOUtils.copyBytes(in, out, conf, true);\n       } catch (IOException e) {\n         IOUtils.closeStream(out);\n         IOUtils.closeStream(in);\n         throw e;\n       }\n     }\n     if (deleteSource) {\n       return srcFS.delete(src, true);\n     } else {\n       return true;\n     }\n   \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite,\n                              Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDirectory()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,38 @@\n+  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n+                              FileSystem dstFS, Path dst,\n+                              boolean deleteSource,\n+                              boolean overwrite,\n+                              Configuration conf) throws IOException {\n+    Path src \u003d srcStatus.getPath();\n+    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n+    if (srcStatus.isDir()) {\n+      checkDependencies(srcFS, src, dstFS, dst);\n+      if (!dstFS.mkdirs(dst)) {\n+        return false;\n+      }\n+      FileStatus contents[] \u003d srcFS.listStatus(src);\n+      for (int i \u003d 0; i \u003c contents.length; i++) {\n+        copy(srcFS, contents[i], dstFS,\n+             new Path(dst, contents[i].getPath().getName()),\n+             deleteSource, overwrite, conf);\n+      }\n+    } else {\n+      InputStream in\u003dnull;\n+      OutputStream out \u003d null;\n+      try {\n+        in \u003d srcFS.open(src);\n+        out \u003d dstFS.create(dst, overwrite);\n+        IOUtils.copyBytes(in, out, conf, true);\n+      } catch (IOException e) {\n+        IOUtils.closeStream(out);\n+        IOUtils.closeStream(in);\n+        throw e;\n+      }\n+    }\n+    if (deleteSource) {\n+      return srcFS.delete(src, true);\n+    } else {\n+      return true;\n+    }\n+  \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static boolean copy(FileSystem srcFS, FileStatus srcStatus,\n                              FileSystem dstFS, Path dst,\n                              boolean deleteSource,\n                              boolean overwrite,\n                              Configuration conf) throws IOException {\n    Path src \u003d srcStatus.getPath();\n    dst \u003d checkDest(src.getName(), dstFS, dst, overwrite);\n    if (srcStatus.isDir()) {\n      checkDependencies(srcFS, src, dstFS, dst);\n      if (!dstFS.mkdirs(dst)) {\n        return false;\n      }\n      FileStatus contents[] \u003d srcFS.listStatus(src);\n      for (int i \u003d 0; i \u003c contents.length; i++) {\n        copy(srcFS, contents[i], dstFS,\n             new Path(dst, contents[i].getPath().getName()),\n             deleteSource, overwrite, conf);\n      }\n    } else {\n      InputStream in\u003dnull;\n      OutputStream out \u003d null;\n      try {\n        in \u003d srcFS.open(src);\n        out \u003d dstFS.create(dst, overwrite);\n        IOUtils.copyBytes(in, out, conf, true);\n      } catch (IOException e) {\n        IOUtils.closeStream(out);\n        IOUtils.closeStream(in);\n        throw e;\n      }\n    }\n    if (deleteSource) {\n      return srcFS.delete(src, true);\n    } else {\n      return true;\n    }\n  \n  }",
      "path": "src/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}