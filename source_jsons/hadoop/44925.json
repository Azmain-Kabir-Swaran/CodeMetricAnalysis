{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMRMClient.java",
  "functionName": "waitFor",
  "functionId": "waitFor___check-Supplier__Boolean____checkEveryMillis-int__logInterval-int",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AMRMClient.java",
  "functionStartLine": 850,
  "functionEndLine": 873,
  "numCommitsSeen": 38,
  "timeTaken": 1674,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "ee3825e2783149db7a3d648f31cb1a483de64c0f"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "ee3825e2783149db7a3d648f31cb1a483de64c0f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "25/02/19 11:45 AM",
      "commitNameOld": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 18.15,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n   public void waitFor(Supplier\u003cBoolean\u003e check, int checkEveryMillis,\n       int logInterval) throws InterruptedException {\n     Preconditions.checkNotNull(check, \"check should not be null\");\n     Preconditions.checkArgument(checkEveryMillis \u003e\u003d 0,\n         \"checkEveryMillis should be positive value\");\n     Preconditions.checkArgument(logInterval \u003e\u003d 0,\n         \"logInterval should be positive value\");\n \n     int loggingCounter \u003d logInterval;\n     do {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Check the condition for main loop.\");\n-      }\n-\n+      LOG.debug(\"Check the condition for main loop.\");\n       boolean result \u003d check.get();\n       if (result) {\n         LOG.info(\"Exits the main loop.\");\n         return;\n       }\n       if (--loggingCounter \u003c\u003d 0) {\n         LOG.info(\"Waiting in main loop.\");\n         loggingCounter \u003d logInterval;\n       }\n \n       Thread.sleep(checkEveryMillis);\n     } while (true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void waitFor(Supplier\u003cBoolean\u003e check, int checkEveryMillis,\n      int logInterval) throws InterruptedException {\n    Preconditions.checkNotNull(check, \"check should not be null\");\n    Preconditions.checkArgument(checkEveryMillis \u003e\u003d 0,\n        \"checkEveryMillis should be positive value\");\n    Preconditions.checkArgument(logInterval \u003e\u003d 0,\n        \"logInterval should be positive value\");\n\n    int loggingCounter \u003d logInterval;\n    do {\n      LOG.debug(\"Check the condition for main loop.\");\n      boolean result \u003d check.get();\n      if (result) {\n        LOG.info(\"Exits the main loop.\");\n        return;\n      }\n      if (--loggingCounter \u003c\u003d 0) {\n        LOG.info(\"Waiting in main loop.\");\n        loggingCounter \u003d logInterval;\n      }\n\n      Thread.sleep(checkEveryMillis);\n    } while (true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AMRMClient.java",
      "extendedDetails": {}
    },
    "ee3825e2783149db7a3d648f31cb1a483de64c0f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1954. Added waitFor to AMRMClient(Async). Contributed by Tsuyoshi Ozawa.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617002 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/14 11:44 AM",
      "commitName": "ee3825e2783149db7a3d648f31cb1a483de64c0f",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,27 @@\n+  public void waitFor(Supplier\u003cBoolean\u003e check, int checkEveryMillis,\n+      int logInterval) throws InterruptedException {\n+    Preconditions.checkNotNull(check, \"check should not be null\");\n+    Preconditions.checkArgument(checkEveryMillis \u003e\u003d 0,\n+        \"checkEveryMillis should be positive value\");\n+    Preconditions.checkArgument(logInterval \u003e\u003d 0,\n+        \"logInterval should be positive value\");\n+\n+    int loggingCounter \u003d logInterval;\n+    do {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Check the condition for main loop.\");\n+      }\n+\n+      boolean result \u003d check.get();\n+      if (result) {\n+        LOG.info(\"Exits the main loop.\");\n+        return;\n+      }\n+      if (--loggingCounter \u003c\u003d 0) {\n+        LOG.info(\"Waiting in main loop.\");\n+        loggingCounter \u003d logInterval;\n+      }\n+\n+      Thread.sleep(checkEveryMillis);\n+    } while (true);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void waitFor(Supplier\u003cBoolean\u003e check, int checkEveryMillis,\n      int logInterval) throws InterruptedException {\n    Preconditions.checkNotNull(check, \"check should not be null\");\n    Preconditions.checkArgument(checkEveryMillis \u003e\u003d 0,\n        \"checkEveryMillis should be positive value\");\n    Preconditions.checkArgument(logInterval \u003e\u003d 0,\n        \"logInterval should be positive value\");\n\n    int loggingCounter \u003d logInterval;\n    do {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Check the condition for main loop.\");\n      }\n\n      boolean result \u003d check.get();\n      if (result) {\n        LOG.info(\"Exits the main loop.\");\n        return;\n      }\n      if (--loggingCounter \u003c\u003d 0) {\n        LOG.info(\"Waiting in main loop.\");\n        loggingCounter \u003d logInterval;\n      }\n\n      Thread.sleep(checkEveryMillis);\n    } while (true);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/AMRMClient.java"
    }
  }
}