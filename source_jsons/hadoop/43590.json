{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerFailureTracker.java",
  "functionName": "incNodeFailure",
  "functionId": "incNodeFailure___host-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ContainerFailureTracker.java",
  "functionStartLine": 62,
  "functionEndLine": 80,
  "numCommitsSeen": 4,
  "timeTaken": 2392,
  "changeHistory": [
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized void incNodeFailure(String host) {\n    int num \u003d 0;\n    if (failureCountPerNode.containsKey(host)) {\n      num \u003d failureCountPerNode.get(host);\n    }\n    num++;\n    failureCountPerNode.put(host, num);\n\n    // black list the node if exceed max failure\n    if (num \u003e maxFailurePerNode \u0026\u0026 !blackListedNodes.contains(host)) {\n      List\u003cString\u003e blacklists \u003d new ArrayList\u003c\u003e();\n      blacklists.add(host);\n      blackListedNodes.add(host);\n      context.scheduler.getAmRMClient().updateBlacklist(blacklists, null);\n      LOG.info(\"[COMPONENT {}]: Failed {} times on this host, blacklisted {}.\"\n              + \" Current list of blacklisted nodes: {}\",\n          component.getName(), num, host, blackListedNodes);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ContainerFailureTracker.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/ContainerFailureTracker.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/ContainerFailureTracker.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,19 @@\n+  public synchronized void incNodeFailure(String host) {\n+    int num \u003d 0;\n+    if (failureCountPerNode.containsKey(host)) {\n+      num \u003d failureCountPerNode.get(host);\n+    }\n+    num++;\n+    failureCountPerNode.put(host, num);\n+\n+    // black list the node if exceed max failure\n+    if (num \u003e maxFailurePerNode \u0026\u0026 !blackListedNodes.contains(host)) {\n+      List\u003cString\u003e blacklists \u003d new ArrayList\u003c\u003e();\n+      blacklists.add(host);\n+      blackListedNodes.add(host);\n+      context.scheduler.getAmRMClient().updateBlacklist(blacklists, null);\n+      LOG.info(\"[COMPONENT {}]: Failed {} times on this host, blacklisted {}.\"\n+              + \" Current list of blacklisted nodes: {}\",\n+          component.getName(), num, host, blackListedNodes);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void incNodeFailure(String host) {\n    int num \u003d 0;\n    if (failureCountPerNode.containsKey(host)) {\n      num \u003d failureCountPerNode.get(host);\n    }\n    num++;\n    failureCountPerNode.put(host, num);\n\n    // black list the node if exceed max failure\n    if (num \u003e maxFailurePerNode \u0026\u0026 !blackListedNodes.contains(host)) {\n      List\u003cString\u003e blacklists \u003d new ArrayList\u003c\u003e();\n      blacklists.add(host);\n      blackListedNodes.add(host);\n      context.scheduler.getAmRMClient().updateBlacklist(blacklists, null);\n      LOG.info(\"[COMPONENT {}]: Failed {} times on this host, blacklisted {}.\"\n              + \" Current list of blacklisted nodes: {}\",\n          component.getName(), num, host, blackListedNodes);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/ContainerFailureTracker.java"
    }
  }
}