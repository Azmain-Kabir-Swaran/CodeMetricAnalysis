{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Classpath.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Classpath.java",
  "functionStartLine": 64,
  "functionEndLine": 113,
  "numCommitsSeen": 2,
  "timeTaken": 692,
  "changeHistory": [
    "6637e3cf95b3a9be8d6b9cd66bc849a0607e8ed5",
    "2ad6da01c3cdaf79561175a24b6a7170e3dd89ef"
  ],
  "changeHistoryShort": {
    "6637e3cf95b3a9be8d6b9cd66bc849a0607e8ed5": "Ybodychange",
    "2ad6da01c3cdaf79561175a24b6a7170e3dd89ef": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6637e3cf95b3a9be8d6b9cd66bc849a0607e8ed5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2720. Windows: Wildcard classpath variables not expanded against resources contained in archives. Contributed by Craig Welch.\n",
      "commitDate": "21/10/14 12:33 PM",
      "commitName": "6637e3cf95b3a9be8d6b9cd66bc849a0607e8ed5",
      "commitAuthor": "cnauroth",
      "commitDateOld": "02/08/14 9:58 PM",
      "commitNameOld": "2ad6da01c3cdaf79561175a24b6a7170e3dd89ef",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 79.61,
      "commitsBetweenForRepo": 778,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,50 @@\n   public static void main(String[] args) {\n     if (args.length \u003c 1 || args[0].equals(\"-h\") || args[0].equals(\"--help\")) {\n       System.out.println(usage);\n       return;\n     }\n \n     // Copy args, because CommandFormat mutates the list.\n     List\u003cString\u003e argsList \u003d new ArrayList\u003cString\u003e(Arrays.asList(args));\n     CommandFormat cf \u003d new CommandFormat(0, Integer.MAX_VALUE, \"-glob\", \"-jar\");\n     try {\n       cf.parse(argsList);\n     } catch (UnknownOptionException e) {\n       terminate(1, \"unrecognized option\");\n       return;\n     }\n \n     String classPath \u003d System.getProperty(\"java.class.path\");\n \n     if (cf.getOpt(\"-glob\")) {\n       // The classpath returned from the property has been globbed already.\n       System.out.println(classPath);\n     } else if (cf.getOpt(\"-jar\")) {\n       if (argsList.isEmpty() || argsList.get(0) \u003d\u003d null ||\n           argsList.get(0).isEmpty()) {\n         terminate(1, \"-jar option requires path of jar file to write\");\n         return;\n       }\n \n       // Write the classpath into the manifest of a temporary jar file.\n       Path workingDir \u003d new Path(System.getProperty(\"user.dir\"));\n       final String tmpJarPath;\n       try {\n         tmpJarPath \u003d FileUtil.createJarWithClassPath(classPath, workingDir,\n-          System.getenv());\n+          System.getenv())[0];\n       } catch (IOException e) {\n         terminate(1, \"I/O error creating jar: \" + e.getMessage());\n         return;\n       }\n \n       // Rename the temporary file to its final location.\n       String jarPath \u003d argsList.get(0);\n       try {\n         FileUtil.replaceFile(new File(tmpJarPath), new File(jarPath));\n       } catch (IOException e) {\n         terminate(1, \"I/O error renaming jar temporary file to path: \" +\n           e.getMessage());\n         return;\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    if (args.length \u003c 1 || args[0].equals(\"-h\") || args[0].equals(\"--help\")) {\n      System.out.println(usage);\n      return;\n    }\n\n    // Copy args, because CommandFormat mutates the list.\n    List\u003cString\u003e argsList \u003d new ArrayList\u003cString\u003e(Arrays.asList(args));\n    CommandFormat cf \u003d new CommandFormat(0, Integer.MAX_VALUE, \"-glob\", \"-jar\");\n    try {\n      cf.parse(argsList);\n    } catch (UnknownOptionException e) {\n      terminate(1, \"unrecognized option\");\n      return;\n    }\n\n    String classPath \u003d System.getProperty(\"java.class.path\");\n\n    if (cf.getOpt(\"-glob\")) {\n      // The classpath returned from the property has been globbed already.\n      System.out.println(classPath);\n    } else if (cf.getOpt(\"-jar\")) {\n      if (argsList.isEmpty() || argsList.get(0) \u003d\u003d null ||\n          argsList.get(0).isEmpty()) {\n        terminate(1, \"-jar option requires path of jar file to write\");\n        return;\n      }\n\n      // Write the classpath into the manifest of a temporary jar file.\n      Path workingDir \u003d new Path(System.getProperty(\"user.dir\"));\n      final String tmpJarPath;\n      try {\n        tmpJarPath \u003d FileUtil.createJarWithClassPath(classPath, workingDir,\n          System.getenv())[0];\n      } catch (IOException e) {\n        terminate(1, \"I/O error creating jar: \" + e.getMessage());\n        return;\n      }\n\n      // Rename the temporary file to its final location.\n      String jarPath \u003d argsList.get(0);\n      try {\n        FileUtil.replaceFile(new File(tmpJarPath), new File(jarPath));\n      } catch (IOException e) {\n        terminate(1, \"I/O error renaming jar temporary file to path: \" +\n          e.getMessage());\n        return;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Classpath.java",
      "extendedDetails": {}
    },
    "2ad6da01c3cdaf79561175a24b6a7170e3dd89ef": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10903. Enhance hadoop classpath command to expand wildcards or write classpath into jar manifest. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/14 9:58 PM",
      "commitName": "2ad6da01c3cdaf79561175a24b6a7170e3dd89ef",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,50 @@\n+  public static void main(String[] args) {\n+    if (args.length \u003c 1 || args[0].equals(\"-h\") || args[0].equals(\"--help\")) {\n+      System.out.println(usage);\n+      return;\n+    }\n+\n+    // Copy args, because CommandFormat mutates the list.\n+    List\u003cString\u003e argsList \u003d new ArrayList\u003cString\u003e(Arrays.asList(args));\n+    CommandFormat cf \u003d new CommandFormat(0, Integer.MAX_VALUE, \"-glob\", \"-jar\");\n+    try {\n+      cf.parse(argsList);\n+    } catch (UnknownOptionException e) {\n+      terminate(1, \"unrecognized option\");\n+      return;\n+    }\n+\n+    String classPath \u003d System.getProperty(\"java.class.path\");\n+\n+    if (cf.getOpt(\"-glob\")) {\n+      // The classpath returned from the property has been globbed already.\n+      System.out.println(classPath);\n+    } else if (cf.getOpt(\"-jar\")) {\n+      if (argsList.isEmpty() || argsList.get(0) \u003d\u003d null ||\n+          argsList.get(0).isEmpty()) {\n+        terminate(1, \"-jar option requires path of jar file to write\");\n+        return;\n+      }\n+\n+      // Write the classpath into the manifest of a temporary jar file.\n+      Path workingDir \u003d new Path(System.getProperty(\"user.dir\"));\n+      final String tmpJarPath;\n+      try {\n+        tmpJarPath \u003d FileUtil.createJarWithClassPath(classPath, workingDir,\n+          System.getenv());\n+      } catch (IOException e) {\n+        terminate(1, \"I/O error creating jar: \" + e.getMessage());\n+        return;\n+      }\n+\n+      // Rename the temporary file to its final location.\n+      String jarPath \u003d argsList.get(0);\n+      try {\n+        FileUtil.replaceFile(new File(tmpJarPath), new File(jarPath));\n+      } catch (IOException e) {\n+        terminate(1, \"I/O error renaming jar temporary file to path: \" +\n+          e.getMessage());\n+        return;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    if (args.length \u003c 1 || args[0].equals(\"-h\") || args[0].equals(\"--help\")) {\n      System.out.println(usage);\n      return;\n    }\n\n    // Copy args, because CommandFormat mutates the list.\n    List\u003cString\u003e argsList \u003d new ArrayList\u003cString\u003e(Arrays.asList(args));\n    CommandFormat cf \u003d new CommandFormat(0, Integer.MAX_VALUE, \"-glob\", \"-jar\");\n    try {\n      cf.parse(argsList);\n    } catch (UnknownOptionException e) {\n      terminate(1, \"unrecognized option\");\n      return;\n    }\n\n    String classPath \u003d System.getProperty(\"java.class.path\");\n\n    if (cf.getOpt(\"-glob\")) {\n      // The classpath returned from the property has been globbed already.\n      System.out.println(classPath);\n    } else if (cf.getOpt(\"-jar\")) {\n      if (argsList.isEmpty() || argsList.get(0) \u003d\u003d null ||\n          argsList.get(0).isEmpty()) {\n        terminate(1, \"-jar option requires path of jar file to write\");\n        return;\n      }\n\n      // Write the classpath into the manifest of a temporary jar file.\n      Path workingDir \u003d new Path(System.getProperty(\"user.dir\"));\n      final String tmpJarPath;\n      try {\n        tmpJarPath \u003d FileUtil.createJarWithClassPath(classPath, workingDir,\n          System.getenv());\n      } catch (IOException e) {\n        terminate(1, \"I/O error creating jar: \" + e.getMessage());\n        return;\n      }\n\n      // Rename the temporary file to its final location.\n      String jarPath \u003d argsList.get(0);\n      try {\n        FileUtil.replaceFile(new File(tmpJarPath), new File(jarPath));\n      } catch (IOException e) {\n        terminate(1, \"I/O error renaming jar temporary file to path: \" +\n          e.getMessage());\n        return;\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/Classpath.java"
    }
  }
}