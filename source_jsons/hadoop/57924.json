{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ReplaceLabelsOnNodeRequestPBImpl.java",
  "functionName": "addNodeToLabelsToProto",
  "functionId": "addNodeToLabelsToProto",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/ReplaceLabelsOnNodeRequestPBImpl.java",
  "functionStartLine": 77,
  "functionEndLine": 113,
  "numCommitsSeen": 5,
  "timeTaken": 1236,
  "changeHistory": [
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d",
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87",
    "596702a02501e9cb09aabced168027189eaf02ba"
  ],
  "changeHistoryShort": {
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d": "Ybodychange",
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87": "Ybodychange",
    "596702a02501e9cb09aabced168027189eaf02ba": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1a6ca75f3872587fb34c995a4b372b8cd6366d7d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6143. Fix incompatible issue caused by YARN-3583. (Sunil G via wangda)\n",
      "commitDate": "22/02/17 11:17 AM",
      "commitName": "1a6ca75f3872587fb34c995a4b372b8cd6366d7d",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "02/10/16 11:02 PM",
      "commitNameOld": "6e130c308cf1b97e8386b6a43c26d72d2850119c",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 142.55,
      "commitsBetweenForRepo": 892,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private void addNodeToLabelsToProto() {\n     maybeInitBuilder();\n     builder.clearNodeToLabels();\n     if (nodeIdToLabels \u003d\u003d null) {\n       return;\n     }\n-    Iterable\u003cNodeIdToLabelsNameProto\u003e iterable \u003d\n-        new Iterable\u003cNodeIdToLabelsNameProto\u003e() {\n+    Iterable\u003cNodeIdToLabelsProto\u003e iterable \u003d\n+        new Iterable\u003cNodeIdToLabelsProto\u003e() {\n           @Override\n-          public Iterator\u003cNodeIdToLabelsNameProto\u003e iterator() {\n-            return new Iterator\u003cNodeIdToLabelsNameProto\u003e() {\n+          public Iterator\u003cNodeIdToLabelsProto\u003e iterator() {\n+            return new Iterator\u003cNodeIdToLabelsProto\u003e() {\n \n               Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n                   .entrySet().iterator();\n \n               @Override\n               public void remove() {\n                 throw new UnsupportedOperationException();\n               }\n \n               @Override\n-              public NodeIdToLabelsNameProto next() {\n+              public NodeIdToLabelsProto next() {\n                 Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n-                return NodeIdToLabelsNameProto.newBuilder()\n+                return NodeIdToLabelsProto.newBuilder()\n                     .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n                     .addAllNodeLabels(now.getValue()).build();\n               }\n \n               @Override\n               public boolean hasNext() {\n                 return iter.hasNext();\n               }\n             };\n           }\n         };\n     builder.addAllNodeToLabels(iterable);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addNodeToLabelsToProto() {\n    maybeInitBuilder();\n    builder.clearNodeToLabels();\n    if (nodeIdToLabels \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cNodeIdToLabelsProto\u003e iterable \u003d\n        new Iterable\u003cNodeIdToLabelsProto\u003e() {\n          @Override\n          public Iterator\u003cNodeIdToLabelsProto\u003e iterator() {\n            return new Iterator\u003cNodeIdToLabelsProto\u003e() {\n\n              Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n                  .entrySet().iterator();\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n\n              @Override\n              public NodeIdToLabelsProto next() {\n                Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n                return NodeIdToLabelsProto.newBuilder()\n                    .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n                    .addAllNodeLabels(now.getValue()).build();\n              }\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n            };\n          }\n        };\n    builder.addAllNodeToLabels(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/ReplaceLabelsOnNodeRequestPBImpl.java",
      "extendedDetails": {}
    },
    "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3583. Support of NodeLabel object instead of plain String in YarnClient side. (Sunil G via wangda)\n",
      "commitDate": "19/05/15 4:54 PM",
      "commitName": "563eb1ad2ae848a23bbbf32ebfaf107e8fa14e87",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "30/10/14 10:59 PM",
      "commitNameOld": "e0233c16ebd06bb3aabeb523cd17259008e243ef",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 200.75,
      "commitsBetweenForRepo": 1706,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   private void addNodeToLabelsToProto() {\n     maybeInitBuilder();\n     builder.clearNodeToLabels();\n     if (nodeIdToLabels \u003d\u003d null) {\n       return;\n     }\n-    Iterable\u003cNodeIdToLabelsProto\u003e iterable \u003d\n-        new Iterable\u003cNodeIdToLabelsProto\u003e() {\n+    Iterable\u003cNodeIdToLabelsNameProto\u003e iterable \u003d\n+        new Iterable\u003cNodeIdToLabelsNameProto\u003e() {\n           @Override\n-          public Iterator\u003cNodeIdToLabelsProto\u003e iterator() {\n-            return new Iterator\u003cNodeIdToLabelsProto\u003e() {\n+          public Iterator\u003cNodeIdToLabelsNameProto\u003e iterator() {\n+            return new Iterator\u003cNodeIdToLabelsNameProto\u003e() {\n \n               Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n                   .entrySet().iterator();\n \n               @Override\n               public void remove() {\n                 throw new UnsupportedOperationException();\n               }\n \n               @Override\n-              public NodeIdToLabelsProto next() {\n+              public NodeIdToLabelsNameProto next() {\n                 Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n-                return NodeIdToLabelsProto.newBuilder()\n+                return NodeIdToLabelsNameProto.newBuilder()\n                     .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n                     .addAllNodeLabels(now.getValue()).build();\n               }\n \n               @Override\n               public boolean hasNext() {\n                 return iter.hasNext();\n               }\n             };\n           }\n         };\n     builder.addAllNodeToLabels(iterable);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addNodeToLabelsToProto() {\n    maybeInitBuilder();\n    builder.clearNodeToLabels();\n    if (nodeIdToLabels \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cNodeIdToLabelsNameProto\u003e iterable \u003d\n        new Iterable\u003cNodeIdToLabelsNameProto\u003e() {\n          @Override\n          public Iterator\u003cNodeIdToLabelsNameProto\u003e iterator() {\n            return new Iterator\u003cNodeIdToLabelsNameProto\u003e() {\n\n              Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n                  .entrySet().iterator();\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n\n              @Override\n              public NodeIdToLabelsNameProto next() {\n                Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n                return NodeIdToLabelsNameProto.newBuilder()\n                    .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n                    .addAllNodeLabels(now.getValue()).build();\n              }\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n            };\n          }\n        };\n    builder.addAllNodeToLabels(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/ReplaceLabelsOnNodeRequestPBImpl.java",
      "extendedDetails": {}
    },
    "596702a02501e9cb09aabced168027189eaf02ba": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2544. Added admin-API objects for using node-labels. Contributed by Wangda Tan.\n",
      "commitDate": "09/10/14 3:46 PM",
      "commitName": "596702a02501e9cb09aabced168027189eaf02ba",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,37 @@\n+  private void addNodeToLabelsToProto() {\n+    maybeInitBuilder();\n+    builder.clearNodeToLabels();\n+    if (nodeIdToLabels \u003d\u003d null) {\n+      return;\n+    }\n+    Iterable\u003cNodeIdToLabelsProto\u003e iterable \u003d\n+        new Iterable\u003cNodeIdToLabelsProto\u003e() {\n+          @Override\n+          public Iterator\u003cNodeIdToLabelsProto\u003e iterator() {\n+            return new Iterator\u003cNodeIdToLabelsProto\u003e() {\n+\n+              Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n+                  .entrySet().iterator();\n+\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+\n+              @Override\n+              public NodeIdToLabelsProto next() {\n+                Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n+                return NodeIdToLabelsProto.newBuilder()\n+                    .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n+                    .addAllNodeLabels(now.getValue()).build();\n+              }\n+\n+              @Override\n+              public boolean hasNext() {\n+                return iter.hasNext();\n+              }\n+            };\n+          }\n+        };\n+    builder.addAllNodeToLabels(iterable);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addNodeToLabelsToProto() {\n    maybeInitBuilder();\n    builder.clearNodeToLabels();\n    if (nodeIdToLabels \u003d\u003d null) {\n      return;\n    }\n    Iterable\u003cNodeIdToLabelsProto\u003e iterable \u003d\n        new Iterable\u003cNodeIdToLabelsProto\u003e() {\n          @Override\n          public Iterator\u003cNodeIdToLabelsProto\u003e iterator() {\n            return new Iterator\u003cNodeIdToLabelsProto\u003e() {\n\n              Iterator\u003cEntry\u003cNodeId, Set\u003cString\u003e\u003e\u003e iter \u003d nodeIdToLabels\n                  .entrySet().iterator();\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n\n              @Override\n              public NodeIdToLabelsProto next() {\n                Entry\u003cNodeId, Set\u003cString\u003e\u003e now \u003d iter.next();\n                return NodeIdToLabelsProto.newBuilder()\n                    .setNodeId(convertToProtoFormat(now.getKey())).clearNodeLabels()\n                    .addAllNodeLabels(now.getValue()).build();\n              }\n\n              @Override\n              public boolean hasNext() {\n                return iter.hasNext();\n              }\n            };\n          }\n        };\n    builder.addAllNodeToLabels(iterable);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/ReplaceLabelsOnNodeRequestPBImpl.java"
    }
  }
}