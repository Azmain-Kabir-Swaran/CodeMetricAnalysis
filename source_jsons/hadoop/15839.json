{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSOperations.java",
  "functionName": "aclStatusToJSON",
  "functionId": "aclStatusToJSON___aclStatus-AclStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
  "functionStartLine": 186,
  "functionEndLine": 201,
  "numCommitsSeen": 52,
  "timeTaken": 2391,
  "changeHistory": [
    "061421fc6d66405e7109d17b8818ea023ef3acc2",
    "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "061421fc6d66405e7109d17b8818ea023ef3acc2": "Ybodychange",
    "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "061421fc6d66405e7109d17b8818ea023ef3acc2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15145. HttpFS: getAclStatus() returns permission as null. Contributed by hemanthboyina.\n",
      "commitDate": "28/01/20 10:04 AM",
      "commitName": "061421fc6d66405e7109d17b8818ea023ef3acc2",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "06/01/20 6:10 PM",
      "commitNameOld": "59aac002834aaeb6475faad4c894b8c764957f68",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 21.66,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n     Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n     Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n     JSONArray entriesArray \u003d new JSONArray();\n     inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n     inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n+    inner.put(HttpFSFileSystem.PERMISSION_JSON,\n+        HttpFSFileSystem.permissionToString(aclStatus.getPermission()));\n     inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n     for ( AclEntry e : aclStatus.getEntries() ) {\n       entriesArray.add(e.toString());\n     }\n     inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n     json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n     return json;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n    JSONArray entriesArray \u003d new JSONArray();\n    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n    inner.put(HttpFSFileSystem.PERMISSION_JSON,\n        HttpFSFileSystem.permissionToString(aclStatus.getPermission()));\n    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n    for ( AclEntry e : aclStatus.getEntries() ) {\n      entriesArray.add(e.toString());\n    }\n    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n    return json;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
      "extendedDetails": {}
    },
    "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 3:35 PM",
      "commitName": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
      "commitAuthor": "Alejandro Abdelnur",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 3:35 PM",
          "commitName": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "01/02/13 11:42 AM",
          "commitNameOld": "bbdae834d2ec26b329b48b4c9343ebb182a63242",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 495.12,
          "commitsBetweenForRepo": 3154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private static Map fileStatusToJSON(FileStatus[] status) {\n-    JSONArray json \u003d new JSONArray();\n-    if (status !\u003d null) {\n-      for (FileStatus s : status) {\n-        json.add(fileStatusToJSONRaw(s, false));\n-      }\n+  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n+    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    JSONArray entriesArray \u003d new JSONArray();\n+    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n+    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n+    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n+    for ( AclEntry e : aclStatus.getEntries() ) {\n+      entriesArray.add(e.toString());\n     }\n-    Map response \u003d new LinkedHashMap();\n-    Map temp \u003d new LinkedHashMap();\n-    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n-    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n-    return response;\n+    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n+    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n+    return json;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n    JSONArray entriesArray \u003d new JSONArray();\n    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n    for ( AclEntry e : aclStatus.getEntries() ) {\n      entriesArray.add(e.toString());\n    }\n    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n    return json;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "fileStatusToJSON",
            "newValue": "aclStatusToJSON"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 3:35 PM",
          "commitName": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "01/02/13 11:42 AM",
          "commitNameOld": "bbdae834d2ec26b329b48b4c9343ebb182a63242",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 495.12,
          "commitsBetweenForRepo": 3154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private static Map fileStatusToJSON(FileStatus[] status) {\n-    JSONArray json \u003d new JSONArray();\n-    if (status !\u003d null) {\n-      for (FileStatus s : status) {\n-        json.add(fileStatusToJSONRaw(s, false));\n-      }\n+  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n+    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    JSONArray entriesArray \u003d new JSONArray();\n+    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n+    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n+    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n+    for ( AclEntry e : aclStatus.getEntries() ) {\n+      entriesArray.add(e.toString());\n     }\n-    Map response \u003d new LinkedHashMap();\n-    Map temp \u003d new LinkedHashMap();\n-    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n-    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n-    return response;\n+    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n+    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n+    return json;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n    JSONArray entriesArray \u003d new JSONArray();\n    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n    for ( AclEntry e : aclStatus.getEntries() ) {\n      entriesArray.add(e.toString());\n    }\n    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n    return json;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "[status-FileStatus[]]",
            "newValue": "[aclStatus-AclStatus]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 3:35 PM",
          "commitName": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "01/02/13 11:42 AM",
          "commitNameOld": "bbdae834d2ec26b329b48b4c9343ebb182a63242",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 495.12,
          "commitsBetweenForRepo": 3154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private static Map fileStatusToJSON(FileStatus[] status) {\n-    JSONArray json \u003d new JSONArray();\n-    if (status !\u003d null) {\n-      for (FileStatus s : status) {\n-        json.add(fileStatusToJSONRaw(s, false));\n-      }\n+  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n+    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    JSONArray entriesArray \u003d new JSONArray();\n+    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n+    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n+    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n+    for ( AclEntry e : aclStatus.getEntries() ) {\n+      entriesArray.add(e.toString());\n     }\n-    Map response \u003d new LinkedHashMap();\n-    Map temp \u003d new LinkedHashMap();\n-    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n-    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n-    return response;\n+    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n+    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n+    return json;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n    JSONArray entriesArray \u003d new JSONArray();\n    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n    for ( AclEntry e : aclStatus.getEntries() ) {\n      entriesArray.add(e.toString());\n    }\n    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n    return json;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {
            "oldValue": "Map",
            "newValue": "Map\u003cString,Object\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6379. HTTPFS - Implement ACLs support. (yoderme via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602040 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "11/06/14 3:35 PM",
          "commitName": "8bfbec8cfb7fe7c7affef98b17c1a07b81fe27f0",
          "commitAuthor": "Alejandro Abdelnur",
          "commitDateOld": "01/02/13 11:42 AM",
          "commitNameOld": "bbdae834d2ec26b329b48b4c9343ebb182a63242",
          "commitAuthorOld": "Alejandro Abdelnur",
          "daysBetweenCommits": 495.12,
          "commitsBetweenForRepo": 3154,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private static Map fileStatusToJSON(FileStatus[] status) {\n-    JSONArray json \u003d new JSONArray();\n-    if (status !\u003d null) {\n-      for (FileStatus s : status) {\n-        json.add(fileStatusToJSONRaw(s, false));\n-      }\n+  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n+    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n+    JSONArray entriesArray \u003d new JSONArray();\n+    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n+    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n+    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n+    for ( AclEntry e : aclStatus.getEntries() ) {\n+      entriesArray.add(e.toString());\n     }\n-    Map response \u003d new LinkedHashMap();\n-    Map temp \u003d new LinkedHashMap();\n-    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n-    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n-    return response;\n+    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n+    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n+    return json;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static Map\u003cString,Object\u003e aclStatusToJSON(AclStatus aclStatus) {\n    Map\u003cString,Object\u003e json \u003d new LinkedHashMap\u003cString,Object\u003e();\n    Map\u003cString,Object\u003e inner \u003d new LinkedHashMap\u003cString,Object\u003e();\n    JSONArray entriesArray \u003d new JSONArray();\n    inner.put(HttpFSFileSystem.OWNER_JSON, aclStatus.getOwner());\n    inner.put(HttpFSFileSystem.GROUP_JSON, aclStatus.getGroup());\n    inner.put(HttpFSFileSystem.ACL_STICKY_BIT_JSON, aclStatus.isStickyBit());\n    for ( AclEntry e : aclStatus.getEntries() ) {\n      entriesArray.add(e.toString());\n    }\n    inner.put(HttpFSFileSystem.ACL_ENTRIES_JSON, entriesArray);\n    json.put(HttpFSFileSystem.ACL_STATUS_JSON, inner);\n    return json;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java",
          "extendedDetails": {}
        }
      ]
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,13 @@\n+  private static Map fileStatusToJSON(FileStatus[] status) {\n+    JSONArray json \u003d new JSONArray();\n+    if (status !\u003d null) {\n+      for (FileStatus s : status) {\n+        json.add(fileStatusToJSONRaw(s, false));\n+      }\n+    }\n+    Map response \u003d new LinkedHashMap();\n+    Map temp \u003d new LinkedHashMap();\n+    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n+    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Map fileStatusToJSON(FileStatus[] status) {\n    JSONArray json \u003d new JSONArray();\n    if (status !\u003d null) {\n      for (FileStatus s : status) {\n        json.add(fileStatusToJSONRaw(s, false));\n      }\n    }\n    Map response \u003d new LinkedHashMap();\n    Map temp \u003d new LinkedHashMap();\n    temp.put(HttpFSFileSystem.FILE_STATUS_JSON, json);\n    response.put(HttpFSFileSystem.FILE_STATUSES_JSON, temp);\n    return response;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/fs/http/server/FSOperations.java"
    }
  }
}