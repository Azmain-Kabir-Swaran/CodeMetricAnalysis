{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HostsFileReader.java",
  "functionName": "readFileToMapWithFileInputStream",
  "functionId": "readFileToMapWithFileInputStream___type-String__filename-String__inputStream-InputStream__map-Map__String,Integer__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
  "functionStartLine": 130,
  "functionEndLine": 144,
  "numCommitsSeen": 16,
  "timeTaken": 1152,
  "changeHistory": [
    "0da69c324dee9baab0f0b9700db1cc5b623f8421"
  ],
  "changeHistoryShort": {
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0da69c324dee9baab0f0b9700db1cc5b623f8421": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4676. Automatic and Asynchronous Decommissioning Nodes Status Tracking. Contributed by Diniel Zhi.\n(cherry picked from commit d464483bf7f0b3e3be3ba32cd6c3eee546747ab5)\n\nConflicts:\n\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNode.java\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/rmnode/RMNodeImpl.java\n",
      "commitDate": "18/08/16 7:27 AM",
      "commitName": "0da69c324dee9baab0f0b9700db1cc5b623f8421",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,15 @@\n+  public static void readFileToMapWithFileInputStream(String type,\n+      String filename, InputStream inputStream, Map\u003cString, Integer\u003e map)\n+          throws IOException {\n+    // The input file could be either simple text or XML.\n+    boolean xmlInput \u003d filename.toLowerCase().endsWith(\".xml\");\n+    if (xmlInput) {\n+      readXmlFileToMapWithFileInputStream(type, filename, inputStream, map);\n+    } else {\n+      HashSet\u003cString\u003e nodes \u003d new HashSet\u003cString\u003e();\n+      readFileToSetWithFileInputStream(type, filename, inputStream, nodes);\n+      for (String node : nodes) {\n+        map.put(node, null);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void readFileToMapWithFileInputStream(String type,\n      String filename, InputStream inputStream, Map\u003cString, Integer\u003e map)\n          throws IOException {\n    // The input file could be either simple text or XML.\n    boolean xmlInput \u003d filename.toLowerCase().endsWith(\".xml\");\n    if (xmlInput) {\n      readXmlFileToMapWithFileInputStream(type, filename, inputStream, map);\n    } else {\n      HashSet\u003cString\u003e nodes \u003d new HashSet\u003cString\u003e();\n      readFileToSetWithFileInputStream(type, filename, inputStream, nodes);\n      for (String node : nodes) {\n        map.put(node, null);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java"
    }
  }
}