{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataNode.java",
  "functionName": "createInterDataNodeProtocolProxy",
  "functionId": "createInterDataNodeProtocolProxy___datanodeid-DatanodeID__conf-Configuration(modifiers-final)__socketTimeout-int(modifiers-final)__connectToDnViaHostname-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java",
  "functionStartLine": 1882,
  "functionEndLine": 1902,
  "numCommitsSeen": 358,
  "timeTaken": 2130,
  "changeHistory": [
    "dfcb331ba3516264398121c9f23af3a79c0509cc"
  ],
  "changeHistoryShort": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dfcb331ba3516264398121c9f23af3a79c0509cc": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13076: [SPS]: Addendum. Resolve conflicts after rebasing branch to trunk. Contributed by Rakesh R.\n",
      "commitDate": "12/08/18 3:06 AM",
      "commitName": "dfcb331ba3516264398121c9f23af3a79c0509cc",
      "commitAuthor": "Rakesh Radhakrishnan",
      "diff": "@@ -0,0 +1,21 @@\n+  public static InterDatanodeProtocol createInterDataNodeProtocolProxy(\n+      DatanodeID datanodeid, final Configuration conf, final int socketTimeout,\n+      final boolean connectToDnViaHostname) throws IOException {\n+    final String dnAddr \u003d datanodeid.getIpcAddr(connectToDnViaHostname);\n+    final InetSocketAddress addr \u003d NetUtils.createSocketAddr(dnAddr);\n+    LOG.debug(\"Connecting to datanode {} addr\u003d{}\",\n+        dnAddr, addr);\n+    final UserGroupInformation loginUgi \u003d UserGroupInformation.getLoginUser();\n+    try {\n+      return loginUgi\n+          .doAs(new PrivilegedExceptionAction\u003cInterDatanodeProtocol\u003e() {\n+            @Override\n+            public InterDatanodeProtocol run() throws IOException {\n+              return new InterDatanodeProtocolTranslatorPB(addr, loginUgi,\n+                  conf, NetUtils.getDefaultSocketFactory(conf), socketTimeout);\n+            }\n+          });\n+    } catch (InterruptedException ie) {\n+      throw new IOException(ie.getMessage());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static InterDatanodeProtocol createInterDataNodeProtocolProxy(\n      DatanodeID datanodeid, final Configuration conf, final int socketTimeout,\n      final boolean connectToDnViaHostname) throws IOException {\n    final String dnAddr \u003d datanodeid.getIpcAddr(connectToDnViaHostname);\n    final InetSocketAddress addr \u003d NetUtils.createSocketAddr(dnAddr);\n    LOG.debug(\"Connecting to datanode {} addr\u003d{}\",\n        dnAddr, addr);\n    final UserGroupInformation loginUgi \u003d UserGroupInformation.getLoginUser();\n    try {\n      return loginUgi\n          .doAs(new PrivilegedExceptionAction\u003cInterDatanodeProtocol\u003e() {\n            @Override\n            public InterDatanodeProtocol run() throws IOException {\n              return new InterDatanodeProtocolTranslatorPB(addr, loginUgi,\n                  conf, NetUtils.getDefaultSocketFactory(conf), socketTimeout);\n            }\n          });\n    } catch (InterruptedException ie) {\n      throw new IOException(ie.getMessage());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataNode.java"
    }
  }
}