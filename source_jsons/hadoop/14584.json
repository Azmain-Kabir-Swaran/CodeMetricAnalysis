{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSUtil.java",
  "functionName": "getNameServiceId",
  "functionId": "getNameServiceId___conf-Configuration__addressKey-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
  "functionStartLine": 1121,
  "functionEndLine": 1133,
  "numCommitsSeen": 166,
  "timeTaken": 7312,
  "changeHistory": [
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "260dfa367e3c161edcc9d2b2217661710199c95e",
    "296b6c0063a319f4b80e8f62468be95f39d4f4e3",
    "9146ad23f3f1af7c5547fba08e2a867cee49e015",
    "7ca7832158333e4ddcd6914596ff7d781c9283fe",
    "ab0402bc1def44e3d52eea517f4132c460bd5f87",
    "9992cae54120d2742922745c1f513c6bfbde67a9",
    "e9dd78d9fede044101627786d991bec3265205a4",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "260dfa367e3c161edcc9d2b2217661710199c95e": "Ybodychange",
    "296b6c0063a319f4b80e8f62468be95f39d4f4e3": "Ybodychange",
    "9146ad23f3f1af7c5547fba08e2a867cee49e015": "Ybodychange",
    "7ca7832158333e4ddcd6914596ff7d781c9283fe": "Ybodychange",
    "ab0402bc1def44e3d52eea517f4132c460bd5f87": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "9992cae54120d2742922745c1f513c6bfbde67a9": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "e9dd78d9fede044101627786d991bec3265205a4": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/04/15 12:36 AM",
      "commitNameOld": "5c97db07fb306842f49d73a67a90cecec19a7833",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 1.89,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private static String getNameServiceId(Configuration conf, String addressKey) {\n     String nameserviceId \u003d conf.get(DFS_NAMESERVICE_ID);\n     if (nameserviceId !\u003d null) {\n       return nameserviceId;\n     }\n-    Collection\u003cString\u003e nsIds \u003d getNameServiceIds(conf);\n+    Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n     if (1 \u003d\u003d nsIds.size()) {\n       return nsIds.toArray(new String[1])[0];\n     }\n     String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n     \n     return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    Collection\u003cString\u003e nsIds \u003d DFSUtilClient.getNameServiceIds(conf);\n    if (1 \u003d\u003d nsIds.size()) {\n      return nsIds.toArray(new String[1])[0];\n    }\n    String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n    \n    return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "260dfa367e3c161edcc9d2b2217661710199c95e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2885. Remove \"federation\" from the nameservice config options. Contributed by Tsz Wo (Nicholas), SZE\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1340841 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/05/12 2:13 PM",
      "commitName": "260dfa367e3c161edcc9d2b2217661710199c95e",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "14/05/12 9:25 AM",
      "commitNameOld": "05c5fcfb422ec6284e3c18531e91b206975616df",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 6.2,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   private static String getNameServiceId(Configuration conf, String addressKey) {\n-    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    String nameserviceId \u003d conf.get(DFS_NAMESERVICE_ID);\n     if (nameserviceId !\u003d null) {\n       return nameserviceId;\n     }\n     Collection\u003cString\u003e nsIds \u003d getNameServiceIds(conf);\n     if (1 \u003d\u003d nsIds.size()) {\n       return nsIds.toArray(new String[1])[0];\n     }\n     String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n     \n     return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    Collection\u003cString\u003e nsIds \u003d getNameServiceIds(conf);\n    if (1 \u003d\u003d nsIds.size()) {\n      return nsIds.toArray(new String[1])[0];\n    }\n    String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n    \n    return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "296b6c0063a319f4b80e8f62468be95f39d4f4e3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2894. HA: automatically determine the nameservice Id if only one nameservice is configured. Contributed by Eli Collins\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1240917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/02/12 12:25 AM",
      "commitName": "296b6c0063a319f4b80e8f62468be95f39d4f4e3",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "06/02/12 12:21 AM",
      "commitNameOld": "c17b4f8eefe5b77b77761a0bb46b49cd1ea6965d",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,13 @@\n   private static String getNameServiceId(Configuration conf, String addressKey) {\n     String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n     if (nameserviceId !\u003d null) {\n       return nameserviceId;\n     }\n+    Collection\u003cString\u003e nsIds \u003d getNameServiceIds(conf);\n+    if (1 \u003d\u003d nsIds.size()) {\n+      return nsIds.toArray(new String[1])[0];\n+    }\n     String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n     \n     return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    Collection\u003cString\u003e nsIds \u003d getNameServiceIds(conf);\n    if (1 \u003d\u003d nsIds.size()) {\n      return nsIds.toArray(new String[1])[0];\n    }\n    String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n    \n    return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "9146ad23f3f1af7c5547fba08e2a867cee49e015": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2582. Scope dfs.ha.namenodes config by nameservice. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1207738 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/11 6:27 PM",
      "commitName": "9146ad23f3f1af7c5547fba08e2a867cee49e015",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/11/11 7:18 PM",
      "commitNameOld": "6a0671977b0d51f143df6171f3621532c04eef04",
      "commitAuthorOld": "",
      "daysBetweenCommits": 6.96,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,9 @@\n   private static String getNameServiceId(Configuration conf, String addressKey) {\n     String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n     if (nameserviceId !\u003d null) {\n       return nameserviceId;\n     }\n-    if (!isFederationEnabled(conf)) {\n-      return null;\n-    }\n-    nameserviceId \u003d getSuffixIDs(conf, addressKey, LOCAL_ADDRESS_MATCHER)[0];\n-    if (nameserviceId \u003d\u003d null) {\n-      String msg \u003d \"Configuration \" + addressKey + \" must be suffixed with\" +\n-      \t\t\" nameserviceId for federation configuration.\";\n-      throw new HadoopIllegalArgumentException(msg);\n-    }\n-    return nameserviceId;\n+    String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n+    \n+    return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    String nnId \u003d conf.get(DFS_HA_NAMENODE_ID_KEY);\n    \n    return getSuffixIDs(conf, addressKey, null, nnId, LOCAL_ADDRESS_MATCHER)[0];\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "7ca7832158333e4ddcd6914596ff7d781c9283fe": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2231. Configuration changes for HA namenode. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1182626 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/10/11 5:09 PM",
      "commitName": "7ca7832158333e4ddcd6914596ff7d781c9283fe",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "06/10/11 4:26 PM",
      "commitNameOld": "8b4f497af85b49519da2e05e8269db6c4e9d621f",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 6.03,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,16 @@\n   private static String getNameServiceId(Configuration conf, String addressKey) {\n     String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n     if (nameserviceId !\u003d null) {\n       return nameserviceId;\n     }\n-    \n-    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n-    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n-      // Not federation configuration, hence no nameservice Id\n+    if (!isFederationEnabled(conf)) {\n       return null;\n     }\n-    \n-    // Match the rpc address with that of local address\n-    int found \u003d 0;\n-    for (String id : ids) {\n-      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n-      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n-      if (NetUtils.isLocalAddress(s.getAddress())) {\n-        nameserviceId \u003d id;\n-        found++;\n-      }\n-    }\n-    if (found \u003e 1) { // Only one address must match the local address\n-      throw new HadoopIllegalArgumentException(\n-          \"Configuration has multiple RPC addresses that matches \"\n-              + \"the local node\u0027s address. Please configure the system with \"\n-              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n-    }\n-    if (found \u003d\u003d 0) {\n-      throw new HadoopIllegalArgumentException(\"Configuration address \"\n-          + addressKey + \" is missing in configuration with name service Id\");\n+    nameserviceId \u003d getSuffixIDs(conf, addressKey, LOCAL_ADDRESS_MATCHER)[0];\n+    if (nameserviceId \u003d\u003d null) {\n+      String msg \u003d \"Configuration \" + addressKey + \" must be suffixed with\" +\n+      \t\t\" nameserviceId for federation configuration.\";\n+      throw new HadoopIllegalArgumentException(msg);\n     }\n     return nameserviceId;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    if (!isFederationEnabled(conf)) {\n      return null;\n    }\n    nameserviceId \u003d getSuffixIDs(conf, addressKey, LOCAL_ADDRESS_MATCHER)[0];\n    if (nameserviceId \u003d\u003d null) {\n      String msg \u003d \"Configuration \" + addressKey + \" must be suffixed with\" +\n      \t\t\" nameserviceId for federation configuration.\";\n      throw new HadoopIllegalArgumentException(msg);\n    }\n    return nameserviceId;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {}
    },
    "ab0402bc1def44e3d52eea517f4132c460bd5f87": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Merging trunk to HDFS-1623 branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177130 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 5:42 PM",
      "commitName": "ab0402bc1def44e3d52eea517f4132c460bd5f87",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Merging trunk to HDFS-1623 branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:42 PM",
          "commitName": "ab0402bc1def44e3d52eea517f4132c460bd5f87",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:33 PM",
          "commitNameOld": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[conf-Configuration, addressKey-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Merging trunk to HDFS-1623 branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:42 PM",
          "commitName": "ab0402bc1def44e3d52eea517f4132c460bd5f87",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:33 PM",
          "commitNameOld": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Merging trunk to HDFS-1623 branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177130 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:42 PM",
          "commitName": "ab0402bc1def44e3d52eea517f4132c460bd5f87",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:33 PM",
          "commitNameOld": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "9992cae54120d2742922745c1f513c6bfbde67a9": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "Reverting the previous trunk merge since it added other unintended changes in addition\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 5:33 PM",
      "commitName": "9992cae54120d2742922745c1f513c6bfbde67a9",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "Reverting the previous trunk merge since it added other unintended changes in addition\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:33 PM",
          "commitName": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:09 PM",
          "commitNameOld": "122113922fd398b1a76c1664b58a61661e936e30",
          "commitAuthorOld": "",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,3 @@\n-  private static String getNameServiceId(Configuration conf, String addressKey) {\n-    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n-    if (nameserviceId !\u003d null) {\n-      return nameserviceId;\n-    }\n-    \n-    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n-    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n-      // Not federation configuration, hence no nameservice Id\n-      return null;\n-    }\n-    \n-    // Match the rpc address with that of local address\n-    int found \u003d 0;\n-    for (String id : ids) {\n-      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n-      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n-      if (NetUtils.isLocalAddress(s.getAddress())) {\n-        nameserviceId \u003d id;\n-        found++;\n-      }\n-    }\n-    if (found \u003e 1) { // Only one address must match the local address\n-      throw new HadoopIllegalArgumentException(\n-          \"Configuration has multiple RPC addresses that matches \"\n-              + \"the local node\u0027s address. Please configure the system with \"\n-              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n-    }\n-    if (found \u003d\u003d 0) {\n-      throw new HadoopIllegalArgumentException(\"Configuration address \"\n-          + addressKey + \" is missing in configuration with name service Id\");\n-    }\n-    return nameserviceId;\n+  public static String getNameServiceId(Configuration conf) {\n+    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration, addressKey-String]",
            "newValue": "[conf-Configuration]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "Reverting the previous trunk merge since it added other unintended changes in addition\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:33 PM",
          "commitName": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:09 PM",
          "commitNameOld": "122113922fd398b1a76c1664b58a61661e936e30",
          "commitAuthorOld": "",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,3 @@\n-  private static String getNameServiceId(Configuration conf, String addressKey) {\n-    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n-    if (nameserviceId !\u003d null) {\n-      return nameserviceId;\n-    }\n-    \n-    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n-    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n-      // Not federation configuration, hence no nameservice Id\n-      return null;\n-    }\n-    \n-    // Match the rpc address with that of local address\n-    int found \u003d 0;\n-    for (String id : ids) {\n-      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n-      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n-      if (NetUtils.isLocalAddress(s.getAddress())) {\n-        nameserviceId \u003d id;\n-        found++;\n-      }\n-    }\n-    if (found \u003e 1) { // Only one address must match the local address\n-      throw new HadoopIllegalArgumentException(\n-          \"Configuration has multiple RPC addresses that matches \"\n-              + \"the local node\u0027s address. Please configure the system with \"\n-              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n-    }\n-    if (found \u003d\u003d 0) {\n-      throw new HadoopIllegalArgumentException(\"Configuration address \"\n-          + addressKey + \" is missing in configuration with name service Id\");\n-    }\n-    return nameserviceId;\n+  public static String getNameServiceId(Configuration conf) {\n+    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "Reverting the previous trunk merge since it added other unintended changes in addition\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1177127 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 5:33 PM",
          "commitName": "9992cae54120d2742922745c1f513c6bfbde67a9",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "28/09/11 5:09 PM",
          "commitNameOld": "122113922fd398b1a76c1664b58a61661e936e30",
          "commitAuthorOld": "",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,34 +1,3 @@\n-  private static String getNameServiceId(Configuration conf, String addressKey) {\n-    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n-    if (nameserviceId !\u003d null) {\n-      return nameserviceId;\n-    }\n-    \n-    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n-    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n-      // Not federation configuration, hence no nameservice Id\n-      return null;\n-    }\n-    \n-    // Match the rpc address with that of local address\n-    int found \u003d 0;\n-    for (String id : ids) {\n-      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n-      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n-      if (NetUtils.isLocalAddress(s.getAddress())) {\n-        nameserviceId \u003d id;\n-        found++;\n-      }\n-    }\n-    if (found \u003e 1) { // Only one address must match the local address\n-      throw new HadoopIllegalArgumentException(\n-          \"Configuration has multiple RPC addresses that matches \"\n-              + \"the local node\u0027s address. Please configure the system with \"\n-              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n-    }\n-    if (found \u003d\u003d 0) {\n-      throw new HadoopIllegalArgumentException(\"Configuration address \"\n-          + addressKey + \" is missing in configuration with name service Id\");\n-    }\n-    return nameserviceId;\n+  public static String getNameServiceId(Configuration conf) {\n+    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "e9dd78d9fede044101627786d991bec3265205a4": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2355. Federation: enable using the same configuration file across all the nodes in the cluster. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/09/11 3:58 PM",
      "commitName": "e9dd78d9fede044101627786d991bec3265205a4",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-2355. Federation: enable using the same configuration file across all the nodes in the cluster. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177100 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 3:58 PM",
          "commitName": "e9dd78d9fede044101627786d991bec3265205a4",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "04/09/11 12:30 PM",
          "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 24.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration]",
            "newValue": "[conf-Configuration, addressKey-String]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2355. Federation: enable using the same configuration file across all the nodes in the cluster. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177100 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 3:58 PM",
          "commitName": "e9dd78d9fede044101627786d991bec3265205a4",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "04/09/11 12:30 PM",
          "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 24.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2355. Federation: enable using the same configuration file across all the nodes in the cluster. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177100 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "28/09/11 3:58 PM",
          "commitName": "e9dd78d9fede044101627786d991bec3265205a4",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "04/09/11 12:30 PM",
          "commitNameOld": "8ae98a9d1ca4725e28783370517cb3a3ecda7324",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 24.14,
          "commitsBetweenForRepo": 172,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,3 +1,34 @@\n-  public static String getNameServiceId(Configuration conf) {\n-    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  private static String getNameServiceId(Configuration conf, String addressKey) {\n+    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+    if (nameserviceId !\u003d null) {\n+      return nameserviceId;\n+    }\n+    \n+    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n+    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n+      // Not federation configuration, hence no nameservice Id\n+      return null;\n+    }\n+    \n+    // Match the rpc address with that of local address\n+    int found \u003d 0;\n+    for (String id : ids) {\n+      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n+      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n+      if (NetUtils.isLocalAddress(s.getAddress())) {\n+        nameserviceId \u003d id;\n+        found++;\n+      }\n+    }\n+    if (found \u003e 1) { // Only one address must match the local address\n+      throw new HadoopIllegalArgumentException(\n+          \"Configuration has multiple RPC addresses that matches \"\n+              + \"the local node\u0027s address. Please configure the system with \"\n+              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n+    }\n+    if (found \u003d\u003d 0) {\n+      throw new HadoopIllegalArgumentException(\"Configuration address \"\n+          + addressKey + \" is missing in configuration with name service Id\");\n+    }\n+    return nameserviceId;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static String getNameServiceId(Configuration conf, String addressKey) {\n    String nameserviceId \u003d conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n    if (nameserviceId !\u003d null) {\n      return nameserviceId;\n    }\n    \n    Collection\u003cString\u003e ids \u003d getNameServiceIds(conf);\n    if (ids \u003d\u003d null || ids.size() \u003d\u003d 0) {\n      // Not federation configuration, hence no nameservice Id\n      return null;\n    }\n    \n    // Match the rpc address with that of local address\n    int found \u003d 0;\n    for (String id : ids) {\n      String addr \u003d conf.get(getNameServiceIdKey(addressKey, id));\n      InetSocketAddress s \u003d NetUtils.createSocketAddr(addr);\n      if (NetUtils.isLocalAddress(s.getAddress())) {\n        nameserviceId \u003d id;\n        found++;\n      }\n    }\n    if (found \u003e 1) { // Only one address must match the local address\n      throw new HadoopIllegalArgumentException(\n          \"Configuration has multiple RPC addresses that matches \"\n              + \"the local node\u0027s address. Please configure the system with \"\n              + \"the parameter \" + DFS_FEDERATION_NAMESERVICE_ID);\n    }\n    if (found \u003d\u003d 0) {\n      throw new HadoopIllegalArgumentException(\"Configuration address \"\n          + addressKey + \" is missing in configuration with name service Id\");\n    }\n    return nameserviceId;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSUtil.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,3 @@\n+  public static String getNameServiceId(Configuration conf) {\n+    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String getNameServiceId(Configuration conf) {\n    return conf.get(DFS_FEDERATION_NAMESERVICE_ID);\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSUtil.java"
    }
  }
}