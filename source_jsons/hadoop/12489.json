{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Dispatcher.java",
  "functionName": "chooseNextMove",
  "functionId": "chooseNextMove",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
  "functionStartLine": 880,
  "functionEndLine": 902,
  "numCommitsSeen": 110,
  "timeTaken": 8794,
  "changeHistory": [
    "8c9b44eaffb776e71a41358864cb5c28ecd8bfec",
    "673280df24f0228bf01777035ceeab8807da8c40",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1",
    "e60673697d5046c29c52bbabdfe80506f99773e4",
    "c3cf331dc91e2beef2afeed11105084843b02858",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8c9b44eaffb776e71a41358864cb5c28ecd8bfec": "Ybodychange",
    "673280df24f0228bf01777035ceeab8807da8c40": "Ybodychange",
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": "Ybodychange",
    "e60673697d5046c29c52bbabdfe80506f99773e4": "Ybodychange",
    "c3cf331dc91e2beef2afeed11105084843b02858": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yrename)",
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": "Ybodychange",
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c9b44eaffb776e71a41358864cb5c28ecd8bfec": {
      "type": "Ybodychange",
      "commitMessage": "In Balancer, the target task should be removed when its size \u003c 0.  Contributed by Yiqun Lin\n",
      "commitDate": "04/08/16 9:45 AM",
      "commitName": "8c9b44eaffb776e71a41358864cb5c28ecd8bfec",
      "commitAuthor": "Tsz-Wo Nicholas Sze",
      "commitDateOld": "03/08/16 10:14 AM",
      "commitNameOld": "58db263e93daf08280e6a586a10cebd6122cf72a",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 0.98,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final DDatanode target \u003d task.target.getDDatanode();\n         final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n         if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.reportedBlock.getNumBytes(this);\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n-            if (task.size \u003d\u003d 0) {\n+            if (task.size \u003c\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final DDatanode target \u003d task.target.getDDatanode();\n        final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.reportedBlock.getNumBytes(this);\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003c\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "673280df24f0228bf01777035ceeab8807da8c40": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7621. Erasure Coding: update the Balancer/Mover data migration logic. Contributed by Walter Su.\n",
      "commitDate": "03/06/15 11:51 AM",
      "commitName": "673280df24f0228bf01777035ceeab8807da8c40",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "05/05/15 3:41 PM",
      "commitNameOld": "4da8490b512a33a255ed27309860859388d7c168",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 28.84,
      "commitsBetweenForRepo": 380,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n     private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final DDatanode target \u003d task.target.getDDatanode();\n         final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n         if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           if (pendingBlock.chooseBlockAndProxy()) {\n-            long blockSize \u003d pendingBlock.block.getNumBytes();\n+            long blockSize \u003d pendingBlock.reportedBlock.getNumBytes(this);\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final DDatanode target \u003d task.target.getDDatanode();\n        final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.reportedBlock.getNumBytes(this);\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "8ea20b53a861a2771c206afaacf8e7783568c4b1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6911. Archival Storage: check if a block is already scheduled in Mover. Contributed by Tsz Wo Nicholas Sze.\n",
      "commitDate": "27/08/14 10:38 AM",
      "commitName": "8ea20b53a861a2771c206afaacf8e7783568c4b1",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "18/08/14 10:51 AM",
      "commitNameOld": "5d5aae0694bc27df5b9fa50819854cd3050a8658",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 8.99,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,23 @@\n     private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final DDatanode target \u003d task.target.getDDatanode();\n-        PendingMove pendingBlock \u003d new PendingMove();\n+        final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n         if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n-          pendingBlock.source \u003d this;\n-          pendingBlock.target \u003d task.target;\n           if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final DDatanode target \u003d task.target.getDDatanode();\n        final PendingMove pendingBlock \u003d new PendingMove(this, task.target);\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "e60673697d5046c29c52bbabdfe80506f99773e4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6837. Code cleanup for Balancer and Dispatcher. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617337 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/08/14 11:01 AM",
      "commitName": "e60673697d5046c29c52bbabdfe80506f99773e4",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "08/08/14 2:33 PM",
      "commitNameOld": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 2.85,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n-        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n+        final DDatanode target \u003d task.target.getDDatanode();\n         PendingMove pendingBlock \u003d new PendingMove();\n         if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d task.target;\n           if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final DDatanode target \u003d task.target.getDDatanode();\n        PendingMove pendingBlock \u003d new PendingMove();\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
      "extendedDetails": {}
    },
    "c3cf331dc91e2beef2afeed11105084843b02858": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange,Yrename)",
      "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 2:33 PM",
      "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    private PendingBlockMove chooseNextBlockToMove() {\n+    private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n-        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n-        if (target.addPendingBlock(pendingBlock)) { \n+        PendingMove pendingBlock \u003d new PendingMove();\n+        if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d task.target;\n-          if ( pendingBlock.chooseBlockAndProxy() ) {\n+          if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n        PendingMove pendingBlock \u003d new PendingMove();\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
            "oldMethodName": "chooseNextBlockToMove",
            "newMethodName": "chooseNextMove"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    private PendingBlockMove chooseNextBlockToMove() {\n+    private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n-        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n-        if (target.addPendingBlock(pendingBlock)) { \n+        PendingMove pendingBlock \u003d new PendingMove();\n+        if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d task.target;\n-          if ( pendingBlock.chooseBlockAndProxy() ) {\n+          if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n        PendingMove pendingBlock \u003d new PendingMove();\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {
            "oldValue": "PendingBlockMove",
            "newValue": "PendingMove"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    private PendingBlockMove chooseNextBlockToMove() {\n+    private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n-        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n-        if (target.addPendingBlock(pendingBlock)) { \n+        PendingMove pendingBlock \u003d new PendingMove();\n+        if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d task.target;\n-          if ( pendingBlock.chooseBlockAndProxy() ) {\n+          if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n        PendingMove pendingBlock \u003d new PendingMove();\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-6828. Separate block replica dispatching from Balancer. Contributed by Tsz Wo Nicholas Sze.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616889 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/08/14 2:33 PM",
          "commitName": "c3cf331dc91e2beef2afeed11105084843b02858",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "08/08/14 2:22 PM",
          "commitNameOld": "05d1bf4157e6660610f11951845e59899260596e",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 0.01,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,25 @@\n-    private PendingBlockMove chooseNextBlockToMove() {\n+    private PendingMove chooseNextMove() {\n       for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n         final Task task \u003d i.next();\n         final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n-        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n-        if (target.addPendingBlock(pendingBlock)) { \n+        PendingMove pendingBlock \u003d new PendingMove();\n+        if (target.addPendingBlock(pendingBlock)) {\n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d task.target;\n-          if ( pendingBlock.chooseBlockAndProxy() ) {\n+          if (pendingBlock.chooseBlockAndProxy()) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n             incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
          "actualSource": "    private PendingMove chooseNextMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n        PendingMove pendingBlock \u003d new PendingMove();\n        if (target.addPendingBlock(pendingBlock)) {\n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if (pendingBlock.chooseBlockAndProxy()) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Dispatcher.java",
          "extendedDetails": {
            "oldValue": "chooseNextBlockToMove",
            "newValue": "chooseNextMove"
          }
        }
      ]
    },
    "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6685. Balancer should preserve storage type of replicas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615015 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/07/14 6:05 PM",
      "commitName": "b8597e6a10b2e8df1bee4e8ce0c8be345f7e007d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "30/07/14 11:02 PM",
      "commitNameOld": "b8b8f3f5e7214d6fcfc30e1b94ff097e52868f4f",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.79,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private PendingBlockMove chooseNextBlockToMove() {\n-      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n-        NodeTask task \u003d tasks.next();\n-        BalancerDatanode target \u003d task.getDatanode();\n+      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n+        final Task task \u003d i.next();\n+        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n         PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n         if (target.addPendingBlock(pendingBlock)) { \n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n-          pendingBlock.target \u003d target;\n+          pendingBlock.target \u003d task.target;\n           if ( pendingBlock.chooseBlockAndProxy() ) {\n             long blockSize \u003d pendingBlock.block.getNumBytes();\n-            decScheduledSize(blockSize);\n+            incScheduledSize(-blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n-              tasks.remove();\n+              i.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingBlockMove chooseNextBlockToMove() {\n      for (Iterator\u003cTask\u003e i \u003d tasks.iterator(); i.hasNext();) {\n        final Task task \u003d i.next();\n        final BalancerDatanode target \u003d task.target.getBalancerDatanode();\n        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n        if (target.addPendingBlock(pendingBlock)) { \n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d task.target;\n          if ( pendingBlock.chooseBlockAndProxy() ) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            incScheduledSize(-blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              i.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4376. Fix race conditions in Balancer.  Contributed by Junping Du\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1532932 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/10/13 4:06 PM",
      "commitName": "1ba58e2e2c7778d7c44ba6cd72ac4aa0f288ded8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "16/07/13 7:04 AM",
      "commitNameOld": "2d6049f1d683529c9e6372f33ee9b91fcfdbd3bd",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 92.38,
      "commitsBetweenForRepo": 584,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private PendingBlockMove chooseNextBlockToMove() {\n       for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n         NodeTask task \u003d tasks.next();\n         BalancerDatanode target \u003d task.getDatanode();\n         PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n         if (target.addPendingBlock(pendingBlock)) { \n           // target is not busy, so do a tentative block allocation\n           pendingBlock.source \u003d this;\n           pendingBlock.target \u003d target;\n           if ( pendingBlock.chooseBlockAndProxy() ) {\n-            long blockSize \u003d pendingBlock.block.getNumBytes(); \n-            scheduledSize -\u003d blockSize;\n+            long blockSize \u003d pendingBlock.block.getNumBytes();\n+            decScheduledSize(blockSize);\n             task.size -\u003d blockSize;\n             if (task.size \u003d\u003d 0) {\n               tasks.remove();\n             }\n             return pendingBlock;\n           } else {\n             // cancel the tentative move\n             target.removePendingBlock(pendingBlock);\n           }\n         }\n       }\n       return null;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingBlockMove chooseNextBlockToMove() {\n      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n        NodeTask task \u003d tasks.next();\n        BalancerDatanode target \u003d task.getDatanode();\n        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n        if (target.addPendingBlock(pendingBlock)) { \n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d target;\n          if ( pendingBlock.chooseBlockAndProxy() ) {\n            long blockSize \u003d pendingBlock.block.getNumBytes();\n            decScheduledSize(blockSize);\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              tasks.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private PendingBlockMove chooseNextBlockToMove() {\n      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n        NodeTask task \u003d tasks.next();\n        BalancerDatanode target \u003d task.getDatanode();\n        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n        if ( target.addPendingBlock(pendingBlock) ) { \n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d target;\n          if ( pendingBlock.chooseBlockAndProxy() ) {\n            long blockSize \u003d pendingBlock.block.getNumBytes(); \n            scheduledSize -\u003d blockSize;\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              tasks.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private PendingBlockMove chooseNextBlockToMove() {\n      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n        NodeTask task \u003d tasks.next();\n        BalancerDatanode target \u003d task.getDatanode();\n        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n        if ( target.addPendingBlock(pendingBlock) ) { \n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d target;\n          if ( pendingBlock.chooseBlockAndProxy() ) {\n            long blockSize \u003d pendingBlock.block.getNumBytes(); \n            scheduledSize -\u003d blockSize;\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              tasks.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,25 @@\n+    private PendingBlockMove chooseNextBlockToMove() {\n+      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n+        NodeTask task \u003d tasks.next();\n+        BalancerDatanode target \u003d task.getDatanode();\n+        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n+        if ( target.addPendingBlock(pendingBlock) ) { \n+          // target is not busy, so do a tentative block allocation\n+          pendingBlock.source \u003d this;\n+          pendingBlock.target \u003d target;\n+          if ( pendingBlock.chooseBlockAndProxy() ) {\n+            long blockSize \u003d pendingBlock.block.getNumBytes(); \n+            scheduledSize -\u003d blockSize;\n+            task.size -\u003d blockSize;\n+            if (task.size \u003d\u003d 0) {\n+              tasks.remove();\n+            }\n+            return pendingBlock;\n+          } else {\n+            // cancel the tentative move\n+            target.removePendingBlock(pendingBlock);\n+          }\n+        }\n+      }\n+      return null;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private PendingBlockMove chooseNextBlockToMove() {\n      for ( Iterator\u003cNodeTask\u003e tasks\u003dnodeTasks.iterator(); tasks.hasNext(); ) {\n        NodeTask task \u003d tasks.next();\n        BalancerDatanode target \u003d task.getDatanode();\n        PendingBlockMove pendingBlock \u003d new PendingBlockMove();\n        if ( target.addPendingBlock(pendingBlock) ) { \n          // target is not busy, so do a tentative block allocation\n          pendingBlock.source \u003d this;\n          pendingBlock.target \u003d target;\n          if ( pendingBlock.chooseBlockAndProxy() ) {\n            long blockSize \u003d pendingBlock.block.getNumBytes(); \n            scheduledSize -\u003d blockSize;\n            task.size -\u003d blockSize;\n            if (task.size \u003d\u003d 0) {\n              tasks.remove();\n            }\n            return pendingBlock;\n          } else {\n            // cancel the tentative move\n            target.removePendingBlock(pendingBlock);\n          }\n        }\n      }\n      return null;\n    }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/balancer/Balancer.java"
    }
  }
}