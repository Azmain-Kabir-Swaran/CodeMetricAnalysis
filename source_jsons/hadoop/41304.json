{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSAppAttempt.java",
  "functionName": "trackContainerForPreemption",
  "functionId": "trackContainerForPreemption___container-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
  "functionStartLine": 564,
  "functionEndLine": 571,
  "numCommitsSeen": 76,
  "timeTaken": 3119,
  "changeHistory": [
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa",
    "a77f432449aad67da31bd8bf8644b71def741bde",
    "08f93978f3ec724b24a93d7ef538f158da75802f",
    "10468529a9b858bd945e7ecb063c9c1438efa474"
  ],
  "changeHistoryShort": {
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa": "Ybodychange",
    "a77f432449aad67da31bd8bf8644b71def741bde": "Ybodychange",
    "08f93978f3ec724b24a93d7ef538f158da75802f": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7049. FSAppAttempt preemption related fields have confusing names. (Contributed by Karthik Kambatla via Yufei Gu)\n",
      "commitDate": "24/08/17 5:52 PM",
      "commitName": "9e2699ac2c99d8df85191dd7fbf9468b00f5b5aa",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "02/08/17 9:25 AM",
      "commitNameOld": "45535f8afae4e5bf4f60597fc29ba94b4e7743f3",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 22.35,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   void trackContainerForPreemption(RMContainer container) {\n     synchronized (preemptionVariablesLock) {\n-      if (containersToPreempt.add(container)) {\n-        Resources.addTo(preemptedResources, container.getAllocatedResource());\n+      if (containersToBePreempted.add(container)) {\n+        Resources.addTo(resourcesToBePreempted,\n+            container.getAllocatedResource());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void trackContainerForPreemption(RMContainer container) {\n    synchronized (preemptionVariablesLock) {\n      if (containersToBePreempted.add(container)) {\n        Resources.addTo(resourcesToBePreempted,\n            container.getAllocatedResource());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "a77f432449aad67da31bd8bf8644b71def741bde": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6171. ConcurrentModificationException on FSAppAttempt.containersToPreempt. (Miklos Szegedi via kasha)\n",
      "commitDate": "16/02/17 2:54 PM",
      "commitName": "a77f432449aad67da31bd8bf8644b71def741bde",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "15/02/17 11:16 PM",
      "commitNameOld": "6c25dbcdc0517a825b92fb16444aa1d3761e160c",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 0.65,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   void trackContainerForPreemption(RMContainer container) {\n-    if (containersToPreempt.add(container)) {\n-      synchronized (preemptedResources) {\n+    synchronized (preemptionVariablesLock) {\n+      if (containersToPreempt.add(container)) {\n         Resources.addTo(preemptedResources, container.getAllocatedResource());\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void trackContainerForPreemption(RMContainer container) {\n    synchronized (preemptionVariablesLock) {\n      if (containersToPreempt.add(container)) {\n        Resources.addTo(preemptedResources, container.getAllocatedResource());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "08f93978f3ec724b24a93d7ef538f158da75802f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6144. FairScheduler: preempted resources can become negative. (Miklos Szegedi via kasha)\n",
      "commitDate": "09/02/17 2:45 PM",
      "commitName": "08f93978f3ec724b24a93d7ef538f158da75802f",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/01/17 5:01 PM",
      "commitNameOld": "e224c9623493d6c4c2f3ff731fd3c72c0f448b19",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 22.91,
      "commitsBetweenForRepo": 104,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,7 @@\n   void trackContainerForPreemption(RMContainer container) {\n-    containersToPreempt.add(container);\n-    synchronized (preemptedResources) {\n-      Resources.addTo(preemptedResources, container.getAllocatedResource());\n+    if (containersToPreempt.add(container)) {\n+      synchronized (preemptedResources) {\n+        Resources.addTo(preemptedResources, container.getAllocatedResource());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void trackContainerForPreemption(RMContainer container) {\n    if (containersToPreempt.add(container)) {\n      synchronized (preemptedResources) {\n        Resources.addTo(preemptedResources, container.getAllocatedResource());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,6 @@\n+  void trackContainerForPreemption(RMContainer container) {\n+    containersToPreempt.add(container);\n+    synchronized (preemptedResources) {\n+      Resources.addTo(preemptedResources, container.getAllocatedResource());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void trackContainerForPreemption(RMContainer container) {\n    containersToPreempt.add(container);\n    synchronized (preemptedResources) {\n      Resources.addTo(preemptedResources, container.getAllocatedResource());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSAppAttempt.java"
    }
  }
}