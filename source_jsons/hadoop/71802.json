{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSACLs.java",
  "functionName": "parseAclsWithPrefix",
  "functionId": "parseAclsWithPrefix___conf-Configuration(modifiers-final)__prefix-String(modifiers-final)__keyOp-KeyOpType(modifiers-final)__results-Map__KeyOpType,AccessControlList__",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java",
  "functionStartLine": 174,
  "functionEndLine": 190,
  "numCommitsSeen": 14,
  "timeTaken": 944,
  "changeHistory": [
    "9daa9979a1f92fb3230361c10ddfcc1633795c0e"
  ],
  "changeHistoryShort": {
    "9daa9979a1f92fb3230361c10ddfcc1633795c0e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9daa9979a1f92fb3230361c10ddfcc1633795c0e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13437. KMS should reload whitelist and default key ACLs when hot-reloading. Contributed by Xiao Chen.\n",
      "commitDate": "15/08/16 6:14 PM",
      "commitName": "9daa9979a1f92fb3230361c10ddfcc1633795c0e",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,17 @@\n+  private void parseAclsWithPrefix(final Configuration conf,\n+      final String prefix, final KeyOpType keyOp,\n+      Map\u003cKeyOpType, AccessControlList\u003e results) {\n+    String confKey \u003d prefix + keyOp;\n+    String aclStr \u003d conf.get(confKey);\n+    if (aclStr !\u003d null) {\n+      if (keyOp \u003d\u003d KeyOpType.ALL) {\n+        // Ignore All operation for default key and whitelist key acls\n+        LOG.warn(\"Invalid KEY_OP \u0027{}\u0027 for {}, ignoring\", keyOp, prefix);\n+      } else {\n+        if (aclStr.equals(\"*\")) {\n+          LOG.info(\"{} for KEY_OP \u0027{}\u0027 is set to \u0027*\u0027\", prefix, keyOp);\n+        }\n+        results.put(keyOp, new AccessControlList(aclStr));\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void parseAclsWithPrefix(final Configuration conf,\n      final String prefix, final KeyOpType keyOp,\n      Map\u003cKeyOpType, AccessControlList\u003e results) {\n    String confKey \u003d prefix + keyOp;\n    String aclStr \u003d conf.get(confKey);\n    if (aclStr !\u003d null) {\n      if (keyOp \u003d\u003d KeyOpType.ALL) {\n        // Ignore All operation for default key and whitelist key acls\n        LOG.warn(\"Invalid KEY_OP \u0027{}\u0027 for {}, ignoring\", keyOp, prefix);\n      } else {\n        if (aclStr.equals(\"*\")) {\n          LOG.info(\"{} for KEY_OP \u0027{}\u0027 is set to \u0027*\u0027\", prefix, keyOp);\n        }\n        results.put(keyOp, new AccessControlList(aclStr));\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSACLs.java"
    }
  }
}