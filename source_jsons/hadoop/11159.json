{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParameterParser.java",
  "functionName": "delegationToken",
  "functionId": "delegationToken",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/ParameterParser.java",
  "functionStartLine": 124,
  "functionEndLine": 138,
  "numCommitsSeen": 13,
  "timeTaken": 1314,
  "changeHistory": [
    "6f8003dc7bc9e8be7b0512c514d370c303faf003",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4"
  ],
  "changeHistoryShort": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": "Ybodychange",
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6f8003dc7bc9e8be7b0512c514d370c303faf003": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8185. Separate client related routines in HAUtil into a new class. Contributed by Haohui Mai.\n",
      "commitDate": "21/04/15 9:59 PM",
      "commitName": "6f8003dc7bc9e8be7b0512c514d370c303faf003",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "19/03/15 6:01 AM",
      "commitNameOld": "e79be0ee123d05104eb34eb854afcf9fa78baef2",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 33.67,
      "commitsBetweenForRepo": 285,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   Token\u003cDelegationTokenIdentifier\u003e delegationToken() throws IOException {\n     String delegation \u003d param(DelegationParam.NAME);\n     final Token\u003cDelegationTokenIdentifier\u003e token \u003d new\n       Token\u003cDelegationTokenIdentifier\u003e();\n     token.decodeFromUrlString(delegation);\n     URI nnUri \u003d URI.create(HDFS_URI_SCHEME + \"://\" + namenodeId());\n-    boolean isLogical \u003d HAUtil.isLogicalUri(conf, nnUri);\n+    boolean isLogical \u003d HAUtilClient.isLogicalUri(conf, nnUri);\n     if (isLogical) {\n-      token.setService(HAUtil.buildTokenServiceForLogicalUri(nnUri,\n-        HDFS_URI_SCHEME));\n+      token.setService(\n+          HAUtilClient.buildTokenServiceForLogicalUri(nnUri, HDFS_URI_SCHEME));\n     } else {\n       token.setService(SecurityUtil.buildTokenService(nnUri));\n     }\n     return token;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Token\u003cDelegationTokenIdentifier\u003e delegationToken() throws IOException {\n    String delegation \u003d param(DelegationParam.NAME);\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d new\n      Token\u003cDelegationTokenIdentifier\u003e();\n    token.decodeFromUrlString(delegation);\n    URI nnUri \u003d URI.create(HDFS_URI_SCHEME + \"://\" + namenodeId());\n    boolean isLogical \u003d HAUtilClient.isLogicalUri(conf, nnUri);\n    if (isLogical) {\n      token.setService(\n          HAUtilClient.buildTokenServiceForLogicalUri(nnUri, HDFS_URI_SCHEME));\n    } else {\n      token.setService(SecurityUtil.buildTokenService(nnUri));\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/ParameterParser.java",
      "extendedDetails": {}
    },
    "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-7279. Use netty to implement DatanodeWebHdfsMethods. Contributed by Haohui Mai.\n",
      "commitDate": "17/11/14 11:42 AM",
      "commitName": "bf8e4332cb4c33d0287ae6ecca61b335402ac1c4",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,15 @@\n+  Token\u003cDelegationTokenIdentifier\u003e delegationToken() throws IOException {\n+    String delegation \u003d param(DelegationParam.NAME);\n+    final Token\u003cDelegationTokenIdentifier\u003e token \u003d new\n+      Token\u003cDelegationTokenIdentifier\u003e();\n+    token.decodeFromUrlString(delegation);\n+    URI nnUri \u003d URI.create(HDFS_URI_SCHEME + \"://\" + namenodeId());\n+    boolean isLogical \u003d HAUtil.isLogicalUri(conf, nnUri);\n+    if (isLogical) {\n+      token.setService(HAUtil.buildTokenServiceForLogicalUri(nnUri,\n+        HDFS_URI_SCHEME));\n+    } else {\n+      token.setService(SecurityUtil.buildTokenService(nnUri));\n+    }\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Token\u003cDelegationTokenIdentifier\u003e delegationToken() throws IOException {\n    String delegation \u003d param(DelegationParam.NAME);\n    final Token\u003cDelegationTokenIdentifier\u003e token \u003d new\n      Token\u003cDelegationTokenIdentifier\u003e();\n    token.decodeFromUrlString(delegation);\n    URI nnUri \u003d URI.create(HDFS_URI_SCHEME + \"://\" + namenodeId());\n    boolean isLogical \u003d HAUtil.isLogicalUri(conf, nnUri);\n    if (isLogical) {\n      token.setService(HAUtil.buildTokenServiceForLogicalUri(nnUri,\n        HDFS_URI_SCHEME));\n    } else {\n      token.setService(SecurityUtil.buildTokenService(nnUri));\n    }\n    return token;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/web/webhdfs/ParameterParser.java"
    }
  }
}