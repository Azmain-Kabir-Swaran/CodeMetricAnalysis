{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegisterNodeManagerRequestPBImpl.java",
  "functionName": "mergeLocalToBuilder",
  "functionId": "mergeLocalToBuilder",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
  "functionStartLine": 88,
  "functionEndLine": 124,
  "numCommitsSeen": 18,
  "timeTaken": 10033,
  "changeHistory": [
    "f659485ee83f3f34e3717631983adfc8fa1e53dc",
    "4bf622043f034835d65ff2a4785b9b06d0ef1fd2",
    "e718ac597f2225cb4946e1ac4b3986c336645643",
    "4d53ef7eefb14661d824924e503a910de1ae997f",
    "3f93ac0733058238a2c8f23960c986c71dca0e02",
    "c9a09d6926b258e205a4ff7998ce5a86bf5dbe3b",
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
    "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
    "23c325ad47e305989b7f2cf172bd709f73dd26d1",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": "Ybodychange",
    "4bf622043f034835d65ff2a4785b9b06d0ef1fd2": "Ybodychange",
    "e718ac597f2225cb4946e1ac4b3986c336645643": "Ybodychange",
    "4d53ef7eefb14661d824924e503a910de1ae997f": "Ybodychange",
    "3f93ac0733058238a2c8f23960c986c71dca0e02": "Ybodychange",
    "c9a09d6926b258e205a4ff7998ce5a86bf5dbe3b": "Ymodifierchange",
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59": "Ybodychange",
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": "Ybodychange",
    "95897ca14b7abd7fe047fdcf150473a8a2cbb024": "Ybodychange",
    "23c325ad47e305989b7f2cf172bd709f73dd26d1": "Ybodychange",
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f659485ee83f3f34e3717631983adfc8fa1e53dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8925. Updating distributed node attributes only when necessary. Contributed by Tao Yang.\n",
      "commitDate": "20/12/18 6:56 PM",
      "commitName": "f659485ee83f3f34e3717631983adfc8fa1e53dc",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "15/03/18 1:26 PM",
      "commitNameOld": "4bf622043f034835d65ff2a4785b9b06d0ef1fd2",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 280.27,
      "commitsBetweenForRepo": 2773,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,37 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n+    if (this.attributes !\u003d null) {\n+      builder.clearNodeAttributes();\n+      NodeAttributesProto.Builder attributesBuilder \u003d\n+          NodeAttributesProto.newBuilder();\n+      for (NodeAttribute attribute : attributes) {\n+        attributesBuilder.addNodeAttributes(convertToProtoFormat(attribute));\n+      }\n+      builder.setNodeAttributes(attributesBuilder.build());\n+    }\n     if (this.physicalResource !\u003d null) {\n       builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n     }\n     if (this.logAggregationReportsForApps !\u003d null) {\n       addLogAggregationStatusForAppsToProto();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.attributes !\u003d null) {\n      builder.clearNodeAttributes();\n      NodeAttributesProto.Builder attributesBuilder \u003d\n          NodeAttributesProto.newBuilder();\n      for (NodeAttribute attribute : attributes) {\n        attributesBuilder.addNodeAttributes(convertToProtoFormat(attribute));\n      }\n      builder.setNodeAttributes(attributesBuilder.build());\n    }\n    if (this.physicalResource !\u003d null) {\n      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "4bf622043f034835d65ff2a4785b9b06d0ef1fd2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7952. RM should be able to recover log aggregation status after restart/fail-over. (Xuan Gong via wangda)\n\nChange-Id: I725c9afe64831eda0aa6b0bebdbc79d2dd165707\n",
      "commitDate": "15/03/18 1:26 PM",
      "commitName": "4bf622043f034835d65ff2a4785b9b06d0ef1fd2",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/03/18 3:46 PM",
      "commitNameOld": "e718ac597f2225cb4946e1ac4b3986c336645643",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 7.86,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.physicalResource !\u003d null) {\n       builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n     }\n+    if (this.logAggregationReportsForApps !\u003d null) {\n+      addLogAggregationStatusForAppsToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.physicalResource !\u003d null) {\n      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n      addLogAggregationStatusForAppsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "e718ac597f2225cb4946e1ac4b3986c336645643": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7891. LogAggregationIndexedFileController should support read from HAR file. (Xuan Gong via wangda)\"\n\nThis reverts commit 4d53ef7eefb14661d824924e503a910de1ae997f.\n",
      "commitDate": "07/03/18 3:46 PM",
      "commitName": "e718ac597f2225cb4946e1ac4b3986c336645643",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "07/03/18 11:30 AM",
      "commitNameOld": "4d53ef7eefb14661d824924e503a910de1ae997f",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 0.18,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,25 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.physicalResource !\u003d null) {\n       builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n     }\n-    if (this.logAggregationReportsForApps !\u003d null) {\n-        addLogAggregationStatusForAppsToProto();\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.physicalResource !\u003d null) {\n      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "4d53ef7eefb14661d824924e503a910de1ae997f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7891. LogAggregationIndexedFileController should support read from HAR file. (Xuan Gong via wangda)\n\nChange-Id: Ie16e34039d57df50128c73b37516ad0bc7c9590e\n",
      "commitDate": "07/03/18 11:30 AM",
      "commitName": "4d53ef7eefb14661d824924e503a910de1ae997f",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "08/06/17 10:08 AM",
      "commitNameOld": "a062374c396ba2bddbbe4d3806cc2896293b4e0b",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 272.1,
      "commitsBetweenForRepo": 1898,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n     if (this.physicalResource !\u003d null) {\n       builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n     }\n+    if (this.logAggregationReportsForApps !\u003d null) {\n+        addLogAggregationStatusForAppsToProto();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.physicalResource !\u003d null) {\n      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n    }\n    if (this.logAggregationReportsForApps !\u003d null) {\n        addLogAggregationStatusForAppsToProto();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "3f93ac0733058238a2c8f23960c986c71dca0e02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5356. NodeManager should communicate physical resource capability to ResourceManager. Contributed by Inigo Goiri\n",
      "commitDate": "08/11/16 2:01 PM",
      "commitName": "3f93ac0733058238a2c8f23960c986c71dca0e02",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "29/01/16 8:12 AM",
      "commitNameOld": "c9a09d6926b258e205a4ff7998ce5a86bf5dbe3b",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 284.24,
      "commitsBetweenForRepo": 2064,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,25 @@\n   private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n+    if (this.physicalResource !\u003d null) {\n+      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n    if (this.physicalResource !\u003d null) {\n      builder.setPhysicalResource(convertToProtoFormat(this.physicalResource));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "c9a09d6926b258e205a4ff7998ce5a86bf5dbe3b": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4647. Make RegisterNodeManagerRequestPBImpl thread-safe. (kasha)\n",
      "commitDate": "29/01/16 8:12 AM",
      "commitName": "c9a09d6926b258e205a4ff7998ce5a86bf5dbe3b",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "19/05/15 4:34 PM",
      "commitNameOld": "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 254.69,
      "commitsBetweenForRepo": 1882,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n-  private void mergeLocalToBuilder() {\n+  private synchronized void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n       Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n       for (NodeLabel label : labels) {\n         newBuilder.addNodeLabels(convertToProtoFormat(label));\n       }\n       builder.setNodeLabels(newBuilder.build());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[private, synchronized]"
      }
    },
    "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3565. NodeHeartbeatRequest/RegisterNodeManagerRequest should use NodeLabel object instead of String. (Naganarasimha G R via wangda)\n",
      "commitDate": "19/05/15 4:34 PM",
      "commitName": "b37da52a1c4fb3da2bd21bfadc5ec61c5f953a59",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "30/03/15 12:05 PM",
      "commitNameOld": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 50.19,
      "commitsBetweenForRepo": 517,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,22 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n     if (this.labels !\u003d null) {\n       builder.clearNodeLabels();\n-      builder.setNodeLabels(StringArrayProto.newBuilder()\n-          .addAllElements(this.labels).build());\n+      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n+      for (NodeLabel label : labels) {\n+        newBuilder.addNodeLabels(convertToProtoFormat(label));\n+      }\n+      builder.setNodeLabels(newBuilder.build());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      Builder newBuilder \u003d NodeLabelsProto.newBuilder();\n      for (NodeLabel label : labels) {\n        newBuilder.addNodeLabels(convertToProtoFormat(label));\n      }\n      builder.setNodeLabels(newBuilder.build());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2495. Allow admin specify labels from each NM (Distributed configuration for node label). (Naganarasimha G R via wangda)\n",
      "commitDate": "30/03/15 12:05 PM",
      "commitName": "2a945d24f7de1a7ae6e7bd6636188ce3b55c7f52",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/06/14 4:56 PM",
      "commitNameOld": "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 286.8,
      "commitsBetweenForRepo": 2467,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n     if (this.runningApplications !\u003d null) {\n       addRunningApplicationsToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n-\n+    if (this.labels !\u003d null) {\n+      builder.clearNodeLabels();\n+      builder.setNodeLabels(StringArrayProto.newBuilder()\n+          .addAllElements(this.labels).build());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n    if (this.labels !\u003d null) {\n      builder.clearNodeLabels();\n      builder.setNodeLabels(StringArrayProto.newBuilder()\n          .addAllElements(this.labels).build());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "95897ca14b7abd7fe047fdcf150473a8a2cbb024": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1885. Fixed a bug that RM may not send application-clean-up signal to NMs where the completed applications previously ran in case of RM restart. Contributed by Wangda Tan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603028 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/06/14 4:56 PM",
      "commitName": "95897ca14b7abd7fe047fdcf150473a8a2cbb024",
      "commitAuthor": "Jian He",
      "commitDateOld": "30/05/14 5:20 PM",
      "commitNameOld": "23c325ad47e305989b7f2cf172bd709f73dd26d1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.98,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,15 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n       addNMContainerStatusesToProto();\n     }\n+    if (this.runningApplications !\u003d null) {\n+      addRunningApplicationsToProto();\n+    }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.runningApplications !\u003d null) {\n      addRunningApplicationsToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "23c325ad47e305989b7f2cf172bd709f73dd26d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2115. Replaced RegisterNodeManagerRequest\u0027s ContainerStatus with a new NMContainerStatus which has more information that is needed for work-preserving RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598790 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/14 5:20 PM",
      "commitName": "23c325ad47e305989b7f2cf172bd709f73dd26d1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/11/13 9:17 PM",
      "commitNameOld": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 192.79,
      "commitsBetweenForRepo": 1303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private void mergeLocalToBuilder() {\n     if (this.containerStatuses !\u003d null) {\n-      addContainerStatusesToProto();\n+      addNMContainerStatusesToProto();\n     }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addNMContainerStatusesToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "cfa783141fa69c2cf154d1d9e5393353d14ce5e1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1210. Changed RM to start new app-attempts on RM restart only after ensuring that previous AM exited or after expiry time. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543310 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/11/13 9:17 PM",
      "commitName": "cfa783141fa69c2cf154d1d9e5393353d14ce5e1",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "26/09/13 12:55 PM",
      "commitNameOld": "5a15c392a1a18c5720dbe630bc07e58268c8e6a7",
      "commitAuthorOld": "Jonathan Turner Eagles",
      "daysBetweenCommits": 53.39,
      "commitsBetweenForRepo": 348,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,12 @@\n   private void mergeLocalToBuilder() {\n+    if (this.containerStatuses !\u003d null) {\n+      addContainerStatusesToProto();\n+    }\n     if (this.resource !\u003d null) {\n       builder.setResource(convertToProtoFormat(this.resource));\n     }\n     if (this.nodeId !\u003d null) {\n       builder.setNodeId(convertToProtoFormat(this.nodeId));\n     }\n \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.containerStatuses !\u003d null) {\n      addContainerStatusesToProto();\n    }\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,9 @@\n+  private void mergeLocalToBuilder() {\n+    if (this.resource !\u003d null) {\n+      builder.setResource(convertToProtoFormat(this.resource));\n+    }\n+    if (this.nodeId !\u003d null) {\n+      builder.setNodeId(convertToProtoFormat(this.nodeId));\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void mergeLocalToBuilder() {\n    if (this.resource !\u003d null) {\n      builder.setResource(convertToProtoFormat(this.resource));\n    }\n    if (this.nodeId !\u003d null) {\n      builder.setNodeId(convertToProtoFormat(this.nodeId));\n    }\n\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/api/protocolrecords/impl/pb/RegisterNodeManagerRequestPBImpl.java"
    }
  }
}