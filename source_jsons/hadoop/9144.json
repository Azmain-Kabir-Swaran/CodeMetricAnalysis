{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "getCompleteBlocksTotal",
  "functionId": "getCompleteBlocksTotal",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 5003,
  "functionEndLine": 5013,
  "numCommitsSeen": 899,
  "timeTaken": 54013,
  "changeHistory": [
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "6d4eee718a3fe1450a627128eb94728011bd9b68",
    "daacbc18d739d030822df0b75205eeb067f89850",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75",
    "ba2ee1d7fb91462c861169224d250d2d90bec3a6",
    "71071b904d0c9aec7b3713d41740f24182e81c36",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "5d5b1c6c10c66c6a17b483a3e1a98d59d3d0bdee",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "6d4eee718a3fe1450a627128eb94728011bd9b68": "Ymultichange(Ymodifierchange,Ybodychange)",
    "daacbc18d739d030822df0b75205eeb067f89850": "Ybodychange",
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": "Ybodychange",
    "ba2ee1d7fb91462c861169224d250d2d90bec3a6": "Ybodychange",
    "71071b904d0c9aec7b3713d41740f24182e81c36": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "5d5b1c6c10c66c6a17b483a3e1a98d59d3d0bdee": "Ymodifierchange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   public long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n     try {\n       numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n-      readUnlock();\n+      readUnlock(\"getCompleteBlocksTotal\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock(\"getCompleteBlocksTotal\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "6d4eee718a3fe1450a627128eb94728011bd9b68": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-8856. Make LeaseManager#countPath O(1). (Contributed by Arpit Agarwal)\n",
      "commitDate": "06/08/15 6:51 PM",
      "commitName": "6d4eee718a3fe1450a627128eb94728011bd9b68",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-8856. Make LeaseManager#countPath O(1). (Contributed by Arpit Agarwal)\n",
          "commitDate": "06/08/15 6:51 PM",
          "commitName": "6d4eee718a3fe1450a627128eb94728011bd9b68",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private long getCompleteBlocksTotal() {\n+  public long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n-    numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n     try {\n+      numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8856. Make LeaseManager#countPath O(1). (Contributed by Arpit Agarwal)\n",
          "commitDate": "06/08/15 6:51 PM",
          "commitName": "6d4eee718a3fe1450a627128eb94728011bd9b68",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "06/08/15 10:21 AM",
          "commitNameOld": "f4c523b69ba55b1fd35e8995c3011a9f546ac835",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.35,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,11 @@\n-  private long getCompleteBlocksTotal() {\n+  public long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n-    numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n     try {\n+      numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "daacbc18d739d030822df0b75205eeb067f89850": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4882. Prevent the Namenode\u0027s LeaseManager from looping forever in checkLeases (Ravi Prakash via Colin P. McCabe)\n",
      "commitDate": "24/11/14 10:46 AM",
      "commitName": "daacbc18d739d030822df0b75205eeb067f89850",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "21/11/14 11:01 AM",
      "commitNameOld": "23dacb38924e3ed6a456b1c526e71e13e3c8f30d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.99,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,11 @@\n   private long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n+    numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n     try {\n-      for (Lease lease : leaseManager.getSortedLeases()) {\n-        for (String path : lease.getPaths()) {\n-          final INodeFile cons;\n-          try {\n-            cons \u003d dir.getINode(path).asFile();\n-            Preconditions.checkState(cons.isUnderConstruction());\n-          } catch (UnresolvedLinkException e) {\n-            throw new AssertionError(\"Lease files should reside on this FS\");\n-          }\n-          BlockInfo[] blocks \u003d cons.getBlocks();\n-          if(blocks \u003d\u003d null)\n-            continue;\n-          for(BlockInfo b : blocks) {\n-            if(!b.isComplete())\n-              numUCBlocks++;\n-          }\n-        }\n-      }\n-      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    numUCBlocks \u003d leaseManager.getNumUnderConstructionBlocks();\n    try {\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ce68f410b05a58ad05965f32ad7f5b246b363a75": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5285. Flatten INodeFile hierarchy: Replace INodeFileUnderConstruction and INodeFileUnderConstructionWithSnapshot with FileUnderContructionFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1544389 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/13 5:39 PM",
      "commitName": "ce68f410b05a58ad05965f32ad7f5b246b363a75",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "21/11/13 9:12 AM",
      "commitNameOld": "f91a45a96c21db9e5d40097c7d3f5d005ae10dde",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 0.35,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   private long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n     try {\n       for (Lease lease : leaseManager.getSortedLeases()) {\n         for (String path : lease.getPaths()) {\n-          final INodeFileUnderConstruction cons;\n+          final INodeFile cons;\n           try {\n-            cons \u003d INodeFileUnderConstruction.valueOf(dir.getINode(path), path);\n+            cons \u003d dir.getINode(path).asFile();\n+            Preconditions.checkState(cons.isUnderConstruction());\n           } catch (UnresolvedLinkException e) {\n             throw new AssertionError(\"Lease files should reside on this FS\");\n-          } catch (IOException e) {\n-            throw new RuntimeException(e);\n           }\n           BlockInfo[] blocks \u003d cons.getBlocks();\n           if(blocks \u003d\u003d null)\n             continue;\n           for(BlockInfo b : blocks) {\n             if(!b.isComplete())\n               numUCBlocks++;\n           }\n         }\n       }\n       LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          final INodeFile cons;\n          try {\n            cons \u003d dir.getINode(path).asFile();\n            Preconditions.checkState(cons.isUnderConstruction());\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "ba2ee1d7fb91462c861169224d250d2d90bec3a6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4107. Add utility methods for casting INode to INodeFile and INodeFileUnderConstruction.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1402265 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/12 11:44 AM",
      "commitName": "ba2ee1d7fb91462c861169224d250d2d90bec3a6",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "22/10/12 11:30 AM",
      "commitNameOld": "75cdb5bb4965161021df47376cccf058bf413f3b",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 3.01,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,30 @@\n   private long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n     try {\n       for (Lease lease : leaseManager.getSortedLeases()) {\n         for (String path : lease.getPaths()) {\n-          INode node;\n+          final INodeFileUnderConstruction cons;\n           try {\n-            node \u003d dir.getFileINode(path);\n+            cons \u003d INodeFileUnderConstruction.valueOf(dir.getINode(path), path);\n           } catch (UnresolvedLinkException e) {\n             throw new AssertionError(\"Lease files should reside on this FS\");\n+          } catch (IOException e) {\n+            throw new RuntimeException(e);\n           }\n-          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n-          assert node.isUnderConstruction() :\n-            \"Found a lease for file \" + path + \" that is not under construction.\" +\n-            \" lease\u003d\" + lease;\n-          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n           BlockInfo[] blocks \u003d cons.getBlocks();\n           if(blocks \u003d\u003d null)\n             continue;\n           for(BlockInfo b : blocks) {\n             if(!b.isComplete())\n               numUCBlocks++;\n           }\n         }\n       }\n       LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          final INodeFileUnderConstruction cons;\n          try {\n            cons \u003d INodeFileUnderConstruction.valueOf(dir.getINode(path), path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          } catch (IOException e) {\n            throw new RuntimeException(e);\n          }\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "71071b904d0c9aec7b3713d41740f24182e81c36": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2602. NN should log newly-allocated blocks without losing BlockInfo. Contributed by Aaron T. Myers\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1215036 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/12/11 8:18 PM",
      "commitName": "71071b904d0c9aec7b3713d41740f24182e81c36",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "08/12/11 3:55 PM",
      "commitNameOld": "2481474bd9c50a23e4fd2eea67ac2dea11ca1f58",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 7.18,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   private long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n     try {\n       for (Lease lease : leaseManager.getSortedLeases()) {\n         for (String path : lease.getPaths()) {\n           INode node;\n           try {\n             node \u003d dir.getFileINode(path);\n           } catch (UnresolvedLinkException e) {\n             throw new AssertionError(\"Lease files should reside on this FS\");\n           }\n           assert node !\u003d null : \"Found a lease for nonexisting file.\";\n           assert node.isUnderConstruction() :\n-            \"Found a lease for file that is not under construction.\";\n+            \"Found a lease for file \" + path + \" that is not under construction.\" +\n+            \" lease\u003d\" + lease;\n           INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n           BlockInfo[] blocks \u003d cons.getBlocks();\n           if(blocks \u003d\u003d null)\n             continue;\n           for(BlockInfo b : blocks) {\n             if(!b.isComplete())\n               numUCBlocks++;\n           }\n         }\n       }\n       LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          INode node;\n          try {\n            node \u003d dir.getFileINode(path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n          assert node.isUnderConstruction() :\n            \"Found a lease for file \" + path + \" that is not under construction.\" +\n            \" lease\u003d\" + lease;\n          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          INode node;\n          try {\n            node \u003d dir.getFileINode(path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n          assert node.isUnderConstruction() :\n            \"Found a lease for file that is not under construction.\";\n          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          INode node;\n          try {\n            node \u003d dir.getFileINode(path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n          assert node.isUnderConstruction() :\n            \"Found a lease for file that is not under construction.\";\n          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "5d5b1c6c10c66c6a17b483a3e1a98d59d3d0bdee": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-2239. Reduce access levels of the fields and methods in FSNamesystem.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1155998 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/08/11 6:50 PM",
      "commitName": "5d5b1c6c10c66c6a17b483a3e1a98d59d3d0bdee",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "08/08/11 3:06 AM",
      "commitNameOld": "371f4a59059322000a40eb4bdf5386b96b626ece",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n-  long getCompleteBlocksTotal() {\n+  private long getCompleteBlocksTotal() {\n     // Calculate number of blocks under construction\n     long numUCBlocks \u003d 0;\n     readLock();\n     try {\n       for (Lease lease : leaseManager.getSortedLeases()) {\n         for (String path : lease.getPaths()) {\n           INode node;\n           try {\n             node \u003d dir.getFileINode(path);\n           } catch (UnresolvedLinkException e) {\n             throw new AssertionError(\"Lease files should reside on this FS\");\n           }\n           assert node !\u003d null : \"Found a lease for nonexisting file.\";\n           assert node.isUnderConstruction() :\n             \"Found a lease for file that is not under construction.\";\n           INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n           BlockInfo[] blocks \u003d cons.getBlocks();\n           if(blocks \u003d\u003d null)\n             continue;\n           for(BlockInfo b : blocks) {\n             if(!b.isComplete())\n               numUCBlocks++;\n           }\n         }\n       }\n       LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n       return getBlocksTotal() - numUCBlocks;\n     } finally {\n       readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          INode node;\n          try {\n            node \u003d dir.getFileINode(path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n          assert node.isUnderConstruction() :\n            \"Found a lease for file that is not under construction.\";\n          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldValue": "[]",
        "newValue": "[private]"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,32 @@\n+  long getCompleteBlocksTotal() {\n+    // Calculate number of blocks under construction\n+    long numUCBlocks \u003d 0;\n+    readLock();\n+    try {\n+      for (Lease lease : leaseManager.getSortedLeases()) {\n+        for (String path : lease.getPaths()) {\n+          INode node;\n+          try {\n+            node \u003d dir.getFileINode(path);\n+          } catch (UnresolvedLinkException e) {\n+            throw new AssertionError(\"Lease files should reside on this FS\");\n+          }\n+          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n+          assert node.isUnderConstruction() :\n+            \"Found a lease for file that is not under construction.\";\n+          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n+          BlockInfo[] blocks \u003d cons.getBlocks();\n+          if(blocks \u003d\u003d null)\n+            continue;\n+          for(BlockInfo b : blocks) {\n+            if(!b.isComplete())\n+              numUCBlocks++;\n+          }\n+        }\n+      }\n+      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n+      return getBlocksTotal() - numUCBlocks;\n+    } finally {\n+      readUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  long getCompleteBlocksTotal() {\n    // Calculate number of blocks under construction\n    long numUCBlocks \u003d 0;\n    readLock();\n    try {\n      for (Lease lease : leaseManager.getSortedLeases()) {\n        for (String path : lease.getPaths()) {\n          INode node;\n          try {\n            node \u003d dir.getFileINode(path);\n          } catch (UnresolvedLinkException e) {\n            throw new AssertionError(\"Lease files should reside on this FS\");\n          }\n          assert node !\u003d null : \"Found a lease for nonexisting file.\";\n          assert node.isUnderConstruction() :\n            \"Found a lease for file that is not under construction.\";\n          INodeFileUnderConstruction cons \u003d (INodeFileUnderConstruction) node;\n          BlockInfo[] blocks \u003d cons.getBlocks();\n          if(blocks \u003d\u003d null)\n            continue;\n          for(BlockInfo b : blocks) {\n            if(!b.isComplete())\n              numUCBlocks++;\n          }\n        }\n      }\n      LOG.info(\"Number of blocks under construction: \" + numUCBlocks);\n      return getBlocksTotal() - numUCBlocks;\n    } finally {\n      readUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}