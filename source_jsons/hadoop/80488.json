{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystem.java",
  "functionName": "createFileSystem",
  "functionId": "createFileSystem___uri-URI__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
  "functionStartLine": 3406,
  "functionEndLine": 3429,
  "numCommitsSeen": 188,
  "timeTaken": 6427,
  "changeHistory": [
    "990063d2af0a37e9474949f33128805e34c3f016",
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
    "d286032b715192ddbdd770b07d623fdc396810e2",
    "892ade689f9bcce76daae8f66fc00a49bee8548e",
    "b8832fcf1e2ae1e43d5e4523016731af40ab58d7",
    "bbd6a3277678a60d472e76a207f25a916220946c",
    "706e861a859a247661b027f4e473814995556c2e",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "990063d2af0a37e9474949f33128805e34c3f016": "Ybodychange",
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": "Ybodychange",
    "d286032b715192ddbdd770b07d623fdc396810e2": "Ybodychange",
    "892ade689f9bcce76daae8f66fc00a49bee8548e": "Ybodychange",
    "b8832fcf1e2ae1e43d5e4523016731af40ab58d7": "Ybodychange",
    "bbd6a3277678a60d472e76a207f25a916220946c": "Ybodychange",
    "706e861a859a247661b027f4e473814995556c2e": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "990063d2af0a37e9474949f33128805e34c3f016": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16665. Filesystems to be closed if they failed during initialize().\n\nContributed by Steve Loughran.\n\nThis FileSystem instantiation so if an IOException or RuntimeException is\nraised in the invocation of FileSystem.initialize() then a best-effort\nattempt is made to close the FS instance; exceptions raised that there\nare swallowed.\n\nThe S3AFileSystem is also modified to do its own cleanup if an\nIOException is raised during its initialize() process, it being the\nFS we know has the \"potential\" to leak threads, especially in\nextension points (e.g AWS Authenticators) which spawn threads.\n\nChange-Id: Ib84073a606c9d53bf53cbfca4629876a03894f04\n",
      "commitDate": "12/11/19 10:17 AM",
      "commitName": "990063d2af0a37e9474949f33128805e34c3f016",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "01/10/19 10:11 AM",
      "commitNameOld": "1921e94292f0820985a0cfbf8922a2a1a67fe921",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 42.05,
      "commitsBetweenForRepo": 204,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,24 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf)\n       throws IOException {\n     Tracer tracer \u003d FsTracer.get(conf);\n     try(TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\")) {\n       scope.addKVAnnotation(\"scheme\", uri.getScheme());\n-      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n-      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n-      fs.initialize(uri, conf);\n+      Class\u003c? extends FileSystem\u003e clazz \u003d\n+          getFileSystemClass(uri.getScheme(), conf);\n+      FileSystem fs \u003d ReflectionUtils.newInstance(clazz, conf);\n+      try {\n+        fs.initialize(uri, conf);\n+      } catch (IOException | RuntimeException e) {\n+        // exception raised during initialization.\n+        // log summary at warn and full stack at debug\n+        LOGGER.warn(\"Failed to initialize fileystem {}: {}\",\n+            uri, e.toString());\n+        LOGGER.debug(\"Failed to initialize fileystem\", e);\n+        // then (robustly) close the FS, so as to invoke any\n+        // cleanup code.\n+        IOUtils.cleanupWithLogger(LOGGER, fs);\n+        throw e;\n+      }\n       return fs;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf)\n      throws IOException {\n    Tracer tracer \u003d FsTracer.get(conf);\n    try(TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\")) {\n      scope.addKVAnnotation(\"scheme\", uri.getScheme());\n      Class\u003c? extends FileSystem\u003e clazz \u003d\n          getFileSystemClass(uri.getScheme(), conf);\n      FileSystem fs \u003d ReflectionUtils.newInstance(clazz, conf);\n      try {\n        fs.initialize(uri, conf);\n      } catch (IOException | RuntimeException e) {\n        // exception raised during initialization.\n        // log summary at warn and full stack at debug\n        LOGGER.warn(\"Failed to initialize fileystem {}: {}\",\n            uri, e.toString());\n        LOGGER.debug(\"Failed to initialize fileystem\", e);\n        // then (robustly) close the FS, so as to invoke any\n        // cleanup code.\n        IOUtils.cleanupWithLogger(LOGGER, fs);\n        throw e;\n      }\n      return fs;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "860d49aa6ae7790d970d7f2322fed890b0e5cda2": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13605. Clean up FileSystem javadocs, logging; improve diagnostics on FS load. Contributed by Steve Loughran\n",
      "commitDate": "23/11/16 4:42 PM",
      "commitName": "860d49aa6ae7790d970d7f2322fed890b0e5cda2",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "16/11/16 8:08 PM",
      "commitNameOld": "aab9737a058c0bdeeb17c173e530b7e571315a56",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 6.86,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n-  private static FileSystem createFileSystem(URI uri, Configuration conf\n-      ) throws IOException {\n+  private static FileSystem createFileSystem(URI uri, Configuration conf)\n+      throws IOException {\n     Tracer tracer \u003d FsTracer.get(conf);\n-    TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\");\n-    scope.addKVAnnotation(\"scheme\", uri.getScheme());\n-    try {\n+    try(TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\")) {\n+      scope.addKVAnnotation(\"scheme\", uri.getScheme());\n       Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n       FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n       fs.initialize(uri, conf);\n       return fs;\n-    } finally {\n-      scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf)\n      throws IOException {\n    Tracer tracer \u003d FsTracer.get(conf);\n    try(TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\")) {\n      scope.addKVAnnotation(\"scheme\", uri.getScheme());\n      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n      fs.initialize(uri, conf);\n      return fs;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "d286032b715192ddbdd770b07d623fdc396810e2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9187. Fix null pointer error in Globber when FS was not constructed via FileSystem#createFileSystem (cmccabe)\n",
      "commitDate": "13/10/15 4:11 PM",
      "commitName": "d286032b715192ddbdd770b07d623fdc396810e2",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "28/09/15 3:31 PM",
      "commitNameOld": "3abbdc929bde05f8819f5410cef1eaeb8940203f",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 15.03,
      "commitsBetweenForRepo": 107,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf\n       ) throws IOException {\n     Tracer tracer \u003d FsTracer.get(conf);\n     TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\");\n     scope.addKVAnnotation(\"scheme\", uri.getScheme());\n     try {\n       Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n       FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n-      fs.tracer \u003d tracer;\n       fs.initialize(uri, conf);\n       return fs;\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Tracer tracer \u003d FsTracer.get(conf);\n    TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\");\n    scope.addKVAnnotation(\"scheme\", uri.getScheme());\n    try {\n      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n      fs.initialize(uri, conf);\n      return fs;\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "892ade689f9bcce76daae8f66fc00a49bee8548e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9080. Update htrace version to 4.0.1 (cmccabe)\n",
      "commitDate": "28/09/15 7:42 AM",
      "commitName": "892ade689f9bcce76daae8f66fc00a49bee8548e",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "23/07/15 5:46 PM",
      "commitNameOld": "ab3197c20452e0dd908193d6854c204e6ee34645",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 66.58,
      "commitsBetweenForRepo": 387,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf\n       ) throws IOException {\n-    TraceScope scope \u003d Trace.startSpan(\"FileSystem#createFileSystem\");\n-    Span span \u003d scope.getSpan();\n-    if (span !\u003d null) {\n-      span.addKVAnnotation(\"scheme\", uri.getScheme());\n-    }\n+    Tracer tracer \u003d FsTracer.get(conf);\n+    TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\");\n+    scope.addKVAnnotation(\"scheme\", uri.getScheme());\n     try {\n       Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n       FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n+      fs.tracer \u003d tracer;\n       fs.initialize(uri, conf);\n       return fs;\n     } finally {\n       scope.close();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Tracer tracer \u003d FsTracer.get(conf);\n    TraceScope scope \u003d tracer.newScope(\"FileSystem#createFileSystem\");\n    scope.addKVAnnotation(\"scheme\", uri.getScheme());\n    try {\n      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n      fs.tracer \u003d tracer;\n      fs.initialize(uri, conf);\n      return fs;\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "b8832fcf1e2ae1e43d5e4523016731af40ab58d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12201. Add tracing to FileSystem#createFileSystem and Globber#glob (cmccabe)\n",
      "commitDate": "08/07/15 8:07 PM",
      "commitName": "b8832fcf1e2ae1e43d5e4523016731af40ab58d7",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "30/06/15 3:54 AM",
      "commitNameOld": "076948d9a4053cc8be1927005c797273bae85e99",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 8.68,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,16 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf\n       ) throws IOException {\n-    Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n-    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n-    fs.initialize(uri, conf);\n-    return fs;\n+    TraceScope scope \u003d Trace.startSpan(\"FileSystem#createFileSystem\");\n+    Span span \u003d scope.getSpan();\n+    if (span !\u003d null) {\n+      span.addKVAnnotation(\"scheme\", uri.getScheme());\n+    }\n+    try {\n+      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n+      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n+      fs.initialize(uri, conf);\n+      return fs;\n+    } finally {\n+      scope.close();\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    TraceScope scope \u003d Trace.startSpan(\"FileSystem#createFileSystem\");\n    Span span \u003d scope.getSpan();\n    if (span !\u003d null) {\n      span.addKVAnnotation(\"scheme\", uri.getScheme());\n    }\n    try {\n      Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n      FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n      fs.initialize(uri, conf);\n      return fs;\n    } finally {\n      scope.close();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "bbd6a3277678a60d472e76a207f25a916220946c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10482. Fix various findbugs warnings in hadoop-common. Contributed by Haohui Mai.\n",
      "commitDate": "10/12/14 12:44 PM",
      "commitName": "bbd6a3277678a60d472e76a207f25a916220946c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "03/11/14 6:20 AM",
      "commitNameOld": "67f13b58e4d41879845aa118186d984de2e312ed",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 37.27,
      "commitsBetweenForRepo": 297,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,7 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf\n       ) throws IOException {\n     Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n-    if (clazz \u003d\u003d null) {\n-      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n-    }\n     FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n     fs.initialize(uri, conf);\n     return fs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "706e861a859a247661b027f4e473814995556c2e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7549. Use JDK ServiceLoader mechanism to find FileSystem implementations. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1329994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 1:33 PM",
      "commitName": "706e861a859a247661b027f4e473814995556c2e",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "06/04/12 10:54 AM",
      "commitNameOld": "534591697c52f7fb31b73b530a266a88c0b7c409",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 18.11,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n   private static FileSystem createFileSystem(URI uri, Configuration conf\n       ) throws IOException {\n-    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n+    Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n     if (clazz \u003d\u003d null) {\n       throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n     }\n     FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n     fs.initialize(uri, conf);\n     return fs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d getFileSystemClass(uri.getScheme(), conf);\n    if (clazz \u003d\u003d null) {\n      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n    }\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n    if (clazz \u003d\u003d null) {\n      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n    }\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n    if (clazz \u003d\u003d null) {\n      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n    }\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n    if (clazz \u003d\u003d null) {\n      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n    }\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/FileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/FileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/FileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,10 @@\n+  private static FileSystem createFileSystem(URI uri, Configuration conf\n+      ) throws IOException {\n+    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n+    if (clazz \u003d\u003d null) {\n+      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n+    }\n+    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n+    fs.initialize(uri, conf);\n+    return fs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static FileSystem createFileSystem(URI uri, Configuration conf\n      ) throws IOException {\n    Class\u003c?\u003e clazz \u003d conf.getClass(\"fs.\" + uri.getScheme() + \".impl\", null);\n    if (clazz \u003d\u003d null) {\n      throw new IOException(\"No FileSystem for scheme: \" + uri.getScheme());\n    }\n    FileSystem fs \u003d (FileSystem)ReflectionUtils.newInstance(clazz, conf);\n    fs.initialize(uri, conf);\n    return fs;\n  }",
      "path": "src/java/org/apache/hadoop/fs/FileSystem.java"
    }
  }
}