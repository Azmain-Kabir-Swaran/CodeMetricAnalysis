{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "openDatabase",
  "functionId": "openDatabase___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 1677,
  "functionEndLine": 1702,
  "numCommitsSeen": 43,
  "timeTaken": 2059,
  "changeHistory": [
    "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7",
    "4a8508501bc753858693dacdafba61d604702f71"
  ],
  "changeHistoryShort": {
    "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7": "Ybodychange",
    "4a8508501bc753858693dacdafba61d604702f71": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8120. JVM can crash with SIGSEGV when exiting due to custom leveldb logger. Contributed by Jason Lowe.\n",
      "commitDate": "12/04/18 9:04 AM",
      "commitName": "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "10/04/18 5:32 PM",
      "commitNameOld": "2bf9cc2c73944c9f7cde56714b8cf6995cfa539b",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.65,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,26 @@\n   protected DB openDatabase(Configuration conf) throws IOException {\n     Path storeRoot \u003d createStorageDir(conf);\n     Options options \u003d new Options();\n     options.createIfMissing(false);\n-    options.logger(new LeveldbLogger());\n     LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n     File dbfile \u003d new File(storeRoot.toString());\n     try {\n       db \u003d JniDBFactory.factory.open(dbfile, options);\n     } catch (NativeDB.DBException e) {\n       if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n         LOG.info(\"Creating state database at \" + dbfile);\n         isNewlyCreated \u003d true;\n         options.createIfMissing(true);\n         try {\n           db \u003d JniDBFactory.factory.open(dbfile, options);\n           // store version\n           storeVersion();\n         } catch (DBException dbErr) {\n           throw new IOException(dbErr.getMessage(), dbErr);\n         }\n       } else {\n         throw e;\n       }\n     }\n     return db;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DB openDatabase(Configuration conf) throws IOException {\n    Path storeRoot \u003d createStorageDir(conf);\n    Options options \u003d new Options();\n    options.createIfMissing(false);\n    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n    File dbfile \u003d new File(storeRoot.toString());\n    try {\n      db \u003d JniDBFactory.factory.open(dbfile, options);\n    } catch (NativeDB.DBException e) {\n      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n        LOG.info(\"Creating state database at \" + dbfile);\n        isNewlyCreated \u003d true;\n        options.createIfMissing(true);\n        try {\n          db \u003d JniDBFactory.factory.open(dbfile, options);\n          // store version\n          storeVersion();\n        } catch (DBException dbErr) {\n          throw new IOException(dbErr.getMessage(), dbErr);\n        }\n      } else {\n        throw e;\n      }\n    }\n    return db;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "4a8508501bc753858693dacdafba61d604702f71": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5009. NMLeveldbStateStoreService database can grow substantially leading to longer recovery times. Contributed by Jason Lowe\n",
      "commitDate": "28/04/16 9:54 PM",
      "commitName": "4a8508501bc753858693dacdafba61d604702f71",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,27 @@\n+  protected DB openDatabase(Configuration conf) throws IOException {\n+    Path storeRoot \u003d createStorageDir(conf);\n+    Options options \u003d new Options();\n+    options.createIfMissing(false);\n+    options.logger(new LeveldbLogger());\n+    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n+    File dbfile \u003d new File(storeRoot.toString());\n+    try {\n+      db \u003d JniDBFactory.factory.open(dbfile, options);\n+    } catch (NativeDB.DBException e) {\n+      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n+        LOG.info(\"Creating state database at \" + dbfile);\n+        isNewlyCreated \u003d true;\n+        options.createIfMissing(true);\n+        try {\n+          db \u003d JniDBFactory.factory.open(dbfile, options);\n+          // store version\n+          storeVersion();\n+        } catch (DBException dbErr) {\n+          throw new IOException(dbErr.getMessage(), dbErr);\n+        }\n+      } else {\n+        throw e;\n+      }\n+    }\n+    return db;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected DB openDatabase(Configuration conf) throws IOException {\n    Path storeRoot \u003d createStorageDir(conf);\n    Options options \u003d new Options();\n    options.createIfMissing(false);\n    options.logger(new LeveldbLogger());\n    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n    File dbfile \u003d new File(storeRoot.toString());\n    try {\n      db \u003d JniDBFactory.factory.open(dbfile, options);\n    } catch (NativeDB.DBException e) {\n      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n        LOG.info(\"Creating state database at \" + dbfile);\n        isNewlyCreated \u003d true;\n        options.createIfMissing(true);\n        try {\n          db \u003d JniDBFactory.factory.open(dbfile, options);\n          // store version\n          storeVersion();\n        } catch (DBException dbErr) {\n          throw new IOException(dbErr.getMessage(), dbErr);\n        }\n      } else {\n        throw e;\n      }\n    }\n    return db;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}