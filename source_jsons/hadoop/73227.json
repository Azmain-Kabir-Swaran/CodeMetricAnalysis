{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpServer2.java",
  "functionName": "openListeners",
  "functionId": "openListeners",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
  "functionStartLine": 1361,
  "functionEndLine": 1376,
  "numCommitsSeen": 120,
  "timeTaken": 3538,
  "changeHistory": [
    "8277fab2be3b0898ba326d15e4cb641da2ac51ce",
    "cce35c38159b23eb55204b3c9afcaa3215f4f4ef",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17",
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4",
    "2214871d916fdcae62aa51afbb5fd571f2808745",
    "097a001b3fd355558c971cd82a633177ace77b39"
  ],
  "changeHistoryShort": {
    "8277fab2be3b0898ba326d15e4cb641da2ac51ce": "Ybodychange",
    "cce35c38159b23eb55204b3c9afcaa3215f4f4ef": "Ybodychange",
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": "Ybodychange",
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": "Ybodychange",
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": "Yfilerename",
    "2214871d916fdcae62aa51afbb5fd571f2808745": "Ymultichange(Yrename,Ybodychange)",
    "097a001b3fd355558c971cd82a633177ace77b39": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8277fab2be3b0898ba326d15e4cb641da2ac51ce": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14857. Fix downstream shaded client integration test. Contributed by Sean Busbey.\n",
      "commitDate": "13/09/17 10:59 AM",
      "commitName": "8277fab2be3b0898ba326d15e4cb641da2ac51ce",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "08/09/17 10:01 AM",
      "commitNameOld": "e8278b02a45d16569fdebfd1ac36b2e648ad1e1e",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 5.04,
      "commitsBetweenForRepo": 71,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   void openListeners() throws Exception {\n+    LOG.debug(\"opening listeners: {}\", listeners);\n     for (ServerConnector listener : listeners) {\n       if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n         // This listener is either started externally or has been bound or was\n         // closed\n         continue;\n       }\n       int port \u003d listener.getPort();\n       if (portRanges !\u003d null \u0026\u0026 port !\u003d 0) {\n         bindForPortRange(listener, port);\n       } else {\n         bindForSinglePort(listener, port);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void openListeners() throws Exception {\n    LOG.debug(\"opening listeners: {}\", listeners);\n    for (ServerConnector listener : listeners) {\n      if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n        // This listener is either started externally or has been bound or was\n        // closed\n        continue;\n      }\n      int port \u003d listener.getPort();\n      if (portRanges !\u003d null \u0026\u0026 port !\u003d 0) {\n        bindForPortRange(listener, port);\n      } else {\n        bindForSinglePort(listener, port);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "cce35c38159b23eb55204b3c9afcaa3215f4f4ef": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12097. Allow port range to be specified while starting webapp. Contributed by Varun Saxena.\n",
      "commitDate": "05/02/17 7:42 PM",
      "commitName": "cce35c38159b23eb55204b3c9afcaa3215f4f4ef",
      "commitAuthor": "Junping Du",
      "commitDateOld": "18/01/17 1:11 AM",
      "commitNameOld": "9130af3f74a7923fff3f80360ba043ab2c6558a9",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 18.77,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,15 @@\n   void openListeners() throws Exception {\n     for (ServerConnector listener : listeners) {\n       if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n         // This listener is either started externally or has been bound or was\n         // closed\n         continue;\n       }\n       int port \u003d listener.getPort();\n-      while (true) {\n-        // jetty has a bug where you can\u0027t reopen a listener that previously\n-        // failed to open w/o issuing a close first, even if the port is changed\n-        try {\n-          listener.close();\n-          listener.open();\n-          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n-          break;\n-        } catch (BindException ex) {\n-          if (port \u003d\u003d 0 || !findPort) {\n-            BindException be \u003d new BindException(\"Port in use: \"\n-                + listener.getHost() + \":\" + listener.getPort());\n-            be.initCause(ex);\n-            throw be;\n-          }\n-        }\n-        // try the next port number\n-        listener.setPort(++port);\n-        Thread.sleep(100);\n+      if (portRanges !\u003d null \u0026\u0026 port !\u003d 0) {\n+        bindForPortRange(listener, port);\n+      } else {\n+        bindForSinglePort(listener, port);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void openListeners() throws Exception {\n    for (ServerConnector listener : listeners) {\n      if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n        // This listener is either started externally or has been bound or was\n        // closed\n        continue;\n      }\n      int port \u003d listener.getPort();\n      if (portRanges !\u003d null \u0026\u0026 port !\u003d 0) {\n        bindForPortRange(listener, port);\n      } else {\n        bindForSinglePort(listener, port);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "5877f20f9c3f6f0afa505715e9a2ee312475af17": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10075. Update jetty dependency to version 9 (rkanter)\n",
      "commitDate": "27/10/16 4:09 PM",
      "commitName": "5877f20f9c3f6f0afa505715e9a2ee312475af17",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "19/08/16 9:22 AM",
      "commitNameOld": "03a9343d5798384b66fbd21e1e028acaf55b00e9",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 69.28,
      "commitsBetweenForRepo": 490,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   void openListeners() throws Exception {\n-    for (Connector listener : listeners) {\n-      if (listener.getLocalPort() !\u003d -1) {\n-        // This listener is either started externally or has been bound\n+    for (ServerConnector listener : listeners) {\n+      if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n+        // This listener is either started externally or has been bound or was\n+        // closed\n         continue;\n       }\n       int port \u003d listener.getPort();\n       while (true) {\n         // jetty has a bug where you can\u0027t reopen a listener that previously\n         // failed to open w/o issuing a close first, even if the port is changed\n         try {\n           listener.close();\n           listener.open();\n           LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n           break;\n         } catch (BindException ex) {\n           if (port \u003d\u003d 0 || !findPort) {\n             BindException be \u003d new BindException(\"Port in use: \"\n                 + listener.getHost() + \":\" + listener.getPort());\n             be.initCause(ex);\n             throw be;\n           }\n         }\n         // try the next port number\n         listener.setPort(++port);\n         Thread.sleep(100);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void openListeners() throws Exception {\n    for (ServerConnector listener : listeners) {\n      if (listener.getLocalPort() !\u003d -1 \u0026\u0026 listener.getLocalPort() !\u003d -2) {\n        // This listener is either started externally or has been bound or was\n        // closed\n        continue;\n      }\n      int port \u003d listener.getPort();\n      while (true) {\n        // jetty has a bug where you can\u0027t reopen a listener that previously\n        // failed to open w/o issuing a close first, even if the port is changed\n        try {\n          listener.close();\n          listener.open();\n          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n          break;\n        } catch (BindException ex) {\n          if (port \u003d\u003d 0 || !findPort) {\n            BindException be \u003d new BindException(\"Port in use: \"\n                + listener.getHost() + \":\" + listener.getPort());\n            be.initCause(ex);\n            throw be;\n          }\n        }\n        // try the next port number\n        listener.setPort(++port);\n        Thread.sleep(100);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "2860eeb14a958a8861b9ad3d6bd685df48da8cd3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7555. Remove the support of unmanaged connectors in HttpServer2. Contributed by Haohui Mai.\n",
      "commitDate": "21/12/14 2:45 PM",
      "commitName": "2860eeb14a958a8861b9ad3d6bd685df48da8cd3",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "11/12/14 4:42 PM",
      "commitNameOld": "5b9fcedb4d116d91d70aaad6cbf59093eeee36df",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 9.92,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   void openListeners() throws Exception {\n-    for (ListenerInfo li : listeners) {\n-      Connector listener \u003d li.listener;\n-      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n+    for (Connector listener : listeners) {\n+      if (listener.getLocalPort() !\u003d -1) {\n         // This listener is either started externally or has been bound\n         continue;\n       }\n       int port \u003d listener.getPort();\n       while (true) {\n         // jetty has a bug where you can\u0027t reopen a listener that previously\n         // failed to open w/o issuing a close first, even if the port is changed\n         try {\n           listener.close();\n           listener.open();\n           LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n           break;\n         } catch (BindException ex) {\n           if (port \u003d\u003d 0 || !findPort) {\n             BindException be \u003d new BindException(\"Port in use: \"\n                 + listener.getHost() + \":\" + listener.getPort());\n             be.initCause(ex);\n             throw be;\n           }\n         }\n         // try the next port number\n         listener.setPort(++port);\n         Thread.sleep(100);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void openListeners() throws Exception {\n    for (Connector listener : listeners) {\n      if (listener.getLocalPort() !\u003d -1) {\n        // This listener is either started externally or has been bound\n        continue;\n      }\n      int port \u003d listener.getPort();\n      while (true) {\n        // jetty has a bug where you can\u0027t reopen a listener that previously\n        // failed to open w/o issuing a close first, even if the port is changed\n        try {\n          listener.close();\n          listener.open();\n          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n          break;\n        } catch (BindException ex) {\n          if (port \u003d\u003d 0 || !findPort) {\n            BindException be \u003d new BindException(\"Port in use: \"\n                + listener.getHost() + \":\" + listener.getPort());\n            be.initCause(ex);\n            throw be;\n          }\n        }\n        // try the next port number\n        listener.setPort(++port);\n        Thread.sleep(100);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {}
    },
    "33a47743a5f4263bc21b345587370c5ecf43f5b4": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-10255. Rename HttpServer to HttpServer2 to retain older HttpServer in branch-2 for compatibility. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561959 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/01/14 11:32 PM",
      "commitName": "33a47743a5f4263bc21b345587370c5ecf43f5b4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "27/01/14 10:41 PM",
      "commitNameOld": "87166f1ee81dbad579508c2bdbc7dda96b1ef809",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void openListeners() throws Exception {\n    for (ListenerInfo li : listeners) {\n      Connector listener \u003d li.listener;\n      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n        // This listener is either started externally or has been bound\n        continue;\n      }\n      int port \u003d listener.getPort();\n      while (true) {\n        // jetty has a bug where you can\u0027t reopen a listener that previously\n        // failed to open w/o issuing a close first, even if the port is changed\n        try {\n          listener.close();\n          listener.open();\n          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n          break;\n        } catch (BindException ex) {\n          if (port \u003d\u003d 0 || !findPort) {\n            BindException be \u003d new BindException(\"Port in use: \"\n                + listener.getHost() + \":\" + listener.getPort());\n            be.initCause(ex);\n            throw be;\n          }\n        }\n        // try the next port number\n        listener.setPort(++port);\n        Thread.sleep(100);\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java",
      "extendedDetails": {
        "oldPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer2.java"
      }
    },
    "2214871d916fdcae62aa51afbb5fd571f2808745": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/11/13 10:20 AM",
      "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/11/13 10:20 AM",
          "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "20/11/13 1:51 PM",
          "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.85,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-  void openListener() throws Exception {\n-    if (listener.getLocalPort() !\u003d -1) { // it\u0027s already bound\n-      return;\n-    }\n-    if (listenerStartedExternally) { // Expect that listener was started securely\n-      throw new Exception(\"Expected webserver\u0027s listener to be started \" +\n-          \"previously but wasn\u0027t\");\n-    }\n-    int port \u003d listener.getPort();\n-    while (true) {\n-      // jetty has a bug where you can\u0027t reopen a listener that previously\n-      // failed to open w/o issuing a close first, even if the port is changed\n-      try {\n-        listener.close();\n-        listener.open();\n-        break;\n-      } catch (BindException ex) {\n-        if (port \u003d\u003d 0 || !findPort) {\n-          BindException be \u003d new BindException(\n-              \"Port in use: \" + listener.getHost() + \":\" + listener.getPort());\n-          be.initCause(ex);\n-          throw be;\n-        }\n+  void openListeners() throws Exception {\n+    for (ListenerInfo li : listeners) {\n+      Connector listener \u003d li.listener;\n+      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n+        // This listener is either started externally or has been bound\n+        continue;\n       }\n-      // try the next port number\n-      listener.setPort(++port);\n-      Thread.sleep(100);\n+      int port \u003d listener.getPort();\n+      while (true) {\n+        // jetty has a bug where you can\u0027t reopen a listener that previously\n+        // failed to open w/o issuing a close first, even if the port is changed\n+        try {\n+          listener.close();\n+          listener.open();\n+          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n+          break;\n+        } catch (BindException ex) {\n+          if (port \u003d\u003d 0 || !findPort) {\n+            BindException be \u003d new BindException(\"Port in use: \"\n+                + listener.getHost() + \":\" + listener.getPort());\n+            be.initCause(ex);\n+            throw be;\n+          }\n+        }\n+        // try the next port number\n+        listener.setPort(++port);\n+        Thread.sleep(100);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void openListeners() throws Exception {\n    for (ListenerInfo li : listeners) {\n      Connector listener \u003d li.listener;\n      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n        // This listener is either started externally or has been bound\n        continue;\n      }\n      int port \u003d listener.getPort();\n      while (true) {\n        // jetty has a bug where you can\u0027t reopen a listener that previously\n        // failed to open w/o issuing a close first, even if the port is changed\n        try {\n          listener.close();\n          listener.open();\n          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n          break;\n        } catch (BindException ex) {\n          if (port \u003d\u003d 0 || !findPort) {\n            BindException be \u003d new BindException(\"Port in use: \"\n                + listener.getHost() + \":\" + listener.getPort());\n            be.initCause(ex);\n            throw be;\n          }\n        }\n        // try the next port number\n        listener.setPort(++port);\n        Thread.sleep(100);\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {
            "oldValue": "openListener",
            "newValue": "openListeners"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5545. Allow specifying endpoints for listeners in HttpServer. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1546151 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/11/13 10:20 AM",
          "commitName": "2214871d916fdcae62aa51afbb5fd571f2808745",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "20/11/13 1:51 PM",
          "commitNameOld": "3cae2ba63fe6f0765d860677a9bd9f1ea158c1c3",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.85,
          "commitsBetweenForRepo": 32,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,30 @@\n-  void openListener() throws Exception {\n-    if (listener.getLocalPort() !\u003d -1) { // it\u0027s already bound\n-      return;\n-    }\n-    if (listenerStartedExternally) { // Expect that listener was started securely\n-      throw new Exception(\"Expected webserver\u0027s listener to be started \" +\n-          \"previously but wasn\u0027t\");\n-    }\n-    int port \u003d listener.getPort();\n-    while (true) {\n-      // jetty has a bug where you can\u0027t reopen a listener that previously\n-      // failed to open w/o issuing a close first, even if the port is changed\n-      try {\n-        listener.close();\n-        listener.open();\n-        break;\n-      } catch (BindException ex) {\n-        if (port \u003d\u003d 0 || !findPort) {\n-          BindException be \u003d new BindException(\n-              \"Port in use: \" + listener.getHost() + \":\" + listener.getPort());\n-          be.initCause(ex);\n-          throw be;\n-        }\n+  void openListeners() throws Exception {\n+    for (ListenerInfo li : listeners) {\n+      Connector listener \u003d li.listener;\n+      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n+        // This listener is either started externally or has been bound\n+        continue;\n       }\n-      // try the next port number\n-      listener.setPort(++port);\n-      Thread.sleep(100);\n+      int port \u003d listener.getPort();\n+      while (true) {\n+        // jetty has a bug where you can\u0027t reopen a listener that previously\n+        // failed to open w/o issuing a close first, even if the port is changed\n+        try {\n+          listener.close();\n+          listener.open();\n+          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n+          break;\n+        } catch (BindException ex) {\n+          if (port \u003d\u003d 0 || !findPort) {\n+            BindException be \u003d new BindException(\"Port in use: \"\n+                + listener.getHost() + \":\" + listener.getPort());\n+            be.initCause(ex);\n+            throw be;\n+          }\n+        }\n+        // try the next port number\n+        listener.setPort(++port);\n+        Thread.sleep(100);\n+      }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void openListeners() throws Exception {\n    for (ListenerInfo li : listeners) {\n      Connector listener \u003d li.listener;\n      if (!li.isManaged || li.listener.getLocalPort() !\u003d -1) {\n        // This listener is either started externally or has been bound\n        continue;\n      }\n      int port \u003d listener.getPort();\n      while (true) {\n        // jetty has a bug where you can\u0027t reopen a listener that previously\n        // failed to open w/o issuing a close first, even if the port is changed\n        try {\n          listener.close();\n          listener.open();\n          LOG.info(\"Jetty bound to port \" + listener.getLocalPort());\n          break;\n        } catch (BindException ex) {\n          if (port \u003d\u003d 0 || !findPort) {\n            BindException be \u003d new BindException(\"Port in use: \"\n                + listener.getHost() + \":\" + listener.getPort());\n            be.initCause(ex);\n            throw be;\n          }\n        }\n        // try the next port number\n        listener.setPort(++port);\n        Thread.sleep(100);\n      }\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "097a001b3fd355558c971cd82a633177ace77b39": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8334. HttpServer sometimes returns incorrect port (Daryn Sharp via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1332336 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/04/12 11:56 AM",
      "commitName": "097a001b3fd355558c971cd82a633177ace77b39",
      "commitAuthor": "Robert Joseph Evans",
      "diff": "@@ -0,0 +1,29 @@\n+  void openListener() throws Exception {\n+    if (listener.getLocalPort() !\u003d -1) { // it\u0027s already bound\n+      return;\n+    }\n+    if (listenerStartedExternally) { // Expect that listener was started securely\n+      throw new Exception(\"Expected webserver\u0027s listener to be started \" +\n+          \"previously but wasn\u0027t\");\n+    }\n+    int port \u003d listener.getPort();\n+    while (true) {\n+      // jetty has a bug where you can\u0027t reopen a listener that previously\n+      // failed to open w/o issuing a close first, even if the port is changed\n+      try {\n+        listener.close();\n+        listener.open();\n+        break;\n+      } catch (BindException ex) {\n+        if (port \u003d\u003d 0 || !findPort) {\n+          BindException be \u003d new BindException(\n+              \"Port in use: \" + listener.getHost() + \":\" + listener.getPort());\n+          be.initCause(ex);\n+          throw be;\n+        }\n+      }\n+      // try the next port number\n+      listener.setPort(++port);\n+      Thread.sleep(100);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void openListener() throws Exception {\n    if (listener.getLocalPort() !\u003d -1) { // it\u0027s already bound\n      return;\n    }\n    if (listenerStartedExternally) { // Expect that listener was started securely\n      throw new Exception(\"Expected webserver\u0027s listener to be started \" +\n          \"previously but wasn\u0027t\");\n    }\n    int port \u003d listener.getPort();\n    while (true) {\n      // jetty has a bug where you can\u0027t reopen a listener that previously\n      // failed to open w/o issuing a close first, even if the port is changed\n      try {\n        listener.close();\n        listener.open();\n        break;\n      } catch (BindException ex) {\n        if (port \u003d\u003d 0 || !findPort) {\n          BindException be \u003d new BindException(\n              \"Port in use: \" + listener.getHost() + \":\" + listener.getPort());\n          be.initCause(ex);\n          throw be;\n        }\n      }\n      // try the next port number\n      listener.setPort(++port);\n      Thread.sleep(100);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/http/HttpServer.java"
    }
  }
}