{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CopyCommitter.java",
  "functionName": "commitJob",
  "functionId": "commitJob___jobContext-JobContext",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
  "functionStartLine": 99,
  "functionEndLine": 137,
  "numCommitsSeen": 23,
  "timeTaken": 3541,
  "changeHistory": [
    "e60f5e2572532e2bce44757997f1086065b8fd80",
    "e2cecb681e2aab8b7c5465719cac53dce407a64c",
    "1976e0066e9ae8852715fa69d8aea3769330e933",
    "bf3fb585aaf2b179836e139c041fc87920a3c886",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03",
    "75cb1d42abec54ef5484636e020949ceebe189e9",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
    "041b8326a1511b721958792a6b94ecfe27d7a1fb",
    "640a097533e0883bf49504673228d5a327089b44",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "e60f5e2572532e2bce44757997f1086065b8fd80": "Ybodychange",
    "e2cecb681e2aab8b7c5465719cac53dce407a64c": "Ybodychange",
    "1976e0066e9ae8852715fa69d8aea3769330e933": "Ybodychange",
    "bf3fb585aaf2b179836e139c041fc87920a3c886": "Ybodychange",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": "Ybodychange",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": "Ybodychange",
    "75cb1d42abec54ef5484636e020949ceebe189e9": "Ybodychange",
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": "Ybodychange",
    "041b8326a1511b721958792a6b94ecfe27d7a1fb": "Ybodychange",
    "640a097533e0883bf49504673228d5a327089b44": "Ybodychange",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e60f5e2572532e2bce44757997f1086065b8fd80": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16440. Distcp can not preserve timestamp with -delete option. Contributed by ludun.\n",
      "commitDate": "20/07/19 12:41 AM",
      "commitName": "e60f5e2572532e2bce44757997f1086065b8fd80",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "17/07/19 5:13 AM",
      "commitNameOld": "19a001826f6ab9ac2caa92b66864f62218557beb",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 2.81,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,39 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(\n         DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     ignoreFailures \u003d conf.getBoolean(\n         DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n \n     if (blocksPerChunk \u003e 0) {\n       concatFileChunks(conf);\n     }\n \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n-    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n-    final boolean preserveRawXattrs \u003d\n-        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n-    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n-      preserveFileAttributesForDirectories(conf);\n-    }\n-\n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n         // save missing information to a directory\n         trackMissing(conf);\n       }\n+      // for HDFS-14621, should preserve status after -delete\n+      String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n+      final boolean preserveRawXattrs \u003d conf.getBoolean(\n+              DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n+      if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n+        preserveFileAttributesForDirectories(conf);\n+      }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(\n        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    ignoreFailures \u003d conf.getBoolean(\n        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n\n    if (blocksPerChunk \u003e 0) {\n      concatFileChunks(conf);\n    }\n\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n        // save missing information to a directory\n        trackMissing(conf);\n      }\n      // for HDFS-14621, should preserve status after -delete\n      String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n      final boolean preserveRawXattrs \u003d conf.getBoolean(\n              DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n      if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n        preserveFileAttributesForDirectories(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "e2cecb681e2aab8b7c5465719cac53dce407a64c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15850. CopyCommitter#concatFileChunks should check that the blocks per chunk is not 0. Contributed by Ted Yu.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "19/10/18 1:21 PM",
      "commitName": "e2cecb681e2aab8b7c5465719cac53dce407a64c",
      "commitAuthor": "Ted Yu",
      "commitDateOld": "10/07/18 2:43 AM",
      "commitNameOld": "ca8b80bf59c0570bb9172208d3a6c993a6854514",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 101.44,
      "commitsBetweenForRepo": 920,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,39 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(\n         DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     ignoreFailures \u003d conf.getBoolean(\n         DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n \n-    concatFileChunks(conf);\n+    if (blocksPerChunk \u003e 0) {\n+      concatFileChunks(conf);\n+    }\n \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n         // save missing information to a directory\n         trackMissing(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(\n        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    ignoreFailures \u003d conf.getBoolean(\n        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n\n    if (blocksPerChunk \u003e 0) {\n      concatFileChunks(conf);\n    }\n\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n        // save missing information to a directory\n        trackMissing(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "1976e0066e9ae8852715fa69d8aea3769330e933": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15209. DistCp to eliminate needless deletion of files under already-deleted directories.\nContributed by Steve Loughran.\n",
      "commitDate": "15/03/18 11:05 AM",
      "commitName": "1976e0066e9ae8852715fa69d8aea3769330e933",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "31/03/17 8:04 PM",
      "commitNameOld": "26172a94d6431e70d7fe15d66be9a7e195f79f60",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 348.63,
      "commitsBetweenForRepo": 2337,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,37 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(\n         DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     ignoreFailures \u003d conf.getBoolean(\n         DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n \n     concatFileChunks(conf);\n \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n+      } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n+        // save missing information to a directory\n+        trackMissing(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(\n        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    ignoreFailures \u003d conf.getBoolean(\n        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n\n    concatFileChunks(conf);\n\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      } else if (conf.get(CONF_LABEL_TRACK_MISSING) !\u003d null) {\n        // save missing information to a directory\n        trackMissing(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "bf3fb585aaf2b179836e139c041fc87920a3c886": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,34 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n-    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n-    \n+    targetPathExists \u003d conf.getBoolean(\n+        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n+    ignoreFailures \u003d conf.getBoolean(\n+        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n+\n+    concatFileChunks(conf);\n+\n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(\n        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    ignoreFailures \u003d conf.getBoolean(\n        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n\n    concatFileChunks(conf);\n\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:01 PM",
      "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,29 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n-    targetPathExists \u003d conf.getBoolean(\n-        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n-    ignoreFailures \u003d conf.getBoolean(\n-        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n-\n-    concatFileChunks(conf);\n-\n+    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n+    \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    \n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
      "commitDate": "30/03/17 5:01 PM",
      "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 135.21,
      "commitsBetweenForRepo": 732,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,34 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n-    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n-    \n+    targetPathExists \u003d conf.getBoolean(\n+        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n+    ignoreFailures \u003d conf.getBoolean(\n+        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n+\n+    concatFileChunks(conf);\n+\n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(\n        DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    ignoreFailures \u003d conf.getBoolean(\n        DistCpOptionSwitch.IGNORE_FAILURES.getConfigLabel(), false);\n\n    concatFileChunks(conf);\n\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "75cb1d42abec54ef5484636e020949ceebe189e9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8036. Use snapshot path as source when using snapshot diff report in DistCp. Contributed by Jing Zhao.\n",
      "commitDate": "01/04/15 4:50 PM",
      "commitName": "75cb1d42abec54ef5484636e020949ceebe189e9",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "25/03/15 3:45 PM",
      "commitNameOld": "44809b80814d5520a73d5609d0f73a13eb2360ac",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 7.05,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,29 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n-      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)\n-          \u0026\u0026 !(conf.getBoolean(DistCpConstants.CONF_LABEL_DIFF, false))) {\n+      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    \n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "ed70fa142cabdbc1065e4dbbc95e99c8850c4751": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7535. Utilize Snapshot diff report for distcp. Contributed by Jing Zhao.\n",
      "commitDate": "04/03/15 10:30 AM",
      "commitName": "ed70fa142cabdbc1065e4dbbc95e99c8850c4751",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/03/15 1:06 AM",
      "commitNameOld": "9ae7f9eb7baeb244e1b95aabc93ad8124870b9a9",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 1.39,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     final boolean preserveRawXattrs \u003d\n         conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n     if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n-      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n+      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)\n+          \u0026\u0026 !(conf.getBoolean(DistCpConstants.CONF_LABEL_DIFF, false))) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    \n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)\n          \u0026\u0026 !(conf.getBoolean(DistCpConstants.CONF_LABEL_DIFF, false))) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "041b8326a1511b721958792a6b94ecfe27d7a1fb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6007. Add support to distcp to preserve raw.* namespace extended attributes. (clamb)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/fs-encryption@1616657 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/14 6:32 PM",
      "commitName": "041b8326a1511b721958792a6b94ecfe27d7a1fb",
      "commitAuthor": "Charles Lamb",
      "commitDateOld": "16/05/14 11:25 AM",
      "commitNameOld": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 83.3,
      "commitsBetweenForRepo": 591,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,29 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n     syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n     overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n     targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n     \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n-    if (attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) {\n+    final boolean preserveRawXattrs \u003d\n+        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n+    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    \n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    final boolean preserveRawXattrs \u003d\n        conf.getBoolean(DistCpConstants.CONF_LABEL_PRESERVE_RAWXATTRS, false);\n    if ((attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) || preserveRawXattrs) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "640a097533e0883bf49504673228d5a327089b44": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10459. distcp V2 doesn\u0027t preserve root dir\u0027s attributes when -p is specified. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 5:32 PM",
      "commitName": "640a097533e0883bf49504673228d5a327089b44",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "25/01/12 10:36 PM",
      "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthorOld": "Mahadev Konar",
      "daysBetweenCommits": 797.75,
      "commitsBetweenForRepo": 5080,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   public void commitJob(JobContext jobContext) throws IOException {\n     Configuration conf \u003d jobContext.getConfiguration();\n+    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n+    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n+    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n+    \n     super.commitJob(jobContext);\n \n     cleanupTempFiles(jobContext);\n \n     String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n     if (attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) {\n       preserveFileAttributesForDirectories(conf);\n     }\n \n     try {\n       if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n         deleteMissing(conf);\n       } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n         commitData(conf);\n       }\n       taskAttemptContext.setStatus(\"Commit Successful\");\n     }\n     finally {\n       cleanup(conf);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    syncFolder \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_SYNC_FOLDERS, false);\n    overwrite \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_OVERWRITE, false);\n    targetPathExists \u003d conf.getBoolean(DistCpConstants.CONF_LABEL_TARGET_PATH_EXISTS, true);\n    \n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    if (attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java",
      "extendedDetails": {}
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,23 @@\n+  public void commitJob(JobContext jobContext) throws IOException {\n+    Configuration conf \u003d jobContext.getConfiguration();\n+    super.commitJob(jobContext);\n+\n+    cleanupTempFiles(jobContext);\n+\n+    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n+    if (attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) {\n+      preserveFileAttributesForDirectories(conf);\n+    }\n+\n+    try {\n+      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n+        deleteMissing(conf);\n+      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n+        commitData(conf);\n+      }\n+      taskAttemptContext.setStatus(\"Commit Successful\");\n+    }\n+    finally {\n+      cleanup(conf);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void commitJob(JobContext jobContext) throws IOException {\n    Configuration conf \u003d jobContext.getConfiguration();\n    super.commitJob(jobContext);\n\n    cleanupTempFiles(jobContext);\n\n    String attributes \u003d conf.get(DistCpConstants.CONF_LABEL_PRESERVE_STATUS);\n    if (attributes !\u003d null \u0026\u0026 !attributes.isEmpty()) {\n      preserveFileAttributesForDirectories(conf);\n    }\n\n    try {\n      if (conf.getBoolean(DistCpConstants.CONF_LABEL_DELETE_MISSING, false)) {\n        deleteMissing(conf);\n      } else if (conf.getBoolean(DistCpConstants.CONF_LABEL_ATOMIC_COPY, false)) {\n        commitData(conf);\n      }\n      taskAttemptContext.setStatus(\"Commit Successful\");\n    }\n    finally {\n      cleanup(conf);\n    }\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/mapred/CopyCommitter.java"
    }
  }
}