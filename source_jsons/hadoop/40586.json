{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultPlacementAlgorithm.java",
  "functionName": "attemptPlacementOnNode",
  "functionId": "attemptPlacementOnNode___appId-ApplicationId__availableResources-Resource__schedulingRequest-SchedulingRequest__schedulerNode-SchedulerNode__ignoreResourceCheck-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
  "functionStartLine": 80,
  "functionEndLine": 92,
  "numCommitsSeen": 15,
  "timeTaken": 4413,
  "changeHistory": [
    "6e5ba9366fc05719906ff2789b1a0fd26001182b",
    "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21",
    "38af23796971193fa529c3d08ffde8fcd6e607b6",
    "bdba01f73b58d2228e808c6f61377f101b6bac1c",
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf"
  ],
  "changeHistoryShort": {
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd": "Ybodychange",
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": "Ybodychange",
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Ybodychange",
    "bdba01f73b58d2228e808c6f61377f101b6bac1c": "Ybodychange",
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6e5ba9366fc05719906ff2789b1a0fd26001182b": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "02/02/18 10:28 AM",
      "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
          "commitDate": "02/02/18 10:28 AM",
          "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 2.37,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n-  public boolean attemptPlacementOnNode(ApplicationId appId,\n-      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n+  boolean attemptPlacementOnNode(ApplicationId appId,\n+      Resource availableResources, SchedulingRequest schedulingRequest,\n+      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n       throws InvalidAllocationTagsQueryException {\n-    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n-        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {\n-      return true;\n-    }\n-    return false;\n+    boolean fitsInNode \u003d ignoreResourceCheck ||\n+        Resources.fitsIn(resourceCalculator,\n+            schedulingRequest.getResourceSizing().getResources(),\n+            availableResources);\n+    boolean constraintsSatisfied \u003d\n+        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n+    return fitsInNode \u0026\u0026 constraintsSatisfied;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean attemptPlacementOnNode(ApplicationId appId,\n      Resource availableResources, SchedulingRequest schedulingRequest,\n      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n      throws InvalidAllocationTagsQueryException {\n    boolean fitsInNode \u003d ignoreResourceCheck ||\n        Resources.fitsIn(resourceCalculator,\n            schedulingRequest.getResourceSizing().getResources(),\n            availableResources);\n    boolean constraintsSatisfied \u003d\n        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n    return fitsInNode \u0026\u0026 constraintsSatisfied;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
          "extendedDetails": {
            "oldValue": "[appId-ApplicationId, schedulingRequest-SchedulingRequest, schedulerNode-SchedulerNode]",
            "newValue": "[appId-ApplicationId, availableResources-Resource, schedulingRequest-SchedulingRequest, schedulerNode-SchedulerNode, ignoreResourceCheck-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
          "commitDate": "02/02/18 10:28 AM",
          "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 2.37,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n-  public boolean attemptPlacementOnNode(ApplicationId appId,\n-      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n+  boolean attemptPlacementOnNode(ApplicationId appId,\n+      Resource availableResources, SchedulingRequest schedulingRequest,\n+      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n       throws InvalidAllocationTagsQueryException {\n-    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n-        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {\n-      return true;\n-    }\n-    return false;\n+    boolean fitsInNode \u003d ignoreResourceCheck ||\n+        Resources.fitsIn(resourceCalculator,\n+            schedulingRequest.getResourceSizing().getResources(),\n+            availableResources);\n+    boolean constraintsSatisfied \u003d\n+        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n+    return fitsInNode \u0026\u0026 constraintsSatisfied;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean attemptPlacementOnNode(ApplicationId appId,\n      Resource availableResources, SchedulingRequest schedulingRequest,\n      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n      throws InvalidAllocationTagsQueryException {\n    boolean fitsInNode \u003d ignoreResourceCheck ||\n        Resources.fitsIn(resourceCalculator,\n            schedulingRequest.getResourceSizing().getResources(),\n            availableResources);\n    boolean constraintsSatisfied \u003d\n        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n    return fitsInNode \u0026\u0026 constraintsSatisfied;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7839. Modify PlacementAlgorithm to Check node capacity before placing request on node. (Panagiotis Garefalakis via asuresh)\n",
          "commitDate": "02/02/18 10:28 AM",
          "commitName": "6e5ba9366fc05719906ff2789b1a0fd26001182b",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 2.37,
          "commitsBetweenForRepo": 27,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,13 @@\n-  public boolean attemptPlacementOnNode(ApplicationId appId,\n-      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n+  boolean attemptPlacementOnNode(ApplicationId appId,\n+      Resource availableResources, SchedulingRequest schedulingRequest,\n+      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n       throws InvalidAllocationTagsQueryException {\n-    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n-        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {\n-      return true;\n-    }\n-    return false;\n+    boolean fitsInNode \u003d ignoreResourceCheck ||\n+        Resources.fitsIn(resourceCalculator,\n+            schedulingRequest.getResourceSizing().getResources(),\n+            availableResources);\n+    boolean constraintsSatisfied \u003d\n+        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n+    return fitsInNode \u0026\u0026 constraintsSatisfied;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean attemptPlacementOnNode(ApplicationId appId,\n      Resource availableResources, SchedulingRequest schedulingRequest,\n      SchedulerNode schedulerNode, boolean ignoreResourceCheck)\n      throws InvalidAllocationTagsQueryException {\n    boolean fitsInNode \u003d ignoreResourceCheck ||\n        Resources.fitsIn(resourceCalculator,\n            schedulingRequest.getResourceSizing().getResources(),\n            availableResources);\n    boolean constraintsSatisfied \u003d\n        PlacementConstraintsUtil.canSatisfyConstraints(appId,\n        schedulingRequest, schedulerNode, constraintManager, tagsManager);\n    return fitsInNode \u0026\u0026 constraintsSatisfied;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
          "extendedDetails": {}
        }
      ]
    },
    "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7783. Add validation step to ensure constraints are not violated due to order in which a request is processed. (asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "a4c539fcdba817e313b2375abf2c4c9a1d13a4fd",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "adbe87abf8b2814e0e2988d09ef8a8569190c80e",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,9 @@\n   public boolean attemptPlacementOnNode(ApplicationId appId,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n       throws InvalidAllocationTagsQueryException {\n-    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n-    if (numAllocs \u003e 0) {\n-      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n-          schedulingRequest, schedulerNode,\n-          constraintManager, tagsManager)) {\n-        return true;\n-      }\n+    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {\n+      return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptPlacementOnNode(ApplicationId appId,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n      throws InvalidAllocationTagsQueryException {\n    if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n        schedulingRequest, schedulerNode, constraintManager, tagsManager)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
      "extendedDetails": {}
    },
    "8bf7c444368f48f63f8011cf155f551c6b51ee21": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7763. Allow Constraints specified in the SchedulingRequest to override application level constraints. (Weiwei Yang via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "8bf7c444368f48f63f8011cf155f551c6b51ee21",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "28fe7f331837b36e78fa34ed990993677dddeaee",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public boolean attemptPlacementOnNode(ApplicationId appId,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n       throws InvalidAllocationTagsQueryException {\n     int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n     if (numAllocs \u003e 0) {\n-      if (PlacementConstraintsUtil.canSatisfySingleConstraint(appId,\n-          schedulingRequest.getAllocationTags(), schedulerNode,\n+      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+          schedulingRequest, schedulerNode,\n           constraintManager, tagsManager)) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptPlacementOnNode(ApplicationId appId,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n      throws InvalidAllocationTagsQueryException {\n    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n    if (numAllocs \u003e 0) {\n      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n          schedulingRequest, schedulerNode,\n          constraintManager, tagsManager)) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
      "extendedDetails": {}
    },
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "bdba01f73b58d2228e808c6f61377f101b6bac1c",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public boolean attemptPlacementOnNode(ApplicationId appId,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n       throws InvalidAllocationTagsQueryException {\n     int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n     if (numAllocs \u003e 0) {\n-      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+      if (PlacementConstraintsUtil.canSatisfySingleConstraint(appId,\n           schedulingRequest.getAllocationTags(), schedulerNode,\n           constraintManager, tagsManager)) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptPlacementOnNode(ApplicationId appId,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n      throws InvalidAllocationTagsQueryException {\n    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n    if (numAllocs \u003e 0) {\n      if (PlacementConstraintsUtil.canSatisfySingleConstraint(appId,\n          schedulingRequest.getAllocationTags(), schedulerNode,\n          constraintManager, tagsManager)) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
      "extendedDetails": {}
    },
    "bdba01f73b58d2228e808c6f61377f101b6bac1c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7682. Expose canSatisfyConstraints utility function to validate a placement against a constraint. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "bdba01f73b58d2228e808c6f61377f101b6bac1c",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "a52d11fb8c103f14e42692600a058ba3b56e2ecf",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public boolean attemptPlacementOnNode(ApplicationId appId,\n       SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n       throws InvalidAllocationTagsQueryException {\n     int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n     if (numAllocs \u003e 0) {\n-      if (canAssign(appId,\n-          schedulingRequest.getAllocationTags(), schedulerNode.getNodeID(),\n-          tagsManager)) {\n+      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n+          schedulingRequest.getAllocationTags(), schedulerNode,\n+          constraintManager, tagsManager)) {\n         return true;\n       }\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptPlacementOnNode(ApplicationId appId,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n      throws InvalidAllocationTagsQueryException {\n    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n    if (numAllocs \u003e 0) {\n      if (PlacementConstraintsUtil.canSatisfyConstraints(appId,\n          schedulingRequest.getAllocationTags(), schedulerNode,\n          constraintManager, tagsManager)) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java",
      "extendedDetails": {}
    },
    "a52d11fb8c103f14e42692600a058ba3b56e2ecf": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7613. Implement Basic algorithm for constraint based placement. (Panagiotis Garefalakis via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "a52d11fb8c103f14e42692600a058ba3b56e2ecf",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,13 @@\n+  public boolean attemptPlacementOnNode(ApplicationId appId,\n+      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n+      throws InvalidAllocationTagsQueryException {\n+    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n+    if (numAllocs \u003e 0) {\n+      if (canAssign(appId,\n+          schedulingRequest.getAllocationTags(), schedulerNode.getNodeID(),\n+          tagsManager)) {\n+        return true;\n+      }\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean attemptPlacementOnNode(ApplicationId appId,\n      SchedulingRequest schedulingRequest, SchedulerNode schedulerNode)\n      throws InvalidAllocationTagsQueryException {\n    int numAllocs \u003d schedulingRequest.getResourceSizing().getNumAllocations();\n    if (numAllocs \u003e 0) {\n      if (canAssign(appId,\n          schedulingRequest.getAllocationTags(), schedulerNode.getNodeID(),\n          tagsManager)) {\n        return true;\n      }\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/constraint/algorithm/DefaultPlacementAlgorithm.java"
    }
  }
}