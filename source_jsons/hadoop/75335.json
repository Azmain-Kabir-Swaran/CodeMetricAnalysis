{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAServiceProtocolServerSideTranslatorPB.java",
  "functionName": "getServiceStatus",
  "functionId": "getServiceStatus___controller-RpcController__request-GetServiceStatusRequestProto",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
  "functionStartLine": 144,
  "functionEndLine": 178,
  "numCommitsSeen": 7,
  "timeTaken": 1389,
  "changeHistory": [
    "091ad974cd29fae0cf8fbc98ab84900a1a324839",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316",
    "7933dc583838fa7273cf55c03400a591a41d23db"
  ],
  "changeHistoryShort": {
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": "Ybodychange",
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "7933dc583838fa7273cf55c03400a591a41d23db": "Yintroduced"
  },
  "changeHistoryDetails": {
    "091ad974cd29fae0cf8fbc98ab84900a1a324839": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13286. [SBN read] Add haadmin commands to transition between standby and observer. Contributed by Chao Sun.\n",
      "commitDate": "24/12/18 9:33 AM",
      "commitName": "091ad974cd29fae0cf8fbc98ab84900a1a324839",
      "commitAuthor": "Erik Krogen",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 524.54,
      "commitsBetweenForRepo": 4582,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n       GetServiceStatusRequestProto request) throws ServiceException {\n     HAServiceStatus s;\n     try {\n       s \u003d server.getServiceStatus();\n     } catch(IOException e) {\n       throw new ServiceException(e);\n     }\n     \n     HAServiceStateProto retState;\n     switch (s.getState()) {\n     case ACTIVE:\n       retState \u003d HAServiceStateProto.ACTIVE;\n       break;\n     case STANDBY:\n       retState \u003d HAServiceStateProto.STANDBY;\n       break;\n+    case OBSERVER:\n+      retState \u003d HAServiceStateProto.OBSERVER;\n+      break;\n     case INITIALIZING:\n     default:\n       retState \u003d HAServiceStateProto.INITIALIZING;\n       break;\n     }\n     \n     GetServiceStatusResponseProto.Builder ret \u003d\n       GetServiceStatusResponseProto.newBuilder()\n         .setState(retState)\n         .setReadyToBecomeActive(s.isReadyToBecomeActive());\n     if (!s.isReadyToBecomeActive()) {\n       ret.setNotReadyReason(s.getNotReadyReason());\n     }\n     return ret.build();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n      GetServiceStatusRequestProto request) throws ServiceException {\n    HAServiceStatus s;\n    try {\n      s \u003d server.getServiceStatus();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto retState;\n    switch (s.getState()) {\n    case ACTIVE:\n      retState \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      retState \u003d HAServiceStateProto.STANDBY;\n      break;\n    case OBSERVER:\n      retState \u003d HAServiceStateProto.OBSERVER;\n      break;\n    case INITIALIZING:\n    default:\n      retState \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    \n    GetServiceStatusResponseProto.Builder ret \u003d\n      GetServiceStatusResponseProto.newBuilder()\n        .setState(retState)\n        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n    if (!s.isReadyToBecomeActive()) {\n      ret.setNotReadyReason(s.getNotReadyReason());\n    }\n    return ret.build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/12 11:29 PM",
      "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/02/12 11:37 PM",
          "commitNameOld": "7933dc583838fa7273cf55c03400a591a41d23db",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 34.95,
          "commitsBetweenForRepo": 230,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-  public GetServiceStateResponseProto getServiceState(RpcController controller,\n-      GetServiceStateRequestProto request) throws ServiceException {\n-    HAServiceState s;\n+  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n+      GetServiceStatusRequestProto request) throws ServiceException {\n+    HAServiceStatus s;\n     try {\n-      s \u003d server.getServiceState();\n+      s \u003d server.getServiceStatus();\n     } catch(IOException e) {\n       throw new ServiceException(e);\n     }\n     \n-    HAServiceStateProto ret;\n-    switch (s) {\n+    HAServiceStateProto retState;\n+    switch (s.getState()) {\n     case ACTIVE:\n-      ret \u003d HAServiceStateProto.ACTIVE;\n+      retState \u003d HAServiceStateProto.ACTIVE;\n       break;\n     case STANDBY:\n-      ret \u003d HAServiceStateProto.STANDBY;\n+      retState \u003d HAServiceStateProto.STANDBY;\n       break;\n     case INITIALIZING:\n     default:\n-      ret \u003d HAServiceStateProto.INITIALIZING;\n+      retState \u003d HAServiceStateProto.INITIALIZING;\n       break;\n     }\n-    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n+    \n+    GetServiceStatusResponseProto.Builder ret \u003d\n+      GetServiceStatusResponseProto.newBuilder()\n+        .setState(retState)\n+        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n+    if (!s.isReadyToBecomeActive()) {\n+      ret.setNotReadyReason(s.getNotReadyReason());\n+    }\n+    return ret.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n      GetServiceStatusRequestProto request) throws ServiceException {\n    HAServiceStatus s;\n    try {\n      s \u003d server.getServiceStatus();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto retState;\n    switch (s.getState()) {\n    case ACTIVE:\n      retState \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      retState \u003d HAServiceStateProto.STANDBY;\n      break;\n    case INITIALIZING:\n    default:\n      retState \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    \n    GetServiceStatusResponseProto.Builder ret \u003d\n      GetServiceStatusResponseProto.newBuilder()\n        .setState(retState)\n        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n    if (!s.isReadyToBecomeActive()) {\n      ret.setNotReadyReason(s.getNotReadyReason());\n    }\n    return ret.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "getServiceState",
            "newValue": "getServiceStatus"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/02/12 11:37 PM",
          "commitNameOld": "7933dc583838fa7273cf55c03400a591a41d23db",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 34.95,
          "commitsBetweenForRepo": 230,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-  public GetServiceStateResponseProto getServiceState(RpcController controller,\n-      GetServiceStateRequestProto request) throws ServiceException {\n-    HAServiceState s;\n+  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n+      GetServiceStatusRequestProto request) throws ServiceException {\n+    HAServiceStatus s;\n     try {\n-      s \u003d server.getServiceState();\n+      s \u003d server.getServiceStatus();\n     } catch(IOException e) {\n       throw new ServiceException(e);\n     }\n     \n-    HAServiceStateProto ret;\n-    switch (s) {\n+    HAServiceStateProto retState;\n+    switch (s.getState()) {\n     case ACTIVE:\n-      ret \u003d HAServiceStateProto.ACTIVE;\n+      retState \u003d HAServiceStateProto.ACTIVE;\n       break;\n     case STANDBY:\n-      ret \u003d HAServiceStateProto.STANDBY;\n+      retState \u003d HAServiceStateProto.STANDBY;\n       break;\n     case INITIALIZING:\n     default:\n-      ret \u003d HAServiceStateProto.INITIALIZING;\n+      retState \u003d HAServiceStateProto.INITIALIZING;\n       break;\n     }\n-    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n+    \n+    GetServiceStatusResponseProto.Builder ret \u003d\n+      GetServiceStatusResponseProto.newBuilder()\n+        .setState(retState)\n+        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n+    if (!s.isReadyToBecomeActive()) {\n+      ret.setNotReadyReason(s.getNotReadyReason());\n+    }\n+    return ret.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n      GetServiceStatusRequestProto request) throws ServiceException {\n    HAServiceStatus s;\n    try {\n      s \u003d server.getServiceStatus();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto retState;\n    switch (s.getState()) {\n    case ACTIVE:\n      retState \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      retState \u003d HAServiceStateProto.STANDBY;\n      break;\n    case INITIALIZING:\n    default:\n      retState \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    \n    GetServiceStatusResponseProto.Builder ret \u003d\n      GetServiceStatusResponseProto.newBuilder()\n        .setState(retState)\n        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n    if (!s.isReadyToBecomeActive()) {\n      ret.setNotReadyReason(s.getNotReadyReason());\n    }\n    return ret.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "[controller-RpcController, request-GetServiceStateRequestProto]",
            "newValue": "[controller-RpcController, request-GetServiceStatusRequestProto]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/02/12 11:37 PM",
          "commitNameOld": "7933dc583838fa7273cf55c03400a591a41d23db",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 34.95,
          "commitsBetweenForRepo": 230,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-  public GetServiceStateResponseProto getServiceState(RpcController controller,\n-      GetServiceStateRequestProto request) throws ServiceException {\n-    HAServiceState s;\n+  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n+      GetServiceStatusRequestProto request) throws ServiceException {\n+    HAServiceStatus s;\n     try {\n-      s \u003d server.getServiceState();\n+      s \u003d server.getServiceStatus();\n     } catch(IOException e) {\n       throw new ServiceException(e);\n     }\n     \n-    HAServiceStateProto ret;\n-    switch (s) {\n+    HAServiceStateProto retState;\n+    switch (s.getState()) {\n     case ACTIVE:\n-      ret \u003d HAServiceStateProto.ACTIVE;\n+      retState \u003d HAServiceStateProto.ACTIVE;\n       break;\n     case STANDBY:\n-      ret \u003d HAServiceStateProto.STANDBY;\n+      retState \u003d HAServiceStateProto.STANDBY;\n       break;\n     case INITIALIZING:\n     default:\n-      ret \u003d HAServiceStateProto.INITIALIZING;\n+      retState \u003d HAServiceStateProto.INITIALIZING;\n       break;\n     }\n-    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n+    \n+    GetServiceStatusResponseProto.Builder ret \u003d\n+      GetServiceStatusResponseProto.newBuilder()\n+        .setState(retState)\n+        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n+    if (!s.isReadyToBecomeActive()) {\n+      ret.setNotReadyReason(s.getNotReadyReason());\n+    }\n+    return ret.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n      GetServiceStatusRequestProto request) throws ServiceException {\n    HAServiceStatus s;\n    try {\n      s \u003d server.getServiceStatus();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto retState;\n    switch (s.getState()) {\n    case ACTIVE:\n      retState \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      retState \u003d HAServiceStateProto.STANDBY;\n      break;\n    case INITIALIZING:\n    default:\n      retState \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    \n    GetServiceStatusResponseProto.Builder ret \u003d\n      GetServiceStatusResponseProto.newBuilder()\n        .setState(retState)\n        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n    if (!s.isReadyToBecomeActive()) {\n      ret.setNotReadyReason(s.getNotReadyReason());\n    }\n    return ret.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "GetServiceStateResponseProto",
            "newValue": "GetServiceStatusResponseProto"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/02/12 11:37 PM",
          "commitNameOld": "7933dc583838fa7273cf55c03400a591a41d23db",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 34.95,
          "commitsBetweenForRepo": 230,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-  public GetServiceStateResponseProto getServiceState(RpcController controller,\n-      GetServiceStateRequestProto request) throws ServiceException {\n-    HAServiceState s;\n+  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n+      GetServiceStatusRequestProto request) throws ServiceException {\n+    HAServiceStatus s;\n     try {\n-      s \u003d server.getServiceState();\n+      s \u003d server.getServiceStatus();\n     } catch(IOException e) {\n       throw new ServiceException(e);\n     }\n     \n-    HAServiceStateProto ret;\n-    switch (s) {\n+    HAServiceStateProto retState;\n+    switch (s.getState()) {\n     case ACTIVE:\n-      ret \u003d HAServiceStateProto.ACTIVE;\n+      retState \u003d HAServiceStateProto.ACTIVE;\n       break;\n     case STANDBY:\n-      ret \u003d HAServiceStateProto.STANDBY;\n+      retState \u003d HAServiceStateProto.STANDBY;\n       break;\n     case INITIALIZING:\n     default:\n-      ret \u003d HAServiceStateProto.INITIALIZING;\n+      retState \u003d HAServiceStateProto.INITIALIZING;\n       break;\n     }\n-    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n+    \n+    GetServiceStatusResponseProto.Builder ret \u003d\n+      GetServiceStatusResponseProto.newBuilder()\n+        .setState(retState)\n+        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n+    if (!s.isReadyToBecomeActive()) {\n+      ret.setNotReadyReason(s.getNotReadyReason());\n+    }\n+    return ret.build();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public GetServiceStatusResponseProto getServiceStatus(RpcController controller,\n      GetServiceStatusRequestProto request) throws ServiceException {\n    HAServiceStatus s;\n    try {\n      s \u003d server.getServiceStatus();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto retState;\n    switch (s.getState()) {\n    case ACTIVE:\n      retState \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      retState \u003d HAServiceStateProto.STANDBY;\n      break;\n    case INITIALIZING:\n    default:\n      retState \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    \n    GetServiceStatusResponseProto.Builder ret \u003d\n      GetServiceStatusResponseProto.newBuilder()\n        .setState(retState)\n        .setReadyToBecomeActive(s.isReadyToBecomeActive());\n    if (!s.isReadyToBecomeActive()) {\n      ret.setNotReadyReason(s.getNotReadyReason());\n    }\n    return ret.build();\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "7933dc583838fa7273cf55c03400a591a41d23db": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2586. Add protobuf service and implementation for HAServiceProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1245338 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/02/12 11:37 PM",
      "commitName": "7933dc583838fa7273cf55c03400a591a41d23db",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,24 @@\n+  public GetServiceStateResponseProto getServiceState(RpcController controller,\n+      GetServiceStateRequestProto request) throws ServiceException {\n+    HAServiceState s;\n+    try {\n+      s \u003d server.getServiceState();\n+    } catch(IOException e) {\n+      throw new ServiceException(e);\n+    }\n+    \n+    HAServiceStateProto ret;\n+    switch (s) {\n+    case ACTIVE:\n+      ret \u003d HAServiceStateProto.ACTIVE;\n+      break;\n+    case STANDBY:\n+      ret \u003d HAServiceStateProto.STANDBY;\n+      break;\n+    case INITIALIZING:\n+    default:\n+      ret \u003d HAServiceStateProto.INITIALIZING;\n+      break;\n+    }\n+    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public GetServiceStateResponseProto getServiceState(RpcController controller,\n      GetServiceStateRequestProto request) throws ServiceException {\n    HAServiceState s;\n    try {\n      s \u003d server.getServiceState();\n    } catch(IOException e) {\n      throw new ServiceException(e);\n    }\n    \n    HAServiceStateProto ret;\n    switch (s) {\n    case ACTIVE:\n      ret \u003d HAServiceStateProto.ACTIVE;\n      break;\n    case STANDBY:\n      ret \u003d HAServiceStateProto.STANDBY;\n      break;\n    case INITIALIZING:\n    default:\n      ret \u003d HAServiceStateProto.INITIALIZING;\n      break;\n    }\n    return GetServiceStateResponseProto.newBuilder().setState(ret).build();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolServerSideTranslatorPB.java"
    }
  }
}