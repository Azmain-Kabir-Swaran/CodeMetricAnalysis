{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSAdmin.java",
  "functionName": "run",
  "functionId": "run___argv-String[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
  "functionStartLine": 2207,
  "functionEndLine": 2474,
  "numCommitsSeen": 118,
  "timeTaken": 14443,
  "changeHistory": [
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
    "6f5a36c13c4d2eb24e207aa99a9781c0be11660b",
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f",
    "bf5c94899537011465350d5d999fad9ffaeb605d",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
    "738c2a9682880061c12286cb88882c125a8dfd57",
    "2e43c28e01fe006210e71aab179527669f6412ed",
    "441378e7e4609d89b7181dacc8ba92b253a962df",
    "fb68980959f95f0d89e86f91909867724ad01791",
    "8d9084eb62f4593d4dfeb618abacf6ae89019109",
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
    "93fa48fcf243dc759db1736af145633da760f937",
    "dcd03df9f9e0080d7e179060ffc8148336c31b3e",
    "aede8c10ecad4f2a8802a834e4bd0b8286cebade",
    "0f0e897bf1ff8383f3f524ba83161969531b0772",
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
    "5b0d060d2a868cefcd12252140d5a8e310738aca",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f",
    "1861b32eb551a07d748afc6205ea9573f9503eda",
    "185200e7096d15a5c2c2d59b7c7705362820aebf",
    "34e9173c00f7e1ae55dec365850849c793cde8e3",
    "49fecbd4026ec7b8309cd28740239f536d73d388",
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658",
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8",
    "1a68f13521e6902943bea7b16369ac9a4e6943f5",
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d",
    "59e968a114dfe1b513f31424211116f23525def8",
    "4fde5c01901b6acb4363747d01603664a0283fc4",
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
    "e3fbc526861cdacbd61ab3d2e0c88a53735e29d9",
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "8390152d08306caad31b78abbd509e5ea8580671",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": "Ybodychange",
    "6f5a36c13c4d2eb24e207aa99a9781c0be11660b": "Ymultichange(Yexceptionschange,Ybodychange)",
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": "Ybodychange",
    "bf5c94899537011465350d5d999fad9ffaeb605d": "Ybodychange",
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": "Ybodychange",
    "738c2a9682880061c12286cb88882c125a8dfd57": "Ybodychange",
    "2e43c28e01fe006210e71aab179527669f6412ed": "Ybodychange",
    "441378e7e4609d89b7181dacc8ba92b253a962df": "Ybodychange",
    "fb68980959f95f0d89e86f91909867724ad01791": "Ybodychange",
    "8d9084eb62f4593d4dfeb618abacf6ae89019109": "Ybodychange",
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a": "Ybodychange",
    "93fa48fcf243dc759db1736af145633da760f937": "Ybodychange",
    "dcd03df9f9e0080d7e179060ffc8148336c31b3e": "Ybodychange",
    "aede8c10ecad4f2a8802a834e4bd0b8286cebade": "Ybodychange",
    "0f0e897bf1ff8383f3f524ba83161969531b0772": "Ybodychange",
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0": "Ybodychange",
    "5b0d060d2a868cefcd12252140d5a8e310738aca": "Ybodychange",
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": "Ybodychange",
    "1861b32eb551a07d748afc6205ea9573f9503eda": "Ybodychange",
    "185200e7096d15a5c2c2d59b7c7705362820aebf": "Ybodychange",
    "34e9173c00f7e1ae55dec365850849c793cde8e3": "Ybodychange",
    "49fecbd4026ec7b8309cd28740239f536d73d388": "Ybodychange",
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658": "Ybodychange",
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8": "Ybodychange",
    "1a68f13521e6902943bea7b16369ac9a4e6943f5": "Ybodychange",
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d": "Ybodychange",
    "59e968a114dfe1b513f31424211116f23525def8": "Ybodychange",
    "4fde5c01901b6acb4363747d01603664a0283fc4": "Ybodychange",
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974": "Ybodychange",
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": "Ybodychange",
    "e3fbc526861cdacbd61ab3d2e0c88a53735e29d9": "Ybodychange",
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "8390152d08306caad31b78abbd509e5ea8580671": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14678. Allow triggerBlockReport to a specific namenode. (#1252). Contributed by Leon Gao.\n\n",
      "commitDate": "16/08/19 8:00 AM",
      "commitName": "9a1d8cfaf50ec29ffb2d8522ba2f4bc6605d8b8b",
      "commitAuthor": "LeonGao91",
      "commitDateOld": "17/07/19 10:52 AM",
      "commitNameOld": "af0665c7f5b1a28eb2262bae9a577fd908ad79ea",
      "commitAuthorOld": "Ayush Saxena",
      "daysBetweenCommits": 29.88,
      "commitsBetweenForRepo": 273,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,268 +1,268 @@\n   public int run(String[] argv) {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgrade\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n-      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n+      if ((argv.length \u003c 2) || (argv.length \u003e 5)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if ((argv.length \u003e 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     init();\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-upgrade\".equals(cmd)) {\n         exitCode \u003d upgrade(argv[i]);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgrade\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length \u003c 2) || (argv.length \u003e 5)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length \u003e 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    init();\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-upgrade\".equals(cmd)) {\n        exitCode \u003d upgrade(argv[i]);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "6f5a36c13c4d2eb24e207aa99a9781c0be11660b": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-13656. fs -expunge to take a filesystem. Contributed by Shweta.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
      "commitDate": "30/05/19 1:21 PM",
      "commitName": "6f5a36c13c4d2eb24e207aa99a9781c0be11660b",
      "commitAuthor": "Shweta Yakkali",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-13656. fs -expunge to take a filesystem. Contributed by Shweta.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
          "commitDate": "30/05/19 1:21 PM",
          "commitName": "6f5a36c13c4d2eb24e207aa99a9781c0be11660b",
          "commitAuthor": "Shweta Yakkali",
          "commitDateOld": "20/02/19 2:28 PM",
          "commitNameOld": "1bea785020a538115b3e08f41ff88167033d2775",
          "commitAuthorOld": "Shweta Yakkali",
          "daysBetweenCommits": 98.91,
          "commitsBetweenForRepo": 682,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,277 +1,268 @@\n-  public int run(String[] argv) throws Exception {\n+  public int run(String[] argv) {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgrade\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if ((argv.length \u003e 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n-    try {\n-      init();\n-    } catch (RPC.VersionMismatch v) {\n-      System.err.println(\"Version Mismatch between client and server\"\n-                         + \"... command aborted.\");\n-      return exitCode;\n-    } catch (IOException e) {\n-      System.err.println(\"Bad connection to DFS... command aborted.\");\n-      return exitCode;\n-    }\n+    init();\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-upgrade\".equals(cmd)) {\n         exitCode \u003d upgrade(argv[i]);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int run(String[] argv) {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgrade\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length \u003e 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    init();\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-upgrade\".equals(cmd)) {\n        exitCode \u003d upgrade(argv[i]);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
          "extendedDetails": {
            "oldValue": "[Exception]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-13656. fs -expunge to take a filesystem. Contributed by Shweta.\n\nSigned-off-by: Wei-Chiu Chuang \u003cweichiu@apache.org\u003e\n",
          "commitDate": "30/05/19 1:21 PM",
          "commitName": "6f5a36c13c4d2eb24e207aa99a9781c0be11660b",
          "commitAuthor": "Shweta Yakkali",
          "commitDateOld": "20/02/19 2:28 PM",
          "commitNameOld": "1bea785020a538115b3e08f41ff88167033d2775",
          "commitAuthorOld": "Shweta Yakkali",
          "daysBetweenCommits": 98.91,
          "commitsBetweenForRepo": 682,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,277 +1,268 @@\n-  public int run(String[] argv) throws Exception {\n+  public int run(String[] argv) {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgrade\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if ((argv.length \u003e 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n-    try {\n-      init();\n-    } catch (RPC.VersionMismatch v) {\n-      System.err.println(\"Version Mismatch between client and server\"\n-                         + \"... command aborted.\");\n-      return exitCode;\n-    } catch (IOException e) {\n-      System.err.println(\"Bad connection to DFS... command aborted.\");\n-      return exitCode;\n-    }\n+    init();\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-upgrade\".equals(cmd)) {\n         exitCode \u003d upgrade(argv[i]);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public int run(String[] argv) {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgrade\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length \u003e 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    init();\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-upgrade\".equals(cmd)) {\n        exitCode \u003d upgrade(argv[i]);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
          "extendedDetails": {}
        }
      ]
    },
    "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13589: Add dfsAdmin command to query if upgrade is finalized. Contributed by Hanisha Koneru\n",
      "commitDate": "23/05/18 10:15 AM",
      "commitName": "bc6d9d4c796d3c9d27dbbe3266031bf2adecde4f",
      "commitAuthor": "Bharat Viswanadham",
      "commitDateOld": "07/02/18 9:40 AM",
      "commitNameOld": "01bd6ab18fa48f4c7cac1497905b52e547962599",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 104.98,
      "commitsBetweenForRepo": 1353,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,277 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-upgrade\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if ((argv.length \u003e 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n+      } else if (\"-upgrade\".equals(cmd)) {\n+        exitCode \u003d upgrade(argv[i]);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgrade\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length \u003e 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-upgrade\".equals(cmd)) {\n        exitCode \u003d upgrade(argv[i]);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "bf5c94899537011465350d5d999fad9ffaeb605d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11848. Enhance dfsadmin listOpenFiles command to list files under a given path. Contributed by Yiqun Lin.\n",
      "commitDate": "05/01/18 10:31 PM",
      "commitName": "bf5c94899537011465350d5d999fad9ffaeb605d",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "02/01/18 2:59 PM",
      "commitNameOld": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthorOld": "Manoj Govindassamy",
      "daysBetweenCommits": 3.31,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n-      if ((argv.length !\u003d 1) \u0026\u0026 (argv.length !\u003d 2)) {\n+      if ((argv.length \u003e 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length \u003e 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "42a1c98597e6dba2e371510a6b2b6b1fb94e4090": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11847. Enhance dfsadmin listOpenFiles command to list files blocking datanode decommissioning.\n",
      "commitDate": "02/01/18 2:59 PM",
      "commitName": "42a1c98597e6dba2e371510a6b2b6b1fb94e4090",
      "commitAuthor": "Manoj Govindassamy",
      "commitDateOld": "25/10/17 2:11 PM",
      "commitNameOld": "f66ad1fab958a28ef40c684366c23695237a8e60",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 69.08,
      "commitsBetweenForRepo": 482,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n-      if (argv.length !\u003d 1) {\n+      if ((argv.length !\u003d 1) \u0026\u0026 (argv.length !\u003d 2)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n-        exitCode \u003d listOpenFiles();\n+        exitCode \u003d listOpenFiles(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if ((argv.length !\u003d 1) \u0026\u0026 (argv.length !\u003d 2)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "738c2a9682880061c12286cb88882c125a8dfd57": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12406. dfsadmin command prints \"Exception encountered\" even if there is no exception, when debug is enabled. Contributed by Nandakumar.\n",
      "commitDate": "11/09/17 2:48 PM",
      "commitName": "738c2a9682880061c12286cb88882c125a8dfd57",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "07/09/17 4:57 PM",
      "commitNameOld": "4e50dc976a92a9560630c87cfc4e4513916e5735",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.91,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles();\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n-    if (LOG.isDebugEnabled()) {\n+    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles();\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled() \u0026\u0026 debugException !\u003d null) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "2e43c28e01fe006210e71aab179527669f6412ed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\n",
      "commitDate": "15/08/17 1:48 AM",
      "commitName": "2e43c28e01fe006210e71aab179527669f6412ed",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "24/07/17 12:24 AM",
      "commitNameOld": "770cc462281518545e3d1c0f8c21cf9ec9673200",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 22.06,
      "commitsBetweenForRepo": 201,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n-      if (argv.length \u003c 1) {\n+      if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n-      if (argv.length \u003c 1 || argv.length \u003e 2) {\n+      if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n-      if (argv.length \u003c 1) {\n+      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles();\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles();\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "441378e7e4609d89b7181dacc8ba92b253a962df": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\"\n\nThis reverts commit 89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a.\n\n Conflicts:\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java\n",
      "commitDate": "29/06/17 1:54 PM",
      "commitName": "441378e7e4609d89b7181dacc8ba92b253a962df",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "22/06/17 7:57 PM",
      "commitNameOld": "68dc7c24050951f4709f7fe5363e11a003cf53eb",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 6.75,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,270 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n-      if (argv.length \u003e 6) {\n+      if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n-      if (argv.length \u003e 2) {\n+      if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n-      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n+      if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-listOpenFiles\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-listOpenFiles\".equals(cmd)) {\n         exitCode \u003d listOpenFiles();\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles();\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "fb68980959f95f0d89e86f91909867724ad01791": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10480. Add an admin command to list currently open files. Contributed by Manoj Govindassamy.\n",
      "commitDate": "15/06/17 2:46 PM",
      "commitName": "fb68980959f95f0d89e86f91909867724ad01791",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "14/06/17 10:44 AM",
      "commitNameOld": "999c8fcbefc876d9c26c23c5b87a64a81e4f113e",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,263 +1,270 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-listOpenFiles\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n+      } else if (\"-listOpenFiles\".equals(cmd)) {\n+        exitCode \u003d listOpenFiles();\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-listOpenFiles\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-listOpenFiles\".equals(cmd)) {\n        exitCode \u003d listOpenFiles();\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "8d9084eb62f4593d4dfeb618abacf6ae89019109": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11359. DFSAdmin report command supports displaying maintenance state datanodes. Contributed by Yiqun Lin.\n",
      "commitDate": "01/06/17 9:48 PM",
      "commitName": "8d9084eb62f4593d4dfeb618abacf6ae89019109",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "16/05/17 9:41 AM",
      "commitNameOld": "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 16.5,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,263 +1,263 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n-      if (argv.length \u003e 4) {\n+      if (argv.length \u003e 6) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 6) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\n",
      "commitDate": "16/05/17 9:41 AM",
      "commitName": "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "26/04/17 1:43 AM",
      "commitNameOld": "93fa48fcf243dc759db1736af145633da760f937",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 20.33,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,263 +1,263 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n-      if (argv.length \u003c 1) {\n+      if (argv.length \u003e 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n-      if (argv.length \u003c 1 || argv.length \u003e 2) {\n+      if (argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getVolumeReport\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n-      if (argv.length \u003c 1) {\n+      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-getVolumeReport\".equals(cmd)) {\n         exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003e 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "93fa48fcf243dc759db1736af145633da760f937": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11417. Add datanode admin command to get the storage info. Contributed by Surendra Singh Lilhore.\n",
      "commitDate": "26/04/17 1:43 AM",
      "commitName": "93fa48fcf243dc759db1736af145633da760f937",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "28/02/17 9:15 PM",
      "commitNameOld": "dcd03df9f9e0080d7e179060ffc8148336c31b3e",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 56.14,
      "commitsBetweenForRepo": 324,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,256 +1,263 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-getVolumeReport\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n+      } else if (\"-getVolumeReport\".equals(cmd)) {\n+        exitCode \u003d getVolumeReport(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getVolumeReport\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-getVolumeReport\".equals(cmd)) {\n        exitCode \u003d getVolumeReport(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "dcd03df9f9e0080d7e179060ffc8148336c31b3e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11432. Federation : Support fully qualified path for Quota/Snapshot/cacheadmin/cryptoadmin commands. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "28/02/17 9:15 PM",
      "commitName": "dcd03df9f9e0080d7e179060ffc8148336c31b3e",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "14/02/17 2:57 AM",
      "commitNameOld": "4164a2032a41e7318749efd0301751eb2b369cdc",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 14.76,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,256 +1,256 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n-        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n+        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n-        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n+        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n-        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n+        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n-        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n+        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-evictWriters\".equals(cmd)) {\n         exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getConf()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getConf()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "aede8c10ecad4f2a8802a834e4bd0b8286cebade": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9945. Datanode command for evicting writers. Contributed by Kihwal Lee\n",
      "commitDate": "06/04/16 1:20 PM",
      "commitName": "aede8c10ecad4f2a8802a834e4bd0b8286cebade",
      "commitAuthor": "Eric Payne",
      "commitDateOld": "08/02/16 1:47 PM",
      "commitNameOld": "bffaa38a91b26920206a3350bf1cd60ec950aa74",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 57.94,
      "commitsBetweenForRepo": 366,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,254 +1,256 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n+      } else if (\"-evictWriters\".equals(cmd)) {\n+        exitCode \u003d evictWriters(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-evictWriters\".equals(cmd)) {\n        exitCode \u003d evictWriters(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "0f0e897bf1ff8383f3f524ba83161969531b0772": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7116. Add a command to get the balancer bandwidth (Contributed by Rakesh R)\n",
      "commitDate": "09/09/15 10:28 AM",
      "commitName": "0f0e897bf1ff8383f3f524ba83161969531b0772",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 11.83,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,247 +1,254 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n+      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n+        exitCode \u003d getBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getBalancerBandwidth\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-getBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d getBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6353. Check and make checkpoint before stopping the NameNode. Contributed by Jing Zhao.\n",
      "commitDate": "25/03/15 10:38 AM",
      "commitName": "5e21e4ca377f68e030f8f3436cd93fd7a74dc5e0",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "04/03/15 1:08 AM",
      "commitNameOld": "3560180b6e9926aa3ee1357da59b28a4b4689a0d",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 21.35,
      "commitsBetweenForRepo": 195,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,247 +1,247 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n-      if (argv.length !\u003d 1) {\n+      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n-        exitCode \u003d saveNamespace();\n+        exitCode \u003d saveNamespace(argv);\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1 \u0026\u0026 argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace(argv);\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5b0d060d2a868cefcd12252140d5a8e310738aca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7323. Move the get/setStoragePolicy commands out from dfsadmin. (jing9 via yliu)\n",
      "commitDate": "11/01/15 8:35 AM",
      "commitName": "5b0d060d2a868cefcd12252140d5a8e310738aca",
      "commitAuthor": "yliu",
      "commitDateOld": "11/12/14 12:36 PM",
      "commitNameOld": "b9f6d0c956f0278c8b9b83e05b523a442a730ebb",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 30.83,
      "commitsBetweenForRepo": 151,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,261 +1,247 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-setStoragePolicy\".equals(cmd)) {\n-      if (argv.length !\u003d 3) {\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n     } else if (\"-triggerBlockReport\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-getStoragePolicy\".equals(cmd)) {\n-      if (argv.length !\u003d 2) {\n-        printUsage(cmd);\n-        return exitCode;\n-      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n-      } else if (\"-setStoragePolicy\".equals(cmd)) {\n-        exitCode \u003d setStoragePolicy(argv);\n-      } else if (\"-getStoragePolicy\".equals(cmd)) {\n-        exitCode \u003d getStoragePolicy(argv);\n       } else if (\"-triggerBlockReport\".equals(cmd)) {\n         exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "baf794dc404ac54f4e8332654eadfac1bebacb8f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7278. Add a command that allows sysadmins to manually trigger full block reports from a DN (cmccabe)\n",
      "commitDate": "27/10/14 9:53 AM",
      "commitName": "baf794dc404ac54f4e8332654eadfac1bebacb8f",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "23/10/14 12:28 PM",
      "commitNameOld": "8c5b23b5473e447384f818d69d907d5c35ed6d6a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.89,
      "commitsBetweenForRepo": 33,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,254 +1,261 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-reconfig\".equals(cmd)) {\n       if (argv.length !\u003d 4) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setStoragePolicy\".equals(cmd)) {\n       if (argv.length !\u003d 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-triggerBlockReport\".equals(cmd)) {\n+      if (argv.length \u003c 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-getStoragePolicy\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-reconfig\".equals(cmd)) {\n         exitCode \u003d reconfig(argv, i);\n       } else if (\"-setStoragePolicy\".equals(cmd)) {\n         exitCode \u003d setStoragePolicy(argv);\n       } else if (\"-getStoragePolicy\".equals(cmd)) {\n         exitCode \u003d getStoragePolicy(argv);\n+      } else if (\"-triggerBlockReport\".equals(cmd)) {\n+        exitCode \u003d triggerBlockReport(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-triggerBlockReport\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-setStoragePolicy\".equals(cmd)) {\n        exitCode \u003d setStoragePolicy(argv);\n      } else if (\"-getStoragePolicy\".equals(cmd)) {\n        exitCode \u003d getStoragePolicy(argv);\n      } else if (\"-triggerBlockReport\".equals(cmd)) {\n        exitCode \u003d triggerBlockReport(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "1861b32eb551a07d748afc6205ea9573f9503eda": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6808. Add command line option to ask DataNode reload configuration. (Lei Xu via Colin McCabe)\n",
      "commitDate": "25/09/14 1:11 PM",
      "commitName": "1861b32eb551a07d748afc6205ea9573f9503eda",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "24/09/14 7:11 PM",
      "commitNameOld": "428a76663a0de5d0d74cc9525273ddc470760e44",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 0.75,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,247 +1,254 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-reconfig\".equals(cmd)) {\n+      if (argv.length !\u003d 4) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setStoragePolicy\".equals(cmd)) {\n       if (argv.length !\u003d 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getStoragePolicy\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n+      } else if (\"-reconfig\".equals(cmd)) {\n+        exitCode \u003d reconfig(argv, i);\n       } else if (\"-setStoragePolicy\".equals(cmd)) {\n         exitCode \u003d setStoragePolicy(argv);\n       } else if (\"-getStoragePolicy\".equals(cmd)) {\n         exitCode \u003d getStoragePolicy(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-reconfig\".equals(cmd)) {\n      if (argv.length !\u003d 4) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-reconfig\".equals(cmd)) {\n        exitCode \u003d reconfig(argv, i);\n      } else if (\"-setStoragePolicy\".equals(cmd)) {\n        exitCode \u003d setStoragePolicy(argv);\n      } else if (\"-getStoragePolicy\".equals(cmd)) {\n        exitCode \u003d getStoragePolicy(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "185200e7096d15a5c2c2d59b7c7705362820aebf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6876. Archival Storage: support set/get storage policy in DFSAdmin. Contributed by Jing Zhao.\n",
      "commitDate": "04/09/14 8:14 PM",
      "commitName": "185200e7096d15a5c2c2d59b7c7705362820aebf",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "22/08/14 11:14 AM",
      "commitNameOld": "e6c36500705d3d756de82ee0ce9ff226f34b938f",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 13.37,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,233 +1,247 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refresh\".equals(cmd)) {\n       if (argv.length \u003c 3) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-setStoragePolicy\".equals(cmd)) {\n+      if (argv.length !\u003d 3) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-getStoragePolicy\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-refresh\".equals(cmd)) {\n         exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n+      } else if (\"-setStoragePolicy\".equals(cmd)) {\n+        exitCode \u003d setStoragePolicy(argv);\n+      } else if (\"-getStoragePolicy\".equals(cmd)) {\n+        exitCode \u003d getStoragePolicy(argv);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getStoragePolicy\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-setStoragePolicy\".equals(cmd)) {\n        exitCode \u003d setStoragePolicy(argv);\n      } else if (\"-getStoragePolicy\".equals(cmd)) {\n        exitCode \u003d getStoragePolicy(argv);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "34e9173c00f7e1ae55dec365850849c793cde8e3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10376. Refactor refresh*Protocols into a single generic refreshConfigProtocol. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1602055 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 6:27 PM",
      "commitName": "34e9173c00f7e1ae55dec365850849c793cde8e3",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "11/06/14 10:12 AM",
      "commitNameOld": "49fecbd4026ec7b8309cd28740239f536d73d388",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,226 +1,233 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-refresh\".equals(cmd)) {\n+      if (argv.length \u003c 3) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n+      } else if (\"-refresh\".equals(cmd)) {\n+        exitCode \u003d genericRefresh(argv, i);\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refresh\".equals(cmd)) {\n      if (argv.length \u003c 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-refresh\".equals(cmd)) {\n        exitCode \u003d genericRefresh(argv, i);\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "49fecbd4026ec7b8309cd28740239f536d73d388": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6503. Fix typo of DFSAdmin restoreFailedStorage. Contributed by Zesheng Wu.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601958 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/06/14 10:12 AM",
      "commitName": "49fecbd4026ec7b8309cd28740239f536d73d388",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "13/05/14 9:19 AM",
      "commitNameOld": "33ade356b35223654a077103ed7fbed89f3f2321",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 29.04,
      "commitsBetweenForRepo": 164,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,226 +1,226 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n-        exitCode \u003d restoreFaileStorage(argv[i]);\n+        exitCode \u003d restoreFailedStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFailedStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "9445859930b8653cb0b9a0e1abf38cc05dbe2658": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6295. Add decommissioning state and node state filtering to dfsadmin. Contributed by Andrew Wang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592438 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/05/14 8:38 PM",
      "commitName": "9445859930b8653cb0b9a0e1abf38cc05dbe2658",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "28/04/14 11:04 PM",
      "commitNameOld": "02d28907beab7110abf768fd4006b076a6bf2bd2",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 5.9,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,226 +1,226 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n-      if (argv.length !\u003d 1) {\n+      if (argv.length \u003c 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-shutdownDatanode\".equals(cmd)) {\n       if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-getDatanodeInfo\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n-        report();\n+        report(argv, i);\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-refreshCallQueue\".equals(cmd)) {\n         exitCode \u003d refreshCallQueue();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-shutdownDatanode\".equals(cmd)) {\n         exitCode \u003d shutdownDatanode(argv, i);\n       } else if (\"-getDatanodeInfo\".equals(cmd)) {\n         exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length \u003c 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report(argv, i);\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "d00605f8f0214ed8e2304db8688e140f0a1d62d8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10285. Admin interface to swap callqueue at runtime. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1573052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/14 11:48 AM",
      "commitName": "d00605f8f0214ed8e2304db8688e140f0a1d62d8",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "25/01/14 12:01 PM",
      "commitNameOld": "edb6dc5f303093c2604cd07b0c0dacf12dbce5de",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 33.99,
      "commitsBetweenForRepo": 289,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,203 +1,205 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n+      } else if (\"-refreshCallQueue\".equals(cmd)) {\n+        exitCode \u003d refreshCallQueue();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-refreshCallQueue\".equals(cmd)) {\n        exitCode \u003d refreshCallQueue();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "1a68f13521e6902943bea7b16369ac9a4e6943f5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5585. Provide admin commands for data node upgrade. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1568523 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/02/14 1:20 PM",
      "commitName": "1a68f13521e6902943bea7b16369ac9a4e6943f5",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "06/02/14 6:08 PM",
      "commitNameOld": "c780454413caffbc37a02c4252eb5ec7abe57f97",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 7.8,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,210 +1,224 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (RollingUpgradeCommand.matches(cmd)) {\n       if (argv.length \u003c 1 || argv.length \u003e 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-shutdownDatanode\".equals(cmd)) {\n+      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (RollingUpgradeCommand.matches(cmd)) {\n         exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n+      } else if (\"-shutdownDatanode\".equals(cmd)) {\n+        exitCode \u003d shutdownDatanode(argv, i);\n+      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n+        exitCode \u003d getDatanodeInfo(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-shutdownDatanode\".equals(cmd)) {\n      if ((argv.length !\u003d 2) \u0026\u0026 (argv.length !\u003d 3)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-getDatanodeInfo\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-shutdownDatanode\".equals(cmd)) {\n        exitCode \u003d shutdownDatanode(argv, i);\n      } else if (\"-getDatanodeInfo\".equals(cmd)) {\n        exitCode \u003d getDatanodeInfo(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "5fe73a986e6850b1cc07bc52fe8b920d1437641d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5752. Add a new DFSAdmin command to query, start and finalize rolling upgrade.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1558299 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/01/14 9:56 PM",
      "commitName": "5fe73a986e6850b1cc07bc52fe8b920d1437641d",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "06/12/13 10:01 AM",
      "commitNameOld": "045dc880e13271737b3cf316296e92fb95806663",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 39.5,
      "commitsBetweenForRepo": 156,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,203 +1,210 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (RollingUpgradeCommand.matches(cmd)) {\n+      if (argv.length \u003c 1 || argv.length \u003e 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n+      } else if (RollingUpgradeCommand.matches(cmd)) {\n+        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (RollingUpgradeCommand.matches(cmd)) {\n      if (argv.length \u003c 1 || argv.length \u003e 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (RollingUpgradeCommand.matches(cmd)) {\n        exitCode \u003d RollingUpgradeCommand.run(getDFS(), argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "59e968a114dfe1b513f31424211116f23525def8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4514. Add CLI for supporting snapshot rename, diff report, and snapshottable directory listing.  Contributed by Jing Zhao\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1449956 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/13 3:14 PM",
      "commitName": "59e968a114dfe1b513f31424211116f23525def8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "09/02/13 1:29 PM",
      "commitNameOld": "fa8bafbd4673d385498e81874e58cd0eafad3d22",
      "commitAuthorOld": "",
      "daysBetweenCommits": 16.07,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,203 +1,203 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n-      if (argv.length !\u003d 3) {\n+      if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n         allowSnapshot(argv);\n       } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n         disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "4fde5c01901b6acb4363747d01603664a0283fc4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4084. Provide CLI support to allow and disallow snapshot on a directory. Contributed by Brondon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2802@1401444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/10/12 1:26 PM",
      "commitName": "4fde5c01901b6acb4363747d01603664a0283fc4",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "05/10/12 5:13 PM",
      "commitNameOld": "353958dccc9cb9c47571b973dec46d8fcd82035d",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 17.84,
      "commitsBetweenForRepo": 111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,189 +1,203 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n+      if (argv.length !\u003d 3) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-rollEdits\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n+      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n+        allowSnapshot(argv);\n+      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n+        disallowSnapshot(argv);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-rollEdits\".equals(cmd)) {\n         exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 3) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-allowSnapshot\".equalsIgnoreCase(cmd)) {\n        allowSnapshot(argv);\n      } else if (\"-disallowSnapshot\".equalsIgnoreCase(cmd)) {\n        disallowSnapshot(argv);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "c334cc89a8f42c98ab4dad02ae41c5a02a855974": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2793. Add an admin command to trigger an edit log roll. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1380982 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/09/12 9:40 PM",
      "commitName": "c334cc89a8f42c98ab4dad02ae41c5a02a855974",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "21/08/12 2:18 PM",
      "commitNameOld": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 14.31,
      "commitsBetweenForRepo": 92,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,182 +1,189 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-rollEdits\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }      \n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n+      } else if (\"-rollEdits\".equals(cmd)) {\n+        exitCode \u003d rollEdits();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-rollEdits\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }      \n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-rollEdits\".equals(cmd)) {\n        exitCode \u003d rollEdits();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2686. Remove DistributedUpgrade related code. Contributed by Suresh Srinivas\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1375800 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/12 2:18 PM",
      "commitName": "6c0ccb5989c2053f5a1ebab0dd9fdb7b4019fda8",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "16/08/12 1:35 PM",
      "commitNameOld": "cf93dfba4e5b7849a3917caa78b29b8a4fb5ef12",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,189 +1,182 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n-    } else if (\"-upgradeProgress\".equals(cmd)) {\n-        if (argv.length !\u003d 2) {\n-          printUsage(cmd);\n-          return exitCode;\n-        }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n-      } else if (\"-upgradeProgress\".equals(cmd)) {\n-        exitCode \u003d upgradeProgress(argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n         debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     }\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Exception encountered:\", debugException);\n     }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "e3fbc526861cdacbd61ab3d2e0c88a53735e29d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3390. DFSAdmin should print full stack traces of errors when DEBUG logging is enabled. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1336324 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/05/12 11:16 AM",
      "commitName": "e3fbc526861cdacbd61ab3d2e0c88a53735e29d9",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "04/05/12 2:58 PM",
      "commitNameOld": "5dbbe0e0a5d31689d3425e490865f95057dc051c",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 4.85,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,181 +1,189 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n         if (argv.length !\u003d 2) {\n           printUsage(cmd);\n           return exitCode;\n         }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-fetchImage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n+    Exception debugException \u003d null;\n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-upgradeProgress\".equals(cmd)) {\n         exitCode \u003d upgradeProgress(argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-fetchImage\".equals(cmd)) {\n         exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n+      debugException \u003d arge;\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n+      debugException \u003d e;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n+        debugException \u003d ex;\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n+      debugException \u003d e;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n-    } \n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Exception encountered:\", debugException);\n+    }\n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    Exception debugException \u003d null;\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      debugException \u003d arge;\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      debugException \u003d e;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n        debugException \u003d ex;\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      debugException \u003d e;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Exception encountered:\", debugException);\n    }\n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "ce1a7ec9755f17527c29b0db713d7e01750e10c9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2941. Add an administrative command to download a copy of the fsimage from the NN. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305447 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 10:02 AM",
      "commitName": "ce1a7ec9755f17527c29b0db713d7e01750e10c9",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "28/02/12 12:09 PM",
      "commitNameOld": "c69dfdd5e14af490790dff8227b11962ec816577",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 26.87,
      "commitsBetweenForRepo": 166,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,174 +1,181 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n         if (argv.length !\u003d 2) {\n           printUsage(cmd);\n           return exitCode;\n         }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-fetchImage\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-upgradeProgress\".equals(cmd)) {\n         exitCode \u003d upgradeProgress(argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n       } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n         exitCode \u003d setBalancerBandwidth(argv, i);\n+      } else if (\"-fetchImage\".equals(cmd)) {\n+        exitCode \u003d fetchImage(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     } \n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-fetchImage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-fetchImage\".equals(cmd)) {\n        exitCode \u003d fetchImage(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    } \n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    } \n    return exitCode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    } \n    return exitCode;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
      }
    },
    "8390152d08306caad31b78abbd509e5ea8580671": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2202. Add a new DFSAdmin command to set balancer bandwidth of datanodes without restarting.  Contributed by Eric Payne\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152401 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 5:10 PM",
      "commitName": "8390152d08306caad31b78abbd509e5ea8580671",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "15/07/11 10:12 PM",
      "commitNameOld": "c163455df487f99171e5045cdf0c2e1be1c4f99e",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 13.79,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,167 +1,174 @@\n   public int run(String[] argv) throws Exception {\n \n     if (argv.length \u003c 1) {\n       printUsage(\"\");\n       return -1;\n     }\n \n     int exitCode \u003d -1;\n     int i \u003d 0;\n     String cmd \u003d argv[i++];\n \n     //\n     // verify that we have enough command line parameters\n     //\n     if (\"-safemode\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-report\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-saveNamespace\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-restoreFailedStorage\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNodes\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-finalizeUpgrade\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-upgradeProgress\".equals(cmd)) {\n         if (argv.length !\u003d 2) {\n           printUsage(cmd);\n           return exitCode;\n         }\n     } else if (\"-metasave\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshServiceAcl\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n       if (argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-printTopology\".equals(cmd)) {\n       if(argv.length !\u003d 1) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-refreshNamenodes\".equals(cmd)) {\n       if (argv.length !\u003d 2) {\n         printUsage(cmd);\n         return exitCode;\n       }\n     } else if (\"-deleteBlockPool\".equals(cmd)) {\n       if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n         printUsage(cmd);\n         return exitCode;\n       }\n+    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n     }\n     \n     // initialize DFSAdmin\n     try {\n       init();\n     } catch (RPC.VersionMismatch v) {\n       System.err.println(\"Version Mismatch between client and server\"\n                          + \"... command aborted.\");\n       return exitCode;\n     } catch (IOException e) {\n       System.err.println(\"Bad connection to DFS... command aborted.\");\n       return exitCode;\n     }\n \n     exitCode \u003d 0;\n     try {\n       if (\"-report\".equals(cmd)) {\n         report();\n       } else if (\"-safemode\".equals(cmd)) {\n         setSafeMode(argv, i);\n       } else if (\"-saveNamespace\".equals(cmd)) {\n         exitCode \u003d saveNamespace();\n       } else if (\"-restoreFailedStorage\".equals(cmd)) {\n         exitCode \u003d restoreFaileStorage(argv[i]);\n       } else if (\"-refreshNodes\".equals(cmd)) {\n         exitCode \u003d refreshNodes();\n       } else if (\"-finalizeUpgrade\".equals(cmd)) {\n         exitCode \u003d finalizeUpgrade();\n       } else if (\"-upgradeProgress\".equals(cmd)) {\n         exitCode \u003d upgradeProgress(argv, i);\n       } else if (\"-metasave\".equals(cmd)) {\n         exitCode \u003d metaSave(argv, i);\n       } else if (ClearQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (SetSpaceQuotaCommand.matches(cmd)) {\n         exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n       } else if (\"-refreshServiceAcl\".equals(cmd)) {\n         exitCode \u003d refreshServiceAcl();\n       } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n         exitCode \u003d refreshUserToGroupsMappings();\n       } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n         exitCode \u003d refreshSuperUserGroupsConfiguration();\n       } else if (\"-printTopology\".equals(cmd)) {\n         exitCode \u003d printTopology();\n       } else if (\"-refreshNamenodes\".equals(cmd)) {\n         exitCode \u003d refreshNamenodes(argv, i);\n       } else if (\"-deleteBlockPool\".equals(cmd)) {\n         exitCode \u003d deleteBlockPool(argv, i);\n+      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n+        exitCode \u003d setBalancerBandwidth(argv, i);\n       } else if (\"-help\".equals(cmd)) {\n         if (i \u003c argv.length) {\n           printHelp(argv[i]);\n         } else {\n           printHelp(\"\");\n         }\n       } else {\n         exitCode \u003d -1;\n         System.err.println(cmd.substring(1) + \": Unknown command\");\n         printUsage(\"\");\n       }\n     } catch (IllegalArgumentException arge) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n       printUsage(cmd);\n     } catch (RemoteException e) {\n       //\n       // This is a error returned by hadoop server. Print\n       // out the first line of the error message, ignore the stack trace.\n       exitCode \u003d -1;\n       try {\n         String[] content;\n         content \u003d e.getLocalizedMessage().split(\"\\n\");\n         System.err.println(cmd.substring(1) + \": \"\n                            + content[0]);\n       } catch (Exception ex) {\n         System.err.println(cmd.substring(1) + \": \"\n                            + ex.getLocalizedMessage());\n       }\n     } catch (Exception e) {\n       exitCode \u003d -1;\n       System.err.println(cmd.substring(1) + \": \"\n                          + e.getLocalizedMessage());\n     } \n     return exitCode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-setBalancerBandwidth\".equals(cmd)) {\n        exitCode \u003d setBalancerBandwidth(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    } \n    return exitCode;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,167 @@\n+  public int run(String[] argv) throws Exception {\n+\n+    if (argv.length \u003c 1) {\n+      printUsage(\"\");\n+      return -1;\n+    }\n+\n+    int exitCode \u003d -1;\n+    int i \u003d 0;\n+    String cmd \u003d argv[i++];\n+\n+    //\n+    // verify that we have enough command line parameters\n+    //\n+    if (\"-safemode\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-report\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-saveNamespace\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-refreshNodes\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-upgradeProgress\".equals(cmd)) {\n+        if (argv.length !\u003d 2) {\n+          printUsage(cmd);\n+          return exitCode;\n+        }\n+    } else if (\"-metasave\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n+      if (argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-printTopology\".equals(cmd)) {\n+      if(argv.length !\u003d 1) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-refreshNamenodes\".equals(cmd)) {\n+      if (argv.length !\u003d 2) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    } else if (\"-deleteBlockPool\".equals(cmd)) {\n+      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n+        printUsage(cmd);\n+        return exitCode;\n+      }\n+    }\n+    \n+    // initialize DFSAdmin\n+    try {\n+      init();\n+    } catch (RPC.VersionMismatch v) {\n+      System.err.println(\"Version Mismatch between client and server\"\n+                         + \"... command aborted.\");\n+      return exitCode;\n+    } catch (IOException e) {\n+      System.err.println(\"Bad connection to DFS... command aborted.\");\n+      return exitCode;\n+    }\n+\n+    exitCode \u003d 0;\n+    try {\n+      if (\"-report\".equals(cmd)) {\n+        report();\n+      } else if (\"-safemode\".equals(cmd)) {\n+        setSafeMode(argv, i);\n+      } else if (\"-saveNamespace\".equals(cmd)) {\n+        exitCode \u003d saveNamespace();\n+      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n+        exitCode \u003d restoreFaileStorage(argv[i]);\n+      } else if (\"-refreshNodes\".equals(cmd)) {\n+        exitCode \u003d refreshNodes();\n+      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n+        exitCode \u003d finalizeUpgrade();\n+      } else if (\"-upgradeProgress\".equals(cmd)) {\n+        exitCode \u003d upgradeProgress(argv, i);\n+      } else if (\"-metasave\".equals(cmd)) {\n+        exitCode \u003d metaSave(argv, i);\n+      } else if (ClearQuotaCommand.matches(cmd)) {\n+        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n+      } else if (SetQuotaCommand.matches(cmd)) {\n+        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n+      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n+        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n+      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n+        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n+      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n+        exitCode \u003d refreshServiceAcl();\n+      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n+        exitCode \u003d refreshUserToGroupsMappings();\n+      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n+        exitCode \u003d refreshSuperUserGroupsConfiguration();\n+      } else if (\"-printTopology\".equals(cmd)) {\n+        exitCode \u003d printTopology();\n+      } else if (\"-refreshNamenodes\".equals(cmd)) {\n+        exitCode \u003d refreshNamenodes(argv, i);\n+      } else if (\"-deleteBlockPool\".equals(cmd)) {\n+        exitCode \u003d deleteBlockPool(argv, i);\n+      } else if (\"-help\".equals(cmd)) {\n+        if (i \u003c argv.length) {\n+          printHelp(argv[i]);\n+        } else {\n+          printHelp(\"\");\n+        }\n+      } else {\n+        exitCode \u003d -1;\n+        System.err.println(cmd.substring(1) + \": Unknown command\");\n+        printUsage(\"\");\n+      }\n+    } catch (IllegalArgumentException arge) {\n+      exitCode \u003d -1;\n+      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n+      printUsage(cmd);\n+    } catch (RemoteException e) {\n+      //\n+      // This is a error returned by hadoop server. Print\n+      // out the first line of the error message, ignore the stack trace.\n+      exitCode \u003d -1;\n+      try {\n+        String[] content;\n+        content \u003d e.getLocalizedMessage().split(\"\\n\");\n+        System.err.println(cmd.substring(1) + \": \"\n+                           + content[0]);\n+      } catch (Exception ex) {\n+        System.err.println(cmd.substring(1) + \": \"\n+                           + ex.getLocalizedMessage());\n+      }\n+    } catch (Exception e) {\n+      exitCode \u003d -1;\n+      System.err.println(cmd.substring(1) + \": \"\n+                         + e.getLocalizedMessage());\n+    } \n+    return exitCode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(String[] argv) throws Exception {\n\n    if (argv.length \u003c 1) {\n      printUsage(\"\");\n      return -1;\n    }\n\n    int exitCode \u003d -1;\n    int i \u003d 0;\n    String cmd \u003d argv[i++];\n\n    //\n    // verify that we have enough command line parameters\n    //\n    if (\"-safemode\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-report\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-saveNamespace\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-restoreFailedStorage\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNodes\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-finalizeUpgrade\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-upgradeProgress\".equals(cmd)) {\n        if (argv.length !\u003d 2) {\n          printUsage(cmd);\n          return exitCode;\n        }\n    } else if (\"-metasave\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshServiceAcl\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n      if (argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-printTopology\".equals(cmd)) {\n      if(argv.length !\u003d 1) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-refreshNamenodes\".equals(cmd)) {\n      if (argv.length !\u003d 2) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    } else if (\"-deleteBlockPool\".equals(cmd)) {\n      if ((argv.length !\u003d 3) \u0026\u0026 (argv.length !\u003d 4)) {\n        printUsage(cmd);\n        return exitCode;\n      }\n    }\n    \n    // initialize DFSAdmin\n    try {\n      init();\n    } catch (RPC.VersionMismatch v) {\n      System.err.println(\"Version Mismatch between client and server\"\n                         + \"... command aborted.\");\n      return exitCode;\n    } catch (IOException e) {\n      System.err.println(\"Bad connection to DFS... command aborted.\");\n      return exitCode;\n    }\n\n    exitCode \u003d 0;\n    try {\n      if (\"-report\".equals(cmd)) {\n        report();\n      } else if (\"-safemode\".equals(cmd)) {\n        setSafeMode(argv, i);\n      } else if (\"-saveNamespace\".equals(cmd)) {\n        exitCode \u003d saveNamespace();\n      } else if (\"-restoreFailedStorage\".equals(cmd)) {\n        exitCode \u003d restoreFaileStorage(argv[i]);\n      } else if (\"-refreshNodes\".equals(cmd)) {\n        exitCode \u003d refreshNodes();\n      } else if (\"-finalizeUpgrade\".equals(cmd)) {\n        exitCode \u003d finalizeUpgrade();\n      } else if (\"-upgradeProgress\".equals(cmd)) {\n        exitCode \u003d upgradeProgress(argv, i);\n      } else if (\"-metasave\".equals(cmd)) {\n        exitCode \u003d metaSave(argv, i);\n      } else if (ClearQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (ClearSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new ClearSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (SetSpaceQuotaCommand.matches(cmd)) {\n        exitCode \u003d new SetSpaceQuotaCommand(argv, i, getDFS()).runAll();\n      } else if (\"-refreshServiceAcl\".equals(cmd)) {\n        exitCode \u003d refreshServiceAcl();\n      } else if (\"-refreshUserToGroupsMappings\".equals(cmd)) {\n        exitCode \u003d refreshUserToGroupsMappings();\n      } else if (\"-refreshSuperUserGroupsConfiguration\".equals(cmd)) {\n        exitCode \u003d refreshSuperUserGroupsConfiguration();\n      } else if (\"-printTopology\".equals(cmd)) {\n        exitCode \u003d printTopology();\n      } else if (\"-refreshNamenodes\".equals(cmd)) {\n        exitCode \u003d refreshNamenodes(argv, i);\n      } else if (\"-deleteBlockPool\".equals(cmd)) {\n        exitCode \u003d deleteBlockPool(argv, i);\n      } else if (\"-help\".equals(cmd)) {\n        if (i \u003c argv.length) {\n          printHelp(argv[i]);\n        } else {\n          printHelp(\"\");\n        }\n      } else {\n        exitCode \u003d -1;\n        System.err.println(cmd.substring(1) + \": Unknown command\");\n        printUsage(\"\");\n      }\n    } catch (IllegalArgumentException arge) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \" + arge.getLocalizedMessage());\n      printUsage(cmd);\n    } catch (RemoteException e) {\n      //\n      // This is a error returned by hadoop server. Print\n      // out the first line of the error message, ignore the stack trace.\n      exitCode \u003d -1;\n      try {\n        String[] content;\n        content \u003d e.getLocalizedMessage().split(\"\\n\");\n        System.err.println(cmd.substring(1) + \": \"\n                           + content[0]);\n      } catch (Exception ex) {\n        System.err.println(cmd.substring(1) + \": \"\n                           + ex.getLocalizedMessage());\n      }\n    } catch (Exception e) {\n      exitCode \u003d -1;\n      System.err.println(cmd.substring(1) + \": \"\n                         + e.getLocalizedMessage());\n    } \n    return exitCode;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java"
    }
  }
}