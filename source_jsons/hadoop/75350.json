{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAServiceProtocolClientSideTranslatorPB.java",
  "functionName": "getServiceStatus",
  "functionId": "getServiceStatus",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolClientSideTranslatorPB.java",
  "functionStartLine": 133,
  "functionEndLine": 150,
  "numCommitsSeen": 10,
  "timeTaken": 937,
  "changeHistory": [
    "b795c65f4929330972c07ec2d5d7ce987c5c2316",
    "7933dc583838fa7273cf55c03400a591a41d23db"
  ],
  "changeHistoryShort": {
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "7933dc583838fa7273cf55c03400a591a41d23db": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b795c65f4929330972c07ec2d5d7ce987c5c2316": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/12 11:29 PM",
      "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "20/03/12 4:29 PM",
          "commitNameOld": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.29,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public HAServiceState getServiceState() throws IOException {\n-    HAServiceStateProto state;\n+  public HAServiceStatus getServiceStatus() throws IOException {\n+    GetServiceStatusResponseProto status;\n     try {\n-      state \u003d rpcProxy.getServiceState(NULL_CONTROLLER,\n-          GET_SERVICE_STATE_REQ).getState();\n+      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n+          GET_SERVICE_STATUS_REQ);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n-    switch(state) {\n-    case ACTIVE:\n-      return HAServiceState.ACTIVE;\n-    case STANDBY:\n-      return HAServiceState.STANDBY;\n-    case INITIALIZING:\n-    default:\n-      return HAServiceState.INITIALIZING;\n+    \n+    HAServiceStatus ret \u003d new HAServiceStatus(\n+        convert(status.getState()));\n+    if (status.getReadyToBecomeActive()) {\n+      ret.setReadyToBecomeActive();\n+    } else {\n+      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n     }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HAServiceStatus getServiceStatus() throws IOException {\n    GetServiceStatusResponseProto status;\n    try {\n      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n          GET_SERVICE_STATUS_REQ);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    \n    HAServiceStatus ret \u003d new HAServiceStatus(\n        convert(status.getState()));\n    if (status.getReadyToBecomeActive()) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n    }\n    return ret;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolClientSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "getServiceState",
            "newValue": "getServiceStatus"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "20/03/12 4:29 PM",
          "commitNameOld": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.29,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public HAServiceState getServiceState() throws IOException {\n-    HAServiceStateProto state;\n+  public HAServiceStatus getServiceStatus() throws IOException {\n+    GetServiceStatusResponseProto status;\n     try {\n-      state \u003d rpcProxy.getServiceState(NULL_CONTROLLER,\n-          GET_SERVICE_STATE_REQ).getState();\n+      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n+          GET_SERVICE_STATUS_REQ);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n-    switch(state) {\n-    case ACTIVE:\n-      return HAServiceState.ACTIVE;\n-    case STANDBY:\n-      return HAServiceState.STANDBY;\n-    case INITIALIZING:\n-    default:\n-      return HAServiceState.INITIALIZING;\n+    \n+    HAServiceStatus ret \u003d new HAServiceStatus(\n+        convert(status.getState()));\n+    if (status.getReadyToBecomeActive()) {\n+      ret.setReadyToBecomeActive();\n+    } else {\n+      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n     }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HAServiceStatus getServiceStatus() throws IOException {\n    GetServiceStatusResponseProto status;\n    try {\n      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n          GET_SERVICE_STATUS_REQ);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    \n    HAServiceStatus ret \u003d new HAServiceStatus(\n        convert(status.getState()));\n    if (status.getReadyToBecomeActive()) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n    }\n    return ret;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolClientSideTranslatorPB.java",
          "extendedDetails": {
            "oldValue": "HAServiceState",
            "newValue": "HAServiceStatus"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3071. haadmin failover command does not provide enough detail when target NN is not ready to be active. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1304203 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/12 11:29 PM",
          "commitName": "b795c65f4929330972c07ec2d5d7ce987c5c2316",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "20/03/12 4:29 PM",
          "commitNameOld": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 2.29,
          "commitsBetweenForRepo": 12,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public HAServiceState getServiceState() throws IOException {\n-    HAServiceStateProto state;\n+  public HAServiceStatus getServiceStatus() throws IOException {\n+    GetServiceStatusResponseProto status;\n     try {\n-      state \u003d rpcProxy.getServiceState(NULL_CONTROLLER,\n-          GET_SERVICE_STATE_REQ).getState();\n+      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n+          GET_SERVICE_STATUS_REQ);\n     } catch (ServiceException e) {\n       throw ProtobufHelper.getRemoteException(e);\n     }\n-    switch(state) {\n-    case ACTIVE:\n-      return HAServiceState.ACTIVE;\n-    case STANDBY:\n-      return HAServiceState.STANDBY;\n-    case INITIALIZING:\n-    default:\n-      return HAServiceState.INITIALIZING;\n+    \n+    HAServiceStatus ret \u003d new HAServiceStatus(\n+        convert(status.getState()));\n+    if (status.getReadyToBecomeActive()) {\n+      ret.setReadyToBecomeActive();\n+    } else {\n+      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n     }\n+    return ret;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public HAServiceStatus getServiceStatus() throws IOException {\n    GetServiceStatusResponseProto status;\n    try {\n      status \u003d rpcProxy.getServiceStatus(NULL_CONTROLLER,\n          GET_SERVICE_STATUS_REQ);\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    \n    HAServiceStatus ret \u003d new HAServiceStatus(\n        convert(status.getState()));\n    if (status.getReadyToBecomeActive()) {\n      ret.setReadyToBecomeActive();\n    } else {\n      ret.setNotReadyToBecomeActive(status.getNotReadyReason());\n    }\n    return ret;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolClientSideTranslatorPB.java",
          "extendedDetails": {}
        }
      ]
    },
    "7933dc583838fa7273cf55c03400a591a41d23db": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2586. Add protobuf service and implementation for HAServiceProtocol. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1245338 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/02/12 11:37 PM",
      "commitName": "7933dc583838fa7273cf55c03400a591a41d23db",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,18 @@\n+  public HAServiceState getServiceState() throws IOException {\n+    HAServiceStateProto state;\n+    try {\n+      state \u003d rpcProxy.getServiceState(NULL_CONTROLLER,\n+          GET_SERVICE_STATE_REQ).getState();\n+    } catch (ServiceException e) {\n+      throw ProtobufHelper.getRemoteException(e);\n+    }\n+    switch(state) {\n+    case ACTIVE:\n+      return HAServiceState.ACTIVE;\n+    case STANDBY:\n+      return HAServiceState.STANDBY;\n+    case INITIALIZING:\n+    default:\n+      return HAServiceState.INITIALIZING;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public HAServiceState getServiceState() throws IOException {\n    HAServiceStateProto state;\n    try {\n      state \u003d rpcProxy.getServiceState(NULL_CONTROLLER,\n          GET_SERVICE_STATE_REQ).getState();\n    } catch (ServiceException e) {\n      throw ProtobufHelper.getRemoteException(e);\n    }\n    switch(state) {\n    case ACTIVE:\n      return HAServiceState.ACTIVE;\n    case STANDBY:\n      return HAServiceState.STANDBY;\n    case INITIALIZING:\n    default:\n      return HAServiceState.INITIALIZING;\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/protocolPB/HAServiceProtocolClientSideTranslatorPB.java"
    }
  }
}