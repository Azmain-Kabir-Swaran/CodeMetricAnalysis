{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UserProvider.java",
  "functionName": "deleteKey",
  "functionId": "deleteKey___name-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java",
  "functionStartLine": 103,
  "functionEndLine": 113,
  "numCommitsSeen": 8,
  "timeTaken": 777,
  "changeHistory": [
    "98a98ea0c57d01b875b820f53d43dbf885d07711",
    "77306291643838ed7b57b99d6497553314a525f2"
  ],
  "changeHistoryShort": {
    "98a98ea0c57d01b875b820f53d43dbf885d07711": "Ymodifierchange",
    "77306291643838ed7b57b99d6497553314a525f2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "98a98ea0c57d01b875b820f53d43dbf885d07711": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-10427. KeyProvider implementations should be thread safe. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/04/14 12:43 PM",
      "commitName": "98a98ea0c57d01b875b820f53d43dbf885d07711",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "16/01/14 9:48 AM",
      "commitNameOld": "e05ff82bd95dd802233e2424e8eafbd7ec6944c5",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 83.08,
      "commitsBetweenForRepo": 684,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  public void deleteKey(String name) throws IOException {\n+  public synchronized void deleteKey(String name) throws IOException {\n     Metadata meta \u003d getMetadata(name);\n     if (meta \u003d\u003d null) {\n       throw new IOException(\"Key \" + name + \" does not exist in \" + this);\n     }\n     for(int v\u003d0; v \u003c meta.getVersions(); ++v) {\n       credentials.removeSecretKey(new Text(buildVersionName(name, v)));\n     }\n     credentials.removeSecretKey(new Text(name));\n     cache.remove(name);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void deleteKey(String name) throws IOException {\n    Metadata meta \u003d getMetadata(name);\n    if (meta \u003d\u003d null) {\n      throw new IOException(\"Key \" + name + \" does not exist in \" + this);\n    }\n    for(int v\u003d0; v \u003c meta.getVersions(); ++v) {\n      credentials.removeSecretKey(new Text(buildVersionName(name, v)));\n    }\n    credentials.removeSecretKey(new Text(name));\n    cache.remove(name);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, synchronized]"
      }
    },
    "77306291643838ed7b57b99d6497553314a525f2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10141. Create KeyProvider API to separate encryption key storage\nfrom the applications. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552462 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/12/13 4:25 PM",
      "commitName": "77306291643838ed7b57b99d6497553314a525f2",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,11 @@\n+  public void deleteKey(String name) throws IOException {\n+    Metadata meta \u003d getMetadata(name);\n+    if (meta \u003d\u003d null) {\n+      throw new IOException(\"Key \" + name + \" does not exist in \" + this);\n+    }\n+    for(int v\u003d0; v \u003c meta.getVersions(); ++v) {\n+      credentials.removeSecretKey(new Text(buildVersionName(name, v)));\n+    }\n+    credentials.removeSecretKey(new Text(name));\n+    cache.remove(name);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void deleteKey(String name) throws IOException {\n    Metadata meta \u003d getMetadata(name);\n    if (meta \u003d\u003d null) {\n      throw new IOException(\"Key \" + name + \" does not exist in \" + this);\n    }\n    for(int v\u003d0; v \u003c meta.getVersions(); ++v) {\n      credentials.removeSecretKey(new Text(buildVersionName(name, v)));\n    }\n    credentials.removeSecretKey(new Text(name));\n    cache.remove(name);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/UserProvider.java"
    }
  }
}