{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnServerBuilderUtils.java",
  "functionName": "newNodeHeartbeatResponse",
  "functionId": "newNodeHeartbeatResponse___responseId-int__action-NodeAction__containersToCleanUp-List__ContainerId____applicationsToCleanUp-List__ApplicationId____containerTokenMasterKey-MasterKey__nmTokenMasterKey-MasterKey__nextHeartbeatInterval-long",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerBuilderUtils.java",
  "functionStartLine": 56,
  "functionEndLine": 75,
  "numCommitsSeen": 8,
  "timeTaken": 1301,
  "changeHistory": [
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
    "7ca9fe73a0f5047ff0279f3e29a29c8447cbb81a"
  ],
  "changeHistoryShort": {
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": "Ymultichange(Yparameterchange,Ybodychange)",
    "7ca9fe73a0f5047ff0279f3e29a29c8447cbb81a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/06/13 5:06 PM",
      "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 5:06 PM",
          "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "10/05/13 2:49 PM",
          "commitNameOld": "2638bc67a48f923404d57ed2026c4997df6bd06e",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 34.1,
          "commitsBetweenForRepo": 197,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n       NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n       List\u003cApplicationId\u003e applicationsToCleanUp,\n-      MasterKey masterKey, long nextHeartbeatInterval) {\n+      MasterKey containerTokenMasterKey, MasterKey nmTokenMasterKey,\n+      long nextHeartbeatInterval) {\n     NodeHeartbeatResponse response \u003d recordFactory\n         .newRecordInstance(NodeHeartbeatResponse.class);\n     response.setResponseId(responseId);\n     response.setNodeAction(action);\n-    response.setMasterKey(masterKey);\n+    response.setContainerTokenMasterKey(containerTokenMasterKey);\n+    response.setNMTokenMasterKey(nmTokenMasterKey);\n     response.setNextHeartBeatInterval(nextHeartbeatInterval);\n     if(containersToCleanUp !\u003d null) {\n       response.addAllContainersToCleanup(containersToCleanUp);\n     }\n     if(applicationsToCleanUp !\u003d null) {\n       response.addAllApplicationsToCleanup(applicationsToCleanUp);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n      NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n      List\u003cApplicationId\u003e applicationsToCleanUp,\n      MasterKey containerTokenMasterKey, MasterKey nmTokenMasterKey,\n      long nextHeartbeatInterval) {\n    NodeHeartbeatResponse response \u003d recordFactory\n        .newRecordInstance(NodeHeartbeatResponse.class);\n    response.setResponseId(responseId);\n    response.setNodeAction(action);\n    response.setContainerTokenMasterKey(containerTokenMasterKey);\n    response.setNMTokenMasterKey(nmTokenMasterKey);\n    response.setNextHeartBeatInterval(nextHeartbeatInterval);\n    if(containersToCleanUp !\u003d null) {\n      response.addAllContainersToCleanup(containersToCleanUp);\n    }\n    if(applicationsToCleanUp !\u003d null) {\n      response.addAllApplicationsToCleanup(applicationsToCleanUp);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerBuilderUtils.java",
          "extendedDetails": {
            "oldValue": "[responseId-int, action-NodeAction, containersToCleanUp-List\u003cContainerId\u003e, applicationsToCleanUp-List\u003cApplicationId\u003e, masterKey-MasterKey, nextHeartbeatInterval-long]",
            "newValue": "[responseId-int, action-NodeAction, containersToCleanUp-List\u003cContainerId\u003e, applicationsToCleanUp-List\u003cApplicationId\u003e, containerTokenMasterKey-MasterKey, nmTokenMasterKey-MasterKey, nextHeartbeatInterval-long]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-692. Creating NMToken master key on RM and sharing it with NM as a part of RM-NM heartbeat. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1492907 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "13/06/13 5:06 PM",
          "commitName": "f0eb4bc342370ec87d1f2665ffaf48ff4b3fbacb",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "10/05/13 2:49 PM",
          "commitNameOld": "2638bc67a48f923404d57ed2026c4997df6bd06e",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 34.1,
          "commitsBetweenForRepo": 197,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,20 @@\n   public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n       NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n       List\u003cApplicationId\u003e applicationsToCleanUp,\n-      MasterKey masterKey, long nextHeartbeatInterval) {\n+      MasterKey containerTokenMasterKey, MasterKey nmTokenMasterKey,\n+      long nextHeartbeatInterval) {\n     NodeHeartbeatResponse response \u003d recordFactory\n         .newRecordInstance(NodeHeartbeatResponse.class);\n     response.setResponseId(responseId);\n     response.setNodeAction(action);\n-    response.setMasterKey(masterKey);\n+    response.setContainerTokenMasterKey(containerTokenMasterKey);\n+    response.setNMTokenMasterKey(nmTokenMasterKey);\n     response.setNextHeartBeatInterval(nextHeartbeatInterval);\n     if(containersToCleanUp !\u003d null) {\n       response.addAllContainersToCleanup(containersToCleanUp);\n     }\n     if(applicationsToCleanUp !\u003d null) {\n       response.addAllApplicationsToCleanup(applicationsToCleanUp);\n     }\n     return response;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n      NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n      List\u003cApplicationId\u003e applicationsToCleanUp,\n      MasterKey containerTokenMasterKey, MasterKey nmTokenMasterKey,\n      long nextHeartbeatInterval) {\n    NodeHeartbeatResponse response \u003d recordFactory\n        .newRecordInstance(NodeHeartbeatResponse.class);\n    response.setResponseId(responseId);\n    response.setNodeAction(action);\n    response.setContainerTokenMasterKey(containerTokenMasterKey);\n    response.setNMTokenMasterKey(nmTokenMasterKey);\n    response.setNextHeartBeatInterval(nextHeartbeatInterval);\n    if(containersToCleanUp !\u003d null) {\n      response.addAllContainersToCleanup(containersToCleanUp);\n    }\n    if(applicationsToCleanUp !\u003d null) {\n      response.addAllApplicationsToCleanup(applicationsToCleanUp);\n    }\n    return response;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerBuilderUtils.java",
          "extendedDetails": {}
        }
      ]
    },
    "7ca9fe73a0f5047ff0279f3e29a29c8447cbb81a": {
      "type": "Yintroduced",
      "commitMessage": "YARN-309. Changed NodeManager to obtain heart-beat interval from the ResourceManager. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1463346 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/04/13 6:04 PM",
      "commitName": "7ca9fe73a0f5047ff0279f3e29a29c8447cbb81a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,18 @@\n+  public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n+      NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n+      List\u003cApplicationId\u003e applicationsToCleanUp,\n+      MasterKey masterKey, long nextHeartbeatInterval) {\n+    NodeHeartbeatResponse response \u003d recordFactory\n+        .newRecordInstance(NodeHeartbeatResponse.class);\n+    response.setResponseId(responseId);\n+    response.setNodeAction(action);\n+    response.setMasterKey(masterKey);\n+    response.setNextHeartBeatInterval(nextHeartbeatInterval);\n+    if(containersToCleanUp !\u003d null) {\n+      response.addAllContainersToCleanup(containersToCleanUp);\n+    }\n+    if(applicationsToCleanUp !\u003d null) {\n+      response.addAllApplicationsToCleanup(applicationsToCleanUp);\n+    }\n+    return response;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static NodeHeartbeatResponse newNodeHeartbeatResponse(int responseId,\n      NodeAction action, List\u003cContainerId\u003e containersToCleanUp,\n      List\u003cApplicationId\u003e applicationsToCleanUp,\n      MasterKey masterKey, long nextHeartbeatInterval) {\n    NodeHeartbeatResponse response \u003d recordFactory\n        .newRecordInstance(NodeHeartbeatResponse.class);\n    response.setResponseId(responseId);\n    response.setNodeAction(action);\n    response.setMasterKey(masterKey);\n    response.setNextHeartBeatInterval(nextHeartbeatInterval);\n    if(containersToCleanUp !\u003d null) {\n      response.addAllContainersToCleanup(containersToCleanUp);\n    }\n    if(applicationsToCleanUp !\u003d null) {\n      response.addAllApplicationsToCleanup(applicationsToCleanUp);\n    }\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/utils/YarnServerBuilderUtils.java"
    }
  }
}