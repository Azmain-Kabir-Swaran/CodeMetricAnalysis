{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Resources.java",
  "functionName": "multiplyAndAddTo",
  "functionId": "multiplyAndAddTo___lhs-Resource__rhs-Resource__by-double",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
  "functionStartLine": 321,
  "functionEndLine": 336,
  "numCommitsSeen": 44,
  "timeTaken": 5041,
  "changeHistory": [
    "29e27faf96b6e5b0ff3bca98f43a662d9d689f0a",
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
    "12a095a496dd59066d73a7a6c24129b5b6a9d650",
    "a6989af1d91d8b6795862c39d154823f8488c8de",
    "2b51b262aba0191b80dc93799574c0b959cb4f4e",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
    "58da54640e37571f82eb340f32641d58160e92b2",
    "239c1824a07fede71dd751ed2c1f40036b22170e",
    "819224dcf9c683aa52f58633ac8e13663f1916d8",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "5205a330b387d2e133ee790b9fe7d5af3cd8bccc"
  ],
  "changeHistoryShort": {
    "29e27faf96b6e5b0ff3bca98f43a662d9d689f0a": "Ybodychange",
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": "Ybodychange",
    "12a095a496dd59066d73a7a6c24129b5b6a9d650": "Ybodychange",
    "a6989af1d91d8b6795862c39d154823f8488c8de": "Ybodychange",
    "2b51b262aba0191b80dc93799574c0b959cb4f4e": "Ybodychange",
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": "Ybodychange",
    "58da54640e37571f82eb340f32641d58160e92b2": "Ybodychange",
    "239c1824a07fede71dd751ed2c1f40036b22170e": "Ybodychange",
    "819224dcf9c683aa52f58633ac8e13663f1916d8": "Ybodychange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "5205a330b387d2e133ee790b9fe7d5af3cd8bccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29e27faf96b6e5b0ff3bca98f43a662d9d689f0a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9318. Resources#multiplyAndRoundUp does not consider Resource Types\n(Contributed by Szilard Nemeth via Daniel Templeton)\n\nChange-Id: Ia45f528574c2b054f6f764d1d140e592bdb7e217\n",
      "commitDate": "27/02/19 10:29 AM",
      "commitName": "29e27faf96b6e5b0ff3bca98f43a662d9d689f0a",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "24/01/19 1:53 AM",
      "commitNameOld": "a4bd64e724cbe2ef639c984ddfe2da3baf170a96",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 34.36,
      "commitsBetweenForRepo": 268,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,16 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n     int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n         ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n \n         long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n         lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n       } catch (ResourceNotFoundException ye) {\n         LOG.warn(\"Resource is missing:\" + ye.getMessage());\n-        continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n\n        long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9037. [CSI] Ignore volume resource in resource calculators based on tags. Contributed by Sunil Govindan.\n",
      "commitDate": "07/01/19 10:30 PM",
      "commitName": "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "02/08/18 9:59 AM",
      "commitNameOld": "12a095a496dd59066d73a7a6c24129b5b6a9d650",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 158.56,
      "commitsBetweenForRepo": 1288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n         ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n \n         long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n         lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n       } catch (ResourceNotFoundException ye) {\n         LOG.warn(\"Resource is missing:\" + ye.getMessage());\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n\n        long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "12a095a496dd59066d73a7a6c24129b5b6a9d650": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7159. Normalize unit of resource objects in RM to avoid unit conversion in critical path. Contributed by Manikandan R.\n",
      "commitDate": "02/08/18 9:59 AM",
      "commitName": "12a095a496dd59066d73a7a6c24129b5b6a9d650",
      "commitAuthor": "Sunil G",
      "commitDateOld": "20/07/18 10:46 AM",
      "commitNameOld": "8a6bb8409c2dc695c0ffc70df0528d7f8bd5d795",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 12.97,
      "commitsBetweenForRepo": 97,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n     int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n         ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n \n-        long convertedRhs \u003d (long) (((rhsValue.getUnits()\n-            .equals(lhsValue.getUnits()))\n-                ? rhsValue.getValue()\n-                : UnitsConversionUtil.convert(rhsValue.getUnits(),\n-                    lhsValue.getUnits(), rhsValue.getValue()))\n-            * by);\n+        long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n         lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n       } catch (ResourceNotFoundException ye) {\n         LOG.warn(\"Resource is missing:\" + ye.getMessage());\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n\n        long convertedRhs \u003d (long) (rhsValue.getValue() * by);\n        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "a6989af1d91d8b6795862c39d154823f8488c8de": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7030. [YARN-3926] Performance optimizations in Resource and ResourceUtils class. Contributed by Wangda Tan.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "a6989af1d91d8b6795862c39d154823f8488c8de",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "2b51b262aba0191b80dc93799574c0b959cb4f4e",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n+    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n         ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n \n         long convertedRhs \u003d (long) (((rhsValue.getUnits()\n             .equals(lhsValue.getUnits()))\n                 ? rhsValue.getValue()\n                 : UnitsConversionUtil.convert(rhsValue.getUnits(),\n                     lhsValue.getUnits(), rhsValue.getValue()))\n             * by);\n         lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n       } catch (ResourceNotFoundException ye) {\n         LOG.warn(\"Resource is missing:\" + ye.getMessage());\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n\n        long convertedRhs \u003d (long) (((rhsValue.getUnits()\n            .equals(lhsValue.getUnits()))\n                ? rhsValue.getValue()\n                : UnitsConversionUtil.convert(rhsValue.getUnits(),\n                    lhsValue.getUnits(), rhsValue.getValue()))\n            * by);\n        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "2b51b262aba0191b80dc93799574c0b959cb4f4e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6892. [YARN-3926] Improve API implementation in Resources and DominantResourceCalculator class. Contributed by Sunil G.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "2b51b262aba0191b80dc93799574c0b959cb4f4e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "d5e9939ebb59e4f6f8e5e2fe7f619fb032f2911c",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    for (ResourceInformation entry : lhs.getResources()) {\n-      String name \u003d entry.getName();\n+    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n+    for (int i \u003d 0; i \u003c maxLength; i++) {\n       try {\n-        ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n-        ResourceInformation lhsValue \u003d entry;\n+        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n+        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n \n         long convertedRhs \u003d (long) (((rhsValue.getUnits()\n             .equals(lhsValue.getUnits()))\n                 ? rhsValue.getValue()\n                 : UnitsConversionUtil.convert(rhsValue.getUnits(),\n                     lhsValue.getUnits(), rhsValue.getValue()))\n             * by);\n-        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n+        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n       } catch (ResourceNotFoundException ye) {\n         LOG.warn(\"Resource is missing:\" + ye.getMessage());\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    int maxLength \u003d ResourceUtils.getResourceTypesArray().length;\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(i);\n        ResourceInformation lhsValue \u003d lhs.getResourceInformation(i);\n\n        long convertedRhs \u003d (long) (((rhsValue.getUnits()\n            .equals(lhsValue.getUnits()))\n                ? rhsValue.getValue()\n                : UnitsConversionUtil.convert(rhsValue.getUnits(),\n                    lhsValue.getUnits(), rhsValue.getValue()))\n            * by);\n        lhs.setResourceValue(i, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6788. [YARN-3926] Improve performance of resource profile branch\n(Contributed by Sunil Govindan via Daniel Templeton)\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "3aeaafecb823ef6c175ea5d0d9cb726faacaf32d",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "58da54640e37571f82eb340f32641d58160e92b2",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,22 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    for (Map.Entry\u003cString, ResourceInformation\u003e entry : lhs.getResources()\n-        .entrySet()) {\n-      String name \u003d entry.getKey();\n+    for (ResourceInformation entry : lhs.getResources()) {\n+      String name \u003d entry.getName();\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n-        ResourceInformation lhsValue \u003d entry.getValue();\n-        long convertedRhs \u003d (long) (UnitsConversionUtil\n-            .convert(rhsValue.getUnits(), lhsValue.getUnits(),\n-                rhsValue.getValue()) * by);\n+        ResourceInformation lhsValue \u003d entry;\n+\n+        long convertedRhs \u003d (long) (((rhsValue.getUnits()\n+            .equals(lhsValue.getUnits()))\n+                ? rhsValue.getValue()\n+                : UnitsConversionUtil.convert(rhsValue.getUnits(),\n+                    lhsValue.getUnits(), rhsValue.getValue()))\n+            * by);\n         lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n-      } catch (YarnException ye) {\n+      } catch (ResourceNotFoundException ye) {\n+        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    for (ResourceInformation entry : lhs.getResources()) {\n      String name \u003d entry.getName();\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n        ResourceInformation lhsValue \u003d entry;\n\n        long convertedRhs \u003d (long) (((rhsValue.getUnits()\n            .equals(lhsValue.getUnits()))\n                ? rhsValue.getValue()\n                : UnitsConversionUtil.convert(rhsValue.getUnits(),\n                    lhsValue.getUnits(), rhsValue.getValue()))\n            * by);\n        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n      } catch (ResourceNotFoundException ye) {\n        LOG.warn(\"Resource is missing:\" + ye.getMessage());\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "58da54640e37571f82eb340f32641d58160e92b2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6445. [YARN-3926] Performance improvements in resource profile branch with respect to SLS. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "58da54640e37571f82eb340f32641d58160e92b2",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n     for (Map.Entry\u003cString, ResourceInformation\u003e entry : lhs.getResources()\n         .entrySet()) {\n       String name \u003d entry.getKey();\n       try {\n         ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n         ResourceInformation lhsValue \u003d entry.getValue();\n-        Long convertedRhs \u003d (long) (UnitsConversionUtil\n+        long convertedRhs \u003d (long) (UnitsConversionUtil\n             .convert(rhsValue.getUnits(), lhsValue.getUnits(),\n                 rhsValue.getValue()) * by);\n         lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n       } catch (YarnException ye) {\n         continue;\n       }\n     }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : lhs.getResources()\n        .entrySet()) {\n      String name \u003d entry.getKey();\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n        ResourceInformation lhsValue \u003d entry.getValue();\n        long convertedRhs \u003d (long) (UnitsConversionUtil\n            .convert(rhsValue.getUnits(), lhsValue.getUnits(),\n                rhsValue.getValue()) * by);\n        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n      } catch (YarnException ye) {\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "239c1824a07fede71dd751ed2c1f40036b22170e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5586. Update the Resources class to consider all resource types. Contributed by Varun Vasudev.\n",
      "commitDate": "12/09/17 9:19 AM",
      "commitName": "239c1824a07fede71dd751ed2c1f40036b22170e",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "12/09/17 9:19 AM",
      "commitNameOld": "9e4ba6aff595b7a5b53d016c97c8334e10f1f2cb",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,18 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    lhs.setMemorySize(lhs.getMemorySize() + (long)(rhs.getMemorySize() * by));\n-    lhs.setVirtualCores(lhs.getVirtualCores()\n-        + (int)(rhs.getVirtualCores() * by));\n+    for (Map.Entry\u003cString, ResourceInformation\u003e entry : lhs.getResources()\n+        .entrySet()) {\n+      String name \u003d entry.getKey();\n+      try {\n+        ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n+        ResourceInformation lhsValue \u003d entry.getValue();\n+        Long convertedRhs \u003d (long) (UnitsConversionUtil\n+            .convert(rhsValue.getUnits(), lhsValue.getUnits(),\n+                rhsValue.getValue()) * by);\n+        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n+      } catch (YarnException ye) {\n+        continue;\n+      }\n+    }\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    for (Map.Entry\u003cString, ResourceInformation\u003e entry : lhs.getResources()\n        .entrySet()) {\n      String name \u003d entry.getKey();\n      try {\n        ResourceInformation rhsValue \u003d rhs.getResourceInformation(name);\n        ResourceInformation lhsValue \u003d entry.getValue();\n        Long convertedRhs \u003d (long) (UnitsConversionUtil\n            .convert(rhsValue.getUnits(), lhsValue.getUnits(),\n                rhsValue.getValue()) * by);\n        lhs.setResourceValue(name, lhsValue.getValue() + convertedRhs);\n      } catch (YarnException ye) {\n        continue;\n      }\n    }\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "819224dcf9c683aa52f58633ac8e13663f1916d8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5270. Solve miscellaneous issues caused by YARN-4844. Contributed by Wangda Tan\n",
      "commitDate": "11/07/16 10:36 PM",
      "commitName": "819224dcf9c683aa52f58633ac8e13663f1916d8",
      "commitAuthor": "Jian He",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 43.57,
      "commitsBetweenForRepo": 400,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    lhs.setMemory(lhs.getMemorySize() + (int)(rhs.getMemorySize() * by));\n+    lhs.setMemorySize(lhs.getMemorySize() + (long)(rhs.getMemorySize() * by));\n     lhs.setVirtualCores(lhs.getVirtualCores()\n         + (int)(rhs.getVirtualCores() * by));\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    lhs.setMemorySize(lhs.getMemorySize() + (long)(rhs.getMemorySize() * by));\n    lhs.setVirtualCores(lhs.getVirtualCores()\n        + (int)(rhs.getVirtualCores() * by));\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "01/04/16 4:20 PM",
      "commitNameOld": "81d04cae41182808ace5d86cdac7e4d71871eb1e",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 57.69,
      "commitsBetweenForRepo": 378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public static Resource multiplyAndAddTo(\n       Resource lhs, Resource rhs, double by) {\n-    lhs.setMemory(lhs.getMemory() + (int)(rhs.getMemory() * by));\n+    lhs.setMemory(lhs.getMemorySize() + (int)(rhs.getMemorySize() * by));\n     lhs.setVirtualCores(lhs.getVirtualCores()\n         + (int)(rhs.getVirtualCores() * by));\n     return lhs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    lhs.setMemory(lhs.getMemorySize() + (int)(rhs.getMemorySize() * by));\n    lhs.setVirtualCores(lhs.getVirtualCores()\n        + (int)(rhs.getVirtualCores() * by));\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java",
      "extendedDetails": {}
    },
    "5205a330b387d2e133ee790b9fe7d5af3cd8bccc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2768. Avoid cloning Resource in FSAppAttempt#updateDemand. (Hong Zhiguo via kasha)\n",
      "commitDate": "29/07/15 9:42 AM",
      "commitName": "5205a330b387d2e133ee790b9fe7d5af3cd8bccc",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,7 @@\n+  public static Resource multiplyAndAddTo(\n+      Resource lhs, Resource rhs, double by) {\n+    lhs.setMemory(lhs.getMemory() + (int)(rhs.getMemory() * by));\n+    lhs.setVirtualCores(lhs.getVirtualCores()\n+        + (int)(rhs.getVirtualCores() * by));\n+    return lhs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static Resource multiplyAndAddTo(\n      Resource lhs, Resource rhs, double by) {\n    lhs.setMemory(lhs.getMemory() + (int)(rhs.getMemory() * by));\n    lhs.setVirtualCores(lhs.getVirtualCores()\n        + (int)(rhs.getVirtualCores() * by));\n    return lhs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/resource/Resources.java"
    }
  }
}