{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenRenewer.java",
  "functionName": "removeApplicationFromRenewal",
  "functionId": "removeApplicationFromRenewal___applicationId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
  "functionStartLine": 844,
  "functionEndLine": 875,
  "numCommitsSeen": 43,
  "timeTaken": 2779,
  "changeHistory": [
    "06c56ff79b4cdf82f733498d3edfa0b6e531a2db",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
    "0402bada1989258ecbfdc437cb339322a1f55a97",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
    "29c6c3ed328965a73fe7b68eb29cb30794beef38"
  ],
  "changeHistoryShort": {
    "06c56ff79b4cdf82f733498d3edfa0b6e531a2db": "Ybodychange",
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": "Ybodychange",
    "0402bada1989258ecbfdc437cb339322a1f55a97": "Ybodychange",
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": "Ymultichange(Yrename,Ymodifierchange)",
    "29c6c3ed328965a73fe7b68eb29cb30794beef38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "06c56ff79b4cdf82f733498d3edfa0b6e531a2db": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5353. ResourceManager can leak delegation tokens when they are shared across apps. (Jason Lowe via Varun Saxena).\n",
      "commitDate": "12/07/16 7:25 PM",
      "commitName": "06c56ff79b4cdf82f733498d3edfa0b6e531a2db",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "03/06/16 1:00 PM",
      "commitNameOld": "f10ebc67f57a4a2e3cc916c41154ab9b6a4635c9",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 39.27,
      "commitsBetweenForRepo": 385,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,32 @@\n   private void removeApplicationFromRenewal(ApplicationId applicationId) {\n     rmContext.getSystemCredentialsForApps().remove(applicationId);\n-    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n+    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.remove(applicationId);\n \n     if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n       synchronized (tokens) {\n         Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n         while (it.hasNext()) {\n           DelegationTokenToRenew dttr \u003d it.next();\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                 + \"; token\u003d\" + dttr.token.getService());\n           }\n \n           // continue if the app list isn\u0027t empty\n           synchronized(dttr.referringAppIds) {\n             dttr.referringAppIds.remove(applicationId);\n             if (!dttr.referringAppIds.isEmpty()) {\n               continue;\n             }\n           }\n           // cancel the timer\n           dttr.cancelTimer();\n \n           // cancel the token\n           cancelToken(dttr);\n \n-          it.remove();\n           allTokens.remove(dttr.token);\n         }\n       }\n     }\n-\n-    if(tokens !\u003d null \u0026\u0026 tokens.isEmpty()) {\n-      appTokens.remove(applicationId);\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    rmContext.getSystemCredentialsForApps().remove(applicationId);\n    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.remove(applicationId);\n\n    if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n      synchronized (tokens) {\n        Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n        while (it.hasNext()) {\n          DelegationTokenToRenew dttr \u003d it.next();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                + \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // continue if the app list isn\u0027t empty\n          synchronized(dttr.referringAppIds) {\n            dttr.referringAppIds.remove(applicationId);\n            if (!dttr.referringAppIds.isEmpty()) {\n              continue;\n            }\n          }\n          // cancel the timer\n          dttr.cancelTimer();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          allTokens.remove(dttr.token);\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "9c5911294e0ba71aefe4763731b0e780cde9d0ca": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3055. Fixed ResourceManager\u0027s DelegationTokenRenewer to not stop token renewal of applications part of a bigger workflow. Contributed by Daryn Sharp.\n",
      "commitDate": "09/04/15 1:08 PM",
      "commitName": "9c5911294e0ba71aefe4763731b0e780cde9d0ca",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "23/03/15 10:45 AM",
      "commitNameOld": "6ca1f12024fd7cec7b01df0f039ca59f3f365dc1",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 17.1,
      "commitsBetweenForRepo": 161,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,37 @@\n   private void removeApplicationFromRenewal(ApplicationId applicationId) {\n     rmContext.getSystemCredentialsForApps().remove(applicationId);\n     Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n \n     if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n       synchronized (tokens) {\n         Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n         while (it.hasNext()) {\n           DelegationTokenToRenew dttr \u003d it.next();\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                 + \"; token\u003d\" + dttr.token.getService());\n           }\n \n+          // continue if the app list isn\u0027t empty\n+          synchronized(dttr.referringAppIds) {\n+            dttr.referringAppIds.remove(applicationId);\n+            if (!dttr.referringAppIds.isEmpty()) {\n+              continue;\n+            }\n+          }\n           // cancel the timer\n-          if (dttr.timerTask !\u003d null)\n-            dttr.timerTask.cancel();\n+          dttr.cancelTimer();\n \n           // cancel the token\n           cancelToken(dttr);\n \n           it.remove();\n           allTokens.remove(dttr.token);\n         }\n       }\n     }\n \n     if(tokens !\u003d null \u0026\u0026 tokens.isEmpty()) {\n       appTokens.remove(applicationId);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    rmContext.getSystemCredentialsForApps().remove(applicationId);\n    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n\n    if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n      synchronized (tokens) {\n        Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n        while (it.hasNext()) {\n          DelegationTokenToRenew dttr \u003d it.next();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                + \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // continue if the app list isn\u0027t empty\n          synchronized(dttr.referringAppIds) {\n            dttr.referringAppIds.remove(applicationId);\n            if (!dttr.referringAppIds.isEmpty()) {\n              continue;\n            }\n          }\n          // cancel the timer\n          dttr.cancelTimer();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n          allTokens.remove(dttr.token);\n        }\n      }\n    }\n\n    if(tokens !\u003d null \u0026\u0026 tokens.isEmpty()) {\n      appTokens.remove(applicationId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "0402bada1989258ecbfdc437cb339322a1f55a97": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2964. RM prematurely cancels tokens for jobs that submit jobs (oozie). Contributed by Jian He\n",
      "commitDate": "18/12/14 3:28 PM",
      "commitName": "0402bada1989258ecbfdc437cb339322a1f55a97",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/12/14 5:40 PM",
      "commitNameOld": "2b4b0e8847048850206f091c6870a02e08cfe836",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.91,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,31 @@\n   private void removeApplicationFromRenewal(ApplicationId applicationId) {\n     rmContext.getSystemCredentialsForApps().remove(applicationId);\n     Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n \n     if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n       synchronized (tokens) {\n         Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n         while (it.hasNext()) {\n           DelegationTokenToRenew dttr \u003d it.next();\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                 + \"; token\u003d\" + dttr.token.getService());\n           }\n \n           // cancel the timer\n           if (dttr.timerTask !\u003d null)\n             dttr.timerTask.cancel();\n \n           // cancel the token\n           cancelToken(dttr);\n \n           it.remove();\n+          allTokens.remove(dttr.token);\n         }\n       }\n     }\n+\n+    if(tokens !\u003d null \u0026\u0026 tokens.isEmpty()) {\n+      appTokens.remove(applicationId);\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    rmContext.getSystemCredentialsForApps().remove(applicationId);\n    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n\n    if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n      synchronized (tokens) {\n        Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n        while (it.hasNext()) {\n          DelegationTokenToRenew dttr \u003d it.next();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                + \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if (dttr.timerTask !\u003d null)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n          allTokens.remove(dttr.token);\n        }\n      }\n    }\n\n    if(tokens !\u003d null \u0026\u0026 tokens.isEmpty()) {\n      appTokens.remove(applicationId);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "a16d022ca4313a41425c8e97841c841a2d6f2f54": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2704. Changed ResourceManager to optionally obtain tokens itself for the sake of localization and log-aggregation for long-running services. Contributed by Jian He.\n",
      "commitDate": "27/10/14 3:49 PM",
      "commitName": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/08/14 11:16 AM",
      "commitNameOld": "3de66011c2e80d7c458a67f80042af986fcc677d",
      "commitAuthorOld": "Hitesh Shah",
      "daysBetweenCommits": 59.19,
      "commitsBetweenForRepo": 586,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,26 @@\n   private void removeApplicationFromRenewal(ApplicationId applicationId) {\n-    synchronized (delegationTokens) {\n-      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n-      while(it.hasNext()) {\n-        DelegationTokenToRenew dttr \u003d it.next();\n-        if (dttr.applicationId.equals(applicationId)) {\n+    rmContext.getSystemCredentialsForApps().remove(applicationId);\n+    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n+\n+    if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n+      synchronized (tokens) {\n+        Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n+        while (it.hasNext()) {\n+          DelegationTokenToRenew dttr \u003d it.next();\n           if (LOG.isDebugEnabled()) {\n-            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n-                \"; token\u003d\" + dttr.token.getService());\n+            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n+                + \"; token\u003d\" + dttr.token.getService());\n           }\n \n           // cancel the timer\n-          if(dttr.timerTask!\u003dnull)\n+          if (dttr.timerTask !\u003d null)\n             dttr.timerTask.cancel();\n \n           // cancel the token\n           cancelToken(dttr);\n \n           it.remove();\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    rmContext.getSystemCredentialsForApps().remove(applicationId);\n    Set\u003cDelegationTokenToRenew\u003e tokens \u003d appTokens.get(applicationId);\n\n    if (tokens !\u003d null \u0026\u0026 !tokens.isEmpty()) {\n      synchronized (tokens) {\n        Iterator\u003cDelegationTokenToRenew\u003e it \u003d tokens.iterator();\n        while (it.hasNext()) {\n          DelegationTokenToRenew dttr \u003d it.next();\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId\n                + \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if (dttr.timerTask !\u003d null)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    synchronized (delegationTokens) {\n      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n      while(it.hasNext()) {\n        DelegationTokenToRenew dttr \u003d it.next();\n        if (dttr.applicationId.equals(applicationId)) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if(dttr.timerTask!\u003dnull)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n        }\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java"
      }
    },
    "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b": {
      "type": "Ymultichange(Yrename,Ymodifierchange)",
      "commitMessage": "MAPREDUCE-3398. Fixed log aggregation to work correctly in secure mode. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/11 11:55 AM",
      "commitName": "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-3398. Fixed log aggregation to work correctly in secure mode. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/12/11 11:55 AM",
          "commitName": "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/11/11 2:58 PM",
          "commitNameOld": "6733a1ca5ef741d3bdf886f301954e9a9e7a875f",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 37.87,
          "commitsBetweenForRepo": 214,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public void removeApplication(ApplicationId applicationId) {\n+  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n     synchronized (delegationTokens) {\n       Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n       while(it.hasNext()) {\n         DelegationTokenToRenew dttr \u003d it.next();\n         if (dttr.applicationId.equals(applicationId)) {\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                 \"; token\u003d\" + dttr.token.getService());\n           }\n \n           // cancel the timer\n           if(dttr.timerTask!\u003dnull)\n             dttr.timerTask.cancel();\n \n           // cancel the token\n           cancelToken(dttr);\n \n           it.remove();\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    synchronized (delegationTokens) {\n      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n      while(it.hasNext()) {\n        DelegationTokenToRenew dttr \u003d it.next();\n        if (dttr.applicationId.equals(applicationId)) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if(dttr.timerTask!\u003dnull)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
          "extendedDetails": {
            "oldValue": "removeApplication",
            "newValue": "removeApplicationFromRenewal"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "MAPREDUCE-3398. Fixed log aggregation to work correctly in secure mode. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1214429 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/12/11 11:55 AM",
          "commitName": "50fa9b89f42bd3fe6aad5086b0df14a00dadb24b",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "06/11/11 2:58 PM",
          "commitNameOld": "6733a1ca5ef741d3bdf886f301954e9a9e7a875f",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 37.87,
          "commitsBetweenForRepo": 214,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n-  public void removeApplication(ApplicationId applicationId) {\n+  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n     synchronized (delegationTokens) {\n       Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n       while(it.hasNext()) {\n         DelegationTokenToRenew dttr \u003d it.next();\n         if (dttr.applicationId.equals(applicationId)) {\n           if (LOG.isDebugEnabled()) {\n             LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                 \"; token\u003d\" + dttr.token.getService());\n           }\n \n           // cancel the timer\n           if(dttr.timerTask!\u003dnull)\n             dttr.timerTask.cancel();\n \n           // cancel the token\n           cancelToken(dttr);\n \n           it.remove();\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void removeApplicationFromRenewal(ApplicationId applicationId) {\n    synchronized (delegationTokens) {\n      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n      while(it.hasNext()) {\n        DelegationTokenToRenew dttr \u003d it.next();\n        if (dttr.applicationId.equals(applicationId)) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if(dttr.timerTask!\u003dnull)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n        }\n      }\n    }\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[private]"
          }
        }
      ]
    },
    "29c6c3ed328965a73fe7b68eb29cb30794beef38": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2977. Fix ResourceManager to renew HDFS delegation tokens for applications. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189012 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/10/11 7:53 PM",
      "commitName": "29c6c3ed328965a73fe7b68eb29cb30794beef38",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,23 @@\n+  public void removeApplication(ApplicationId applicationId) {\n+    synchronized (delegationTokens) {\n+      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n+      while(it.hasNext()) {\n+        DelegationTokenToRenew dttr \u003d it.next();\n+        if (dttr.applicationId.equals(applicationId)) {\n+          if (LOG.isDebugEnabled()) {\n+            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n+                \"; token\u003d\" + dttr.token.getService());\n+          }\n+\n+          // cancel the timer\n+          if(dttr.timerTask!\u003dnull)\n+            dttr.timerTask.cancel();\n+\n+          // cancel the token\n+          cancelToken(dttr);\n+\n+          it.remove();\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void removeApplication(ApplicationId applicationId) {\n    synchronized (delegationTokens) {\n      Iterator\u003cDelegationTokenToRenew\u003e it \u003d delegationTokens.iterator();\n      while(it.hasNext()) {\n        DelegationTokenToRenew dttr \u003d it.next();\n        if (dttr.applicationId.equals(applicationId)) {\n          if (LOG.isDebugEnabled()) {\n            LOG.debug(\"Removing delegation token for appId\u003d\" + applicationId + \n                \"; token\u003d\" + dttr.token.getService());\n          }\n\n          // cancel the timer\n          if(dttr.timerTask!\u003dnull)\n            dttr.timerTask.cancel();\n\n          // cancel the token\n          cancelToken(dttr);\n\n          it.remove();\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/security/DelegationTokenRenewer.java"
    }
  }
}