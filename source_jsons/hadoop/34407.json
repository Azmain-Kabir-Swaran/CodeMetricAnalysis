{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceLocalizationService.java",
  "functionName": "handleCleanupContainerResources",
  "functionId": "handleCleanupContainerResources___rsrcCleanup-ContainerLocalizationCleanupEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
  "functionStartLine": 558,
  "functionEndLine": 608,
  "numCommitsSeen": 106,
  "timeTaken": 3293,
  "changeHistory": [
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
    "2692675fc3b5046d2ec88542c30203c87e135b70",
    "27e8c86999bc6a972a99216060b11ef35b7de858",
    "16cf201042ed51b2a4acc22ce608a8cae7e79a75",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87"
  ],
  "changeHistoryShort": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": "Ybodychange",
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": "Ybodychange",
    "2692675fc3b5046d2ec88542c30203c87e135b70": "Ybodychange",
    "27e8c86999bc6a972a99216060b11ef35b7de858": "Ybodychange",
    "16cf201042ed51b2a4acc22ce608a8cae7e79a75": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": "Ybodychange",
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c77a1095dc556e8bea87df6d8ddf36e898f27e86": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1942. Deprecate toString/fromString methods from ConverterUtils and move them to records classes like ContainerId/ApplicationId, etc. (wangda)\n",
      "commitDate": "14/06/16 3:06 PM",
      "commitName": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "10/02/16 10:36 PM",
      "commitNameOld": "fa00d3e20560bee412b49e5792595749a247a8ab",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 124.65,
      "commitsBetweenForRepo": 784,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,50 +1,51 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n           c.getContainerId().getApplicationAttemptId()\n           .getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n         tracker.handle(new ResourceReleaseEvent(req,\n             c.getContainerId()));\n       }\n     }\n-    String locId \u003d ConverterUtils.toString(c.getContainerId());\n+    String locId \u003d c.getContainerId().toString();\n     localizerTracker.cleanupPrivLocalizers(locId);\n     \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n-    String appIDStr \u003d ConverterUtils.toString(\n-        c.getContainerId().getApplicationAttemptId().getApplicationId());\n+    String appIDStr \u003d\n+        c.getContainerId().getApplicationAttemptId().getApplicationId()\n+            .toString();\n     \n     // Try deleting from good local dirs and full local dirs because a dir might\n     // have gone bad while the app was running(disk full). In addition\n     // a dir might have become good while the app was running.\n     // Check if the container dir exists and if it does, try to delete it\n \n     for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n       submitDirForDeletion(userName, containerDir);\n \n       // Delete the nmPrivate container-dir\n \n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n       submitDirForDeletion(null, containerSysDir);\n     }\n \n     dispatcher.getEventHandler().handle(\n         new ContainerEvent(c.getContainerId(),\n             ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerId().getApplicationAttemptId()\n          .getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req,\n            c.getContainerId()));\n      }\n    }\n    String locId \u003d c.getContainerId().toString();\n    localizerTracker.cleanupPrivLocalizers(locId);\n    \n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d\n        c.getContainerId().getApplicationAttemptId().getApplicationId()\n            .toString();\n    \n    // Try deleting from good local dirs and full local dirs because a dir might\n    // have gone bad while the app was running(disk full). In addition\n    // a dir might have become good while the app was running.\n    // Check if the container dir exists and if it does, try to delete it\n\n    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      submitDirForDeletion(userName, containerDir);\n\n      // Delete the nmPrivate container-dir\n\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      submitDirForDeletion(null, containerSysDir);\n    }\n\n    dispatcher.getEventHandler().handle(\n        new ContainerEvent(c.getContainerId(),\n            ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "6f2028bd1514d90b831f889fd0ee7f2ba5c15000": {
      "type": "Ybodychange",
      "commitMessage": "YARN-90. NodeManager should identify failed disks becoming good again. Contributed by Varun Vasudev\n",
      "commitDate": "21/10/14 10:31 AM",
      "commitName": "6f2028bd1514d90b831f889fd0ee7f2ba5c15000",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "13/10/14 11:31 AM",
      "commitNameOld": "a56ea0100215ecf2e1471a18812b668658197239",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 7.96,
      "commitsBetweenForRepo": 52,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,50 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n           c.getContainerId().getApplicationAttemptId()\n           .getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n         tracker.handle(new ResourceReleaseEvent(req,\n             c.getContainerId()));\n       }\n     }\n     String locId \u003d ConverterUtils.toString(c.getContainerId());\n     localizerTracker.cleanupPrivLocalizers(locId);\n     \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n     String appIDStr \u003d ConverterUtils.toString(\n         c.getContainerId().getApplicationAttemptId().getApplicationId());\n-    for (String localDir : dirsHandler.getLocalDirs()) {\n+    \n+    // Try deleting from good local dirs and full local dirs because a dir might\n+    // have gone bad while the app was running(disk full). In addition\n+    // a dir might have become good while the app was running.\n+    // Check if the container dir exists and if it does, try to delete it\n \n+    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n-      delService.delete(userName, containerDir, new Path[] {});\n+      submitDirForDeletion(userName, containerDir);\n \n       // Delete the nmPrivate container-dir\n-      \n+\n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n-      delService.delete(null, containerSysDir,  new Path[] {});\n+      submitDirForDeletion(null, containerSysDir);\n     }\n \n     dispatcher.getEventHandler().handle(\n         new ContainerEvent(c.getContainerId(),\n             ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerId().getApplicationAttemptId()\n          .getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req,\n            c.getContainerId()));\n      }\n    }\n    String locId \u003d ConverterUtils.toString(c.getContainerId());\n    localizerTracker.cleanupPrivLocalizers(locId);\n    \n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerId().getApplicationAttemptId().getApplicationId());\n    \n    // Try deleting from good local dirs and full local dirs because a dir might\n    // have gone bad while the app was running(disk full). In addition\n    // a dir might have become good while the app was running.\n    // Check if the container dir exists and if it does, try to delete it\n\n    for (String localDir : dirsHandler.getLocalDirsForCleanup()) {\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      submitDirForDeletion(userName, containerDir);\n\n      // Delete the nmPrivate container-dir\n\n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      submitDirForDeletion(null, containerSysDir);\n    }\n\n    dispatcher.getEventHandler().handle(\n        new ContainerEvent(c.getContainerId(),\n            ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "2692675fc3b5046d2ec88542c30203c87e135b70": {
      "type": "Ybodychange",
      "commitMessage": "YARN-684. ContainerManager.startContainer should use ContainerTokenIdentifier instead of the entire Container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/13 9:13 PM",
      "commitName": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "10/05/13 2:49 PM",
      "commitNameOld": "2638bc67a48f923404d57ed2026c4997df6bd06e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 20.27,
      "commitsBetweenForRepo": 87,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,45 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n-          c.getContainer().getId().getApplicationAttemptId()\n+          c.getContainerId().getApplicationAttemptId()\n           .getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n         tracker.handle(new ResourceReleaseEvent(req,\n-            c.getContainer().getId()));\n+            c.getContainerId()));\n       }\n     }\n-    String locId \u003d ConverterUtils.toString(c.getContainer().getId());\n+    String locId \u003d ConverterUtils.toString(c.getContainerId());\n     localizerTracker.cleanupPrivLocalizers(locId);\n     \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n     String appIDStr \u003d ConverterUtils.toString(\n-        c.getContainer().getId().getApplicationAttemptId().getApplicationId());\n+        c.getContainerId().getApplicationAttemptId().getApplicationId());\n     for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n       delService.delete(userName, containerDir, new Path[] {});\n \n       // Delete the nmPrivate container-dir\n       \n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n       delService.delete(null, containerSysDir,  new Path[] {});\n     }\n \n     dispatcher.getEventHandler().handle(\n-        new ContainerEvent(c.getContainer().getId(),\n+        new ContainerEvent(c.getContainerId(),\n             ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerId().getApplicationAttemptId()\n          .getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req,\n            c.getContainerId()));\n      }\n    }\n    String locId \u003d ConverterUtils.toString(c.getContainerId());\n    localizerTracker.cleanupPrivLocalizers(locId);\n    \n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerId().getApplicationAttemptId().getApplicationId());\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(\n        new ContainerEvent(c.getContainerId(),\n            ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "27e8c86999bc6a972a99216060b11ef35b7de858": {
      "type": "Ybodychange",
      "commitMessage": "YARN-561. Modified NodeManager to set key information into the environment of every container that it launches. Contributed by Xuan Gong.\nMAPREDUCE-5175. Updated MR App to not set envs that will be set by NMs anyways after YARN-561. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1471156 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/13 2:39 PM",
      "commitName": "27e8c86999bc6a972a99216060b11ef35b7de858",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/04/13 9:37 PM",
      "commitNameOld": "ffd7dbb34a661e516cef991975cefb31e9d2f2db",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.71,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,45 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n-          c.getContainerID().getApplicationAttemptId().getApplicationId());\n+          c.getContainer().getId().getApplicationAttemptId()\n+          .getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n-        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n+        tracker.handle(new ResourceReleaseEvent(req,\n+            c.getContainer().getId()));\n       }\n     }\n-    String locId \u003d ConverterUtils.toString(c.getContainerID());\n+    String locId \u003d ConverterUtils.toString(c.getContainer().getId());\n     localizerTracker.cleanupPrivLocalizers(locId);\n     \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n     String appIDStr \u003d ConverterUtils.toString(\n-        c.getContainerID().getApplicationAttemptId().getApplicationId());\n+        c.getContainer().getId().getApplicationAttemptId().getApplicationId());\n     for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n       delService.delete(userName, containerDir, new Path[] {});\n \n       // Delete the nmPrivate container-dir\n       \n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n       delService.delete(null, containerSysDir,  new Path[] {});\n     }\n \n-    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n-          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n+    dispatcher.getEventHandler().handle(\n+        new ContainerEvent(c.getContainer().getId(),\n+            ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainer().getId().getApplicationAttemptId()\n          .getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req,\n            c.getContainer().getId()));\n      }\n    }\n    String locId \u003d ConverterUtils.toString(c.getContainer().getId());\n    localizerTracker.cleanupPrivLocalizers(locId);\n    \n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainer().getId().getApplicationAttemptId().getApplicationId());\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(\n        new ContainerEvent(c.getContainer().getId(),\n            ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "16cf201042ed51b2a4acc22ce608a8cae7e79a75": {
      "type": "Ybodychange",
      "commitMessage": "YARN-293. Node Manager leaks LocalizerRunner object for every Container. Contributed by Robert Joseph Evans\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428095 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/01/13 2:41 PM",
      "commitName": "16cf201042ed51b2a4acc22ce608a8cae7e79a75",
      "commitAuthor": "Jason Darrell Lowe",
      "commitDateOld": "26/09/12 8:22 AM",
      "commitNameOld": "050fd3a11744cde3d54c1fff23d8fdeb3803bf92",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 98.3,
      "commitsBetweenForRepo": 452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,42 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n           c.getContainerID().getApplicationAttemptId().getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n         tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n       }\n     }\n-\n+    String locId \u003d ConverterUtils.toString(c.getContainerID());\n+    localizerTracker.cleanupPrivLocalizers(locId);\n+    \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n     String appIDStr \u003d ConverterUtils.toString(\n         c.getContainerID().getApplicationAttemptId().getApplicationId());\n     for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n       delService.delete(userName, containerDir, new Path[] {});\n \n       // Delete the nmPrivate container-dir\n       \n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n       delService.delete(null, containerSysDir,  new Path[] {});\n     }\n \n     dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n           ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerID().getApplicationAttemptId().getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n      }\n    }\n    String locId \u003d ConverterUtils.toString(c.getContainerID());\n    localizerTracker.cleanupPrivLocalizers(locId);\n    \n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerID().getApplicationAttemptId().getApplicationId());\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerID().getApplicationAttemptId().getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n      }\n    }\n\n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerID().getApplicationAttemptId().getApplicationId());\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
      }
    },
    "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3121. NodeManager should handle disk-failures (Ravi Gummadi via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208131 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/11/11 3:17 PM",
      "commitName": "ea17da82f7fc4b7fcc05bba82d141e27289fd7cb",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "31/10/11 8:16 PM",
      "commitNameOld": "cfb6a9883d2bf02c99f258e9f19ffcd83805d077",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 28.83,
      "commitsBetweenForRepo": 145,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private void handleCleanupContainerResources(\n       ContainerLocalizationCleanupEvent rsrcCleanup) {\n     Container c \u003d rsrcCleanup.getContainer();\n     Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n       rsrcCleanup.getResources();\n     for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n          rsrcs.entrySet()) {\n       LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n           c.getContainerID().getApplicationAttemptId().getApplicationId());\n       for (LocalResourceRequest req : e.getValue()) {\n         tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n       }\n     }\n \n     // Delete the container directories\n     String userName \u003d c.getUser();\n     String containerIDStr \u003d c.toString();\n     String appIDStr \u003d ConverterUtils.toString(\n         c.getContainerID().getApplicationAttemptId().getApplicationId());\n-    for (Path localDir : localDirs) {\n+    for (String localDir : dirsHandler.getLocalDirs()) {\n \n       // Delete the user-owned container-dir\n       Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n       Path userdir \u003d new Path(usersdir, userName);\n       Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n       Path appDir \u003d new Path(allAppsdir, appIDStr);\n       Path containerDir \u003d new Path(appDir, containerIDStr);\n       delService.delete(userName, containerDir, new Path[] {});\n \n       // Delete the nmPrivate container-dir\n       \n       Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n       Path appSysDir \u003d new Path(sysDir, appIDStr);\n       Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n       delService.delete(null, containerSysDir,  new Path[] {});\n     }\n \n     dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n           ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerID().getApplicationAttemptId().getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n      }\n    }\n\n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerID().getApplicationAttemptId().getApplicationId());\n    for (String localDir : dirsHandler.getLocalDirs()) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java",
      "extendedDetails": {}
    },
    "11b9dd4e844c762f8c53e5fafa25f29eece1bc87": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3161. Improved some javadocs and fixed some typos in YARN. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1181622 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/10/11 9:45 PM",
      "commitName": "11b9dd4e844c762f8c53e5fafa25f29eece1bc87",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,40 @@\n+  private void handleCleanupContainerResources(\n+      ContainerLocalizationCleanupEvent rsrcCleanup) {\n+    Container c \u003d rsrcCleanup.getContainer();\n+    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n+      rsrcCleanup.getResources();\n+    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n+         rsrcs.entrySet()) {\n+      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n+          c.getContainerID().getApplicationAttemptId().getApplicationId());\n+      for (LocalResourceRequest req : e.getValue()) {\n+        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n+      }\n+    }\n+\n+    // Delete the container directories\n+    String userName \u003d c.getUser();\n+    String containerIDStr \u003d c.toString();\n+    String appIDStr \u003d ConverterUtils.toString(\n+        c.getContainerID().getApplicationAttemptId().getApplicationId());\n+    for (Path localDir : localDirs) {\n+\n+      // Delete the user-owned container-dir\n+      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n+      Path userdir \u003d new Path(usersdir, userName);\n+      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n+      Path appDir \u003d new Path(allAppsdir, appIDStr);\n+      Path containerDir \u003d new Path(appDir, containerIDStr);\n+      delService.delete(userName, containerDir, new Path[] {});\n+\n+      // Delete the nmPrivate container-dir\n+      \n+      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n+      Path appSysDir \u003d new Path(sysDir, appIDStr);\n+      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n+      delService.delete(null, containerSysDir,  new Path[] {});\n+    }\n+\n+    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n+          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void handleCleanupContainerResources(\n      ContainerLocalizationCleanupEvent rsrcCleanup) {\n    Container c \u003d rsrcCleanup.getContainer();\n    Map\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e rsrcs \u003d\n      rsrcCleanup.getResources();\n    for (Map.Entry\u003cLocalResourceVisibility, Collection\u003cLocalResourceRequest\u003e\u003e e :\n         rsrcs.entrySet()) {\n      LocalResourcesTracker tracker \u003d getLocalResourcesTracker(e.getKey(), c.getUser(), \n          c.getContainerID().getApplicationAttemptId().getApplicationId());\n      for (LocalResourceRequest req : e.getValue()) {\n        tracker.handle(new ResourceReleaseEvent(req, c.getContainerID()));\n      }\n    }\n\n    // Delete the container directories\n    String userName \u003d c.getUser();\n    String containerIDStr \u003d c.toString();\n    String appIDStr \u003d ConverterUtils.toString(\n        c.getContainerID().getApplicationAttemptId().getApplicationId());\n    for (Path localDir : localDirs) {\n\n      // Delete the user-owned container-dir\n      Path usersdir \u003d new Path(localDir, ContainerLocalizer.USERCACHE);\n      Path userdir \u003d new Path(usersdir, userName);\n      Path allAppsdir \u003d new Path(userdir, ContainerLocalizer.APPCACHE);\n      Path appDir \u003d new Path(allAppsdir, appIDStr);\n      Path containerDir \u003d new Path(appDir, containerIDStr);\n      delService.delete(userName, containerDir, new Path[] {});\n\n      // Delete the nmPrivate container-dir\n      \n      Path sysDir \u003d new Path(localDir, NM_PRIVATE_DIR);\n      Path appSysDir \u003d new Path(sysDir, appIDStr);\n      Path containerSysDir \u003d new Path(appSysDir, containerIDStr);\n      delService.delete(null, containerSysDir,  new Path[] {});\n    }\n\n    dispatcher.getEventHandler().handle(new ContainerEvent(c.getContainerID(),\n          ContainerEventType.CONTAINER_RESOURCES_CLEANEDUP));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/localizer/ResourceLocalizationService.java"
    }
  }
}