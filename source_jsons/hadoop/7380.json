{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirXAttrOp.java",
  "functionName": "checkXAttrChangeAccess",
  "functionId": "checkXAttrChangeAccess___fsd-FSDirectory__iip-INodesInPath__xAttr-XAttr__pc-FSPermissionChecker",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
  "functionStartLine": 423,
  "functionEndLine": 440,
  "numCommitsSeen": 986,
  "timeTaken": 11647,
  "changeHistory": [
    "27e0681f28ee896ada163bbbc08fd44d113e7d15",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
    "ea4e2e843ecadd8019ea35413f4a34b97a424923"
  ],
  "changeHistoryShort": {
    "27e0681f28ee896ada163bbbc08fd44d113e7d15": "Yexceptionschange",
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "ea4e2e843ecadd8019ea35413f4a34b97a424923": "Ybodychange"
  },
  "changeHistoryDetails": {
    "27e0681f28ee896ada163bbbc08fd44d113e7d15": {
      "type": "Yexceptionschange",
      "commitMessage": "HDFS-9851. NameNode throws NPE when setPermission is called on a path that does not exist. Contributed by Brahma Reddy Battula.\n",
      "commitDate": "01/03/16 9:43 PM",
      "commitName": "27e0681f28ee896ada163bbbc08fd44d113e7d15",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "21/09/15 6:53 PM",
      "commitNameOld": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 162.16,
      "commitsBetweenForRepo": 1135,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private static void checkXAttrChangeAccess(\n       FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n       FSPermissionChecker pc)\n-      throws AccessControlException {\n+      throws AccessControlException, FileNotFoundException {\n     if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n         .USER) {\n       final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n           fsd.checkOwner(pc, iip);\n         }\n       } else {\n         fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void checkXAttrChangeAccess(\n      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc)\n      throws AccessControlException, FileNotFoundException {\n    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n        .USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          fsd.checkOwner(pc, iip);\n        }\n      } else {\n        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
      "extendedDetails": {
        "oldValue": "[AccessControlException]",
        "newValue": "[AccessControlException, FileNotFoundException]"
      }
    },
    "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
      "commitDate": "08/12/14 11:52 AM",
      "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n-      FSPermissionChecker pc) throws AccessControlException {\n-    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n+  private static void checkXAttrChangeAccess(\n+      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc)\n+      throws AccessControlException {\n+    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n+        .USER) {\n       final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          dir.checkOwner(pc, iip);\n+          fsd.checkOwner(pc, iip);\n         }\n       } else {\n-        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n+        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkXAttrChangeAccess(\n      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc)\n      throws AccessControlException {\n    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n        .USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          fsd.checkOwner(pc, iip);\n        }\n      } else {\n        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
            "oldMethodName": "checkXAttrChangeAccess",
            "newMethodName": "checkXAttrChangeAccess"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n-      FSPermissionChecker pc) throws AccessControlException {\n-    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n+  private static void checkXAttrChangeAccess(\n+      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc)\n+      throws AccessControlException {\n+    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n+        .USER) {\n       final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          dir.checkOwner(pc, iip);\n+          fsd.checkOwner(pc, iip);\n         }\n       } else {\n-        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n+        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkXAttrChangeAccess(\n      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc)\n      throws AccessControlException {\n    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n        .USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          fsd.checkOwner(pc, iip);\n        }\n      } else {\n        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[private, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n-      FSPermissionChecker pc) throws AccessControlException {\n-    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n+  private static void checkXAttrChangeAccess(\n+      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc)\n+      throws AccessControlException {\n+    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n+        .USER) {\n       final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          dir.checkOwner(pc, iip);\n+          fsd.checkOwner(pc, iip);\n         }\n       } else {\n-        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n+        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkXAttrChangeAccess(\n      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc)\n      throws AccessControlException {\n    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n        .USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          fsd.checkOwner(pc, iip);\n        }\n      } else {\n        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7486. Consolidate XAttr-related implementation into a single class. Contributed by Haohui Mai.\n",
          "commitDate": "08/12/14 11:52 AM",
          "commitName": "6c5bbd7a42d1e8b4416fd8870fd60c67867b35c9",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/12/14 11:08 AM",
          "commitNameOld": "57cb43be50c81daad8da34d33a45f396d9c1c35b",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 0.03,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,18 @@\n-  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n-      FSPermissionChecker pc) throws AccessControlException {\n-    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n+  private static void checkXAttrChangeAccess(\n+      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc)\n+      throws AccessControlException {\n+    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n+        .USER) {\n       final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          dir.checkOwner(pc, iip);\n+          fsd.checkOwner(pc, iip);\n         }\n       } else {\n-        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n+        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static void checkXAttrChangeAccess(\n      FSDirectory fsd, INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc)\n      throws AccessControlException {\n    if (fsd.isPermissionEnabled() \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace\n        .USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          fsd.checkOwner(pc, iip);\n        }\n      } else {\n        fsd.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirXAttrOp.java",
          "extendedDetails": {
            "oldValue": "[iip-INodesInPath, xAttr-XAttr, pc-FSPermissionChecker]",
            "newValue": "[fsd-FSDirectory, iip-INodesInPath, xAttr-XAttr, pc-FSPermissionChecker]"
          }
        }
      ]
    },
    "475c6b4978045d55d1ebcea69cc9a2f24355aca2": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
      "commitDate": "05/12/14 2:17 PM",
      "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private void checkXAttrChangeAccess(String src, XAttr xAttr,\n-      FSPermissionChecker pc) throws UnresolvedLinkException,\n-      AccessControlException {\n+  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc) throws AccessControlException {\n     if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n-      final INode inode \u003d dir.getINode(src);\n+      final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          checkOwner(pc, src);\n+          dir.checkOwner(pc, iip);\n         }\n       } else {\n-        checkPathAccess(pc, src, FsAction.WRITE);\n+        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc) throws AccessControlException {\n    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          dir.checkOwner(pc, iip);\n        }\n      } else {\n        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[src-String, xAttr-XAttr, pc-FSPermissionChecker]",
            "newValue": "[iip-INodesInPath, xAttr-XAttr, pc-FSPermissionChecker]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private void checkXAttrChangeAccess(String src, XAttr xAttr,\n-      FSPermissionChecker pc) throws UnresolvedLinkException,\n-      AccessControlException {\n+  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc) throws AccessControlException {\n     if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n-      final INode inode \u003d dir.getINode(src);\n+      final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          checkOwner(pc, src);\n+          dir.checkOwner(pc, iip);\n         }\n       } else {\n-        checkPathAccess(pc, src, FsAction.WRITE);\n+        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc) throws AccessControlException {\n    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          dir.checkOwner(pc, iip);\n        }\n      } else {\n        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[UnresolvedLinkException, AccessControlException]",
            "newValue": "[AccessControlException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7474. Avoid resolving path in FSPermissionChecker. Contributed by Jing Zhao.\n",
          "commitDate": "05/12/14 2:17 PM",
          "commitName": "475c6b4978045d55d1ebcea69cc9a2f24355aca2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "05/12/14 10:55 AM",
          "commitNameOld": "6a5596e3b4443462fc86f800b3c2eb839d44c3bd",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.14,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,15 @@\n-  private void checkXAttrChangeAccess(String src, XAttr xAttr,\n-      FSPermissionChecker pc) throws UnresolvedLinkException,\n-      AccessControlException {\n+  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n+      FSPermissionChecker pc) throws AccessControlException {\n     if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n-      final INode inode \u003d dir.getINode(src);\n+      final INode inode \u003d iip.getLastINode();\n       if (inode !\u003d null \u0026\u0026\n           inode.isDirectory() \u0026\u0026\n           inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n-          checkOwner(pc, src);\n+          dir.checkOwner(pc, iip);\n         }\n       } else {\n-        checkPathAccess(pc, src, FsAction.WRITE);\n+        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void checkXAttrChangeAccess(INodesInPath iip, XAttr xAttr,\n      FSPermissionChecker pc) throws AccessControlException {\n    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n      final INode inode \u003d iip.getLastINode();\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          dir.checkOwner(pc, iip);\n        }\n      } else {\n        dir.checkPathAccess(pc, iip, FsAction.WRITE);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "ea4e2e843ecadd8019ea35413f4a34b97a424923": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6705. Create an XAttr that disallows the HDFS admin from accessing a file. (clamb via wang)\n",
      "commitDate": "17/09/14 11:23 AM",
      "commitName": "ea4e2e843ecadd8019ea35413f4a34b97a424923",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "16/09/14 4:41 PM",
      "commitNameOld": "33ce887c20ec806ace02063e42599c3db76b536a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 0.78,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,16 @@\n   private void checkXAttrChangeAccess(String src, XAttr xAttr,\n       FSPermissionChecker pc) throws UnresolvedLinkException,\n       AccessControlException {\n     if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n       final INode inode \u003d dir.getINode(src);\n-      if (inode.isDirectory() \u0026\u0026 inode.getFsPermission().getStickyBit()) {\n+      if (inode !\u003d null \u0026\u0026\n+          inode.isDirectory() \u0026\u0026\n+          inode.getFsPermission().getStickyBit()) {\n         if (!pc.isSuperUser()) {\n           checkOwner(pc, src);\n         }\n       } else {\n         checkPathAccess(pc, src, FsAction.WRITE);\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkXAttrChangeAccess(String src, XAttr xAttr,\n      FSPermissionChecker pc) throws UnresolvedLinkException,\n      AccessControlException {\n    if (isPermissionEnabled \u0026\u0026 xAttr.getNameSpace() \u003d\u003d XAttr.NameSpace.USER) {\n      final INode inode \u003d dir.getINode(src);\n      if (inode !\u003d null \u0026\u0026\n          inode.isDirectory() \u0026\u0026\n          inode.getFsPermission().getStickyBit()) {\n        if (!pc.isSuperUser()) {\n          checkOwner(pc, src);\n        }\n      } else {\n        checkPathAccess(pc, src, FsAction.WRITE);\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    }
  }
}