{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "updateMultiNodeSortingPolicy",
  "functionId": "updateMultiNodeSortingPolicy___rmApp-RMApp",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 182,
  "functionEndLine": 199,
  "numCommitsSeen": 93,
  "timeTaken": 2013,
  "changeHistory": [
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181"
  ],
  "changeHistoryShort": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9c3fc3ef2865164aa5f121793ac914cfeb21a181": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7494. Add muti-node lookup mechanism and pluggable nodes sorting policies to optimize placement decision. Contributed by Sunil Govindan.\n",
      "commitDate": "21/08/18 7:42 AM",
      "commitName": "9c3fc3ef2865164aa5f121793ac914cfeb21a181",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,18 @@\n+  private void updateMultiNodeSortingPolicy(RMApp rmApp) {\n+    if (rmApp \u003d\u003d null) {\n+      return;\n+    }\n+\n+    String queueName \u003d null;\n+    if (scheduler instanceof CapacityScheduler) {\n+      queueName \u003d getCSLeafQueue().getMultiNodeSortingPolicyName();\n+    }\n+\n+    if (!appSchedulingInfo.getApplicationSchedulingEnvs().containsKey(\n+        ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS)\n+        \u0026\u0026 queueName !\u003d null) {\n+      appSchedulingInfo.getApplicationSchedulingEnvs().put(\n+          ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS,\n+          queueName);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateMultiNodeSortingPolicy(RMApp rmApp) {\n    if (rmApp \u003d\u003d null) {\n      return;\n    }\n\n    String queueName \u003d null;\n    if (scheduler instanceof CapacityScheduler) {\n      queueName \u003d getCSLeafQueue().getMultiNodeSortingPolicyName();\n    }\n\n    if (!appSchedulingInfo.getApplicationSchedulingEnvs().containsKey(\n        ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS)\n        \u0026\u0026 queueName !\u003d null) {\n      appSchedulingInfo.getApplicationSchedulingEnvs().put(\n          ApplicationSchedulingConfig.ENV_MULTI_NODE_SORTING_POLICY_CLASS,\n          queueName);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java"
    }
  }
}