{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JournalNode.java",
  "functionName": "getJournalsStatus",
  "functionId": "getJournalsStatus",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
  "functionStartLine": 357,
  "functionEndLine": 398,
  "numCommitsSeen": 32,
  "timeTaken": 2872,
  "changeHistory": [
    "dd50f53997239bf9078481cf46592ca3e41520b5",
    "2e43c28e01fe006210e71aab179527669f6412ed",
    "441378e7e4609d89b7181dacc8ba92b253a962df",
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
    "02b19e0738d9df1e4d38280c5575e1d3ba49f8cb"
  ],
  "changeHistoryShort": {
    "dd50f53997239bf9078481cf46592ca3e41520b5": "Ybodychange",
    "2e43c28e01fe006210e71aab179527669f6412ed": "Ybodychange",
    "441378e7e4609d89b7181dacc8ba92b253a962df": "Ybodychange",
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a": "Ybodychange",
    "02b19e0738d9df1e4d38280c5575e1d3ba49f8cb": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd50f53997239bf9078481cf46592ca3e41520b5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13062. Provide support for JN to use separate journal disk per namespace. Contributed by Bharat Viswanadham.\n",
      "commitDate": "01/02/18 12:28 PM",
      "commitName": "dd50f53997239bf9078481cf46592ca3e41520b5",
      "commitAuthor": "Hanisha Koneru",
      "commitDateOld": "13/10/17 2:22 PM",
      "commitNameOld": "8dd1eeb94fef59feaf19182dd8f1fcf1389c7f34",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 110.96,
      "commitsBetweenForRepo": 747,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,42 @@\n   public String getJournalsStatus() {\n     // jid:{Formatted:True/False}\n     Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n         new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n     synchronized (this) {\n       for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n         Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n         jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n         status.put(entry.getKey(), jMap);\n       }\n     }\n     \n     // It is possible that some journals have been formatted before, while the \n     // corresponding journals are not in journalsById yet (because of restarting\n     // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n     // there is a directory for it. We can also call analyzeStorage method for\n     // these directories if necessary.\n     // Also note that we do not need to check localDir here since\n     // validateAndCreateJournalDir has been called before we register the\n     // MXBean.\n-    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n-      @Override\n-      public boolean accept(File file) {\n-        return file.isDirectory();\n-      }\n-    });\n+    for (File jDir : localDir) {\n+      File[] journalDirs \u003d jDir.listFiles(new FileFilter() {\n+        @Override\n+        public boolean accept(File file) {\n+          return file.isDirectory();\n+        }\n+      });\n \n-    if (journalDirs !\u003d null) {\n-      for (File journalDir : journalDirs) {\n-        String jid \u003d journalDir.getName();\n-        if (!status.containsKey(jid)) {\n-          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n-          jMap.put(\"Formatted\", \"true\");\n-          status.put(jid, jMap);\n+      if (journalDirs !\u003d null) {\n+        for (File journalDir : journalDirs) {\n+          String jid \u003d journalDir.getName();\n+          if (!status.containsKey(jid)) {\n+            Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+            jMap.put(\"Formatted\", \"true\");\n+            status.put(jid, jMap);\n+          }\n         }\n       }\n     }\n \n     return JSON.toString(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJournalsStatus() {\n    // jid:{Formatted:True/False}\n    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n    synchronized (this) {\n      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n        status.put(entry.getKey(), jMap);\n      }\n    }\n    \n    // It is possible that some journals have been formatted before, while the \n    // corresponding journals are not in journalsById yet (because of restarting\n    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n    // there is a directory for it. We can also call analyzeStorage method for\n    // these directories if necessary.\n    // Also note that we do not need to check localDir here since\n    // validateAndCreateJournalDir has been called before we register the\n    // MXBean.\n    for (File jDir : localDir) {\n      File[] journalDirs \u003d jDir.listFiles(new FileFilter() {\n        @Override\n        public boolean accept(File file) {\n          return file.isDirectory();\n        }\n      });\n\n      if (journalDirs !\u003d null) {\n        for (File journalDir : journalDirs) {\n          String jid \u003d journalDir.getName();\n          if (!status.containsKey(jid)) {\n            Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n            jMap.put(\"Formatted\", \"true\");\n            status.put(jid, jMap);\n          }\n        }\n      }\n    }\n\n    return JSON.toString(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "2e43c28e01fe006210e71aab179527669f6412ed": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\n",
      "commitDate": "15/08/17 1:48 AM",
      "commitName": "2e43c28e01fe006210e71aab179527669f6412ed",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "29/06/17 1:54 PM",
      "commitNameOld": "441378e7e4609d89b7181dacc8ba92b253a962df",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 46.5,
      "commitsBetweenForRepo": 302,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n   public String getJournalsStatus() {\n     // jid:{Formatted:True/False}\n     Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n         new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n     synchronized (this) {\n       for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n         Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n         jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n         status.put(entry.getKey(), jMap);\n       }\n     }\n     \n     // It is possible that some journals have been formatted before, while the \n     // corresponding journals are not in journalsById yet (because of restarting\n     // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n     // there is a directory for it. We can also call analyzeStorage method for\n     // these directories if necessary.\n     // Also note that we do not need to check localDir here since\n     // validateAndCreateJournalDir has been called before we register the\n     // MXBean.\n     File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n       @Override\n       public boolean accept(File file) {\n         return file.isDirectory();\n       }\n     });\n-    for (File journalDir : journalDirs) {\n-      String jid \u003d journalDir.getName();\n-      if (!status.containsKey(jid)) {\n-        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n-        jMap.put(\"Formatted\", \"true\");\n-        status.put(jid, jMap);\n+\n+    if (journalDirs !\u003d null) {\n+      for (File journalDir : journalDirs) {\n+        String jid \u003d journalDir.getName();\n+        if (!status.containsKey(jid)) {\n+          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+          jMap.put(\"Formatted\", \"true\");\n+          status.put(jid, jMap);\n+        }\n       }\n     }\n+\n     return JSON.toString(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJournalsStatus() {\n    // jid:{Formatted:True/False}\n    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n    synchronized (this) {\n      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n        status.put(entry.getKey(), jMap);\n      }\n    }\n    \n    // It is possible that some journals have been formatted before, while the \n    // corresponding journals are not in journalsById yet (because of restarting\n    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n    // there is a directory for it. We can also call analyzeStorage method for\n    // these directories if necessary.\n    // Also note that we do not need to check localDir here since\n    // validateAndCreateJournalDir has been called before we register the\n    // MXBean.\n    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File file) {\n        return file.isDirectory();\n      }\n    });\n\n    if (journalDirs !\u003d null) {\n      for (File journalDir : journalDirs) {\n        String jid \u003d journalDir.getName();\n        if (!status.containsKey(jid)) {\n          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n          jMap.put(\"Formatted\", \"true\");\n          status.put(jid, jMap);\n        }\n      }\n    }\n\n    return JSON.toString(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "441378e7e4609d89b7181dacc8ba92b253a962df": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\"\n\nThis reverts commit 89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a.\n\n Conflicts:\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DFSAdmin.java\n",
      "commitDate": "29/06/17 1:54 PM",
      "commitName": "441378e7e4609d89b7181dacc8ba92b253a962df",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "22/05/17 11:39 AM",
      "commitNameOld": "9cab42cc797986081fef184748044f1790a4f039",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 38.09,
      "commitsBetweenForRepo": 194,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,36 @@\n   public String getJournalsStatus() {\n     // jid:{Formatted:True/False}\n     Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n         new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n     synchronized (this) {\n       for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n         Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n         jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n         status.put(entry.getKey(), jMap);\n       }\n     }\n     \n     // It is possible that some journals have been formatted before, while the \n     // corresponding journals are not in journalsById yet (because of restarting\n     // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n     // there is a directory for it. We can also call analyzeStorage method for\n     // these directories if necessary.\n     // Also note that we do not need to check localDir here since\n     // validateAndCreateJournalDir has been called before we register the\n     // MXBean.\n     File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n       @Override\n       public boolean accept(File file) {\n         return file.isDirectory();\n       }\n     });\n-\n-    if (journalDirs !\u003d null) {\n-      for (File journalDir : journalDirs) {\n-        String jid \u003d journalDir.getName();\n-        if (!status.containsKey(jid)) {\n-          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n-          jMap.put(\"Formatted\", \"true\");\n-          status.put(jid, jMap);\n-        }\n+    for (File journalDir : journalDirs) {\n+      String jid \u003d journalDir.getName();\n+      if (!status.containsKey(jid)) {\n+        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+        jMap.put(\"Formatted\", \"true\");\n+        status.put(jid, jMap);\n       }\n     }\n-\n     return JSON.toString(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJournalsStatus() {\n    // jid:{Formatted:True/False}\n    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n    synchronized (this) {\n      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n        status.put(entry.getKey(), jMap);\n      }\n    }\n    \n    // It is possible that some journals have been formatted before, while the \n    // corresponding journals are not in journalsById yet (because of restarting\n    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n    // there is a directory for it. We can also call analyzeStorage method for\n    // these directories if necessary.\n    // Also note that we do not need to check localDir here since\n    // validateAndCreateJournalDir has been called before we register the\n    // MXBean.\n    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File file) {\n        return file.isDirectory();\n      }\n    });\n    for (File journalDir : journalDirs) {\n      String jid \u003d journalDir.getName();\n      if (!status.containsKey(jid)) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", \"true\");\n        status.put(jid, jMap);\n      }\n    }\n    return JSON.toString(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11696. Fix warnings from Spotbugs in hadoop-hdfs. Contributed by Yiqun Lin.\n",
      "commitDate": "16/05/17 9:41 AM",
      "commitName": "89a8edc0149e3f31a5ade9a0927c4b6332cf6b1a",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "22/02/17 4:33 PM",
      "commitNameOld": "13d4bcfe3535a2df79c2a56e7578716d15497ff4",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 82.67,
      "commitsBetweenForRepo": 476,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,40 @@\n   public String getJournalsStatus() {\n     // jid:{Formatted:True/False}\n     Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n         new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n     synchronized (this) {\n       for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n         Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n         jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n         status.put(entry.getKey(), jMap);\n       }\n     }\n     \n     // It is possible that some journals have been formatted before, while the \n     // corresponding journals are not in journalsById yet (because of restarting\n     // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n     // there is a directory for it. We can also call analyzeStorage method for\n     // these directories if necessary.\n     // Also note that we do not need to check localDir here since\n     // validateAndCreateJournalDir has been called before we register the\n     // MXBean.\n     File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n       @Override\n       public boolean accept(File file) {\n         return file.isDirectory();\n       }\n     });\n-    for (File journalDir : journalDirs) {\n-      String jid \u003d journalDir.getName();\n-      if (!status.containsKey(jid)) {\n-        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n-        jMap.put(\"Formatted\", \"true\");\n-        status.put(jid, jMap);\n+\n+    if (journalDirs !\u003d null) {\n+      for (File journalDir : journalDirs) {\n+        String jid \u003d journalDir.getName();\n+        if (!status.containsKey(jid)) {\n+          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+          jMap.put(\"Formatted\", \"true\");\n+          status.put(jid, jMap);\n+        }\n       }\n     }\n+\n     return JSON.toString(status);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJournalsStatus() {\n    // jid:{Formatted:True/False}\n    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n    synchronized (this) {\n      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n        status.put(entry.getKey(), jMap);\n      }\n    }\n    \n    // It is possible that some journals have been formatted before, while the \n    // corresponding journals are not in journalsById yet (because of restarting\n    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n    // there is a directory for it. We can also call analyzeStorage method for\n    // these directories if necessary.\n    // Also note that we do not need to check localDir here since\n    // validateAndCreateJournalDir has been called before we register the\n    // MXBean.\n    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File file) {\n        return file.isDirectory();\n      }\n    });\n\n    if (journalDirs !\u003d null) {\n      for (File journalDir : journalDirs) {\n        String jid \u003d journalDir.getName();\n        if (!status.containsKey(jid)) {\n          Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n          jMap.put(\"Formatted\", \"true\");\n          status.put(jid, jMap);\n        }\n      }\n    }\n\n    return JSON.toString(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java",
      "extendedDetails": {}
    },
    "02b19e0738d9df1e4d38280c5575e1d3ba49f8cb": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5076. Add MXBean methods to query NN\u0027s transaction information and JournalNode\u0027s journal status. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514422 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 11:22 AM",
      "commitName": "02b19e0738d9df1e4d38280c5575e1d3ba49f8cb",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,36 @@\n+  public String getJournalsStatus() {\n+    // jid:{Formatted:True/False}\n+    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n+        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n+    synchronized (this) {\n+      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n+        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n+        status.put(entry.getKey(), jMap);\n+      }\n+    }\n+    \n+    // It is possible that some journals have been formatted before, while the \n+    // corresponding journals are not in journalsById yet (because of restarting\n+    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n+    // there is a directory for it. We can also call analyzeStorage method for\n+    // these directories if necessary.\n+    // Also note that we do not need to check localDir here since\n+    // validateAndCreateJournalDir has been called before we register the\n+    // MXBean.\n+    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n+      @Override\n+      public boolean accept(File file) {\n+        return file.isDirectory();\n+      }\n+    });\n+    for (File journalDir : journalDirs) {\n+      String jid \u003d journalDir.getName();\n+      if (!status.containsKey(jid)) {\n+        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n+        jMap.put(\"Formatted\", \"true\");\n+        status.put(jid, jMap);\n+      }\n+    }\n+    return JSON.toString(status);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getJournalsStatus() {\n    // jid:{Formatted:True/False}\n    Map\u003cString, Map\u003cString, String\u003e\u003e status \u003d \n        new HashMap\u003cString, Map\u003cString, String\u003e\u003e();\n    synchronized (this) {\n      for (Map.Entry\u003cString, Journal\u003e entry : journalsById.entrySet()) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", Boolean.toString(entry.getValue().isFormatted()));\n        status.put(entry.getKey(), jMap);\n      }\n    }\n    \n    // It is possible that some journals have been formatted before, while the \n    // corresponding journals are not in journalsById yet (because of restarting\n    // JN, e.g.). For simplicity, let\u0027s just assume a journal is formatted if\n    // there is a directory for it. We can also call analyzeStorage method for\n    // these directories if necessary.\n    // Also note that we do not need to check localDir here since\n    // validateAndCreateJournalDir has been called before we register the\n    // MXBean.\n    File[] journalDirs \u003d localDir.listFiles(new FileFilter() {\n      @Override\n      public boolean accept(File file) {\n        return file.isDirectory();\n      }\n    });\n    for (File journalDir : journalDirs) {\n      String jid \u003d journalDir.getName();\n      if (!status.containsKey(jid)) {\n        Map\u003cString, String\u003e jMap \u003d new HashMap\u003cString, String\u003e();\n        jMap.put(\"Formatted\", \"true\");\n        status.put(jid, jMap);\n      }\n    }\n    return JSON.toString(status);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/JournalNode.java"
    }
  }
}