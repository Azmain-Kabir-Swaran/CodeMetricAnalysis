{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemRMStateStore.java",
  "functionName": "checkAndResumeUpdateOperation",
  "functionId": "checkAndResumeUpdateOperation___path-Path",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
  "functionStartLine": 338,
  "functionEndLine": 358,
  "numCommitsSeen": 57,
  "timeTaken": 2057,
  "changeHistory": [
    "01a1621930df17a745dd37892996c68fca3447d1",
    "ce56616037fc160ba875b496bdc369411bb873be"
  ],
  "changeHistoryShort": {
    "01a1621930df17a745dd37892996c68fca3447d1": "Ybodychange",
    "ce56616037fc160ba875b496bdc369411bb873be": "Yintroduced"
  },
  "changeHistoryDetails": {
    "01a1621930df17a745dd37892996c68fca3447d1": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2820. Retry in FileSystemRMStateStore when FS\u0027s operations fail due to IOException. Contributed by Zhihai Xu.\n",
      "commitDate": "27/02/15 7:56 AM",
      "commitName": "01a1621930df17a745dd37892996c68fca3447d1",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "08/01/15 9:47 AM",
      "commitNameOld": "dc2eaa26b20cfbbcdd5784bb8761d08a42f29605",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 49.92,
      "commitsBetweenForRepo": 453,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,21 @@\n   private void checkAndResumeUpdateOperation(Path path) throws Exception {\n     // Before loading the state information, check whether .new file exists.\n     // If it does, the prior updateFile is failed on half way. We need to\n     // complete replacing the old file first.\n     FileStatus[] newChildNodes \u003d\n-        fs.listStatus(path, new PathFilter() {\n+        listStatusWithRetries(path, new PathFilter() {\n       @Override\n       public boolean accept(Path path) {\n         return path.getName().endsWith(\".new\");\n       }\n     });\n     for(FileStatus newChildNodeStatus : newChildNodes) {\n       assert newChildNodeStatus.isFile();\n       String newChildNodeName \u003d newChildNodeStatus.getPath().getName();\n       String childNodeName \u003d newChildNodeName.substring(\n           0, newChildNodeName.length() - \".new\".length());\n       Path childNodePath \u003d\n           new Path(newChildNodeStatus.getPath().getParent(), childNodeName);\n       replaceFile(newChildNodeStatus.getPath(), childNodePath);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkAndResumeUpdateOperation(Path path) throws Exception {\n    // Before loading the state information, check whether .new file exists.\n    // If it does, the prior updateFile is failed on half way. We need to\n    // complete replacing the old file first.\n    FileStatus[] newChildNodes \u003d\n        listStatusWithRetries(path, new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(\".new\");\n      }\n    });\n    for(FileStatus newChildNodeStatus : newChildNodes) {\n      assert newChildNodeStatus.isFile();\n      String newChildNodeName \u003d newChildNodeStatus.getPath().getName();\n      String childNodeName \u003d newChildNodeName.substring(\n          0, newChildNodeName.length() - \".new\".length());\n      Path childNodePath \u003d\n          new Path(newChildNodeStatus.getPath().getParent(), childNodeName);\n      replaceFile(newChildNodeStatus.getPath(), childNodePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "ce56616037fc160ba875b496bdc369411bb873be": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1776. Fixed DelegationToken renewal to survive RM failover. Contributed by Zhijie Shen\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1580154 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/03/14 9:12 PM",
      "commitName": "ce56616037fc160ba875b496bdc369411bb873be",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,21 @@\n+  private void checkAndResumeUpdateOperation(Path path) throws Exception {\n+    // Before loading the state information, check whether .new file exists.\n+    // If it does, the prior updateFile is failed on half way. We need to\n+    // complete replacing the old file first.\n+    FileStatus[] newChildNodes \u003d\n+        fs.listStatus(path, new PathFilter() {\n+      @Override\n+      public boolean accept(Path path) {\n+        return path.getName().endsWith(\".new\");\n+      }\n+    });\n+    for(FileStatus newChildNodeStatus : newChildNodes) {\n+      assert newChildNodeStatus.isFile();\n+      String newChildNodeName \u003d newChildNodeStatus.getPath().getName();\n+      String childNodeName \u003d newChildNodeName.substring(\n+          0, newChildNodeName.length() - \".new\".length());\n+      Path childNodePath \u003d\n+          new Path(newChildNodeStatus.getPath().getParent(), childNodeName);\n+      replaceFile(newChildNodeStatus.getPath(), childNodePath);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void checkAndResumeUpdateOperation(Path path) throws Exception {\n    // Before loading the state information, check whether .new file exists.\n    // If it does, the prior updateFile is failed on half way. We need to\n    // complete replacing the old file first.\n    FileStatus[] newChildNodes \u003d\n        fs.listStatus(path, new PathFilter() {\n      @Override\n      public boolean accept(Path path) {\n        return path.getName().endsWith(\".new\");\n      }\n    });\n    for(FileStatus newChildNodeStatus : newChildNodes) {\n      assert newChildNodeStatus.isFile();\n      String newChildNodeName \u003d newChildNodeStatus.getPath().getName();\n      String childNodeName \u003d newChildNodeName.substring(\n          0, newChildNodeName.length() - \".new\".length());\n      Path childNodePath \u003d\n          new Path(newChildNodeStatus.getPath().getParent(), childNodeName);\n      replaceFile(newChildNodeStatus.getPath(), childNodePath);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java"
    }
  }
}