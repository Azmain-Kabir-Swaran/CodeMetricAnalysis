{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SequenceFile.java",
  "functionName": "initialize",
  "functionId": "initialize___filename-Path__in-FSDataInputStream__start-long__length-long__conf-Configuration__tempReader-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
  "functionStartLine": 1906,
  "functionEndLine": 1930,
  "numCommitsSeen": 46,
  "timeTaken": 3516,
  "changeHistory": [
    "ccaf036662e22da14583942054898c99fa51dae5",
    "8332126c52b6e13008f35bdc9d40319611b78d25",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf"
  ],
  "changeHistoryShort": {
    "ccaf036662e22da14583942054898c99fa51dae5": "Ybodychange",
    "8332126c52b6e13008f35bdc9d40319611b78d25": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ccaf036662e22da14583942054898c99fa51dae5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14539. Move commons logging APIs over to slf4j in hadoop-common. Contributed by Wenxin He.\n",
      "commitDate": "17/07/17 9:32 PM",
      "commitName": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "30/05/17 10:07 AM",
      "commitNameOld": "62857be2110aaded84a93fc9891742a1271b2b85",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 48.48,
      "commitsBetweenForRepo": 228,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n     private void initialize(Path filename, FSDataInputStream in,\n                             long start, long length, Configuration conf,\n                             boolean tempReader) throws IOException {\n       if (in \u003d\u003d null) {\n         throw new IllegalArgumentException(\"in \u003d\u003d null\");\n       }\n       this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n       this.in \u003d in;\n       this.conf \u003d conf;\n       boolean succeeded \u003d false;\n       try {\n         seek(start);\n         this.end \u003d this.in.getPos() + length;\n         // if it wrapped around, use the max\n         if (end \u003c length) {\n           end \u003d Long.MAX_VALUE;\n         }\n         init(tempReader);\n         succeeded \u003d true;\n       } finally {\n         if (!succeeded) {\n-          IOUtils.cleanup(LOG, this.in);\n+          IOUtils.cleanupWithLogger(LOG, this.in);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanupWithLogger(LOG, this.in);\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {}
    },
    "8332126c52b6e13008f35bdc9d40319611b78d25": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7568. SequenceFile should not print into stdout. Contributed by Plamen Jeliazkov.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1169925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/09/11 2:04 PM",
      "commitName": "8332126c52b6e13008f35bdc9d40319611b78d25",
      "commitAuthor": "Konstantin Shvachko",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 18.87,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n     private void initialize(Path filename, FSDataInputStream in,\n                             long start, long length, Configuration conf,\n                             boolean tempReader) throws IOException {\n       if (in \u003d\u003d null) {\n         throw new IllegalArgumentException(\"in \u003d\u003d null\");\n       }\n       this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n       this.in \u003d in;\n       this.conf \u003d conf;\n       boolean succeeded \u003d false;\n       try {\n         seek(start);\n         this.end \u003d this.in.getPos() + length;\n-        System.out.println(\"Setting end to \" + end);\n         // if it wrapped around, use the max\n         if (end \u003c length) {\n           end \u003d Long.MAX_VALUE;\n         }\n         init(tempReader);\n         succeeded \u003d true;\n       } finally {\n         if (!succeeded) {\n           IOUtils.cleanup(LOG, this.in);\n         }\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanup(LOG, this.in);\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        System.out.println(\"Setting end to \" + end);\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanup(LOG, this.in);\n        }\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        System.out.println(\"Setting end to \" + end);\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanup(LOG, this.in);\n        }\n      }\n    }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        System.out.println(\"Setting end to \" + end);\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanup(LOG, this.in);\n        }\n      }\n    }",
      "path": "common/src/java/org/apache/hadoop/io/SequenceFile.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/SequenceFile.java",
        "newPath": "common/src/java/org/apache/hadoop/io/SequenceFile.java"
      }
    },
    "6333b3e485dc76a7505bf74e041e274e0a8e6faf": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6856. Simplify constructors for SequenceFile, and MapFile. (omalley)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1002937 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/10 7:59 PM",
      "commitName": "6333b3e485dc76a7505bf74e041e274e0a8e6faf",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,26 @@\n+    private void initialize(Path filename, FSDataInputStream in,\n+                            long start, long length, Configuration conf,\n+                            boolean tempReader) throws IOException {\n+      if (in \u003d\u003d null) {\n+        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n+      }\n+      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n+      this.in \u003d in;\n+      this.conf \u003d conf;\n+      boolean succeeded \u003d false;\n+      try {\n+        seek(start);\n+        this.end \u003d this.in.getPos() + length;\n+        System.out.println(\"Setting end to \" + end);\n+        // if it wrapped around, use the max\n+        if (end \u003c length) {\n+          end \u003d Long.MAX_VALUE;\n+        }\n+        init(tempReader);\n+        succeeded \u003d true;\n+      } finally {\n+        if (!succeeded) {\n+          IOUtils.cleanup(LOG, this.in);\n+        }\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    private void initialize(Path filename, FSDataInputStream in,\n                            long start, long length, Configuration conf,\n                            boolean tempReader) throws IOException {\n      if (in \u003d\u003d null) {\n        throw new IllegalArgumentException(\"in \u003d\u003d null\");\n      }\n      this.filename \u003d filename \u003d\u003d null ? \"\u003cunknown\u003e\" : filename.toString();\n      this.in \u003d in;\n      this.conf \u003d conf;\n      boolean succeeded \u003d false;\n      try {\n        seek(start);\n        this.end \u003d this.in.getPos() + length;\n        System.out.println(\"Setting end to \" + end);\n        // if it wrapped around, use the max\n        if (end \u003c length) {\n          end \u003d Long.MAX_VALUE;\n        }\n        init(tempReader);\n        succeeded \u003d true;\n      } finally {\n        if (!succeeded) {\n          IOUtils.cleanup(LOG, this.in);\n        }\n      }\n    }",
      "path": "src/java/org/apache/hadoop/io/SequenceFile.java"
    }
  }
}