{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsDatasetImpl.java",
  "functionName": "invalidate",
  "functionId": "invalidate___bpid-String__block-ReplicaInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
  "functionStartLine": 2241,
  "functionEndLine": 2252,
  "numCommitsSeen": 245,
  "timeTaken": 6270,
  "changeHistory": [
    "a48301791e9564363bc2abad4e89e344b0d7a5ff",
    "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77",
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe"
  ],
  "changeHistoryShort": {
    "a48301791e9564363bc2abad4e89e344b0d7a5ff": "Ybodychange",
    "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77": "Ymultichange(Yparameterchange,Ybodychange)",
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a48301791e9564363bc2abad4e89e344b0d7a5ff": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9445. Datanode may deadlock while handling a bad volume. Contributed by Walter Su.\n",
      "commitDate": "11/12/15 6:44 AM",
      "commitName": "a48301791e9564363bc2abad4e89e344b0d7a5ff",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "10/12/15 12:57 PM",
      "commitNameOld": "7f393a6f61f5a34a1de11481ad321c6a941d5d27",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,12 @@\n   public void invalidate(String bpid, ReplicaInfo block) {\n     // If a DFSClient has the replica in its cache of short-circuit file\n     // descriptors (and the client is using ShortCircuitShm), invalidate it.\n-    // The short-circuit registry is null in the unit tests, because the\n-    // datanode is mock object.\n-    if (datanode.getShortCircuitRegistry() !\u003d null) {\n-      datanode.getShortCircuitRegistry().processBlockInvalidation(\n-          new ExtendedBlockId(block.getBlockId(), bpid));\n+    datanode.getShortCircuitRegistry().processBlockInvalidation(\n+        new ExtendedBlockId(block.getBlockId(), bpid));\n \n-      // If the block is cached, start uncaching it.\n-      cacheManager.uncacheBlock(bpid, block.getBlockId());\n-    }\n+    // If the block is cached, start uncaching it.\n+    cacheManager.uncacheBlock(bpid, block.getBlockId());\n \n     datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n         block.getStorageUuid());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void invalidate(String bpid, ReplicaInfo block) {\n    // If a DFSClient has the replica in its cache of short-circuit file\n    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n    datanode.getShortCircuitRegistry().processBlockInvalidation(\n        new ExtendedBlockId(block.getBlockId(), bpid));\n\n    // If the block is cached, start uncaching it.\n    cacheManager.uncacheBlock(bpid, block.getBlockId());\n\n    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n        block.getStorageUuid());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
      "extendedDetails": {}
    },
    "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6727. Refresh data volumes on DataNode based on configuration changes (Lei Xu via Colin Patrick McCabe)\n",
      "commitDate": "18/09/14 4:52 PM",
      "commitName": "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6727. Refresh data volumes on DataNode based on configuration changes (Lei Xu via Colin Patrick McCabe)\n",
          "commitDate": "18/09/14 4:52 PM",
          "commitName": "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "08/09/14 9:20 PM",
          "commitNameOld": "f949f6b54825dac61511a5761837e2fd14437239",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 117,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public void invalidate(String bpid, long blockId) {\n+  public void invalidate(String bpid, ReplicaInfo block) {\n     // If a DFSClient has the replica in its cache of short-circuit file\n     // descriptors (and the client is using ShortCircuitShm), invalidate it.\n     // The short-circuit registry is null in the unit tests, because the\n     // datanode is mock object.\n     if (datanode.getShortCircuitRegistry() !\u003d null) {\n       datanode.getShortCircuitRegistry().processBlockInvalidation(\n-          new ExtendedBlockId(blockId, bpid));\n+          new ExtendedBlockId(block.getBlockId(), bpid));\n \n       // If the block is cached, start uncaching it.\n-      cacheManager.uncacheBlock(bpid, blockId);\n+      cacheManager.uncacheBlock(bpid, block.getBlockId());\n     }\n+\n+    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n+        block.getStorageUuid());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void invalidate(String bpid, ReplicaInfo block) {\n    // If a DFSClient has the replica in its cache of short-circuit file\n    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n    // The short-circuit registry is null in the unit tests, because the\n    // datanode is mock object.\n    if (datanode.getShortCircuitRegistry() !\u003d null) {\n      datanode.getShortCircuitRegistry().processBlockInvalidation(\n          new ExtendedBlockId(block.getBlockId(), bpid));\n\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, block.getBlockId());\n    }\n\n    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n        block.getStorageUuid());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {
            "oldValue": "[bpid-String, blockId-long]",
            "newValue": "[bpid-String, block-ReplicaInfo]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6727. Refresh data volumes on DataNode based on configuration changes (Lei Xu via Colin Patrick McCabe)\n",
          "commitDate": "18/09/14 4:52 PM",
          "commitName": "fe38d2e9b5ac7e13f97cd2d3d2a984ab6bbaaf77",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "08/09/14 9:20 PM",
          "commitNameOld": "f949f6b54825dac61511a5761837e2fd14437239",
          "commitAuthorOld": "arp",
          "daysBetweenCommits": 9.81,
          "commitsBetweenForRepo": 117,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public void invalidate(String bpid, long blockId) {\n+  public void invalidate(String bpid, ReplicaInfo block) {\n     // If a DFSClient has the replica in its cache of short-circuit file\n     // descriptors (and the client is using ShortCircuitShm), invalidate it.\n     // The short-circuit registry is null in the unit tests, because the\n     // datanode is mock object.\n     if (datanode.getShortCircuitRegistry() !\u003d null) {\n       datanode.getShortCircuitRegistry().processBlockInvalidation(\n-          new ExtendedBlockId(blockId, bpid));\n+          new ExtendedBlockId(block.getBlockId(), bpid));\n \n       // If the block is cached, start uncaching it.\n-      cacheManager.uncacheBlock(bpid, blockId);\n+      cacheManager.uncacheBlock(bpid, block.getBlockId());\n     }\n+\n+    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n+        block.getStorageUuid());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void invalidate(String bpid, ReplicaInfo block) {\n    // If a DFSClient has the replica in its cache of short-circuit file\n    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n    // The short-circuit registry is null in the unit tests, because the\n    // datanode is mock object.\n    if (datanode.getShortCircuitRegistry() !\u003d null) {\n      datanode.getShortCircuitRegistry().processBlockInvalidation(\n          new ExtendedBlockId(block.getBlockId(), bpid));\n\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, block.getBlockId());\n    }\n\n    datanode.notifyNamenodeDeletedBlock(new ExtendedBlock(bpid, block),\n        block.getStorageUuid());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6774. Make FsDataset and DataStore support removing volumes. Contributed by Lei Xu.\n",
      "commitDate": "29/08/14 1:00 PM",
      "commitName": "7eab2a29a5706ce10912c12fa225ef6b27a82cbe",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,13 @@\n+  public void invalidate(String bpid, long blockId) {\n+    // If a DFSClient has the replica in its cache of short-circuit file\n+    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n+    // The short-circuit registry is null in the unit tests, because the\n+    // datanode is mock object.\n+    if (datanode.getShortCircuitRegistry() !\u003d null) {\n+      datanode.getShortCircuitRegistry().processBlockInvalidation(\n+          new ExtendedBlockId(blockId, bpid));\n+\n+      // If the block is cached, start uncaching it.\n+      cacheManager.uncacheBlock(bpid, blockId);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void invalidate(String bpid, long blockId) {\n    // If a DFSClient has the replica in its cache of short-circuit file\n    // descriptors (and the client is using ShortCircuitShm), invalidate it.\n    // The short-circuit registry is null in the unit tests, because the\n    // datanode is mock object.\n    if (datanode.getShortCircuitRegistry() !\u003d null) {\n      datanode.getShortCircuitRegistry().processBlockInvalidation(\n          new ExtendedBlockId(blockId, bpid));\n\n      // If the block is cached, start uncaching it.\n      cacheManager.uncacheBlock(bpid, blockId);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsDatasetImpl.java"
    }
  }
}