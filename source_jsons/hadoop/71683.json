{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecureableZone.java",
  "functionName": "getNXTRecord",
  "functionId": "getNXTRecord___queryRecord-Record__zone-Zone",
  "sourceFilePath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/SecureableZone.java",
  "functionStartLine": 121,
  "functionEndLine": 150,
  "numCommitsSeen": 2,
  "timeTaken": 1041,
  "changeHistory": [
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
    "f934f62fc71b4776e88f86d4254de0ea12147511"
  ],
  "changeHistoryShort": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": "Yfilerename",
    "f934f62fc71b4776e88f86d4254de0ea12147511": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2a9fa8448e2aac34c318260e425786a6c8ca2ae": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-15821. Move YARN Registry to Hadoop Registry.\n              Contributed by Íñigo Goiri\n",
      "commitDate": "19/10/18 4:46 PM",
      "commitName": "e2a9fa8448e2aac34c318260e425786a6c8ca2ae",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "19/10/18 1:57 PM",
      "commitNameOld": "00254d7b8c714ae2000d0934d260b23458033529",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.12,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public Record getNXTRecord(Record queryRecord, Zone zone) {\n    Collections.sort(records);\n\n    int index \u003d Collections.binarySearch(records, queryRecord,\n        new Comparator\u003cRecord\u003e() {\n          @Override public int compare(Record r1, Record r2) {\n            return r1.compareTo(r2);\n          }\n        });\n    if (index \u003e\u003d 0) {\n      return null;\n    }\n    index \u003d -index - 1;\n    if (index \u003e\u003d records.size()) {\n      index \u003d records.size() - 1;\n    }\n    Record base \u003d records.get(index);\n    SetResponse sr \u003d zone.findRecords(base.getName(), Type.ANY);\n    BitSet bitMap \u003d new BitSet();\n    bitMap.set(Type.NXT);\n    RRset[] rRsets \u003d sr.answers();\n    for (RRset rRset : rRsets) {\n      int typeCode \u003d rRset.getType();\n      if (typeCode \u003e 0 \u0026\u0026 typeCode \u003c 128) {\n        bitMap.set(typeCode);\n      }\n    }\n    return new NXTRecord(base.getName(), DClass.IN, zone.getSOA().getMinimum(),\n        queryRecord.getName(), bitMap);\n  }",
      "path": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/SecureableZone.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/SecureableZone.java",
        "newPath": "hadoop-common-project/hadoop-registry/src/main/java/org/apache/hadoop/registry/server/dns/SecureableZone.java"
      }
    },
    "f934f62fc71b4776e88f86d4254de0ea12147511": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5218. Initial core change for DNS for YARN. Contributed by Jonathan Maron\n",
      "commitDate": "06/11/17 1:28 PM",
      "commitName": "f934f62fc71b4776e88f86d4254de0ea12147511",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,30 @@\n+  public Record getNXTRecord(Record queryRecord, Zone zone) {\n+    Collections.sort(records);\n+\n+    int index \u003d Collections.binarySearch(records, queryRecord,\n+        new Comparator\u003cRecord\u003e() {\n+          @Override public int compare(Record r1, Record r2) {\n+            return r1.compareTo(r2);\n+          }\n+        });\n+    if (index \u003e\u003d 0) {\n+      return null;\n+    }\n+    index \u003d -index - 1;\n+    if (index \u003e\u003d records.size()) {\n+      index \u003d records.size() - 1;\n+    }\n+    Record base \u003d records.get(index);\n+    SetResponse sr \u003d zone.findRecords(base.getName(), Type.ANY);\n+    BitSet bitMap \u003d new BitSet();\n+    bitMap.set(Type.NXT);\n+    RRset[] rRsets \u003d sr.answers();\n+    for (RRset rRset : rRsets) {\n+      int typeCode \u003d rRset.getType();\n+      if (typeCode \u003e 0 \u0026\u0026 typeCode \u003c 128) {\n+        bitMap.set(typeCode);\n+      }\n+    }\n+    return new NXTRecord(base.getName(), DClass.IN, zone.getSOA().getMinimum(),\n+        queryRecord.getName(), bitMap);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Record getNXTRecord(Record queryRecord, Zone zone) {\n    Collections.sort(records);\n\n    int index \u003d Collections.binarySearch(records, queryRecord,\n        new Comparator\u003cRecord\u003e() {\n          @Override public int compare(Record r1, Record r2) {\n            return r1.compareTo(r2);\n          }\n        });\n    if (index \u003e\u003d 0) {\n      return null;\n    }\n    index \u003d -index - 1;\n    if (index \u003e\u003d records.size()) {\n      index \u003d records.size() - 1;\n    }\n    Record base \u003d records.get(index);\n    SetResponse sr \u003d zone.findRecords(base.getName(), Type.ANY);\n    BitSet bitMap \u003d new BitSet();\n    bitMap.set(Type.NXT);\n    RRset[] rRsets \u003d sr.answers();\n    for (RRset rRset : rRsets) {\n      int typeCode \u003d rRset.getType();\n      if (typeCode \u003e 0 \u0026\u0026 typeCode \u003c 128) {\n        bitMap.set(typeCode);\n      }\n    }\n    return new NXTRecord(base.getName(), DClass.IN, zone.getSOA().getMinimum(),\n        queryRecord.getName(), bitMap);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-registry/src/main/java/org/apache/hadoop/registry/server/dns/SecureableZone.java"
    }
  }
}