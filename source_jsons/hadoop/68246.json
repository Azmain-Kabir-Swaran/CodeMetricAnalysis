{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HttpInputStreamWithRelease.java",
  "functionName": "release",
  "functionId": "release___reason-String__ex-Exception",
  "sourceFilePath": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
  "functionStartLine": 98,
  "functionEndLine": 126,
  "numCommitsSeen": 4,
  "timeTaken": 1228,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "62579b69a0a294ba1ea14cf76c650b640f89f331",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "62579b69a0a294ba1ea14cf76c650b640f89f331": "Ybodychange",
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "27/04/17 12:57 AM",
      "commitNameOld": "62579b69a0a294ba1ea14cf76c650b640f89f331",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 293.35,
      "commitsBetweenForRepo": 1987,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,29 @@\n   private synchronized boolean release(String reason, Exception ex) throws\n                                                                    IOException {\n     if (!released) {\n       reasonClosed \u003d reason;\n       try {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Releasing connection to \" + uri + \":  \" + reason, ex);\n-        }\n+        LOG.debug(\"Releasing connection to {}:  {}\", uri, reason, ex);\n         if (req !\u003d null) {\n           if (!dataConsumed) {\n             req.abort();\n           }\n           req.releaseConnection();\n         }\n         if (inStream !\u003d null) {\n           //this guard may seem un-needed, but a stack trace seen\n           //on the JetS3t predecessor implied that it\n           //is useful\n           inStream.close();\n         }\n         return true;\n       } finally {\n         //if something went wrong here, we do not want the release() operation\n         //to try and do anything in advance.\n         released \u003d true;\n         dataConsumed \u003d true;\n       }\n     } else {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean release(String reason, Exception ex) throws\n                                                                   IOException {\n    if (!released) {\n      reasonClosed \u003d reason;\n      try {\n        LOG.debug(\"Releasing connection to {}:  {}\", uri, reason, ex);\n        if (req !\u003d null) {\n          if (!dataConsumed) {\n            req.abort();\n          }\n          req.releaseConnection();\n        }\n        if (inStream !\u003d null) {\n          //this guard may seem un-needed, but a stack trace seen\n          //on the JetS3t predecessor implied that it\n          //is useful\n          inStream.close();\n        }\n        return true;\n      } finally {\n        //if something went wrong here, we do not want the release() operation\n        //to try and do anything in advance.\n        released \u003d true;\n        dataConsumed \u003d true;\n      }\n    } else {\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
      "extendedDetails": {}
    },
    "62579b69a0a294ba1ea14cf76c650b640f89f331": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11614. Remove httpclient dependency from hadoop-openstack. Contributed by Akira Ajisaka, Brahma Reddy Battula, and Steve Loughran.\n",
      "commitDate": "27/04/17 12:57 AM",
      "commitName": "62579b69a0a294ba1ea14cf76c650b640f89f331",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "26/10/16 11:46 PM",
      "commitNameOld": "0bdd263d82a4510f16df49238d57c9f78ac28ae7",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 182.05,
      "commitsBetweenForRepo": 1075,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   private synchronized boolean release(String reason, Exception ex) throws\n                                                                    IOException {\n     if (!released) {\n       reasonClosed \u003d reason;\n       try {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Releasing connection to \" + uri + \":  \" + reason, ex);\n         }\n-        if (method !\u003d null) {\n+        if (req !\u003d null) {\n           if (!dataConsumed) {\n-            method.abort();\n+            req.abort();\n           }\n-          method.releaseConnection();\n+          req.releaseConnection();\n         }\n         if (inStream !\u003d null) {\n           //this guard may seem un-needed, but a stack trace seen\n           //on the JetS3t predecessor implied that it\n           //is useful\n           inStream.close();\n         }\n         return true;\n       } finally {\n         //if something went wrong here, we do not want the release() operation\n         //to try and do anything in advance.\n         released \u003d true;\n         dataConsumed \u003d true;\n       }\n     } else {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean release(String reason, Exception ex) throws\n                                                                   IOException {\n    if (!released) {\n      reasonClosed \u003d reason;\n      try {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Releasing connection to \" + uri + \":  \" + reason, ex);\n        }\n        if (req !\u003d null) {\n          if (!dataConsumed) {\n            req.abort();\n          }\n          req.releaseConnection();\n        }\n        if (inStream !\u003d null) {\n          //this guard may seem un-needed, but a stack trace seen\n          //on the JetS3t predecessor implied that it\n          //is useful\n          inStream.close();\n        }\n        return true;\n      } finally {\n        //if something went wrong here, we do not want the release() operation\n        //to try and do anything in advance.\n        released \u003d true;\n        dataConsumed \u003d true;\n      }\n    } else {\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java",
      "extendedDetails": {}
    },
    "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8545. Filesystem Implementation for OpenStack Swift\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1526854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/09/13 4:32 AM",
      "commitName": "3caca924bc72fe4a0e5b1ea89adb098cc1eb7874",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,31 @@\n+  private synchronized boolean release(String reason, Exception ex) throws\n+                                                                   IOException {\n+    if (!released) {\n+      reasonClosed \u003d reason;\n+      try {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Releasing connection to \" + uri + \":  \" + reason, ex);\n+        }\n+        if (method !\u003d null) {\n+          if (!dataConsumed) {\n+            method.abort();\n+          }\n+          method.releaseConnection();\n+        }\n+        if (inStream !\u003d null) {\n+          //this guard may seem un-needed, but a stack trace seen\n+          //on the JetS3t predecessor implied that it\n+          //is useful\n+          inStream.close();\n+        }\n+        return true;\n+      } finally {\n+        //if something went wrong here, we do not want the release() operation\n+        //to try and do anything in advance.\n+        released \u003d true;\n+        dataConsumed \u003d true;\n+      }\n+    } else {\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized boolean release(String reason, Exception ex) throws\n                                                                   IOException {\n    if (!released) {\n      reasonClosed \u003d reason;\n      try {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Releasing connection to \" + uri + \":  \" + reason, ex);\n        }\n        if (method !\u003d null) {\n          if (!dataConsumed) {\n            method.abort();\n          }\n          method.releaseConnection();\n        }\n        if (inStream !\u003d null) {\n          //this guard may seem un-needed, but a stack trace seen\n          //on the JetS3t predecessor implied that it\n          //is useful\n          inStream.close();\n        }\n        return true;\n      } finally {\n        //if something went wrong here, we do not want the release() operation\n        //to try and do anything in advance.\n        released \u003d true;\n        dataConsumed \u003d true;\n      }\n    } else {\n      return false;\n    }\n  }",
      "path": "hadoop-tools/hadoop-openstack/src/main/java/org/apache/hadoop/fs/swift/http/HttpInputStreamWithRelease.java"
    }
  }
}