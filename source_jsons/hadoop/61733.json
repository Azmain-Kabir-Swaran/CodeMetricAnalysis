{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMHAUtils.java",
  "functionName": "getRMHAWebappAddresses",
  "functionId": "getRMHAWebappAddresses___conf-YarnConfiguration(modifiers-final)",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RMHAUtils.java",
  "functionStartLine": 73,
  "functionEndLine": 101,
  "numCommitsSeen": 2,
  "timeTaken": 763,
  "changeHistory": [
    "e27d5a13b0623e3eb43ac773eccd082b9d6fa9d0",
    "4224e613409ec97ff52ba28a7cedfe0485577257"
  ],
  "changeHistoryShort": {
    "e27d5a13b0623e3eb43ac773eccd082b9d6fa9d0": "Ybodychange",
    "4224e613409ec97ff52ba28a7cedfe0485577257": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e27d5a13b0623e3eb43ac773eccd082b9d6fa9d0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3714. AM proxy filter can not get RM webapp address from\nyarn.resourcemanager.hostname.rm-id. Contributed by Masatake Iwasaki\n",
      "commitDate": "16/06/15 2:06 PM",
      "commitName": "e27d5a13b0623e3eb43ac773eccd082b9d6fa9d0",
      "commitAuthor": "Xuan",
      "commitDateOld": "20/03/14 9:20 PM",
      "commitNameOld": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 452.7,
      "commitsBetweenForRepo": 3708,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,29 @@\n   public static List\u003cString\u003e getRMHAWebappAddresses(\n       final YarnConfiguration conf) {\n+    String prefix;\n+    String defaultPort;\n+    if (YarnConfiguration.useHttps(conf)) {\n+      prefix \u003d YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS;\n+      defaultPort \u003d \":\" + YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT;\n+    } else {\n+      prefix \u003dYarnConfiguration.RM_WEBAPP_ADDRESS;\n+      defaultPort \u003d \":\" + YarnConfiguration.DEFAULT_RM_WEBAPP_PORT;\n+    }\n     Collection\u003cString\u003e rmIds \u003d\n         conf.getStringCollection(YarnConfiguration.RM_HA_IDS);\n     List\u003cString\u003e addrs \u003d new ArrayList\u003cString\u003e();\n-    if (YarnConfiguration.useHttps(conf)) {\n-      for (String id : rmIds) {\n-        String addr \u003d conf.get(\n-            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + \".\" + id);\n-        if (addr !\u003d null) {\n-          addrs.add(addr);\n+    for (String id : rmIds) {\n+      String addr \u003d conf.get(HAUtil.addSuffix(prefix, id));\n+      if (addr \u003d\u003d null) {\n+        String hostname \u003d\n+            conf.get(HAUtil.addSuffix(YarnConfiguration.RM_HOSTNAME, id));\n+        if (hostname !\u003d null) {\n+          addr \u003d hostname + defaultPort;\n         }\n       }\n-    } else {\n-      for (String id : rmIds) {\n-        String addr \u003d conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS + \".\" + id);\n-        if (addr !\u003d null) {\n-          addrs.add(addr);\n-        }\n+      if (addr !\u003d null) {\n+        addrs.add(addr);\n       }\n     }\n     return addrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getRMHAWebappAddresses(\n      final YarnConfiguration conf) {\n    String prefix;\n    String defaultPort;\n    if (YarnConfiguration.useHttps(conf)) {\n      prefix \u003d YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS;\n      defaultPort \u003d \":\" + YarnConfiguration.DEFAULT_RM_WEBAPP_HTTPS_PORT;\n    } else {\n      prefix \u003dYarnConfiguration.RM_WEBAPP_ADDRESS;\n      defaultPort \u003d \":\" + YarnConfiguration.DEFAULT_RM_WEBAPP_PORT;\n    }\n    Collection\u003cString\u003e rmIds \u003d\n        conf.getStringCollection(YarnConfiguration.RM_HA_IDS);\n    List\u003cString\u003e addrs \u003d new ArrayList\u003cString\u003e();\n    for (String id : rmIds) {\n      String addr \u003d conf.get(HAUtil.addSuffix(prefix, id));\n      if (addr \u003d\u003d null) {\n        String hostname \u003d\n            conf.get(HAUtil.addSuffix(YarnConfiguration.RM_HOSTNAME, id));\n        if (hostname !\u003d null) {\n          addr \u003d hostname + defaultPort;\n        }\n      }\n      if (addr !\u003d null) {\n        addrs.add(addr);\n      }\n    }\n    return addrs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RMHAUtils.java",
      "extendedDetails": {}
    },
    "4224e613409ec97ff52ba28a7cedfe0485577257": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1811. Fixed AMFilters in YARN to correctly accept requests from either web-app proxy or the RMs when HA is enabled. Contributed by Robert Kanter.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579877 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 9:20 PM",
      "commitName": "4224e613409ec97ff52ba28a7cedfe0485577257",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,23 @@\n+  public static List\u003cString\u003e getRMHAWebappAddresses(\n+      final YarnConfiguration conf) {\n+    Collection\u003cString\u003e rmIds \u003d\n+        conf.getStringCollection(YarnConfiguration.RM_HA_IDS);\n+    List\u003cString\u003e addrs \u003d new ArrayList\u003cString\u003e();\n+    if (YarnConfiguration.useHttps(conf)) {\n+      for (String id : rmIds) {\n+        String addr \u003d conf.get(\n+            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + \".\" + id);\n+        if (addr !\u003d null) {\n+          addrs.add(addr);\n+        }\n+      }\n+    } else {\n+      for (String id : rmIds) {\n+        String addr \u003d conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS + \".\" + id);\n+        if (addr !\u003d null) {\n+          addrs.add(addr);\n+        }\n+      }\n+    }\n+    return addrs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cString\u003e getRMHAWebappAddresses(\n      final YarnConfiguration conf) {\n    Collection\u003cString\u003e rmIds \u003d\n        conf.getStringCollection(YarnConfiguration.RM_HA_IDS);\n    List\u003cString\u003e addrs \u003d new ArrayList\u003cString\u003e();\n    if (YarnConfiguration.useHttps(conf)) {\n      for (String id : rmIds) {\n        String addr \u003d conf.get(\n            YarnConfiguration.RM_WEBAPP_HTTPS_ADDRESS + \".\" + id);\n        if (addr !\u003d null) {\n          addrs.add(addr);\n        }\n      }\n    } else {\n      for (String id : rmIds) {\n        String addr \u003d conf.get(YarnConfiguration.RM_WEBAPP_ADDRESS + \".\" + id);\n        if (addr !\u003d null) {\n          addrs.add(addr);\n        }\n      }\n    }\n    return addrs;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/RMHAUtils.java"
    }
  }
}