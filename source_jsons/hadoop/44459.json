{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "onRequestsRejected",
  "functionId": "onRequestsRejected___rejReqs-List__RejectedSchedulingRequest__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 1240,
  "functionEndLine": 1254,
  "numCommitsSeen": 113,
  "timeTaken": 1216,
  "changeHistory": [
    "e60f51299dba360d13aa39f9ab714fdfc666b532"
  ],
  "changeHistoryShort": {
    "e60f51299dba360d13aa39f9ab714fdfc666b532": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e60f51299dba360d13aa39f9ab714fdfc666b532": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7745. Allow DistributedShell to take a placement specification for containers it wants to launch. (Arun Suresh via wangda)\n\nChange-Id: Ided146d662e944a8a4692e5d6885f23fd9bbcad5\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "e60f51299dba360d13aa39f9ab714fdfc666b532",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,15 @@\n+    public void onRequestsRejected(List\u003cRejectedSchedulingRequest\u003e rejReqs) {\n+      List\u003cSchedulingRequest\u003e reqsToRetry \u003d new ArrayList\u003c\u003e();\n+      for (RejectedSchedulingRequest rejReq : rejReqs) {\n+        LOG.info(\"Scheduling Request {} has been rejected. Reason {}\",\n+            rejReq.getRequest(), rejReq.getReason());\n+        reqsToRetry.add(rejReq.getRequest());\n+      }\n+      totalRetries.addAndGet(-1 * reqsToRetry.size());\n+      if (totalRetries.get() \u003c\u003d 0) {\n+        LOG.info(\"Exiting, since retries are exhausted !!\");\n+        done \u003d true;\n+      } else {\n+        amRMClient.addSchedulingRequests(reqsToRetry);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void onRequestsRejected(List\u003cRejectedSchedulingRequest\u003e rejReqs) {\n      List\u003cSchedulingRequest\u003e reqsToRetry \u003d new ArrayList\u003c\u003e();\n      for (RejectedSchedulingRequest rejReq : rejReqs) {\n        LOG.info(\"Scheduling Request {} has been rejected. Reason {}\",\n            rejReq.getRequest(), rejReq.getReason());\n        reqsToRetry.add(rejReq.getRequest());\n      }\n      totalRetries.addAndGet(-1 * reqsToRetry.size());\n      if (totalRetries.get() \u003c\u003d 0) {\n        LOG.info(\"Exiting, since retries are exhausted !!\");\n        done \u003d true;\n      } else {\n        amRMClient.addSchedulingRequests(reqsToRetry);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}