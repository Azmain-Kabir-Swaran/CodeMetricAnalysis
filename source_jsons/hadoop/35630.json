{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMLauncher.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
  "functionStartLine": 336,
  "functionEndLine": 368,
  "numCommitsSeen": 62,
  "timeTaken": 12219,
  "changeHistory": [
    "95372657fc25c02399b01793833021ccf88dada2",
    "766544c0b008da9e78bcea6285b2c478653df75a",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
    "243bcd367ff3130d74676280233041f88aca62a5",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "92b7165a71656468f17ce8b760ce11e648932f0e",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "95372657fc25c02399b01793833021ccf88dada2": "Ybodychange",
    "766544c0b008da9e78bcea6285b2c478653df75a": "Ybodychange",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": "Ybodychange",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": "Ybodychange",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": "Ybodychange",
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5": "Ybodychange",
    "243bcd367ff3130d74676280233041f88aca62a5": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "92b7165a71656468f17ce8b760ce11e648932f0e": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Ymultichange(Ymovefromfile,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95372657fc25c02399b01793833021ccf88dada2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9287. Consecutive StringBuilder append should be reuse. Contributed by Ayush Saxena.\n",
      "commitDate": "25/02/19 11:45 AM",
      "commitName": "95372657fc25c02399b01793833021ccf88dada2",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "22/02/19 7:31 AM",
      "commitNameOld": "ed13cf84068ad50a78e66211132c1f08238fb65b",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 3.18,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n       } catch(Exception ie) {\n         onAMLaunchFailed(masterContainer.getId(), ie);\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n-        sb.append(masterContainer.getId().toString());\n-        sb.append(\" is not handled by this NodeManager\");\n+        sb.append(masterContainer.getId().toString())\n+            .append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n      } catch(Exception ie) {\n        onAMLaunchFailed(masterContainer.getId(), ie);\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString())\n            .append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "766544c0b008da9e78bcea6285b2c478653df75a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7786. NullPointerException while launching ApplicationMaster. Contributed by lujie\n",
      "commitDate": "20/04/18 11:22 AM",
      "commitName": "766544c0b008da9e78bcea6285b2c478653df75a",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "17/04/18 11:15 AM",
      "commitNameOld": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,33 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n       } catch(Exception ie) {\n-        String message \u003d \"Error launching \" + application.getAppAttemptId()\n-            + \". Got exception: \" + StringUtils.stringifyException(ie);\n-        LOG.info(message);\n-        handler.handle(new RMAppAttemptEvent(application\n-            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n+        onAMLaunchFailed(masterContainer.getId(), ie);\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n         sb.append(masterContainer.getId().toString());\n         sb.append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n      } catch(Exception ie) {\n        onAMLaunchFailed(masterContainer.getId(), ie);\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 11:15 AM",
      "commitName": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 6:04 AM",
      "commitNameOld": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n-            RMAppAttemptEventType.LAUNCHED));\n+            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptEvent(application\n             .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n         sb.append(masterContainer.getId().toString());\n         sb.append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptEvent(application\n            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\"\n\nThis reverts commit 0c14b6f0d80d847be7ef3eda1614eadbf835181c.\n",
      "commitDate": "17/04/18 6:04 AM",
      "commitName": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 5:59 AM",
      "commitNameOld": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n-            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n+            RMAppAttemptEventType.LAUNCHED));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptEvent(application\n             .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n         sb.append(masterContainer.getId().toString());\n         sb.append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptEvent(application\n            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 5:59 AM",
      "commitName": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "16/02/17 4:49 AM",
      "commitNameOld": "e63a7814d21c6469adb01a3a93cfb3ed7613437d",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 425.01,
      "commitsBetweenForRepo": 2927,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n-            RMAppAttemptEventType.LAUNCHED));\n+            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptEvent(application\n             .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n         sb.append(masterContainer.getId().toString());\n         sb.append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED, System.currentTimeMillis()));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptEvent(application\n            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4000. RM crashes with NPE if leaf queue becomes parent queue during restart. Contributed by Varun Saxena\n",
      "commitDate": "15/10/15 5:12 PM",
      "commitName": "cf23f2c2b5b4eb9e51de1a66b7aa57dee7ff30b5",
      "commitAuthor": "Jian He",
      "commitDateOld": "28/09/15 4:13 PM",
      "commitNameOld": "9735afe967a660f356e953348cb6c34417f41055",
      "commitAuthorOld": "Anubhav Dhoot",
      "daysBetweenCommits": 17.04,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,37 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n-        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n-            .getAppAttemptId(), message));\n+        handler.handle(new RMAppAttemptEvent(application\n+            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n         StringBuilder sb \u003d new StringBuilder(\"Container \");\n         sb.append(masterContainer.getId().toString());\n         sb.append(\" is not handled by this NodeManager\");\n         if (!e.getMessage().contains(sb.toString())) {\n           // Ignoring if container is already killed by Node Manager.\n           LOG.info(\"Error cleaning master \", e);\n         }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptEvent(application\n            .getAppAttemptId(), RMAppAttemptEventType.LAUNCH_FAILED, message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);\n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 10:47 PM",
      "commitNameOld": "acc0d3eb521e3c1d1b2f4be9b46c685ee921504b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.73,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,37 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptLaunchFailedEvent(application\n             .getAppAttemptId(), message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n       } catch (YarnException e) {\n-        LOG.info(\"Error cleaning master \", e);\n+        StringBuilder sb \u003d new StringBuilder(\"Container \");\n+        sb.append(masterContainer.getId().toString());\n+        sb.append(\" is not handled by this NodeManager\");\n+        if (!e.getMessage().contains(sb.toString())) {\n+          // Ignoring if container is already killed by Node Manager.\n+          LOG.info(\"Error cleaning master \", e);          \n+        }\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        StringBuilder sb \u003d new StringBuilder(\"Container \");\n        sb.append(masterContainer.getId().toString());\n        sb.append(\" is not handled by this NodeManager\");\n        if (!e.getMessage().contains(sb.toString())) {\n          // Ignoring if container is already killed by Node Manager.\n          LOG.info(\"Error cleaning master \", e);          \n        }\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "30/05/13 9:13 PM",
      "commitNameOld": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,31 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptLaunchFailedEvent(application\n             .getAppAttemptId(), message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n-      } catch (YarnRemoteException e) {\n+      } catch (YarnException e) {\n         LOG.info(\"Error cleaning master \", e);\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnException e) {\n        LOG.info(\"Error cleaning master \", e);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "92b7165a71656468f17ce8b760ce11e648932f0e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-629. Make YarnRemoteException not be rooted at IOException. Contributed by Xuan Gong.\nMAPREDUCE-5204. Handling YarnRemoteException separately from IOException in MR app after YARN-629. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1479680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 12:04 PM",
      "commitName": "92b7165a71656468f17ce8b760ce11e648932f0e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/13 7:46 PM",
      "commitNameOld": "be256a181985737ade3f8231b472a2438659c3b2",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 11.68,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,31 @@\n   public void run() {\n     switch (eventType) {\n     case LAUNCH:\n       try {\n         LOG.info(\"Launching master\" + application.getAppAttemptId());\n         launch();\n         handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n             RMAppAttemptEventType.LAUNCHED));\n       } catch(Exception ie) {\n         String message \u003d \"Error launching \" + application.getAppAttemptId()\n             + \". Got exception: \" + StringUtils.stringifyException(ie);\n         LOG.info(message);\n         handler.handle(new RMAppAttemptLaunchFailedEvent(application\n             .getAppAttemptId(), message));\n       }\n       break;\n     case CLEANUP:\n       try {\n         LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n         cleanup();\n       } catch(IOException ie) {\n         LOG.info(\"Error cleaning master \", ie);\n+      } catch (YarnRemoteException e) {\n+        LOG.info(\"Error cleaning master \", e);\n       }\n       break;\n     default:\n       LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n       break;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      } catch (YarnRemoteException e) {\n        LOG.info(\"Error cleaning master \", e);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,29 @@\n   public void run() {\n-    int failures \u003d 0;\n-    LOG.info(reduce + \" Thread started: \" + getName());\n-    \n-    try {\n-      while (true) {\n-        try {\n-          int numNewMaps \u003d getMapCompletionEvents();\n-          failures \u003d 0;\n-          if (numNewMaps \u003e 0) {\n-            LOG.info(reduce + \": \" + \"Got \" + numNewMaps + \" new map-outputs\");\n-          }\n-          LOG.debug(\"GetMapEventsThread about to sleep for \" + SLEEP_TIME);\n-          Thread.sleep(SLEEP_TIME);\n-        } catch (IOException ie) {\n-          LOG.info(\"Exception in getting events\", ie);\n-          // check to see whether to abort\n-          if (++failures \u003e\u003d MAX_RETRIES) {\n-            throw new IOException(\"too many failures downloading events\", ie);\n-          }\n-          // sleep for a bit\n-          Thread.sleep(RETRY_PERIOD);\n-        }\n+    switch (eventType) {\n+    case LAUNCH:\n+      try {\n+        LOG.info(\"Launching master\" + application.getAppAttemptId());\n+        launch();\n+        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n+            RMAppAttemptEventType.LAUNCHED));\n+      } catch(Exception ie) {\n+        String message \u003d \"Error launching \" + application.getAppAttemptId()\n+            + \". Got exception: \" + StringUtils.stringifyException(ie);\n+        LOG.info(message);\n+        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n+            .getAppAttemptId(), message));\n       }\n-    } catch (InterruptedException e) {\n-      return;\n-    } catch (Throwable t) {\n-      exceptionReporter.reportException(t);\n-      return;\n+      break;\n+    case CLEANUP:\n+      try {\n+        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n+        cleanup();\n+      } catch(IOException ie) {\n+        LOG.info(\"Error cleaning master \", ie);\n+      }\n+      break;\n+    default:\n+      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n+      break;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/task/reduce/EventFetcher.java",
            "newPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
            "oldMethodName": "run",
            "newMethodName": "run"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/11 4:07 AM",
          "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/08/11 8:02 PM",
          "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 0.34,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,31 +1,29 @@\n   public void run() {\n-    int failures \u003d 0;\n-    LOG.info(reduce + \" Thread started: \" + getName());\n-    \n-    try {\n-      while (true) {\n-        try {\n-          int numNewMaps \u003d getMapCompletionEvents();\n-          failures \u003d 0;\n-          if (numNewMaps \u003e 0) {\n-            LOG.info(reduce + \": \" + \"Got \" + numNewMaps + \" new map-outputs\");\n-          }\n-          LOG.debug(\"GetMapEventsThread about to sleep for \" + SLEEP_TIME);\n-          Thread.sleep(SLEEP_TIME);\n-        } catch (IOException ie) {\n-          LOG.info(\"Exception in getting events\", ie);\n-          // check to see whether to abort\n-          if (++failures \u003e\u003d MAX_RETRIES) {\n-            throw new IOException(\"too many failures downloading events\", ie);\n-          }\n-          // sleep for a bit\n-          Thread.sleep(RETRY_PERIOD);\n-        }\n+    switch (eventType) {\n+    case LAUNCH:\n+      try {\n+        LOG.info(\"Launching master\" + application.getAppAttemptId());\n+        launch();\n+        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n+            RMAppAttemptEventType.LAUNCHED));\n+      } catch(Exception ie) {\n+        String message \u003d \"Error launching \" + application.getAppAttemptId()\n+            + \". Got exception: \" + StringUtils.stringifyException(ie);\n+        LOG.info(message);\n+        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n+            .getAppAttemptId(), message));\n       }\n-    } catch (InterruptedException e) {\n-      return;\n-    } catch (Throwable t) {\n-      exceptionReporter.reportException(t);\n-      return;\n+      break;\n+    case CLEANUP:\n+      try {\n+        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n+        cleanup();\n+      } catch(IOException ie) {\n+        LOG.info(\"Error cleaning master \", ie);\n+      }\n+      break;\n+    default:\n+      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n+      break;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void run() {\n    switch (eventType) {\n    case LAUNCH:\n      try {\n        LOG.info(\"Launching master\" + application.getAppAttemptId());\n        launch();\n        handler.handle(new RMAppAttemptEvent(application.getAppAttemptId(),\n            RMAppAttemptEventType.LAUNCHED));\n      } catch(Exception ie) {\n        String message \u003d \"Error launching \" + application.getAppAttemptId()\n            + \". Got exception: \" + StringUtils.stringifyException(ie);\n        LOG.info(message);\n        handler.handle(new RMAppAttemptLaunchFailedEvent(application\n            .getAppAttemptId(), message));\n      }\n      break;\n    case CLEANUP:\n      try {\n        LOG.info(\"Cleaning master \" + application.getAppAttemptId());\n        cleanup();\n      } catch(IOException ie) {\n        LOG.info(\"Error cleaning master \", ie);\n      }\n      break;\n    default:\n      LOG.warn(\"Received unknown event-type \" + eventType + \". Ignoring.\");\n      break;\n    }\n  }",
          "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,31 @@\n+  public void run() {\n+    int failures \u003d 0;\n+    LOG.info(reduce + \" Thread started: \" + getName());\n+    \n+    try {\n+      while (true) {\n+        try {\n+          int numNewMaps \u003d getMapCompletionEvents();\n+          failures \u003d 0;\n+          if (numNewMaps \u003e 0) {\n+            LOG.info(reduce + \": \" + \"Got \" + numNewMaps + \" new map-outputs\");\n+          }\n+          LOG.debug(\"GetMapEventsThread about to sleep for \" + SLEEP_TIME);\n+          Thread.sleep(SLEEP_TIME);\n+        } catch (IOException ie) {\n+          LOG.info(\"Exception in getting events\", ie);\n+          // check to see whether to abort\n+          if (++failures \u003e\u003d MAX_RETRIES) {\n+            throw new IOException(\"too many failures downloading events\", ie);\n+          }\n+          // sleep for a bit\n+          Thread.sleep(RETRY_PERIOD);\n+        }\n+      }\n+    } catch (InterruptedException e) {\n+      return;\n+    } catch (Throwable t) {\n+      exceptionReporter.reportException(t);\n+      return;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    int failures \u003d 0;\n    LOG.info(reduce + \" Thread started: \" + getName());\n    \n    try {\n      while (true) {\n        try {\n          int numNewMaps \u003d getMapCompletionEvents();\n          failures \u003d 0;\n          if (numNewMaps \u003e 0) {\n            LOG.info(reduce + \": \" + \"Got \" + numNewMaps + \" new map-outputs\");\n          }\n          LOG.debug(\"GetMapEventsThread about to sleep for \" + SLEEP_TIME);\n          Thread.sleep(SLEEP_TIME);\n        } catch (IOException ie) {\n          LOG.info(\"Exception in getting events\", ie);\n          // check to see whether to abort\n          if (++failures \u003e\u003d MAX_RETRIES) {\n            throw new IOException(\"too many failures downloading events\", ie);\n          }\n          // sleep for a bit\n          Thread.sleep(RETRY_PERIOD);\n        }\n      }\n    } catch (InterruptedException e) {\n      return;\n    } catch (Throwable t) {\n      exceptionReporter.reportException(t);\n      return;\n    }\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/task/reduce/EventFetcher.java"
    }
  }
}