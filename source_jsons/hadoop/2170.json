{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DFSClient.java",
  "functionName": "create",
  "functionId": "create___src-String__permission-FsPermission__flag-EnumSet__CreateFlag____createParent-boolean__replication-short__blockSize-long__progress-Progressable__buffersize-int__checksumOpt-ChecksumOpt",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
  "functionStartLine": 1188,
  "functionEndLine": 1194,
  "numCommitsSeen": 388,
  "timeTaken": 11591,
  "changeHistory": [
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
    "0a6806ce8c946b26eceac7d16b467c54c453df84",
    "3b773da0361bdec594acd6814c49b81f867bd673",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "09c8adfb181582f6704e86e28a80ef7918a4c8f5",
    "fd9997989c1f1c6f806c57a806e7225ca599fc0c",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": "Ybodychange",
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": "Ybodychange",
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": "Ymultichange(Yparameterchange,Ybodychange)",
    "0a6806ce8c946b26eceac7d16b467c54c453df84": "Ybodychange",
    "3b773da0361bdec594acd6814c49b81f867bd673": "Ybodychange",
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": "Yreturntypechange",
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "09c8adfb181582f6704e86e28a80ef7918a4c8f5": "Ybodychange",
    "fd9997989c1f1c6f806c57a806e7225ca599fc0c": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt) throws IOException {\n    return create(src, permission, flag, createParent, replication, blockSize, \n        progress, buffersize, checksumOpt, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2576. Enhances the DistributedFileSystem\u0027s create API so that clients can specify favored datanodes for a file\u0027s blocks. Contributed by Devaraj Das and Pritam Damania.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1476395 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/04/13 1:39 PM",
      "commitName": "5d2ffde68e2c14ee33fa2ba4a34cb42fbd14b5ec",
      "commitAuthor": "Devaraj Das",
      "commitDateOld": "12/04/13 4:05 PM",
      "commitNameOld": "b7aaa1b74cad0b5ccaf114076a571215a63cdc09",
      "commitAuthorOld": "",
      "daysBetweenCommits": 13.9,
      "commitsBetweenForRepo": 65,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,12 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              ChecksumOpt checksumOpt) throws IOException {\n-    checkOpen();\n-    if (permission \u003d\u003d null) {\n-      permission \u003d FsPermission.getFileDefault();\n-    }\n-    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n-    if(LOG.isDebugEnabled()) {\n-      LOG.debug(src + \": masked\u003d\" + masked);\n-    }\n-    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n-        src, masked, flag, createParent, replication, blockSize, progress,\n-        buffersize, dfsClientConf.createChecksum(checksumOpt));\n-    beginFileLease(src, result);\n-    return result;\n+    return create(src, permission, flag, createParent, replication, blockSize, \n+        progress, buffersize, checksumOpt, null);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt) throws IOException {\n    return create(src, permission, flag, createParent, replication, blockSize, \n        progress, buffersize, checksumOpt, null);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "7e599d9e3b852954a5a21b4738817c7aabfa1bc8": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9155. FsPermission should have different default value, 777 for directory and 666 for file. Contributed by Binglin Chang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1431148 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/13 3:30 PM",
      "commitName": "7e599d9e3b852954a5a21b4738817c7aabfa1bc8",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "09/01/13 1:20 PM",
      "commitNameOld": "3cd17b614e9436d06cd9b4ccc5f9cf59fbe1cf21",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 0.09,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize,\n                              ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n-      permission \u003d FsPermission.getDefault();\n+      permission \u003d FsPermission.getFileDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n         src, masked, flag, createParent, replication, blockSize, progress,\n         buffersize, dfsClientConf.createChecksum(checksumOpt));\n     beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getFileDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        buffersize, dfsClientConf.createChecksum(checksumOpt));\n    beginFileLease(src, result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "b0ea77303ba62a400376ca32c63c5b138f32cbe7": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/12 10:46 PM",
      "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/12 10:46 PM",
          "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/08/12 9:52 AM",
          "commitNameOld": "fccace6116713c85cd59a808c565ea39fb5d6944",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 1.54,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n-                             int buffersize)\n-    throws IOException {\n+                             int buffersize,\n+                             ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n         src, masked, flag, createParent, replication, blockSize, progress,\n-        buffersize, dfsClientConf.createChecksum());\n+        buffersize, dfsClientConf.createChecksum(checksumOpt));\n     beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        buffersize, dfsClientConf.createChecksum(checksumOpt));\n    beginFileLease(src, result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {
            "oldValue": "[src-String, permission-FsPermission, flag-EnumSet\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, progress-Progressable, buffersize-int]",
            "newValue": "[src-String, permission-FsPermission, flag-EnumSet\u003cCreateFlag\u003e, createParent-boolean, replication-short, blockSize-long, progress-Progressable, buffersize-int, checksumOpt-ChecksumOpt]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8240. Add a new API to allow users to specify a checksum type on FileSystem.create(..).  Contributed by Kihwal Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1374696 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/08/12 10:46 PM",
          "commitName": "b0ea77303ba62a400376ca32c63c5b138f32cbe7",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "17/08/12 9:52 AM",
          "commitNameOld": "fccace6116713c85cd59a808c565ea39fb5d6944",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 1.54,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,23 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n-                             int buffersize)\n-    throws IOException {\n+                             int buffersize,\n+                             ChecksumOpt checksumOpt) throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n         src, masked, flag, createParent, replication, blockSize, progress,\n-        buffersize, dfsClientConf.createChecksum());\n+        buffersize, dfsClientConf.createChecksum(checksumOpt));\n     beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize,\n                             ChecksumOpt checksumOpt) throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        buffersize, dfsClientConf.createChecksum(checksumOpt));\n    beginFileLease(src, result);\n    return result;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "0a6806ce8c946b26eceac7d16b467c54c453df84": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3646. LeaseRenewer can hold reference to inactive DFSClient instances forever (Kihwal Lee via daryn)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1363170 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/12 4:21 PM",
      "commitName": "0a6806ce8c946b26eceac7d16b467c54c453df84",
      "commitAuthor": "Daryn Sharp",
      "commitDateOld": "15/07/12 7:58 PM",
      "commitNameOld": "0e8e499ff482c165d21c8e4f5ff9c33f306ca0d9",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 2.85,
      "commitsBetweenForRepo": 27,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n         src, masked, flag, createParent, replication, blockSize, progress,\n         buffersize, dfsClientConf.createChecksum());\n-    leaserenewer.put(src, result, this);\n+    beginFileLease(src, result);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        buffersize, dfsClientConf.createChecksum());\n    beginFileLease(src, result);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "3b773da0361bdec594acd6814c49b81f867bd673": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3319. Change DFSOutputStream to not to start a thread in constructors.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/12 1:17 PM",
      "commitName": "3b773da0361bdec594acd6814c49b81f867bd673",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "24/04/12 4:39 PM",
      "commitNameOld": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n-    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n-        createParent, replication, blockSize, progress, buffersize,\n-        dfsClientConf.createChecksum());\n+    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n+        src, masked, flag, createParent, replication, blockSize, progress,\n+        buffersize, dfsClientConf.createChecksum());\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d DFSOutputStream.newStreamForCreate(this,\n        src, masked, flag, createParent, replication, blockSize, progress,\n        buffersize, dfsClientConf.createChecksum());\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "ea32198db4e783f0c0b93a3f74120fe41ded98e8": {
      "type": "Yreturntypechange",
      "commitMessage": "HDFS-3298. Add HdfsDataOutputStream as a public API.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1330064 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/04/12 4:39 PM",
      "commitName": "ea32198db4e783f0c0b93a3f74120fe41ded98e8",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/04/12 7:34 PM",
      "commitNameOld": "c6d3537d337d71a3e566bcae824cc2377e9a9ed2",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 5.88,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-  public OutputStream create(String src, \n+  public DFSOutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n         createParent, replication, blockSize, progress, buffersize,\n         dfsClientConf.createChecksum());\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public DFSOutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.createChecksum());\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldValue": "OutputStream",
        "newValue": "DFSOutputStream"
      }
    },
    "f84552ac35bb5221290be68fece9c779ebeaf4bc": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2130. Switch default checksum to CRC32C. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/11/11 5:35 PM",
      "commitName": "f84552ac35bb5221290be68fece9c779ebeaf4bc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "31/10/11 5:38 PM",
      "commitNameOld": "8d1a09b7418d5cb512affaede0bb1ae494502967",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public OutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n         createParent, replication, blockSize, progress, buffersize,\n-        dfsClientConf.bytesPerChecksum);\n+        dfsClientConf.createChecksum());\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.createChecksum());\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.bytesPerChecksum);\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.bytesPerChecksum);\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSClient.java"
      }
    },
    "09c8adfb181582f6704e86e28a80ef7918a4c8f5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2109. Store uMask as member variable to DFSClient.Conf.  Contributed by Bharath Mundlapudi\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1141767 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/06/11 5:21 PM",
      "commitName": "09c8adfb181582f6704e86e28a80ef7918a4c8f5",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "23/06/11 4:57 PM",
      "commitNameOld": "2f48fae72aa52e6ec42264cad24fab36b6a426c2",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 7.02,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public OutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n-    FsPermission masked \u003d permission.applyUMask(FsPermission.getUMask(conf));\n+    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n     final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n         createParent, replication, blockSize, progress, buffersize,\n         dfsClientConf.bytesPerChecksum);\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(dfsClientConf.uMask);\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.bytesPerChecksum);\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "fd9997989c1f1c6f806c57a806e7225ca599fc0c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2092. Remove some object references to Configuration in DFSClient.  Contributed by Bharath Mundlapudi\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1139097 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/06/11 3:24 PM",
      "commitName": "fd9997989c1f1c6f806c57a806e7225ca599fc0c",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "12/06/11 3:00 PM",
      "commitNameOld": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 11.02,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   public OutputStream create(String src, \n                              FsPermission permission,\n                              EnumSet\u003cCreateFlag\u003e flag, \n                              boolean createParent,\n                              short replication,\n                              long blockSize,\n                              Progressable progress,\n                              int buffersize)\n     throws IOException {\n     checkOpen();\n     if (permission \u003d\u003d null) {\n       permission \u003d FsPermission.getDefault();\n     }\n     FsPermission masked \u003d permission.applyUMask(FsPermission.getUMask(conf));\n     if(LOG.isDebugEnabled()) {\n       LOG.debug(src + \": masked\u003d\" + masked);\n     }\n-    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked,\n-        flag, createParent, replication, blockSize, progress, buffersize,\n-        conf.getInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, \n-                    DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT));\n+    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n+        createParent, replication, blockSize, progress, buffersize,\n+        dfsClientConf.bytesPerChecksum);\n     leaserenewer.put(src, result, this);\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(FsPermission.getUMask(conf));\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked, flag,\n        createParent, replication, blockSize, progress, buffersize,\n        dfsClientConf.bytesPerChecksum);\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,24 @@\n+  public OutputStream create(String src, \n+                             FsPermission permission,\n+                             EnumSet\u003cCreateFlag\u003e flag, \n+                             boolean createParent,\n+                             short replication,\n+                             long blockSize,\n+                             Progressable progress,\n+                             int buffersize)\n+    throws IOException {\n+    checkOpen();\n+    if (permission \u003d\u003d null) {\n+      permission \u003d FsPermission.getDefault();\n+    }\n+    FsPermission masked \u003d permission.applyUMask(FsPermission.getUMask(conf));\n+    if(LOG.isDebugEnabled()) {\n+      LOG.debug(src + \": masked\u003d\" + masked);\n+    }\n+    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked,\n+        flag, createParent, replication, blockSize, progress, buffersize,\n+        conf.getInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, \n+                    DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT));\n+    leaserenewer.put(src, result, this);\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public OutputStream create(String src, \n                             FsPermission permission,\n                             EnumSet\u003cCreateFlag\u003e flag, \n                             boolean createParent,\n                             short replication,\n                             long blockSize,\n                             Progressable progress,\n                             int buffersize)\n    throws IOException {\n    checkOpen();\n    if (permission \u003d\u003d null) {\n      permission \u003d FsPermission.getDefault();\n    }\n    FsPermission masked \u003d permission.applyUMask(FsPermission.getUMask(conf));\n    if(LOG.isDebugEnabled()) {\n      LOG.debug(src + \": masked\u003d\" + masked);\n    }\n    final DFSOutputStream result \u003d new DFSOutputStream(this, src, masked,\n        flag, createParent, replication, blockSize, progress, buffersize,\n        conf.getInt(DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_KEY, \n                    DFSConfigKeys.DFS_BYTES_PER_CHECKSUM_DEFAULT));\n    leaserenewer.put(src, result, this);\n    return result;\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/DFSClient.java"
    }
  }
}