{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairScheduler.java",
  "functionName": "updateNodeResource",
  "functionId": "updateNodeResource___nm-RMNode__resourceOption-ResourceOption",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
  "functionStartLine": 1927,
  "functionEndLine": 1938,
  "numCommitsSeen": 226,
  "timeTaken": 5135,
  "changeHistory": [
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
    "5c14bc426b4be381383018ebc2236be83eef15cd"
  ],
  "changeHistoryShort": {
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": "Ybodychange",
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": "Ymultichange(Ymodifierchange,Ybodychange)",
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": "Ybodychange",
    "5c14bc426b4be381383018ebc2236be83eef15cd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7133. Clean up lock-try order in fair scheduler. (Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "24/07/18 12:46 PM",
      "commitName": "ea2c6c8c9a55813a19b3dbd0d29747d6a7739030",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "11/06/18 11:12 AM",
      "commitNameOld": "c190ac2be88e574b3322cdc73a7c0af0cef708b2",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 43.07,
      "commitsBetweenForRepo": 266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   public void updateNodeResource(RMNode nm,\n       ResourceOption resourceOption) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       super.updateNodeResource(nm, resourceOption);\n       updateRootQueueMetrics();\n       queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n       queueMgr.getRootQueue().recomputeSteadyShares();\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateNodeResource(RMNode nm,\n      ResourceOption resourceOption) {\n    writeLock.lock();\n    try {\n      super.updateNodeResource(nm, resourceOption);\n      updateRootQueueMetrics();\n      queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n      queueMgr.getRootQueue().recomputeSteadyShares();\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
      "commitDate": "04/10/16 5:23 PM",
      "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/10/16 6:03 AM",
          "commitNameOld": "0da54e8848764c71a31473516d23ada582013f8c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.47,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,12 @@\n-  public synchronized void updateNodeResource(RMNode nm, \n+  public void updateNodeResource(RMNode nm,\n       ResourceOption resourceOption) {\n-    super.updateNodeResource(nm, resourceOption);\n-    updateRootQueueMetrics();\n-    queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n-    queueMgr.getRootQueue().recomputeSteadyShares();\n+    try {\n+      writeLock.lock();\n+      super.updateNodeResource(nm, resourceOption);\n+      updateRootQueueMetrics();\n+      queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n+      queueMgr.getRootQueue().recomputeSteadyShares();\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateNodeResource(RMNode nm,\n      ResourceOption resourceOption) {\n    try {\n      writeLock.lock();\n      super.updateNodeResource(nm, resourceOption);\n      updateRootQueueMetrics();\n      queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n      queueMgr.getRootQueue().recomputeSteadyShares();\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3139. Improve locks in AbstractYarnScheduler/CapacityScheduler/FairScheduler. Contributed by Wangda Tan\n",
          "commitDate": "04/10/16 5:23 PM",
          "commitName": "31f8da22d0b8d2dcce5fbc8e45d832f40acf056f",
          "commitAuthor": "Jian He",
          "commitDateOld": "03/10/16 6:03 AM",
          "commitNameOld": "0da54e8848764c71a31473516d23ada582013f8c",
          "commitAuthorOld": "Karthik Kambatla",
          "daysBetweenCommits": 1.47,
          "commitsBetweenForRepo": 14,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,7 +1,12 @@\n-  public synchronized void updateNodeResource(RMNode nm, \n+  public void updateNodeResource(RMNode nm,\n       ResourceOption resourceOption) {\n-    super.updateNodeResource(nm, resourceOption);\n-    updateRootQueueMetrics();\n-    queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n-    queueMgr.getRootQueue().recomputeSteadyShares();\n+    try {\n+      writeLock.lock();\n+      super.updateNodeResource(nm, resourceOption);\n+      updateRootQueueMetrics();\n+      queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n+      queueMgr.getRootQueue().recomputeSteadyShares();\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void updateNodeResource(RMNode nm,\n      ResourceOption resourceOption) {\n    try {\n      writeLock.lock();\n      super.updateNodeResource(nm, resourceOption);\n      updateRootQueueMetrics();\n      queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n      queueMgr.getRootQueue().recomputeSteadyShares();\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "20d389ce61eaacb5ddfb329015f50e96ad894f8d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4719. Add a helper library to maintain node state and allows common queries. (kasha)\n",
      "commitDate": "14/03/16 2:19 PM",
      "commitName": "20d389ce61eaacb5ddfb329015f50e96ad894f8d",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/03/16 7:46 PM",
      "commitNameOld": "e1ccc9622b2f1fbefea1862fa74d1fb56d8eb264",
      "commitAuthorOld": "Zhihai Xu",
      "daysBetweenCommits": 7.73,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n   public synchronized void updateNodeResource(RMNode nm, \n       ResourceOption resourceOption) {\n     super.updateNodeResource(nm, resourceOption);\n     updateRootQueueMetrics();\n-    queueMgr.getRootQueue().setSteadyFairShare(clusterResource);\n+    queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n     queueMgr.getRootQueue().recomputeSteadyShares();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateNodeResource(RMNode nm, \n      ResourceOption resourceOption) {\n    super.updateNodeResource(nm, resourceOption);\n    updateRootQueueMetrics();\n    queueMgr.getRootQueue().setSteadyFairShare(getClusterResource());\n    queueMgr.getRootQueue().recomputeSteadyShares();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java",
      "extendedDetails": {}
    },
    "5c14bc426b4be381383018ebc2236be83eef15cd": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1506. Changed RMNode/SchedulerNode to update resource with event notification. Contributed by Junping Du\n",
      "commitDate": "29/08/14 11:05 PM",
      "commitName": "5c14bc426b4be381383018ebc2236be83eef15cd",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,7 @@\n+  public synchronized void updateNodeResource(RMNode nm, \n+      ResourceOption resourceOption) {\n+    super.updateNodeResource(nm, resourceOption);\n+    updateRootQueueMetrics();\n+    queueMgr.getRootQueue().setSteadyFairShare(clusterResource);\n+    queueMgr.getRootQueue().recomputeSteadyShares();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateNodeResource(RMNode nm, \n      ResourceOption resourceOption) {\n    super.updateNodeResource(nm, resourceOption);\n    updateRootQueueMetrics();\n    queueMgr.getRootQueue().setSteadyFairShare(clusterResource);\n    queueMgr.getRootQueue().recomputeSteadyShares();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FairScheduler.java"
    }
  }
}