{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GenericOptionsParser.java",
  "functionName": "buildGeneralOptions",
  "functionId": "buildGeneralOptions___opts-Options",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
  "functionStartLine": 225,
  "functionEndLine": 278,
  "numCommitsSeen": 36,
  "timeTaken": 2406,
  "changeHistory": [
    "373bb4931fb392e3ca6bfd78992887e5a405e186",
    "6938b677111a5fa6bf654717b310220f98b7cf20",
    "8e8cb4c6ca7e803674b160946ac92274bac0f96d",
    "c7c8e388a953b904b24d3343e5b069b0984244e0",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "3cb2e3112b3c21b1a87c38dbefca8ac859170c5a",
    "ac670cc47f06b0eb880dcb5522a5aba187b5c67d",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": "Ymultichange(Ymodifierchange,Ybodychange)",
    "6938b677111a5fa6bf654717b310220f98b7cf20": "Ybodychange",
    "8e8cb4c6ca7e803674b160946ac92274bac0f96d": "Ymodifierchange",
    "c7c8e388a953b904b24d3343e5b069b0984244e0": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "3cb2e3112b3c21b1a87c38dbefca8ac859170c5a": "Ybodychange",
    "ac670cc47f06b0eb880dcb5522a5aba187b5c67d": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "373bb4931fb392e3ca6bfd78992887e5a405e186": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
      "commitDate": "28/04/17 10:45 AM",
      "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "31/12/16 2:46 AM",
          "commitNameOld": "6938b677111a5fa6bf654717b310220f98b7cf20",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 118.29,
          "commitsBetweenForRepo": 641,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,54 @@\n-  private static synchronized Options buildGeneralOptions(Options opts) {\n-    Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n-        .hasArg()\n-        .withDescription(\"specify default filesystem URL to use, \"\n-        + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n-        .create(\"fs\");\n-    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n-    .hasArg()\n-    .withDescription(\"specify a ResourceManager\")\n-    .create(\"jt\");\n-    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n-    .hasArg()\n-    .withDescription(\"specify an application configuration file\")\n-    .create(\"conf\");\n-    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n-    .hasArg()\n-    .withDescription(\"use value for given property\")\n-    .create(\u0027D\u0027);\n-    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated jar files to include in the classpath.\")\n-    .create(\"libjars\");\n-    Option files \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated files to be copied to the \" +\n-           \"map reduce cluster\")\n-    .create(\"files\");\n-    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated archives to be unarchived\" +\n-                     \" on the compute machines.\")\n-    .create(\"archives\");\n-    \n-    // file with security tokens\n-    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n-    .hasArg()\n-    .withDescription(\"name of the file with the tokens\")\n-    .create(\"tokenCacheFile\");\n+  protected Options buildGeneralOptions(Options opts) {\n+    synchronized (OptionBuilder.class) {\n+      Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n+          .hasArg()\n+          .withDescription(\"specify default filesystem URL to use, \"\n+          + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n+          .create(\"fs\");\n+      Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n+          .hasArg()\n+          .withDescription(\"specify a ResourceManager\")\n+          .create(\"jt\");\n+      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n+          .hasArg()\n+          .withDescription(\"specify an application configuration file\")\n+          .create(\"conf\");\n+      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n+          .hasArg()\n+          .withDescription(\"use value for given property\")\n+          .create(\u0027D\u0027);\n+      Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\n+              \"comma separated jar files to include in the classpath.\")\n+          .create(\"libjars\");\n+      Option files \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\"comma separated files to be copied to the \" +\n+              \"map reduce cluster\")\n+          .create(\"files\");\n+      Option archives \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\"comma separated archives to be unarchived\" +\n+              \" on the compute machines.\")\n+          .create(\"archives\");\n \n-    opts.addOption(fs);\n-    opts.addOption(jt);\n-    opts.addOption(oconf);\n-    opts.addOption(property);\n-    opts.addOption(libjars);\n-    opts.addOption(files);\n-    opts.addOption(archives);\n-    opts.addOption(tokensFile);\n+      // file with security tokens\n+      Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n+          .hasArg()\n+          .withDescription(\"name of the file with the tokens\")\n+          .create(\"tokenCacheFile\");\n \n-    return opts;\n+\n+      opts.addOption(fs);\n+      opts.addOption(jt);\n+      opts.addOption(oconf);\n+      opts.addOption(property);\n+      opts.addOption(libjars);\n+      opts.addOption(files);\n+      opts.addOption(archives);\n+      opts.addOption(tokensFile);\n+\n+      return opts;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Options buildGeneralOptions(Options opts) {\n    synchronized (OptionBuilder.class) {\n      Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n          .hasArg()\n          .withDescription(\"specify default filesystem URL to use, \"\n          + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n          .create(\"fs\");\n      Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n          .hasArg()\n          .withDescription(\"specify a ResourceManager\")\n          .create(\"jt\");\n      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n          .hasArg()\n          .withDescription(\"specify an application configuration file\")\n          .create(\"conf\");\n      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n          .hasArg()\n          .withDescription(\"use value for given property\")\n          .create(\u0027D\u0027);\n      Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\n              \"comma separated jar files to include in the classpath.\")\n          .create(\"libjars\");\n      Option files \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\"comma separated files to be copied to the \" +\n              \"map reduce cluster\")\n          .create(\"files\");\n      Option archives \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\"comma separated archives to be unarchived\" +\n              \" on the compute machines.\")\n          .create(\"archives\");\n\n      // file with security tokens\n      Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n          .hasArg()\n          .withDescription(\"name of the file with the tokens\")\n          .create(\"tokenCacheFile\");\n\n\n      opts.addOption(fs);\n      opts.addOption(jt);\n      opts.addOption(oconf);\n      opts.addOption(property);\n      opts.addOption(libjars);\n      opts.addOption(files);\n      opts.addOption(archives);\n      opts.addOption(tokensFile);\n\n      return opts;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
          "extendedDetails": {
            "oldValue": "[private, static, synchronized]",
            "newValue": "[protected]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-679. Add an entry point that can start any Yarn service. Contributed by Steve Loughran.\n",
          "commitDate": "28/04/17 10:45 AM",
          "commitName": "373bb4931fb392e3ca6bfd78992887e5a405e186",
          "commitAuthor": "Junping Du",
          "commitDateOld": "31/12/16 2:46 AM",
          "commitNameOld": "6938b677111a5fa6bf654717b310220f98b7cf20",
          "commitAuthorOld": "Brahma Reddy Battula",
          "daysBetweenCommits": 118.29,
          "commitsBetweenForRepo": 641,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,50 +1,54 @@\n-  private static synchronized Options buildGeneralOptions(Options opts) {\n-    Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n-        .hasArg()\n-        .withDescription(\"specify default filesystem URL to use, \"\n-        + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n-        .create(\"fs\");\n-    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n-    .hasArg()\n-    .withDescription(\"specify a ResourceManager\")\n-    .create(\"jt\");\n-    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n-    .hasArg()\n-    .withDescription(\"specify an application configuration file\")\n-    .create(\"conf\");\n-    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n-    .hasArg()\n-    .withDescription(\"use value for given property\")\n-    .create(\u0027D\u0027);\n-    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated jar files to include in the classpath.\")\n-    .create(\"libjars\");\n-    Option files \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated files to be copied to the \" +\n-           \"map reduce cluster\")\n-    .create(\"files\");\n-    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n-    .hasArg()\n-    .withDescription(\"comma separated archives to be unarchived\" +\n-                     \" on the compute machines.\")\n-    .create(\"archives\");\n-    \n-    // file with security tokens\n-    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n-    .hasArg()\n-    .withDescription(\"name of the file with the tokens\")\n-    .create(\"tokenCacheFile\");\n+  protected Options buildGeneralOptions(Options opts) {\n+    synchronized (OptionBuilder.class) {\n+      Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n+          .hasArg()\n+          .withDescription(\"specify default filesystem URL to use, \"\n+          + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n+          .create(\"fs\");\n+      Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n+          .hasArg()\n+          .withDescription(\"specify a ResourceManager\")\n+          .create(\"jt\");\n+      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n+          .hasArg()\n+          .withDescription(\"specify an application configuration file\")\n+          .create(\"conf\");\n+      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n+          .hasArg()\n+          .withDescription(\"use value for given property\")\n+          .create(\u0027D\u0027);\n+      Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\n+              \"comma separated jar files to include in the classpath.\")\n+          .create(\"libjars\");\n+      Option files \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\"comma separated files to be copied to the \" +\n+              \"map reduce cluster\")\n+          .create(\"files\");\n+      Option archives \u003d OptionBuilder.withArgName(\"paths\")\n+          .hasArg()\n+          .withDescription(\"comma separated archives to be unarchived\" +\n+              \" on the compute machines.\")\n+          .create(\"archives\");\n \n-    opts.addOption(fs);\n-    opts.addOption(jt);\n-    opts.addOption(oconf);\n-    opts.addOption(property);\n-    opts.addOption(libjars);\n-    opts.addOption(files);\n-    opts.addOption(archives);\n-    opts.addOption(tokensFile);\n+      // file with security tokens\n+      Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n+          .hasArg()\n+          .withDescription(\"name of the file with the tokens\")\n+          .create(\"tokenCacheFile\");\n \n-    return opts;\n+\n+      opts.addOption(fs);\n+      opts.addOption(jt);\n+      opts.addOption(oconf);\n+      opts.addOption(property);\n+      opts.addOption(libjars);\n+      opts.addOption(files);\n+      opts.addOption(archives);\n+      opts.addOption(tokensFile);\n+\n+      return opts;\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected Options buildGeneralOptions(Options opts) {\n    synchronized (OptionBuilder.class) {\n      Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n          .hasArg()\n          .withDescription(\"specify default filesystem URL to use, \"\n          + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n          .create(\"fs\");\n      Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n          .hasArg()\n          .withDescription(\"specify a ResourceManager\")\n          .create(\"jt\");\n      Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n          .hasArg()\n          .withDescription(\"specify an application configuration file\")\n          .create(\"conf\");\n      Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n          .hasArg()\n          .withDescription(\"use value for given property\")\n          .create(\u0027D\u0027);\n      Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\n              \"comma separated jar files to include in the classpath.\")\n          .create(\"libjars\");\n      Option files \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\"comma separated files to be copied to the \" +\n              \"map reduce cluster\")\n          .create(\"files\");\n      Option archives \u003d OptionBuilder.withArgName(\"paths\")\n          .hasArg()\n          .withDescription(\"comma separated archives to be unarchived\" +\n              \" on the compute machines.\")\n          .create(\"archives\");\n\n      // file with security tokens\n      Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n          .hasArg()\n          .withDescription(\"name of the file with the tokens\")\n          .create(\"tokenCacheFile\");\n\n\n      opts.addOption(fs);\n      opts.addOption(jt);\n      opts.addOption(oconf);\n      opts.addOption(property);\n      opts.addOption(libjars);\n      opts.addOption(files);\n      opts.addOption(archives);\n      opts.addOption(tokensFile);\n\n      return opts;\n    }\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
          "extendedDetails": {}
        }
      ]
    },
    "6938b677111a5fa6bf654717b310220f98b7cf20": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13883. Addendum patch to correct the message and alphabetized  with the earlier patch. Contributed by Yiqun Lin.\n",
      "commitDate": "31/12/16 2:46 AM",
      "commitName": "6938b677111a5fa6bf654717b310220f98b7cf20",
      "commitAuthor": "Brahma Reddy Battula",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 45.66,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,50 @@\n   private static synchronized Options buildGeneralOptions(Options opts) {\n-    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n-    .hasArg()\n-    .withDescription(\"specify a namenode\")\n-    .create(\"fs\");\n+    Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n+        .hasArg()\n+        .withDescription(\"specify default filesystem URL to use, \"\n+        + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n+        .create(\"fs\");\n     Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n     .hasArg()\n     .withDescription(\"specify a ResourceManager\")\n     .create(\"jt\");\n     Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n     .hasArg()\n     .withDescription(\"specify an application configuration file\")\n     .create(\"conf\");\n     Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n     .hasArg()\n     .withDescription(\"use value for given property\")\n     .create(\u0027D\u0027);\n     Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated jar files to include in the classpath.\")\n     .create(\"libjars\");\n     Option files \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated files to be copied to the \" +\n            \"map reduce cluster\")\n     .create(\"files\");\n     Option archives \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated archives to be unarchived\" +\n                      \" on the compute machines.\")\n     .create(\"archives\");\n     \n     // file with security tokens\n     Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n     .hasArg()\n     .withDescription(\"name of the file with the tokens\")\n     .create(\"tokenCacheFile\");\n \n     opts.addOption(fs);\n     opts.addOption(jt);\n     opts.addOption(oconf);\n     opts.addOption(property);\n     opts.addOption(libjars);\n     opts.addOption(files);\n     opts.addOption(archives);\n     opts.addOption(tokensFile);\n \n     return opts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static synchronized Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"file:///|hdfs://namenode:port\")\n        .hasArg()\n        .withDescription(\"specify default filesystem URL to use, \"\n        + \"overrides \u0027fs.defaultFS\u0027 property from configurations.\")\n        .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n    .hasArg()\n    .withDescription(\"specify a ResourceManager\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "8e8cb4c6ca7e803674b160946ac92274bac0f96d": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-13179. GenericOptionsParser is not thread-safe because commons-cli OptionBuilder is not thread-safe. (Contributed by hongbin ma)\n",
      "commitDate": "14/06/16 3:31 AM",
      "commitName": "8e8cb4c6ca7e803674b160946ac92274bac0f96d",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "22/04/16 3:14 PM",
      "commitNameOld": "63e5412f1aef5e17e15da69d646181c629fc8682",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 52.51,
      "commitsBetweenForRepo": 337,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n-  private static Options buildGeneralOptions(Options opts) {\n+  private static synchronized Options buildGeneralOptions(Options opts) {\n     Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n     .hasArg()\n     .withDescription(\"specify a namenode\")\n     .create(\"fs\");\n     Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n     .hasArg()\n     .withDescription(\"specify a ResourceManager\")\n     .create(\"jt\");\n     Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n     .hasArg()\n     .withDescription(\"specify an application configuration file\")\n     .create(\"conf\");\n     Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n     .hasArg()\n     .withDescription(\"use value for given property\")\n     .create(\u0027D\u0027);\n     Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated jar files to include in the classpath.\")\n     .create(\"libjars\");\n     Option files \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated files to be copied to the \" +\n            \"map reduce cluster\")\n     .create(\"files\");\n     Option archives \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated archives to be unarchived\" +\n                      \" on the compute machines.\")\n     .create(\"archives\");\n     \n     // file with security tokens\n     Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n     .hasArg()\n     .withDescription(\"name of the file with the tokens\")\n     .create(\"tokenCacheFile\");\n \n     opts.addOption(fs);\n     opts.addOption(jt);\n     opts.addOption(oconf);\n     opts.addOption(property);\n     opts.addOption(libjars);\n     opts.addOption(files);\n     opts.addOption(archives);\n     opts.addOption(tokensFile);\n \n     return opts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static synchronized Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n    .hasArg()\n    .withDescription(\"specify a ResourceManager\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldValue": "[private, static]",
        "newValue": "[private, static, synchronized]"
      }
    },
    "c7c8e388a953b904b24d3343e5b069b0984244e0": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5945. Update the description of GenericOptionsParser -jt option (Akira AJISAKA via aw)\n",
      "commitDate": "26/09/14 2:25 PM",
      "commitName": "c7c8e388a953b904b24d3343e5b069b0984244e0",
      "commitAuthor": "Allen Wittenauer",
      "commitDateOld": "09/09/14 10:19 PM",
      "commitNameOld": "b100949404843ed245ef4e118291f55b3fdc81b8",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 16.67,
      "commitsBetweenForRepo": 190,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,49 @@\n   private static Options buildGeneralOptions(Options opts) {\n     Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n     .hasArg()\n     .withDescription(\"specify a namenode\")\n     .create(\"fs\");\n-    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n+    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n     .hasArg()\n-    .withDescription(\"specify a job tracker\")\n+    .withDescription(\"specify a ResourceManager\")\n     .create(\"jt\");\n     Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n     .hasArg()\n     .withDescription(\"specify an application configuration file\")\n     .create(\"conf\");\n     Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n     .hasArg()\n     .withDescription(\"use value for given property\")\n     .create(\u0027D\u0027);\n     Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated jar files to include in the classpath.\")\n     .create(\"libjars\");\n     Option files \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated files to be copied to the \" +\n            \"map reduce cluster\")\n     .create(\"files\");\n     Option archives \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated archives to be unarchived\" +\n                      \" on the compute machines.\")\n     .create(\"archives\");\n     \n     // file with security tokens\n     Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n     .hasArg()\n     .withDescription(\"name of the file with the tokens\")\n     .create(\"tokenCacheFile\");\n \n     opts.addOption(fs);\n     opts.addOption(jt);\n     opts.addOption(oconf);\n     opts.addOption(property);\n     opts.addOption(libjars);\n     opts.addOption(files);\n     opts.addOption(archives);\n     opts.addOption(tokensFile);\n \n     return opts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|resourcemanager:port\")\n    .hasArg()\n    .withDescription(\"specify a ResourceManager\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
        "newPath": "common/src/java/org/apache/hadoop/util/GenericOptionsParser.java"
      }
    },
    "3cb2e3112b3c21b1a87c38dbefca8ac859170c5a": {
      "type": "Ybodychange",
      "commitMessage": "   HADOOP-6472. add tokenCache option to GenericOptionsParser for passing\n    file with secret keys to a map reduce job. (boryas)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@895801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/10 2:14 PM",
      "commitName": "3cb2e3112b3c21b1a87c38dbefca8ac859170c5a",
      "commitAuthor": "Boris Shkolnik",
      "commitDateOld": "30/10/09 11:21 AM",
      "commitNameOld": "a5427fc7eb4155437261cbcf55144f6f82675809",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 66.16,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,42 +1,49 @@\n   private static Options buildGeneralOptions(Options opts) {\n     Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n     .hasArg()\n     .withDescription(\"specify a namenode\")\n     .create(\"fs\");\n     Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n     .hasArg()\n     .withDescription(\"specify a job tracker\")\n     .create(\"jt\");\n     Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n     .hasArg()\n     .withDescription(\"specify an application configuration file\")\n     .create(\"conf\");\n     Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n     .hasArg()\n     .withDescription(\"use value for given property\")\n     .create(\u0027D\u0027);\n     Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated jar files to include in the classpath.\")\n     .create(\"libjars\");\n     Option files \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated files to be copied to the \" +\n            \"map reduce cluster\")\n     .create(\"files\");\n     Option archives \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated archives to be unarchived\" +\n                      \" on the compute machines.\")\n     .create(\"archives\");\n+    \n+    // file with security tokens\n+    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n+    .hasArg()\n+    .withDescription(\"name of the file with the tokens\")\n+    .create(\"tokenCacheFile\");\n \n     opts.addOption(fs);\n     opts.addOption(jt);\n     opts.addOption(oconf);\n     opts.addOption(property);\n     opts.addOption(libjars);\n     opts.addOption(files);\n     opts.addOption(archives);\n+    opts.addOption(tokensFile);\n \n     return opts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n    \n    // file with security tokens\n    Option tokensFile \u003d OptionBuilder.withArgName(\"tokensFile\")\n    .hasArg()\n    .withDescription(\"name of the file with the tokens\")\n    .create(\"tokenCacheFile\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n    opts.addOption(tokensFile);\n\n    return opts;\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "ac670cc47f06b0eb880dcb5522a5aba187b5c67d": {
      "type": "Ybodychange",
      "commitMessage": "Fixed basic hadoop core targets\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@778829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/05/09 11:27 AM",
      "commitName": "ac670cc47f06b0eb880dcb5522a5aba187b5c67d",
      "commitAuthor": "Giridharan Kesavan",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 7.59,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,42 @@\n   private static Options buildGeneralOptions(Options opts) {\n     Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n     .hasArg()\n     .withDescription(\"specify a namenode\")\n     .create(\"fs\");\n     Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n     .hasArg()\n     .withDescription(\"specify a job tracker\")\n     .create(\"jt\");\n     Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n     .hasArg()\n     .withDescription(\"specify an application configuration file\")\n     .create(\"conf\");\n     Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n-    .hasArgs()\n-    .withArgPattern(\"\u003d\", 1)\n+    .hasArg()\n     .withDescription(\"use value for given property\")\n     .create(\u0027D\u0027);\n     Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated jar files to include in the classpath.\")\n     .create(\"libjars\");\n     Option files \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated files to be copied to the \" +\n            \"map reduce cluster\")\n     .create(\"files\");\n     Option archives \u003d OptionBuilder.withArgName(\"paths\")\n     .hasArg()\n     .withDescription(\"comma separated archives to be unarchived\" +\n                      \" on the compute machines.\")\n     .create(\"archives\");\n \n     opts.addOption(fs);\n     opts.addOption(jt);\n     opts.addOption(oconf);\n     opts.addOption(property);\n     opts.addOption(libjars);\n     opts.addOption(files);\n     opts.addOption(archives);\n \n     return opts;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArg()\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n\n    return opts;\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,43 @@\n+  private static Options buildGeneralOptions(Options opts) {\n+    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n+    .hasArg()\n+    .withDescription(\"specify a namenode\")\n+    .create(\"fs\");\n+    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n+    .hasArg()\n+    .withDescription(\"specify a job tracker\")\n+    .create(\"jt\");\n+    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n+    .hasArg()\n+    .withDescription(\"specify an application configuration file\")\n+    .create(\"conf\");\n+    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n+    .hasArgs()\n+    .withArgPattern(\"\u003d\", 1)\n+    .withDescription(\"use value for given property\")\n+    .create(\u0027D\u0027);\n+    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n+    .hasArg()\n+    .withDescription(\"comma separated jar files to include in the classpath.\")\n+    .create(\"libjars\");\n+    Option files \u003d OptionBuilder.withArgName(\"paths\")\n+    .hasArg()\n+    .withDescription(\"comma separated files to be copied to the \" +\n+           \"map reduce cluster\")\n+    .create(\"files\");\n+    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n+    .hasArg()\n+    .withDescription(\"comma separated archives to be unarchived\" +\n+                     \" on the compute machines.\")\n+    .create(\"archives\");\n+\n+    opts.addOption(fs);\n+    opts.addOption(jt);\n+    opts.addOption(oconf);\n+    opts.addOption(property);\n+    opts.addOption(libjars);\n+    opts.addOption(files);\n+    opts.addOption(archives);\n+\n+    return opts;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static Options buildGeneralOptions(Options opts) {\n    Option fs \u003d OptionBuilder.withArgName(\"local|namenode:port\")\n    .hasArg()\n    .withDescription(\"specify a namenode\")\n    .create(\"fs\");\n    Option jt \u003d OptionBuilder.withArgName(\"local|jobtracker:port\")\n    .hasArg()\n    .withDescription(\"specify a job tracker\")\n    .create(\"jt\");\n    Option oconf \u003d OptionBuilder.withArgName(\"configuration file\")\n    .hasArg()\n    .withDescription(\"specify an application configuration file\")\n    .create(\"conf\");\n    Option property \u003d OptionBuilder.withArgName(\"property\u003dvalue\")\n    .hasArgs()\n    .withArgPattern(\"\u003d\", 1)\n    .withDescription(\"use value for given property\")\n    .create(\u0027D\u0027);\n    Option libjars \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated jar files to include in the classpath.\")\n    .create(\"libjars\");\n    Option files \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated files to be copied to the \" +\n           \"map reduce cluster\")\n    .create(\"files\");\n    Option archives \u003d OptionBuilder.withArgName(\"paths\")\n    .hasArg()\n    .withDescription(\"comma separated archives to be unarchived\" +\n                     \" on the compute machines.\")\n    .create(\"archives\");\n\n    opts.addOption(fs);\n    opts.addOption(jt);\n    opts.addOption(oconf);\n    opts.addOption(property);\n    opts.addOption(libjars);\n    opts.addOption(files);\n    opts.addOption(archives);\n\n    return opts;\n  }",
      "path": "src/java/org/apache/hadoop/util/GenericOptionsParser.java"
    }
  }
}