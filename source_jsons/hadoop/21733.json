{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractCounters.java",
  "functionName": "getGroup",
  "functionId": "getGroup___groupName-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
  "functionStartLine": 214,
  "functionEndLine": 240,
  "numCommitsSeen": 21,
  "timeTaken": 4937,
  "changeHistory": [
    "7d2466c0c8d11e7ccd27acd3b85df08862e9ed3e",
    "be9c46a4475f18ef33796ee63d73821c07c49fb5",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "24676e8c2ef48e67265d33c053badb31aecad616",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "7d2466c0c8d11e7ccd27acd3b85df08862e9ed3e": "Ybodychange",
    "be9c46a4475f18ef33796ee63d73821c07c49fb5": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "24676e8c2ef48e67265d33c053badb31aecad616": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7d2466c0c8d11e7ccd27acd3b85df08862e9ed3e": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4129. Lots of unneeded counters log messages (Ahmed Radwan via bobby)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1328106 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/04/12 1:23 PM",
      "commitName": "7d2466c0c8d11e7ccd27acd3b85df08862e9ed3e",
      "commitAuthor": "Robert Joseph Evans",
      "commitDateOld": "26/02/12 12:32 AM",
      "commitNameOld": "f071323343c682ac17bf37d1cb3d1afb9c63641d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 53.49,
      "commitsBetweenForRepo": 413,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,27 @@\n   public synchronized G getGroup(String groupName) {\n-    String newGroupName \u003d filterGroupName(groupName);\n+\n+    // filterGroupName\n+    boolean groupNameInLegacyMap \u003d true;\n+    String newGroupName \u003d legacyMap.get(groupName);\n+    if (newGroupName \u003d\u003d null) {\n+      groupNameInLegacyMap \u003d false;\n+      newGroupName \u003d Limits.filterGroupName(groupName);\n+    }\n+\n     boolean isFGroup \u003d isFrameworkGroup(newGroupName);\n     G group \u003d isFGroup ? fgroups.get(newGroupName) : groups.get(newGroupName);\n     if (group \u003d\u003d null) {\n       group \u003d groupFactory.newGroup(newGroupName, limits);\n       if (isFGroup) {\n         fgroups.put(newGroupName, group);\n       } else {\n         limits.checkGroups(groups.size() + 1);\n         groups.put(newGroupName, group);\n       }\n+      if (groupNameInLegacyMap) {\n+        LOG.warn(\"Group \" + groupName + \" is deprecated. Use \" + newGroupName\n+            + \" instead\");\n+      }\n     }\n     return group;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized G getGroup(String groupName) {\n\n    // filterGroupName\n    boolean groupNameInLegacyMap \u003d true;\n    String newGroupName \u003d legacyMap.get(groupName);\n    if (newGroupName \u003d\u003d null) {\n      groupNameInLegacyMap \u003d false;\n      newGroupName \u003d Limits.filterGroupName(groupName);\n    }\n\n    boolean isFGroup \u003d isFrameworkGroup(newGroupName);\n    G group \u003d isFGroup ? fgroups.get(newGroupName) : groups.get(newGroupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(newGroupName, limits);\n      if (isFGroup) {\n        fgroups.put(newGroupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(newGroupName, group);\n      }\n      if (groupNameInLegacyMap) {\n        LOG.warn(\"Group \" + groupName + \" is deprecated. Use \" + newGroupName\n            + \" instead\");\n      }\n    }\n    return group;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {}
    },
    "be9c46a4475f18ef33796ee63d73821c07c49fb5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3433. Finding counters by legacy group name returns empty counters.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1207755 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/11/11 9:07 PM",
      "commitName": "be9c46a4475f18ef33796ee63d73821c07c49fb5",
      "commitAuthor": "Thomas White",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 96.2,
      "commitsBetweenForRepo": 665,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public synchronized G getGroup(String groupName) {\n-    boolean isFGroup \u003d isFrameworkGroup(groupName);\n-    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n+    String newGroupName \u003d filterGroupName(groupName);\n+    boolean isFGroup \u003d isFrameworkGroup(newGroupName);\n+    G group \u003d isFGroup ? fgroups.get(newGroupName) : groups.get(newGroupName);\n     if (group \u003d\u003d null) {\n-      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n+      group \u003d groupFactory.newGroup(newGroupName, limits);\n       if (isFGroup) {\n-        fgroups.put(groupName, group);\n+        fgroups.put(newGroupName, group);\n       } else {\n         limits.checkGroups(groups.size() + 1);\n-        groups.put(groupName, group);\n+        groups.put(newGroupName, group);\n       }\n     }\n     return group;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized G getGroup(String groupName) {\n    String newGroupName \u003d filterGroupName(groupName);\n    boolean isFGroup \u003d isFrameworkGroup(newGroupName);\n    G group \u003d isFGroup ? fgroups.get(newGroupName) : groups.get(newGroupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(newGroupName, limits);\n      if (isFGroup) {\n        fgroups.put(newGroupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(newGroupName, group);\n      }\n    }\n    return group;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized G getGroup(String groupName) {\n    boolean isFGroup \u003d isFrameworkGroup(groupName);\n    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n      if (isFGroup) {\n        fgroups.put(groupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(groupName, group);\n      }\n    }\n    return group;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized G getGroup(String groupName) {\n    boolean isFGroup \u003d isFrameworkGroup(groupName);\n    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n      if (isFGroup) {\n        fgroups.put(groupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(groupName, group);\n      }\n    }\n    return group;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java"
      }
    },
    "24676e8c2ef48e67265d33c053badb31aecad616": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ybodychange)",
      "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 4:25 PM",
      "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/11 4:25 PM",
          "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/08/11 2:05 PM",
          "commitNameOld": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,14 @@\n-  public synchronized Group getGroup(String groupName) {\n-    Group result \u003d counters.get(groupName);\n-\n-    if (result \u003d\u003d null) {\n-      // To provide support for deprecated group names  \n-      if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n-                 \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.TaskCounter\");\n-      } \n-\n-      if (groupName.equals\n-          (\"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n-                 \"is deprecated. Use \" +\n-                 \"org.apache.hadoop.mapreduce.JobCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.JobCounter\");\n+  public synchronized G getGroup(String groupName) {\n+    boolean isFGroup \u003d isFrameworkGroup(groupName);\n+    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n+    if (group \u003d\u003d null) {\n+      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n+      if (isFGroup) {\n+        fgroups.put(groupName, group);\n+      } else {\n+        limits.checkGroups(groups.size() + 1);\n+        groups.put(groupName, group);\n       }\n-\n-      result \u003d new Group(groupName);\n-      counters.put(groupName, result);\n     }\n-\n-    return result;\n+    return group;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized G getGroup(String groupName) {\n    boolean isFGroup \u003d isFrameworkGroup(groupName);\n    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n      if (isFGroup) {\n        fgroups.put(groupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(groupName, group);\n      }\n    }\n    return group;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
          "extendedDetails": {
            "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/Counters.java",
            "newPath": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
            "oldMethodName": "getGroup",
            "newMethodName": "getGroup"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/11 4:25 PM",
          "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/08/11 2:05 PM",
          "commitNameOld": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,14 @@\n-  public synchronized Group getGroup(String groupName) {\n-    Group result \u003d counters.get(groupName);\n-\n-    if (result \u003d\u003d null) {\n-      // To provide support for deprecated group names  \n-      if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n-                 \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.TaskCounter\");\n-      } \n-\n-      if (groupName.equals\n-          (\"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n-                 \"is deprecated. Use \" +\n-                 \"org.apache.hadoop.mapreduce.JobCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.JobCounter\");\n+  public synchronized G getGroup(String groupName) {\n+    boolean isFGroup \u003d isFrameworkGroup(groupName);\n+    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n+    if (group \u003d\u003d null) {\n+      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n+      if (isFGroup) {\n+        fgroups.put(groupName, group);\n+      } else {\n+        limits.checkGroups(groups.size() + 1);\n+        groups.put(groupName, group);\n       }\n-\n-      result \u003d new Group(groupName);\n-      counters.put(groupName, result);\n     }\n-\n-    return result;\n+    return group;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized G getGroup(String groupName) {\n    boolean isFGroup \u003d isFrameworkGroup(groupName);\n    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n      if (isFGroup) {\n        fgroups.put(groupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(groupName, group);\n      }\n    }\n    return group;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
          "extendedDetails": {
            "oldValue": "Group",
            "newValue": "G"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": " MAPREDUCE-901. Efficient framework counters. Contributed by Luke Lu.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157290 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "12/08/11 4:25 PM",
          "commitName": "24676e8c2ef48e67265d33c053badb31aecad616",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "12/08/11 2:05 PM",
          "commitNameOld": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.1,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,14 @@\n-  public synchronized Group getGroup(String groupName) {\n-    Group result \u003d counters.get(groupName);\n-\n-    if (result \u003d\u003d null) {\n-      // To provide support for deprecated group names  \n-      if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n-                 \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.TaskCounter\");\n-      } \n-\n-      if (groupName.equals\n-          (\"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n-        LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n-                 \"is deprecated. Use \" +\n-                 \"org.apache.hadoop.mapreduce.JobCounter instead\");\n-        return getGroup(\"org.apache.hadoop.mapreduce.JobCounter\");\n+  public synchronized G getGroup(String groupName) {\n+    boolean isFGroup \u003d isFrameworkGroup(groupName);\n+    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n+    if (group \u003d\u003d null) {\n+      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n+      if (isFGroup) {\n+        fgroups.put(groupName, group);\n+      } else {\n+        limits.checkGroups(groups.size() + 1);\n+        groups.put(groupName, group);\n       }\n-\n-      result \u003d new Group(groupName);\n-      counters.put(groupName, result);\n     }\n-\n-    return result;\n+    return group;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized G getGroup(String groupName) {\n    boolean isFGroup \u003d isFrameworkGroup(groupName);\n    G group \u003d isFGroup ? fgroups.get(groupName) : groups.get(groupName);\n    if (group \u003d\u003d null) {\n      group \u003d groupFactory.newGroup(filterGroupName(groupName), limits);\n      if (isFGroup) {\n        fgroups.put(groupName, group);\n      } else {\n        limits.checkGroups(groups.size() + 1);\n        groups.put(groupName, group);\n      }\n    }\n    return group;\n  }",
          "path": "mapreduce/src/java/org/apache/hadoop/mapreduce/counters/AbstractCounters.java",
          "extendedDetails": {}
        }
      ]
    },
    "989c5e90a58d06320e70d7746a97d9a8376c49e3": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2037. Capture intermediate progress, CPU and memory usage for tasks. Contributed by Dick King. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1157253 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/11 2:05 PM",
      "commitName": "989c5e90a58d06320e70d7746a97d9a8376c49e3",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/07/11 4:36 PM",
      "commitNameOld": "4796e1adcb912005198c9003305c97cf3a8b523e",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 29.9,
      "commitsBetweenForRepo": 121,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,25 @@\n   public synchronized Group getGroup(String groupName) {\n-    // To provide support for deprecated group names  \n-    if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n-      groupName \u003d \"org.apache.hadoop.mapreduce.TaskCounter\";\n-      LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n-               \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n-    } else if (groupName.equals(\n-                 \"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n-      groupName \u003d \"org.apache.hadoop.mapreduce.JobCounter\";\n-      LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n-               \"is deprecated. Use \" +\n-               \"org.apache.hadoop.mapreduce.JobCounter instead\");\n-    }\n     Group result \u003d counters.get(groupName);\n+\n     if (result \u003d\u003d null) {\n+      // To provide support for deprecated group names  \n+      if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n+        LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n+                 \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n+        return getGroup(\"org.apache.hadoop.mapreduce.TaskCounter\");\n+      } \n+\n+      if (groupName.equals\n+          (\"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n+        LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n+                 \"is deprecated. Use \" +\n+                 \"org.apache.hadoop.mapreduce.JobCounter instead\");\n+        return getGroup(\"org.apache.hadoop.mapreduce.JobCounter\");\n+      }\n+\n       result \u003d new Group(groupName);\n       counters.put(groupName, result);\n     }\n+\n     return result;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Group getGroup(String groupName) {\n    Group result \u003d counters.get(groupName);\n\n    if (result \u003d\u003d null) {\n      // To provide support for deprecated group names  \n      if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n        LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n                 \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n        return getGroup(\"org.apache.hadoop.mapreduce.TaskCounter\");\n      } \n\n      if (groupName.equals\n          (\"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n        LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n                 \"is deprecated. Use \" +\n                 \"org.apache.hadoop.mapreduce.JobCounter instead\");\n        return getGroup(\"org.apache.hadoop.mapreduce.JobCounter\");\n      }\n\n      result \u003d new Group(groupName);\n      counters.put(groupName, result);\n    }\n\n    return result;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/Counters.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,20 @@\n+  public synchronized Group getGroup(String groupName) {\n+    // To provide support for deprecated group names  \n+    if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n+      groupName \u003d \"org.apache.hadoop.mapreduce.TaskCounter\";\n+      LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n+               \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n+    } else if (groupName.equals(\n+                 \"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n+      groupName \u003d \"org.apache.hadoop.mapreduce.JobCounter\";\n+      LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n+               \"is deprecated. Use \" +\n+               \"org.apache.hadoop.mapreduce.JobCounter instead\");\n+    }\n+    Group result \u003d counters.get(groupName);\n+    if (result \u003d\u003d null) {\n+      result \u003d new Group(groupName);\n+      counters.put(groupName, result);\n+    }\n+    return result;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Group getGroup(String groupName) {\n    // To provide support for deprecated group names  \n    if (groupName.equals(\"org.apache.hadoop.mapred.Task$Counter\")) {\n      groupName \u003d \"org.apache.hadoop.mapreduce.TaskCounter\";\n      LOG.warn(\"Group org.apache.hadoop.mapred.Task$Counter is deprecated.\" +\n               \" Use org.apache.hadoop.mapreduce.TaskCounter instead\");\n    } else if (groupName.equals(\n                 \"org.apache.hadoop.mapred.JobInProgress$Counter\")) {\n      groupName \u003d \"org.apache.hadoop.mapreduce.JobCounter\";\n      LOG.warn(\"Group org.apache.hadoop.mapred.JobInProgress$Counter \" +\n               \"is deprecated. Use \" +\n               \"org.apache.hadoop.mapreduce.JobCounter instead\");\n    }\n    Group result \u003d counters.get(groupName);\n    if (result \u003d\u003d null) {\n      result \u003d new Group(groupName);\n      counters.put(groupName, result);\n    }\n    return result;\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/Counters.java"
    }
  }
}