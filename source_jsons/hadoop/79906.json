{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Trash.java",
  "functionName": "expunge",
  "functionId": "expunge",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java",
  "functionStartLine": 119,
  "functionEndLine": 121,
  "numCommitsSeen": 24,
  "timeTaken": 988,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "184ff33de5598b04bf968ea3b113b175a4225b82",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "175a92850d8207ae5231632f915767033b035c5f",
    "76a77aea78301c6b632d06d20520abc8a21d4cb0",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "184ff33de5598b04bf968ea3b113b175a4225b82": "Ybodychange",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "175a92850d8207ae5231632f915767033b035c5f": "Ybodychange",
    "76a77aea78301c6b632d06d20520abc8a21d4cb0": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void expunge() throws IOException {\n    trashPolicy.deleteCheckpoint();\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void expunge() throws IOException {\n    trashPolicy.deleteCheckpoint();\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/Trash.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/Trash.java"
      }
    },
    "184ff33de5598b04bf968ea3b113b175a4225b82": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7460. Support pluggable trash policies. Contributed by Usman Masoon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1149760 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/07/11 4:23 PM",
      "commitName": "184ff33de5598b04bf968ea3b113b175a4225b82",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "23/06/11 4:55 PM",
      "commitNameOld": "1191be630ff05c9f1a540b952a8e34665f7fc181",
      "commitAuthorOld": "Tanping Wang",
      "daysBetweenCommits": 28.98,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,3 @@\n   public void expunge() throws IOException {\n-    FileStatus[] dirs \u003d null;\n-    \n-    try {\n-      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n-    } catch (FileNotFoundException fnfe) {\n-      return;\n-    }\n-\n-    long now \u003d System.currentTimeMillis();\n-    for (int i \u003d 0; i \u003c dirs.length; i++) {\n-      Path path \u003d dirs[i].getPath();\n-      String dir \u003d path.toUri().getPath();\n-      String name \u003d path.getName();\n-      if (name.equals(CURRENT.getName()))         // skip current\n-        continue;\n-\n-      long time;\n-      try {\n-        synchronized (CHECKPOINT) {\n-          time \u003d CHECKPOINT.parse(name).getTime();\n-        }\n-      } catch (ParseException e) {\n-        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n-        continue;\n-      }\n-\n-      if ((now - deletionInterval) \u003e time) {\n-        if (fs.delete(path, true)) {\n-          LOG.info(\"Deleted trash checkpoint: \"+dir);\n-        } else {\n-          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n-        }\n-      }\n-    }\n+    trashPolicy.deleteCheckpoint();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void expunge() throws IOException {\n    trashPolicy.deleteCheckpoint();\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {}
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void expunge() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/Trash.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/Trash.java"
      }
    },
    "175a92850d8207ae5231632f915767033b035c5f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6761. The Trash Emptier has the ability to run more frequently.\n(Dmytro Molkov via dhruba)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@945439 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/10 4:51 PM",
      "commitName": "175a92850d8207ae5231632f915767033b035c5f",
      "commitAuthor": "Dhruba Borthakur",
      "commitDateOld": "30/10/09 3:39 PM",
      "commitNameOld": "382af3f62737491afb380b2402ce2f58256c5974",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 199.05,
      "commitsBetweenForRepo": 179,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,36 @@\n   public void expunge() throws IOException {\n     FileStatus[] dirs \u003d null;\n     \n     try {\n       dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n     } catch (FileNotFoundException fnfe) {\n       return;\n     }\n \n     long now \u003d System.currentTimeMillis();\n     for (int i \u003d 0; i \u003c dirs.length; i++) {\n       Path path \u003d dirs[i].getPath();\n       String dir \u003d path.toUri().getPath();\n       String name \u003d path.getName();\n       if (name.equals(CURRENT.getName()))         // skip current\n         continue;\n \n       long time;\n       try {\n         synchronized (CHECKPOINT) {\n           time \u003d CHECKPOINT.parse(name).getTime();\n         }\n       } catch (ParseException e) {\n         LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n         continue;\n       }\n \n-      if ((now - interval) \u003e time) {\n+      if ((now - deletionInterval) \u003e time) {\n         if (fs.delete(path, true)) {\n           LOG.info(\"Deleted trash checkpoint: \"+dir);\n         } else {\n           LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void expunge() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - deletionInterval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {}
    },
    "76a77aea78301c6b632d06d20520abc8a21d4cb0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6201. Change FileSystem::listStatus contract to throw\nFileNotFoundException if the directory does not exist, rather than letting\nthis be implementation-specific. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@806745 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/08/09 3:50 PM",
      "commitName": "76a77aea78301c6b632d06d20520abc8a21d4cb0",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "07/08/09 10:59 AM",
      "commitNameOld": "09d826ebed0394d80dd24432a3bbf894efe46265",
      "commitAuthorOld": "Hairong Kuang",
      "daysBetweenCommits": 14.2,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   public void expunge() throws IOException {\n-    FileStatus[] dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n-    if( dirs \u003d\u003d null){\n+    FileStatus[] dirs \u003d null;\n+    \n+    try {\n+      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n+    } catch (FileNotFoundException fnfe) {\n       return;\n     }\n+\n     long now \u003d System.currentTimeMillis();\n     for (int i \u003d 0; i \u003c dirs.length; i++) {\n       Path path \u003d dirs[i].getPath();\n       String dir \u003d path.toUri().getPath();\n       String name \u003d path.getName();\n       if (name.equals(CURRENT.getName()))         // skip current\n         continue;\n \n       long time;\n       try {\n         synchronized (CHECKPOINT) {\n           time \u003d CHECKPOINT.parse(name).getTime();\n         }\n       } catch (ParseException e) {\n         LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n         continue;\n       }\n \n       if ((now - interval) \u003e time) {\n         if (fs.delete(path, true)) {\n           LOG.info(\"Deleted trash checkpoint: \"+dir);\n         } else {\n           LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void expunge() throws IOException {\n    FileStatus[] dirs \u003d null;\n    \n    try {\n      dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    } catch (FileNotFoundException fnfe) {\n      return;\n    }\n\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - interval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/Trash.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,32 @@\n+  public void expunge() throws IOException {\n+    FileStatus[] dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n+    if( dirs \u003d\u003d null){\n+      return;\n+    }\n+    long now \u003d System.currentTimeMillis();\n+    for (int i \u003d 0; i \u003c dirs.length; i++) {\n+      Path path \u003d dirs[i].getPath();\n+      String dir \u003d path.toUri().getPath();\n+      String name \u003d path.getName();\n+      if (name.equals(CURRENT.getName()))         // skip current\n+        continue;\n+\n+      long time;\n+      try {\n+        synchronized (CHECKPOINT) {\n+          time \u003d CHECKPOINT.parse(name).getTime();\n+        }\n+      } catch (ParseException e) {\n+        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n+        continue;\n+      }\n+\n+      if ((now - interval) \u003e time) {\n+        if (fs.delete(path, true)) {\n+          LOG.info(\"Deleted trash checkpoint: \"+dir);\n+        } else {\n+          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void expunge() throws IOException {\n    FileStatus[] dirs \u003d fs.listStatus(trash);            // scan trash sub-directories\n    if( dirs \u003d\u003d null){\n      return;\n    }\n    long now \u003d System.currentTimeMillis();\n    for (int i \u003d 0; i \u003c dirs.length; i++) {\n      Path path \u003d dirs[i].getPath();\n      String dir \u003d path.toUri().getPath();\n      String name \u003d path.getName();\n      if (name.equals(CURRENT.getName()))         // skip current\n        continue;\n\n      long time;\n      try {\n        synchronized (CHECKPOINT) {\n          time \u003d CHECKPOINT.parse(name).getTime();\n        }\n      } catch (ParseException e) {\n        LOG.warn(\"Unexpected item in trash: \"+dir+\". Ignoring.\");\n        continue;\n      }\n\n      if ((now - interval) \u003e time) {\n        if (fs.delete(path, true)) {\n          LOG.info(\"Deleted trash checkpoint: \"+dir);\n        } else {\n          LOG.warn(\"Couldn\u0027t delete checkpoint: \"+dir+\" Ignoring.\");\n        }\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/fs/Trash.java"
    }
  }
}