{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RollingLevelDB.java",
  "functionName": "initHistoricalDBs",
  "functionId": "initHistoricalDBs",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/RollingLevelDB.java",
  "functionStartLine": 228,
  "functionEndLine": 241,
  "numCommitsSeen": 5,
  "timeTaken": 732,
  "changeHistory": [
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f"
  ],
  "changeHistoryShort": {
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "daf3e4ef8bf73cbe4a799d51b4765809cd81089f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3448. Added a rolling time-to-live LevelDB timeline store implementation. Contributed by Jonathan Eagles.\n",
      "commitDate": "07/05/15 10:01 AM",
      "commitName": "daf3e4ef8bf73cbe4a799d51b4765809cd81089f",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,14 @@\n+  protected synchronized void initHistoricalDBs() throws IOException {\n+    Path rollingDBGlobPath \u003d new Path(rollingDBPath, getName() + \".*\");\n+    FileStatus[] statuses \u003d lfs.globStatus(rollingDBGlobPath);\n+    for (FileStatus status : statuses) {\n+      String dbName \u003d FilenameUtils.getExtension(status.getPath().toString());\n+      try {\n+        Long dbStartTime \u003d sdf.parse(dbName).getTime();\n+        initRollingLevelDB(dbStartTime, status.getPath());\n+      } catch (ParseException pe) {\n+        LOG.warn(\"Failed to initialize rolling leveldb \" + dbName + \" for \"\n+            + getName());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void initHistoricalDBs() throws IOException {\n    Path rollingDBGlobPath \u003d new Path(rollingDBPath, getName() + \".*\");\n    FileStatus[] statuses \u003d lfs.globStatus(rollingDBGlobPath);\n    for (FileStatus status : statuses) {\n      String dbName \u003d FilenameUtils.getExtension(status.getPath().toString());\n      try {\n        Long dbStartTime \u003d sdf.parse(dbName).getTime();\n        initRollingLevelDB(dbStartTime, status.getPath());\n      } catch (ParseException pe) {\n        LOG.warn(\"Failed to initialize rolling leveldb \" + dbName + \" for \"\n            + getName());\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/timeline/RollingLevelDB.java"
    }
  }
}