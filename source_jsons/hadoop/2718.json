{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfiguredFailoverProxyProvider.java",
  "functionName": "getProxy",
  "functionId": "getProxy",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
  "functionStartLine": 58,
  "functionEndLine": 61,
  "numCommitsSeen": 26,
  "timeTaken": 3810,
  "changeHistory": [
    "a4121c71c29d13866a605d9c0d013e5de9c147c3",
    "fba1c42adc1c8ae57951e1865ec2ab05c8707bdf",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
    "030fcfa99c345ad57625486eeabedebf2fd4411f",
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5",
    "3a61d25457606b93f7e99a48fe8f66984f4084b0",
    "ad61eec0727d55ffcd4fca6f207a4919801bf18b",
    "c69dfdd5e14af490790dff8227b11962ec816577",
    "83a922b55ee22ef8e643dc4148474deb84dad38a",
    "212678f036f4f96493bc14a584e758f97cf65573",
    "8b4f497af85b49519da2e05e8269db6c4e9d621f"
  ],
  "changeHistoryShort": {
    "a4121c71c29d13866a605d9c0d013e5de9c147c3": "Ybodychange",
    "fba1c42adc1c8ae57951e1865ec2ab05c8707bdf": "Ybodychange",
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": "Yfilerename",
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": "Ybodychange",
    "030fcfa99c345ad57625486eeabedebf2fd4411f": "Ybodychange",
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5": "Ybodychange",
    "3a61d25457606b93f7e99a48fe8f66984f4084b0": "Ybodychange",
    "ad61eec0727d55ffcd4fca6f207a4919801bf18b": "Ymultichange(Yreturntypechange,Ybodychange)",
    "c69dfdd5e14af490790dff8227b11962ec816577": "Ybodychange",
    "83a922b55ee22ef8e643dc4148474deb84dad38a": "Ybodychange",
    "212678f036f4f96493bc14a584e758f97cf65573": "Ymultichange(Yreturntypechange,Ybodychange)",
    "8b4f497af85b49519da2e05e8269db6c4e9d621f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a4121c71c29d13866a605d9c0d013e5de9c147c3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13848. Refactor NameNode failover proxy providers. Contributed by Konstantin Shvachko.",
      "commitDate": "24/08/18 6:27 PM",
      "commitName": "a4121c71c29d13866a605d9c0d013e5de9c147c3",
      "commitAuthor": "Konstantin V Shvachko",
      "commitDateOld": "02/07/18 10:48 AM",
      "commitNameOld": "1804a31515e541b3371925aa895589919b54d443",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 53.32,
      "commitsBetweenForRepo": 402,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n-    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n-    return getProxy(current);\n+    NNProxyInfo\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n+    return createProxyIfNeeded(current);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    NNProxyInfo\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    return createProxyIfNeeded(current);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "fba1c42adc1c8ae57951e1865ec2ab05c8707bdf": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13664. Refactor ConfiguredFailoverProxyProvider to make inheritance easier. Contributed by Chao Sun.",
      "commitDate": "08/06/18 4:36 PM",
      "commitName": "fba1c42adc1c8ae57951e1865ec2ab05c8707bdf",
      "commitAuthor": "Chao Sun",
      "commitDateOld": "04/04/17 11:05 PM",
      "commitNameOld": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 429.73,
      "commitsBetweenForRepo": 3566,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,4 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n-    if (current.namenode \u003d\u003d null) {\n-      try {\n-        current.namenode \u003d factory.createProxy(conf,\n-            current.address, xface, ugi, false, getFallbackToSimpleAuth());\n-      } catch (IOException e) {\n-        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n-        throw new RuntimeException(e);\n-      }\n-    }\n-    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n+    return getProxy(current);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    return getProxy(current);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "9e0e430f18d45cfe125dda8d85916edddf79e8d6": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-11538. Move ClientProtocol HA proxies into hadoop-hdfs-client. Contributed by Huafeng Wang.\n",
      "commitDate": "04/04/17 11:05 PM",
      "commitName": "9e0e430f18d45cfe125dda8d85916edddf79e8d6",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "04/04/17 9:08 PM",
      "commitNameOld": "19b89c4c7be0236aafded560b7bcad7e39d1c4ed",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d factory.createProxy(conf,\n            current.address, xface, ugi, false, getFallbackToSimpleAuth());\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java"
      }
    },
    "63d9f1596c92206cce3b72e3214d2fb5f6242b90": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9039. Separate client and server side methods of o.a.h.hdfs.NameNodeProxies. Contributed by Mingliang Liu.\n",
      "commitDate": "22/09/15 8:52 PM",
      "commitName": "63d9f1596c92206cce3b72e3214d2fb5f6242b90",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "27/07/15 11:02 PM",
      "commitNameOld": "030fcfa99c345ad57625486eeabedebf2fd4411f",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 56.91,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         current.namenode \u003d factory.createProxy(conf,\n-            current.address, xface, ugi, false, fallbackToSimpleAuth);\n+            current.address, xface, ugi, false, getFallbackToSimpleAuth());\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n     return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d factory.createProxy(conf,\n            current.address, xface, ugi, false, getFallbackToSimpleAuth());\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "030fcfa99c345ad57625486eeabedebf2fd4411f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7858. Improve HA Namenode Failover detection on the client. (asuresh)\n",
      "commitDate": "27/07/15 11:02 PM",
      "commitName": "030fcfa99c345ad57625486eeabedebf2fd4411f",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "10/04/15 7:38 PM",
      "commitNameOld": "60da0e49e7316892d63e9c7cdc3214057e68009a",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 108.14,
      "commitsBetweenForRepo": 863,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n-        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n-            current.address, xface, ugi, false, fallbackToSimpleAuth).getProxy();\n+        current.namenode \u003d factory.createProxy(conf,\n+            current.address, xface, ugi, false, fallbackToSimpleAuth);\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n     return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d factory.createProxy(conf,\n            current.address, xface, ugi, false, fallbackToSimpleAuth);\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7073. Allow falling back to a non-SASL connection on DataTransferProtocol in several edge cases. Contributed by Chris Nauroth.\n",
      "commitDate": "19/09/14 9:23 PM",
      "commitName": "f85cc14eb49a46e81d2edcdc1ffe4d0852f193a5",
      "commitAuthor": "cnauroth",
      "commitDateOld": "13/05/14 9:19 AM",
      "commitNameOld": "33ade356b35223654a077103ed7fbed89f3f2321",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 129.5,
      "commitsBetweenForRepo": 1073,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n-            current.address, xface, ugi, false).getProxy();\n+            current.address, xface, ugi, false, fallbackToSimpleAuth).getProxy();\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n     return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n            current.address, xface, ugi, false, fallbackToSimpleAuth).getProxy();\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "3a61d25457606b93f7e99a48fe8f66984f4084b0": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6125. Cleanup unnecessary cast in HDFS code base. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1581242 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/03/14 10:51 PM",
      "commitName": "3a61d25457606b93f7e99a48fe8f66984f4084b0",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.26,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public synchronized ProxyInfo\u003cT\u003e getProxy() {\n     AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n             current.address, xface, ugi, false).getProxy();\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n-    return new ProxyInfo\u003cT\u003e((T)current.namenode, current.address.toString());\n+    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n            current.address, xface, ugi, false).getProxy();\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e(current.namenode, current.address.toString());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "ad61eec0727d55ffcd4fca6f207a4919801bf18b": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-10386. Log proxy hostname in various exceptions being thrown in a HA setup. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574716 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/14 3:09 PM",
      "commitName": "ad61eec0727d55ffcd4fca6f207a4919801bf18b",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10386. Log proxy hostname in various exceptions being thrown in a HA setup. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574716 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/03/14 3:09 PM",
          "commitName": "ad61eec0727d55ffcd4fca6f207a4919801bf18b",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/04/12 3:21 PM",
          "commitNameOld": "c80dbe5e09ab1eb3c1b0277055f28717895d6dd9",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 687.03,
          "commitsBetweenForRepo": 4174,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized T getProxy() {\n-    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n+  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n             current.address, xface, ugi, false).getProxy();\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n-    return (T)current.namenode;\n+    return new ProxyInfo\u003cT\u003e((T)current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n            current.address, xface, ugi, false).getProxy();\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e((T)current.namenode, current.address.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
          "extendedDetails": {
            "oldValue": "T",
            "newValue": "ProxyInfo\u003cT\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10386. Log proxy hostname in various exceptions being thrown in a HA setup. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574716 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "05/03/14 3:09 PM",
          "commitName": "ad61eec0727d55ffcd4fca6f207a4919801bf18b",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "17/04/12 3:21 PM",
          "commitNameOld": "c80dbe5e09ab1eb3c1b0277055f28717895d6dd9",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 687.03,
          "commitsBetweenForRepo": 4174,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  public synchronized T getProxy() {\n-    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n+  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n+    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n             current.address, xface, ugi, false).getProxy();\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n-    return (T)current.namenode;\n+    return new ProxyInfo\u003cT\u003e((T)current.namenode, current.address.toString());\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized ProxyInfo\u003cT\u003e getProxy() {\n    AddressRpcProxyPair\u003cT\u003e current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n            current.address, xface, ugi, false).getProxy();\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return new ProxyInfo\u003cT\u003e((T)current.namenode, current.address.toString());\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "c69dfdd5e14af490790dff8227b11962ec816577": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2958. Sweep for remaining proxy construction which doesn\u0027t go through failover path.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1294811 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "28/02/12 12:09 PM",
      "commitName": "c69dfdd5e14af490790dff8227b11962ec816577",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "24/02/12 4:03 PM",
      "commitNameOld": "481f84597bf842df45b068cc24c328112e8bcf40",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 3.84,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,13 @@\n   public synchronized T getProxy() {\n     AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n-        if (NamenodeProtocol.class.equals(xface)) {\n-          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n-              current.address, conf, ugi, false);\n-        } else if (ClientProtocol.class.equals(xface)) {\n-          current.namenode \u003d DFSUtil.createNNProxyWithClientProtocol(\n-              current.address, conf, ugi, false);\n-        } else {\n-          throw new IllegalStateException(\n-              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n-                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n-                  + \" is not supported by \" + this.getClass().getName());\n-        }\n+        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n+            current.address, xface, ugi, false).getProxy();\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n     return (T)current.namenode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized T getProxy() {\n    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d NameNodeProxies.createNonHAProxy(conf,\n            current.address, xface, ugi, false).getProxy();\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return (T)current.namenode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "83a922b55ee22ef8e643dc4148474deb84dad38a": {
      "type": "Ybodychange",
      "commitMessage": "ConfiguredFailoverProxyProvider should not create a NameNode proxy with an underlying retry proxy. Contributed by Uma Maheswara Rao G.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1244845 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/02/12 7:59 PM",
      "commitName": "83a922b55ee22ef8e643dc4148474deb84dad38a",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "19/01/12 11:41 AM",
      "commitNameOld": "02919e61f6935813bc3dbe23cc89e00e0cb02918",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 27.35,
      "commitsBetweenForRepo": 258,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   public synchronized T getProxy() {\n     AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n         if (NamenodeProtocol.class.equals(xface)) {\n           current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n-              current.address, conf, ugi);\n+              current.address, conf, ugi, false);\n         } else if (ClientProtocol.class.equals(xface)) {\n-          // TODO(HA): This will create a NN proxy with an underlying retry\n-          // proxy. We don\u0027t want this.\n-          current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n+          current.namenode \u003d DFSUtil.createNNProxyWithClientProtocol(\n+              current.address, conf, ugi, false);\n         } else {\n           throw new IllegalStateException(\n               \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n                   + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n                   + \" is not supported by \" + this.getClass().getName());\n         }\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n     return (T)current.namenode;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized T getProxy() {\n    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        if (NamenodeProtocol.class.equals(xface)) {\n          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n              current.address, conf, ugi, false);\n        } else if (ClientProtocol.class.equals(xface)) {\n          current.namenode \u003d DFSUtil.createNNProxyWithClientProtocol(\n              current.address, conf, ugi, false);\n        } else {\n          throw new IllegalStateException(\n              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n                  + \" is not supported by \" + this.getClass().getName());\n        }\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return (T)current.namenode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
      "extendedDetails": {}
    },
    "212678f036f4f96493bc14a584e758f97cf65573": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-2767. ConfiguredFailoverProxyProvider should support NameNodeProtocol. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1232284 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/01/12 7:10 PM",
      "commitName": "212678f036f4f96493bc14a584e758f97cf65573",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-2767. ConfiguredFailoverProxyProvider should support NameNodeProtocol. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1232284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/01/12 7:10 PM",
          "commitName": "212678f036f4f96493bc14a584e758f97cf65573",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/12/11 1:49 PM",
          "commitNameOld": "57ef902bbc798eb25e86a7d41571b0be4f2270f0",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 28.22,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,24 @@\n-  public synchronized Object getProxy() {\n+  public synchronized T getProxy() {\n     AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n-        // TODO(HA): This will create a NN proxy with an underlying retry\n-        // proxy. We don\u0027t want this.\n-        current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n+        if (NamenodeProtocol.class.equals(xface)) {\n+          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n+              current.address, conf, ugi);\n+        } else if (ClientProtocol.class.equals(xface)) {\n+          // TODO(HA): This will create a NN proxy with an underlying retry\n+          // proxy. We don\u0027t want this.\n+          current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n+        } else {\n+          throw new IllegalStateException(\n+              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n+                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n+                  + \" is not supported by \" + this.getClass().getName());\n+        }\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n-    return current.namenode;\n+    return (T)current.namenode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized T getProxy() {\n    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        if (NamenodeProtocol.class.equals(xface)) {\n          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n              current.address, conf, ugi);\n        } else if (ClientProtocol.class.equals(xface)) {\n          // TODO(HA): This will create a NN proxy with an underlying retry\n          // proxy. We don\u0027t want this.\n          current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n        } else {\n          throw new IllegalStateException(\n              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n                  + \" is not supported by \" + this.getClass().getName());\n        }\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return (T)current.namenode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
          "extendedDetails": {
            "oldValue": "Object",
            "newValue": "T"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2767. ConfiguredFailoverProxyProvider should support NameNodeProtocol. Contributed by Uma Maheswara Rao G.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1232284 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/01/12 7:10 PM",
          "commitName": "212678f036f4f96493bc14a584e758f97cf65573",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "19/12/11 1:49 PM",
          "commitNameOld": "57ef902bbc798eb25e86a7d41571b0be4f2270f0",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 28.22,
          "commitsBetweenForRepo": 130,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,24 @@\n-  public synchronized Object getProxy() {\n+  public synchronized T getProxy() {\n     AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n     if (current.namenode \u003d\u003d null) {\n       try {\n-        // TODO(HA): This will create a NN proxy with an underlying retry\n-        // proxy. We don\u0027t want this.\n-        current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n+        if (NamenodeProtocol.class.equals(xface)) {\n+          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n+              current.address, conf, ugi);\n+        } else if (ClientProtocol.class.equals(xface)) {\n+          // TODO(HA): This will create a NN proxy with an underlying retry\n+          // proxy. We don\u0027t want this.\n+          current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n+        } else {\n+          throw new IllegalStateException(\n+              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n+                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n+                  + \" is not supported by \" + this.getClass().getName());\n+        }\n       } catch (IOException e) {\n         LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n         throw new RuntimeException(e);\n       }\n     }\n-    return current.namenode;\n+    return (T)current.namenode;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized T getProxy() {\n    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        if (NamenodeProtocol.class.equals(xface)) {\n          current.namenode \u003d DFSUtil.createNNProxyWithNamenodeProtocol(\n              current.address, conf, ugi);\n        } else if (ClientProtocol.class.equals(xface)) {\n          // TODO(HA): This will create a NN proxy with an underlying retry\n          // proxy. We don\u0027t want this.\n          current.namenode \u003d DFSUtil.createNamenode(current.address, conf, ugi);\n        } else {\n          throw new IllegalStateException(\n              \"Upsupported protocol found when creating the proxy conection to NameNode. \"\n                  + ((xface !\u003d null) ? xface.getClass().getName() : xface)\n                  + \" is not supported by \" + this.getClass().getName());\n        }\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return (T)current.namenode;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java",
          "extendedDetails": {}
        }
      ]
    },
    "8b4f497af85b49519da2e05e8269db6c4e9d621f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-1973. HA: HDFS clients must handle namenode failover and switch over to the new active namenode. (atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1179896 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/10/11 4:26 PM",
      "commitName": "8b4f497af85b49519da2e05e8269db6c4e9d621f",
      "commitAuthor": "Aaron Myers",
      "diff": "@@ -0,0 +1,12 @@\n+  public synchronized Object getProxy() {\n+    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n+    if (current.namenode \u003d\u003d null) {\n+      try {\n+        current.namenode \u003d DFSUtil.createRPCNamenode(current.address, conf, ugi);\n+      } catch (IOException e) {\n+        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n+        throw new RuntimeException(e);\n+      }\n+    }\n+    return current.namenode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized Object getProxy() {\n    AddressRpcProxyPair current \u003d proxies.get(currentProxyIndex);\n    if (current.namenode \u003d\u003d null) {\n      try {\n        current.namenode \u003d DFSUtil.createRPCNamenode(current.address, conf, ugi);\n      } catch (IOException e) {\n        LOG.error(\"Failed to create RPC proxy to NameNode\", e);\n        throw new RuntimeException(e);\n      }\n    }\n    return current.namenode;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/ha/ConfiguredFailoverProxyProvider.java"
    }
  }
}