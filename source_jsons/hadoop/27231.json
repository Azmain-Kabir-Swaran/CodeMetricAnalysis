{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemTimelineReaderImpl.java",
  "functionName": "getEntities",
  "functionId": "getEntities___context-TimelineReaderContext__filters-TimelineEntityFilters__dataToRetrieve-TimelineDataToRetrieve",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
  "functionStartLine": 414,
  "functionEndLine": 427,
  "numCommitsSeen": 42,
  "timeTaken": 3875,
  "changeHistory": [
    "bca928d3c7b88f39e9bc1784889596f0b00964d4",
    "56142171b9528646f26072e022902549a16c8f27",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15",
    "2d59bc4458eaeba6e5b98709340db6f0f1204b59"
  ],
  "changeHistoryShort": {
    "bca928d3c7b88f39e9bc1784889596f0b00964d4": "Ybodychange",
    "56142171b9528646f26072e022902549a16c8f27": "Ybodychange",
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": "Ymultichange(Yparameterchange,Ybodychange)",
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": "Ymultichange(Yparameterchange,Ybodychange)",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ymultichange(Yparameterchange,Ybodychange)",
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": "Ymultichange(Yparameterchange,Ybodychange)",
    "2d59bc4458eaeba6e5b98709340db6f0f1204b59": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bca928d3c7b88f39e9bc1784889596f0b00964d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3879 [Storage implementation] Create HDFS backing storage implementation for ATS reads. Contributed by Abhishek Modi.\n",
      "commitDate": "11/10/18 9:14 PM",
      "commitName": "bca928d3c7b88f39e9bc1784889596f0b00964d4",
      "commitAuthor": "Vrushali C",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "4481561e4a3433197dd8e73f38856eef84f0fd03",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 407.93,
      "commitsBetweenForRepo": 3724,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n   public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n       TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n       throws IOException {\n-    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n+    String flowRunPathStr \u003d getFlowRunPath(context.getUserId(),\n         context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n         context.getAppId());\n-    File dir \u003d\n-        new File(new File(rootPath, ENTITIES_DIR),\n-            context.getClusterId() + File.separator + flowRunPath +\n-            File.separator + context.getAppId() + File.separator +\n-            context.getEntityType());\n-    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n+    Path clusterIdPath \u003d new Path(entitiesPath, context.getClusterId());\n+    Path flowRunPath \u003d new Path(clusterIdPath, flowRunPathStr);\n+    Path appIdPath \u003d new Path(flowRunPath, context.getAppId());\n+    Path entityTypePath \u003d new Path(appIdPath, context.getEntityType());\n+\n+    return getEntities(entityTypePath, context.getEntityType(), filters,\n+            dataToRetrieve);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    String flowRunPathStr \u003d getFlowRunPath(context.getUserId(),\n        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n        context.getAppId());\n    Path clusterIdPath \u003d new Path(entitiesPath, context.getClusterId());\n    Path flowRunPath \u003d new Path(clusterIdPath, flowRunPathStr);\n    Path appIdPath \u003d new Path(flowRunPath, context.getAppId());\n    Path entityTypePath \u003d new Path(appIdPath, context.getEntityType());\n\n    return getEntities(entityTypePath, context.getEntityType(), filters,\n            dataToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "56142171b9528646f26072e022902549a16c8f27": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5359. FileSystemTimelineReader/Writer uses unix-specific default storage path (Sangjin Lee via Varun Saxena)\n",
      "commitDate": "13/07/16 8:45 AM",
      "commitName": "56142171b9528646f26072e022902549a16c8f27",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:46 AM",
      "commitNameOld": "0a9b085f052b5ebaf319bec7609c77d7f1684a4a",
      "commitAuthorOld": "Li Lu",
      "daysBetweenCommits": 3.0,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,13 @@\n   public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n       TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n       throws IOException {\n     String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n         context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n         context.getAppId());\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n-            context.getClusterId() + \"/\" + flowRunPath + \"/\" +\n-            context.getAppId() + \"/\" + context.getEntityType());\n+            context.getClusterId() + File.separator + flowRunPath +\n+            File.separator + context.getAppId() + File.separator +\n+            context.getEntityType());\n     return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n        context.getAppId());\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            context.getClusterId() + File.separator + flowRunPath +\n            File.separator + context.getAppId() + File.separator +\n            context.getEntityType());\n    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
      "extendedDetails": {}
    },
    "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,12 @@\n-  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n-      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n-      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n-      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n-      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n-    String flowRunPath \u003d\n-        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n+  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n+      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n+      throws IOException {\n+    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n+        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n+        context.getAppId());\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n-            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n-    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n-        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n-        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n+            context.getClusterId() + \"/\" + flowRunPath + \"/\" +\n+            context.getAppId() + \"/\" + context.getEntityType());\n+    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n        context.getAppId());\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            context.getClusterId() + \"/\" + flowRunPath + \"/\" +\n            context.getAppId() + \"/\" + context.getEntityType());\n    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[context-TimelineReaderContext, filters-TimelineEntityFilters, dataToRetrieve-TimelineDataToRetrieve]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4446. Refactor reader API for better extensibility (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9cb1287e9b8425f91de925f411c3c2a8fa9fe2a3",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthorOld": "Naganarasimha",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,12 @@\n-  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n-      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n-      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n-      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n-      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n-    String flowRunPath \u003d\n-        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n+  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n+      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n+      throws IOException {\n+    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n+        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n+        context.getAppId());\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n-            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n-    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n-        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n-        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n+            context.getClusterId() + \"/\" + flowRunPath + \"/\" +\n+            context.getAppId() + \"/\" + context.getEntityType());\n+    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(TimelineReaderContext context,\n      TimelineEntityFilters filters, TimelineDataToRetrieve dataToRetrieve)\n      throws IOException {\n    String flowRunPath \u003d getFlowRunPath(context.getUserId(),\n        context.getClusterId(), context.getFlowName(), context.getFlowRunId(),\n        context.getAppId());\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            context.getClusterId() + \"/\" + flowRunPath + \"/\" +\n            context.getAppId() + \"/\" + context.getEntityType());\n    return getEntities(dir, context.getEntityType(), filters, dataToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "6934b05c7117a12286fb2ba7a47f75e227cacb22": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
      "commitAuthor": "Naganarasimha",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,17 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n       TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n         getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n-    return getEntities(dir, entityType, limit,\n-        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n+    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n         eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4238. createdTime and modifiedTime is not reported while publishing entities to ATSv2. (Varun Saxena via Naganarasimha G R)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "6934b05c7117a12286fb2ba7a47f75e227cacb22",
          "commitAuthor": "Naganarasimha",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthorOld": "Li Lu",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,17 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n-      Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n       TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n         getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n-    return getEntities(dir, entityType, limit,\n-        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n+    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n         eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit, createdTimeBegin, createdTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n       TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n-        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n+        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n     return getEntities(dir, entityType, limit,\n         createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n         eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit,\n        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 6,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n       TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n-        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n+        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n     return getEntities(dir, entityType, limit,\n         createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n         eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowName, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit,\n        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "1f710484e5b8ab4d5c67379c012004e8a4242d15": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n+      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n         getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n     return getEntities(dir, entityType, limit,\n         createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n-        eventFilters, fieldsToRetrieve);\n+        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit,\n        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {
            "oldValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, fieldsToRetrieve-EnumSet\u003cField\u003e]",
            "newValue": "[userId-String, clusterId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, limit-Long, createdTimeBegin-Long, createdTimeEnd-Long, modifiedTimeBegin-Long, modifiedTimeEnd-Long, relatesTo-Map\u003cString,Set\u003cString\u003e\u003e, isRelatedTo-Map\u003cString,Set\u003cString\u003e\u003e, infoFilters-Map\u003cString,Object\u003e, configFilters-Map\u003cString,String\u003e, metricFilters-Set\u003cString\u003e, eventFilters-Set\u003cString\u003e, confsToRetrieve-TimelineFilterList, metricsToRetrieve-TimelineFilterList, fieldsToRetrieve-EnumSet\u003cField\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3862. Support for fetching specific configs and metrics based on prefixes (Varun Saxena via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "1f710484e5b8ab4d5c67379c012004e8a4242d15",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n   public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       Long limit, Long createdTimeBegin, Long createdTimeEnd,\n       Long modifiedTimeBegin, Long modifiedTimeEnd,\n       Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n       Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n       Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n+      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n       EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n     String flowRunPath \u003d\n         getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n     File dir \u003d\n         new File(new File(rootPath, ENTITIES_DIR),\n             clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n     return getEntities(dir, entityType, limit,\n         createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n         relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n-        eventFilters, fieldsToRetrieve);\n+        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      TimelineFilterList confsToRetrieve, TimelineFilterList metricsToRetrieve,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit,\n        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, confsToRetrieve, metricsToRetrieve, fieldsToRetrieve);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2d59bc4458eaeba6e5b98709340db6f0f1204b59": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3051. Created storage oriented reader interface for fetching raw entity data and made the filesystem based implementation. Contributed by Varun Saxena.\n\n(cherry picked from commit 499ce52c7b645ec0b1cc8ac62dc9a3127b987a20)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2d59bc4458eaeba6e5b98709340db6f0f1204b59",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,18 @@\n+  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n+      String flowId, Long flowRunId, String appId, String entityType,\n+      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n+      Long modifiedTimeBegin, Long modifiedTimeEnd,\n+      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n+      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n+      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n+      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n+    String flowRunPath \u003d\n+        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n+    File dir \u003d\n+        new File(new File(rootPath, ENTITIES_DIR),\n+            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n+    return getEntities(dir, entityType, limit,\n+        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n+        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n+        eventFilters, fieldsToRetrieve);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Set\u003cTimelineEntity\u003e getEntities(String userId, String clusterId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      Long limit, Long createdTimeBegin, Long createdTimeEnd,\n      Long modifiedTimeBegin, Long modifiedTimeEnd,\n      Map\u003cString, Set\u003cString\u003e\u003e relatesTo, Map\u003cString, Set\u003cString\u003e\u003e isRelatedTo,\n      Map\u003cString, Object\u003e infoFilters, Map\u003cString, String\u003e configFilters,\n      Set\u003cString\u003e metricFilters, Set\u003cString\u003e eventFilters,\n      EnumSet\u003cField\u003e fieldsToRetrieve) throws IOException {\n    String flowRunPath \u003d\n        getFlowRunPath(userId, clusterId, flowId, flowRunId, appId);\n    File dir \u003d\n        new File(new File(rootPath, ENTITIES_DIR),\n            clusterId + \"/\" + flowRunPath + \"/\" + appId + \"/\" + entityType);\n    return getEntities(dir, entityType, limit,\n        createdTimeBegin, createdTimeEnd, modifiedTimeBegin, modifiedTimeEnd,\n        relatesTo, isRelatedTo, infoFilters, configFilters, metricFilters,\n        eventFilters, fieldsToRetrieve);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/FileSystemTimelineReaderImpl.java"
    }
  }
}