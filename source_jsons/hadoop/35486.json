{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NodeManagerHardwareUtils.java",
  "functionName": "getVCores",
  "functionId": "getVCores___plugin-ResourceCalculatorPlugin__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java",
  "functionStartLine": 207,
  "functionEndLine": 213,
  "numCommitsSeen": 10,
  "timeTaken": 1780,
  "changeHistory": [
    "3541ed80685f25486f33ef0f553854ccbdeb51d4",
    "500a1d9c76ec612b4e737888f4be79951c11591d"
  ],
  "changeHistoryShort": {
    "3541ed80685f25486f33ef0f553854ccbdeb51d4": "Ybodychange",
    "500a1d9c76ec612b4e737888f4be79951c11591d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3541ed80685f25486f33ef0f553854ccbdeb51d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4330. MiniYARNCluster is showing multiple  Failed to instantiate default resource calculator warning messages. Contributed by Varun Saxena\n",
      "commitDate": "23/11/16 12:42 AM",
      "commitName": "3541ed80685f25486f33ef0f553854ccbdeb51d4",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "26/05/15 11:38 AM",
      "commitNameOld": "500a1d9c76ec612b4e737888f4be79951c11591d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 546.59,
      "commitsBetweenForRepo": 3985,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,7 @@\n   public static int getVCores(ResourceCalculatorPlugin plugin,\n       Configuration conf) {\n-\n-    int cores;\n-    boolean hardwareDetectionEnabled \u003d\n-        conf.getBoolean(\n-          YarnConfiguration.NM_ENABLE_HARDWARE_CAPABILITY_DETECTION,\n-          YarnConfiguration.DEFAULT_NM_ENABLE_HARDWARE_CAPABILITY_DETECTION);\n-\n-    String message;\n-    if (!hardwareDetectionEnabled || plugin \u003d\u003d null) {\n-      cores \u003d\n-          conf.getInt(YarnConfiguration.NM_VCORES,\n-            YarnConfiguration.DEFAULT_NM_VCORES);\n-      if (cores \u003d\u003d -1) {\n-        cores \u003d YarnConfiguration.DEFAULT_NM_VCORES;\n-      }\n-    } else {\n-      cores \u003d conf.getInt(YarnConfiguration.NM_VCORES, -1);\n-      if (cores \u003d\u003d -1) {\n-        float physicalCores \u003d\n-            NodeManagerHardwareUtils.getContainersCPUs(plugin, conf);\n-        float multiplier \u003d\n-            conf.getFloat(YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER,\n-                YarnConfiguration.DEFAULT_NM_PCORES_VCORES_MULTIPLIER);\n-        if (multiplier \u003e 0) {\n-          float tmp \u003d physicalCores * multiplier;\n-          if (tmp \u003e 0 \u0026\u0026 tmp \u003c 1) {\n-            // on a single core machine - tmp can be between 0 and 1\n-            cores \u003d 1;\n-          } else {\n-            cores \u003d (int) tmp;\n-          }\n-        } else {\n-          message \u003d \"Illegal value for \"\n-              + YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER\n-              + \". Value must be greater than 0.\";\n-          throw new IllegalArgumentException(message);\n-        }\n-      }\n+    if (!isHardwareDetectionEnabled(conf) || plugin \u003d\u003d null) {\n+      return getConfiguredVCores(conf);\n     }\n-    if(cores \u003c\u003d 0) {\n-      message \u003d \"Illegal value for \" + YarnConfiguration.NM_VCORES\n-          + \". Value must be greater than 0.\";\n-      throw new IllegalArgumentException(message);\n-    }\n-\n-    return cores;\n+    return getVCoresInternal(plugin, conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static int getVCores(ResourceCalculatorPlugin plugin,\n      Configuration conf) {\n    if (!isHardwareDetectionEnabled(conf) || plugin \u003d\u003d null) {\n      return getConfiguredVCores(conf);\n    }\n    return getVCoresInternal(plugin, conf);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java",
      "extendedDetails": {}
    },
    "500a1d9c76ec612b4e737888f4be79951c11591d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-160. Enhanced NodeManager to automatically obtain cpu/memory values from underlying OS when configured to do so. Contributed by Varun Vasudev.\n",
      "commitDate": "26/05/15 11:38 AM",
      "commitName": "500a1d9c76ec612b4e737888f4be79951c11591d",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,49 @@\n+  public static int getVCores(ResourceCalculatorPlugin plugin,\n+      Configuration conf) {\n+\n+    int cores;\n+    boolean hardwareDetectionEnabled \u003d\n+        conf.getBoolean(\n+          YarnConfiguration.NM_ENABLE_HARDWARE_CAPABILITY_DETECTION,\n+          YarnConfiguration.DEFAULT_NM_ENABLE_HARDWARE_CAPABILITY_DETECTION);\n+\n+    String message;\n+    if (!hardwareDetectionEnabled || plugin \u003d\u003d null) {\n+      cores \u003d\n+          conf.getInt(YarnConfiguration.NM_VCORES,\n+            YarnConfiguration.DEFAULT_NM_VCORES);\n+      if (cores \u003d\u003d -1) {\n+        cores \u003d YarnConfiguration.DEFAULT_NM_VCORES;\n+      }\n+    } else {\n+      cores \u003d conf.getInt(YarnConfiguration.NM_VCORES, -1);\n+      if (cores \u003d\u003d -1) {\n+        float physicalCores \u003d\n+            NodeManagerHardwareUtils.getContainersCPUs(plugin, conf);\n+        float multiplier \u003d\n+            conf.getFloat(YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER,\n+                YarnConfiguration.DEFAULT_NM_PCORES_VCORES_MULTIPLIER);\n+        if (multiplier \u003e 0) {\n+          float tmp \u003d physicalCores * multiplier;\n+          if (tmp \u003e 0 \u0026\u0026 tmp \u003c 1) {\n+            // on a single core machine - tmp can be between 0 and 1\n+            cores \u003d 1;\n+          } else {\n+            cores \u003d (int) tmp;\n+          }\n+        } else {\n+          message \u003d \"Illegal value for \"\n+              + YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER\n+              + \". Value must be greater than 0.\";\n+          throw new IllegalArgumentException(message);\n+        }\n+      }\n+    }\n+    if(cores \u003c\u003d 0) {\n+      message \u003d \"Illegal value for \" + YarnConfiguration.NM_VCORES\n+          + \". Value must be greater than 0.\";\n+      throw new IllegalArgumentException(message);\n+    }\n+\n+    return cores;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static int getVCores(ResourceCalculatorPlugin plugin,\n      Configuration conf) {\n\n    int cores;\n    boolean hardwareDetectionEnabled \u003d\n        conf.getBoolean(\n          YarnConfiguration.NM_ENABLE_HARDWARE_CAPABILITY_DETECTION,\n          YarnConfiguration.DEFAULT_NM_ENABLE_HARDWARE_CAPABILITY_DETECTION);\n\n    String message;\n    if (!hardwareDetectionEnabled || plugin \u003d\u003d null) {\n      cores \u003d\n          conf.getInt(YarnConfiguration.NM_VCORES,\n            YarnConfiguration.DEFAULT_NM_VCORES);\n      if (cores \u003d\u003d -1) {\n        cores \u003d YarnConfiguration.DEFAULT_NM_VCORES;\n      }\n    } else {\n      cores \u003d conf.getInt(YarnConfiguration.NM_VCORES, -1);\n      if (cores \u003d\u003d -1) {\n        float physicalCores \u003d\n            NodeManagerHardwareUtils.getContainersCPUs(plugin, conf);\n        float multiplier \u003d\n            conf.getFloat(YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER,\n                YarnConfiguration.DEFAULT_NM_PCORES_VCORES_MULTIPLIER);\n        if (multiplier \u003e 0) {\n          float tmp \u003d physicalCores * multiplier;\n          if (tmp \u003e 0 \u0026\u0026 tmp \u003c 1) {\n            // on a single core machine - tmp can be between 0 and 1\n            cores \u003d 1;\n          } else {\n            cores \u003d (int) tmp;\n          }\n        } else {\n          message \u003d \"Illegal value for \"\n              + YarnConfiguration.NM_PCORES_VCORES_MULTIPLIER\n              + \". Value must be greater than 0.\";\n          throw new IllegalArgumentException(message);\n        }\n      }\n    }\n    if(cores \u003c\u003d 0) {\n      message \u003d \"Illegal value for \" + YarnConfiguration.NM_VCORES\n          + \". Value must be greater than 0.\";\n      throw new IllegalArgumentException(message);\n    }\n\n    return cores;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/NodeManagerHardwareUtils.java"
    }
  }
}