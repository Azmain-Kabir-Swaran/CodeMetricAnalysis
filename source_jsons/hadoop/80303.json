{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TrashPolicy.java",
  "functionName": "getInstance",
  "functionId": "getInstance___conf-Configuration__fs-FileSystem",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicy.java",
  "functionStartLine": 144,
  "functionEndLine": 150,
  "numCommitsSeen": 9,
  "timeTaken": 1488,
  "changeHistory": [
    "12d739a34ba868b3f7f5adf7f37a60d4aca9061b",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf"
  ],
  "changeHistoryShort": {
    "12d739a34ba868b3f7f5adf7f37a60d4aca9061b": "Yexceptionschange",
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "12d739a34ba868b3f7f5adf7f37a60d4aca9061b": {
      "type": "Yexceptionschange",
      "commitMessage": "HADOOP-13700. Remove unthrown IOException from TrashPolicy#initialize and #getInstance signatures.\n",
      "commitDate": "12/10/16 3:19 PM",
      "commitName": "12d739a34ba868b3f7f5adf7f37a60d4aca9061b",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/10/16 1:46 PM",
      "commitNameOld": "8a09bf7c19d9d2f6d6853d45e11b0d38c7c67f2a",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,7 @@\n-  public static TrashPolicy getInstance(Configuration conf, FileSystem fs)\n-      throws IOException {\n+  public static TrashPolicy getInstance(Configuration conf, FileSystem fs) {\n     Class\u003c? extends TrashPolicy\u003e trashClass \u003d conf.getClass(\n         \"fs.trash.classname\", TrashPolicyDefault.class, TrashPolicy.class);\n     TrashPolicy trash \u003d ReflectionUtils.newInstance(trashClass, conf);\n     trash.initialize(conf, fs); // initialize TrashPolicy\n     return trash;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static TrashPolicy getInstance(Configuration conf, FileSystem fs) {\n    Class\u003c? extends TrashPolicy\u003e trashClass \u003d conf.getClass(\n        \"fs.trash.classname\", TrashPolicyDefault.class, TrashPolicy.class);\n    TrashPolicy trash \u003d ReflectionUtils.newInstance(trashClass, conf);\n    trash.initialize(conf, fs); // initialize TrashPolicy\n    return trash;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicy.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[]"
      }
    },
    "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8831. Trash Support for deletion in HDFS encryption zone. Contributed by Xiaoyu Yao.\n",
      "commitDate": "04/12/15 10:39 AM",
      "commitName": "cbc7b6bf97a80c39d4bbb3005e42dacae6726baf",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,8 @@\n+  public static TrashPolicy getInstance(Configuration conf, FileSystem fs)\n+      throws IOException {\n+    Class\u003c? extends TrashPolicy\u003e trashClass \u003d conf.getClass(\n+        \"fs.trash.classname\", TrashPolicyDefault.class, TrashPolicy.class);\n+    TrashPolicy trash \u003d ReflectionUtils.newInstance(trashClass, conf);\n+    trash.initialize(conf, fs); // initialize TrashPolicy\n+    return trash;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static TrashPolicy getInstance(Configuration conf, FileSystem fs)\n      throws IOException {\n    Class\u003c? extends TrashPolicy\u003e trashClass \u003d conf.getClass(\n        \"fs.trash.classname\", TrashPolicyDefault.class, TrashPolicy.class);\n    TrashPolicy trash \u003d ReflectionUtils.newInstance(trashClass, conf);\n    trash.initialize(conf, fs); // initialize TrashPolicy\n    return trash;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/TrashPolicy.java"
    }
  }
}