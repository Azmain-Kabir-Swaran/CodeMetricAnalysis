{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MetricsLoggerTask.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java",
  "functionStartLine": 76,
  "functionEndLine": 110,
  "numCommitsSeen": 2,
  "timeTaken": 909,
  "changeHistory": [
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5"
  ],
  "changeHistoryShort": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8953. DataNode Metrics logging (Contributed by Kanaka Kumar Avvaru)\n",
      "commitDate": "15/09/15 11:48 AM",
      "commitName": "ce69c9b54c642cfbe789fc661cfc7dcbb07b4ac5",
      "commitAuthor": "Vinayakumar B",
      "diff": "@@ -0,0 +1,35 @@\n+  public void run() {\n+    // Skip querying metrics if there are no known appenders.\n+    if (!metricsLog.isInfoEnabled() || !hasAppenders(metricsLog)\n+        || objectName \u003d\u003d null) {\n+      return;\n+    }\n+\n+    metricsLog.info(\" \u003e\u003e Begin \" + nodeName + \" metrics dump\");\n+    final MBeanServer server \u003d ManagementFactory.getPlatformMBeanServer();\n+\n+    // Iterate over each MBean.\n+    for (final ObjectName mbeanName : server.queryNames(objectName, null)) {\n+      try {\n+        MBeanInfo mBeanInfo \u003d server.getMBeanInfo(mbeanName);\n+        final String mBeanNameName \u003d MBeans.getMbeanNameName(mbeanName);\n+        final Set\u003cString\u003e attributeNames \u003d getFilteredAttributes(mBeanInfo);\n+\n+        final AttributeList attributes \u003d server.getAttributes(mbeanName,\n+            attributeNames.toArray(new String[attributeNames.size()]));\n+\n+        for (Object o : attributes) {\n+          final Attribute attribute \u003d (Attribute) o;\n+          final Object value \u003d attribute.getValue();\n+          final String valueStr \u003d (value !\u003d null) ? value.toString() : \"null\";\n+          // Truncate the value if it is too long\n+          metricsLog.info(mBeanNameName + \":\" + attribute.getName() + \"\u003d\"\n+              + trimLine(valueStr));\n+        }\n+      } catch (Exception e) {\n+        metricsLog.error(\"Failed to get \" + nodeName + \" metrics for mbean \"\n+            + mbeanName.toString(), e);\n+      }\n+    }\n+    metricsLog.info(\" \u003c\u003c End \" + nodeName + \" metrics dump\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void run() {\n    // Skip querying metrics if there are no known appenders.\n    if (!metricsLog.isInfoEnabled() || !hasAppenders(metricsLog)\n        || objectName \u003d\u003d null) {\n      return;\n    }\n\n    metricsLog.info(\" \u003e\u003e Begin \" + nodeName + \" metrics dump\");\n    final MBeanServer server \u003d ManagementFactory.getPlatformMBeanServer();\n\n    // Iterate over each MBean.\n    for (final ObjectName mbeanName : server.queryNames(objectName, null)) {\n      try {\n        MBeanInfo mBeanInfo \u003d server.getMBeanInfo(mbeanName);\n        final String mBeanNameName \u003d MBeans.getMbeanNameName(mbeanName);\n        final Set\u003cString\u003e attributeNames \u003d getFilteredAttributes(mBeanInfo);\n\n        final AttributeList attributes \u003d server.getAttributes(mbeanName,\n            attributeNames.toArray(new String[attributeNames.size()]));\n\n        for (Object o : attributes) {\n          final Attribute attribute \u003d (Attribute) o;\n          final Object value \u003d attribute.getValue();\n          final String valueStr \u003d (value !\u003d null) ? value.toString() : \"null\";\n          // Truncate the value if it is too long\n          metricsLog.info(mBeanNameName + \":\" + attribute.getName() + \"\u003d\"\n              + trimLine(valueStr));\n        }\n      } catch (Exception e) {\n        metricsLog.error(\"Failed to get \" + nodeName + \" metrics for mbean \"\n            + mbeanName.toString(), e);\n      }\n    }\n    metricsLog.info(\" \u003c\u003c End \" + nodeName + \" metrics dump\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/common/MetricsLoggerTask.java"
    }
  }
}