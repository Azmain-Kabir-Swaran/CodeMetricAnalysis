{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DockerLinuxContainerRuntime.java",
  "functionName": "getExposedPorts",
  "functionId": "getExposedPorts___container-Container",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
  "functionStartLine": 1107,
  "functionEndLine": 1121,
  "numCommitsSeen": 91,
  "timeTaken": 2485,
  "changeHistory": [
    "29465bf169a7e348a4f32265083450faf66d5631",
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf"
  ],
  "changeHistoryShort": {
    "29465bf169a7e348a4f32265083450faf66d5631": "Yexceptionschange",
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29465bf169a7e348a4f32265083450faf66d5631": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-9560. Restructure DockerLinuxContainerRuntime to extend OCIContainerRuntime.\n           Contributed by Eric Badger, Jim Brennan, Craig Condit\n",
      "commitDate": "28/06/19 2:18 PM",
      "commitName": "29465bf169a7e348a4f32265083450faf66d5631",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/04/19 11:24 AM",
      "commitNameOld": "254efc93588beff6b93fd887ddd43a8e14ea4903",
      "commitAuthorOld": "Eric Badger",
      "daysBetweenCommits": 74.12,
      "commitsBetweenForRepo": 531,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n-  public String getExposedPorts(Container container)\n-      throws ContainerExecutionException {\n+  public String getExposedPorts(Container container) {\n     ContainerId containerId \u003d container.getContainerId();\n     String containerIdStr \u003d containerId.toString();\n     DockerInspectCommand inspectCommand \u003d\n         new DockerInspectCommand(containerIdStr).getExposedPorts();\n     try {\n       String output \u003d executeDockerInspect(containerId, inspectCommand);\n       return output;\n     } catch (ContainerExecutionException e) {\n       LOG.error(\"Error when writing command to temp file\", e);\n     } catch (PrivilegedOperationException e) {\n       LOG.error(\"Error when executing command.\", e);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String getExposedPorts(Container container) {\n    ContainerId containerId \u003d container.getContainerId();\n    String containerIdStr \u003d containerId.toString();\n    DockerInspectCommand inspectCommand \u003d\n        new DockerInspectCommand(containerIdStr).getExposedPorts();\n    try {\n      String output \u003d executeDockerInspect(containerId, inspectCommand);\n      return output;\n    } catch (ContainerExecutionException e) {\n      LOG.error(\"Error when writing command to temp file\", e);\n    } catch (PrivilegedOperationException e) {\n      LOG.error(\"Error when executing command.\", e);\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java",
      "extendedDetails": {
        "oldValue": "[ContainerExecutionException]",
        "newValue": "[]"
      }
    },
    "f82922dcfae0b7e3e68ce970c441d8b7edc59acf": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5168. Added exposed port information for Docker container.\n           Contributed by Xun Liu\n",
      "commitDate": "21/12/18 4:44 PM",
      "commitName": "f82922dcfae0b7e3e68ce970c441d8b7edc59acf",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,16 @@\n+  public String getExposedPorts(Container container)\n+      throws ContainerExecutionException {\n+    ContainerId containerId \u003d container.getContainerId();\n+    String containerIdStr \u003d containerId.toString();\n+    DockerInspectCommand inspectCommand \u003d\n+        new DockerInspectCommand(containerIdStr).getExposedPorts();\n+    try {\n+      String output \u003d executeDockerInspect(containerId, inspectCommand);\n+      return output;\n+    } catch (ContainerExecutionException e) {\n+      LOG.error(\"Error when writing command to temp file\", e);\n+    } catch (PrivilegedOperationException e) {\n+      LOG.error(\"Error when executing command.\", e);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String getExposedPorts(Container container)\n      throws ContainerExecutionException {\n    ContainerId containerId \u003d container.getContainerId();\n    String containerIdStr \u003d containerId.toString();\n    DockerInspectCommand inspectCommand \u003d\n        new DockerInspectCommand(containerIdStr).getExposedPorts();\n    try {\n      String output \u003d executeDockerInspect(containerId, inspectCommand);\n      return output;\n    } catch (ContainerExecutionException e) {\n      LOG.error(\"Error when writing command to temp file\", e);\n    } catch (PrivilegedOperationException e) {\n      LOG.error(\"Error when executing command.\", e);\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/linux/runtime/DockerLinuxContainerRuntime.java"
    }
  }
}