{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeafQueue.java",
  "functionName": "updateCurrentResourceLimits",
  "functionId": "updateCurrentResourceLimits___currentResourceLimits-ResourceLimits__clusterResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
  "functionStartLine": 1792,
  "functionEndLine": 1806,
  "numCommitsSeen": 176,
  "timeTaken": 4413,
  "changeHistory": [
    "5e798b1a0ddceeaf54703b94052501867156e979",
    "189a63a719c63b67a1783a280bfc2f72dcb55277",
    "487374b7fe0c92fc7eb1406c568952722b5d5b15"
  ],
  "changeHistoryShort": {
    "5e798b1a0ddceeaf54703b94052501867156e979": "Ybodychange",
    "189a63a719c63b67a1783a280bfc2f72dcb55277": "Ybodychange",
    "487374b7fe0c92fc7eb1406c568952722b5d5b15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5e798b1a0ddceeaf54703b94052501867156e979": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6471. Support to add min/max resource configuration for a queue. (Sunil G via wangda)\n\nChange-Id: I9213f5297a6841fab5c573e85ee4c4e5f4a0b7ff\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "5e798b1a0ddceeaf54703b94052501867156e979",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/11/17 1:01 PM",
      "commitNameOld": "ac4d2b1081d8836a21bc70e77f4e6cd2071a9949",
      "commitAuthorOld": "Konstantinos Karanasos",
      "daysBetweenCommits": 28.25,
      "commitsBetweenForRepo": 137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,15 @@\n   private void updateCurrentResourceLimits(\n       ResourceLimits currentResourceLimits, Resource clusterResource) {\n     // TODO: need consider non-empty node labels when resource limits supports\n     // node labels\n     // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n     // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n     // this. So need cap limits by queue\u0027s max capacity here.\n     this.cachedResourceLimitsForHeadroom \u003d\n         new ResourceLimits(currentResourceLimits.getLimit());\n-    Resource queueMaxResource \u003d\n-        Resources.multiplyAndNormalizeDown(resourceCalculator, labelManager\n-            .getResourceByLabel(RMNodeLabelsManager.NO_LABEL, clusterResource),\n-            queueCapacities\n-                .getAbsoluteMaximumCapacity(RMNodeLabelsManager.NO_LABEL),\n-            minimumAllocation);\n+    Resource queueMaxResource \u003d getEffectiveMaxCapacityDown(\n+        RMNodeLabelsManager.NO_LABEL, minimumAllocation);\n     this.cachedResourceLimitsForHeadroom.setLimit(Resources.min(\n         resourceCalculator, clusterResource, queueMaxResource,\n         currentResourceLimits.getLimit()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource) {\n    // TODO: need consider non-empty node labels when resource limits supports\n    // node labels\n    // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n    // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n    // this. So need cap limits by queue\u0027s max capacity here.\n    this.cachedResourceLimitsForHeadroom \u003d\n        new ResourceLimits(currentResourceLimits.getLimit());\n    Resource queueMaxResource \u003d getEffectiveMaxCapacityDown(\n        RMNodeLabelsManager.NO_LABEL, minimumAllocation);\n    this.cachedResourceLimitsForHeadroom.setLimit(Resources.min(\n        resourceCalculator, clusterResource, queueMaxResource,\n        currentResourceLimits.getLimit()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "189a63a719c63b67a1783a280bfc2f72dcb55277": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3434. Interaction between reservations and userlimit can result in significant ULF violation\n",
      "commitDate": "23/04/15 7:39 AM",
      "commitName": "189a63a719c63b67a1783a280bfc2f72dcb55277",
      "commitAuthor": "tgraves",
      "commitDateOld": "21/04/15 8:06 PM",
      "commitNameOld": "bdd90110e6904b59746812d9a093924a65e72280",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 1.48,
      "commitsBetweenForRepo": 17,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void updateCurrentResourceLimits(\n       ResourceLimits currentResourceLimits, Resource clusterResource) {\n     // TODO: need consider non-empty node labels when resource limits supports\n     // node labels\n     // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n     // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n     // this. So need cap limits by queue\u0027s max capacity here.\n-    this.currentResourceLimits \u003d currentResourceLimits;\n+    this.cachedResourceLimitsForHeadroom \u003d new ResourceLimits(currentResourceLimits.getLimit());\n     Resource queueMaxResource \u003d\n         Resources.multiplyAndNormalizeDown(resourceCalculator, labelManager\n             .getResourceByLabel(RMNodeLabelsManager.NO_LABEL, clusterResource),\n             queueCapacities\n                 .getAbsoluteMaximumCapacity(RMNodeLabelsManager.NO_LABEL),\n             minimumAllocation);\n-    this.currentResourceLimits.setLimit(Resources.min(resourceCalculator,\n+    this.cachedResourceLimitsForHeadroom.setLimit(Resources.min(resourceCalculator,\n         clusterResource, queueMaxResource, currentResourceLimits.getLimit()));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource) {\n    // TODO: need consider non-empty node labels when resource limits supports\n    // node labels\n    // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n    // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n    // this. So need cap limits by queue\u0027s max capacity here.\n    this.cachedResourceLimitsForHeadroom \u003d new ResourceLimits(currentResourceLimits.getLimit());\n    Resource queueMaxResource \u003d\n        Resources.multiplyAndNormalizeDown(resourceCalculator, labelManager\n            .getResourceByLabel(RMNodeLabelsManager.NO_LABEL, clusterResource),\n            queueCapacities\n                .getAbsoluteMaximumCapacity(RMNodeLabelsManager.NO_LABEL),\n            minimumAllocation);\n    this.cachedResourceLimitsForHeadroom.setLimit(Resources.min(resourceCalculator,\n        clusterResource, queueMaxResource, currentResourceLimits.getLimit()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {}
    },
    "487374b7fe0c92fc7eb1406c568952722b5d5b15": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3243. CapacityScheduler should pass headroom from parent to children to make sure ParentQueue obey its capacity limits. Contributed by Wangda Tan.\n",
      "commitDate": "17/03/15 10:24 AM",
      "commitName": "487374b7fe0c92fc7eb1406c568952722b5d5b15",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,17 @@\n+  private void updateCurrentResourceLimits(\n+      ResourceLimits currentResourceLimits, Resource clusterResource) {\n+    // TODO: need consider non-empty node labels when resource limits supports\n+    // node labels\n+    // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n+    // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n+    // this. So need cap limits by queue\u0027s max capacity here.\n+    this.currentResourceLimits \u003d currentResourceLimits;\n+    Resource queueMaxResource \u003d\n+        Resources.multiplyAndNormalizeDown(resourceCalculator, labelManager\n+            .getResourceByLabel(RMNodeLabelsManager.NO_LABEL, clusterResource),\n+            queueCapacities\n+                .getAbsoluteMaximumCapacity(RMNodeLabelsManager.NO_LABEL),\n+            minimumAllocation);\n+    this.currentResourceLimits.setLimit(Resources.min(resourceCalculator,\n+        clusterResource, queueMaxResource, currentResourceLimits.getLimit()));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void updateCurrentResourceLimits(\n      ResourceLimits currentResourceLimits, Resource clusterResource) {\n    // TODO: need consider non-empty node labels when resource limits supports\n    // node labels\n    // Even if ParentQueue will set limits respect child\u0027s max queue capacity,\n    // but when allocating reserved container, CapacityScheduler doesn\u0027t do\n    // this. So need cap limits by queue\u0027s max capacity here.\n    this.currentResourceLimits \u003d currentResourceLimits;\n    Resource queueMaxResource \u003d\n        Resources.multiplyAndNormalizeDown(resourceCalculator, labelManager\n            .getResourceByLabel(RMNodeLabelsManager.NO_LABEL, clusterResource),\n            queueCapacities\n                .getAbsoluteMaximumCapacity(RMNodeLabelsManager.NO_LABEL),\n            minimumAllocation);\n    this.currentResourceLimits.setLimit(Resources.min(resourceCalculator,\n        clusterResource, queueMaxResource, currentResourceLimits.getLimit()));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}