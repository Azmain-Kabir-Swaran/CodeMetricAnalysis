{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AllocationFileLoaderService.java",
  "functionName": "getDefaultPermissions",
  "functionId": "getDefaultPermissions",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/AllocationFileLoaderService.java",
  "functionStartLine": 340,
  "functionEndLine": 352,
  "numCommitsSeen": 41,
  "timeTaken": 2023,
  "changeHistory": [
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5"
  ],
  "changeHistoryShort": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-4997. Update fair scheduler to use pluggable auth provider (Contributed by Tao Jie via Daniel Templeton)\n",
      "commitDate": "30/11/16 9:50 AM",
      "commitName": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
      "commitAuthor": "Daniel Templeton",
      "diff": "@@ -0,0 +1,13 @@\n+  protected List\u003cPermission\u003e getDefaultPermissions() {\n+    if (defaultPermissions \u003d\u003d null) {\n+      defaultPermissions \u003d new ArrayList\u003c\u003e();\n+      Map\u003cAccessType, AccessControlList\u003e acls \u003d\n+          new HashMap\u003c\u003e();\n+      for (QueueACL acl : QueueACL.values()) {\n+        acls.put(SchedulerUtils.toAccessType(acl), EVERYBODY_ACL);\n+      }\n+      defaultPermissions.add(new Permission(\n+          new PrivilegedEntity(EntityType.QUEUE, ROOT), acls));\n+    }\n+    return defaultPermissions;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected List\u003cPermission\u003e getDefaultPermissions() {\n    if (defaultPermissions \u003d\u003d null) {\n      defaultPermissions \u003d new ArrayList\u003c\u003e();\n      Map\u003cAccessType, AccessControlList\u003e acls \u003d\n          new HashMap\u003c\u003e();\n      for (QueueACL acl : QueueACL.values()) {\n        acls.put(SchedulerUtils.toAccessType(acl), EVERYBODY_ACL);\n      }\n      defaultPermissions.add(new Permission(\n          new PrivilegedEntity(EntityType.QUEUE, ROOT), acls));\n    }\n    return defaultPermissions;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/AllocationFileLoaderService.java"
    }
  }
}