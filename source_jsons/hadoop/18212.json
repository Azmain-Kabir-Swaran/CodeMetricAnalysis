{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdmin.java",
  "functionName": "setQuota",
  "functionId": "setQuota___parameters-String[]__i-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
  "functionStartLine": 875,
  "functionEndLine": 918,
  "numCommitsSeen": 36,
  "timeTaken": 3092,
  "changeHistory": [
    "780df9034f265a8e602856b34cc21d9be02f5c48",
    "69fe4407ebd885fed69d9cf7f4dd17d3ba1acb60",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "9afb8025d6549f0ade0ae7d36f5e67cd20c500f4",
    "d98a2e6e2383f8b66def346409b0517aa32d298d"
  ],
  "changeHistoryShort": {
    "780df9034f265a8e602856b34cc21d9be02f5c48": "Ybodychange",
    "69fe4407ebd885fed69d9cf7f4dd17d3ba1acb60": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "9afb8025d6549f0ade0ae7d36f5e67cd20c500f4": "Ybodychange",
    "d98a2e6e2383f8b66def346409b0517aa32d298d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "780df9034f265a8e602856b34cc21d9be02f5c48": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13867. RBF: Add validation for max arguments for Router admin ls, clrQuota, setQuota, rm and nameservice commands. Contributed by Ayush Saxena.\n",
      "commitDate": "03/09/18 1:58 AM",
      "commitName": "780df9034f265a8e602856b34cc21d9be02f5c48",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "28/08/18 11:59 AM",
      "commitNameOld": "cb9d371ae2cda1624fc83316ddc09de37d8d0bd3",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.58,
      "commitsBetweenForRepo": 30,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,41 +1,44 @@\n   private boolean setQuota(String[] parameters, int i) throws IOException {\n     long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n     long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n \n     String mount \u003d parameters[i++];\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-nsQuota\")) {\n         i++;\n         try {\n           nsQuota \u003d Long.parseLong(parameters[i]);\n         } catch (Exception e) {\n           throw new IllegalArgumentException(\n               \"Cannot parse nsQuota: \" + parameters[i]);\n         }\n       } else if (parameters[i].equals(\"-ssQuota\")) {\n         i++;\n         try {\n           ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n               .string2long(parameters[i]);\n         } catch (Exception e) {\n           throw new IllegalArgumentException(\n               \"Cannot parse ssQuota: \" + parameters[i]);\n         }\n+      } else {\n+        throw new IllegalArgumentException(\n+            \"Invalid argument : \" + parameters[i]);\n       }\n \n       i++;\n     }\n \n     if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n       throw new IllegalArgumentException(\n           \"Input quota value should be a positive number.\");\n     }\n \n     if (nsQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n         ssQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET) {\n       throw new IllegalArgumentException(\n           \"Must specify at least one of -nsQuota and -ssQuota.\");\n     }\n \n     return updateQuota(mount, nsQuota, ssQuota);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean setQuota(String[] parameters, int i) throws IOException {\n    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n\n    String mount \u003d parameters[i++];\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-nsQuota\")) {\n        i++;\n        try {\n          nsQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          throw new IllegalArgumentException(\n              \"Cannot parse nsQuota: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-ssQuota\")) {\n        i++;\n        try {\n          ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n              .string2long(parameters[i]);\n        } catch (Exception e) {\n          throw new IllegalArgumentException(\n              \"Cannot parse ssQuota: \" + parameters[i]);\n        }\n      } else {\n        throw new IllegalArgumentException(\n            \"Invalid argument : \" + parameters[i]);\n      }\n\n      i++;\n    }\n\n    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          \"Input quota value should be a positive number.\");\n    }\n\n    if (nsQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n        ssQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET) {\n      throw new IllegalArgumentException(\n          \"Must specify at least one of -nsQuota and -ssQuota.\");\n    }\n\n    return updateQuota(mount, nsQuota, ssQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "69fe4407ebd885fed69d9cf7f4dd17d3ba1acb60": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13307. RBF: Improve the use of setQuota command. Contributed by liuhongtong.\n",
      "commitDate": "20/03/18 7:51 PM",
      "commitName": "69fe4407ebd885fed69d9cf7f4dd17d3ba1acb60",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "19/03/18 10:13 PM",
      "commitNameOld": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthorOld": "weiy",
      "daysBetweenCommits": 0.9,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,41 @@\n   private boolean setQuota(String[] parameters, int i) throws IOException {\n     long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n     long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n \n     String mount \u003d parameters[i++];\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-nsQuota\")) {\n         i++;\n         try {\n           nsQuota \u003d Long.parseLong(parameters[i]);\n         } catch (Exception e) {\n-          System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n+          throw new IllegalArgumentException(\n+              \"Cannot parse nsQuota: \" + parameters[i]);\n         }\n       } else if (parameters[i].equals(\"-ssQuota\")) {\n         i++;\n         try {\n           ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n               .string2long(parameters[i]);\n         } catch (Exception e) {\n-          System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n+          throw new IllegalArgumentException(\n+              \"Cannot parse ssQuota: \" + parameters[i]);\n         }\n       }\n \n       i++;\n     }\n \n     if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n-      System.err.println(\"Input quota value should be a positive number.\");\n-      return false;\n+      throw new IllegalArgumentException(\n+          \"Input quota value should be a positive number.\");\n+    }\n+\n+    if (nsQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n+        ssQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET) {\n+      throw new IllegalArgumentException(\n+          \"Must specify at least one of -nsQuota and -ssQuota.\");\n     }\n \n     return updateQuota(mount, nsQuota, ssQuota);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean setQuota(String[] parameters, int i) throws IOException {\n    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n\n    String mount \u003d parameters[i++];\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-nsQuota\")) {\n        i++;\n        try {\n          nsQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          throw new IllegalArgumentException(\n              \"Cannot parse nsQuota: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-ssQuota\")) {\n        i++;\n        try {\n          ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n              .string2long(parameters[i]);\n        } catch (Exception e) {\n          throw new IllegalArgumentException(\n              \"Cannot parse ssQuota: \" + parameters[i]);\n        }\n      }\n\n      i++;\n    }\n\n    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n      throw new IllegalArgumentException(\n          \"Input quota value should be a positive number.\");\n    }\n\n    if (nsQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET \u0026\u0026\n        ssQuota \u003d\u003d HdfsConstants.QUOTA_DONT_SET) {\n      throw new IllegalArgumentException(\n          \"Must specify at least one of -nsQuota and -ssQuota.\");\n    }\n\n    return updateQuota(mount, nsQuota, ssQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private boolean setQuota(String[] parameters, int i) throws IOException {\n    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n\n    String mount \u003d parameters[i++];\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-nsQuota\")) {\n        i++;\n        try {\n          nsQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-ssQuota\")) {\n        i++;\n        try {\n          ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n              .string2long(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n        }\n      }\n\n      i++;\n    }\n\n    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n      System.err.println(\"Input quota value should be a positive number.\");\n      return false;\n    }\n\n    return updateQuota(mount, nsQuota, ssQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
      }
    },
    "9afb8025d6549f0ade0ae7d36f5e67cd20c500f4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12972. RBF: Display mount table quota info in Web UI and admin command. Contributed by Yiqun Lin.\n",
      "commitDate": "12/01/18 9:16 PM",
      "commitName": "9afb8025d6549f0ade0ae7d36f5e67cd20c500f4",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "09/01/18 9:59 PM",
      "commitNameOld": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 2.97,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,33 @@\n   private boolean setQuota(String[] parameters, int i) throws IOException {\n     long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n     long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n \n     String mount \u003d parameters[i++];\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-nsQuota\")) {\n         i++;\n         try {\n           nsQuota \u003d Long.parseLong(parameters[i]);\n         } catch (Exception e) {\n           System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n         }\n       } else if (parameters[i].equals(\"-ssQuota\")) {\n         i++;\n         try {\n-          ssQuota \u003d Long.parseLong(parameters[i]);\n+          ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n+              .string2long(parameters[i]);\n         } catch (Exception e) {\n           System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n         }\n       }\n \n       i++;\n     }\n \n     if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n       System.err.println(\"Input quota value should be a positive number.\");\n       return false;\n     }\n \n     return updateQuota(mount, nsQuota, ssQuota);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean setQuota(String[] parameters, int i) throws IOException {\n    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n\n    String mount \u003d parameters[i++];\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-nsQuota\")) {\n        i++;\n        try {\n          nsQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-ssQuota\")) {\n        i++;\n        try {\n          ssQuota \u003d StringUtils.TraditionalBinaryPrefix\n              .string2long(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n        }\n      }\n\n      i++;\n    }\n\n    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n      System.err.println(\"Input quota value should be a positive number.\");\n      return false;\n    }\n\n    return updateQuota(mount, nsQuota, ssQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "d98a2e6e2383f8b66def346409b0517aa32d298d": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12934. RBF: Federation supports global quota. Contributed by Yiqun Lin.\n",
      "commitDate": "09/01/18 9:59 PM",
      "commitName": "d98a2e6e2383f8b66def346409b0517aa32d298d",
      "commitAuthor": "Yiqun Lin",
      "diff": "@@ -0,0 +1,32 @@\n+  private boolean setQuota(String[] parameters, int i) throws IOException {\n+    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n+    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n+\n+    String mount \u003d parameters[i++];\n+    while (i \u003c parameters.length) {\n+      if (parameters[i].equals(\"-nsQuota\")) {\n+        i++;\n+        try {\n+          nsQuota \u003d Long.parseLong(parameters[i]);\n+        } catch (Exception e) {\n+          System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n+        }\n+      } else if (parameters[i].equals(\"-ssQuota\")) {\n+        i++;\n+        try {\n+          ssQuota \u003d Long.parseLong(parameters[i]);\n+        } catch (Exception e) {\n+          System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n+        }\n+      }\n+\n+      i++;\n+    }\n+\n+    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n+      System.err.println(\"Input quota value should be a positive number.\");\n+      return false;\n+    }\n+\n+    return updateQuota(mount, nsQuota, ssQuota);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean setQuota(String[] parameters, int i) throws IOException {\n    long nsQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n    long ssQuota \u003d HdfsConstants.QUOTA_DONT_SET;\n\n    String mount \u003d parameters[i++];\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-nsQuota\")) {\n        i++;\n        try {\n          nsQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse nsQuota: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-ssQuota\")) {\n        i++;\n        try {\n          ssQuota \u003d Long.parseLong(parameters[i]);\n        } catch (Exception e) {\n          System.err.println(\"Cannot parse ssQuota: \" + parameters[i]);\n        }\n      }\n\n      i++;\n    }\n\n    if (nsQuota \u003c\u003d 0 || ssQuota \u003c\u003d 0) {\n      System.err.println(\"Input quota value should be a positive number.\");\n      return false;\n    }\n\n    return updateQuota(mount, nsQuota, ssQuota);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
    }
  }
}