{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CallQueueManager.java",
  "functionName": "createCallQueueInstance",
  "functionId": "createCallQueueInstance___theClass-Class__T____priorityLevels-int__maxLen-int__ns-String__capacityWeights-int[]__conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
  "functionStartLine": 150,
  "functionEndLine": 195,
  "numCommitsSeen": 39,
  "timeTaken": 3993,
  "changeHistory": [
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
    "46a5245db95f2aad199100d2886381398070124f",
    "37cb314f79f515421cfc2c3605382bf1534dc266",
    "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3"
  ],
  "changeHistoryShort": {
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a": "Ymultichange(Yparameterchange,Ybodychange)",
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": "Ymultichange(Yparameterchange,Ybodychange)",
    "46a5245db95f2aad199100d2886381398070124f": "Ybodychange",
    "37cb314f79f515421cfc2c3605382bf1534dc266": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-17010. Add queue capacity support for FairCallQueue (#1977)\n\n",
      "commitDate": "28/04/20 4:14 PM",
      "commitName": "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a",
      "commitAuthor": "lfengnan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-17010. Add queue capacity support for FairCallQueue (#1977)\n\n",
          "commitDate": "28/04/20 4:14 PM",
          "commitName": "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a",
          "commitAuthor": "lfengnan",
          "commitDateOld": "04/09/19 8:22 AM",
          "commitNameOld": "337e9b794d3401748a86aa03a55ac61b0305d231",
          "commitAuthorOld": "Erik Krogen",
          "daysBetweenCommits": 237.33,
          "commitsBetweenForRepo": 996,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,46 @@\n   private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n       Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n-      Configuration conf) {\n+      int[] capacityWeights, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n-          int.class, String.class, Configuration.class);\n-      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n+          int.class, String.class, int[].class, Configuration.class);\n+      return ctor.newInstance(priorityLevels, maxLen, ns,\n+          capacityWeights, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n       return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n       return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n      int[] capacityWeights, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n          int.class, String.class, int[].class, Configuration.class);\n      return ctor.newInstance(priorityLevels, maxLen, ns,\n          capacityWeights, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "[theClass-Class\u003cT\u003e, priorityLevels-int, maxLen-int, ns-String, conf-Configuration]",
            "newValue": "[theClass-Class\u003cT\u003e, priorityLevels-int, maxLen-int, ns-String, capacityWeights-int[], conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-17010. Add queue capacity support for FairCallQueue (#1977)\n\n",
          "commitDate": "28/04/20 4:14 PM",
          "commitName": "4202750040f91f8dcc218ecc7d3ccf81a8e68b2a",
          "commitAuthor": "lfengnan",
          "commitDateOld": "04/09/19 8:22 AM",
          "commitNameOld": "337e9b794d3401748a86aa03a55ac61b0305d231",
          "commitAuthorOld": "Erik Krogen",
          "daysBetweenCommits": 237.33,
          "commitsBetweenForRepo": 996,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,45 +1,46 @@\n   private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n       Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n-      Configuration conf) {\n+      int[] capacityWeights, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n-          int.class, String.class, Configuration.class);\n-      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n+          int.class, String.class, int[].class, Configuration.class);\n+      return ctor.newInstance(priorityLevels, maxLen, ns,\n+          capacityWeights, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n       return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n       return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n      int[] capacityWeights, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n          int.class, String.class, int[].class, Configuration.class);\n      return ctor.newInstance(priorityLevels, maxLen, ns,\n          capacityWeights, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
      "commitDate": "31/03/16 8:42 AM",
      "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
      "commitAuthor": "Xiaoyu Yao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
          "commitDate": "31/03/16 8:42 AM",
          "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "29/03/16 12:08 PM",
          "commitNameOld": "46a5245db95f2aad199100d2886381398070124f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 1.86,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,45 @@\n   private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n-      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n+      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n+      Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n-      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n-        Configuration.class);\n-      return ctor.newInstance(maxLen, ns, conf);\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n+          int.class, String.class, Configuration.class);\n+      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n       return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n       return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n      Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n          int.class, String.class, Configuration.class);\n      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "[theClass-Class\u003cT\u003e, maxLen-int, ns-String, conf-Configuration]",
            "newValue": "[theClass-Class\u003cT\u003e, priorityLevels-int, maxLen-int, ns-String, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12916. Allow RPC scheduler/callqueue backoff using response times. Contributed by Xiaoyu Yao.\n",
          "commitDate": "31/03/16 8:42 AM",
          "commitName": "d95c6eb32cec7768ac418fb467b1198ccf3cf0dc",
          "commitAuthor": "Xiaoyu Yao",
          "commitDateOld": "29/03/16 12:08 PM",
          "commitNameOld": "46a5245db95f2aad199100d2886381398070124f",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 1.86,
          "commitsBetweenForRepo": 16,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,44 +1,45 @@\n   private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n-      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n+      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n+      Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n-      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n-        Configuration.class);\n-      return ctor.newInstance(maxLen, ns, conf);\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n+          int.class, String.class, Configuration.class);\n+      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n       return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n       return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (InvocationTargetException e) {\n       throw new RuntimeException(theClass.getName()\n           + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int priorityLevels, int maxLen, String ns,\n      Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class,\n          int.class, String.class, Configuration.class);\n      return ctor.newInstance(priorityLevels, maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "46a5245db95f2aad199100d2886381398070124f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9478. Reason for failing ipc.FairCallQueue contruction should be thrown. (Contributed by Ajith S)\n",
      "commitDate": "29/03/16 12:08 PM",
      "commitName": "46a5245db95f2aad199100d2886381398070124f",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "23/07/15 2:42 PM",
      "commitNameOld": "6736a1ab7033523ed5f304fdfed46d7f348665b4",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 249.89,
      "commitsBetweenForRepo": 1639,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,44 @@\n   private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n       Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n         Configuration.class);\n       return ctor.newInstance(maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n+    } catch (InvocationTargetException e) {\n+      throw new RuntimeException(theClass.getName()\n+          + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n       return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n+    } catch (InvocationTargetException e) {\n+      throw new RuntimeException(theClass.getName()\n+          + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n       Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n       return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n+    } catch (InvocationTargetException e) {\n+      throw new RuntimeException(theClass.getName()\n+          + \" could not be constructed.\", e.getCause());\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n        Configuration.class);\n      return ctor.newInstance(maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (InvocationTargetException e) {\n      throw new RuntimeException(theClass.getName()\n          + \" could not be constructed.\", e.getCause());\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
      "extendedDetails": {}
    },
    "37cb314f79f515421cfc2c3605382bf1534dc266": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/03/14 2:12 PM",
      "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
      "commitAuthor": "Tsz-wo Sze",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/03/14 2:12 PM",
          "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "21/02/14 12:53 PM",
          "commitNameOld": "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 194,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n-  private BlockingQueue\u003cE\u003e createCallQueueInstance(Class theClass, int maxLen,\n-    String ns, Configuration conf) {\n+  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n+      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n         Configuration.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen, ns, conf);\n+      return ctor.newInstance(maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen);\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n+      return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor();\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance();\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n+      return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n        Configuration.class);\n      return ctor.newInstance(maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "[theClass-Class, maxLen-int, ns-String, conf-Configuration]",
            "newValue": "[theClass-Class\u003cT\u003e, maxLen-int, ns-String, conf-Configuration]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/03/14 2:12 PM",
          "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "21/02/14 12:53 PM",
          "commitNameOld": "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 194,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n-  private BlockingQueue\u003cE\u003e createCallQueueInstance(Class theClass, int maxLen,\n-    String ns, Configuration conf) {\n+  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n+      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n         Configuration.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen, ns, conf);\n+      return ctor.newInstance(maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen);\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n+      return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor();\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance();\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n+      return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n        Configuration.class);\n      return ctor.newInstance(maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "BlockingQueue\u003cE\u003e",
            "newValue": "T"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10407. Fix the javac warnings in org.apache.hadoop.ipc package.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1577710 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "14/03/14 2:12 PM",
          "commitName": "37cb314f79f515421cfc2c3605382bf1534dc266",
          "commitAuthor": "Tsz-wo Sze",
          "commitDateOld": "21/02/14 12:53 PM",
          "commitNameOld": "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 21.01,
          "commitsBetweenForRepo": 194,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,35 +1,35 @@\n-  private BlockingQueue\u003cE\u003e createCallQueueInstance(Class theClass, int maxLen,\n-    String ns, Configuration conf) {\n+  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n+      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n \n     // Used for custom, configurable callqueues\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n         Configuration.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen, ns, conf);\n+      return ctor.newInstance(maxLen, ns, conf);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class);\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen);\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n+      return ctor.newInstance(maxLen);\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Last attempt\n     try {\n-      Constructor ctor \u003d theClass.getDeclaredConstructor();\n-      return (BlockingQueue\u003cE\u003e)ctor.newInstance();\n+      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n+      return ctor.newInstance();\n     } catch (RuntimeException e) {\n       throw e;\n     } catch (Exception e) {\n     }\n \n     // Nothing worked\n     throw new RuntimeException(theClass.getName() +\n       \" could not be constructed.\");\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private \u003cT extends BlockingQueue\u003cE\u003e\u003e T createCallQueueInstance(\n      Class\u003cT\u003e theClass, int maxLen, String ns, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n        Configuration.class);\n      return ctor.newInstance(maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor\u003cT\u003e ctor \u003d theClass.getDeclaredConstructor();\n      return ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10278. Refactor to make CallQueue pluggable. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570703 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/02/14 12:53 PM",
      "commitName": "d61d1c120d5cecc97514e2f8d79dacdbd4e610a3",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,35 @@\n+  private BlockingQueue\u003cE\u003e createCallQueueInstance(Class theClass, int maxLen,\n+    String ns, Configuration conf) {\n+\n+    // Used for custom, configurable callqueues\n+    try {\n+      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n+        Configuration.class);\n+      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen, ns, conf);\n+    } catch (RuntimeException e) {\n+      throw e;\n+    } catch (Exception e) {\n+    }\n+\n+    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n+    try {\n+      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class);\n+      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen);\n+    } catch (RuntimeException e) {\n+      throw e;\n+    } catch (Exception e) {\n+    }\n+\n+    // Last attempt\n+    try {\n+      Constructor ctor \u003d theClass.getDeclaredConstructor();\n+      return (BlockingQueue\u003cE\u003e)ctor.newInstance();\n+    } catch (RuntimeException e) {\n+      throw e;\n+    } catch (Exception e) {\n+    }\n+\n+    // Nothing worked\n+    throw new RuntimeException(theClass.getName() +\n+      \" could not be constructed.\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private BlockingQueue\u003cE\u003e createCallQueueInstance(Class theClass, int maxLen,\n    String ns, Configuration conf) {\n\n    // Used for custom, configurable callqueues\n    try {\n      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class, String.class,\n        Configuration.class);\n      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen, ns, conf);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Used for LinkedBlockingQueue, ArrayBlockingQueue, etc\n    try {\n      Constructor ctor \u003d theClass.getDeclaredConstructor(int.class);\n      return (BlockingQueue\u003cE\u003e)ctor.newInstance(maxLen);\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Last attempt\n    try {\n      Constructor ctor \u003d theClass.getDeclaredConstructor();\n      return (BlockingQueue\u003cE\u003e)ctor.newInstance();\n    } catch (RuntimeException e) {\n      throw e;\n    } catch (Exception e) {\n    }\n\n    // Nothing worked\n    throw new RuntimeException(theClass.getName() +\n      \" could not be constructed.\");\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java"
    }
  }
}