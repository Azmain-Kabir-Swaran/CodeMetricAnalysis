{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComputeFairShares.java",
  "functionName": "handleFixedFairShares",
  "functionId": "handleFixedFairShares___schedulables-Collection__? extends Schedulable____nonFixedSchedulables-Collection__Schedulable____isSteadyShare-boolean__type-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
  "functionStartLine": 213,
  "functionEndLine": 237,
  "numCommitsSeen": 21,
  "timeTaken": 4790,
  "changeHistory": [
    "944cf872232d1a8899df0f0bbe90aa29f225cb90",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7"
  ],
  "changeHistoryShort": {
    "944cf872232d1a8899df0f0bbe90aa29f225cb90": "Ymultichange(Yreturntypechange,Ybodychange)",
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": "Ymultichange(Yparameterchange,Ybodychange)",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "944cf872232d1a8899df0f0bbe90aa29f225cb90": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-9173. FairShare calculation broken for large values after YARN-8833. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "06/01/19 11:57 PM",
      "commitName": "944cf872232d1a8899df0f0bbe90aa29f225cb90",
      "commitAuthor": "Weiwei Yang",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-9173. FairShare calculation broken for large values after YARN-8833. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "06/01/19 11:57 PM",
          "commitName": "944cf872232d1a8899df0f0bbe90aa29f225cb90",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "18/11/18 7:18 AM",
          "commitNameOld": "d027a24f0349b60efa5125c330058f123771748f",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 49.69,
          "commitsBetweenForRepo": 300,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-  private static int handleFixedFairShares(\n+  private static long handleFixedFairShares(\n       Collection\u003c? extends Schedulable\u003e schedulables,\n       Collection\u003cSchedulable\u003e nonFixedSchedulables,\n       boolean isSteadyShare, String type) {\n-    int totalResource \u003d 0;\n+    long totalResource \u003d 0;\n \n     for (Schedulable sched : schedulables) {\n       long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n       if (fixedShare \u003c 0) {\n         nonFixedSchedulables.add(sched);\n       } else {\n         Resource target;\n \n         if (isSteadyShare) {\n           target \u003d ((FSQueue)sched).getSteadyFairShare();\n         } else {\n           target \u003d sched.getFairShare();\n         }\n \n         target.setResourceValue(type, fixedShare);\n-        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n-            Integer.MAX_VALUE);\n+        totalResource \u003d safeAdd(totalResource, fixedShare);\n       }\n     }\n     return totalResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, String type) {\n    long totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        Resource target;\n\n        if (isSteadyShare) {\n          target \u003d ((FSQueue)sched).getSteadyFairShare();\n        } else {\n          target \u003d sched.getFairShare();\n        }\n\n        target.setResourceValue(type, fixedShare);\n        totalResource \u003d safeAdd(totalResource, fixedShare);\n      }\n    }\n    return totalResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "long"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9173. FairShare calculation broken for large values after YARN-8833. Contributed by Wilfred Spiegelenburg.\n",
          "commitDate": "06/01/19 11:57 PM",
          "commitName": "944cf872232d1a8899df0f0bbe90aa29f225cb90",
          "commitAuthor": "Weiwei Yang",
          "commitDateOld": "18/11/18 7:18 AM",
          "commitNameOld": "d027a24f0349b60efa5125c330058f123771748f",
          "commitAuthorOld": "Weiwei Yang",
          "daysBetweenCommits": 49.69,
          "commitsBetweenForRepo": 300,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,25 @@\n-  private static int handleFixedFairShares(\n+  private static long handleFixedFairShares(\n       Collection\u003c? extends Schedulable\u003e schedulables,\n       Collection\u003cSchedulable\u003e nonFixedSchedulables,\n       boolean isSteadyShare, String type) {\n-    int totalResource \u003d 0;\n+    long totalResource \u003d 0;\n \n     for (Schedulable sched : schedulables) {\n       long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n       if (fixedShare \u003c 0) {\n         nonFixedSchedulables.add(sched);\n       } else {\n         Resource target;\n \n         if (isSteadyShare) {\n           target \u003d ((FSQueue)sched).getSteadyFairShare();\n         } else {\n           target \u003d sched.getFairShare();\n         }\n \n         target.setResourceValue(type, fixedShare);\n-        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n-            Integer.MAX_VALUE);\n+        totalResource \u003d safeAdd(totalResource, fixedShare);\n       }\n     }\n     return totalResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static long handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, String type) {\n    long totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        Resource target;\n\n        if (isSteadyShare) {\n          target \u003d ((FSQueue)sched).getSteadyFairShare();\n        } else {\n          target \u003d sched.getFairShare();\n        }\n\n        target.setResourceValue(type, fixedShare);\n        totalResource \u003d safeAdd(totalResource, fixedShare);\n      }\n    }\n    return totalResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "09b476e6dabe8039a41dde7930c8a9c0d14bb750": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
      "commitDate": "14/09/17 11:23 AM",
      "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthor": "Yufei Gu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n   private static int handleFixedFairShares(\n       Collection\u003c? extends Schedulable\u003e schedulables,\n       Collection\u003cSchedulable\u003e nonFixedSchedulables,\n-      boolean isSteadyShare, ResourceType type) {\n+      boolean isSteadyShare, String type) {\n     int totalResource \u003d 0;\n \n     for (Schedulable sched : schedulables) {\n       long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n       if (fixedShare \u003c 0) {\n         nonFixedSchedulables.add(sched);\n       } else {\n-        setResourceValue(fixedShare,\n-            isSteadyShare\n-                ? ((FSQueue)sched).getSteadyFairShare()\n-                : sched.getFairShare(),\n-            type);\n+        Resource target;\n+\n+        if (isSteadyShare) {\n+          target \u003d ((FSQueue)sched).getSteadyFairShare();\n+        } else {\n+          target \u003d sched.getFairShare();\n+        }\n+\n+        target.setResourceValue(type, fixedShare);\n         totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n             Integer.MAX_VALUE);\n       }\n     }\n     return totalResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, String type) {\n    int totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        Resource target;\n\n        if (isSteadyShare) {\n          target \u003d ((FSQueue)sched).getSteadyFairShare();\n        } else {\n          target \u003d sched.getFairShare();\n        }\n\n        target.setResourceValue(type, fixedShare);\n        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n            Integer.MAX_VALUE);\n      }\n    }\n    return totalResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {
            "oldValue": "[schedulables-Collection\u003c? extends Schedulable\u003e, nonFixedSchedulables-Collection\u003cSchedulable\u003e, isSteadyShare-boolean, type-ResourceType]",
            "newValue": "[schedulables-Collection\u003c? extends Schedulable\u003e, nonFixedSchedulables-Collection\u003cSchedulable\u003e, isSteadyShare-boolean, type-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-6612. Update fair scheduler policies to be aware of resource types. (Contributed by Daniel Templeton via Yufei Gu)\n",
          "commitDate": "14/09/17 11:23 AM",
          "commitName": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
          "commitAuthor": "Yufei Gu",
          "commitDateOld": "11/07/16 10:36 PM",
          "commitNameOld": "819224dcf9c683aa52f58633ac8e13663f1916d8",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 429.53,
          "commitsBetweenForRepo": 2748,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,26 @@\n   private static int handleFixedFairShares(\n       Collection\u003c? extends Schedulable\u003e schedulables,\n       Collection\u003cSchedulable\u003e nonFixedSchedulables,\n-      boolean isSteadyShare, ResourceType type) {\n+      boolean isSteadyShare, String type) {\n     int totalResource \u003d 0;\n \n     for (Schedulable sched : schedulables) {\n       long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n       if (fixedShare \u003c 0) {\n         nonFixedSchedulables.add(sched);\n       } else {\n-        setResourceValue(fixedShare,\n-            isSteadyShare\n-                ? ((FSQueue)sched).getSteadyFairShare()\n-                : sched.getFairShare(),\n-            type);\n+        Resource target;\n+\n+        if (isSteadyShare) {\n+          target \u003d ((FSQueue)sched).getSteadyFairShare();\n+        } else {\n+          target \u003d sched.getFairShare();\n+        }\n+\n+        target.setResourceValue(type, fixedShare);\n         totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n             Integer.MAX_VALUE);\n       }\n     }\n     return totalResource;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static int handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, String type) {\n    int totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        Resource target;\n\n        if (isSteadyShare) {\n          target \u003d ((FSQueue)sched).getSteadyFairShare();\n        } else {\n          target \u003d sched.getFairShare();\n        }\n\n        target.setResourceValue(type, fixedShare);\n        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n            Integer.MAX_VALUE);\n      }\n    }\n    return totalResource;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
          "extendedDetails": {}
        }
      ]
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "16/03/15 7:19 AM",
      "commitNameOld": "3da9a97cfbcc3a1c50aaf85b1a129d4d269cd5fd",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 440.07,
      "commitsBetweenForRepo": 3328,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static int handleFixedFairShares(\n       Collection\u003c? extends Schedulable\u003e schedulables,\n       Collection\u003cSchedulable\u003e nonFixedSchedulables,\n       boolean isSteadyShare, ResourceType type) {\n     int totalResource \u003d 0;\n \n     for (Schedulable sched : schedulables) {\n-      int fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n+      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n       if (fixedShare \u003c 0) {\n         nonFixedSchedulables.add(sched);\n       } else {\n         setResourceValue(fixedShare,\n             isSteadyShare\n                 ? ((FSQueue)sched).getSteadyFairShare()\n                 : sched.getFairShare(),\n             type);\n         totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n             Integer.MAX_VALUE);\n       }\n     }\n     return totalResource;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static int handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, ResourceType type) {\n    int totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      long fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        setResourceValue(fixedShare,\n            isSteadyShare\n                ? ((FSQueue)sched).getSteadyFairShare()\n                : sched.getFairShare(),\n            type);\n        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n            Integer.MAX_VALUE);\n      }\n    }\n    return totalResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java",
      "extendedDetails": {}
    },
    "3072c83b38fd87318d502a7d1bc518963b5ccdf7": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1458. FairScheduler: Zero weight can lead to livelock. (Zhihai Xu via kasha)\n",
      "commitDate": "10/09/14 8:26 AM",
      "commitName": "3072c83b38fd87318d502a7d1bc518963b5ccdf7",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,22 @@\n+  private static int handleFixedFairShares(\n+      Collection\u003c? extends Schedulable\u003e schedulables,\n+      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n+      boolean isSteadyShare, ResourceType type) {\n+    int totalResource \u003d 0;\n+\n+    for (Schedulable sched : schedulables) {\n+      int fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n+      if (fixedShare \u003c 0) {\n+        nonFixedSchedulables.add(sched);\n+      } else {\n+        setResourceValue(fixedShare,\n+            isSteadyShare\n+                ? ((FSQueue)sched).getSteadyFairShare()\n+                : sched.getFairShare(),\n+            type);\n+        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n+            Integer.MAX_VALUE);\n+      }\n+    }\n+    return totalResource;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static int handleFixedFairShares(\n      Collection\u003c? extends Schedulable\u003e schedulables,\n      Collection\u003cSchedulable\u003e nonFixedSchedulables,\n      boolean isSteadyShare, ResourceType type) {\n    int totalResource \u003d 0;\n\n    for (Schedulable sched : schedulables) {\n      int fixedShare \u003d getFairShareIfFixed(sched, isSteadyShare, type);\n      if (fixedShare \u003c 0) {\n        nonFixedSchedulables.add(sched);\n      } else {\n        setResourceValue(fixedShare,\n            isSteadyShare\n                ? ((FSQueue)sched).getSteadyFairShare()\n                : sched.getFairShare(),\n            type);\n        totalResource \u003d (int) Math.min((long)totalResource + (long)fixedShare,\n            Integer.MAX_VALUE);\n      }\n    }\n    return totalResource;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/policies/ComputeFairShares.java"
    }
  }
}