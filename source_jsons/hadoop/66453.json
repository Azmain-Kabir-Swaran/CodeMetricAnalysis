{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StreamAMSimulator.java",
  "functionName": "init",
  "functionId": "init___heartbeatInterval-int__containerList-List__ContainerSimulator____rm-ResourceManager__se-SLSRunner__traceStartTime-long__traceFinishTime-long__user-String__queue-String__isTracked-boolean__oldAppId-String__baselineStartTimeMS-long__amContainerResource-Resource__nodeLabelExpr-String__params-Map__String,String____appIdAMSim-Map__ApplicationId,AMSimulator__",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java",
  "functionStartLine": 96,
  "functionEndLine": 113,
  "numCommitsSeen": 6,
  "timeTaken": 3913,
  "changeHistory": [
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf"
  ],
  "changeHistoryShort": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": "Ymultichange(Yparameterchange,Ybodychange)",
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": "Ymultichange(Yparameterchange,Ybodychange)",
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": "Yintroduced"
  },
  "changeHistoryDetails": {
    "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
      "commitDate": "14/02/19 9:26 AM",
      "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
      "commitAuthor": "bibinchundatt",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
          "commitDate": "14/02/19 9:26 AM",
          "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "31/07/18 9:36 AM",
          "commitNameOld": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 198.03,
          "commitsBetweenForRepo": 1577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n       long traceStartTime, long traceFinishTime, String user, String queue,\n       boolean isTracked, String oldAppId, long baselineStartTimeMS,\n       Resource amContainerResource, String nodeLabelExpr,\n-      Map\u003cString, String\u003e params) {\n+      Map\u003cString, String\u003e params, Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n     super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n         traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n-        amContainerResource, nodeLabelExpr, params);\n+        amContainerResource, nodeLabelExpr, params, appIdAMSim);\n     amtype \u003d \"stream\";\n \n     allStreams.addAll(containerList);\n \n     duration \u003d traceFinishTime - traceStartTime;\n \n     LOG.info(\"Added new job with {} streams, running for {}\",\n         allStreams.size(), duration);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue,\n      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n      Resource amContainerResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params, Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n        amContainerResource, nodeLabelExpr, params, appIdAMSim);\n    amtype \u003d \"stream\";\n\n    allStreams.addAll(containerList);\n\n    duration \u003d traceFinishTime - traceStartTime;\n\n    LOG.info(\"Added new job with {} streams, running for {}\",\n        allStreams.size(), duration);\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java",
          "extendedDetails": {
            "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, rm-ResourceManager, se-SLSRunner, traceStartTime-long, traceFinishTime-long, user-String, queue-String, isTracked-boolean, oldAppId-String, baselineStartTimeMS-long, amContainerResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, rm-ResourceManager, se-SLSRunner, traceStartTime-long, traceFinishTime-long, user-String, queue-String, isTracked-boolean, oldAppId-String, baselineStartTimeMS-long, amContainerResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e, appIdAMSim-Map\u003cApplicationId,AMSimulator\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9293. Optimize MockAMLauncher event handling. Contributed by Bibin A Chundatt.\n",
          "commitDate": "14/02/19 9:26 AM",
          "commitName": "134ae8fc8045e2ae1ed7ca54df95f14ffc863d09",
          "commitAuthor": "bibinchundatt",
          "commitDateOld": "31/07/18 9:36 AM",
          "commitNameOld": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthorOld": "Inigo Goiri",
          "daysBetweenCommits": 198.03,
          "commitsBetweenForRepo": 1577,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n       long traceStartTime, long traceFinishTime, String user, String queue,\n       boolean isTracked, String oldAppId, long baselineStartTimeMS,\n       Resource amContainerResource, String nodeLabelExpr,\n-      Map\u003cString, String\u003e params) {\n+      Map\u003cString, String\u003e params, Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n     super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n         traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n-        amContainerResource, nodeLabelExpr, params);\n+        amContainerResource, nodeLabelExpr, params, appIdAMSim);\n     amtype \u003d \"stream\";\n \n     allStreams.addAll(containerList);\n \n     duration \u003d traceFinishTime - traceStartTime;\n \n     LOG.info(\"Added new job with {} streams, running for {}\",\n         allStreams.size(), duration);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue,\n      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n      Resource amContainerResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params, Map\u003cApplicationId, AMSimulator\u003e appIdAMSim) {\n    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n        amContainerResource, nodeLabelExpr, params, appIdAMSim);\n    amtype \u003d \"stream\";\n\n    allStreams.addAll(containerList);\n\n    duration \u003d traceFinishTime - traceStartTime;\n\n    LOG.info(\"Added new job with {} streams, running for {}\",\n        allStreams.size(), duration);\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
      "commitDate": "31/07/18 9:36 AM",
      "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
      "commitAuthor": "Inigo Goiri",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "20/02/18 5:00 PM",
          "commitNameOld": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 160.65,
          "commitsBetweenForRepo": 1749,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n       long traceStartTime, long traceFinishTime, String user, String queue,\n       boolean isTracked, String oldAppId, long baselineStartTimeMS,\n-      Resource amContainerResource, Map\u003cString, String\u003e params) {\n+      Resource amContainerResource, String nodeLabelExpr,\n+      Map\u003cString, String\u003e params) {\n     super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n         traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n-        amContainerResource, params);\n+        amContainerResource, nodeLabelExpr, params);\n     amtype \u003d \"stream\";\n \n     allStreams.addAll(containerList);\n \n     duration \u003d traceFinishTime - traceStartTime;\n \n     LOG.info(\"Added new job with {} streams, running for {}\",\n         allStreams.size(), duration);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue,\n      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n      Resource amContainerResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params) {\n    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n        amContainerResource, nodeLabelExpr, params);\n    amtype \u003d \"stream\";\n\n    allStreams.addAll(containerList);\n\n    duration \u003d traceFinishTime - traceStartTime;\n\n    LOG.info(\"Added new job with {} streams, running for {}\",\n        allStreams.size(), duration);\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java",
          "extendedDetails": {
            "oldValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, rm-ResourceManager, se-SLSRunner, traceStartTime-long, traceFinishTime-long, user-String, queue-String, isTracked-boolean, oldAppId-String, baselineStartTimeMS-long, amContainerResource-Resource, params-Map\u003cString,String\u003e]",
            "newValue": "[heartbeatInterval-int, containerList-List\u003cContainerSimulator\u003e, rm-ResourceManager, se-SLSRunner, traceStartTime-long, traceFinishTime-long, user-String, queue-String, isTracked-boolean, oldAppId-String, baselineStartTimeMS-long, amContainerResource-Resource, nodeLabelExpr-String, params-Map\u003cString,String\u003e]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8175. Add support for Node Labels in SLS. Contributed by Abhishek Modi.\n",
          "commitDate": "31/07/18 9:36 AM",
          "commitName": "9fea5c9ee76bd36f273ae93afef5f3ef3c477a53",
          "commitAuthor": "Inigo Goiri",
          "commitDateOld": "20/02/18 5:00 PM",
          "commitNameOld": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
          "commitAuthorOld": "Carlo Curino",
          "daysBetweenCommits": 160.65,
          "commitsBetweenForRepo": 1749,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public void init(int heartbeatInterval,\n       List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n       long traceStartTime, long traceFinishTime, String user, String queue,\n       boolean isTracked, String oldAppId, long baselineStartTimeMS,\n-      Resource amContainerResource, Map\u003cString, String\u003e params) {\n+      Resource amContainerResource, String nodeLabelExpr,\n+      Map\u003cString, String\u003e params) {\n     super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n         traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n-        amContainerResource, params);\n+        amContainerResource, nodeLabelExpr, params);\n     amtype \u003d \"stream\";\n \n     allStreams.addAll(containerList);\n \n     duration \u003d traceFinishTime - traceStartTime;\n \n     LOG.info(\"Added new job with {} streams, running for {}\",\n         allStreams.size(), duration);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue,\n      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n      Resource amContainerResource, String nodeLabelExpr,\n      Map\u003cString, String\u003e params) {\n    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n        amContainerResource, nodeLabelExpr, params);\n    amtype \u003d \"stream\";\n\n    allStreams.addAll(containerList);\n\n    duration \u003d traceFinishTime - traceStartTime;\n\n    LOG.info(\"Added new job with {} streams, running for {}\",\n        allStreams.size(), duration);\n  }",
          "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java",
          "extendedDetails": {}
        }
      ]
    },
    "84cea0011ffe510d24cf9f2952944f7a6fe622cf": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7732. Support Generic AM Simulator from SynthGenerator. (Contributed by Young Chen via curino)\n",
      "commitDate": "20/02/18 5:00 PM",
      "commitName": "84cea0011ffe510d24cf9f2952944f7a6fe622cf",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,17 @@\n+  public void init(int heartbeatInterval,\n+      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n+      long traceStartTime, long traceFinishTime, String user, String queue,\n+      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n+      Resource amContainerResource, Map\u003cString, String\u003e params) {\n+    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n+        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n+        amContainerResource, params);\n+    amtype \u003d \"stream\";\n+\n+    allStreams.addAll(containerList);\n+\n+    duration \u003d traceFinishTime - traceStartTime;\n+\n+    LOG.info(\"Added new job with {} streams, running for {}\",\n+        allStreams.size(), duration);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(int heartbeatInterval,\n      List\u003cContainerSimulator\u003e containerList, ResourceManager rm, SLSRunner se,\n      long traceStartTime, long traceFinishTime, String user, String queue,\n      boolean isTracked, String oldAppId, long baselineStartTimeMS,\n      Resource amContainerResource, Map\u003cString, String\u003e params) {\n    super.init(heartbeatInterval, containerList, rm, se, traceStartTime,\n        traceFinishTime, user, queue, isTracked, oldAppId, baselineStartTimeMS,\n        amContainerResource, params);\n    amtype \u003d \"stream\";\n\n    allStreams.addAll(containerList);\n\n    duration \u003d traceFinishTime - traceStartTime;\n\n    LOG.info(\"Added new job with {} streams, running for {}\",\n        allStreams.size(), duration);\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/appmaster/StreamAMSimulator.java"
    }
  }
}