{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HAUtil.java",
  "functionName": "verifyAndSetCurrentRMHAId",
  "functionId": "verifyAndSetCurrentRMHAId___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
  "functionStartLine": 139,
  "functionEndLine": 160,
  "numCommitsSeen": 26,
  "timeTaken": 1587,
  "changeHistory": [
    "640ba1d23fe8b8105bae6d342ddc1c839302f8e5",
    "3e7d56678c334a359049adf99018683113849fc8",
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94"
  ],
  "changeHistoryShort": {
    "640ba1d23fe8b8105bae6d342ddc1c839302f8e5": "Ybodychange",
    "3e7d56678c334a359049adf99018683113849fc8": "Ybodychange",
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2": "Yrename",
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": "Yintroduced"
  },
  "changeHistoryDetails": {
    "640ba1d23fe8b8105bae6d342ddc1c839302f8e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5685. RM configuration allows all failover methods to disabled when automatic failover is enabled\n",
      "commitDate": "29/03/17 12:38 PM",
      "commitName": "640ba1d23fe8b8105bae6d342ddc1c839302f8e5",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "27/12/16 1:03 PM",
      "commitNameOld": "e216e8e2334519b7c833d99586218e99a39265f3",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 91.94,
      "commitsBetweenForRepo": 491,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n     String rmId \u003d getRMHAId(conf);\n     if (rmId \u003d\u003d null) {\n       StringBuilder msg \u003d new StringBuilder();\n       msg.append(\"Can not find valid RM_HA_ID. None of \");\n       for (String id : conf\n           .getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS)) {\n-        msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id) + \" \");\n+        msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id)).append(\" \");\n       }\n       msg.append(\" are matching\" +\n           \" the local address OR \" + YarnConfiguration.RM_HA_ID + \" is not\" +\n           \" specified in HA Configuration\");\n       throwBadConfigurationException(msg.toString());\n     } else {\n       Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n       if (!ids.contains(rmId)) {\n         throwBadConfigurationException(\n           getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n       }\n     }\n     conf.set(YarnConfiguration.RM_HA_ID, rmId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n    String rmId \u003d getRMHAId(conf);\n    if (rmId \u003d\u003d null) {\n      StringBuilder msg \u003d new StringBuilder();\n      msg.append(\"Can not find valid RM_HA_ID. None of \");\n      for (String id : conf\n          .getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS)) {\n        msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id)).append(\" \");\n      }\n      msg.append(\" are matching\" +\n          \" the local address OR \" + YarnConfiguration.RM_HA_ID + \" is not\" +\n          \" specified in HA Configuration\");\n      throwBadConfigurationException(msg.toString());\n    } else {\n      Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n      if (!ids.contains(rmId)) {\n        throwBadConfigurationException(\n          getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n      }\n    }\n    conf.set(YarnConfiguration.RM_HA_ID, rmId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "3e7d56678c334a359049adf99018683113849fc8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1639. Modified RM HA configuration handling to have a way of not requiring separate configuration files for each RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1564032 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/02/14 11:53 AM",
      "commitName": "3e7d56678c334a359049adf99018683113849fc8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 27.75,
      "commitsBetweenForRepo": 162,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,22 @@\n   private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n-    String rmId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n+    String rmId \u003d getRMHAId(conf);\n     if (rmId \u003d\u003d null) {\n-      throwBadConfigurationException(\n-        getNeedToSetValueMessage(YarnConfiguration.RM_HA_ID));\n+      StringBuilder msg \u003d new StringBuilder();\n+      msg.append(\"Can not find valid RM_HA_ID. None of \");\n+      for (String id : conf\n+          .getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS)) {\n+        msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id) + \" \");\n+      }\n+      msg.append(\" are matching\" +\n+          \" the local address OR \" + YarnConfiguration.RM_HA_ID + \" is not\" +\n+          \" specified in HA Configuration\");\n+      throwBadConfigurationException(msg.toString());\n     } else {\n       Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n       if (!ids.contains(rmId)) {\n         throwBadConfigurationException(\n           getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n       }\n     }\n     conf.set(YarnConfiguration.RM_HA_ID, rmId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n    String rmId \u003d getRMHAId(conf);\n    if (rmId \u003d\u003d null) {\n      StringBuilder msg \u003d new StringBuilder();\n      msg.append(\"Can not find valid RM_HA_ID. None of \");\n      for (String id : conf\n          .getTrimmedStringCollection(YarnConfiguration.RM_HA_IDS)) {\n        msg.append(addSuffix(YarnConfiguration.RM_ADDRESS, id) + \" \");\n      }\n      msg.append(\" are matching\" +\n          \" the local address OR \" + YarnConfiguration.RM_HA_ID + \" is not\" +\n          \" specified in HA Configuration\");\n      throwBadConfigurationException(msg.toString());\n    } else {\n      Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n      if (!ids.contains(rmId)) {\n        throwBadConfigurationException(\n          getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n      }\n    }\n    conf.set(YarnConfiguration.RM_HA_ID, rmId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {}
    },
    "1182ca04d4a78f48487d6485f756a3ec96f5b0c2": {
      "type": "Yrename",
      "commitMessage": "YARN-1485. Modified RM HA configuration validation to also ensure that service-address configuration are configured for every RM. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550854 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/13 3:54 PM",
      "commitName": "1182ca04d4a78f48487d6485f756a3ec96f5b0c2",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "12/12/13 12:50 PM",
      "commitNameOld": "8a79be36bd097a2f0e4a84625e782a7fa1421549",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 1.13,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n-  private static void verifyAndSetRMHAId(Configuration conf) {\n+  private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n     String rmId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n     if (rmId \u003d\u003d null) {\n       throwBadConfigurationException(\n         getNeedToSetValueMessage(YarnConfiguration.RM_HA_ID));\n     } else {\n       Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n       if (!ids.contains(rmId)) {\n         throwBadConfigurationException(\n           getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n       }\n     }\n     conf.set(YarnConfiguration.RM_HA_ID, rmId);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetCurrentRMHAId(Configuration conf) {\n    String rmId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n    if (rmId \u003d\u003d null) {\n      throwBadConfigurationException(\n        getNeedToSetValueMessage(YarnConfiguration.RM_HA_ID));\n    } else {\n      Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n      if (!ids.contains(rmId)) {\n        throwBadConfigurationException(\n          getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n      }\n    }\n    conf.set(YarnConfiguration.RM_HA_ID, rmId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java",
      "extendedDetails": {
        "oldValue": "verifyAndSetRMHAId",
        "newValue": "verifyAndSetCurrentRMHAId"
      }
    },
    "116b459d2299f933ae028fbcb6d71d338d4d3e94": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1305. RMHAProtocolService#serviceInit should handle HAUtil\u0027s IllegalArgumentException (Tsuyoshi Ozawa via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534884 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/10/13 6:10 PM",
      "commitName": "116b459d2299f933ae028fbcb6d71d338d4d3e94",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,14 @@\n+  private static void verifyAndSetRMHAId(Configuration conf) {\n+    String rmId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n+    if (rmId \u003d\u003d null) {\n+      throwBadConfigurationException(\n+        getNeedToSetValueMessage(YarnConfiguration.RM_HA_ID));\n+    } else {\n+      Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n+      if (!ids.contains(rmId)) {\n+        throwBadConfigurationException(\n+          getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n+      }\n+    }\n+    conf.set(YarnConfiguration.RM_HA_ID, rmId);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void verifyAndSetRMHAId(Configuration conf) {\n    String rmId \u003d conf.getTrimmed(YarnConfiguration.RM_HA_ID);\n    if (rmId \u003d\u003d null) {\n      throwBadConfigurationException(\n        getNeedToSetValueMessage(YarnConfiguration.RM_HA_ID));\n    } else {\n      Collection\u003cString\u003e ids \u003d getRMHAIds(conf);\n      if (!ids.contains(rmId)) {\n        throwBadConfigurationException(\n          getRMHAIdNeedToBeIncludedMessage(ids.toString(), rmId));\n      }\n    }\n    conf.set(YarnConfiguration.RM_HA_ID, rmId);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/conf/HAUtil.java"
    }
  }
}