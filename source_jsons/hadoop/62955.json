{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "UpdateContainerError.java",
  "functionName": "equals",
  "functionId": "equals___obj-Object",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
  "functionStartLine": 113,
  "functionEndLine": 141,
  "numCommitsSeen": 5,
  "timeTaken": 4259,
  "changeHistory": [
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "dfe2cb849fcb273d32e840d8562eaaee904af054",
    "1cdeb83167cdb05db9077d65a9a8440b2aca9bfe"
  ],
  "changeHistoryShort": {
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "dfe2cb849fcb273d32e840d8562eaaee904af054": "Ymultichange(Yfilerename,Ybodychange)",
    "1cdeb83167cdb05db9077d65a9a8440b2aca9bfe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aaf106fde35ec97e2e2ea4d7a67434038c4273ac": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5966. AMRMClient changes to support ExecutionType update. (asuresh)\n",
      "commitDate": "14/02/17 6:09 AM",
      "commitName": "aaf106fde35ec97e2e2ea4d7a67434038c4273ac",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/01/17 10:31 AM",
      "commitNameOld": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 39.82,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public boolean equals(Object obj) {\n     if (this \u003d\u003d obj) {\n       return true;\n     }\n     if (obj \u003d\u003d null) {\n       return false;\n     }\n     if (getClass() !\u003d obj.getClass()) {\n       return false;\n     }\n     UpdateContainerError other \u003d (UpdateContainerError) obj;\n     String reason \u003d getReason();\n     if (reason \u003d\u003d null) {\n       if (other.getReason() !\u003d null) {\n         return false;\n       }\n     } else if (!reason.equals(other.getReason())) {\n       return false;\n     }\n     UpdateContainerRequest req \u003d getUpdateContainerRequest();\n     if (req \u003d\u003d null) {\n       if (other.getUpdateContainerRequest() !\u003d null) {\n         return false;\n       }\n     } else if (!req.equals(other.getUpdateContainerRequest())) {\n       return false;\n     }\n-    return true;\n+    return getCurrentContainerVersion() \u003d\u003d other.getCurrentContainerVersion();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    UpdateContainerError other \u003d (UpdateContainerError) obj;\n    String reason \u003d getReason();\n    if (reason \u003d\u003d null) {\n      if (other.getReason() !\u003d null) {\n        return false;\n      }\n    } else if (!reason.equals(other.getReason())) {\n      return false;\n    }\n    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n    if (req \u003d\u003d null) {\n      if (other.getUpdateContainerRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!req.equals(other.getUpdateContainerRequest())) {\n      return false;\n    }\n    return getCurrentContainerVersion() \u003d\u003d other.getCurrentContainerVersion();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/08/16 2:00 PM",
          "commitNameOld": "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978",
          "commitAuthorOld": "Ming Ma",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,29 @@\n-  public boolean equals(Object other) {\n-    if (other instanceof ContainerResourceChangeRequest) {\n-      ContainerResourceChangeRequest ctx \u003d\n-          (ContainerResourceChangeRequest) other;\n-\n-      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n-        return false;\n-      } else if (!getContainerId().equals(ctx.getContainerId())) {\n-        return false;\n-      }\n-\n-      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n-        return false;\n-      } else if (!getCapability().equals(ctx.getCapability())) {\n-        return false;\n-      }\n-\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj) {\n       return true;\n-    } else {\n+    }\n+    if (obj \u003d\u003d null) {\n       return false;\n     }\n+    if (getClass() !\u003d obj.getClass()) {\n+      return false;\n+    }\n+    UpdateContainerError other \u003d (UpdateContainerError) obj;\n+    String reason \u003d getReason();\n+    if (reason \u003d\u003d null) {\n+      if (other.getReason() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!reason.equals(other.getReason())) {\n+      return false;\n+    }\n+    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n+    if (req \u003d\u003d null) {\n+      if (other.getUpdateContainerRequest() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!req.equals(other.getUpdateContainerRequest())) {\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    UpdateContainerError other \u003d (UpdateContainerError) obj;\n    String reason \u003d getReason();\n    if (reason \u003d\u003d null) {\n      if (other.getReason() !\u003d null) {\n        return false;\n      }\n    } else if (!reason.equals(other.getReason())) {\n      return false;\n    }\n    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n    if (req \u003d\u003d null) {\n      if (other.getUpdateContainerRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!req.equals(other.getUpdateContainerRequest())) {\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceChangeRequest.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
            "oldMethodName": "equals",
            "newMethodName": "equals"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/08/16 2:00 PM",
          "commitNameOld": "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978",
          "commitAuthorOld": "Ming Ma",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,29 @@\n-  public boolean equals(Object other) {\n-    if (other instanceof ContainerResourceChangeRequest) {\n-      ContainerResourceChangeRequest ctx \u003d\n-          (ContainerResourceChangeRequest) other;\n-\n-      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n-        return false;\n-      } else if (!getContainerId().equals(ctx.getContainerId())) {\n-        return false;\n-      }\n-\n-      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n-        return false;\n-      } else if (!getCapability().equals(ctx.getCapability())) {\n-        return false;\n-      }\n-\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj) {\n       return true;\n-    } else {\n+    }\n+    if (obj \u003d\u003d null) {\n       return false;\n     }\n+    if (getClass() !\u003d obj.getClass()) {\n+      return false;\n+    }\n+    UpdateContainerError other \u003d (UpdateContainerError) obj;\n+    String reason \u003d getReason();\n+    if (reason \u003d\u003d null) {\n+      if (other.getReason() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!reason.equals(other.getReason())) {\n+      return false;\n+    }\n+    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n+    if (req \u003d\u003d null) {\n+      if (other.getUpdateContainerRequest() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!req.equals(other.getUpdateContainerRequest())) {\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    UpdateContainerError other \u003d (UpdateContainerError) obj;\n    String reason \u003d getReason();\n    if (reason \u003d\u003d null) {\n      if (other.getReason() !\u003d null) {\n        return false;\n      }\n    } else if (!reason.equals(other.getReason())) {\n      return false;\n    }\n    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n    if (req \u003d\u003d null) {\n      if (other.getUpdateContainerRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!req.equals(other.getUpdateContainerRequest())) {\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "30/08/16 2:00 PM",
          "commitNameOld": "9dcbdbdb5a34d85910707f81ebc1bb1f81c99978",
          "commitAuthorOld": "Ming Ma",
          "daysBetweenCommits": 0.08,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,29 @@\n-  public boolean equals(Object other) {\n-    if (other instanceof ContainerResourceChangeRequest) {\n-      ContainerResourceChangeRequest ctx \u003d\n-          (ContainerResourceChangeRequest) other;\n-\n-      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n-        return false;\n-      } else if (!getContainerId().equals(ctx.getContainerId())) {\n-        return false;\n-      }\n-\n-      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n-        return false;\n-      } else if (!getCapability().equals(ctx.getCapability())) {\n-        return false;\n-      }\n-\n+  public boolean equals(Object obj) {\n+    if (this \u003d\u003d obj) {\n       return true;\n-    } else {\n+    }\n+    if (obj \u003d\u003d null) {\n       return false;\n     }\n+    if (getClass() !\u003d obj.getClass()) {\n+      return false;\n+    }\n+    UpdateContainerError other \u003d (UpdateContainerError) obj;\n+    String reason \u003d getReason();\n+    if (reason \u003d\u003d null) {\n+      if (other.getReason() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!reason.equals(other.getReason())) {\n+      return false;\n+    }\n+    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n+    if (req \u003d\u003d null) {\n+      if (other.getUpdateContainerRequest() !\u003d null) {\n+        return false;\n+      }\n+    } else if (!req.equals(other.getUpdateContainerRequest())) {\n+      return false;\n+    }\n+    return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean equals(Object obj) {\n    if (this \u003d\u003d obj) {\n      return true;\n    }\n    if (obj \u003d\u003d null) {\n      return false;\n    }\n    if (getClass() !\u003d obj.getClass()) {\n      return false;\n    }\n    UpdateContainerError other \u003d (UpdateContainerError) obj;\n    String reason \u003d getReason();\n    if (reason \u003d\u003d null) {\n      if (other.getReason() !\u003d null) {\n        return false;\n      }\n    } else if (!reason.equals(other.getReason())) {\n      return false;\n    }\n    UpdateContainerRequest req \u003d getUpdateContainerRequest();\n    if (req \u003d\u003d null) {\n      if (other.getUpdateContainerRequest() !\u003d null) {\n        return false;\n      }\n    } else if (!req.equals(other.getUpdateContainerRequest())) {\n      return false;\n    }\n    return true;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/UpdateContainerError.java",
          "extendedDetails": {
            "oldValue": "[other-Object]",
            "newValue": "[obj-Object]"
          }
        }
      ]
    },
    "dfe2cb849fcb273d32e840d8562eaaee904af054": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-3866. AM-RM protocol changes to support container resizing. Contributed by Meng Ding\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "dfe2cb849fcb273d32e840d8562eaaee904af054",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-3866. AM-RM protocol changes to support container resizing. Contributed by Meng Ding\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "dfe2cb849fcb273d32e840d8562eaaee904af054",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/09/15 9:38 AM",
          "commitNameOld": "692d51c09d3668cde47cc297296d095ddfa933a3",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public boolean equals(Object other) {\n-    if (other instanceof ContainerResourceDecrease) {\n-      ContainerResourceDecrease ctx \u003d (ContainerResourceDecrease)other;\n-      \n+    if (other instanceof ContainerResourceChangeRequest) {\n+      ContainerResourceChangeRequest ctx \u003d\n+          (ContainerResourceChangeRequest) other;\n+\n       if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n         return false;\n       } else if (!getContainerId().equals(ctx.getContainerId())) {\n         return false;\n       }\n-      \n+\n       if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n         return false;\n       } else if (!getCapability().equals(ctx.getCapability())) {\n         return false;\n       }\n-      \n+\n       return true;\n     } else {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean equals(Object other) {\n    if (other instanceof ContainerResourceChangeRequest) {\n      ContainerResourceChangeRequest ctx \u003d\n          (ContainerResourceChangeRequest) other;\n\n      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n        return false;\n      } else if (!getContainerId().equals(ctx.getContainerId())) {\n        return false;\n      }\n\n      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n        return false;\n      } else if (!getCapability().equals(ctx.getCapability())) {\n        return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceChangeRequest.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceDecrease.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceChangeRequest.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3866. AM-RM protocol changes to support container resizing. Contributed by Meng Ding\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "dfe2cb849fcb273d32e840d8562eaaee904af054",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/09/15 9:38 AM",
          "commitNameOld": "692d51c09d3668cde47cc297296d095ddfa933a3",
          "commitAuthorOld": "Jason Lowe",
          "daysBetweenCommits": 0.16,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,22 @@\n   public boolean equals(Object other) {\n-    if (other instanceof ContainerResourceDecrease) {\n-      ContainerResourceDecrease ctx \u003d (ContainerResourceDecrease)other;\n-      \n+    if (other instanceof ContainerResourceChangeRequest) {\n+      ContainerResourceChangeRequest ctx \u003d\n+          (ContainerResourceChangeRequest) other;\n+\n       if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n         return false;\n       } else if (!getContainerId().equals(ctx.getContainerId())) {\n         return false;\n       }\n-      \n+\n       if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n         return false;\n       } else if (!getCapability().equals(ctx.getCapability())) {\n         return false;\n       }\n-      \n+\n       return true;\n     } else {\n       return false;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean equals(Object other) {\n    if (other instanceof ContainerResourceChangeRequest) {\n      ContainerResourceChangeRequest ctx \u003d\n          (ContainerResourceChangeRequest) other;\n\n      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n        return false;\n      } else if (!getContainerId().equals(ctx.getContainerId())) {\n        return false;\n      }\n\n      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n        return false;\n      } else if (!getCapability().equals(ctx.getCapability())) {\n        return false;\n      }\n\n      return true;\n    } else {\n      return false;\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceChangeRequest.java",
          "extendedDetails": {}
        }
      ]
    },
    "1cdeb83167cdb05db9077d65a9a8440b2aca9bfe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1447: Forgot to add new files\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548320 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/12/13 2:16 PM",
      "commitName": "1cdeb83167cdb05db9077d65a9a8440b2aca9bfe",
      "commitAuthor": "Sanford Ryza",
      "diff": "@@ -0,0 +1,21 @@\n+  public boolean equals(Object other) {\n+    if (other instanceof ContainerResourceDecrease) {\n+      ContainerResourceDecrease ctx \u003d (ContainerResourceDecrease)other;\n+      \n+      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n+        return false;\n+      } else if (!getContainerId().equals(ctx.getContainerId())) {\n+        return false;\n+      }\n+      \n+      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n+        return false;\n+      } else if (!getCapability().equals(ctx.getCapability())) {\n+        return false;\n+      }\n+      \n+      return true;\n+    } else {\n+      return false;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean equals(Object other) {\n    if (other instanceof ContainerResourceDecrease) {\n      ContainerResourceDecrease ctx \u003d (ContainerResourceDecrease)other;\n      \n      if (getContainerId() \u003d\u003d null \u0026\u0026 ctx.getContainerId() !\u003d null) {\n        return false;\n      } else if (!getContainerId().equals(ctx.getContainerId())) {\n        return false;\n      }\n      \n      if (getCapability() \u003d\u003d null \u0026\u0026 ctx.getCapability() !\u003d null) {\n        return false;\n      } else if (!getCapability().equals(ctx.getCapability())) {\n        return false;\n      }\n      \n      return true;\n    } else {\n      return false;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ContainerResourceDecrease.java"
    }
  }
}