{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Anonymizer.java",
  "functionName": "anonymizeTrace",
  "functionId": "anonymizeTrace",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/Anonymizer.java",
  "functionStartLine": 112,
  "functionEndLine": 146,
  "numCommitsSeen": 3,
  "timeTaken": 1046,
  "changeHistory": [
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "a238f931ea7dce0ca620d1798156c84ff77097ff"
  ],
  "changeHistoryShort": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "a238f931ea7dce0ca620d1798156c84ff77097ff": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void anonymizeTrace() throws Exception {\n    if (anonymizeTrace) {\n      System.out.println(\"Anonymizing trace file: \" + inputTracePath);\n      JobTraceReader reader \u003d null;\n      JsonGenerator outGen \u003d null;\n      Configuration conf \u003d getConf();\n      \n      try {\n        // create a generator\n        outGen \u003d createJsonGenerator(conf, outputTracePath);\n\n        // define the input trace reader\n        reader \u003d new JobTraceReader(inputTracePath, conf);\n        \n        // read the plain unanonymized logged job\n        LoggedJob job \u003d reader.getNext();\n        \n        while (job !\u003d null) {\n          // write it via an anonymizing channel\n          outGen.writeObject(job);\n          // read the next job\n          job \u003d reader.getNext();\n        }\n        \n        System.out.println(\"Anonymized trace file: \" + outputTracePath);\n      } finally {\n        if (outGen !\u003d null) {\n          outGen.close();\n        }\n        if (reader !\u003d null) {\n          reader.close();\n        }\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/Anonymizer.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/Anonymizer.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/Anonymizer.java"
      }
    },
    "a238f931ea7dce0ca620d1798156c84ff77097ff": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-778. Rumen Anonymizer. (Amar Kamat and Chris Douglas via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1215141 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/11 6:20 AM",
      "commitName": "a238f931ea7dce0ca620d1798156c84ff77097ff",
      "commitAuthor": "Amar Kamat",
      "diff": "@@ -0,0 +1,35 @@\n+  private void anonymizeTrace() throws Exception {\n+    if (anonymizeTrace) {\n+      System.out.println(\"Anonymizing trace file: \" + inputTracePath);\n+      JobTraceReader reader \u003d null;\n+      JsonGenerator outGen \u003d null;\n+      Configuration conf \u003d getConf();\n+      \n+      try {\n+        // create a generator\n+        outGen \u003d createJsonGenerator(conf, outputTracePath);\n+\n+        // define the input trace reader\n+        reader \u003d new JobTraceReader(inputTracePath, conf);\n+        \n+        // read the plain unanonymized logged job\n+        LoggedJob job \u003d reader.getNext();\n+        \n+        while (job !\u003d null) {\n+          // write it via an anonymizing channel\n+          outGen.writeObject(job);\n+          // read the next job\n+          job \u003d reader.getNext();\n+        }\n+        \n+        System.out.println(\"Anonymized trace file: \" + outputTracePath);\n+      } finally {\n+        if (outGen !\u003d null) {\n+          outGen.close();\n+        }\n+        if (reader !\u003d null) {\n+          reader.close();\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void anonymizeTrace() throws Exception {\n    if (anonymizeTrace) {\n      System.out.println(\"Anonymizing trace file: \" + inputTracePath);\n      JobTraceReader reader \u003d null;\n      JsonGenerator outGen \u003d null;\n      Configuration conf \u003d getConf();\n      \n      try {\n        // create a generator\n        outGen \u003d createJsonGenerator(conf, outputTracePath);\n\n        // define the input trace reader\n        reader \u003d new JobTraceReader(inputTracePath, conf);\n        \n        // read the plain unanonymized logged job\n        LoggedJob job \u003d reader.getNext();\n        \n        while (job !\u003d null) {\n          // write it via an anonymizing channel\n          outGen.writeObject(job);\n          // read the next job\n          job \u003d reader.getNext();\n        }\n        \n        System.out.println(\"Anonymized trace file: \" + outputTracePath);\n      } finally {\n        if (outGen !\u003d null) {\n          outGen.close();\n        }\n        if (reader !\u003d null) {\n          reader.close();\n        }\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/Anonymizer.java"
    }
  }
}