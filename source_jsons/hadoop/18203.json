{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterAdmin.java",
  "functionName": "addMount",
  "functionId": "addMount___parameters-String[]__i-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
  "functionStartLine": 478,
  "functionEndLine": 523,
  "numCommitsSeen": 36,
  "timeTaken": 3022,
  "changeHistory": [
    "6c42d4050461ab71c88f123569649793dc53aebd",
    "9315db5f5da09c2ef86be168465c16932afa2d85",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638"
  ],
  "changeHistoryShort": {
    "6c42d4050461ab71c88f123569649793dc53aebd": "Ybodychange",
    "9315db5f5da09c2ef86be168465c16932afa2d85": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e": "Ybodychange",
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6c42d4050461ab71c88f123569649793dc53aebd": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14316. RBF: Support unavailable subclusters for mount points with multiple destinations. Contributed by Inigo Goiri.\n",
      "commitDate": "24/06/19 9:33 AM",
      "commitName": "6c42d4050461ab71c88f123569649793dc53aebd",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "24/06/19 9:33 AM",
      "commitNameOld": "8b8ff5ccbc677d98a91092b2fa64999a99d1595d",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,46 @@\n   public boolean addMount(String[] parameters, int i) throws IOException {\n     // Mandatory parameters\n     String mount \u003d parameters[i++];\n     String[] nss \u003d parameters[i++].split(\",\");\n     String dest \u003d parameters[i++];\n \n     // Optional parameters\n     boolean readOnly \u003d false;\n+    boolean faultTolerant \u003d false;\n     String owner \u003d null;\n     String group \u003d null;\n     FsPermission mode \u003d null;\n     DestinationOrder order \u003d DestinationOrder.HASH;\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-readonly\")) {\n         readOnly \u003d true;\n+      } else if (parameters[i].equals(\"-faulttolerant\")) {\n+        faultTolerant \u003d true;\n       } else if (parameters[i].equals(\"-order\")) {\n         i++;\n         try {\n           order \u003d DestinationOrder.valueOf(parameters[i]);\n         } catch(Exception e) {\n           System.err.println(\"Cannot parse order: \" + parameters[i]);\n         }\n       } else if (parameters[i].equals(\"-owner\")) {\n         i++;\n         owner \u003d parameters[i];\n       } else if (parameters[i].equals(\"-group\")) {\n         i++;\n         group \u003d parameters[i];\n       } else if (parameters[i].equals(\"-mode\")) {\n         i++;\n         short modeValue \u003d Short.parseShort(parameters[i], 8);\n         mode \u003d new FsPermission(modeValue);\n       } else {\n         printUsage(\"-add\");\n         return false;\n       }\n \n       i++;\n     }\n \n-    return addMount(mount, nss, dest, readOnly, order,\n+    return addMount(mount, nss, dest, readOnly, faultTolerant, order,\n         new ACLEntity(owner, group, mode));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String[] parameters, int i) throws IOException {\n    // Mandatory parameters\n    String mount \u003d parameters[i++];\n    String[] nss \u003d parameters[i++].split(\",\");\n    String dest \u003d parameters[i++];\n\n    // Optional parameters\n    boolean readOnly \u003d false;\n    boolean faultTolerant \u003d false;\n    String owner \u003d null;\n    String group \u003d null;\n    FsPermission mode \u003d null;\n    DestinationOrder order \u003d DestinationOrder.HASH;\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-readonly\")) {\n        readOnly \u003d true;\n      } else if (parameters[i].equals(\"-faulttolerant\")) {\n        faultTolerant \u003d true;\n      } else if (parameters[i].equals(\"-order\")) {\n        i++;\n        try {\n          order \u003d DestinationOrder.valueOf(parameters[i]);\n        } catch(Exception e) {\n          System.err.println(\"Cannot parse order: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-owner\")) {\n        i++;\n        owner \u003d parameters[i];\n      } else if (parameters[i].equals(\"-group\")) {\n        i++;\n        group \u003d parameters[i];\n      } else if (parameters[i].equals(\"-mode\")) {\n        i++;\n        short modeValue \u003d Short.parseShort(parameters[i], 8);\n        mode \u003d new FsPermission(modeValue);\n      } else {\n        printUsage(\"-add\");\n        return false;\n      }\n\n      i++;\n    }\n\n    return addMount(mount, nss, dest, readOnly, faultTolerant, order,\n        new ACLEntity(owner, group, mode));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "9315db5f5da09c2ef86be168465c16932afa2d85": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13815. RBF: Add check to order command. Contributed by Ranith Sardar.\n",
      "commitDate": "05/09/18 8:33 AM",
      "commitName": "9315db5f5da09c2ef86be168465c16932afa2d85",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "03/09/18 1:58 AM",
      "commitNameOld": "780df9034f265a8e602856b34cc21d9be02f5c48",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,43 @@\n   public boolean addMount(String[] parameters, int i) throws IOException {\n     // Mandatory parameters\n     String mount \u003d parameters[i++];\n     String[] nss \u003d parameters[i++].split(\",\");\n     String dest \u003d parameters[i++];\n \n     // Optional parameters\n     boolean readOnly \u003d false;\n     String owner \u003d null;\n     String group \u003d null;\n     FsPermission mode \u003d null;\n     DestinationOrder order \u003d DestinationOrder.HASH;\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-readonly\")) {\n         readOnly \u003d true;\n       } else if (parameters[i].equals(\"-order\")) {\n         i++;\n         try {\n           order \u003d DestinationOrder.valueOf(parameters[i]);\n         } catch(Exception e) {\n           System.err.println(\"Cannot parse order: \" + parameters[i]);\n         }\n       } else if (parameters[i].equals(\"-owner\")) {\n         i++;\n         owner \u003d parameters[i];\n       } else if (parameters[i].equals(\"-group\")) {\n         i++;\n         group \u003d parameters[i];\n       } else if (parameters[i].equals(\"-mode\")) {\n         i++;\n         short modeValue \u003d Short.parseShort(parameters[i], 8);\n         mode \u003d new FsPermission(modeValue);\n+      } else {\n+        printUsage(\"-add\");\n+        return false;\n       }\n \n       i++;\n     }\n \n     return addMount(mount, nss, dest, readOnly, order,\n         new ACLEntity(owner, group, mode));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String[] parameters, int i) throws IOException {\n    // Mandatory parameters\n    String mount \u003d parameters[i++];\n    String[] nss \u003d parameters[i++].split(\",\");\n    String dest \u003d parameters[i++];\n\n    // Optional parameters\n    boolean readOnly \u003d false;\n    String owner \u003d null;\n    String group \u003d null;\n    FsPermission mode \u003d null;\n    DestinationOrder order \u003d DestinationOrder.HASH;\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-readonly\")) {\n        readOnly \u003d true;\n      } else if (parameters[i].equals(\"-order\")) {\n        i++;\n        try {\n          order \u003d DestinationOrder.valueOf(parameters[i]);\n        } catch(Exception e) {\n          System.err.println(\"Cannot parse order: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-owner\")) {\n        i++;\n        owner \u003d parameters[i];\n      } else if (parameters[i].equals(\"-group\")) {\n        i++;\n        group \u003d parameters[i];\n      } else if (parameters[i].equals(\"-mode\")) {\n        i++;\n        short modeValue \u003d Short.parseShort(parameters[i], 8);\n        mode \u003d new FsPermission(modeValue);\n      } else {\n        printUsage(\"-add\");\n        return false;\n      }\n\n      i++;\n    }\n\n    return addMount(mount, nss, dest, readOnly, order,\n        new ACLEntity(owner, group, mode));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean addMount(String[] parameters, int i) throws IOException {\n    // Mandatory parameters\n    String mount \u003d parameters[i++];\n    String[] nss \u003d parameters[i++].split(\",\");\n    String dest \u003d parameters[i++];\n\n    // Optional parameters\n    boolean readOnly \u003d false;\n    String owner \u003d null;\n    String group \u003d null;\n    FsPermission mode \u003d null;\n    DestinationOrder order \u003d DestinationOrder.HASH;\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-readonly\")) {\n        readOnly \u003d true;\n      } else if (parameters[i].equals(\"-order\")) {\n        i++;\n        try {\n          order \u003d DestinationOrder.valueOf(parameters[i]);\n        } catch(Exception e) {\n          System.err.println(\"Cannot parse order: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-owner\")) {\n        i++;\n        owner \u003d parameters[i];\n      } else if (parameters[i].equals(\"-group\")) {\n        i++;\n        group \u003d parameters[i];\n      } else if (parameters[i].equals(\"-mode\")) {\n        i++;\n        short modeValue \u003d Short.parseShort(parameters[i], 8);\n        mode \u003d new FsPermission(modeValue);\n      }\n\n      i++;\n    }\n\n    return addMount(mount, nss, dest, readOnly, order,\n        new ACLEntity(owner, group, mode));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
      }
    },
    "ee028bfdf1c88a27cd925bed93ebb599a164dd2e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12895. RBF: Add ACL support for mount table. Contributed by Yiqun Lin.\n",
      "commitDate": "14/12/17 10:09 PM",
      "commitName": "ee028bfdf1c88a27cd925bed93ebb599a164dd2e",
      "commitAuthor": "Yiqun Lin",
      "commitDateOld": "11/12/17 3:14 PM",
      "commitNameOld": "5cd1056ad77a2ebb0466e7bc5933337b57f6fe30",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 3.29,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,40 @@\n   public boolean addMount(String[] parameters, int i) throws IOException {\n     // Mandatory parameters\n     String mount \u003d parameters[i++];\n     String[] nss \u003d parameters[i++].split(\",\");\n     String dest \u003d parameters[i++];\n \n     // Optional parameters\n     boolean readOnly \u003d false;\n+    String owner \u003d null;\n+    String group \u003d null;\n+    FsPermission mode \u003d null;\n     DestinationOrder order \u003d DestinationOrder.HASH;\n     while (i \u003c parameters.length) {\n       if (parameters[i].equals(\"-readonly\")) {\n         readOnly \u003d true;\n       } else if (parameters[i].equals(\"-order\")) {\n         i++;\n         try {\n           order \u003d DestinationOrder.valueOf(parameters[i]);\n         } catch(Exception e) {\n           System.err.println(\"Cannot parse order: \" + parameters[i]);\n         }\n+      } else if (parameters[i].equals(\"-owner\")) {\n+        i++;\n+        owner \u003d parameters[i];\n+      } else if (parameters[i].equals(\"-group\")) {\n+        i++;\n+        group \u003d parameters[i];\n+      } else if (parameters[i].equals(\"-mode\")) {\n+        i++;\n+        short modeValue \u003d Short.parseShort(parameters[i], 8);\n+        mode \u003d new FsPermission(modeValue);\n       }\n+\n       i++;\n     }\n \n-    return addMount(mount, nss, dest, readOnly, order);\n+    return addMount(mount, nss, dest, readOnly, order,\n+        new ACLEntity(owner, group, mode));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String[] parameters, int i) throws IOException {\n    // Mandatory parameters\n    String mount \u003d parameters[i++];\n    String[] nss \u003d parameters[i++].split(\",\");\n    String dest \u003d parameters[i++];\n\n    // Optional parameters\n    boolean readOnly \u003d false;\n    String owner \u003d null;\n    String group \u003d null;\n    FsPermission mode \u003d null;\n    DestinationOrder order \u003d DestinationOrder.HASH;\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-readonly\")) {\n        readOnly \u003d true;\n      } else if (parameters[i].equals(\"-order\")) {\n        i++;\n        try {\n          order \u003d DestinationOrder.valueOf(parameters[i]);\n        } catch(Exception e) {\n          System.err.println(\"Cannot parse order: \" + parameters[i]);\n        }\n      } else if (parameters[i].equals(\"-owner\")) {\n        i++;\n        owner \u003d parameters[i];\n      } else if (parameters[i].equals(\"-group\")) {\n        i++;\n        group \u003d parameters[i];\n      } else if (parameters[i].equals(\"-mode\")) {\n        i++;\n        short modeValue \u003d Short.parseShort(parameters[i], 8);\n        mode \u003d new FsPermission(modeValue);\n      }\n\n      i++;\n    }\n\n    return addMount(mount, nss, dest, readOnly, order,\n        new ACLEntity(owner, group, mode));\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java",
      "extendedDetails": {}
    },
    "b3e6bd22e3c02b3e4f50396538f56a1bcb007638": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10646. Federation admin tool. Contributed by Inigo Goiri.\n\n(cherry picked from commit ae27e31fbcf546481db0b0345772db2e9132372e)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "b3e6bd22e3c02b3e4f50396538f56a1bcb007638",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,25 @@\n+  public boolean addMount(String[] parameters, int i) throws IOException {\n+    // Mandatory parameters\n+    String mount \u003d parameters[i++];\n+    String[] nss \u003d parameters[i++].split(\",\");\n+    String dest \u003d parameters[i++];\n+\n+    // Optional parameters\n+    boolean readOnly \u003d false;\n+    DestinationOrder order \u003d DestinationOrder.HASH;\n+    while (i \u003c parameters.length) {\n+      if (parameters[i].equals(\"-readonly\")) {\n+        readOnly \u003d true;\n+      } else if (parameters[i].equals(\"-order\")) {\n+        i++;\n+        try {\n+          order \u003d DestinationOrder.valueOf(parameters[i]);\n+        } catch(Exception e) {\n+          System.err.println(\"Cannot parse order: \" + parameters[i]);\n+        }\n+      }\n+      i++;\n+    }\n+\n+    return addMount(mount, nss, dest, readOnly, order);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean addMount(String[] parameters, int i) throws IOException {\n    // Mandatory parameters\n    String mount \u003d parameters[i++];\n    String[] nss \u003d parameters[i++].split(\",\");\n    String dest \u003d parameters[i++];\n\n    // Optional parameters\n    boolean readOnly \u003d false;\n    DestinationOrder order \u003d DestinationOrder.HASH;\n    while (i \u003c parameters.length) {\n      if (parameters[i].equals(\"-readonly\")) {\n        readOnly \u003d true;\n      } else if (parameters[i].equals(\"-order\")) {\n        i++;\n        try {\n          order \u003d DestinationOrder.valueOf(parameters[i]);\n        } catch(Exception e) {\n          System.err.println(\"Cannot parse order: \" + parameters[i]);\n        }\n      }\n      i++;\n    }\n\n    return addMount(mount, nss, dest, readOnly, order);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/federation/RouterAdmin.java"
    }
  }
}