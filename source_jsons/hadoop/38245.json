{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "QueuePriorityContainerCandidateSelector.java",
  "functionName": "isQueueSatisfied",
  "functionId": "isQueueSatisfied___demandingQueue-String__partition-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/QueuePriorityContainerCandidateSelector.java",
  "functionStartLine": 337,
  "functionEndLine": 359,
  "numCommitsSeen": 8,
  "timeTaken": 1707,
  "changeHistory": [
    "ce832059db077fa95922198b066a737ed4f609fe"
  ],
  "changeHistoryShort": {
    "ce832059db077fa95922198b066a737ed4f609fe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce832059db077fa95922198b066a737ed4f609fe": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5864. Capacity Scheduler - Queue Priorities. (wangda)\n",
      "commitDate": "23/01/17 10:52 AM",
      "commitName": "ce832059db077fa95922198b066a737ed4f609fe",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,23 @@\n+  private boolean isQueueSatisfied(String demandingQueue,\n+      String partition) {\n+    TempQueuePerPartition tq \u003d preemptionContext.getQueueByPartition(\n+        demandingQueue, partition);\n+    if (null \u003d\u003d tq) {\n+      return false;\n+    }\n+\n+    Resource guaranteed \u003d tq.getGuaranteed();\n+    Resource usedDeductReservd \u003d Resources.subtract(tq.getUsed(),\n+        tq.getReserved());\n+    Resource markedToPreemptFromOtherQueue \u003d toPreemptedFromOtherQueues.get(\n+        demandingQueue, partition);\n+    if (null \u003d\u003d markedToPreemptFromOtherQueue) {\n+      markedToPreemptFromOtherQueue \u003d Resources.none();\n+    }\n+\n+    // return Used - reserved + to-preempt-from-other-queue \u003e\u003d guaranteed\n+    boolean flag \u003d Resources.greaterThanOrEqual(rc, clusterResource,\n+        Resources.add(usedDeductReservd, markedToPreemptFromOtherQueue),\n+        guaranteed);\n+    return flag;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean isQueueSatisfied(String demandingQueue,\n      String partition) {\n    TempQueuePerPartition tq \u003d preemptionContext.getQueueByPartition(\n        demandingQueue, partition);\n    if (null \u003d\u003d tq) {\n      return false;\n    }\n\n    Resource guaranteed \u003d tq.getGuaranteed();\n    Resource usedDeductReservd \u003d Resources.subtract(tq.getUsed(),\n        tq.getReserved());\n    Resource markedToPreemptFromOtherQueue \u003d toPreemptedFromOtherQueues.get(\n        demandingQueue, partition);\n    if (null \u003d\u003d markedToPreemptFromOtherQueue) {\n      markedToPreemptFromOtherQueue \u003d Resources.none();\n    }\n\n    // return Used - reserved + to-preempt-from-other-queue \u003e\u003d guaranteed\n    boolean flag \u003d Resources.greaterThanOrEqual(rc, clusterResource,\n        Resources.add(usedDeductReservd, markedToPreemptFromOtherQueue),\n        guaranteed);\n    return flag;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/monitor/capacity/QueuePriorityContainerCandidateSelector.java"
    }
  }
}