{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "InMemoryLevelDBAliasMapServer.java",
  "functionName": "start",
  "functionId": "start",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java",
  "functionStartLine": 72,
  "functionEndLine": 102,
  "numCommitsSeen": 10,
  "timeTaken": 1847,
  "changeHistory": [
    "77170e70d16e309121ca7730974617c05e66d063",
    "b1a59b164412fbd9f641a7e992a7d1a3fd0f1a10",
    "1804a31515e541b3371925aa895589919b54d443",
    "9c35be86e17021202823bfd3c2067ff3b312ce5c",
    "352f994b6484524cdcfcda021046c59905b62f31"
  ],
  "changeHistoryShort": {
    "77170e70d16e309121ca7730974617c05e66d063": "Ybodychange",
    "b1a59b164412fbd9f641a7e992a7d1a3fd0f1a10": "Ybodychange",
    "1804a31515e541b3371925aa895589919b54d443": "Ybodychange",
    "9c35be86e17021202823bfd3c2067ff3b312ce5c": "Ybodychange",
    "352f994b6484524cdcfcda021046c59905b62f31": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77170e70d16e309121ca7730974617c05e66d063": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14390. Provide kerberos support for AliasMap service used by Provided storage. Contributed by Ashvin Agrawal\n",
      "commitDate": "15/05/19 12:15 PM",
      "commitName": "77170e70d16e309121ca7730974617c05e66d063",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "07/12/18 6:30 PM",
      "commitNameOld": "8fc0d04517912766a3102f3e611f7d0fabd2f815",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 158.7,
      "commitsBetweenForRepo": 1090,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,31 @@\n   public void start() throws IOException {\n-    if (UserGroupInformation.isSecurityEnabled()) {\n-      throw new UnsupportedOperationException(\"Unable to start \"\n-          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n-    }\n     RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n         ProtobufRpcEngine.class);\n     AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n         new AliasMapProtocolServerSideTranslatorPB(this);\n \n     BlockingService aliasMapProtocolService \u003d\n         AliasMapProtocolService\n             .newReflectiveBlockingService(aliasMapProtocolXlator);\n \n     InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n \n     boolean setVerbose \u003d conf.getBoolean(\n         DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG_DEFAULT);\n \n     aliasMapServer \u003d new RPC.Builder(conf)\n         .setProtocol(AliasMapProtocolPB.class)\n         .setInstance(aliasMapProtocolService)\n         .setBindAddress(rpcAddress.getHostName())\n         .setPort(rpcAddress.getPort())\n         .setNumHandlers(1)\n         .setVerbose(setVerbose)\n         .build();\n \n     LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n     aliasMapServer.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException {\n    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n        ProtobufRpcEngine.class);\n    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n        new AliasMapProtocolServerSideTranslatorPB(this);\n\n    BlockingService aliasMapProtocolService \u003d\n        AliasMapProtocolService\n            .newReflectiveBlockingService(aliasMapProtocolXlator);\n\n    InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n\n    boolean setVerbose \u003d conf.getBoolean(\n        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG_DEFAULT);\n\n    aliasMapServer \u003d new RPC.Builder(conf)\n        .setProtocol(AliasMapProtocolPB.class)\n        .setInstance(aliasMapProtocolService)\n        .setBindAddress(rpcAddress.getHostName())\n        .setPort(rpcAddress.getPort())\n        .setNumHandlers(1)\n        .setVerbose(setVerbose)\n        .build();\n\n    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n    aliasMapServer.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java",
      "extendedDetails": {}
    },
    "b1a59b164412fbd9f641a7e992a7d1a3fd0f1a10": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13796. Allow verbosity of InMemoryLevelDBAliasMapServer to be configurable.\n",
      "commitDate": "07/08/18 10:15 AM",
      "commitName": "b1a59b164412fbd9f641a7e992a7d1a3fd0f1a10",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "02/07/18 10:48 AM",
      "commitNameOld": "1804a31515e541b3371925aa895589919b54d443",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 35.98,
      "commitsBetweenForRepo": 223,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,35 @@\n   public void start() throws IOException {\n     if (UserGroupInformation.isSecurityEnabled()) {\n       throw new UnsupportedOperationException(\"Unable to start \"\n           + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n     }\n     RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n         ProtobufRpcEngine.class);\n     AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n         new AliasMapProtocolServerSideTranslatorPB(this);\n \n     BlockingService aliasMapProtocolService \u003d\n         AliasMapProtocolService\n             .newReflectiveBlockingService(aliasMapProtocolXlator);\n \n     InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n         DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n \n+    boolean setVerbose \u003d conf.getBoolean(\n+        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG,\n+        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG_DEFAULT);\n+\n     aliasMapServer \u003d new RPC.Builder(conf)\n         .setProtocol(AliasMapProtocolPB.class)\n         .setInstance(aliasMapProtocolService)\n         .setBindAddress(rpcAddress.getHostName())\n         .setPort(rpcAddress.getPort())\n         .setNumHandlers(1)\n-        .setVerbose(true)\n+        .setVerbose(setVerbose)\n         .build();\n \n     LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n     aliasMapServer.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException {\n    if (UserGroupInformation.isSecurityEnabled()) {\n      throw new UnsupportedOperationException(\"Unable to start \"\n          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n    }\n    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n        ProtobufRpcEngine.class);\n    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n        new AliasMapProtocolServerSideTranslatorPB(this);\n\n    BlockingService aliasMapProtocolService \u003d\n        AliasMapProtocolService\n            .newReflectiveBlockingService(aliasMapProtocolXlator);\n\n    InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n\n    boolean setVerbose \u003d conf.getBoolean(\n        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_SERVER_LOG_DEFAULT);\n\n    aliasMapServer \u003d new RPC.Builder(conf)\n        .setProtocol(AliasMapProtocolPB.class)\n        .setInstance(aliasMapProtocolService)\n        .setBindAddress(rpcAddress.getHostName())\n        .setPort(rpcAddress.getPort())\n        .setNumHandlers(1)\n        .setVerbose(setVerbose)\n        .build();\n\n    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n    aliasMapServer.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java",
      "extendedDetails": {}
    },
    "1804a31515e541b3371925aa895589919b54d443": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13536. [PROVIDED Storage] HA for InMemoryAliasMap. Contributed by Virajith Jalaparti.\n",
      "commitDate": "02/07/18 10:48 AM",
      "commitName": "1804a31515e541b3371925aa895589919b54d443",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "80c3fec3a13c41051daaae42e5c9a9fedf5c7ee7",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 198.66,
      "commitsBetweenForRepo": 1891,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,31 @@\n   public void start() throws IOException {\n     if (UserGroupInformation.isSecurityEnabled()) {\n       throw new UnsupportedOperationException(\"Unable to start \"\n           + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n     }\n     RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n         ProtobufRpcEngine.class);\n     AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n         new AliasMapProtocolServerSideTranslatorPB(this);\n \n     BlockingService aliasMapProtocolService \u003d\n         AliasMapProtocolService\n             .newReflectiveBlockingService(aliasMapProtocolXlator);\n \n-    String rpcAddress \u003d\n-        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n-            DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);\n-    String[] split \u003d rpcAddress.split(\":\");\n-    String bindHost \u003d split[0];\n-    Integer port \u003d Integer.valueOf(split[1]);\n+    InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n+        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n+        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n+        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n \n     aliasMapServer \u003d new RPC.Builder(conf)\n         .setProtocol(AliasMapProtocolPB.class)\n         .setInstance(aliasMapProtocolService)\n-        .setBindAddress(bindHost)\n-        .setPort(port)\n+        .setBindAddress(rpcAddress.getHostName())\n+        .setPort(rpcAddress.getPort())\n         .setNumHandlers(1)\n         .setVerbose(true)\n         .build();\n \n     LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n     aliasMapServer.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException {\n    if (UserGroupInformation.isSecurityEnabled()) {\n      throw new UnsupportedOperationException(\"Unable to start \"\n          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n    }\n    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n        ProtobufRpcEngine.class);\n    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n        new AliasMapProtocolServerSideTranslatorPB(this);\n\n    BlockingService aliasMapProtocolService \u003d\n        AliasMapProtocolService\n            .newReflectiveBlockingService(aliasMapProtocolXlator);\n\n    InetSocketAddress rpcAddress \u003d getBindAddress(conf,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT,\n        DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_BIND_HOST);\n\n    aliasMapServer \u003d new RPC.Builder(conf)\n        .setProtocol(AliasMapProtocolPB.class)\n        .setInstance(aliasMapProtocolService)\n        .setBindAddress(rpcAddress.getHostName())\n        .setPort(rpcAddress.getPort())\n        .setNumHandlers(1)\n        .setVerbose(true)\n        .build();\n\n    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n    aliasMapServer.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java",
      "extendedDetails": {}
    },
    "9c35be86e17021202823bfd3c2067ff3b312ce5c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12713. [READ] Refactor FileRegion and BlockAliasMap to separate out HDFS metadata and PROVIDED storage metadata. Contributed by Ewan Higgs\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "9c35be86e17021202823bfd3c2067ff3b312ce5c",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "a027055dd2bf5009fe272e9ceb08305bd0a8cc31",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void start() throws IOException {\n     if (UserGroupInformation.isSecurityEnabled()) {\n       throw new UnsupportedOperationException(\"Unable to start \"\n           + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n     }\n     RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n         ProtobufRpcEngine.class);\n     AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n         new AliasMapProtocolServerSideTranslatorPB(this);\n \n     BlockingService aliasMapProtocolService \u003d\n         AliasMapProtocolService\n             .newReflectiveBlockingService(aliasMapProtocolXlator);\n \n     String rpcAddress \u003d\n         conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n             DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);\n     String[] split \u003d rpcAddress.split(\":\");\n     String bindHost \u003d split[0];\n     Integer port \u003d Integer.valueOf(split[1]);\n \n     aliasMapServer \u003d new RPC.Builder(conf)\n         .setProtocol(AliasMapProtocolPB.class)\n         .setInstance(aliasMapProtocolService)\n         .setBindAddress(bindHost)\n         .setPort(port)\n         .setNumHandlers(1)\n         .setVerbose(true)\n         .build();\n \n-    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on \", rpcAddress);\n+    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n     aliasMapServer.start();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException {\n    if (UserGroupInformation.isSecurityEnabled()) {\n      throw new UnsupportedOperationException(\"Unable to start \"\n          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n    }\n    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n        ProtobufRpcEngine.class);\n    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n        new AliasMapProtocolServerSideTranslatorPB(this);\n\n    BlockingService aliasMapProtocolService \u003d\n        AliasMapProtocolService\n            .newReflectiveBlockingService(aliasMapProtocolXlator);\n\n    String rpcAddress \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n            DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);\n    String[] split \u003d rpcAddress.split(\":\");\n    String bindHost \u003d split[0];\n    Integer port \u003d Integer.valueOf(split[1]);\n\n    aliasMapServer \u003d new RPC.Builder(conf)\n        .setProtocol(AliasMapProtocolPB.class)\n        .setInstance(aliasMapProtocolService)\n        .setBindAddress(bindHost)\n        .setPort(port)\n        .setNumHandlers(1)\n        .setVerbose(true)\n        .build();\n\n    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on {}\", rpcAddress);\n    aliasMapServer.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java",
      "extendedDetails": {}
    },
    "352f994b6484524cdcfcda021046c59905b62f31": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-12665. [AliasMap] Create a version of the AliasMap that runs in memory in the Namenode (leveldb). Contributed by Ewan Higgs.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "352f994b6484524cdcfcda021046c59905b62f31",
      "commitAuthor": "Virajith Jalaparti",
      "diff": "@@ -0,0 +1,33 @@\n+  public void start() throws IOException {\n+    if (UserGroupInformation.isSecurityEnabled()) {\n+      throw new UnsupportedOperationException(\"Unable to start \"\n+          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n+    }\n+    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n+        ProtobufRpcEngine.class);\n+    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n+        new AliasMapProtocolServerSideTranslatorPB(this);\n+\n+    BlockingService aliasMapProtocolService \u003d\n+        AliasMapProtocolService\n+            .newReflectiveBlockingService(aliasMapProtocolXlator);\n+\n+    String rpcAddress \u003d\n+        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n+            DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);\n+    String[] split \u003d rpcAddress.split(\":\");\n+    String bindHost \u003d split[0];\n+    Integer port \u003d Integer.valueOf(split[1]);\n+\n+    aliasMapServer \u003d new RPC.Builder(conf)\n+        .setProtocol(AliasMapProtocolPB.class)\n+        .setInstance(aliasMapProtocolService)\n+        .setBindAddress(bindHost)\n+        .setPort(port)\n+        .setNumHandlers(1)\n+        .setVerbose(true)\n+        .build();\n+\n+    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on \", rpcAddress);\n+    aliasMapServer.start();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void start() throws IOException {\n    if (UserGroupInformation.isSecurityEnabled()) {\n      throw new UnsupportedOperationException(\"Unable to start \"\n          + \"InMemoryLevelDBAliasMapServer as security is enabled\");\n    }\n    RPC.setProtocolEngine(getConf(), AliasMapProtocolPB.class,\n        ProtobufRpcEngine.class);\n    AliasMapProtocolServerSideTranslatorPB aliasMapProtocolXlator \u003d\n        new AliasMapProtocolServerSideTranslatorPB(this);\n\n    BlockingService aliasMapProtocolService \u003d\n        AliasMapProtocolService\n            .newReflectiveBlockingService(aliasMapProtocolXlator);\n\n    String rpcAddress \u003d\n        conf.get(DFSConfigKeys.DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS,\n            DFS_PROVIDED_ALIASMAP_INMEMORY_RPC_ADDRESS_DEFAULT);\n    String[] split \u003d rpcAddress.split(\":\");\n    String bindHost \u003d split[0];\n    Integer port \u003d Integer.valueOf(split[1]);\n\n    aliasMapServer \u003d new RPC.Builder(conf)\n        .setProtocol(AliasMapProtocolPB.class)\n        .setInstance(aliasMapProtocolService)\n        .setBindAddress(bindHost)\n        .setPort(port)\n        .setNumHandlers(1)\n        .setVerbose(true)\n        .build();\n\n    LOG.info(\"Starting InMemoryLevelDBAliasMapServer on \", rpcAddress);\n    aliasMapServer.start();\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/aliasmap/InMemoryLevelDBAliasMapServer.java"
    }
  }
}