{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "setService",
  "functionId": "setService___klass-Class__? extends Service__",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java",
  "functionStartLine": 745,
  "functionEndLine": 769,
  "numCommitsSeen": 12,
  "timeTaken": 573,
  "changeHistory": [
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,25 @@\n+  public void setService(Class\u003c? extends Service\u003e klass) throws ServerException {\n+    ensureOperational();\n+    Check.notNull(klass, \"serviceKlass\");\n+    if (getStatus() \u003d\u003d Status.SHUTTING_DOWN) {\n+      throw new IllegalStateException(\"Server shutting down\");\n+    }\n+    try {\n+      Service newService \u003d klass.newInstance();\n+      Service oldService \u003d services.get(newService.getInterface());\n+      if (oldService !\u003d null) {\n+        try {\n+          oldService.destroy();\n+        } catch (Throwable ex) {\n+          log.error(\"Could not destroy service [{}], {}\",\n+                    new Object[]{oldService.getInterface(), ex.getMessage(), ex});\n+        }\n+      }\n+      newService.init(this);\n+      services.put(newService.getInterface(), newService);\n+    } catch (Exception ex) {\n+      log.error(\"Could not set service [{}] programmatically -server shutting down-, {}\", klass, ex);\n+      destroy();\n+      throw new ServerException(ServerException.ERROR.S09, klass, ex.getMessage(), ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setService(Class\u003c? extends Service\u003e klass) throws ServerException {\n    ensureOperational();\n    Check.notNull(klass, \"serviceKlass\");\n    if (getStatus() \u003d\u003d Status.SHUTTING_DOWN) {\n      throw new IllegalStateException(\"Server shutting down\");\n    }\n    try {\n      Service newService \u003d klass.newInstance();\n      Service oldService \u003d services.get(newService.getInterface());\n      if (oldService !\u003d null) {\n        try {\n          oldService.destroy();\n        } catch (Throwable ex) {\n          log.error(\"Could not destroy service [{}], {}\",\n                    new Object[]{oldService.getInterface(), ex.getMessage(), ex});\n        }\n      }\n      newService.init(this);\n      services.put(newService.getInterface(), newService);\n    } catch (Exception ex) {\n      log.error(\"Could not set service [{}] programmatically -server shutting down-, {}\", klass, ex);\n      destroy();\n      throw new ServerException(ServerException.ERROR.S09, klass, ex.getMessage(), ex);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java"
    }
  }
}