{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FiCaSchedulerApp.java",
  "functionName": "unreserve",
  "functionId": "unreserve___schedulerKey-SchedulerRequestKey__node-FiCaSchedulerNode__rmContainer-RMContainer",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
  "functionStartLine": 687,
  "functionEndLine": 706,
  "numCommitsSeen": 295,
  "timeTaken": 15112,
  "changeHistory": [
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "e9c2aa1bc383cb08784846534415bf17667d6e41",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
    "fdc46bfb37776d8c41b68f6c33a2379d0f329994",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "e9c2aa1bc383cb08784846534415bf17667d6e41": "Ybodychange",
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": "Ybodychange",
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": "Ymultichange(Ymodifierchange,Ybodychange)",
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": "Ymultichange(Yparameterchange,Ybodychange)",
    "fdc46bfb37776d8c41b68f6c33a2379d0f329994": "Ybodychange",
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": "Ymultichange(Ymodifierchange,Ybodychange)",
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": "Ymultichange(Yreturntypechange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": "Yparameterchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 2.69,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n       // Done with the reservation?\n       if (internalUnreserve(node, schedulerKey)) {\n         node.unreserveResource(this);\n \n         // Update reserved metrics\n         queue.getMetrics().unreserveResource(node.getPartition(),\n             getUser(), rmContainer.getReservedResource());\n         queue.decReservedResource(node.getPartition(),\n             rmContainer.getReservedResource());\n         return true;\n       }\n       return false;\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    writeLock.lock();\n    try {\n      // Done with the reservation?\n      if (internalUnreserve(node, schedulerKey)) {\n        node.unreserveResource(this);\n\n        // Update reserved metrics\n        queue.getMetrics().unreserveResource(node.getPartition(),\n            getUser(), rmContainer.getReservedResource());\n        queue.decReservedResource(node.getPartition(),\n            rmContainer.getReservedResource());\n        return true;\n      }\n      return false;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "e9c2aa1bc383cb08784846534415bf17667d6e41": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6467. CSQueueMetrics needs to update the current metrics for default partition only. Contributed by Manikandan R.\n",
      "commitDate": "19/06/17 9:01 AM",
      "commitName": "e9c2aa1bc383cb08784846534415bf17667d6e41",
      "commitAuthor": "Naganarasimha",
      "commitDateOld": "27/03/17 5:23 PM",
      "commitNameOld": "9bae6720cb8432efd78c909dc624c00e367cedf5",
      "commitAuthorOld": "Robert Kanter",
      "daysBetweenCommits": 83.65,
      "commitsBetweenForRepo": 437,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     try {\n       writeLock.lock();\n       // Done with the reservation?\n       if (internalUnreserve(node, schedulerKey)) {\n         node.unreserveResource(this);\n \n         // Update reserved metrics\n-        queue.getMetrics().unreserveResource(getUser(),\n-            rmContainer.getReservedResource());\n+        queue.getMetrics().unreserveResource(node.getPartition(),\n+            getUser(), rmContainer.getReservedResource());\n         queue.decReservedResource(node.getPartition(),\n             rmContainer.getReservedResource());\n         return true;\n       }\n       return false;\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      // Done with the reservation?\n      if (internalUnreserve(node, schedulerKey)) {\n        node.unreserveResource(this);\n\n        // Update reserved metrics\n        queue.getMetrics().unreserveResource(node.getPartition(),\n            getUser(), rmContainer.getReservedResource());\n        queue.decReservedResource(node.getPartition(),\n            rmContainer.getReservedResource());\n        return true;\n      }\n      return false;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6216. Unify Container Resizing code paths with Container Updates making it scheduler agnostic. (Arun Suresh via wangda)\n",
      "commitDate": "28/02/17 10:35 AM",
      "commitName": "eac6b4c35c50e555c2f1b5f913bb2c4d839f1ff4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "09/02/17 10:23 AM",
      "commitNameOld": "5fb723bb77722d41df6959eee23e1b0cfeb5584e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 19.01,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,20 @@\n   public boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     try {\n       writeLock.lock();\n-      // Cancel increase request (if it has reserved increase request\n-      rmContainer.cancelIncreaseReservation();\n-\n       // Done with the reservation?\n       if (internalUnreserve(node, schedulerKey)) {\n         node.unreserveResource(this);\n \n         // Update reserved metrics\n         queue.getMetrics().unreserveResource(getUser(),\n             rmContainer.getReservedResource());\n         queue.decReservedResource(node.getPartition(),\n             rmContainer.getReservedResource());\n         return true;\n       }\n       return false;\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      // Done with the reservation?\n      if (internalUnreserve(node, schedulerKey)) {\n        node.unreserveResource(this);\n\n        // Update reserved metrics\n        queue.getMetrics().unreserveResource(getUser(),\n            rmContainer.getReservedResource());\n        queue.decReservedResource(node.getPartition(),\n            rmContainer.getReservedResource());\n        return true;\n      }\n      return false;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "b8a30f2f170ffbd590e7366c3c944ab4919e40df": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "19/09/16 2:08 AM",
      "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "02/09/16 3:32 AM",
          "commitNameOld": "05f5c0f631680cffc36a79550c351620615445db",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 16.94,
          "commitsBetweenForRepo": 79,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n+  public boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n-    // Cancel increase request (if it has reserved increase request \n-    rmContainer.cancelIncreaseReservation();\n-    \n-    // Done with the reservation?\n-    if (internalUnreserve(node, schedulerKey)) {\n-      node.unreserveResource(this);\n+    try {\n+      writeLock.lock();\n+      // Cancel increase request (if it has reserved increase request\n+      rmContainer.cancelIncreaseReservation();\n \n-      // Update reserved metrics\n-      queue.getMetrics().unreserveResource(getUser(),\n-          rmContainer.getReservedResource());\n-      queue.decReservedResource(node.getPartition(),\n-          rmContainer.getReservedResource());\n-      return true;\n+      // Done with the reservation?\n+      if (internalUnreserve(node, schedulerKey)) {\n+        node.unreserveResource(this);\n+\n+        // Update reserved metrics\n+        queue.getMetrics().unreserveResource(getUser(),\n+            rmContainer.getReservedResource());\n+        queue.decReservedResource(node.getPartition(),\n+            rmContainer.getReservedResource());\n+        return true;\n+      }\n+      return false;\n+    } finally {\n+      writeLock.unlock();\n     }\n-    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      // Cancel increase request (if it has reserved increase request\n      rmContainer.cancelIncreaseReservation();\n\n      // Done with the reservation?\n      if (internalUnreserve(node, schedulerKey)) {\n        node.unreserveResource(this);\n\n        // Update reserved metrics\n        queue.getMetrics().unreserveResource(getUser(),\n            rmContainer.getReservedResource());\n        queue.decReservedResource(node.getPartition(),\n            rmContainer.getReservedResource());\n        return true;\n      }\n      return false;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3141. Improve locks in SchedulerApplicationAttempt/FSAppAttempt/FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "19/09/16 2:08 AM",
          "commitName": "b8a30f2f170ffbd590e7366c3c944ab4919e40df",
          "commitAuthor": "Jian He",
          "commitDateOld": "02/09/16 3:32 AM",
          "commitNameOld": "05f5c0f631680cffc36a79550c351620615445db",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 16.94,
          "commitsBetweenForRepo": 79,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n+  public boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n-    // Cancel increase request (if it has reserved increase request \n-    rmContainer.cancelIncreaseReservation();\n-    \n-    // Done with the reservation?\n-    if (internalUnreserve(node, schedulerKey)) {\n-      node.unreserveResource(this);\n+    try {\n+      writeLock.lock();\n+      // Cancel increase request (if it has reserved increase request\n+      rmContainer.cancelIncreaseReservation();\n \n-      // Update reserved metrics\n-      queue.getMetrics().unreserveResource(getUser(),\n-          rmContainer.getReservedResource());\n-      queue.decReservedResource(node.getPartition(),\n-          rmContainer.getReservedResource());\n-      return true;\n+      // Done with the reservation?\n+      if (internalUnreserve(node, schedulerKey)) {\n+        node.unreserveResource(this);\n+\n+        // Update reserved metrics\n+        queue.getMetrics().unreserveResource(getUser(),\n+            rmContainer.getReservedResource());\n+        queue.decReservedResource(node.getPartition(),\n+            rmContainer.getReservedResource());\n+        return true;\n+      }\n+      return false;\n+    } finally {\n+      writeLock.unlock();\n     }\n-    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    try {\n      writeLock.lock();\n      // Cancel increase request (if it has reserved increase request\n      rmContainer.cancelIncreaseReservation();\n\n      // Done with the reservation?\n      if (internalUnreserve(node, schedulerKey)) {\n        node.unreserveResource(this);\n\n        // Update reserved metrics\n        queue.getMetrics().unreserveResource(getUser(),\n            rmContainer.getReservedResource());\n        queue.decReservedResource(node.getPartition(),\n            rmContainer.getReservedResource());\n        return true;\n      }\n      return false;\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "5aace38b748ba71aaadd2c4d64eba8dc1f816828": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
      "commitDate": "26/07/16 2:54 PM",
      "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 82.08,
          "commitsBetweenForRepo": 671,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public synchronized boolean unreserve(Priority priority,\n+  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Cancel increase request (if it has reserved increase request \n     rmContainer.cancelIncreaseReservation();\n     \n     // Done with the reservation?\n-    if (internalUnreserve(node, priority)) {\n+    if (internalUnreserve(node, schedulerKey)) {\n       node.unreserveResource(this);\n \n       // Update reserved metrics\n       queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getReservedResource());\n       queue.decReservedResource(node.getPartition(),\n           rmContainer.getReservedResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Cancel increase request (if it has reserved increase request \n    rmContainer.cancelIncreaseReservation();\n    \n    // Done with the reservation?\n    if (internalUnreserve(node, schedulerKey)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getReservedResource());\n      queue.decReservedResource(node.getPartition(),\n          rmContainer.getReservedResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer]",
            "newValue": "[schedulerKey-SchedulerRequestKey, node-FiCaSchedulerNode, rmContainer-RMContainer]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5392. Replace use of Priority in the Scheduling infrastructure with an opaque ShedulerRequestKey. (asuresh and subru)\n",
          "commitDate": "26/07/16 2:54 PM",
          "commitName": "5aace38b748ba71aaadd2c4d64eba8dc1f816828",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "05/05/16 12:56 PM",
          "commitNameOld": "bb62e0592566b2fcae7136b30972aad2d3ac55b0",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 82.08,
          "commitsBetweenForRepo": 671,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public synchronized boolean unreserve(Priority priority,\n+  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Cancel increase request (if it has reserved increase request \n     rmContainer.cancelIncreaseReservation();\n     \n     // Done with the reservation?\n-    if (internalUnreserve(node, priority)) {\n+    if (internalUnreserve(node, schedulerKey)) {\n       node.unreserveResource(this);\n \n       // Update reserved metrics\n       queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getReservedResource());\n       queue.decReservedResource(node.getPartition(),\n           rmContainer.getReservedResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean unreserve(SchedulerRequestKey schedulerKey,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Cancel increase request (if it has reserved increase request \n    rmContainer.cancelIncreaseReservation();\n    \n    // Done with the reservation?\n    if (internalUnreserve(node, schedulerKey)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getReservedResource());\n      queue.decReservedResource(node.getPartition(),\n          rmContainer.getReservedResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "fdc46bfb37776d8c41b68f6c33a2379d0f329994": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4934. Reserved Resource for QueueMetrics needs to be handled correctly in few cases. (Sunil G via wangda)\n",
      "commitDate": "16/04/16 10:47 PM",
      "commitName": "fdc46bfb37776d8c41b68f6c33a2379d0f329994",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/03/16 5:02 PM",
      "commitNameOld": "ae14e5d07f1b6702a5160637438028bb03d9387e",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 31.24,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   public synchronized boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Cancel increase request (if it has reserved increase request \n     rmContainer.cancelIncreaseReservation();\n     \n     // Done with the reservation?\n     if (internalUnreserve(node, priority)) {\n       node.unreserveResource(this);\n \n       // Update reserved metrics\n       queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getReservedResource());\n+      queue.decReservedResource(node.getPartition(),\n+          rmContainer.getReservedResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Cancel increase request (if it has reserved increase request \n    rmContainer.cancelIncreaseReservation();\n    \n    // Done with the reservation?\n    if (internalUnreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getReservedResource());\n      queue.decReservedResource(node.getPartition(),\n          rmContainer.getReservedResource());\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
      "extendedDetails": {}
    },
    "89cab1ba5f0671f8ef30dbe7432079c18362b434": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
      "commitDate": "23/09/15 1:29 PM",
      "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthor": "Jian He",
          "commitDateOld": "01/09/15 1:49 AM",
          "commitNameOld": "bf669b6d9f8ba165e30b8823218d625a49958925",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 22.49,
          "commitsBetweenForRepo": 147,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public boolean unreserve(Priority priority,\n+  public synchronized boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n+    // Cancel increase request (if it has reserved increase request \n+    rmContainer.cancelIncreaseReservation();\n+    \n     // Done with the reservation?\n-    if (unreserve(node, priority)) {\n+    if (internalUnreserve(node, priority)) {\n       node.unreserveResource(this);\n \n       // Update reserved metrics\n       queue.getMetrics().unreserveResource(getUser(),\n-          rmContainer.getContainer().getResource());\n+          rmContainer.getReservedResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Cancel increase request (if it has reserved increase request \n    rmContainer.cancelIncreaseReservation();\n    \n    // Done with the reservation?\n    if (internalUnreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getReservedResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1651. CapacityScheduler side changes to support container resize. Contributed by Wangda Tan\n",
          "commitDate": "23/09/15 1:29 PM",
          "commitName": "89cab1ba5f0671f8ef30dbe7432079c18362b434",
          "commitAuthor": "Jian He",
          "commitDateOld": "01/09/15 1:49 AM",
          "commitNameOld": "bf669b6d9f8ba165e30b8823218d625a49958925",
          "commitAuthorOld": "Varun Vasudev",
          "daysBetweenCommits": 22.49,
          "commitsBetweenForRepo": 147,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,16 @@\n-  public boolean unreserve(Priority priority,\n+  public synchronized boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n+    // Cancel increase request (if it has reserved increase request \n+    rmContainer.cancelIncreaseReservation();\n+    \n     // Done with the reservation?\n-    if (unreserve(node, priority)) {\n+    if (internalUnreserve(node, priority)) {\n       node.unreserveResource(this);\n \n       // Update reserved metrics\n       queue.getMetrics().unreserveResource(getUser(),\n-          rmContainer.getContainer().getResource());\n+          rmContainer.getReservedResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Cancel increase request (if it has reserved increase request \n    rmContainer.cancelIncreaseReservation();\n    \n    // Done with the reservation?\n    if (internalUnreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getReservedResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        }
      ]
    },
    "83fe34ac0896cee0918bbfad7bd51231e4aec39b": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
      "commitDate": "24/07/15 2:00 PM",
      "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n+  public boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    if (application.unreserve(node, priority)) {\n-      node.unreserveResource(application);\n+    if (unreserve(node, priority)) {\n+      node.unreserveResource(this);\n \n       // Update reserved metrics\n-      getMetrics().unreserveResource(application.getUser(),\n+      queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getContainer().getResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (unreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
            "oldMethodName": "unreserve",
            "newMethodName": "unreserve"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n+  public boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    if (application.unreserve(node, priority)) {\n-      node.unreserveResource(application);\n+    if (unreserve(node, priority)) {\n+      node.unreserveResource(this);\n \n       // Update reserved metrics\n-      getMetrics().unreserveResource(application.getUser(),\n+      queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getContainer().getResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (unreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n+  public boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    if (application.unreserve(node, priority)) {\n-      node.unreserveResource(application);\n+    if (unreserve(node, priority)) {\n+      node.unreserveResource(this);\n \n       // Update reserved metrics\n-      getMetrics().unreserveResource(application.getUser(),\n+      queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getContainer().getResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (unreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3026. Move application-specific container allocation logic from LeafQueue to FiCaSchedulerApp. Contributed by Wangda Tan\n",
          "commitDate": "24/07/15 2:00 PM",
          "commitName": "83fe34ac0896cee0918bbfad7bd51231e4aec39b",
          "commitAuthor": "Jian He",
          "commitDateOld": "24/07/15 1:38 PM",
          "commitNameOld": "fc42fa8ae3bc9d6d055090a7bb5e6f0c5972fcff",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 0.02,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,13 @@\n-  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n+  public boolean unreserve(Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    if (application.unreserve(node, priority)) {\n-      node.unreserveResource(application);\n+    if (unreserve(node, priority)) {\n+      node.unreserveResource(this);\n \n       // Update reserved metrics\n-      getMetrics().unreserveResource(application.getUser(),\n+      queue.getMetrics().unreserveResource(getUser(),\n           rmContainer.getContainer().getResource());\n       return true;\n     }\n     return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean unreserve(Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (unreserve(node, priority)) {\n      node.unreserveResource(this);\n\n      // Update reserved metrics\n      queue.getMetrics().unreserveResource(getUser(),\n          rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/common/fica/FiCaSchedulerApp.java",
          "extendedDetails": {
            "oldValue": "[application-FiCaSchedulerApp, priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer]",
            "newValue": "[priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer]"
          }
        }
      ]
    },
    "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/07/13 6:20 PM",
      "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
      "commitAuthor": "Christopher Douglas",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/07/13 6:20 PM",
          "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
          "commitAuthor": "Christopher Douglas",
          "commitDateOld": "04/07/13 4:31 PM",
          "commitNameOld": "eff5d9b17e0853e82968a695b498b4be37148a05",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.08,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n-  private void unreserve(FiCaSchedulerApp application, Priority priority, \n+  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    application.unreserve(node, priority);\n-    node.unreserveResource(application);\n-      \n+    if (application.unreserve(node, priority)) {\n+      node.unreserveResource(application);\n+\n       // Update reserved metrics\n-    getMetrics().unreserveResource(\n-        application.getUser(), rmContainer.getContainer().getResource());\n+      getMetrics().unreserveResource(\n+          application.getUser(), rmContainer.getContainer().getResource());\n+      return true;\n+    }\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (application.unreserve(node, priority)) {\n      node.unreserveResource(application);\n\n      // Update reserved metrics\n      getMetrics().unreserveResource(\n          application.getUser(), rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-569. Add support for requesting and enforcing preemption requests via\na capacity monitor. Contributed by Carlo Curino, Chris Douglas\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1502083 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/07/13 6:20 PM",
          "commitName": "85f0efb68f9d1d9ee3466e3939c4fc2f985ccf61",
          "commitAuthor": "Christopher Douglas",
          "commitDateOld": "04/07/13 4:31 PM",
          "commitNameOld": "eff5d9b17e0853e82968a695b498b4be37148a05",
          "commitAuthorOld": "Bikas Saha",
          "daysBetweenCommits": 6.08,
          "commitsBetweenForRepo": 25,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n-  private void unreserve(FiCaSchedulerApp application, Priority priority, \n+  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n       FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n-    application.unreserve(node, priority);\n-    node.unreserveResource(application);\n-      \n+    if (application.unreserve(node, priority)) {\n+      node.unreserveResource(application);\n+\n       // Update reserved metrics\n-    getMetrics().unreserveResource(\n-        application.getUser(), rmContainer.getContainer().getResource());\n+      getMetrics().unreserveResource(\n+          application.getUser(), rmContainer.getContainer().getResource());\n+      return true;\n+    }\n+    return false;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean unreserve(FiCaSchedulerApp application, Priority priority,\n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    if (application.unreserve(node, priority)) {\n      node.unreserveResource(application);\n\n      // Update reserved metrics\n      getMetrics().unreserveResource(\n          application.getUser(), rmContainer.getContainer().getResource());\n      return true;\n    }\n    return false;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void unreserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    application.unreserve(node, priority);\n    node.unreserveResource(application);\n      \n      // Update reserved metrics\n    getMetrics().unreserveResource(\n        application.getUser(), rmContainer.getContainer().getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4440. Changed SchedulerApp and SchedulerNode to be a minimal interface to allow schedulers to maintain their own.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1362332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/12 6:43 PM",
      "commitName": "7f2b1eadc1b0807ec1302a0c3488bf6e7a59bc76",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "10/07/12 2:26 PM",
      "commitNameOld": "3bfb26ad3b5ac46f992a632541c97ca2bc897638",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 6.18,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,10 +1,10 @@\n-  private void unreserve(SchedulerApp application, Priority priority, \n-      SchedulerNode node, RMContainer rmContainer) {\n+  private void unreserve(FiCaSchedulerApp application, Priority priority, \n+      FiCaSchedulerNode node, RMContainer rmContainer) {\n     // Done with the reservation?\n     application.unreserve(node, priority);\n     node.unreserveResource(application);\n       \n       // Update reserved metrics\n     getMetrics().unreserveResource(\n         application.getUser(), rmContainer.getContainer().getResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void unreserve(FiCaSchedulerApp application, Priority priority, \n      FiCaSchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    application.unreserve(node, priority);\n    node.unreserveResource(application);\n      \n      // Update reserved metrics\n    getMetrics().unreserveResource(\n        application.getUser(), rmContainer.getContainer().getResource());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldValue": "[application-SchedulerApp, priority-Priority, node-SchedulerNode, rmContainer-RMContainer]",
        "newValue": "[application-FiCaSchedulerApp, priority-Priority, node-FiCaSchedulerNode, rmContainer-RMContainer]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void unreserve(SchedulerApp application, Priority priority, \n      SchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    application.unreserve(node, priority);\n    node.unreserveResource(application);\n      \n      // Update reserved metrics\n    getMetrics().unreserveResource(\n        application.getUser(), rmContainer.getContainer().getResource());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,10 @@\n+  private void unreserve(SchedulerApp application, Priority priority, \n+      SchedulerNode node, RMContainer rmContainer) {\n+    // Done with the reservation?\n+    application.unreserve(node, priority);\n+    node.unreserveResource(application);\n+      \n+      // Update reserved metrics\n+    getMetrics().unreserveResource(\n+        application.getUser(), rmContainer.getContainer().getResource());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void unreserve(SchedulerApp application, Priority priority, \n      SchedulerNode node, RMContainer rmContainer) {\n    // Done with the reservation?\n    application.unreserve(node, priority);\n    node.unreserveResource(application);\n      \n      // Update reserved metrics\n    getMetrics().unreserveResource(\n        application.getUser(), rmContainer.getContainer().getResource());\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/LeafQueue.java"
    }
  }
}