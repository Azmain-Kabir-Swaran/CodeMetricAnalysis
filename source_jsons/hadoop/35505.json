{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CgroupsLCEResourcesHandler.java",
  "functionName": "initConfig",
  "functionId": "initConfig",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
  "functionStartLine": 115,
  "functionEndLine": 143,
  "numCommitsSeen": 27,
  "timeTaken": 3116,
  "changeHistory": [
    "e0c21c6da91776caf661661a19c368939c81fcc4",
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049",
    "9f6891d9ef7064d121305ca783eb62586c8aa018",
    "726c3538a7f0087fe99157019c2b90198de06ec7",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea"
  ],
  "changeHistoryShort": {
    "e0c21c6da91776caf661661a19c368939c81fcc4": "Ybodychange",
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049": "Ybodychange",
    "9f6891d9ef7064d121305ca783eb62586c8aa018": "Ybodychange",
    "726c3538a7f0087fe99157019c2b90198de06ec7": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e0c21c6da91776caf661661a19c368939c81fcc4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9092. Create an object for cgroups mount enable and cgroups mount path as they belong together. Contributed by Gergely Pollak\n",
      "commitDate": "09/08/19 1:18 AM",
      "commitName": "e0c21c6da91776caf661661a19c368939c81fcc4",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "06/05/19 11:56 AM",
      "commitNameOld": "597fa47ad125c0871f5c4deb3a883e5b3341c67b",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 94.56,
      "commitsBetweenForRepo": 730,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,29 @@\n   void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n-    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n-            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n-    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n-            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n-\n+    this.cGroupsMountConfig \u003d new CGroupsMountConfig(conf);\n     this.deleteCgroupTimeout \u003d conf.getLong(\n         YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n         YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     this.deleteCgroupDelay \u003d\n         conf.getLong(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY,\n             YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     this.strictResourceUsageMode \u003d\n         conf\n           .getBoolean(\n             YarnConfiguration\n                 .NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n             YarnConfiguration\n                 .DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cGroupsMountConfig \u003d new CGroupsMountConfig(conf);\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    this.deleteCgroupDelay \u003d\n        conf.getLong(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY,\n            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    this.strictResourceUsageMode \u003d\n        conf\n          .getBoolean(\n            YarnConfiguration\n                .NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n            YarnConfiguration\n                .DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2809. Implement workaround for linux kernel panic when removing cgroup. Contributed by Nathan Roberts\n",
      "commitDate": "10/02/15 9:27 AM",
      "commitName": "3f5431a22fcef7e3eb9aceeefe324e5b7ac84049",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "23/12/14 8:32 PM",
      "commitNameOld": "41a548a916d4248164cb9495320f123ec215d70e",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 48.54,
      "commitsBetweenForRepo": 312,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,31 @@\n   void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n     this.deleteCgroupTimeout \u003d conf.getLong(\n         YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n         YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n+    this.deleteCgroupDelay \u003d\n+        conf.getLong(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY,\n+            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     this.strictResourceUsageMode \u003d\n         conf\n           .getBoolean(\n             YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n             YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    this.deleteCgroupDelay \u003d\n        conf.getLong(YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY,\n            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_DELAY);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    this.strictResourceUsageMode \u003d\n        conf\n          .getBoolean(\n            YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "9f6891d9ef7064d121305ca783eb62586c8aa018": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2531. Added a configuration for admins to be able to override app-configs and enforce/not-enforce strict control of per-container cpu usage. Contributed by Varun Vasudev.\n",
      "commitDate": "16/09/14 10:14 AM",
      "commitName": "9f6891d9ef7064d121305ca783eb62586c8aa018",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/09/14 7:22 PM",
      "commitNameOld": "4be95175cdb58ff12a27ab443d609d3b46da7bfa",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.62,
      "commitsBetweenForRepo": 39,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,28 @@\n   void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n     this.deleteCgroupTimeout \u003d conf.getLong(\n         YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n         YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n+    this.strictResourceUsageMode \u003d\n+        conf\n+          .getBoolean(\n+            YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n+            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n+\n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    this.strictResourceUsageMode \u003d\n        conf\n          .getBoolean(\n            YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE,\n            YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_STRICT_RESOURCE_USAGE);\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
      "extendedDetails": {}
    },
    "726c3538a7f0087fe99157019c2b90198de06ec7": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/10/13 10:05 PM",
      "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
      "commitAuthor": "Sanford Ryza",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,22 @@\n-  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n+  void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n+    this.deleteCgroupTimeout \u003d conf.getLong(\n+        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n+        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n-  \n-    // mount cgroups if requested\n-    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n-      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n-      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n-                    CONTROLLER_CPU);\n-      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n-    }\n-\n-    initializeControllerPaths();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "init",
            "newValue": "initConfig"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,22 @@\n-  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n+  void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n+    this.deleteCgroupTimeout \u003d conf.getLong(\n+        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n+        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n-  \n-    // mount cgroups if requested\n-    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n-      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n-      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n-                    CONTROLLER_CPU);\n-      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n-    }\n-\n-    initializeControllerPaths();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "[lce-LinuxContainerExecutor]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,22 @@\n-  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n+  void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n+    this.deleteCgroupTimeout \u003d conf.getLong(\n+        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n+        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n-  \n-    // mount cgroups if requested\n-    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n-      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n-      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n-                    CONTROLLER_CPU);\n-      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n-    }\n-\n-    initializeControllerPaths();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1284. LCE: Race condition leaves dangling cgroups entries for killed containers. (Alejandro Abdelnur via Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1530492 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "08/10/13 10:05 PM",
          "commitName": "726c3538a7f0087fe99157019c2b90198de06ec7",
          "commitAuthor": "Sanford Ryza",
          "commitDateOld": "17/06/13 11:34 PM",
          "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 112.94,
          "commitsBetweenForRepo": 659,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,22 @@\n-  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n+  void initConfig() throws IOException {\n \n     this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n     this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n     this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n             NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n \n+    this.deleteCgroupTimeout \u003d conf.getLong(\n+        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n+        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n     // remove extra /\u0027s at end or start of cgroupPrefix\n     if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(1);\n     }\n \n     int len \u003d cgroupPrefix.length();\n     if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n       cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n     }\n-  \n-    // mount cgroups if requested\n-    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n-      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n-      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n-                    CONTROLLER_CPU);\n-      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n-    }\n-\n-    initializeControllerPaths();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void initConfig() throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\n    this.deleteCgroupTimeout \u003d conf.getLong(\n        YarnConfiguration.NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT,\n        YarnConfiguration.DEFAULT_NM_LINUX_CONTAINER_CGROUPS_DELETE_TIMEOUT);\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n      cgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java",
          "extendedDetails": {}
        }
      ]
    },
    "5032a694ed250f65ade8c2b62c97b89ab45f53ea": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3. Add support for CPU isolation/monitoring of containers. (adferguson via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1423706 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/12 2:58 PM",
      "commitName": "5032a694ed250f65ade8c2b62c97b89ab45f53ea",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,29 @@\n+  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n+\n+    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n+            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n+    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n+            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n+    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n+            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n+\t\n+    // remove extra /\u0027s at end or start of cgroupPrefix\n+    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n+    \tcgroupPrefix \u003d cgroupPrefix.substring(1);\n+    }\n+\n+    int len \u003d cgroupPrefix.length();\n+    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n+    \tcgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n+    }\n+   \n+    // mount cgroups if requested\n+    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n+      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n+      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n+                    CONTROLLER_CPU);\n+      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n+    }\n+    \n+    initializeControllerPaths();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void init(LinuxContainerExecutor lce) throws IOException {\n\n    this.cgroupPrefix \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_HIERARCHY, \"/hadoop-yarn\");\n    this.cgroupMount \u003d conf.getBoolean(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT, false);\n    this.cgroupMountPath \u003d conf.get(YarnConfiguration.\n            NM_LINUX_CONTAINER_CGROUPS_MOUNT_PATH, null);\n\t\n    // remove extra /\u0027s at end or start of cgroupPrefix\n    if (cgroupPrefix.charAt(0) \u003d\u003d \u0027/\u0027) {\n    \tcgroupPrefix \u003d cgroupPrefix.substring(1);\n    }\n\n    int len \u003d cgroupPrefix.length();\n    if (cgroupPrefix.charAt(len - 1) \u003d\u003d \u0027/\u0027) {\n    \tcgroupPrefix \u003d cgroupPrefix.substring(0, len - 1);\n    }\n   \n    // mount cgroups if requested\n    if (cgroupMount \u0026\u0026 cgroupMountPath !\u003d null) {\n      ArrayList\u003cString\u003e cgroupKVs \u003d new ArrayList\u003cString\u003e();\n      cgroupKVs.add(CONTROLLER_CPU + \"\u003d\" + cgroupMountPath + \"/\" +\n                    CONTROLLER_CPU);\n      lce.mountCgroups(cgroupKVs, cgroupPrefix);\n    }\n    \n    initializeControllerPaths();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/util/CgroupsLCEResourcesHandler.java"
    }
  }
}