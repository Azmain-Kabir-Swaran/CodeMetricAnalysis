{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultImpersonationProvider.java",
  "functionName": "setConf",
  "functionId": "setConf___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/DefaultImpersonationProvider.java",
  "functionStartLine": 61,
  "functionEndLine": 63,
  "numCommitsSeen": 7,
  "timeTaken": 1276,
  "changeHistory": [
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829",
    "fdf901451fbcb614826b2238cad13d00b49f2157",
    "b880b48b35cab46459473e17ee6ba9f750f428a7",
    "4a4868e52360d7543909a7981b4606db939230ea"
  ],
  "changeHistoryShort": {
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829": "Ybodychange",
    "fdf901451fbcb614826b2238cad13d00b49f2157": "Ybodychange",
    "b880b48b35cab46459473e17ee6ba9f750f428a7": "Ybodychange",
    "4a4868e52360d7543909a7981b4606db939230ea": "Yintroduced"
  },
  "changeHistoryDetails": {
    "64ed72a047a1ff20e07aaf18ebdb5f5d29569829": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10817. ProxyUsers configuration should support configurable prefixes. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1611780 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/07/14 12:42 PM",
      "commitName": "64ed72a047a1ff20e07aaf18ebdb5f5d29569829",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "27/06/14 1:32 AM",
      "commitNameOld": "fdf901451fbcb614826b2238cad13d00b49f2157",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 21.46,
      "commitsBetweenForRepo": 146,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,3 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n-\n-    // get list of users and groups per proxyuser\n-    Map\u003cString,String\u003e allMatchKeys \u003d \n-        conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_USERS_GROUPS); \n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n-      String aclKey \u003d getAclKey(entry.getKey());\n-      if (!proxyUserAcl.containsKey(aclKey)) {\n-        proxyUserAcl.put(aclKey, new AccessControlList(\n-            allMatchKeys.get(aclKey + CONF_USERS) ,\n-            allMatchKeys.get(aclKey + CONF_GROUPS)));\n-      }\n-    }\n-\n-    // get hosts per proxyuser\n-    allMatchKeys \u003d conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_HOSTS);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      proxyHosts.put(entry.getKey(),\n-          new MachineList(entry.getValue()));\n-    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/DefaultImpersonationProvider.java",
      "extendedDetails": {}
    },
    "fdf901451fbcb614826b2238cad13d00b49f2157": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10565. Support IP ranges (CIDR) in proxyuser.hosts. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605987 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/06/14 1:32 AM",
      "commitName": "fdf901451fbcb614826b2238cad13d00b49f2157",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "24/06/14 10:51 AM",
      "commitNameOld": "b880b48b35cab46459473e17ee6ba9f750f428a7",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.61,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n \n     // get list of users and groups per proxyuser\n     Map\u003cString,String\u003e allMatchKeys \u003d \n         conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_USERS_GROUPS); \n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n       String aclKey \u003d getAclKey(entry.getKey());\n       if (!proxyUserAcl.containsKey(aclKey)) {\n         proxyUserAcl.put(aclKey, new AccessControlList(\n             allMatchKeys.get(aclKey + CONF_USERS) ,\n             allMatchKeys.get(aclKey + CONF_GROUPS)));\n       }\n     }\n \n     // get hosts per proxyuser\n     allMatchKeys \u003d conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_HOSTS);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n-          StringUtils.getTrimmedStringCollection(entry.getValue()));\n+          new MachineList(entry.getValue()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n\n    // get list of users and groups per proxyuser\n    Map\u003cString,String\u003e allMatchKeys \u003d \n        conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_USERS_GROUPS); \n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n      String aclKey \u003d getAclKey(entry.getKey());\n      if (!proxyUserAcl.containsKey(aclKey)) {\n        proxyUserAcl.put(aclKey, new AccessControlList(\n            allMatchKeys.get(aclKey + CONF_USERS) ,\n            allMatchKeys.get(aclKey + CONF_GROUPS)));\n      }\n    }\n\n    // get hosts per proxyuser\n    allMatchKeys \u003d conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_HOSTS);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          new MachineList(entry.getValue()));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/DefaultImpersonationProvider.java",
      "extendedDetails": {}
    },
    "b880b48b35cab46459473e17ee6ba9f750f428a7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10652. Refactor Proxyusers to use AccessControlList. (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605145 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 10:51 AM",
      "commitName": "b880b48b35cab46459473e17ee6ba9f750f428a7",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "29/05/14 1:52 PM",
      "commitNameOld": "4a4868e52360d7543909a7981b4606db939230ea",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 25.87,
      "commitsBetweenForRepo": 168,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,22 @@\n   public void setConf(Configuration conf) {\n     this.conf \u003d conf;\n \n-    // get all the new keys for users\n-    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n-    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n+    // get list of users and groups per proxyuser\n+    Map\u003cString,String\u003e allMatchKeys \u003d \n+        conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_USERS_GROUPS); \n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n-      Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-      proxyUsers.put(entry.getKey(), users);\n+      String aclKey \u003d getAclKey(entry.getKey());\n+      if (!proxyUserAcl.containsKey(aclKey)) {\n+        proxyUserAcl.put(aclKey, new AccessControlList(\n+            allMatchKeys.get(aclKey + CONF_USERS) ,\n+            allMatchKeys.get(aclKey + CONF_GROUPS)));\n+      }\n     }\n \n-    // get all the new keys for groups\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n-    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n-      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n-      proxyGroups.put(entry.getKey(), groups);\n-      //cache the groups. This is needed for NetGroups\n-      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n-          new ArrayList\u003cString\u003e(groups));\n-    }\n-\n-    // now hosts\n-    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n-    allMatchKeys \u003d conf.getValByRegex(regex);\n+    // get hosts per proxyuser\n+    allMatchKeys \u003d conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_HOSTS);\n     for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n       proxyHosts.put(entry.getKey(),\n           StringUtils.getTrimmedStringCollection(entry.getValue()));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n\n    // get list of users and groups per proxyuser\n    Map\u003cString,String\u003e allMatchKeys \u003d \n        conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_USERS_GROUPS); \n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n      String aclKey \u003d getAclKey(entry.getKey());\n      if (!proxyUserAcl.containsKey(aclKey)) {\n        proxyUserAcl.put(aclKey, new AccessControlList(\n            allMatchKeys.get(aclKey + CONF_USERS) ,\n            allMatchKeys.get(aclKey + CONF_GROUPS)));\n      }\n    }\n\n    // get hosts per proxyuser\n    allMatchKeys \u003d conf.getValByRegex(CONF_HADOOP_PROXYUSER_RE_HOSTS);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/DefaultImpersonationProvider.java",
      "extendedDetails": {}
    },
    "4a4868e52360d7543909a7981b4606db939230ea": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10448. Support pluggable mechanism to specify proxy user settings (Contributed by Benoy Antony)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1598396 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/05/14 1:52 PM",
      "commitName": "4a4868e52360d7543909a7981b4606db939230ea",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,30 @@\n+  public void setConf(Configuration conf) {\n+    this.conf \u003d conf;\n+\n+    // get all the new keys for users\n+    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n+    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n+      Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n+      proxyUsers.put(entry.getKey(), users);\n+    }\n+\n+    // get all the new keys for groups\n+    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n+    allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n+      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n+      proxyGroups.put(entry.getKey(), groups);\n+      //cache the groups. This is needed for NetGroups\n+      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n+          new ArrayList\u003cString\u003e(groups));\n+    }\n+\n+    // now hosts\n+    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n+    allMatchKeys \u003d conf.getValByRegex(regex);\n+    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n+      proxyHosts.put(entry.getKey(),\n+          StringUtils.getTrimmedStringCollection(entry.getValue()));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setConf(Configuration conf) {\n    this.conf \u003d conf;\n\n    // get all the new keys for users\n    String regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_USERS;\n    Map\u003cString,String\u003e allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {  \n      Collection\u003cString\u003e users \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyUsers.put(entry.getKey(), users);\n    }\n\n    // get all the new keys for groups\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_GROUPS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      Collection\u003cString\u003e groups \u003d StringUtils.getTrimmedStringCollection(entry.getValue());\n      proxyGroups.put(entry.getKey(), groups);\n      //cache the groups. This is needed for NetGroups\n      Groups.getUserToGroupsMappingService(conf).cacheGroupsAdd(\n          new ArrayList\u003cString\u003e(groups));\n    }\n\n    // now hosts\n    regex \u003d CONF_HADOOP_PROXYUSER_RE+\"[^.]*\\\\\"+CONF_HOSTS;\n    allMatchKeys \u003d conf.getValByRegex(regex);\n    for(Entry\u003cString, String\u003e entry : allMatchKeys.entrySet()) {\n      proxyHosts.put(entry.getKey(),\n          StringUtils.getTrimmedStringCollection(entry.getValue()));\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/authorize/DefaultImpersonationProvider.java"
    }
  }
}