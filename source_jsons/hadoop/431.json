{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockReaderIoProvider.java",
  "functionName": "read",
  "functionId": "read___dataIn-FileChannel__dst-ByteBuffer__position-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/metrics/BlockReaderIoProvider.java",
  "functionStartLine": 65,
  "functionEndLine": 77,
  "numCommitsSeen": 1,
  "timeTaken": 540,
  "changeHistory": [
    "6d116ffad23b470f8e9ca131d8e89cbbbb4378d7"
  ],
  "changeHistoryShort": {
    "6d116ffad23b470f8e9ca131d8e89cbbbb4378d7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6d116ffad23b470f8e9ca131d8e89cbbbb4378d7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11789. Maintain Short-Circuit Read Statistics. Contributed by Hanisha Koneru.\n",
      "commitDate": "22/06/17 1:35 PM",
      "commitName": "6d116ffad23b470f8e9ca131d8e89cbbbb4378d7",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,13 @@\n+  public int read(FileChannel dataIn, ByteBuffer dst, long position)\n+      throws IOException{\n+    final int nRead;\n+    if (isEnabled \u0026\u0026 (ThreadLocalRandom.current().nextInt() \u003c sampleRangeMax)) {\n+      long begin \u003d timer.monotonicNow();\n+      nRead \u003d dataIn.read(dst, position);\n+      long latency \u003d timer.monotonicNow() - begin;\n+      addLatency(latency);\n+    } else {\n+      nRead \u003d dataIn.read(dst, position);\n+    }\n+    return nRead;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int read(FileChannel dataIn, ByteBuffer dst, long position)\n      throws IOException{\n    final int nRead;\n    if (isEnabled \u0026\u0026 (ThreadLocalRandom.current().nextInt() \u003c sampleRangeMax)) {\n      long begin \u003d timer.monotonicNow();\n      nRead \u003d dataIn.read(dst, position);\n      long latency \u003d timer.monotonicNow() - begin;\n      addLatency(latency);\n    } else {\n      nRead \u003d dataIn.read(dst, position);\n    }\n    return nRead;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/client/impl/metrics/BlockReaderIoProvider.java"
    }
  }
}