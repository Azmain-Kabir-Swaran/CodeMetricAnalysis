{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SLSCapacityScheduler.java",
  "functionName": "tryCommit",
  "functionId": "tryCommit___cluster-Resource__r-ResourceCommitRequest__updatePending-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java",
  "functionStartLine": 136,
  "functionEndLine": 159,
  "numCommitsSeen": 21,
  "timeTaken": 1030,
  "changeHistory": [
    "ba2db39c655600d00d2d3d3951e0c780f4d6f622"
  ],
  "changeHistoryShort": {
    "ba2db39c655600d00d2d3d3951e0c780f4d6f622": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ba2db39c655600d00d2d3d3951e0c780f4d6f622": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8152. Add chart in SLS to illustrate the throughput of the scheduler. Contributed by Tao Yang.\n",
      "commitDate": "27/04/18 12:36 AM",
      "commitName": "ba2db39c655600d00d2d3d3951e0c780f4d6f622",
      "commitAuthor": "Weiwei Yang",
      "diff": "@@ -0,0 +1,24 @@\n+  public boolean tryCommit(Resource cluster, ResourceCommitRequest r,\n+      boolean updatePending) {\n+    if (metricsON) {\n+      boolean isSuccess \u003d false;\n+      long startTimeNs \u003d System.nanoTime();\n+      try {\n+        isSuccess \u003d super.tryCommit(cluster, r, updatePending);\n+        return isSuccess;\n+      } finally {\n+        long elapsedNs \u003d System.nanoTime() - startTimeNs;\n+        if (isSuccess) {\n+          schedulerMetrics.getSchedulerCommitSuccessTimer()\n+              .update(elapsedNs, TimeUnit.NANOSECONDS);\n+          schedulerMetrics.increaseSchedulerCommitSuccessCounter();\n+        } else {\n+          schedulerMetrics.getSchedulerCommitFailureTimer()\n+              .update(elapsedNs, TimeUnit.NANOSECONDS);\n+          schedulerMetrics.increaseSchedulerCommitFailureCounter();\n+        }\n+      }\n+    } else {\n+      return super.tryCommit(cluster, r, updatePending);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean tryCommit(Resource cluster, ResourceCommitRequest r,\n      boolean updatePending) {\n    if (metricsON) {\n      boolean isSuccess \u003d false;\n      long startTimeNs \u003d System.nanoTime();\n      try {\n        isSuccess \u003d super.tryCommit(cluster, r, updatePending);\n        return isSuccess;\n      } finally {\n        long elapsedNs \u003d System.nanoTime() - startTimeNs;\n        if (isSuccess) {\n          schedulerMetrics.getSchedulerCommitSuccessTimer()\n              .update(elapsedNs, TimeUnit.NANOSECONDS);\n          schedulerMetrics.increaseSchedulerCommitSuccessCounter();\n        } else {\n          schedulerMetrics.getSchedulerCommitFailureTimer()\n              .update(elapsedNs, TimeUnit.NANOSECONDS);\n          schedulerMetrics.increaseSchedulerCommitFailureCounter();\n        }\n      }\n    } else {\n      return super.tryCommit(cluster, r, updatePending);\n    }\n  }",
      "path": "hadoop-tools/hadoop-sls/src/main/java/org/apache/hadoop/yarn/sls/scheduler/SLSCapacityScheduler.java"
    }
  }
}