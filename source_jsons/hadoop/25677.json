{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobHistoryEventHandler.java",
  "functionName": "processEventForTimelineServer",
  "functionId": "processEventForTimelineServer___event-HistoryEvent__jobId-JobId__timestamp-long",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
  "functionStartLine": 830,
  "functionEndLine": 1148,
  "numCommitsSeen": 69,
  "timeTaken": 4162,
  "changeHistory": [
    "d04f85f387e4a78816bc9966ee2b4a647ee05faf",
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5",
    "e6c0742012ffeacad2bcaf712d86a7e5d1420b26",
    "d0d7c221682a88ac6e11e9b7c07513e369104b10",
    "195793c6f3e53a5c0527020477fe9c9158576f77",
    "f4ccdb11dca17db139a3746584e321d884651d01",
    "bf70c5ae2824a9139c1aa9d7c14020018881cec2",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
    "9cedad11d8d2197a54732667a15344983de5c437",
    "946456c6d88780abe0251b098dd771e9e1e93ab3",
    "d777a1e4ca8e7cf0ce8967f79dd475468906c733",
    "6b2f11b54bc679b0715fe66bd129e340e8c61c5c"
  ],
  "changeHistoryShort": {
    "d04f85f387e4a78816bc9966ee2b4a647ee05faf": "Ybodychange",
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5": "Ybodychange",
    "e6c0742012ffeacad2bcaf712d86a7e5d1420b26": "Ybodychange",
    "d0d7c221682a88ac6e11e9b7c07513e369104b10": "Ybodychange",
    "195793c6f3e53a5c0527020477fe9c9158576f77": "Ybodychange",
    "f4ccdb11dca17db139a3746584e321d884651d01": "Ybodychange",
    "bf70c5ae2824a9139c1aa9d7c14020018881cec2": "Ybodychange",
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": "Ybodychange",
    "9cedad11d8d2197a54732667a15344983de5c437": "Ybodychange",
    "946456c6d88780abe0251b098dd771e9e1e93ab3": "Ybodychange",
    "d777a1e4ca8e7cf0ce8967f79dd475468906c733": "Ybodychange",
    "6b2f11b54bc679b0715fe66bd129e340e8c61c5c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d04f85f387e4a78816bc9966ee2b4a647ee05faf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6892. Issues with the count of failed/killed tasks in the jhist file. (Peter Bacsko via Haibo Chen)\n",
      "commitDate": "30/08/17 10:07 AM",
      "commitName": "d04f85f387e4a78816bc9966ee2b4a647ee05faf",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "29/08/17 10:59 PM",
      "commitNameOld": "684de1a9025261dcb6ab3b5ec9ba69738c947ecc",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.46,
      "commitsBetweenForRepo": 38,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,301 +1,319 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n-        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n-        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n+        tEvent.addEventInfo(\"NUM_MAPS\",\n+            juce.getSucceededMaps() +\n+            juce.getFailedMaps() +\n+            juce.getKilledMaps());\n+        tEvent.addEventInfo(\"NUM_REDUCES\",\n+            juce.getSucceededReduces() +\n+            juce.getFailedReduces() +\n+            juce.getKilledReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n-        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n-        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n+        tEvent.addEventInfo(\"SUCCESSFUL_MAPS\", juce.getSucceededMaps());\n+        tEvent.addEventInfo(\"SUCCESSFUL_REDUCES\", juce.getSucceededReduces());\n+        tEvent.addEventInfo(\"FAILED_MAPS\", juce.getFailedMaps());\n+        tEvent.addEventInfo(\"FAILED_REDUCES\", juce.getFailedReduces());\n+        tEvent.addEventInfo(\"KILLED_MAPS\", juce.getKilledMaps());\n+        tEvent.addEventInfo(\"KILLED_REDUCES\", juce.getKilledReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n-        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n-        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n+        tEvent.addEventInfo(\"NUM_MAPS\",\n+            jfe.getSucceededMaps() +\n+            jfe.getFailedMaps() +\n+            jfe.getKilledMaps());\n+        tEvent.addEventInfo(\"NUM_REDUCES\",\n+            jfe.getSucceededReduces() +\n+            jfe.getFailedReduces() +\n+            jfe.getKilledReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n-        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n-        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n+        tEvent.addEventInfo(\"SUCCESSFUL_MAPS\", jfe.getSucceededMaps());\n+        tEvent.addEventInfo(\"SUCCESSFUL_REDUCES\", jfe.getSucceededReduces());\n+        tEvent.addEventInfo(\"KILLED_MAPS\", jfe.getKilledMaps());\n+        tEvent.addEventInfo(\"KILLED_REDUCES\", jfe.getKilledReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(jfe.getMapCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n             JobHistoryEventUtils.countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n       List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n       if (errors.size() \u003d\u003d 0) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Timeline entities are successfully put in event \" + event\n               .getEventType());\n         }\n       } else {\n         for (TimelinePutResponse.TimelinePutError error : errors) {\n           LOG.error(\n               \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                   + error.getEntityId() + \"], server side error code: \"\n                   + error.getErrorCode());\n         }\n       }\n     } catch (YarnException | IOException | ClientHandlerException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n           + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\",\n            juce.getSucceededMaps() +\n            juce.getFailedMaps() +\n            juce.getKilledMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\",\n            juce.getSucceededReduces() +\n            juce.getFailedReduces() +\n            juce.getKilledReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"SUCCESSFUL_MAPS\", juce.getSucceededMaps());\n        tEvent.addEventInfo(\"SUCCESSFUL_REDUCES\", juce.getSucceededReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", juce.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", juce.getFailedReduces());\n        tEvent.addEventInfo(\"KILLED_MAPS\", juce.getKilledMaps());\n        tEvent.addEventInfo(\"KILLED_REDUCES\", juce.getKilledReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\",\n            jfe.getSucceededMaps() +\n            jfe.getFailedMaps() +\n            jfe.getKilledMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\",\n            jfe.getSucceededReduces() +\n            jfe.getFailedReduces() +\n            jfe.getKilledReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"SUCCESSFUL_MAPS\", jfe.getSucceededMaps());\n        tEvent.addEventInfo(\"SUCCESSFUL_REDUCES\", jfe.getSucceededReduces());\n        tEvent.addEventInfo(\"KILLED_MAPS\", jfe.getKilledMaps());\n        tEvent.addEventInfo(\"KILLED_REDUCES\", jfe.getKilledReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getMapCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n      List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n      if (errors.size() \u003d\u003d 0) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Timeline entities are successfully put in event \" + event\n              .getEventType());\n        }\n      } else {\n        for (TimelinePutResponse.TimelinePutError error : errors) {\n          LOG.error(\n              \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                  + error.getEntityId() + \"], server side error code: \"\n                  + error.getErrorCode());\n        }\n      }\n    } catch (YarnException | IOException | ClientHandlerException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n          + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6327. Made MR AM use timeline service v2 API to write history events and counters. Contributed by Junping Du.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b50a6d78f5e12cfb9e0f52e0af6efbab3618e2e5",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "29/05/16 8:54 AM",
      "commitNameOld": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 41.99,
      "commitsBetweenForRepo": 290,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,302 +1,301 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n-                countersToJSON(jfe.getMapCounters()));\n+            JobHistoryEventUtils.countersToJSON(jfe.getMapCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n-                countersToJSON(jfe.getReduceCounters()));\n+            JobHistoryEventUtils.countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n-                countersToJSON(jfe.getTotalCounters()));\n+            JobHistoryEventUtils.countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(tfe.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(tfe2.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n-        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(tauce.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(mafe.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(rafe.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n-                countersToJSON(tafe.getCounters()));\n+            JobHistoryEventUtils.countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n-\n+    \n     try {\n       TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n       List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n       if (errors.size() \u003d\u003d 0) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Timeline entities are successfully put in event \" + event\n               .getEventType());\n         }\n       } else {\n         for (TimelinePutResponse.TimelinePutError error : errors) {\n           LOG.error(\n               \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                   + error.getEntityId() + \"], server side error code: \"\n                   + error.getErrorCode());\n         }\n       }\n     } catch (YarnException | IOException | ClientHandlerException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n           + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getMapCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n            JobHistoryEventUtils.countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n    \n    try {\n      TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n      List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n      if (errors.size() \u003d\u003d 0) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Timeline entities are successfully put in event \" + event\n              .getEventType());\n        }\n      } else {\n        for (TimelinePutResponse.TimelinePutError error : errors) {\n          LOG.error(\n              \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                  + error.getEntityId() + \"], server side error code: \"\n                  + error.getErrorCode());\n        }\n      }\n    } catch (YarnException | IOException | ClientHandlerException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n          + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "e6c0742012ffeacad2bcaf712d86a7e5d1420b26": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4965. Distributed shell AM failed due to ClientHandlerException thrown by jersey. Contributed by Junping Du\n",
      "commitDate": "16/04/16 7:39 PM",
      "commitName": "e6c0742012ffeacad2bcaf712d86a7e5d1420b26",
      "commitAuthor": "Xuan",
      "commitDateOld": "09/02/16 10:05 AM",
      "commitNameOld": "a0b1f10a30dc2736cc136f257b0d3bf0140158bb",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 67.36,
      "commitsBetweenForRepo": 427,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,305 +1,302 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getMapCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n       List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n       if (errors.size() \u003d\u003d 0) {\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Timeline entities are successfully put in event \" + event\n               .getEventType());\n         }\n       } else {\n         for (TimelinePutResponse.TimelinePutError error : errors) {\n           LOG.error(\n               \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                   + error.getEntityId() + \"], server side error code: \"\n                   + error.getErrorCode());\n         }\n       }\n-    } catch (IOException ex) {\n+    } catch (YarnException | IOException | ClientHandlerException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n-      + \"Server\", ex);\n-    } catch (YarnException ex) {\n-      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n-      + \"Server\", ex);\n+          + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getMapCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n      List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n      if (errors.size() \u003d\u003d 0) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Timeline entities are successfully put in event \" + event\n              .getEventType());\n        }\n      } else {\n        for (TimelinePutResponse.TimelinePutError error : errors) {\n          LOG.error(\n              \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                  + error.getEntityId() + \"], server side error code: \"\n                  + error.getErrorCode());\n        }\n      }\n    } catch (YarnException | IOException | ClientHandlerException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n          + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "d0d7c221682a88ac6e11e9b7c07513e369104b10": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6610. JobHistoryEventHandler should not swallow timeline response. Contributed by Li Lu\n",
      "commitDate": "25/01/16 11:01 PM",
      "commitName": "d0d7c221682a88ac6e11e9b7c07513e369104b10",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/10/15 1:22 AM",
      "commitNameOld": "195793c6f3e53a5c0527020477fe9c9158576f77",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 116.94,
      "commitsBetweenForRepo": 797,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,291 +1,305 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getMapCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n-      timelineClient.putEntities(tEntity);\n+      TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n+      List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n+      if (errors.size() \u003d\u003d 0) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Timeline entities are successfully put in event \" + event\n+              .getEventType());\n+        }\n+      } else {\n+        for (TimelinePutResponse.TimelinePutError error : errors) {\n+          LOG.error(\n+              \"Error when publishing entity [\" + error.getEntityType() + \",\"\n+                  + error.getEntityId() + \"], server side error code: \"\n+                  + error.getErrorCode());\n+        }\n+      }\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getMapCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      TimelinePutResponse response \u003d timelineClient.putEntities(tEntity);\n      List\u003cTimelinePutResponse.TimelinePutError\u003e errors \u003d response.getErrors();\n      if (errors.size() \u003d\u003d 0) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Timeline entities are successfully put in event \" + event\n              .getEventType());\n        }\n      } else {\n        for (TimelinePutResponse.TimelinePutError error : errors) {\n          LOG.error(\n              \"Error when publishing entity [\" + error.getEntityType() + \",\"\n                  + error.getEntityId() + \"], server side error code: \"\n                  + error.getErrorCode());\n        }\n      }\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "195793c6f3e53a5c0527020477fe9c9158576f77": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6497. Fix wrong value of JOB_FINISHED event in JobHistoryEventHandler. Contributed by Shinichi Yamashita.\n",
      "commitDate": "01/10/15 1:22 AM",
      "commitName": "195793c6f3e53a5c0527020477fe9c9158576f77",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "14/07/15 2:55 PM",
      "commitNameOld": "f4ccdb11dca17db139a3746584e321d884651d01",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 78.44,
      "commitsBetweenForRepo": 506,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,291 +1,291 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n-                countersToJSON(jfe.getTotalCounters()));\n+                countersToJSON(jfe.getMapCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getMapCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "f4ccdb11dca17db139a3746584e321d884651d01": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6427. Fix typo in JobHistoryEventHandler. Contributed by Ray Chiang\n",
      "commitDate": "14/07/15 2:55 PM",
      "commitName": "f4ccdb11dca17db139a3746584e321d884651d01",
      "commitAuthor": "Chris Douglas",
      "commitDateOld": "01/07/15 9:00 AM",
      "commitNameOld": "2ac87df578accb6e612f70ded76271cb5082ee10",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 13.25,
      "commitsBetweenForRepo": 74,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,291 +1,291 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n-        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n+        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKFLOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "bf70c5ae2824a9139c1aa9d7c14020018881cec2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6259. IllegalArgumentException due to missing job submit time. Contributed by zhihai xu\n",
      "commitDate": "04/05/15 1:39 PM",
      "commitName": "bf70c5ae2824a9139c1aa9d7c14020018881cec2",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "30/04/15 12:03 AM",
      "commitNameOld": "f5b38477f9d0827b238fadd260c1dd2889531fd4",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 4.57,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,290 +1,291 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n+        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEvent.addEventInfo(\"SUBMIT_TIME\", ase.getSubmitTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "d1c6accb6f87b08975175580e15f1ff1fe29ab04": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "02/03/15 9:17 PM",
      "commitName": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 6.57,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,290 +1,290 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(event.getEventType().name().toUpperCase());\n+    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(StringUtils.toUpperCase(event.getEventType().name()));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "9cedad11d8d2197a54732667a15344983de5c437": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\"\n\nThis reverts commit 946456c6d88780abe0251b098dd771e9e1e93ab3.\n\nConflicts:\n\thadoop-common-project/hadoop-common/CHANGES.txt\n\thadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/QuotaByStorageTypeEntry.java\n",
      "commitDate": "24/02/15 7:32 AM",
      "commitName": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "18/02/15 8:06 PM",
      "commitNameOld": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 5.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,291 +1,290 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(\n-        event.getEventType().name().toUpperCase(Locale.ENGLISH));\n+    tEvent.setEventType(event.getEventType().name().toUpperCase());\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(event.getEventType().name().toUpperCase());\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "946456c6d88780abe0251b098dd771e9e1e93ab3": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11602. Fix toUpperCase/toLowerCase to use Locale.ENGLISH. (ozawa)\n",
      "commitDate": "18/02/15 8:06 PM",
      "commitName": "946456c6d88780abe0251b098dd771e9e1e93ab3",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "12/02/15 12:15 AM",
      "commitNameOld": "76e309ead01f02b32335330cd920536f907fb71f",
      "commitAuthorOld": "Devaraj K",
      "daysBetweenCommits": 6.83,
      "commitsBetweenForRepo": 89,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,290 +1,291 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n-    tEvent.setEventType(event.getEventType().name().toUpperCase());\n+    tEvent.setEventType(\n+        event.getEventType().name().toUpperCase(Locale.ENGLISH));\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(\n        event.getEventType().name().toUpperCase(Locale.ENGLISH));\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "d777a1e4ca8e7cf0ce8967f79dd475468906c733": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11369. Fix new findbugs warnings in hadoop-mapreduce-client, non-core directories. Contributed by Li Lu.\n",
      "commitDate": "09/12/14 10:46 AM",
      "commitName": "d777a1e4ca8e7cf0ce8967f79dd475468906c733",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "20/11/14 9:34 PM",
      "commitNameOld": "c298a9a845f89317eb9efad332e6657c56736a4d",
      "commitAuthorOld": "Jonathan Eagles",
      "daysBetweenCommits": 18.55,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,291 +1,290 @@\n   private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n           long timestamp) {\n     TimelineEvent tEvent \u003d new TimelineEvent();\n     tEvent.setEventType(event.getEventType().name().toUpperCase());\n     tEvent.setTimestamp(timestamp);\n     TimelineEntity tEntity \u003d new TimelineEntity();\n \n     switch (event.getEventType()) {\n       case JOB_SUBMITTED:\n         JobSubmittedEvent jse \u003d\n             (JobSubmittedEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n         tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n         tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n         tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n         tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n         tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n         tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n         tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n         tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n         tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                 jse.getWorkflowAdjacencies());\n         tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_STATUS_CHANGED:\n         JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n         tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INFO_CHANGED:\n         JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n         tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n         tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_INITED:\n         JobInitedEvent jie \u003d (JobInitedEvent) event;\n         tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n         tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n         tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n         tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n         tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n         tEntity.setStartTime(jie.getLaunchTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_PRIORITY_CHANGED:\n         JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n         tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_QUEUE_CHANGED:\n         JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n         tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FAILED:\n       case JOB_KILLED:\n       case JOB_ERROR:\n         JobUnsuccessfulCompletionEvent juce \u003d\n               (JobUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n         tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n         tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case JOB_FINISHED:\n         JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n         tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n         tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n         tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n         tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n         tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getReduceCounters()));\n         tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                 countersToJSON(jfe.getTotalCounters()));\n         tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       case TASK_STARTED:\n         TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n         tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n         tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tse.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FAILED:\n         TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tfe.getError());\n         tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                 tfe.getFailedAttemptID() \u003d\u003d null ?\n                 \"\" : tfe.getFailedAttemptID().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_UPDATED:\n         TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n         tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tue.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case TASK_FINISHED:\n         TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tfe2.getCounters()));\n         tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n         tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n             tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n             \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tfe2.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_STARTED:\n       case CLEANUP_ATTEMPT_STARTED:\n       case REDUCE_ATTEMPT_STARTED:\n       case SETUP_ATTEMPT_STARTED:\n         TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n-            tase.getTaskAttemptId().toString() \u003d\u003d null ?\n-            \"\" : tase.getTaskAttemptId().toString());\n+            tase.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n         tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n         tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n         tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n         tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n         tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n             \"\" : tase.getContainerId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tase.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FAILED:\n       case CLEANUP_ATTEMPT_FAILED:\n       case REDUCE_ATTEMPT_FAILED:\n       case SETUP_ATTEMPT_FAILED:\n       case MAP_ATTEMPT_KILLED:\n       case CLEANUP_ATTEMPT_KILLED:\n       case REDUCE_ATTEMPT_KILLED:\n       case SETUP_ATTEMPT_KILLED:\n         TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                 (TaskAttemptUnsuccessfulCompletionEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n         tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n             tauce.getTaskAttemptId() \u003d\u003d null ?\n             \"\" : tauce.getTaskAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"ERROR\", tauce.getError());\n         tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n         tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n         tEvent.addEventInfo(\"PORT\", tauce.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tauce.getCounters()));\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tauce.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case MAP_ATTEMPT_FINISHED:\n         MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", mafe.getState());\n         tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(mafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", mafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n             \"\" : mafe.getAttemptId().toString());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(mafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case REDUCE_ATTEMPT_FINISHED:\n         ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n             \"\" : rafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", rafe.getState());\n         tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n         tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(rafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n         tEvent.addEventInfo(\"PORT\", rafe.getPort());\n         tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(rafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case SETUP_ATTEMPT_FINISHED:\n       case CLEANUP_ATTEMPT_FINISHED:\n         TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n         tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n         tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n             \"\" : tafe.getAttemptId().toString());\n         tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n         tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n         tEvent.addEventInfo(\"STATE\", tafe.getState());\n         tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                 countersToJSON(tafe.getCounters()));\n         tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(tafe.getTaskId().toString());\n         tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n         tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n         break;\n       case AM_STARTED:\n         AMStartedEvent ase \u003d (AMStartedEvent) event;\n         tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                 ase.getAppAttemptId() \u003d\u003d null ?\n                 \"\" : ase.getAppAttemptId().toString());\n         tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                 \"\" : ase.getContainerId().toString());\n         tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n         tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n         tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                 ase.getNodeManagerHttpPort());\n         tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n         tEntity.addEvent(tEvent);\n         tEntity.setEntityId(jobId.toString());\n         tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n         break;\n       default:\n         break;\n     }\n \n     try {\n       timelineClient.putEntities(tEntity);\n     } catch (IOException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     } catch (YarnException ex) {\n       LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n       + \"Server\", ex);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(event.getEventType().name().toUpperCase());\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n            tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n            \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java",
      "extendedDetails": {}
    },
    "6b2f11b54bc679b0715fe66bd129e340e8c61c5c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5933. Enabled MR AM to post history events to the timeline server. Contributed by Robert Kanter.\n",
      "commitDate": "27/10/14 8:35 PM",
      "commitName": "6b2f11b54bc679b0715fe66bd129e340e8c61c5c",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,291 @@\n+  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n+          long timestamp) {\n+    TimelineEvent tEvent \u003d new TimelineEvent();\n+    tEvent.setEventType(event.getEventType().name().toUpperCase());\n+    tEvent.setTimestamp(timestamp);\n+    TimelineEntity tEntity \u003d new TimelineEntity();\n+\n+    switch (event.getEventType()) {\n+      case JOB_SUBMITTED:\n+        JobSubmittedEvent jse \u003d\n+            (JobSubmittedEvent) event;\n+        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n+        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n+        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n+        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n+        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n+        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n+        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n+        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n+        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n+        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n+        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n+                jse.getWorkflowAdjacencies());\n+        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_STATUS_CHANGED:\n+        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n+        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_INFO_CHANGED:\n+        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n+        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n+        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_INITED:\n+        JobInitedEvent jie \u003d (JobInitedEvent) event;\n+        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n+        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n+        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n+        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n+        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n+        tEntity.setStartTime(jie.getLaunchTime());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_PRIORITY_CHANGED:\n+        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n+        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_QUEUE_CHANGED:\n+        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n+        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_FAILED:\n+      case JOB_KILLED:\n+      case JOB_ERROR:\n+        JobUnsuccessfulCompletionEvent juce \u003d\n+              (JobUnsuccessfulCompletionEvent) event;\n+        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n+        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n+        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n+        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n+        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n+        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n+        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case JOB_FINISHED:\n+        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n+        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n+        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n+        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n+        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n+        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n+        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n+        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n+        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n+                countersToJSON(jfe.getTotalCounters()));\n+        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n+                countersToJSON(jfe.getReduceCounters()));\n+        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n+                countersToJSON(jfe.getTotalCounters()));\n+        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      case TASK_STARTED:\n+        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n+        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n+        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tse.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case TASK_FAILED:\n+        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n+        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n+        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n+        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n+        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n+                tfe.getFailedAttemptID() \u003d\u003d null ?\n+                \"\" : tfe.getFailedAttemptID().toString());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(tfe.getCounters()));\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tfe.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case TASK_UPDATED:\n+        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n+        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tue.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case TASK_FINISHED:\n+        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(tfe2.getCounters()));\n+        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n+        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n+        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n+                tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n+                \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tfe2.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case MAP_ATTEMPT_STARTED:\n+      case CLEANUP_ATTEMPT_STARTED:\n+      case REDUCE_ATTEMPT_STARTED:\n+      case SETUP_ATTEMPT_STARTED:\n+        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n+        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n+            tase.getTaskAttemptId().toString() \u003d\u003d null ?\n+            \"\" : tase.getTaskAttemptId().toString());\n+        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n+        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n+        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n+        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n+        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n+        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n+            \"\" : tase.getContainerId().toString());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tase.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case MAP_ATTEMPT_FAILED:\n+      case CLEANUP_ATTEMPT_FAILED:\n+      case REDUCE_ATTEMPT_FAILED:\n+      case SETUP_ATTEMPT_FAILED:\n+      case MAP_ATTEMPT_KILLED:\n+      case CLEANUP_ATTEMPT_KILLED:\n+      case REDUCE_ATTEMPT_KILLED:\n+      case SETUP_ATTEMPT_KILLED:\n+        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n+                (TaskAttemptUnsuccessfulCompletionEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n+        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n+            tauce.getTaskAttemptId() \u003d\u003d null ?\n+            \"\" : tauce.getTaskAttemptId().toString());\n+        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n+        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n+        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n+        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n+        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n+        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n+        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n+        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n+        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(tauce.getCounters()));\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tauce.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case MAP_ATTEMPT_FINISHED:\n+        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n+        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n+        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n+        tEvent.addEventInfo(\"STATE\", mafe.getState());\n+        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(mafe.getCounters()));\n+        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n+        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n+        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n+        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n+            \"\" : mafe.getAttemptId().toString());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(mafe.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case REDUCE_ATTEMPT_FINISHED:\n+        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n+        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n+            \"\" : rafe.getAttemptId().toString());\n+        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n+        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n+        tEvent.addEventInfo(\"STATE\", rafe.getState());\n+        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n+        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(rafe.getCounters()));\n+        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n+        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n+        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(rafe.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case SETUP_ATTEMPT_FINISHED:\n+      case CLEANUP_ATTEMPT_FINISHED:\n+        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n+        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n+        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n+            \"\" : tafe.getAttemptId().toString());\n+        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n+        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n+        tEvent.addEventInfo(\"STATE\", tafe.getState());\n+        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n+                countersToJSON(tafe.getCounters()));\n+        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(tafe.getTaskId().toString());\n+        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n+        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n+        break;\n+      case AM_STARTED:\n+        AMStartedEvent ase \u003d (AMStartedEvent) event;\n+        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n+                ase.getAppAttemptId() \u003d\u003d null ?\n+                \"\" : ase.getAppAttemptId().toString());\n+        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n+                \"\" : ase.getContainerId().toString());\n+        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n+        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n+        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n+                ase.getNodeManagerHttpPort());\n+        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n+        tEntity.addEvent(tEvent);\n+        tEntity.setEntityId(jobId.toString());\n+        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n+        break;\n+      default:\n+        break;\n+    }\n+\n+    try {\n+      timelineClient.putEntities(tEntity);\n+    } catch (IOException ex) {\n+      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n+      + \"Server\", ex);\n+    } catch (YarnException ex) {\n+      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n+      + \"Server\", ex);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void processEventForTimelineServer(HistoryEvent event, JobId jobId,\n          long timestamp) {\n    TimelineEvent tEvent \u003d new TimelineEvent();\n    tEvent.setEventType(event.getEventType().name().toUpperCase());\n    tEvent.setTimestamp(timestamp);\n    TimelineEntity tEntity \u003d new TimelineEntity();\n\n    switch (event.getEventType()) {\n      case JOB_SUBMITTED:\n        JobSubmittedEvent jse \u003d\n            (JobSubmittedEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jse.getSubmitTime());\n        tEvent.addEventInfo(\"QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"JOB_NAME\", jse.getJobName());\n        tEvent.addEventInfo(\"USER_NAME\", jse.getUserName());\n        tEvent.addEventInfo(\"JOB_CONF_PATH\", jse.getJobConfPath());\n        tEvent.addEventInfo(\"ACLS\", jse.getJobAcls());\n        tEvent.addEventInfo(\"JOB_QUEUE_NAME\", jse.getJobQueueName());\n        tEvent.addEventInfo(\"WORKLFOW_ID\", jse.getWorkflowId());\n        tEvent.addEventInfo(\"WORKFLOW_NAME\", jse.getWorkflowName());\n        tEvent.addEventInfo(\"WORKFLOW_NAME_NAME\", jse.getWorkflowNodeName());\n        tEvent.addEventInfo(\"WORKFLOW_ADJACENCIES\",\n                jse.getWorkflowAdjacencies());\n        tEvent.addEventInfo(\"WORKFLOW_TAGS\", jse.getWorkflowTags());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_STATUS_CHANGED:\n        JobStatusChangedEvent jsce \u003d (JobStatusChangedEvent) event;\n        tEvent.addEventInfo(\"STATUS\", jsce.getStatus());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INFO_CHANGED:\n        JobInfoChangeEvent jice \u003d (JobInfoChangeEvent) event;\n        tEvent.addEventInfo(\"SUBMIT_TIME\", jice.getSubmitTime());\n        tEvent.addEventInfo(\"LAUNCH_TIME\", jice.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_INITED:\n        JobInitedEvent jie \u003d (JobInitedEvent) event;\n        tEvent.addEventInfo(\"START_TIME\", jie.getLaunchTime());\n        tEvent.addEventInfo(\"STATUS\", jie.getStatus());\n        tEvent.addEventInfo(\"TOTAL_MAPS\", jie.getTotalMaps());\n        tEvent.addEventInfo(\"TOTAL_REDUCES\", jie.getTotalReduces());\n        tEvent.addEventInfo(\"UBERIZED\", jie.getUberized());\n        tEntity.setStartTime(jie.getLaunchTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_PRIORITY_CHANGED:\n        JobPriorityChangeEvent jpce \u003d (JobPriorityChangeEvent) event;\n        tEvent.addEventInfo(\"PRIORITY\", jpce.getPriority().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_QUEUE_CHANGED:\n        JobQueueChangeEvent jqe \u003d (JobQueueChangeEvent) event;\n        tEvent.addEventInfo(\"QUEUE_NAMES\", jqe.getJobQueueName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FAILED:\n      case JOB_KILLED:\n      case JOB_ERROR:\n        JobUnsuccessfulCompletionEvent juce \u003d\n              (JobUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", juce.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", juce.getFinishedReduces());\n        tEvent.addEventInfo(\"JOB_STATUS\", juce.getStatus());\n        tEvent.addEventInfo(\"DIAGNOSTICS\", juce.getDiagnostics());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", juce.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", juce.getFinishedReduces());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case JOB_FINISHED:\n        JobFinishedEvent jfe \u003d (JobFinishedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", jfe.getFinishTime());\n        tEvent.addEventInfo(\"NUM_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"NUM_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"FAILED_MAPS\", jfe.getFailedMaps());\n        tEvent.addEventInfo(\"FAILED_REDUCES\", jfe.getFailedReduces());\n        tEvent.addEventInfo(\"FINISHED_MAPS\", jfe.getFinishedMaps());\n        tEvent.addEventInfo(\"FINISHED_REDUCES\", jfe.getFinishedReduces());\n        tEvent.addEventInfo(\"MAP_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"REDUCE_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getReduceCounters()));\n        tEvent.addEventInfo(\"TOTAL_COUNTERS_GROUPS\",\n                countersToJSON(jfe.getTotalCounters()));\n        tEvent.addEventInfo(\"JOB_STATUS\", JobState.SUCCEEDED.toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      case TASK_STARTED:\n        TaskStartedEvent tse \u003d (TaskStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tse.getTaskType().toString());\n        tEvent.addEventInfo(\"START_TIME\", tse.getStartTime());\n        tEvent.addEventInfo(\"SPLIT_LOCATIONS\", tse.getSplitLocations());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tse.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FAILED:\n        TaskFailedEvent tfe \u003d (TaskFailedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe.getTaskType().toString());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.FAILED.toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tfe.getError());\n        tEvent.addEventInfo(\"FAILED_ATTEMPT_ID\",\n                tfe.getFailedAttemptID() \u003d\u003d null ?\n                \"\" : tfe.getFailedAttemptID().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_UPDATED:\n        TaskUpdatedEvent tue \u003d (TaskUpdatedEvent) event;\n        tEvent.addEventInfo(\"FINISH_TIME\", tue.getFinishTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tue.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case TASK_FINISHED:\n        TaskFinishedEvent tfe2 \u003d (TaskFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tfe2.getTaskType().toString());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tfe2.getCounters()));\n        tEvent.addEventInfo(\"FINISH_TIME\", tfe2.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", TaskStatus.State.SUCCEEDED.toString());\n        tEvent.addEventInfo(\"SUCCESSFUL_TASK_ATTEMPT_ID\",\n                tfe2.getSuccessfulTaskAttemptId() \u003d\u003d null ?\n                \"\" : tfe2.getSuccessfulTaskAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tfe2.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_STARTED:\n      case CLEANUP_ATTEMPT_STARTED:\n      case REDUCE_ATTEMPT_STARTED:\n      case SETUP_ATTEMPT_STARTED:\n        TaskAttemptStartedEvent tase \u003d (TaskAttemptStartedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tase.getTaskAttemptId().toString() \u003d\u003d null ?\n            \"\" : tase.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"START_TIME\", tase.getStartTime());\n        tEvent.addEventInfo(\"HTTP_PORT\", tase.getHttpPort());\n        tEvent.addEventInfo(\"TRACKER_NAME\", tase.getTrackerName());\n        tEvent.addEventInfo(\"TASK_TYPE\", tase.getTaskType().toString());\n        tEvent.addEventInfo(\"SHUFFLE_PORT\", tase.getShufflePort());\n        tEvent.addEventInfo(\"CONTAINER_ID\", tase.getContainerId() \u003d\u003d null ?\n            \"\" : tase.getContainerId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tase.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FAILED:\n      case CLEANUP_ATTEMPT_FAILED:\n      case REDUCE_ATTEMPT_FAILED:\n      case SETUP_ATTEMPT_FAILED:\n      case MAP_ATTEMPT_KILLED:\n      case CLEANUP_ATTEMPT_KILLED:\n      case REDUCE_ATTEMPT_KILLED:\n      case SETUP_ATTEMPT_KILLED:\n        TaskAttemptUnsuccessfulCompletionEvent tauce \u003d\n                (TaskAttemptUnsuccessfulCompletionEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tauce.getTaskType().toString());\n        tEvent.addEventInfo(\"TASK_ATTEMPT_ID\",\n            tauce.getTaskAttemptId() \u003d\u003d null ?\n            \"\" : tauce.getTaskAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"ERROR\", tauce.getError());\n        tEvent.addEventInfo(\"STATUS\", tauce.getTaskStatus());\n        tEvent.addEventInfo(\"HOSTNAME\", tauce.getHostname());\n        tEvent.addEventInfo(\"PORT\", tauce.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", tauce.getRackName());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", tauce.getFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tauce.getCounters()));\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tauce.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case MAP_ATTEMPT_FINISHED:\n        MapAttemptFinishedEvent mafe \u003d (MapAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", mafe.getTaskType().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", mafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", mafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", mafe.getState());\n        tEvent.addEventInfo(\"MAP_FINISH_TIME\", mafe.getMapFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(mafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", mafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", mafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", mafe.getRackName());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", mafe.getAttemptId() \u003d\u003d null ?\n            \"\" : mafe.getAttemptId().toString());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(mafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case REDUCE_ATTEMPT_FINISHED:\n        ReduceAttemptFinishedEvent rafe \u003d (ReduceAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", rafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", rafe.getAttemptId() \u003d\u003d null ?\n            \"\" : rafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", rafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", rafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", rafe.getState());\n        tEvent.addEventInfo(\"SHUFFLE_FINISH_TIME\", rafe.getShuffleFinishTime());\n        tEvent.addEventInfo(\"SORT_FINISH_TIME\", rafe.getSortFinishTime());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(rafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", rafe.getHostname());\n        tEvent.addEventInfo(\"PORT\", rafe.getPort());\n        tEvent.addEventInfo(\"RACK_NAME\", rafe.getRackName());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(rafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case SETUP_ATTEMPT_FINISHED:\n      case CLEANUP_ATTEMPT_FINISHED:\n        TaskAttemptFinishedEvent tafe \u003d (TaskAttemptFinishedEvent) event;\n        tEvent.addEventInfo(\"TASK_TYPE\", tafe.getTaskType().toString());\n        tEvent.addEventInfo(\"ATTEMPT_ID\", tafe.getAttemptId() \u003d\u003d null ?\n            \"\" : tafe.getAttemptId().toString());\n        tEvent.addEventInfo(\"FINISH_TIME\", tafe.getFinishTime());\n        tEvent.addEventInfo(\"STATUS\", tafe.getTaskStatus());\n        tEvent.addEventInfo(\"STATE\", tafe.getState());\n        tEvent.addEventInfo(\"COUNTERS_GROUPS\",\n                countersToJSON(tafe.getCounters()));\n        tEvent.addEventInfo(\"HOSTNAME\", tafe.getHostname());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(tafe.getTaskId().toString());\n        tEntity.setEntityType(MAPREDUCE_TASK_ENTITY_TYPE);\n        tEntity.addRelatedEntity(MAPREDUCE_JOB_ENTITY_TYPE, jobId.toString());\n        break;\n      case AM_STARTED:\n        AMStartedEvent ase \u003d (AMStartedEvent) event;\n        tEvent.addEventInfo(\"APPLICATION_ATTEMPT_ID\",\n                ase.getAppAttemptId() \u003d\u003d null ?\n                \"\" : ase.getAppAttemptId().toString());\n        tEvent.addEventInfo(\"CONTAINER_ID\", ase.getContainerId() \u003d\u003d null ?\n                \"\" : ase.getContainerId().toString());\n        tEvent.addEventInfo(\"NODE_MANAGER_HOST\", ase.getNodeManagerHost());\n        tEvent.addEventInfo(\"NODE_MANAGER_PORT\", ase.getNodeManagerPort());\n        tEvent.addEventInfo(\"NODE_MANAGER_HTTP_PORT\",\n                ase.getNodeManagerHttpPort());\n        tEvent.addEventInfo(\"START_TIME\", ase.getStartTime());\n        tEntity.addEvent(tEvent);\n        tEntity.setEntityId(jobId.toString());\n        tEntity.setEntityType(MAPREDUCE_JOB_ENTITY_TYPE);\n        break;\n      default:\n        break;\n    }\n\n    try {\n      timelineClient.putEntities(tEntity);\n    } catch (IOException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    } catch (YarnException ex) {\n      LOG.error(\"Error putting entity \" + tEntity.getEntityId() + \" to Timeline\"\n      + \"Server\", ex);\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/jobhistory/JobHistoryEventHandler.java"
    }
  }
}