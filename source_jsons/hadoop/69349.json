{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TotalHeapUsageEmulatorPlugin.java",
  "functionName": "initialize",
  "functionId": "initialize___conf-Configuration__metrics-ResourceUsageMetrics__monitor-ResourceCalculatorPlugin__progress-Progressive",
  "sourceFilePath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
  "functionStartLine": 252,
  "functionEndLine": 278,
  "numCommitsSeen": 9,
  "timeTaken": 939,
  "changeHistory": [
    "dcf84707ab50662add112bd6b01c0bfd63374853",
    "d310c48ce4dc3fc24506455ed5addf1d24f441ee",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a732ab38047299c545cfc978e25f6b2871b5a4b3"
  ],
  "changeHistoryShort": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": "Yfilerename",
    "d310c48ce4dc3fc24506455ed5addf1d24f441ee": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a732ab38047299c545cfc978e25f6b2871b5a4b3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dcf84707ab50662add112bd6b01c0bfd63374853": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3543. Mavenize Gridmix. (tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1339629 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/05/12 8:06 AM",
      "commitName": "dcf84707ab50662add112bd6b01c0bfd63374853",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "17/05/12 7:20 AM",
      "commitNameOld": "e1f09365ca0bee093f849fcf2e546dd6e2c0a965",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                         ResourceCalculatorPlugin monitor,\n                         Progressive progress) {\n    this.progress \u003d progress;\n    \n    // get the target heap usage\n    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n      enabled \u003d false;\n      return;\n    } else {\n      // calibrate the core heap-usage utility\n      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n      enabled \u003d true;\n    }\n    \n    emulationInterval \u003d \n      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n    \n    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n    \n    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n    \n    prevEmulationProgress \u003d 0;\n  }",
      "path": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
        "newPath": "hadoop-tools/hadoop-gridmix/src/main/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java"
      }
    },
    "d310c48ce4dc3fc24506455ed5addf1d24f441ee": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4083. [Gridmix] NPE in cpu emulation. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1325145 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/04/12 12:17 AM",
      "commitName": "d310c48ce4dc3fc24506455ed5addf1d24f441ee",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "06/10/11 9:59 PM",
      "commitNameOld": "c1c0e8c9eaa12043faad985ac5d7e1b5949544cd",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 188.1,
      "commitsBetweenForRepo": 1382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                          ResourceCalculatorPlugin monitor,\n                          Progressive progress) {\n+    this.progress \u003d progress;\n+    \n     // get the target heap usage\n     targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n     if (targetHeapUsageInMB \u003c\u003d 0 ) {\n       enabled \u003d false;\n       return;\n     } else {\n       // calibrate the core heap-usage utility\n       emulatorCore.initialize(monitor, targetHeapUsageInMB);\n       enabled \u003d true;\n     }\n     \n-    this.progress \u003d progress;\n     emulationInterval \u003d \n       conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                     DEFAULT_EMULATION_PROGRESS_INTERVAL);\n     \n     minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                      DEFAULT_MIN_FREE_HEAP_RATIO);\n     \n     heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n     \n     prevEmulationProgress \u003d 0;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                         ResourceCalculatorPlugin monitor,\n                         Progressive progress) {\n    this.progress \u003d progress;\n    \n    // get the target heap usage\n    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n      enabled \u003d false;\n      return;\n    } else {\n      // calibrate the core heap-usage utility\n      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n      enabled \u003d true;\n    }\n    \n    emulationInterval \u003d \n      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n    \n    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n    \n    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n    \n    prevEmulationProgress \u003d 0;\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                         ResourceCalculatorPlugin monitor,\n                         Progressive progress) {\n    // get the target heap usage\n    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n      enabled \u003d false;\n      return;\n    } else {\n      // calibrate the core heap-usage utility\n      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n      enabled \u003d true;\n    }\n    \n    this.progress \u003d progress;\n    emulationInterval \u003d \n      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n    \n    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n    \n    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n    \n    prevEmulationProgress \u003d 0;\n  }",
      "path": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
        "newPath": "hadoop-mapreduce-project/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                         ResourceCalculatorPlugin monitor,\n                         Progressive progress) {\n    // get the target heap usage\n    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n      enabled \u003d false;\n      return;\n    } else {\n      // calibrate the core heap-usage utility\n      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n      enabled \u003d true;\n    }\n    \n    this.progress \u003d progress;\n    emulationInterval \u003d \n      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n    \n    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n    \n    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n    \n    prevEmulationProgress \u003d 0;\n  }",
      "path": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java",
        "newPath": "hadoop-mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java"
      }
    },
    "a732ab38047299c545cfc978e25f6b2871b5a4b3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2107. [Gridmix] Total heap usage emulation in Gridmix. (Amar Kamat and Ravi Gummadi via amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1136000 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/06/11 4:37 AM",
      "commitName": "a732ab38047299c545cfc978e25f6b2871b5a4b3",
      "commitAuthor": "Amar Kamat",
      "diff": "@@ -0,0 +1,26 @@\n+  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n+                         ResourceCalculatorPlugin monitor,\n+                         Progressive progress) {\n+    // get the target heap usage\n+    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n+    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n+      enabled \u003d false;\n+      return;\n+    } else {\n+      // calibrate the core heap-usage utility\n+      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n+      enabled \u003d true;\n+    }\n+    \n+    this.progress \u003d progress;\n+    emulationInterval \u003d \n+      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n+                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n+    \n+    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n+                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n+    \n+    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n+    \n+    prevEmulationProgress \u003d 0;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void initialize(Configuration conf, ResourceUsageMetrics metrics,\n                         ResourceCalculatorPlugin monitor,\n                         Progressive progress) {\n    // get the target heap usage\n    targetHeapUsageInMB \u003d metrics.getHeapUsage() / ONE_MB;\n    if (targetHeapUsageInMB \u003c\u003d 0 ) {\n      enabled \u003d false;\n      return;\n    } else {\n      // calibrate the core heap-usage utility\n      emulatorCore.initialize(monitor, targetHeapUsageInMB);\n      enabled \u003d true;\n    }\n    \n    this.progress \u003d progress;\n    emulationInterval \u003d \n      conf.getFloat(HEAP_EMULATION_PROGRESS_INTERVAL, \n                    DEFAULT_EMULATION_PROGRESS_INTERVAL);\n    \n    minFreeHeapRatio \u003d conf.getFloat(MIN_HEAP_FREE_RATIO, \n                                     DEFAULT_MIN_FREE_HEAP_RATIO);\n    \n    heapLoadRatio \u003d conf.getFloat(HEAP_LOAD_RATIO, DEFAULT_HEAP_LOAD_RATIO);\n    \n    prevEmulationProgress \u003d 0;\n  }",
      "path": "mapreduce/src/contrib/gridmix/src/java/org/apache/hadoop/mapred/gridmix/emulators/resourceusage/TotalHeapUsageEmulatorPlugin.java"
    }
  }
}