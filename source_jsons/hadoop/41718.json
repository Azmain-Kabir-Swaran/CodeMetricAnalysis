{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractYarnScheduler.java",
  "functionName": "recoverAndCreateContainer",
  "functionId": "recoverAndCreateContainer___status-NMContainerStatus__node-RMNode__queueName-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
  "functionStartLine": 614,
  "functionEndLine": 632,
  "numCommitsSeen": 218,
  "timeTaken": 8256,
  "changeHistory": [
    "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4",
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
    "f9139ac8f60184a82a8bb315237bea04bdb98ec8",
    "91f120f743662c6e037e8f21b1792e81d58ac664",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
    "e285b98f0fe8637b574c52498035f7f11fb4e962",
    "424fd9494f144c035fdef8c533be51e2027ad8d9"
  ],
  "changeHistoryShort": {
    "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4": "Ymultichange(Yparameterchange,Ybodychange)",
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": "Ybodychange",
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": "Ybodychange",
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": "Ybodychange",
    "f9139ac8f60184a82a8bb315237bea04bdb98ec8": "Ybodychange",
    "91f120f743662c6e037e8f21b1792e81d58ac664": "Ybodychange",
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ybodychange",
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": "Ybodychange",
    "e285b98f0fe8637b574c52498035f7f11fb4e962": "Ymultichange(Yparameterchange,Ybodychange)",
    "424fd9494f144c035fdef8c533be51e2027ad8d9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-8232. RMContainer lost queue name when RM HA happens. (Hu Ziqian via wangda)\n\nChange-Id: Ia21e1da6871570c993bbedde76ce32929e95970f\n",
      "commitDate": "08/05/18 11:34 AM",
      "commitName": "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-8232. RMContainer lost queue name when RM HA happens. (Hu Ziqian via wangda)\n\nChange-Id: Ia21e1da6871570c993bbedde76ce32929e95970f\n",
          "commitDate": "08/05/18 11:34 AM",
          "commitName": "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "c23980c4f2cf4c751a99fd310e60149cb32ea7c7",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 97.38,
          "commitsBetweenForRepo": 1264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n-      RMNode node) {\n+      RMNode node, String queueName) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     container.setExecutionType(status.getExecutionType());\n     container.setAllocationRequestId(status.getAllocationRequestId());\n     container.setAllocationTags(status.getAllocationTags());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n         applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n         status.getCreationTime(), status.getNodeLabelExpression());\n+    ((RMContainerImpl) rmContainer).setQueueName(queueName);\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node, String queueName) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    container.setExecutionType(status.getExecutionType());\n    container.setAllocationRequestId(status.getAllocationRequestId());\n    container.setAllocationTags(status.getAllocationTags());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    ((RMContainerImpl) rmContainer).setQueueName(queueName);\n    return rmContainer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[status-NMContainerStatus, node-RMNode]",
            "newValue": "[status-NMContainerStatus, node-RMNode, queueName-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-8232. RMContainer lost queue name when RM HA happens. (Hu Ziqian via wangda)\n\nChange-Id: Ia21e1da6871570c993bbedde76ce32929e95970f\n",
          "commitDate": "08/05/18 11:34 AM",
          "commitName": "6b96a73bb0f0ad1c877a062b19091e3e15a33ec4",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "31/01/18 1:30 AM",
          "commitNameOld": "c23980c4f2cf4c751a99fd310e60149cb32ea7c7",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 97.38,
          "commitsBetweenForRepo": 1264,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n-      RMNode node) {\n+      RMNode node, String queueName) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     container.setExecutionType(status.getExecutionType());\n     container.setAllocationRequestId(status.getAllocationRequestId());\n     container.setAllocationTags(status.getAllocationTags());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n         applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n         status.getCreationTime(), status.getNodeLabelExpression());\n+    ((RMContainerImpl) rmContainer).setQueueName(queueName);\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node, String queueName) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    container.setExecutionType(status.getExecutionType());\n    container.setAllocationRequestId(status.getAllocationRequestId());\n    container.setAllocationTags(status.getAllocationTags());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    ((RMContainerImpl) rmContainer).setQueueName(queueName);\n    return rmContainer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "29d9e4d5814900d5c59d77fe05d32186d4ad9385": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6619. AMRMClient Changes to use the PlacementConstraint and SchcedulingRequest objects. (Arun Suresh via wangda)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "29d9e4d5814900d5c59d77fe05d32186d4ad9385",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "31/01/18 1:30 AM",
      "commitNameOld": "88d8d3f40b2923fab23a933bce1cd2e9c320ae84",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     container.setExecutionType(status.getExecutionType());\n     container.setAllocationRequestId(status.getAllocationRequestId());\n+    container.setAllocationTags(status.getAllocationTags());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n         applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n         status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    container.setExecutionType(status.getExecutionType());\n    container.setAllocationRequestId(status.getAllocationRequestId());\n    container.setAllocationTags(status.getAllocationTags());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "a55d0738f1eba225c45578bbdabd0e5a6d6f5392": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7371. Added allocateRequestId in NMContainerStatus for recovery. Contributed by Chandni Singh\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a55d0738f1eba225c45578bbdabd0e5a6d6f5392",
      "commitAuthor": "Jian He",
      "commitDateOld": "02/11/17 1:25 AM",
      "commitNameOld": "940ffe3f9ce74286a8863e3743faf88a33c817a3",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 4.55,
      "commitsBetweenForRepo": 128,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     container.setExecutionType(status.getExecutionType());\n+    container.setAllocationRequestId(status.getAllocationRequestId());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n         applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n         status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    container.setExecutionType(status.getExecutionType());\n    container.setAllocationRequestId(status.getAllocationRequestId());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6849. NMContainerStatus should have the Container ExecutionType. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "08/09/17 9:24 AM",
      "commitName": "1f53ae79728065417c6a99eb6fcc8d3a080ab4cc",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "07/09/17 6:45 PM",
      "commitNameOld": "56d93d2e39ead89bb79c4f4096554820dc77e84b",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 0.61,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n+    container.setExecutionType(status.getExecutionType());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d new RMContainerImpl(container,\n         SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n         applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n         status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    container.setExecutionType(status.getExecutionType());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "f9139ac8f60184a82a8bb315237bea04bdb98ec8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6872. [Addendum patch] Ensure apps could run given NodeLabels are disabled post RM switchover/restart. Contributed by Sunil G\n",
      "commitDate": "02/08/17 12:03 AM",
      "commitName": "f9139ac8f60184a82a8bb315237bea04bdb98ec8",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/08/17 9:56 AM",
      "commitNameOld": "91f120f743662c6e037e8f21b1792e81d58ac664",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 0.59,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,15 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n-    String labelExpression \u003d status.getNodeLabelExpression();\n-    // If NodeLabel is disabled but recovered container has label expression\n-    // its better to suppress that and considered as default label.\n-    if (!status.getNodeLabelExpression().isEmpty() \u0026\u0026 !YarnConfiguration\n-        .areNodeLabelsEnabled(rmContext.getYarnConfiguration())) {\n-      labelExpression \u003d RMNodeLabelsManager.NO_LABEL;\n-    }\n-\n-    RMContainer rmContainer \u003d\n-        new RMContainerImpl(container,\n-            SchedulerRequestKey.extractFrom(container), attemptId,\n-            node.getNodeID(), applications.get(\n-            attemptId.getApplicationId()).getUser(), rmContext,\n-            status.getCreationTime(), labelExpression);\n+    RMContainer rmContainer \u003d new RMContainerImpl(container,\n+        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n+        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n+        status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d new RMContainerImpl(container,\n        SchedulerRequestKey.extractFrom(container), attemptId, node.getNodeID(),\n        applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n        status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "91f120f743662c6e037e8f21b1792e81d58ac664": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6872. Ensure apps could run given NodeLabels are disabled post RM switchover/restart. Contributed by Sunil G\n",
      "commitDate": "01/08/17 9:56 AM",
      "commitName": "91f120f743662c6e037e8f21b1792e81d58ac664",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/05/17 7:45 AM",
      "commitNameOld": "30fc5801966feb7f9bdd7d79db75acc595102913",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 92.09,
      "commitsBetweenForRepo": 460,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n+    String labelExpression \u003d status.getNodeLabelExpression();\n+    // If NodeLabel is disabled but recovered container has label expression\n+    // its better to suppress that and considered as default label.\n+    if (!status.getNodeLabelExpression().isEmpty() \u0026\u0026 !YarnConfiguration\n+        .areNodeLabelsEnabled(rmContext.getYarnConfiguration())) {\n+      labelExpression \u003d RMNodeLabelsManager.NO_LABEL;\n+    }\n+\n     RMContainer rmContainer \u003d\n         new RMContainerImpl(container,\n             SchedulerRequestKey.extractFrom(container), attemptId,\n             node.getNodeID(), applications.get(\n             attemptId.getApplicationId()).getUser(), rmContext,\n-            status.getCreationTime(), status.getNodeLabelExpression());\n+            status.getCreationTime(), labelExpression);\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    String labelExpression \u003d status.getNodeLabelExpression();\n    // If NodeLabel is disabled but recovered container has label expression\n    // its better to suppress that and considered as default label.\n    if (!status.getNodeLabelExpression().isEmpty() \u0026\u0026 !YarnConfiguration\n        .areNodeLabelsEnabled(rmContext.getYarnConfiguration())) {\n      labelExpression \u003d RMNodeLabelsManager.NO_LABEL;\n    }\n\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container,\n            SchedulerRequestKey.extractFrom(container), attemptId,\n            node.getNodeID(), applications.get(\n            attemptId.getApplicationId()).getUser(), rmContext,\n            status.getCreationTime(), labelExpression);\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "0a55bd841ec0f2eb89a0383f4c589526e8b138d4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5959. RM changes to support change of container ExecutionType. (Arun Suresh via wangda)\n",
      "commitDate": "05/01/17 10:31 AM",
      "commitName": "0a55bd841ec0f2eb89a0383f4c589526e8b138d4",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "03/01/17 2:53 PM",
      "commitNameOld": "f69a107aeccc68ca1085a7be8093d36b2f45eaa1",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 1.82,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     container.setVersion(status.getVersion());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d\n-        new RMContainerImpl(container, attemptId, node.getNodeID(),\n-          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n-          status.getCreationTime(), status.getNodeLabelExpression());\n+        new RMContainerImpl(container,\n+            SchedulerRequestKey.extractFrom(container), attemptId,\n+            node.getNodeID(), applications.get(\n+            attemptId.getApplicationId()).getUser(), rmContext,\n+            status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container,\n            SchedulerRequestKey.extractFrom(container), attemptId,\n            node.getNodeID(), applications.get(\n            attemptId.getApplicationId()).getUser(), rmContext,\n            status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "05/08/16 10:27 AM",
      "commitNameOld": "e0d131f055ee126052ad4d0f7b0d192e6c730188",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 25.23,
      "commitsBetweenForRepo": 174,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n+    container.setVersion(status.getVersion());\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d\n         new RMContainerImpl(container, attemptId, node.getNodeID(),\n           applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n           status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    container.setVersion(status.getVersion());\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container, attemptId, node.getNodeID(),\n          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n          status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "1b89a3e173f8e905074ed6714a7be5c003c0e2c4": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3354. Add node label expression in ContainerTokenIdentifier to support RM recovery. Contributed by Wangda Tan\n",
      "commitDate": "15/04/15 1:57 PM",
      "commitName": "1b89a3e173f8e905074ed6714a7be5c003c0e2c4",
      "commitAuthor": "Jian He",
      "commitDateOld": "20/03/15 1:54 PM",
      "commitNameOld": "586348e4cbf197188057d6b843a6701cfffdaff3",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 26.0,
      "commitsBetweenForRepo": 224,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n         Container.newInstance(status.getContainerId(), node.getNodeID(),\n           node.getHttpAddress(), status.getAllocatedResource(),\n           status.getPriority(), null);\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d\n         new RMContainerImpl(container, attemptId, node.getNodeID(),\n           applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n-          status.getCreationTime());\n+          status.getCreationTime(), status.getNodeLabelExpression());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container, attemptId, node.getNodeID(),\n          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n          status.getCreationTime(), status.getNodeLabelExpression());\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
      "extendedDetails": {}
    },
    "e285b98f0fe8637b574c52498035f7f11fb4e962": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2152. Added missing information into ContainerTokenIdentifier so that NodeManagers can report the same to RM when RM restarts. Contributed Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605205 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 2:43 PM",
      "commitName": "e285b98f0fe8637b574c52498035f7f11fb4e962",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2152. Added missing information into ContainerTokenIdentifier so that NodeManagers can report the same to RM when RM restarts. Contributed Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 2:43 PM",
          "commitName": "e285b98f0fe8637b574c52498035f7f11fb4e962",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/06/14 8:09 PM",
          "commitNameOld": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 15.77,
          "commitsBetweenForRepo": 124,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private RMContainer recoverAndCreateContainer(NMContainerStatus report,\n+  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n-        Container.newInstance(report.getContainerId(), node.getNodeID(),\n-          node.getHttpAddress(), report.getAllocatedResource(),\n-          report.getPriority(), null);\n+        Container.newInstance(status.getContainerId(), node.getNodeID(),\n+          node.getHttpAddress(), status.getAllocatedResource(),\n+          status.getPriority(), null);\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d\n         new RMContainerImpl(container, attemptId, node.getNodeID(),\n-          applications.get(attemptId.getApplicationId()).getUser(), rmContext);\n+          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n+          status.getCreationTime());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container, attemptId, node.getNodeID(),\n          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n          status.getCreationTime());\n    return rmContainer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {
            "oldValue": "[report-NMContainerStatus, node-RMNode]",
            "newValue": "[status-NMContainerStatus, node-RMNode]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2152. Added missing information into ContainerTokenIdentifier so that NodeManagers can report the same to RM when RM restarts. Contributed Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605205 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "24/06/14 2:43 PM",
          "commitName": "e285b98f0fe8637b574c52498035f7f11fb4e962",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "08/06/14 8:09 PM",
          "commitNameOld": "424fd9494f144c035fdef8c533be51e2027ad8d9",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 15.77,
          "commitsBetweenForRepo": 124,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n-  private RMContainer recoverAndCreateContainer(NMContainerStatus report,\n+  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n       RMNode node) {\n     Container container \u003d\n-        Container.newInstance(report.getContainerId(), node.getNodeID(),\n-          node.getHttpAddress(), report.getAllocatedResource(),\n-          report.getPriority(), null);\n+        Container.newInstance(status.getContainerId(), node.getNodeID(),\n+          node.getHttpAddress(), status.getAllocatedResource(),\n+          status.getPriority(), null);\n     ApplicationAttemptId attemptId \u003d\n         container.getId().getApplicationAttemptId();\n     RMContainer rmContainer \u003d\n         new RMContainerImpl(container, attemptId, node.getNodeID(),\n-          applications.get(attemptId.getApplicationId()).getUser(), rmContext);\n+          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n+          status.getCreationTime());\n     return rmContainer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus status,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(status.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), status.getAllocatedResource(),\n          status.getPriority(), null);\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container, attemptId, node.getNodeID(),\n          applications.get(attemptId.getApplicationId()).getUser(), rmContext,\n          status.getCreationTime());\n    return rmContainer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java",
          "extendedDetails": {}
        }
      ]
    },
    "424fd9494f144c035fdef8c533be51e2027ad8d9": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1368. Added core functionality of recovering container state into schedulers after ResourceManager Restart so as to preserve running work in the cluster. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601303 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/06/14 8:09 PM",
      "commitName": "424fd9494f144c035fdef8c533be51e2027ad8d9",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,13 @@\n+  private RMContainer recoverAndCreateContainer(NMContainerStatus report,\n+      RMNode node) {\n+    Container container \u003d\n+        Container.newInstance(report.getContainerId(), node.getNodeID(),\n+          node.getHttpAddress(), report.getAllocatedResource(),\n+          report.getPriority(), null);\n+    ApplicationAttemptId attemptId \u003d\n+        container.getId().getApplicationAttemptId();\n+    RMContainer rmContainer \u003d\n+        new RMContainerImpl(container, attemptId, node.getNodeID(),\n+          applications.get(attemptId.getApplicationId()).getUser(), rmContext);\n+    return rmContainer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private RMContainer recoverAndCreateContainer(NMContainerStatus report,\n      RMNode node) {\n    Container container \u003d\n        Container.newInstance(report.getContainerId(), node.getNodeID(),\n          node.getHttpAddress(), report.getAllocatedResource(),\n          report.getPriority(), null);\n    ApplicationAttemptId attemptId \u003d\n        container.getId().getApplicationAttemptId();\n    RMContainer rmContainer \u003d\n        new RMContainerImpl(container, attemptId, node.getNodeID(),\n          applications.get(attemptId.getApplicationId()).getUser(), rmContext);\n    return rmContainer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/AbstractYarnScheduler.java"
    }
  }
}