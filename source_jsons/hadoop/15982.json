{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "setStatus",
  "functionId": "setStatus___status-Status",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java",
  "functionStartLine": 266,
  "functionEndLine": 287,
  "numCommitsSeen": 12,
  "timeTaken": 581,
  "changeHistory": [
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,22 @@\n+  public void setStatus(Status status) throws ServerException {\n+    Check.notNull(status, \"status\");\n+    if (status.settable) {\n+      if (status !\u003d this.status) {\n+        Status oldStatus \u003d this.status;\n+        this.status \u003d status;\n+        for (Service service : services.values()) {\n+          try {\n+            service.serverStatusChange(oldStatus, status);\n+          } catch (Exception ex) {\n+            log.error(\"Service [{}] exception during status change to [{}] -server shutting down-,  {}\",\n+                      new Object[]{service.getInterface().getSimpleName(), status, ex.getMessage(), ex});\n+            destroy();\n+            throw new ServerException(ServerException.ERROR.S11, service.getInterface().getSimpleName(),\n+                                      status, ex.getMessage(), ex);\n+          }\n+        }\n+      }\n+    } else {\n+      throw new IllegalArgumentException(\"Status [\" + status + \" is not settable\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setStatus(Status status) throws ServerException {\n    Check.notNull(status, \"status\");\n    if (status.settable) {\n      if (status !\u003d this.status) {\n        Status oldStatus \u003d this.status;\n        this.status \u003d status;\n        for (Service service : services.values()) {\n          try {\n            service.serverStatusChange(oldStatus, status);\n          } catch (Exception ex) {\n            log.error(\"Service [{}] exception during status change to [{}] -server shutting down-,  {}\",\n                      new Object[]{service.getInterface().getSimpleName(), status, ex.getMessage(), ex});\n            destroy();\n            throw new ServerException(ServerException.ERROR.S11, service.getInterface().getSimpleName(),\n                                      status, ex.getMessage(), ex);\n          }\n        }\n      }\n    } else {\n      throw new IllegalArgumentException(\"Status [\" + status + \" is not settable\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/server/Server.java"
    }
  }
}