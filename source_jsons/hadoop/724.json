{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DataStreamer.java",
  "functionName": "shouldWaitForRestart",
  "functionId": "shouldWaitForRestart___index-int",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
  "functionStartLine": 1038,
  "functionEndLine": 1061,
  "numCommitsSeen": 149,
  "timeTaken": 4763,
  "changeHistory": [
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
    "57b28693ee295746c6d168d37dd05eaf7b601b87"
  ],
  "changeHistoryShort": {
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca": "Ybodychange",
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": "Ybodychange",
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": "Yfilerename",
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": "Ymovefromfile",
    "57b28693ee295746c6d168d37dd05eaf7b601b87": "Yintroduced"
  },
  "changeHistoryDetails": {
    "29b7df960fc3d0a7d1416225c3106c7d4222f0ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11856. Ability to re-add Upgrading Nodes to pipeline for future pipeline updates. Contributed by Vinayakumar B.\n",
      "commitDate": "25/05/17 11:05 AM",
      "commitName": "29b7df960fc3d0a7d1416225c3106c7d4222f0ca",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "05/05/17 12:01 PM",
      "commitNameOld": "a3954ccab148bddc290cb96528e63ff19799bcc9",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 19.96,
      "commitsBetweenForRepo": 106,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,24 @@\n   boolean shouldWaitForRestart(int index) {\n     // Only one node in the pipeline.\n     if (nodes.length \u003d\u003d 1) {\n       return true;\n     }\n \n+    /*\n+     * Treat all nodes as remote for test when skip enabled.\n+     */\n+    if (DFSClientFaultInjector.get().skipRollingRestartWait()) {\n+      return false;\n+    }\n+\n     // Is it a local node?\n     InetAddress addr \u003d null;\n     try {\n       addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n     } catch (java.net.UnknownHostException e) {\n       // we are passing an ip address. this should not happen.\n       assert false;\n     }\n \n     return addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean shouldWaitForRestart(int index) {\n    // Only one node in the pipeline.\n    if (nodes.length \u003d\u003d 1) {\n      return true;\n    }\n\n    /*\n     * Treat all nodes as remote for test when skip enabled.\n     */\n    if (DFSClientFaultInjector.get().skipRollingRestartWait()) {\n      return false;\n    }\n\n    // Is it a local node?\n    InetAddress addr \u003d null;\n    try {\n      addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n    } catch (java.net.UnknownHostException e) {\n      // we are passing an ip address. this should not happen.\n      assert false;\n    }\n\n    return addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8979. Clean up checkstyle warnings in hadoop-hdfs-client module. Contributed by Mingliang Liu.\n",
      "commitDate": "03/10/15 11:38 AM",
      "commitName": "7136e8c5582dc4061b566cb9f11a0d6a6d08bb93",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "30/09/15 8:39 AM",
      "commitNameOld": "6c17d315287020368689fa078a40a1eaedf89d5b",
      "commitAuthorOld": "",
      "daysBetweenCommits": 3.12,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,17 @@\n   boolean shouldWaitForRestart(int index) {\n     // Only one node in the pipeline.\n     if (nodes.length \u003d\u003d 1) {\n       return true;\n     }\n \n     // Is it a local node?\n     InetAddress addr \u003d null;\n     try {\n       addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n     } catch (java.net.UnknownHostException e) {\n       // we are passing an ip address. this should not happen.\n       assert false;\n     }\n \n-    if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n-      return true;\n-    }\n-    return false;\n+    return addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean shouldWaitForRestart(int index) {\n    // Only one node in the pipeline.\n    if (nodes.length \u003d\u003d 1) {\n      return true;\n    }\n\n    // Is it a local node?\n    InetAddress addr \u003d null;\n    try {\n      addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n    } catch (java.net.UnknownHostException e) {\n      // we are passing an ip address. this should not happen.\n      assert false;\n    }\n\n    return addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {}
    },
    "bf37d3d80e5179dea27e5bd5aea804a38aa9934c": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-8053. Move DFSIn/OutputStream and related classes to hadoop-hdfs-client. Contributed by Mingliang Liu.\n",
      "commitDate": "26/09/15 11:08 AM",
      "commitName": "bf37d3d80e5179dea27e5bd5aea804a38aa9934c",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "26/09/15 9:06 AM",
      "commitNameOld": "861b52db242f238d7e36ad75c158025be959a696",
      "commitAuthorOld": "Vinayakumar B",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  boolean shouldWaitForRestart(int index) {\n    // Only one node in the pipeline.\n    if (nodes.length \u003d\u003d 1) {\n      return true;\n    }\n\n    // Is it a local node?\n    InetAddress addr \u003d null;\n    try {\n      addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n    } catch (java.net.UnknownHostException e) {\n      // we are passing an ip address. this should not happen.\n      assert false;\n    }\n\n    if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java"
      }
    },
    "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66": {
      "type": "Ymovefromfile",
      "commitMessage": "HDFS-7854. Separate class DataStreamer out of DFSOutputStream. Contributed by Li Bo.\n",
      "commitDate": "24/03/15 11:06 AM",
      "commitName": "a16bfff71bd7f00e06e1f59bfe5445a154bb8c66",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "24/03/15 10:49 AM",
      "commitNameOld": "570a83ae80faf2076966acf30588733803327844",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n-    boolean shouldWaitForRestart(int index) {\n-      // Only one node in the pipeline.\n-      if (nodes.length \u003d\u003d 1) {\n-        return true;\n-      }\n+  boolean shouldWaitForRestart(int index) {\n+    // Only one node in the pipeline.\n+    if (nodes.length \u003d\u003d 1) {\n+      return true;\n+    }\n \n-      // Is it a local node?\n-      InetAddress addr \u003d null;\n-      try {\n-        addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n-      } catch (java.net.UnknownHostException e) {\n-        // we are passing an ip address. this should not happen.\n-        assert false;\n-      }\n+    // Is it a local node?\n+    InetAddress addr \u003d null;\n+    try {\n+      addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n+    } catch (java.net.UnknownHostException e) {\n+      // we are passing an ip address. this should not happen.\n+      assert false;\n+    }\n \n-      if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n-        return true;\n-      }\n-      return false;\n-    }\n\\ No newline at end of file\n+    if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n+      return true;\n+    }\n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  boolean shouldWaitForRestart(int index) {\n    // Only one node in the pipeline.\n    if (nodes.length \u003d\u003d 1) {\n      return true;\n    }\n\n    // Is it a local node?\n    InetAddress addr \u003d null;\n    try {\n      addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n    } catch (java.net.UnknownHostException e) {\n      // we are passing an ip address. this should not happen.\n      assert false;\n    }\n\n    if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n      return true;\n    }\n    return false;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DataStreamer.java",
        "oldMethodName": "shouldWaitForRestart",
        "newMethodName": "shouldWaitForRestart"
      }
    },
    "57b28693ee295746c6d168d37dd05eaf7b601b87": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5924. Utilize OOB upgrade message processing for writes. Contributed by Kihwal Lee.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-5535@1571792 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/02/14 11:24 AM",
      "commitName": "57b28693ee295746c6d168d37dd05eaf7b601b87",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,20 @@\n+    boolean shouldWaitForRestart(int index) {\n+      // Only one node in the pipeline.\n+      if (nodes.length \u003d\u003d 1) {\n+        return true;\n+      }\n+\n+      // Is it a local node?\n+      InetAddress addr \u003d null;\n+      try {\n+        addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n+      } catch (java.net.UnknownHostException e) {\n+        // we are passing an ip address. this should not happen.\n+        assert false;\n+      }\n+\n+      if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n+        return true;\n+      }\n+      return false;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    boolean shouldWaitForRestart(int index) {\n      // Only one node in the pipeline.\n      if (nodes.length \u003d\u003d 1) {\n        return true;\n      }\n\n      // Is it a local node?\n      InetAddress addr \u003d null;\n      try {\n        addr \u003d InetAddress.getByName(nodes[index].getIpAddr());\n      } catch (java.net.UnknownHostException e) {\n        // we are passing an ip address. this should not happen.\n        assert false;\n      }\n\n      if (addr !\u003d null \u0026\u0026 NetUtils.isLocalAddress(addr)) {\n        return true;\n      }\n      return false;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/DFSOutputStream.java"
    }
  }
}