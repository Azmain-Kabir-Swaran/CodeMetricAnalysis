{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IndexCache.java",
  "functionName": "getIndexInformation",
  "functionId": "getIndexInformation___mapId-String__reduce-int__fileName-Path__expectedIndexOwner-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
  "functionStartLine": 61,
  "functionEndLine": 90,
  "numCommitsSeen": 9,
  "timeTaken": 5154,
  "changeHistory": [
    "e2322e1117a2a3435aabecd49de0ad3c8d2f64b9",
    "cdef12644b949c711678f31d6cf3149d3b42b61b",
    "3d5a44f91978cde0d8f7d7e8f79c8267c72c483d",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "e2322e1117a2a3435aabecd49de0ad3c8d2f64b9": "Ybodychange",
    "cdef12644b949c711678f31d6cf3149d3b42b61b": "Ybodychange",
    "3d5a44f91978cde0d8f7d7e8f79c8267c72c483d": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e2322e1117a2a3435aabecd49de0ad3c8d2f64b9": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-7277. IndexCache totalMemoryUsed differs from cache contents. Contributed by Jon Eagles (jeagles).\n",
      "commitDate": "27/04/20 12:10 PM",
      "commitName": "e2322e1117a2a3435aabecd49de0ad3c8d2f64b9",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "02/11/17 1:43 AM",
      "commitNameOld": "178751ed8c9d47038acf8616c226f1f52e884feb",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 907.44,
      "commitsBetweenForRepo": 6630,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public IndexRecord getIndexInformation(String mapId, int reduce,\n                                          Path fileName, String expectedIndexOwner)\n     throws IOException {\n \n     IndexInformation info \u003d cache.get(mapId);\n \n     if (info \u003d\u003d null) {\n       info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n     } else {\n       synchronized(info) {\n         while (isUnderConstruction(info)) {\n           try {\n             info.wait();\n           } catch (InterruptedException e) {\n+            Thread.currentThread().interrupt();\n             throw new IOException(\"Interrupted waiting for construction\", e);\n           }\n         }\n       }\n-      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n+      LOG.debug(\"IndexCache HIT: MapId {} found\", mapId);\n     }\n \n     if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n         info.mapSpillRecord.size() \u003c\u003d reduce) {\n       throw new IOException(\"Invalid request \" +\n         \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n         \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n     }\n     return info.mapSpillRecord.getIndex(reduce);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      synchronized(info) {\n        while (isUnderConstruction(info)) {\n          try {\n            info.wait();\n          } catch (InterruptedException e) {\n            Thread.currentThread().interrupt();\n            throw new IOException(\"Interrupted waiting for construction\", e);\n          }\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId {} found\", mapId);\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
      "extendedDetails": {}
    },
    "cdef12644b949c711678f31d6cf3149d3b42b61b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4467. IndexCache failures due to missing synchronization (Kihwal Lee via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1365240 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/07/12 12:27 PM",
      "commitName": "cdef12644b949c711678f31d6cf3149d3b42b61b",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "05/07/12 2:36 PM",
      "commitNameOld": "3d5a44f91978cde0d8f7d7e8f79c8267c72c483d",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 18.91,
      "commitsBetweenForRepo": 126,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public IndexRecord getIndexInformation(String mapId, int reduce,\n                                          Path fileName, String expectedIndexOwner)\n     throws IOException {\n \n     IndexInformation info \u003d cache.get(mapId);\n \n     if (info \u003d\u003d null) {\n       info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n     } else {\n-      while (isUnderConstruction(info)) {\n-        try {\n-          // In case the entry is ready after the above check but\n-          // before the following wait, we do timed wait.\n-          info.wait(200);\n-        } catch (InterruptedException e) {\n-          throw new IOException(\"Interrupted waiting for construction\", e);\n+      synchronized(info) {\n+        while (isUnderConstruction(info)) {\n+          try {\n+            info.wait();\n+          } catch (InterruptedException e) {\n+            throw new IOException(\"Interrupted waiting for construction\", e);\n+          }\n         }\n       }\n       LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n     }\n \n     if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n         info.mapSpillRecord.size() \u003c\u003d reduce) {\n       throw new IOException(\"Invalid request \" +\n         \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n         \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n     }\n     return info.mapSpillRecord.getIndex(reduce);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      synchronized(info) {\n        while (isUnderConstruction(info)) {\n          try {\n            info.wait();\n          } catch (InterruptedException e) {\n            throw new IOException(\"Interrupted waiting for construction\", e);\n          }\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
      "extendedDetails": {}
    },
    "3d5a44f91978cde0d8f7d7e8f79c8267c72c483d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-4384. Race conditions in IndexCache (Kihwal Lee via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1357937 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/07/12 2:36 PM",
      "commitName": "3d5a44f91978cde0d8f7d7e8f79c8267c72c483d",
      "commitAuthor": "Thomas Graves",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 315.89,
      "commitsBetweenForRepo": 2137,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public IndexRecord getIndexInformation(String mapId, int reduce,\n                                          Path fileName, String expectedIndexOwner)\n     throws IOException {\n \n     IndexInformation info \u003d cache.get(mapId);\n \n     if (info \u003d\u003d null) {\n       info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n     } else {\n-      synchronized (info) {\n-        while (null \u003d\u003d info.mapSpillRecord) {\n-          try {\n-            info.wait();\n-          } catch (InterruptedException e) {\n-            throw new IOException(\"Interrupted waiting for construction\", e);\n-          }\n+      while (isUnderConstruction(info)) {\n+        try {\n+          // In case the entry is ready after the above check but\n+          // before the following wait, we do timed wait.\n+          info.wait(200);\n+        } catch (InterruptedException e) {\n+          throw new IOException(\"Interrupted waiting for construction\", e);\n         }\n       }\n       LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n     }\n \n     if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n         info.mapSpillRecord.size() \u003c\u003d reduce) {\n       throw new IOException(\"Invalid request \" +\n         \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n         \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n     }\n     return info.mapSpillRecord.getIndex(reduce);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      while (isUnderConstruction(info)) {\n        try {\n          // In case the entry is ready after the above check but\n          // before the following wait, we do timed wait.\n          info.wait(200);\n        } catch (InterruptedException e) {\n          throw new IOException(\"Interrupted waiting for construction\", e);\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      synchronized (info) {\n        while (null \u003d\u003d info.mapSpillRecord) {\n          try {\n            info.wait();\n          } catch (InterruptedException e) {\n            throw new IOException(\"Interrupted waiting for construction\", e);\n          }\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      synchronized (info) {\n        while (null \u003d\u003d info.mapSpillRecord) {\n          try {\n            info.wait();\n          } catch (InterruptedException e) {\n            throw new IOException(\"Interrupted waiting for construction\", e);\n          }\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/java/org/apache/hadoop/mapred/IndexCache.java",
        "newPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-core/src/main/java/org/apache/hadoop/mapred/IndexCache.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,29 @@\n+  public IndexRecord getIndexInformation(String mapId, int reduce,\n+                                         Path fileName, String expectedIndexOwner)\n+    throws IOException {\n+\n+    IndexInformation info \u003d cache.get(mapId);\n+\n+    if (info \u003d\u003d null) {\n+      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n+    } else {\n+      synchronized (info) {\n+        while (null \u003d\u003d info.mapSpillRecord) {\n+          try {\n+            info.wait();\n+          } catch (InterruptedException e) {\n+            throw new IOException(\"Interrupted waiting for construction\", e);\n+          }\n+        }\n+      }\n+      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n+    }\n+\n+    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n+        info.mapSpillRecord.size() \u003c\u003d reduce) {\n+      throw new IOException(\"Invalid request \" +\n+        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n+        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n+    }\n+    return info.mapSpillRecord.getIndex(reduce);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public IndexRecord getIndexInformation(String mapId, int reduce,\n                                         Path fileName, String expectedIndexOwner)\n    throws IOException {\n\n    IndexInformation info \u003d cache.get(mapId);\n\n    if (info \u003d\u003d null) {\n      info \u003d readIndexFileToCache(fileName, mapId, expectedIndexOwner);\n    } else {\n      synchronized (info) {\n        while (null \u003d\u003d info.mapSpillRecord) {\n          try {\n            info.wait();\n          } catch (InterruptedException e) {\n            throw new IOException(\"Interrupted waiting for construction\", e);\n          }\n        }\n      }\n      LOG.debug(\"IndexCache HIT: MapId \" + mapId + \" found\");\n    }\n\n    if (info.mapSpillRecord.size() \u003d\u003d 0 ||\n        info.mapSpillRecord.size() \u003c\u003d reduce) {\n      throw new IOException(\"Invalid request \" +\n        \" Map Id \u003d \" + mapId + \" Reducer \u003d \" + reduce +\n        \" Index Info Length \u003d \" + info.mapSpillRecord.size());\n    }\n    return info.mapSpillRecord.getIndex(reduce);\n  }",
      "path": "mapreduce/src/java/org/apache/hadoop/mapred/IndexCache.java"
    }
  }
}