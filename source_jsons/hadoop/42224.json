{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemRMStateStore.java",
  "functionName": "processChildNode",
  "functionId": "processChildNode___appDirName-String__childNodeName-String__childData-byte[]",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
  "functionStartLine": 987,
  "functionEndLine": 1009,
  "numCommitsSeen": 57,
  "timeTaken": 2742,
  "changeHistory": [
    "7dac7e1d13eaf0eac04fe805c7502dcecd597979",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "f271d377357ad680924d19f07e6c8315e7c89bae"
  ],
  "changeHistoryShort": {
    "7dac7e1d13eaf0eac04fe805c7502dcecd597979": "Yexceptionschange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "f271d377357ad680924d19f07e6c8315e7c89bae": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7dac7e1d13eaf0eac04fe805c7502dcecd597979": {
      "type": "Yexceptionschange",
      "commitMessage": "HADOOP-16596. [pb-upgrade] Use shaded protobuf classes from hadoop-thirdparty dependency (#1635). Contributed by Vinayakumar B.\n\n\r\n",
      "commitDate": "07/02/20 1:21 AM",
      "commitName": "7dac7e1d13eaf0eac04fe805c7502dcecd597979",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 328.42,
      "commitsBetweenForRepo": 2030,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n     public void processChildNode(String appDirName, String childNodeName,\n-        byte[] childData)\n-        throws com.google.protobuf.InvalidProtocolBufferException {\n+        byte[] childData) throws InvalidProtocolBufferException {\n       if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n         // application\n         LOG.debug(\"Loading application from node: {}\", childNodeName);\n         ApplicationStateDataPBImpl appState \u003d\n             new ApplicationStateDataPBImpl(\n                 ApplicationStateDataProto.parseFrom(childData));\n         ApplicationId appId \u003d\n             appState.getApplicationSubmissionContext().getApplicationId();\n         rmState.appState.put(appId, appState);\n       } else if (childNodeName.startsWith(\n           ApplicationAttemptId.appAttemptIdStrPrefix)) {\n         // attempt\n         LOG.debug(\"Loading application attempt from node: {}\", childNodeName);\n         ApplicationAttemptStateDataPBImpl attemptState \u003d\n             new ApplicationAttemptStateDataPBImpl(\n                 ApplicationAttemptStateDataProto.parseFrom(childData));\n         attempts.add(attemptState);\n       } else {\n         LOG.info(\"Unknown child node with name: \" + childNodeName);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processChildNode(String appDirName, String childNodeName,\n        byte[] childData) throws InvalidProtocolBufferException {\n      if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n        // application\n        LOG.debug(\"Loading application from node: {}\", childNodeName);\n        ApplicationStateDataPBImpl appState \u003d\n            new ApplicationStateDataPBImpl(\n                ApplicationStateDataProto.parseFrom(childData));\n        ApplicationId appId \u003d\n            appState.getApplicationSubmissionContext().getApplicationId();\n        rmState.appState.put(appId, appState);\n      } else if (childNodeName.startsWith(\n          ApplicationAttemptId.appAttemptIdStrPrefix)) {\n        // attempt\n        LOG.debug(\"Loading application attempt from node: {}\", childNodeName);\n        ApplicationAttemptStateDataPBImpl attemptState \u003d\n            new ApplicationAttemptStateDataPBImpl(\n                ApplicationAttemptStateDataProto.parseFrom(childData));\n        attempts.add(attemptState);\n      } else {\n        LOG.info(\"Unknown child node with name: \" + childNodeName);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[com.google.protobuf.InvalidProtocolBufferException]",
        "newValue": "[InvalidProtocolBufferException]"
      }
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "04/03/19 9:10 PM",
      "commitNameOld": "e40e2d6ad5cbe782c3a067229270738b501ed27e",
      "commitAuthorOld": "Prabhu Joseph",
      "daysBetweenCommits": 10.76,
      "commitsBetweenForRepo": 108,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,24 @@\n     public void processChildNode(String appDirName, String childNodeName,\n         byte[] childData)\n         throws com.google.protobuf.InvalidProtocolBufferException {\n       if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n         // application\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Loading application from node: \" + childNodeName);\n-        }\n+        LOG.debug(\"Loading application from node: {}\", childNodeName);\n         ApplicationStateDataPBImpl appState \u003d\n             new ApplicationStateDataPBImpl(\n                 ApplicationStateDataProto.parseFrom(childData));\n         ApplicationId appId \u003d\n             appState.getApplicationSubmissionContext().getApplicationId();\n         rmState.appState.put(appId, appState);\n       } else if (childNodeName.startsWith(\n           ApplicationAttemptId.appAttemptIdStrPrefix)) {\n         // attempt\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Loading application attempt from node: \"\n-              + childNodeName);\n-        }\n+        LOG.debug(\"Loading application attempt from node: {}\", childNodeName);\n         ApplicationAttemptStateDataPBImpl attemptState \u003d\n             new ApplicationAttemptStateDataPBImpl(\n                 ApplicationAttemptStateDataProto.parseFrom(childData));\n         attempts.add(attemptState);\n       } else {\n         LOG.info(\"Unknown child node with name: \" + childNodeName);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void processChildNode(String appDirName, String childNodeName,\n        byte[] childData)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n        // application\n        LOG.debug(\"Loading application from node: {}\", childNodeName);\n        ApplicationStateDataPBImpl appState \u003d\n            new ApplicationStateDataPBImpl(\n                ApplicationStateDataProto.parseFrom(childData));\n        ApplicationId appId \u003d\n            appState.getApplicationSubmissionContext().getApplicationId();\n        rmState.appState.put(appId, appState);\n      } else if (childNodeName.startsWith(\n          ApplicationAttemptId.appAttemptIdStrPrefix)) {\n        // attempt\n        LOG.debug(\"Loading application attempt from node: {}\", childNodeName);\n        ApplicationAttemptStateDataPBImpl attemptState \u003d\n            new ApplicationAttemptStateDataPBImpl(\n                ApplicationAttemptStateDataProto.parseFrom(childData));\n        attempts.add(attemptState);\n      } else {\n        LOG.info(\"Unknown child node with name: \" + childNodeName);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java",
      "extendedDetails": {}
    },
    "f271d377357ad680924d19f07e6c8315e7c89bae": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3736. Add RMStateStore apis to store and load accepted reservations for failover (adhoot via asuresh)\n",
      "commitDate": "05/08/15 12:57 PM",
      "commitName": "f271d377357ad680924d19f07e6c8315e7c89bae",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,29 @@\n+    public void processChildNode(String appDirName, String childNodeName,\n+        byte[] childData)\n+        throws com.google.protobuf.InvalidProtocolBufferException {\n+      if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n+        // application\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Loading application from node: \" + childNodeName);\n+        }\n+        ApplicationStateDataPBImpl appState \u003d\n+            new ApplicationStateDataPBImpl(\n+                ApplicationStateDataProto.parseFrom(childData));\n+        ApplicationId appId \u003d\n+            appState.getApplicationSubmissionContext().getApplicationId();\n+        rmState.appState.put(appId, appState);\n+      } else if (childNodeName.startsWith(\n+          ApplicationAttemptId.appAttemptIdStrPrefix)) {\n+        // attempt\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Loading application attempt from node: \"\n+              + childNodeName);\n+        }\n+        ApplicationAttemptStateDataPBImpl attemptState \u003d\n+            new ApplicationAttemptStateDataPBImpl(\n+                ApplicationAttemptStateDataProto.parseFrom(childData));\n+        attempts.add(attemptState);\n+      } else {\n+        LOG.info(\"Unknown child node with name: \" + childNodeName);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void processChildNode(String appDirName, String childNodeName,\n        byte[] childData)\n        throws com.google.protobuf.InvalidProtocolBufferException {\n      if (childNodeName.startsWith(ApplicationId.appIdStrPrefix)) {\n        // application\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loading application from node: \" + childNodeName);\n        }\n        ApplicationStateDataPBImpl appState \u003d\n            new ApplicationStateDataPBImpl(\n                ApplicationStateDataProto.parseFrom(childData));\n        ApplicationId appId \u003d\n            appState.getApplicationSubmissionContext().getApplicationId();\n        rmState.appState.put(appId, appState);\n      } else if (childNodeName.startsWith(\n          ApplicationAttemptId.appAttemptIdStrPrefix)) {\n        // attempt\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Loading application attempt from node: \"\n              + childNodeName);\n        }\n        ApplicationAttemptStateDataPBImpl attemptState \u003d\n            new ApplicationAttemptStateDataPBImpl(\n                ApplicationAttemptStateDataProto.parseFrom(childData));\n        attempts.add(attemptState);\n      } else {\n        LOG.info(\"Unknown child node with name: \" + childNodeName);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/FileSystemRMStateStore.java"
    }
  }
}