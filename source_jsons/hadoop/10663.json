{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractFuture.java",
  "functionName": "addListener",
  "functionId": "addListener___listener-Runnable__executor-Executor",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/checker/AbstractFuture.java",
  "functionStartLine": 681,
  "functionEndLine": 698,
  "numCommitsSeen": 4,
  "timeTaken": 773,
  "changeHistory": [
    "d69a82c89c1e857a2a86ff614ae11fb5df993614"
  ],
  "changeHistoryShort": {
    "d69a82c89c1e857a2a86ff614ae11fb5df993614": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d69a82c89c1e857a2a86ff614ae11fb5df993614": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11511. Support Timeout when checking single disk. Contributed by Hanisha Koneru.\n",
      "commitDate": "15/03/17 6:01 PM",
      "commitName": "d69a82c89c1e857a2a86ff614ae11fb5df993614",
      "commitAuthor": "Hanisha Koneru",
      "diff": "@@ -0,0 +1,18 @@\n+  public void addListener(Runnable listener, Executor executor) {\n+    checkNotNull(listener, \"Runnable was null.\");\n+    checkNotNull(executor, \"Executor was null.\");\n+    Listener oldHead \u003d listeners;\n+    if (oldHead !\u003d Listener.TOMBSTONE) {\n+      Listener newNode \u003d new Listener(listener, executor);\n+      do {\n+        newNode.next \u003d oldHead;\n+        if (ATOMIC_HELPER.casListeners(this, oldHead, newNode)) {\n+          return;\n+        }\n+        oldHead \u003d listeners; // re-read\n+      } while (oldHead !\u003d Listener.TOMBSTONE);\n+    }\n+    // If we get here then the Listener TOMBSTONE was set, which means the\n+    // future is done, call the listener.\n+    executeListener(listener, executor);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addListener(Runnable listener, Executor executor) {\n    checkNotNull(listener, \"Runnable was null.\");\n    checkNotNull(executor, \"Executor was null.\");\n    Listener oldHead \u003d listeners;\n    if (oldHead !\u003d Listener.TOMBSTONE) {\n      Listener newNode \u003d new Listener(listener, executor);\n      do {\n        newNode.next \u003d oldHead;\n        if (ATOMIC_HELPER.casListeners(this, oldHead, newNode)) {\n          return;\n        }\n        oldHead \u003d listeners; // re-read\n      } while (oldHead !\u003d Listener.TOMBSTONE);\n    }\n    // If we get here then the Listener TOMBSTONE was set, which means the\n    // future is done, call the listener.\n    executeListener(listener, executor);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/checker/AbstractFuture.java"
    }
  }
}