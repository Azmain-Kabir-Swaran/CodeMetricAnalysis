{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AuxServices.java",
  "functionName": "handle",
  "functionId": "handle___event-AuxServicesEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
  "functionStartLine": 849,
  "functionEndLine": 907,
  "numCommitsSeen": 35,
  "timeTaken": 8262,
  "changeHistory": [
    "b664569586db39647f15340ce82ccc0f0869897e",
    "1ea36299a47af302379ae0750b571ec021eb54ad",
    "8ebf37f3691dee523f7d800bc82c7423c3e262e9",
    "0f91d8485a6cd96153ad35e9babab248b20f53dc",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1c358b07969ecc93473ca9aea27be65e488ef602",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "b664569586db39647f15340ce82ccc0f0869897e": "Ybodychange",
    "1ea36299a47af302379ae0750b571ec021eb54ad": "Ybodychange",
    "8ebf37f3691dee523f7d800bc82c7423c3e262e9": "Ybodychange",
    "0f91d8485a6cd96153ad35e9babab248b20f53dc": "Ybodychange",
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1c358b07969ecc93473ca9aea27be65e488ef602": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b664569586db39647f15340ce82ccc0f0869897e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7006. [ATSv2 Security] Changes for authentication for CollectorNodemanagerProtocol. Contributed by Varun Saxena\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "b664569586db39647f15340ce82ccc0f0869897e",
      "commitAuthor": "Jian He",
      "commitDateOld": "22/08/17 1:14 AM",
      "commitNameOld": "d5ff57a08fac983f8b5d201064ce07945f0f216e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 7.91,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,58 +1,59 @@\n   public void handle(AuxServicesEvent event) {\n     LOG.info(\"Got event \" + event.getType() + \" for appId \"\n         + event.getApplicationID());\n     switch (event.getType()) {\n       case APPLICATION_INIT:\n         LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n         AuxiliaryService service \u003d null;\n         try {\n           service \u003d serviceMap.get(event.getServiceID());\n           service\n               .initializeApplication(new ApplicationInitializationContext(event\n                   .getUser(), event.getApplicationID(), event.getServiceData()));\n         } catch (Throwable th) {\n           logWarningWhenAuxServiceThrowExceptions(service,\n               AuxServicesEventType.APPLICATION_INIT, th);\n         }\n         break;\n       case APPLICATION_STOP:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.stopApplication(new ApplicationTerminationContext(event\n                 .getApplicationID()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.APPLICATION_STOP, th);\n           }\n         }\n         break;\n       case CONTAINER_INIT:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.initializeContainer(new ContainerInitializationContext(\n-                event.getUser(), event.getContainer().getContainerId(),\n+                event.getContainer().getUser(),\n+                event.getContainer().getContainerId(),\n                 event.getContainer().getResource(), event.getContainer()\n                 .getContainerTokenIdentifier().getContainerType()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.CONTAINER_INIT, th);\n           }\n         }\n         break;\n       case CONTAINER_STOP:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.stopContainer(new ContainerTerminationContext(\n                 event.getUser(), event.getContainer().getContainerId(),\n                 event.getContainer().getResource(), event.getContainer()\n                 .getContainerTokenIdentifier().getContainerType()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.CONTAINER_STOP, th);\n           }\n         }\n         break;\n       default:\n         throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n      case APPLICATION_INIT:\n        LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n        AuxiliaryService service \u003d null;\n        try {\n          service \u003d serviceMap.get(event.getServiceID());\n          service\n              .initializeApplication(new ApplicationInitializationContext(event\n                  .getUser(), event.getApplicationID(), event.getServiceData()));\n        } catch (Throwable th) {\n          logWarningWhenAuxServiceThrowExceptions(service,\n              AuxServicesEventType.APPLICATION_INIT, th);\n        }\n        break;\n      case APPLICATION_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopApplication(new ApplicationTerminationContext(event\n                .getApplicationID()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.APPLICATION_STOP, th);\n          }\n        }\n        break;\n      case CONTAINER_INIT:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.initializeContainer(new ContainerInitializationContext(\n                event.getContainer().getUser(),\n                event.getContainer().getContainerId(),\n                event.getContainer().getResource(), event.getContainer()\n                .getContainerTokenIdentifier().getContainerType()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_INIT, th);\n          }\n        }\n        break;\n      case CONTAINER_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopContainer(new ContainerTerminationContext(\n                event.getUser(), event.getContainer().getContainerId(),\n                event.getContainer().getResource(), event.getContainer()\n                .getContainerTokenIdentifier().getContainerType()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_STOP, th);\n          }\n        }\n        break;\n      default:\n        throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "1ea36299a47af302379ae0750b571ec021eb54ad": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3116. RM notifies NM whether a container is an AM container or normal task container. Contributed by Giovanni Matteo Fumarola.\n",
      "commitDate": "10/07/15 6:58 PM",
      "commitName": "1ea36299a47af302379ae0750b571ec021eb54ad",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "16/02/15 6:55 AM",
      "commitNameOld": "447bd7b5a61a5788dc2a5d29cedfc19f0e99c0f5",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 144.46,
      "commitsBetweenForRepo": 1247,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,56 +1,58 @@\n   public void handle(AuxServicesEvent event) {\n     LOG.info(\"Got event \" + event.getType() + \" for appId \"\n         + event.getApplicationID());\n     switch (event.getType()) {\n       case APPLICATION_INIT:\n         LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n         AuxiliaryService service \u003d null;\n         try {\n           service \u003d serviceMap.get(event.getServiceID());\n           service\n               .initializeApplication(new ApplicationInitializationContext(event\n                   .getUser(), event.getApplicationID(), event.getServiceData()));\n         } catch (Throwable th) {\n           logWarningWhenAuxServiceThrowExceptions(service,\n               AuxServicesEventType.APPLICATION_INIT, th);\n         }\n         break;\n       case APPLICATION_STOP:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.stopApplication(new ApplicationTerminationContext(event\n                 .getApplicationID()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.APPLICATION_STOP, th);\n           }\n         }\n         break;\n       case CONTAINER_INIT:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.initializeContainer(new ContainerInitializationContext(\n                 event.getUser(), event.getContainer().getContainerId(),\n-                event.getContainer().getResource()));\n+                event.getContainer().getResource(), event.getContainer()\n+                .getContainerTokenIdentifier().getContainerType()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.CONTAINER_INIT, th);\n           }\n         }\n         break;\n       case CONTAINER_STOP:\n         for (AuxiliaryService serv : serviceMap.values()) {\n           try {\n             serv.stopContainer(new ContainerTerminationContext(\n                 event.getUser(), event.getContainer().getContainerId(),\n-                event.getContainer().getResource()));\n+                event.getContainer().getResource(), event.getContainer()\n+                .getContainerTokenIdentifier().getContainerType()));\n           } catch (Throwable th) {\n             logWarningWhenAuxServiceThrowExceptions(serv,\n                 AuxServicesEventType.CONTAINER_STOP, th);\n           }\n         }\n         break;\n       default:\n         throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n      case APPLICATION_INIT:\n        LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n        AuxiliaryService service \u003d null;\n        try {\n          service \u003d serviceMap.get(event.getServiceID());\n          service\n              .initializeApplication(new ApplicationInitializationContext(event\n                  .getUser(), event.getApplicationID(), event.getServiceData()));\n        } catch (Throwable th) {\n          logWarningWhenAuxServiceThrowExceptions(service,\n              AuxServicesEventType.APPLICATION_INIT, th);\n        }\n        break;\n      case APPLICATION_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopApplication(new ApplicationTerminationContext(event\n                .getApplicationID()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.APPLICATION_STOP, th);\n          }\n        }\n        break;\n      case CONTAINER_INIT:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.initializeContainer(new ContainerInitializationContext(\n                event.getUser(), event.getContainer().getContainerId(),\n                event.getContainer().getResource(), event.getContainer()\n                .getContainerTokenIdentifier().getContainerType()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_INIT, th);\n          }\n        }\n        break;\n      case CONTAINER_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopContainer(new ContainerTerminationContext(\n                event.getUser(), event.getContainer().getContainerId(),\n                event.getContainer().getResource(), event.getContainer()\n                .getContainerTokenIdentifier().getContainerType()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_STOP, th);\n          }\n        }\n        break;\n      default:\n        throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "8ebf37f3691dee523f7d800bc82c7423c3e262e9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1256. NM silently ignores non-existent service in StartContainerRequest (Xuan Gong via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1529039 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/10/13 5:23 PM",
      "commitName": "8ebf37f3691dee523f7d800bc82c7423c3e262e9",
      "commitAuthor": "Bikas Saha",
      "commitDateOld": "24/09/13 5:35 PM",
      "commitNameOld": "10a4289ebfe8a079562f2006a0e28acdbd8aa0c5",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 8.99,
      "commitsBetweenForRepo": 77,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,56 @@\n   public void handle(AuxServicesEvent event) {\n     LOG.info(\"Got event \" + event.getType() + \" for appId \"\n         + event.getApplicationID());\n     switch (event.getType()) {\n-    case APPLICATION_INIT:\n-      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n-      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n-      if (null \u003d\u003d service) {\n-        LOG.info(\"service is null\");\n-        // TODO kill all containers waiting on Application\n-        return;\n-      }\n-      service.initializeApplication(new ApplicationInitializationContext(event\n-        .getUser(), event.getApplicationID(), event.getServiceData()));\n-      break;\n-    case APPLICATION_STOP:\n-      for (AuxiliaryService serv : serviceMap.values()) {\n-        serv.stopApplication(new ApplicationTerminationContext(event\n-          .getApplicationID()));\n-      }\n-      break;\n-    case CONTAINER_INIT:\n-      for (AuxiliaryService serv : serviceMap.values()) {\n-        serv.initializeContainer(new ContainerInitializationContext(\n-            event.getUser(), event.getContainer().getContainerId(),\n-            event.getContainer().getResource()));\n-      }\n-      break;\n-    case CONTAINER_STOP:\n-      for (AuxiliaryService serv : serviceMap.values()) {\n-        serv.stopContainer(new ContainerTerminationContext(\n-            event.getUser(), event.getContainer().getContainerId(),\n-            event.getContainer().getResource()));\n-      }\n-      break;\n+      case APPLICATION_INIT:\n+        LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n+        AuxiliaryService service \u003d null;\n+        try {\n+          service \u003d serviceMap.get(event.getServiceID());\n+          service\n+              .initializeApplication(new ApplicationInitializationContext(event\n+                  .getUser(), event.getApplicationID(), event.getServiceData()));\n+        } catch (Throwable th) {\n+          logWarningWhenAuxServiceThrowExceptions(service,\n+              AuxServicesEventType.APPLICATION_INIT, th);\n+        }\n+        break;\n+      case APPLICATION_STOP:\n+        for (AuxiliaryService serv : serviceMap.values()) {\n+          try {\n+            serv.stopApplication(new ApplicationTerminationContext(event\n+                .getApplicationID()));\n+          } catch (Throwable th) {\n+            logWarningWhenAuxServiceThrowExceptions(serv,\n+                AuxServicesEventType.APPLICATION_STOP, th);\n+          }\n+        }\n+        break;\n+      case CONTAINER_INIT:\n+        for (AuxiliaryService serv : serviceMap.values()) {\n+          try {\n+            serv.initializeContainer(new ContainerInitializationContext(\n+                event.getUser(), event.getContainer().getContainerId(),\n+                event.getContainer().getResource()));\n+          } catch (Throwable th) {\n+            logWarningWhenAuxServiceThrowExceptions(serv,\n+                AuxServicesEventType.CONTAINER_INIT, th);\n+          }\n+        }\n+        break;\n+      case CONTAINER_STOP:\n+        for (AuxiliaryService serv : serviceMap.values()) {\n+          try {\n+            serv.stopContainer(new ContainerTerminationContext(\n+                event.getUser(), event.getContainer().getContainerId(),\n+                event.getContainer().getResource()));\n+          } catch (Throwable th) {\n+            logWarningWhenAuxServiceThrowExceptions(serv,\n+                AuxServicesEventType.CONTAINER_STOP, th);\n+          }\n+        }\n+        break;\n       default:\n-      throw new RuntimeException(\"Unknown type: \" + event.getType());\n+        throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n      case APPLICATION_INIT:\n        LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n        AuxiliaryService service \u003d null;\n        try {\n          service \u003d serviceMap.get(event.getServiceID());\n          service\n              .initializeApplication(new ApplicationInitializationContext(event\n                  .getUser(), event.getApplicationID(), event.getServiceData()));\n        } catch (Throwable th) {\n          logWarningWhenAuxServiceThrowExceptions(service,\n              AuxServicesEventType.APPLICATION_INIT, th);\n        }\n        break;\n      case APPLICATION_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopApplication(new ApplicationTerminationContext(event\n                .getApplicationID()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.APPLICATION_STOP, th);\n          }\n        }\n        break;\n      case CONTAINER_INIT:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.initializeContainer(new ContainerInitializationContext(\n                event.getUser(), event.getContainer().getContainerId(),\n                event.getContainer().getResource()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_INIT, th);\n          }\n        }\n        break;\n      case CONTAINER_STOP:\n        for (AuxiliaryService serv : serviceMap.values()) {\n          try {\n            serv.stopContainer(new ContainerTerminationContext(\n                event.getUser(), event.getContainer().getContainerId(),\n                event.getContainer().getResource()));\n          } catch (Throwable th) {\n            logWarningWhenAuxServiceThrowExceptions(serv,\n                AuxServicesEventType.CONTAINER_STOP, th);\n          }\n        }\n        break;\n      default:\n        throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "0f91d8485a6cd96153ad35e9babab248b20f53dc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-910. Augmented auxiliary services to listen for container starts and completions in addition to application events. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1521298 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/09/13 2:48 PM",
      "commitName": "0f91d8485a6cd96153ad35e9babab248b20f53dc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/07/13 10:02 AM",
      "commitNameOld": "3ee5949912a4fcd51e19ba758b6eff276543a74a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 61.2,
      "commitsBetweenForRepo": 364,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,39 @@\n   public void handle(AuxServicesEvent event) {\n     LOG.info(\"Got event \" + event.getType() + \" for appId \"\n         + event.getApplicationID());\n     switch (event.getType()) {\n     case APPLICATION_INIT:\n       LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n       AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n       if (null \u003d\u003d service) {\n         LOG.info(\"service is null\");\n         // TODO kill all containers waiting on Application\n         return;\n       }\n       service.initializeApplication(new ApplicationInitializationContext(event\n         .getUser(), event.getApplicationID(), event.getServiceData()));\n       break;\n     case APPLICATION_STOP:\n       for (AuxiliaryService serv : serviceMap.values()) {\n         serv.stopApplication(new ApplicationTerminationContext(event\n           .getApplicationID()));\n       }\n       break;\n-    default:\n+    case CONTAINER_INIT:\n+      for (AuxiliaryService serv : serviceMap.values()) {\n+        serv.initializeContainer(new ContainerInitializationContext(\n+            event.getUser(), event.getContainer().getContainerId(),\n+            event.getContainer().getResource()));\n+      }\n+      break;\n+    case CONTAINER_STOP:\n+      for (AuxiliaryService serv : serviceMap.values()) {\n+        serv.stopContainer(new ContainerTerminationContext(\n+            event.getUser(), event.getContainer().getContainerId(),\n+            event.getContainer().getResource()));\n+      }\n+      break;\n+      default:\n       throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n      if (null \u003d\u003d service) {\n        LOG.info(\"service is null\");\n        // TODO kill all containers waiting on Application\n        return;\n      }\n      service.initializeApplication(new ApplicationInitializationContext(event\n        .getUser(), event.getApplicationID(), event.getServiceData()));\n      break;\n    case APPLICATION_STOP:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.stopApplication(new ApplicationTerminationContext(event\n          .getApplicationID()));\n      }\n      break;\n    case CONTAINER_INIT:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.initializeContainer(new ContainerInitializationContext(\n            event.getUser(), event.getContainer().getContainerId(),\n            event.getContainer().getResource()));\n      }\n      break;\n    case CONTAINER_STOP:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.stopContainer(new ContainerTerminationContext(\n            event.getUser(), event.getContainer().getContainerId(),\n            event.getContainer().getResource()));\n      }\n      break;\n      default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "f4d80e91ae314d316100baa7770b9d73ea853d9c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-841. Move Auxiliary service to yarn-api, annotate and document it. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494031 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 11:20 PM",
      "commitName": "f4d80e91ae314d316100baa7770b9d73ea853d9c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "16/06/13 11:39 PM",
      "commitNameOld": "b9efe6bd4a1277b4067ecde715a7713a85968886",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.99,
      "commitsBetweenForRepo": 16,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public void handle(AuxServicesEvent event) {\n     LOG.info(\"Got event \" + event.getType() + \" for appId \"\n         + event.getApplicationID());\n     switch (event.getType()) {\n     case APPLICATION_INIT:\n       LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n       AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n       if (null \u003d\u003d service) {\n         LOG.info(\"service is null\");\n         // TODO kill all containers waiting on Application\n         return;\n       }\n-      service.initApp(event.getUser(), event.getApplicationID(),\n-          event.getServiceData());\n+      service.initializeApplication(new ApplicationInitializationContext(event\n+        .getUser(), event.getApplicationID(), event.getServiceData()));\n       break;\n     case APPLICATION_STOP:\n       for (AuxiliaryService serv : serviceMap.values()) {\n-        serv.stopApp(event.getApplicationID());\n+        serv.stopApplication(new ApplicationTerminationContext(event\n+          .getApplicationID()));\n       }\n       break;\n     default:\n       throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n      if (null \u003d\u003d service) {\n        LOG.info(\"service is null\");\n        // TODO kill all containers waiting on Application\n        return;\n      }\n      service.initializeApplication(new ApplicationInitializationContext(event\n        .getUser(), event.getApplicationID(), event.getServiceData()));\n      break;\n    case APPLICATION_STOP:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.stopApplication(new ApplicationTerminationContext(event\n          .getApplicationID()));\n      }\n      break;\n    default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n      if (null \u003d\u003d service) {\n        LOG.info(\"service is null\");\n        // TODO kill all containers waiting on Application\n        return;\n      }\n      service.initApp(event.getUser(), event.getApplicationID(),\n          event.getServiceData());\n      break;\n    case APPLICATION_STOP:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.stopApp(event.getApplicationID());\n      }\n      break;\n    default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
      }
    },
    "1c358b07969ecc93473ca9aea27be65e488ef602": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2668. Fixed AuxServices to send a signal on application-finish to all the services. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1181803 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/11 7:26 AM",
      "commitName": "1c358b07969ecc93473ca9aea27be65e488ef602",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/09/11 6:44 PM",
      "commitNameOld": "fafe8cd28e726566509c679e19d7da622f29f90d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 32.53,
      "commitsBetweenForRepo": 227,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public void handle(AuxServicesEvent event) {\n-    LOG.info(\"Got event \" + event.getType() + \" for service \"\n-        + event.getServiceID());\n-    AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n-    if (null \u003d\u003d service) {\n-      // TODO kill all containers waiting on Application\n-      return;\n-    }\n+    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n+        + event.getApplicationID());\n     switch (event.getType()) {\n     case APPLICATION_INIT:\n+      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n+      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n+      if (null \u003d\u003d service) {\n+        LOG.info(\"service is null\");\n+        // TODO kill all containers waiting on Application\n+        return;\n+      }\n       service.initApp(event.getUser(), event.getApplicationID(),\n           event.getServiceData());\n       break;\n     case APPLICATION_STOP:\n-      service.stopApp(event.getApplicationID());\n+      for (AuxiliaryService serv : serviceMap.values()) {\n+        serv.stopApp(event.getApplicationID());\n+      }\n       break;\n     default:\n       throw new RuntimeException(\"Unknown type: \" + event.getType());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for appId \"\n        + event.getApplicationID());\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      LOG.info(\"Got APPLICATION_INIT for service \" + event.getServiceID());\n      AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n      if (null \u003d\u003d service) {\n        LOG.info(\"service is null\");\n        // TODO kill all containers waiting on Application\n        return;\n      }\n      service.initApp(event.getUser(), event.getApplicationID(),\n          event.getServiceData());\n      break;\n    case APPLICATION_STOP:\n      for (AuxiliaryService serv : serviceMap.values()) {\n        serv.stopApp(event.getApplicationID());\n      }\n      break;\n    default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for service \"\n        + event.getServiceID());\n    AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n    if (null \u003d\u003d service) {\n      // TODO kill all containers waiting on Application\n      return;\n    }\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      service.initApp(event.getUser(), event.getApplicationID(),\n          event.getServiceData());\n      break;\n    case APPLICATION_STOP:\n      service.stopApp(event.getApplicationID());\n      break;\n    default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,20 @@\n+  public void handle(AuxServicesEvent event) {\n+    LOG.info(\"Got event \" + event.getType() + \" for service \"\n+        + event.getServiceID());\n+    AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n+    if (null \u003d\u003d service) {\n+      // TODO kill all containers waiting on Application\n+      return;\n+    }\n+    switch (event.getType()) {\n+    case APPLICATION_INIT:\n+      service.initApp(event.getUser(), event.getApplicationID(),\n+          event.getServiceData());\n+      break;\n+    case APPLICATION_STOP:\n+      service.stopApp(event.getApplicationID());\n+      break;\n+    default:\n+      throw new RuntimeException(\"Unknown type: \" + event.getType());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void handle(AuxServicesEvent event) {\n    LOG.info(\"Got event \" + event.getType() + \" for service \"\n        + event.getServiceID());\n    AuxiliaryService service \u003d serviceMap.get(event.getServiceID());\n    if (null \u003d\u003d service) {\n      // TODO kill all containers waiting on Application\n      return;\n    }\n    switch (event.getType()) {\n    case APPLICATION_INIT:\n      service.initApp(event.getUser(), event.getApplicationID(),\n          event.getServiceData());\n      break;\n    case APPLICATION_STOP:\n      service.stopApp(event.getApplicationID());\n      break;\n    default:\n      throw new RuntimeException(\"Unknown type: \" + event.getType());\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/AuxServices.java"
    }
  }
}