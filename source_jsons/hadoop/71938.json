{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSAuthenticationFilter.java",
  "functionName": "getKMSConfiguration",
  "functionId": "getKMSConfiguration___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java",
  "functionStartLine": 64,
  "functionEndLine": 85,
  "numCommitsSeen": 13,
  "timeTaken": 990,
  "changeHistory": [
    "cd2158456db8c89eeea64b72654a736ea8607e23"
  ],
  "changeHistoryShort": {
    "cd2158456db8c89eeea64b72654a736ea8607e23": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd2158456db8c89eeea64b72654a736ea8607e23": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15418. Hadoop KMSAuthenticationFilter needs to use getPropsByPrefix instead of iterator to avoid ConcurrentModificationException. Contributed by lqjack and Suma Shivaprasad\n",
      "commitDate": "18/10/18 5:28 PM",
      "commitName": "cd2158456db8c89eeea64b72654a736ea8607e23",
      "commitAuthor": "Wei-Chiu Chuang",
      "diff": "@@ -0,0 +1,22 @@\n+  Properties getKMSConfiguration(Configuration conf) {\n+    Properties props \u003d new Properties();\n+\n+    Map\u003cString, String\u003e propsWithPrefixMap \u003d conf.getPropsWithPrefix(\n+        CONFIG_PREFIX);\n+\n+    for (Map.Entry\u003cString, String\u003e entry : propsWithPrefixMap.entrySet()) {\n+      props.setProperty(entry.getKey(), entry.getValue());\n+    }\n+\n+    String authType \u003d props.getProperty(AUTH_TYPE);\n+    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          PseudoDelegationTokenAuthenticationHandler.class.getName());\n+    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n+      props.setProperty(AUTH_TYPE,\n+          KerberosDelegationTokenAuthenticationHandler.class.getName());\n+    }\n+    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n+        KMSDelegationToken.TOKEN_KIND_STR);\n+    return props;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Properties getKMSConfiguration(Configuration conf) {\n    Properties props \u003d new Properties();\n\n    Map\u003cString, String\u003e propsWithPrefixMap \u003d conf.getPropsWithPrefix(\n        CONFIG_PREFIX);\n\n    for (Map.Entry\u003cString, String\u003e entry : propsWithPrefixMap.entrySet()) {\n      props.setProperty(entry.getKey(), entry.getValue());\n    }\n\n    String authType \u003d props.getProperty(AUTH_TYPE);\n    if (authType.equals(PseudoAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          PseudoDelegationTokenAuthenticationHandler.class.getName());\n    } else if (authType.equals(KerberosAuthenticationHandler.TYPE)) {\n      props.setProperty(AUTH_TYPE,\n          KerberosDelegationTokenAuthenticationHandler.class.getName());\n    }\n    props.setProperty(DelegationTokenAuthenticationHandler.TOKEN_KIND,\n        KMSDelegationToken.TOKEN_KIND_STR);\n    return props;\n  }",
      "path": "hadoop-common-project/hadoop-kms/src/main/java/org/apache/hadoop/crypto/key/kms/server/KMSAuthenticationFilter.java"
    }
  }
}