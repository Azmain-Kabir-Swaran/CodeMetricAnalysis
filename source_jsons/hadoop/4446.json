{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DatanodeProtocolServerSideTranslatorPB.java",
  "functionName": "blockReceivedAndDeleted",
  "functionId": "blockReceivedAndDeleted___controller-RpcController__request-BlockReceivedAndDeletedRequestProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
  "functionStartLine": 218,
  "functionEndLine": 247,
  "numCommitsSeen": 42,
  "timeTaken": 3416,
  "changeHistory": [
    "b71907b2ae3d8f05b4332e06d52ec2096681ea6b",
    "06022b8fdc40e50eaac63758246353058e8cfa6d",
    "809e8bf5b7fdfdb18f719614d1e54ca4fb47fa2b",
    "eb9f1b670726e1af03f2e940ce2696b880964972",
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
    "f88574acdefae2816236bf6180916be96c6a6874",
    "38a19bc293dec6221ae96e304fc6ab660d94e706"
  ],
  "changeHistoryShort": {
    "b71907b2ae3d8f05b4332e06d52ec2096681ea6b": "Ybodychange",
    "06022b8fdc40e50eaac63758246353058e8cfa6d": "Ybodychange",
    "809e8bf5b7fdfdb18f719614d1e54ca4fb47fa2b": "Ybodychange",
    "eb9f1b670726e1af03f2e940ce2696b880964972": "Ybodychange",
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f": "Ybodychange",
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5": "Ybodychange",
    "f88574acdefae2816236bf6180916be96c6a6874": "Ybodychange",
    "38a19bc293dec6221ae96e304fc6ab660d94e706": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b71907b2ae3d8f05b4332e06d52ec2096681ea6b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11097. Fix warnings for deprecated StorageReceivedDeletedBlocks constructor. Contributed by Yiqun Lin.\n",
      "commitDate": "03/11/16 10:27 AM",
      "commitName": "b71907b2ae3d8f05b4332e06d52ec2096681ea6b",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "20/04/16 1:39 PM",
      "commitNameOld": "63ac2db59af2b50e74dc892cae1dbc4d2e061423",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 196.87,
      "commitsBetweenForRepo": 1494,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n     List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n     StorageReceivedDeletedBlocks[] info \u003d \n         new StorageReceivedDeletedBlocks[sBlocks.size()];\n     for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n       StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n       List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n       ReceivedDeletedBlockInfo[] rdBlocks \u003d \n           new ReceivedDeletedBlockInfo[list.size()];\n       for (int j \u003d 0; j \u003c list.size(); j++) {\n         rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n       }\n       if (sBlock.hasStorage()) {\n         info[i] \u003d new StorageReceivedDeletedBlocks(\n             PBHelperClient.convert(sBlock.getStorage()), rdBlocks);\n       } else {\n-        info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n+        info[i] \u003d new StorageReceivedDeletedBlocks(\n+            new DatanodeStorage(sBlock.getStorageUuid()), rdBlocks);\n       }\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      if (sBlock.hasStorage()) {\n        info[i] \u003d new StorageReceivedDeletedBlocks(\n            PBHelperClient.convert(sBlock.getStorage()), rdBlocks);\n      } else {\n        info[i] \u003d new StorageReceivedDeletedBlocks(\n            new DatanodeStorage(sBlock.getStorageUuid()), rdBlocks);\n      }\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "06022b8fdc40e50eaac63758246353058e8cfa6d": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9111. Move hdfs-client protobuf convert methods from PBHelper to PBHelperClient. Contributed by Mingliang Liu.\n",
      "commitDate": "21/09/15 6:53 PM",
      "commitName": "06022b8fdc40e50eaac63758246353058e8cfa6d",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "28/08/15 2:38 PM",
      "commitNameOld": "e2c9b288b223b9fd82dc12018936e13128413492",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 24.18,
      "commitsBetweenForRepo": 143,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n     List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n     StorageReceivedDeletedBlocks[] info \u003d \n         new StorageReceivedDeletedBlocks[sBlocks.size()];\n     for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n       StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n       List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n       ReceivedDeletedBlockInfo[] rdBlocks \u003d \n           new ReceivedDeletedBlockInfo[list.size()];\n       for (int j \u003d 0; j \u003c list.size(); j++) {\n         rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n       }\n       if (sBlock.hasStorage()) {\n         info[i] \u003d new StorageReceivedDeletedBlocks(\n-            PBHelper.convert(sBlock.getStorage()), rdBlocks);\n+            PBHelperClient.convert(sBlock.getStorage()), rdBlocks);\n       } else {\n         info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n       }\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      if (sBlock.hasStorage()) {\n        info[i] \u003d new StorageReceivedDeletedBlocks(\n            PBHelperClient.convert(sBlock.getStorage()), rdBlocks);\n      } else {\n        info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n      }\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "809e8bf5b7fdfdb18f719614d1e54ca4fb47fa2b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6094. The same block can be counted twice towards safe mode threshold. (Arpit Agarwal)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1578478 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/03/14 10:37 AM",
      "commitName": "809e8bf5b7fdfdb18f719614d1e54ca4fb47fa2b",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "05/02/14 4:40 PM",
      "commitNameOld": "b2ce764093ba3007df67022b3bcbc43d3fe2b173",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 39.71,
      "commitsBetweenForRepo": 362,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,29 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n     List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n     StorageReceivedDeletedBlocks[] info \u003d \n         new StorageReceivedDeletedBlocks[sBlocks.size()];\n     for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n       StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n       List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n       ReceivedDeletedBlockInfo[] rdBlocks \u003d \n           new ReceivedDeletedBlockInfo[list.size()];\n       for (int j \u003d 0; j \u003c list.size(); j++) {\n         rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n       }\n-      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n+      if (sBlock.hasStorage()) {\n+        info[i] \u003d new StorageReceivedDeletedBlocks(\n+            PBHelper.convert(sBlock.getStorage()), rdBlocks);\n+      } else {\n+        info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n+      }\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      if (sBlock.hasStorage()) {\n        info[i] \u003d new StorageReceivedDeletedBlocks(\n            PBHelper.convert(sBlock.getStorage()), rdBlocks);\n      } else {\n        info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n      }\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "eb9f1b670726e1af03f2e940ce2696b880964972": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5232. Protocol changes to transmit StorageUuid.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1525153 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/09/13 3:06 PM",
      "commitName": "eb9f1b670726e1af03f2e940ce2696b880964972",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/01/13 10:21 AM",
      "commitNameOld": "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 246.16,
      "commitsBetweenForRepo": 1429,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n     List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n     StorageReceivedDeletedBlocks[] info \u003d \n         new StorageReceivedDeletedBlocks[sBlocks.size()];\n     for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n       StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n       List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n       ReceivedDeletedBlockInfo[] rdBlocks \u003d \n           new ReceivedDeletedBlockInfo[list.size()];\n       for (int j \u003d 0; j \u003c list.size(); j++) {\n         rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n       }\n-      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);\n+      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageUuid(), rdBlocks);\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "8f70a25b1c5df498c441a9b3475a8ada5a92111f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-4393. Make empty request and responses in protocol translators can be static final members. Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1434844 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/01/13 10:21 AM",
      "commitName": "8f70a25b1c5df498c441a9b3475a8ada5a92111f",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "22/08/12 9:59 AM",
      "commitNameOld": "380870d54453c1113d46d0f070f4e19b6cea7b8c",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 148.06,
      "commitsBetweenForRepo": 786,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n     List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n     StorageReceivedDeletedBlocks[] info \u003d \n         new StorageReceivedDeletedBlocks[sBlocks.size()];\n     for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n       StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n       List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n       ReceivedDeletedBlockInfo[] rdBlocks \u003d \n           new ReceivedDeletedBlockInfo[list.size()];\n       for (int j \u003d 0; j \u003c list.size(); j++) {\n         rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n       }\n       info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n-    return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n+    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return VOID_BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "28eadb7cd71e99d563fb5c41aec563ab11e293e5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2899. Service protocol changes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1241519 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/02/12 8:59 AM",
      "commitName": "28eadb7cd71e99d563fb5c41aec563ab11e293e5",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "04/02/12 5:39 PM",
      "commitNameOld": "f88574acdefae2816236bf6180916be96c6a6874",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 2.64,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n-    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocks(0)\n-        .getBlocksList();\n-    ReceivedDeletedBlockInfo[] info \u003d \n-        new ReceivedDeletedBlockInfo[rdbip.size()];\n-    for (int i \u003d 0; i \u003c rdbip.size(); i++) {\n-      info[i] \u003d PBHelper.convert(rdbip.get(i));\n+    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n+    StorageReceivedDeletedBlocks[] info \u003d \n+        new StorageReceivedDeletedBlocks[sBlocks.size()];\n+    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n+      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n+      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n+      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n+          new ReceivedDeletedBlockInfo[list.size()];\n+      for (int j \u003d 0; j \u003c list.size(); j++) {\n+        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n+      }\n+      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cStorageReceivedDeletedBlocksProto\u003e sBlocks \u003d request.getBlocksList();\n    StorageReceivedDeletedBlocks[] info \u003d \n        new StorageReceivedDeletedBlocks[sBlocks.size()];\n    for (int i \u003d 0; i \u003c sBlocks.size(); i++) {\n      StorageReceivedDeletedBlocksProto sBlock \u003d sBlocks.get(i);\n      List\u003cReceivedDeletedBlockInfoProto\u003e list \u003d sBlock.getBlocksList();\n      ReceivedDeletedBlockInfo[] rdBlocks \u003d \n          new ReceivedDeletedBlockInfo[list.size()];\n      for (int j \u003d 0; j \u003c list.size(); j++) {\n        rdBlocks[j] \u003d PBHelper.convert(list.get(j));\n      }\n      info[i] \u003d new StorageReceivedDeletedBlocks(sBlock.getStorageID(), rdBlocks);\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "f88574acdefae2816236bf6180916be96c6a6874": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2880. Protobuf chagnes in DatanodeProtocol to add multiple storages. Contributed by Suresh Srinivas.\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1240653 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/02/12 5:39 PM",
      "commitName": "f88574acdefae2816236bf6180916be96c6a6874",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "13/12/11 6:15 PM",
      "commitNameOld": "3cffe34177c72ea67194c3b0aaf0ddbf67ff3a0c",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 52.97,
      "commitsBetweenForRepo": 265,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,18 @@\n   public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n       RpcController controller, BlockReceivedAndDeletedRequestProto request)\n       throws ServiceException {\n-    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocksList();\n+    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocks(0)\n+        .getBlocksList();\n     ReceivedDeletedBlockInfo[] info \u003d \n         new ReceivedDeletedBlockInfo[rdbip.size()];\n     for (int i \u003d 0; i \u003c rdbip.size(); i++) {\n       info[i] \u003d PBHelper.convert(rdbip.get(i));\n     }\n     try {\n       impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n           request.getBlockPoolId(), info);\n     } catch (IOException e) {\n       throw new ServiceException(e);\n     }\n     return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocks(0)\n        .getBlocksList();\n    ReceivedDeletedBlockInfo[] info \u003d \n        new ReceivedDeletedBlockInfo[rdbip.size()];\n    for (int i \u003d 0; i \u003c rdbip.size(); i++) {\n      info[i] \u003d PBHelper.convert(rdbip.get(i));\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java",
      "extendedDetails": {}
    },
    "38a19bc293dec6221ae96e304fc6ab660d94e706": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2642. Protobuf translators for DatanodeProtocol.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212606 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/12/11 12:02 PM",
      "commitName": "38a19bc293dec6221ae96e304fc6ab660d94e706",
      "commitAuthor": "Jitendra Nath Pandey",
      "diff": "@@ -0,0 +1,17 @@\n+  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n+      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n+      throws ServiceException {\n+    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocksList();\n+    ReceivedDeletedBlockInfo[] info \u003d \n+        new ReceivedDeletedBlockInfo[rdbip.size()];\n+    for (int i \u003d 0; i \u003c rdbip.size(); i++) {\n+      info[i] \u003d PBHelper.convert(rdbip.get(i));\n+    }\n+    try {\n+      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n+          request.getBlockPoolId(), info);\n+    } catch (IOException e) {\n+      throw new ServiceException(e);\n+    }\n+    return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public BlockReceivedAndDeletedResponseProto blockReceivedAndDeleted(\n      RpcController controller, BlockReceivedAndDeletedRequestProto request)\n      throws ServiceException {\n    List\u003cReceivedDeletedBlockInfoProto\u003e rdbip \u003d request.getBlocksList();\n    ReceivedDeletedBlockInfo[] info \u003d \n        new ReceivedDeletedBlockInfo[rdbip.size()];\n    for (int i \u003d 0; i \u003c rdbip.size(); i++) {\n      info[i] \u003d PBHelper.convert(rdbip.get(i));\n    }\n    try {\n      impl.blockReceivedAndDeleted(PBHelper.convert(request.getRegistration()),\n          request.getBlockPoolId(), info);\n    } catch (IOException e) {\n      throw new ServiceException(e);\n    }\n    return BLOCK_RECEIVED_AND_DELETE_RESPONSE;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/protocolPB/DatanodeProtocolServerSideTranslatorPB.java"
    }
  }
}