{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AdminService.java",
  "functionName": "validateForInvalidNode",
  "functionId": "validateForInvalidNode___node-String__failOnUnknownNodes-boolean",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java",
  "functionStartLine": 1085,
  "functionEndLine": 1099,
  "numCommitsSeen": 78,
  "timeTaken": 1003,
  "changeHistory": [
    "901e85238da08129374d44af80716b07f0b912e6"
  ],
  "changeHistoryShort": {
    "901e85238da08129374d44af80716b07f0b912e6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "901e85238da08129374d44af80716b07f0b912e6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8033. CLI Integration with NodeAttributesManagerImpl. Contributed by Naganarasimha G R.\n",
      "commitDate": "12/09/18 3:31 AM",
      "commitName": "901e85238da08129374d44af80716b07f0b912e6",
      "commitAuthor": "bibinchundatt",
      "diff": "@@ -0,0 +1,15 @@\n+  private boolean validateForInvalidNode(String node,\n+      boolean failOnUnknownNodes) {\n+    if (!failOnUnknownNodes) {\n+      return true;\n+    }\n+    // both active and inactive nodes are recognized as known nodes\n+    boolean isKnown \u003d rm.getRMContext().getRMNodes().keySet().stream()\n+        .anyMatch(activeNode -\u003e activeNode.getHost().equals(node));\n+\n+    if (!isKnown) {\n+      isKnown \u003d rm.getRMContext().getInactiveRMNodes().keySet().stream()\n+          .anyMatch(inactiveNode -\u003e inactiveNode.getHost().equals(node));\n+    }\n+    return isKnown;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean validateForInvalidNode(String node,\n      boolean failOnUnknownNodes) {\n    if (!failOnUnknownNodes) {\n      return true;\n    }\n    // both active and inactive nodes are recognized as known nodes\n    boolean isKnown \u003d rm.getRMContext().getRMNodes().keySet().stream()\n        .anyMatch(activeNode -\u003e activeNode.getHost().equals(node));\n\n    if (!isKnown) {\n      isKnown \u003d rm.getRMContext().getInactiveRMNodes().keySet().stream()\n          .anyMatch(inactiveNode -\u003e inactiveNode.getHost().equals(node));\n    }\n    return isKnown;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/AdminService.java"
    }
  }
}