{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirConcatOp.java",
  "functionName": "computeQuotaDeltas",
  "functionId": "computeQuotaDeltas___fsd-FSDirectory__target-INodeFile__srcList-INodeFile[]",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
  "functionStartLine": 190,
  "functionEndLine": 219,
  "numCommitsSeen": 29,
  "timeTaken": 5175,
  "changeHistory": [
    "049940e77b055518e1de44b1be60d2ee2e1e9143",
    "745d04be59accf80feda0ad38efcc74ba362f2ca",
    "6d5da9484185ca9f585195d6da069b9cd5be4044",
    "bee5a6a64a1c037308fa4d52249be39c82791590",
    "f2231cebcddc80f0b753c4a7cb45ee4040846951",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0"
  ],
  "changeHistoryShort": {
    "049940e77b055518e1de44b1be60d2ee2e1e9143": "Ybodychange",
    "745d04be59accf80feda0ad38efcc74ba362f2ca": "Ybodychange",
    "6d5da9484185ca9f585195d6da069b9cd5be4044": "Ybodychange",
    "bee5a6a64a1c037308fa4d52249be39c82791590": "Ybodychange",
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": "Ybodychange",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "049940e77b055518e1de44b1be60d2ee2e1e9143": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14519. NameQuota is not update after concat operation, so namequota is wrong. Contributed by Ranith Sardar.\n",
      "commitDate": "22/11/19 1:00 PM",
      "commitName": "049940e77b055518e1de44b1be60d2ee2e1e9143",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "22/02/18 11:32 AM",
      "commitNameOld": "84a1321f6aa0af6895564a7c47f8f264656f0294",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 638.06,
      "commitsBetweenForRepo": 5378,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,30 @@\n   private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n       INodeFile target, INodeFile[] srcList) {\n     QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     final short targetRepl \u003d target.getPreferredBlockReplication();\n     for (INodeFile src : srcList) {\n       short srcRepl \u003d src.getFileReplication();\n       long fileSize \u003d src.computeFileSize();\n       if (targetRepl !\u003d srcRepl) {\n         deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n         BlockStoragePolicy bsp \u003d\n             fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n         if (bsp !\u003d null) {\n           List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n           for (StorageType t : srcTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, -fileSize);\n             }\n           }\n           List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n           for (StorageType t : targetTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, fileSize);\n             }\n           }\n         }\n       }\n     }\n+    deltas.addNameSpace(-srcList.length);\n     return deltas;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n      INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    final short targetRepl \u003d target.getPreferredBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getFileReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    deltas.addNameSpace(-srcList.length);\n    return deltas;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
      "extendedDetails": {}
    },
    "745d04be59accf80feda0ad38efcc74ba362f2ca": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8823. Move replication factor into individual blocks. Contributed by Haohui Mai.\n",
      "commitDate": "22/08/15 12:09 AM",
      "commitName": "745d04be59accf80feda0ad38efcc74ba362f2ca",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "14/08/15 2:42 PM",
      "commitNameOld": "dc7a061668a3f4d86fe1b07a40d46774b5386938",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 7.39,
      "commitsBetweenForRepo": 40,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n       INodeFile target, INodeFile[] srcList) {\n     QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     final short targetRepl \u003d target.getPreferredBlockReplication();\n     for (INodeFile src : srcList) {\n-      short srcRepl \u003d src.getPreferredBlockReplication();\n+      short srcRepl \u003d src.getFileReplication();\n       long fileSize \u003d src.computeFileSize();\n       if (targetRepl !\u003d srcRepl) {\n         deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n         BlockStoragePolicy bsp \u003d\n             fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n         if (bsp !\u003d null) {\n           List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n           for (StorageType t : srcTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, -fileSize);\n             }\n           }\n           List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n           for (StorageType t : targetTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, fileSize);\n             }\n           }\n         }\n       }\n     }\n     return deltas;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n      INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    final short targetRepl \u003d target.getPreferredBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getFileReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
      "extendedDetails": {}
    },
    "6d5da9484185ca9f585195d6da069b9cd5be4044": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-8255. Rename getBlockReplication to getPreferredBlockReplication. (Contributed by Zhe Zhang)\n",
      "commitDate": "12/05/15 6:29 AM",
      "commitName": "6d5da9484185ca9f585195d6da069b9cd5be4044",
      "commitAuthor": "yliu",
      "commitDateOld": "18/03/15 6:40 PM",
      "commitNameOld": "bee5a6a64a1c037308fa4d52249be39c82791590",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 54.49,
      "commitsBetweenForRepo": 552,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n       INodeFile target, INodeFile[] srcList) {\n     QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n-    final short targetRepl \u003d target.getBlockReplication();\n+    final short targetRepl \u003d target.getPreferredBlockReplication();\n     for (INodeFile src : srcList) {\n-      short srcRepl \u003d src.getBlockReplication();\n+      short srcRepl \u003d src.getPreferredBlockReplication();\n       long fileSize \u003d src.computeFileSize();\n       if (targetRepl !\u003d srcRepl) {\n         deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n         BlockStoragePolicy bsp \u003d\n             fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n         if (bsp !\u003d null) {\n           List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n           for (StorageType t : srcTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, -fileSize);\n             }\n           }\n           List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n           for (StorageType t : targetTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, fileSize);\n             }\n           }\n         }\n       }\n     }\n     return deltas;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n      INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    final short targetRepl \u003d target.getPreferredBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getPreferredBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
      "extendedDetails": {}
    },
    "bee5a6a64a1c037308fa4d52249be39c82791590": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7943. Append cannot handle the last block with length greater than the preferred block size. Contributed by Jing Zhao.\n",
      "commitDate": "18/03/15 6:40 PM",
      "commitName": "bee5a6a64a1c037308fa4d52249be39c82791590",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "21/02/15 3:38 PM",
      "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 25.09,
      "commitsBetweenForRepo": 205,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,29 @@\n-  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n+  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n+      INodeFile target, INodeFile[] srcList) {\n     QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n-    short targetRepl \u003d target.getBlockReplication();\n+    final short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n       short srcRepl \u003d src.getBlockReplication();\n       long fileSize \u003d src.computeFileSize();\n       if (targetRepl !\u003d srcRepl) {\n         deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n         BlockStoragePolicy bsp \u003d\n             fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n         if (bsp !\u003d null) {\n           List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n           for (StorageType t : srcTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, -fileSize);\n             }\n           }\n           List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n           for (StorageType t : targetTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, fileSize);\n             }\n           }\n         }\n       }\n     }\n     return deltas;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd,\n      INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    final short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
      "extendedDetails": {}
    },
    "f2231cebcddc80f0b753c4a7cb45ee4040846951": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7775. Use consistent naming for NN-internal quota related types and functions. (Contributed bu Xiaoyu Yao)\n",
      "commitDate": "13/02/15 9:01 PM",
      "commitName": "f2231cebcddc80f0b753c4a7cb45ee4040846951",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "11/02/15 10:41 AM",
      "commitNameOld": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 2.43,
      "commitsBetweenForRepo": 58,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n     QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n       short srcRepl \u003d src.getBlockReplication();\n       long fileSize \u003d src.computeFileSize();\n       if (targetRepl !\u003d srcRepl) {\n-        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n+        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n         BlockStoragePolicy bsp \u003d\n             fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n         if (bsp !\u003d null) {\n           List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n           for (StorageType t : srcTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, -fileSize);\n             }\n           }\n           List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n           for (StorageType t : targetTypeChosen) {\n             if (t.supportTypeQuota()) {\n               deltas.addTypeSpace(t, fileSize);\n             }\n           }\n         }\n       }\n     }\n     return deltas;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addStorageSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
      "extendedDetails": {}
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.91,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n-  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n-    long delta \u003d 0;\n+  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n+    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n-      if (targetRepl !\u003d src.getBlockReplication()) {\n-        delta +\u003d src.computeFileSize() *\n-            (targetRepl - src.getBlockReplication());\n+      short srcRepl \u003d src.getBlockReplication();\n+      long fileSize \u003d src.computeFileSize();\n+      if (targetRepl !\u003d srcRepl) {\n+        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n+        BlockStoragePolicy bsp \u003d\n+            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n+        if (bsp !\u003d null) {\n+          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n+          for (StorageType t : srcTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, -fileSize);\n+            }\n+          }\n+          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n+          for (StorageType t : targetTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, fileSize);\n+            }\n+          }\n+        }\n       }\n     }\n-    return delta;\n+    return deltas;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
          "extendedDetails": {
            "oldValue": "computeQuotaDelta",
            "newValue": "computeQuotaDeltas"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.91,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n-  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n-    long delta \u003d 0;\n+  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n+    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n-      if (targetRepl !\u003d src.getBlockReplication()) {\n-        delta +\u003d src.computeFileSize() *\n-            (targetRepl - src.getBlockReplication());\n+      short srcRepl \u003d src.getBlockReplication();\n+      long fileSize \u003d src.computeFileSize();\n+      if (targetRepl !\u003d srcRepl) {\n+        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n+        BlockStoragePolicy bsp \u003d\n+            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n+        if (bsp !\u003d null) {\n+          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n+          for (StorageType t : srcTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, -fileSize);\n+            }\n+          }\n+          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n+          for (StorageType t : targetTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, fileSize);\n+            }\n+          }\n+        }\n       }\n     }\n-    return delta;\n+    return deltas;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
          "extendedDetails": {
            "oldValue": "[target-INodeFile, srcList-INodeFile[]]",
            "newValue": "[fsd-FSDirectory, target-INodeFile, srcList-INodeFile[]]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.91,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n-  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n-    long delta \u003d 0;\n+  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n+    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n-      if (targetRepl !\u003d src.getBlockReplication()) {\n-        delta +\u003d src.computeFileSize() *\n-            (targetRepl - src.getBlockReplication());\n+      short srcRepl \u003d src.getBlockReplication();\n+      long fileSize \u003d src.computeFileSize();\n+      if (targetRepl !\u003d srcRepl) {\n+        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n+        BlockStoragePolicy bsp \u003d\n+            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n+        if (bsp !\u003d null) {\n+          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n+          for (StorageType t : srcTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, -fileSize);\n+            }\n+          }\n+          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n+          for (StorageType t : targetTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, fileSize);\n+            }\n+          }\n+        }\n       }\n     }\n-    return delta;\n+    return deltas;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
          "extendedDetails": {
            "oldValue": "long",
            "newValue": "QuotaCounts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "27/01/15 12:58 PM",
          "commitNameOld": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 14.91,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,28 @@\n-  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n-    long delta \u003d 0;\n+  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n+    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n     short targetRepl \u003d target.getBlockReplication();\n     for (INodeFile src : srcList) {\n-      if (targetRepl !\u003d src.getBlockReplication()) {\n-        delta +\u003d src.computeFileSize() *\n-            (targetRepl - src.getBlockReplication());\n+      short srcRepl \u003d src.getBlockReplication();\n+      long fileSize \u003d src.computeFileSize();\n+      if (targetRepl !\u003d srcRepl) {\n+        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n+        BlockStoragePolicy bsp \u003d\n+            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n+        if (bsp !\u003d null) {\n+          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n+          for (StorageType t : srcTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, -fileSize);\n+            }\n+          }\n+          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n+          for (StorageType t : targetTypeChosen) {\n+            if (t.supportTypeQuota()) {\n+              deltas.addTypeSpace(t, fileSize);\n+            }\n+          }\n+        }\n       }\n     }\n-    return delta;\n+    return deltas;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static QuotaCounts computeQuotaDeltas(FSDirectory fsd, INodeFile target, INodeFile[] srcList) {\n    QuotaCounts deltas \u003d new QuotaCounts.Builder().build();\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      short srcRepl \u003d src.getBlockReplication();\n      long fileSize \u003d src.computeFileSize();\n      if (targetRepl !\u003d srcRepl) {\n        deltas.addDiskSpace(fileSize * (targetRepl - srcRepl));\n        BlockStoragePolicy bsp \u003d\n            fsd.getBlockStoragePolicySuite().getPolicy(src.getStoragePolicyID());\n        if (bsp !\u003d null) {\n          List\u003cStorageType\u003e srcTypeChosen \u003d bsp.chooseStorageTypes(srcRepl);\n          for (StorageType t : srcTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, -fileSize);\n            }\n          }\n          List\u003cStorageType\u003e targetTypeChosen \u003d bsp.chooseStorageTypes(targetRepl);\n          for (StorageType t : targetTypeChosen) {\n            if (t.supportTypeQuota()) {\n              deltas.addTypeSpace(t, fileSize);\n            }\n          }\n        }\n      }\n    }\n    return deltas;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "2848db814a98b83e7546f65a2751e56fb5b2dbe0": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3689. Add support for variable length block. Contributed by Jing Zhao.\n",
      "commitDate": "27/01/15 12:58 PM",
      "commitName": "2848db814a98b83e7546f65a2751e56fb5b2dbe0",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,11 @@\n+  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n+    long delta \u003d 0;\n+    short targetRepl \u003d target.getBlockReplication();\n+    for (INodeFile src : srcList) {\n+      if (targetRepl !\u003d src.getBlockReplication()) {\n+        delta +\u003d src.computeFileSize() *\n+            (targetRepl - src.getBlockReplication());\n+      }\n+    }\n+    return delta;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static long computeQuotaDelta(INodeFile target, INodeFile[] srcList) {\n    long delta \u003d 0;\n    short targetRepl \u003d target.getBlockReplication();\n    for (INodeFile src : srcList) {\n      if (targetRepl !\u003d src.getBlockReplication()) {\n        delta +\u003d src.computeFileSize() *\n            (targetRepl - src.getBlockReplication());\n      }\n    }\n    return delta;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirConcatOp.java"
    }
  }
}