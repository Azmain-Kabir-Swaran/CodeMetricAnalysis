{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "getInstrumentedContext",
  "functionId": "getInstrumentedContext___bindConcurrentOOBIo-boolean",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 2075,
  "functionEndLine": 2121,
  "numCommitsSeen": 53,
  "timeTaken": 3416,
  "changeHistory": [
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da",
    "f2921e51f0fe613abce0a9f415a0d8ab6144aa6e",
    "7e031c2c18b8812ec9f843ed3b4abe9e6d12bb28",
    "5731c0e0d08c3048fafdf62a14ca7611be4df5d7",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
    "0d91576ec31f63402f2db6107a04155368e2632d",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da": "Ybodychange",
    "f2921e51f0fe613abce0a9f415a0d8ab6144aa6e": "Ybodychange",
    "7e031c2c18b8812ec9f843ed3b4abe9e6d12bb28": "Ybodychange",
    "5731c0e0d08c3048fafdf62a14ca7611be4df5d7": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Ybodychange",
    "0d91576ec31f63402f2db6107a04155368e2632d": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14660 wasb: improve throughput by 34% when account limit exceeded.\nContributed by Thomas Marquardt.\n",
      "commitDate": "01/08/17 1:36 PM",
      "commitName": "778d4edd9adbe9519c3d6df65e45ddc8bb0ab2da",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "24/07/17 11:01 PM",
      "commitNameOld": "f2921e51f0fe613abce0a9f415a0d8ab6144aa6e",
      "commitAuthorOld": "Jitendra Pandey",
      "daysBetweenCommits": 7.61,
      "commitsBetweenForRepo": 46,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,45 +1,47 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n     // Set User-Agent\n     operationContext.getSendingRequestEventHandler().addListener(new StorageEvent\u003cSendingRequestEvent\u003e() {\n       @Override\n       public void eventOccurred(SendingRequestEvent eventArg) {\n         HttpURLConnection connection \u003d (HttpURLConnection) eventArg.getConnectionObject();\n         String userAgentInfo \u003d String.format(Utility.LOCALE_US, \"WASB/%s (%s) %s\",\n                 VersionInfo.getVersion(), userAgentId, BaseRequest.getUserAgent());\n         connection.setRequestProperty(Constants.HeaderConstants.USER_AGENT, userAgentInfo);\n       }\n     });\n \n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n+    } else if (autoThrottlingEnabled) {\n+      ClientThrottlingIntercept.hook(operationContext);\n     }\n \n-    if(bandwidthGaugeUpdater !\u003d null) {\n+    if (bandwidthGaugeUpdater !\u003d null) {\n       //bandwidthGaugeUpdater is null when we config to skip azure metrics\n       ResponseReceivedMetricUpdater.hook(\n          operationContext,\n          instrumentation,\n          bandwidthGaugeUpdater);\n     }\n \n     // Bind operation context to receive send request callbacks on this operation.\n     // If reads concurrent to OOB writes are allowed, the interception will reset\n     // the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n       SendRequestIntercept.bind(operationContext);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n       operationContext \u003d\n           testHookOperationContext.modifyOperationContext(operationContext);\n     }\n \n     ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    // Set User-Agent\n    operationContext.getSendingRequestEventHandler().addListener(new StorageEvent\u003cSendingRequestEvent\u003e() {\n      @Override\n      public void eventOccurred(SendingRequestEvent eventArg) {\n        HttpURLConnection connection \u003d (HttpURLConnection) eventArg.getConnectionObject();\n        String userAgentInfo \u003d String.format(Utility.LOCALE_US, \"WASB/%s (%s) %s\",\n                VersionInfo.getVersion(), userAgentId, BaseRequest.getUserAgent());\n        connection.setRequestProperty(Constants.HeaderConstants.USER_AGENT, userAgentInfo);\n      }\n    });\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    } else if (autoThrottlingEnabled) {\n      ClientThrottlingIntercept.hook(operationContext);\n    }\n\n    if (bandwidthGaugeUpdater !\u003d null) {\n      //bandwidthGaugeUpdater is null when we config to skip azure metrics\n      ResponseReceivedMetricUpdater.hook(\n         operationContext,\n         instrumentation,\n         bandwidthGaugeUpdater);\n    }\n\n    // Bind operation context to receive send request callbacks on this operation.\n    // If reads concurrent to OOB writes are allowed, the interception will reset\n    // the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(operationContext);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d\n          testHookOperationContext.modifyOperationContext(operationContext);\n    }\n\n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "f2921e51f0fe613abce0a9f415a0d8ab6144aa6e": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14518. Customize User-Agent header sent in HTTP/HTTPS requests by WASB. Contributed by Georgi Chalakov.\n",
      "commitDate": "24/07/17 11:01 PM",
      "commitName": "f2921e51f0fe613abce0a9f415a0d8ab6144aa6e",
      "commitAuthor": "Jitendra Pandey",
      "commitDateOld": "11/07/17 1:34 PM",
      "commitNameOld": "d670c3a4da7dd80dccf6c6308603bb3bb013b3b0",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 13.39,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,45 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n+    // Set User-Agent\n+    operationContext.getSendingRequestEventHandler().addListener(new StorageEvent\u003cSendingRequestEvent\u003e() {\n+      @Override\n+      public void eventOccurred(SendingRequestEvent eventArg) {\n+        HttpURLConnection connection \u003d (HttpURLConnection) eventArg.getConnectionObject();\n+        String userAgentInfo \u003d String.format(Utility.LOCALE_US, \"WASB/%s (%s) %s\",\n+                VersionInfo.getVersion(), userAgentId, BaseRequest.getUserAgent());\n+        connection.setRequestProperty(Constants.HeaderConstants.USER_AGENT, userAgentInfo);\n+      }\n+    });\n+\n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n     }\n \n     if(bandwidthGaugeUpdater !\u003d null) {\n       //bandwidthGaugeUpdater is null when we config to skip azure metrics\n       ResponseReceivedMetricUpdater.hook(\n          operationContext,\n          instrumentation,\n          bandwidthGaugeUpdater);\n     }\n \n     // Bind operation context to receive send request callbacks on this operation.\n     // If reads concurrent to OOB writes are allowed, the interception will reset\n     // the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n       SendRequestIntercept.bind(operationContext);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n       operationContext \u003d\n           testHookOperationContext.modifyOperationContext(operationContext);\n     }\n \n     ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    // Set User-Agent\n    operationContext.getSendingRequestEventHandler().addListener(new StorageEvent\u003cSendingRequestEvent\u003e() {\n      @Override\n      public void eventOccurred(SendingRequestEvent eventArg) {\n        HttpURLConnection connection \u003d (HttpURLConnection) eventArg.getConnectionObject();\n        String userAgentInfo \u003d String.format(Utility.LOCALE_US, \"WASB/%s (%s) %s\",\n                VersionInfo.getVersion(), userAgentId, BaseRequest.getUserAgent());\n        connection.setRequestProperty(Constants.HeaderConstants.USER_AGENT, userAgentInfo);\n      }\n    });\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    if(bandwidthGaugeUpdater !\u003d null) {\n      //bandwidthGaugeUpdater is null when we config to skip azure metrics\n      ResponseReceivedMetricUpdater.hook(\n         operationContext,\n         instrumentation,\n         bandwidthGaugeUpdater);\n    }\n\n    // Bind operation context to receive send request callbacks on this operation.\n    // If reads concurrent to OOB writes are allowed, the interception will reset\n    // the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(operationContext);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d\n          testHookOperationContext.modifyOperationContext(operationContext);\n    }\n\n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "7e031c2c18b8812ec9f843ed3b4abe9e6d12bb28": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14546. Azure: Concurrent I/O does not work when secure.mode is enabled. Contributed by Thomas\n",
      "commitDate": "27/06/17 5:32 PM",
      "commitName": "7e031c2c18b8812ec9f843ed3b4abe9e6d12bb28",
      "commitAuthor": "Mingliang Liu",
      "commitDateOld": "26/06/17 5:39 AM",
      "commitNameOld": "48f4a229a93b65df9e99df2505719dd3538f1188",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 1.49,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,35 +1,34 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n     }\n \n     if(bandwidthGaugeUpdater !\u003d null) {\n       //bandwidthGaugeUpdater is null when we config to skip azure metrics\n       ResponseReceivedMetricUpdater.hook(\n          operationContext,\n          instrumentation,\n          bandwidthGaugeUpdater);\n     }\n \n     // Bind operation context to receive send request callbacks on this operation.\n     // If reads concurrent to OOB writes are allowed, the interception will reset\n     // the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n-      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n-          operationContext, true);\n+      SendRequestIntercept.bind(operationContext);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n       operationContext \u003d\n           testHookOperationContext.modifyOperationContext(operationContext);\n     }\n \n     ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    if(bandwidthGaugeUpdater !\u003d null) {\n      //bandwidthGaugeUpdater is null when we config to skip azure metrics\n      ResponseReceivedMetricUpdater.hook(\n         operationContext,\n         instrumentation,\n         bandwidthGaugeUpdater);\n    }\n\n    // Bind operation context to receive send request callbacks on this operation.\n    // If reads concurrent to OOB writes are allowed, the interception will reset\n    // the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(operationContext);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d\n          testHookOperationContext.modifyOperationContext(operationContext);\n    }\n\n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "5731c0e0d08c3048fafdf62a14ca7611be4df5d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11629. WASB filesystem should not start BandwidthGaugeUpdater if fs.azure.skip.metrics set to true. Contributed by Shanyu Zhao.\n",
      "commitDate": "25/02/15 9:08 AM",
      "commitName": "5731c0e0d08c3048fafdf62a14ca7611be4df5d7",
      "commitAuthor": "cnauroth",
      "commitDateOld": "24/02/15 7:32 AM",
      "commitNameOld": "9cedad11d8d2197a54732667a15344983de5c437",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 1.07,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,35 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n     }\n \n-    ResponseReceivedMetricUpdater.hook(\n-        operationContext,\n-        instrumentation,\n-        bandwidthGaugeUpdater);\n-    \n+    if(bandwidthGaugeUpdater !\u003d null) {\n+      //bandwidthGaugeUpdater is null when we config to skip azure metrics\n+      ResponseReceivedMetricUpdater.hook(\n+         operationContext,\n+         instrumentation,\n+         bandwidthGaugeUpdater);\n+    }\n+\n     // Bind operation context to receive send request callbacks on this operation.\n     // If reads concurrent to OOB writes are allowed, the interception will reset\n     // the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n       SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n           operationContext, true);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n       operationContext \u003d\n           testHookOperationContext.modifyOperationContext(operationContext);\n     }\n \n     ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    if(bandwidthGaugeUpdater !\u003d null) {\n      //bandwidthGaugeUpdater is null when we config to skip azure metrics\n      ResponseReceivedMetricUpdater.hook(\n         operationContext,\n         instrumentation,\n         bandwidthGaugeUpdater);\n    }\n\n    // Bind operation context to receive send request callbacks on this operation.\n    // If reads concurrent to OOB writes are allowed, the interception will reset\n    // the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n          operationContext, true);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d\n          testHookOperationContext.modifyOperationContext(operationContext);\n    }\n\n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "commitDateOld": "24/06/14 1:52 PM",
      "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 106.02,
      "commitsBetweenForRepo": 1005,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,32 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n     }\n \n     ResponseReceivedMetricUpdater.hook(\n         operationContext,\n         instrumentation,\n         bandwidthGaugeUpdater);\n     \n-    // Bind operation context to receive send request callbacks on this\n-    // operation.\n-    // If reads concurrent to OOB writes are allowed, the interception will\n-    // reset the conditional header on all Azure blob storage read requests.\n+    // Bind operation context to receive send request callbacks on this operation.\n+    // If reads concurrent to OOB writes are allowed, the interception will reset\n+    // the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n       SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n           operationContext, true);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n-      operationContext \u003d testHookOperationContext\n-          .modifyOperationContext(operationContext);\n+      operationContext \u003d\n+          testHookOperationContext.modifyOperationContext(operationContext);\n     }\n-    \n+\n     ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    ResponseReceivedMetricUpdater.hook(\n        operationContext,\n        instrumentation,\n        bandwidthGaugeUpdater);\n    \n    // Bind operation context to receive send request callbacks on this operation.\n    // If reads concurrent to OOB writes are allowed, the interception will reset\n    // the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n          operationContext, true);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d\n          testHookOperationContext.modifyOperationContext(operationContext);\n    }\n\n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "0d91576ec31f63402f2db6107a04155368e2632d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10728. Metrics system for Windows Azure Storage Filesystem. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1605187 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/06/14 1:52 PM",
      "commitName": "0d91576ec31f63402f2db6107a04155368e2632d",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "20/06/14 11:30 AM",
      "commitNameOld": "8300b9fb385b47672d98ea62ab291991424f3cce",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 4.1,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,33 @@\n   private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n \n     OperationContext operationContext \u003d new OperationContext();\n \n     if (selfThrottlingEnabled) {\n       SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n           selfThrottlingWriteFactor);\n     }\n \n+    ResponseReceivedMetricUpdater.hook(\n+        operationContext,\n+        instrumentation,\n+        bandwidthGaugeUpdater);\n+    \n     // Bind operation context to receive send request callbacks on this\n     // operation.\n     // If reads concurrent to OOB writes are allowed, the interception will\n     // reset the conditional header on all Azure blob storage read requests.\n     if (bindConcurrentOOBIo) {\n       SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n           operationContext, true);\n     }\n \n     if (testHookOperationContext !\u003d null) {\n       operationContext \u003d testHookOperationContext\n           .modifyOperationContext(operationContext);\n     }\n+    \n+    ErrorMetricUpdater.hook(operationContext, instrumentation);\n \n     // Return the operation context.\n     return operationContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    ResponseReceivedMetricUpdater.hook(\n        operationContext,\n        instrumentation,\n        bandwidthGaugeUpdater);\n    \n    // Bind operation context to receive send request callbacks on this\n    // operation.\n    // If reads concurrent to OOB writes are allowed, the interception will\n    // reset the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n          operationContext, true);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d testHookOperationContext\n          .modifyOperationContext(operationContext);\n    }\n    \n    ErrorMetricUpdater.hook(operationContext, instrumentation);\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,26 @@\n+  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n+\n+    OperationContext operationContext \u003d new OperationContext();\n+\n+    if (selfThrottlingEnabled) {\n+      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n+          selfThrottlingWriteFactor);\n+    }\n+\n+    // Bind operation context to receive send request callbacks on this\n+    // operation.\n+    // If reads concurrent to OOB writes are allowed, the interception will\n+    // reset the conditional header on all Azure blob storage read requests.\n+    if (bindConcurrentOOBIo) {\n+      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n+          operationContext, true);\n+    }\n+\n+    if (testHookOperationContext !\u003d null) {\n+      operationContext \u003d testHookOperationContext\n+          .modifyOperationContext(operationContext);\n+    }\n+\n+    // Return the operation context.\n+    return operationContext;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private OperationContext getInstrumentedContext(boolean bindConcurrentOOBIo) {\n\n    OperationContext operationContext \u003d new OperationContext();\n\n    if (selfThrottlingEnabled) {\n      SelfThrottlingIntercept.hook(operationContext, selfThrottlingReadFactor,\n          selfThrottlingWriteFactor);\n    }\n\n    // Bind operation context to receive send request callbacks on this\n    // operation.\n    // If reads concurrent to OOB writes are allowed, the interception will\n    // reset the conditional header on all Azure blob storage read requests.\n    if (bindConcurrentOOBIo) {\n      SendRequestIntercept.bind(storageInteractionLayer.getCredentials(),\n          operationContext, true);\n    }\n\n    if (testHookOperationContext !\u003d null) {\n      operationContext \u003d testHookOperationContext\n          .modifyOperationContext(operationContext);\n    }\n\n    // Return the operation context.\n    return operationContext;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}