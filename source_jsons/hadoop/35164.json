{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NMLeveldbStateStoreService.java",
  "functionName": "storeContainer",
  "functionId": "storeContainer___containerId-ContainerId__containerVersion-int__startTime-long__startRequest-StartContainerRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
  "functionStartLine": 447,
  "functionEndLine": 476,
  "numCommitsSeen": 91,
  "timeTaken": 6041,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "9d3c39e9dd88b8f32223c01328581bb68507d415",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
    "092fead5d9875fb3760206bcdd76cdafec5e9481",
    "e7933097354a246b080b46f1a4ca2ef0f39f3b38",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "9d3c39e9dd88b8f32223c01328581bb68507d415": "Ybodychange",
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": "Ybodychange",
    "092fead5d9875fb3760206bcdd76cdafec5e9481": "Ymultichange(Yparameterchange,Ybodychange)",
    "e7933097354a246b080b46f1a4ca2ef0f39f3b38": "Ybodychange",
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": "Ymultichange(Yparameterchange,Ybodychange)",
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": "Ybodychange",
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "13/09/18 11:28 AM",
      "commitNameOld": "250b50018e8c94d8ca83ff981b01f26bb68c0842",
      "commitAuthorOld": "Jason Lowe",
      "daysBetweenCommits": 183.2,
      "commitsBetweenForRepo": 1474,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,30 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n       long startTime, StartContainerRequest startRequest) throws IOException {\n     String idStr \u003d containerId.toString();\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n-          + \", startRequest\u003d \" + startRequest);\n-    }\n+    LOG.debug(\"storeContainer: containerId\u003d {}, startRequest\u003d {}\",\n+        idStr, startRequest);\n     final String keyVersion \u003d getContainerVersionKey(idStr);\n     final String keyRequest \u003d\n         getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n     final StartContainerRequestProto startContainerRequest \u003d\n         ((StartContainerRequestPBImpl) startRequest).getProto();\n \n     final String keyStartTime \u003d\n         getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n     final String startTimeValue \u003d Long.toString(startTime);\n \n     try {\n       try (WriteBatch batch \u003d db.createWriteBatch()) {\n         batch.put(bytes(keyRequest), startContainerRequest.toByteArray());\n         batch.put(bytes(keyStartTime), bytes(startTimeValue));\n         if (containerVersion !\u003d 0) {\n           batch.put(bytes(keyVersion),\n                   bytes(Integer.toString(containerVersion)));\n         }\n         db.write(batch);\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      long startTime, StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    LOG.debug(\"storeContainer: containerId\u003d {}, startRequest\u003d {}\",\n        idStr, startRequest);\n    final String keyVersion \u003d getContainerVersionKey(idStr);\n    final String keyRequest \u003d\n        getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n    final StartContainerRequestProto startContainerRequest \u003d\n        ((StartContainerRequestPBImpl) startRequest).getProto();\n\n    final String keyStartTime \u003d\n        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n    final String startTimeValue \u003d Long.toString(startTime);\n\n    try {\n      try (WriteBatch batch \u003d db.createWriteBatch()) {\n        batch.put(bytes(keyRequest), startContainerRequest.toByteArray());\n        batch.put(bytes(keyStartTime), bytes(startTimeValue));\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n                  bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "9d3c39e9dd88b8f32223c01328581bb68507d415": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6966. NodeManager metrics may return wrong negative values when NM restart. (Szilard Nemeth via Haibo Chen)\n",
      "commitDate": "23/07/18 11:07 AM",
      "commitName": "9d3c39e9dd88b8f32223c01328581bb68507d415",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "12/04/18 9:04 AM",
      "commitNameOld": "6bb128dfb893cf0e4aa2d3ecc65440668a1fc8d7",
      "commitAuthorOld": "Eric E Payne",
      "daysBetweenCommits": 102.09,
      "commitsBetweenForRepo": 1218,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,32 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n       long startTime, StartContainerRequest startRequest) throws IOException {\n     String idStr \u003d containerId.toString();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n           + \", startRequest\u003d \" + startRequest);\n     }\n-    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n-    String keyVersion \u003d getContainerVersionKey(idStr);\n-    String keyStartTime \u003d\n+    final String keyVersion \u003d getContainerVersionKey(idStr);\n+    final String keyRequest \u003d\n+        getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n+    final StartContainerRequestProto startContainerRequest \u003d\n+        ((StartContainerRequestPBImpl) startRequest).getProto();\n+\n+    final String keyStartTime \u003d\n         getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n+    final String startTimeValue \u003d Long.toString(startTime);\n+\n     try {\n-      WriteBatch batch \u003d db.createWriteBatch();\n-      try {\n-        batch.put(bytes(keyRequest),\n-            ((StartContainerRequestPBImpl) startRequest).getProto().\n-                toByteArray());\n-        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n+      try (WriteBatch batch \u003d db.createWriteBatch()) {\n+        batch.put(bytes(keyRequest), startContainerRequest.toByteArray());\n+        batch.put(bytes(keyStartTime), bytes(startTimeValue));\n         if (containerVersion !\u003d 0) {\n           batch.put(bytes(keyVersion),\n-              bytes(Integer.toString(containerVersion)));\n+                  bytes(Integer.toString(containerVersion)));\n         }\n         db.write(batch);\n-      } finally {\n-        batch.close();\n       }\n     } catch (DBException e) {\n       markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      long startTime, StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n          + \", startRequest\u003d \" + startRequest);\n    }\n    final String keyVersion \u003d getContainerVersionKey(idStr);\n    final String keyRequest \u003d\n        getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n    final StartContainerRequestProto startContainerRequest \u003d\n        ((StartContainerRequestPBImpl) startRequest).getProto();\n\n    final String keyStartTime \u003d\n        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n    final String startTimeValue \u003d Long.toString(startTime);\n\n    try {\n      try (WriteBatch batch \u003d db.createWriteBatch()) {\n        batch.put(bytes(keyRequest), startContainerRequest.toByteArray());\n        batch.put(bytes(keyStartTime), bytes(startTimeValue));\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n                  bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "7f515f57ede74dae787994f37bfafd5d20c9aa4c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7585. NodeManager should go unhealthy when state store throws DBException. Contributed by Wilfred Spiegelenburg.\n",
      "commitDate": "02/01/18 6:03 PM",
      "commitName": "7f515f57ede74dae787994f37bfafd5d20c9aa4c",
      "commitAuthor": "Miklos Szegedi",
      "commitDateOld": "28/10/17 10:38 PM",
      "commitNameOld": "9114d7a5a0159bbe70e9c289dbe1fc5db9101db5",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 65.85,
      "commitsBetweenForRepo": 464,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,31 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n       long startTime, StartContainerRequest startRequest) throws IOException {\n     String idStr \u003d containerId.toString();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n           + \", startRequest\u003d \" + startRequest);\n     }\n     String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n     String keyVersion \u003d getContainerVersionKey(idStr);\n     String keyStartTime \u003d\n         getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(keyRequest),\n             ((StartContainerRequestPBImpl) startRequest).getProto().\n                 toByteArray());\n         batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n         if (containerVersion !\u003d 0) {\n           batch.put(bytes(keyVersion),\n               bytes(Integer.toString(containerVersion)));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n+      markStoreUnHealthy(e);\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      long startTime, StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n    String keyVersion \u003d getContainerVersionKey(idStr);\n    String keyStartTime \u003d\n        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest).getProto().\n                toByteArray());\n        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n              bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      markStoreUnHealthy(e);\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "092fead5d9875fb3760206bcdd76cdafec5e9481": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "24/08/17 4:04 AM",
          "commitNameOld": "de0cba700bcf4276726c0aa9df8d738787debc17",
          "commitAuthorOld": "bibinchundatt",
          "daysBetweenCommits": 5.79,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n-      StartContainerRequest startRequest) throws IOException {\n+      long startTime, StartContainerRequest startRequest) throws IOException {\n     String idStr \u003d containerId.toString();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n           + \", startRequest\u003d \" + startRequest);\n     }\n-    String keyRequest \u003d CONTAINERS_KEY_PREFIX + idStr\n-        + CONTAINER_REQUEST_KEY_SUFFIX;\n+    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n     String keyVersion \u003d getContainerVersionKey(idStr);\n+    String keyStartTime \u003d\n+        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(keyRequest),\n-            ((StartContainerRequestPBImpl) startRequest)\n-                .getProto().toByteArray());\n+            ((StartContainerRequestPBImpl) startRequest).getProto().\n+                toByteArray());\n+        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n         if (containerVersion !\u003d 0) {\n           batch.put(bytes(keyVersion),\n               bytes(Integer.toString(containerVersion)));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      long startTime, StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n    String keyVersion \u003d getContainerVersionKey(idStr);\n    String keyStartTime \u003d\n        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest).getProto().\n                toByteArray());\n        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n              bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, containerVersion-int, startRequest-StartContainerRequest]",
            "newValue": "[containerId-ContainerId, containerVersion-int, startTime-long, startRequest-StartContainerRequest]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
          "commitDate": "29/08/17 10:59 PM",
          "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "24/08/17 4:04 AM",
          "commitNameOld": "de0cba700bcf4276726c0aa9df8d738787debc17",
          "commitAuthorOld": "bibinchundatt",
          "daysBetweenCommits": 5.79,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,30 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n-      StartContainerRequest startRequest) throws IOException {\n+      long startTime, StartContainerRequest startRequest) throws IOException {\n     String idStr \u003d containerId.toString();\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n           + \", startRequest\u003d \" + startRequest);\n     }\n-    String keyRequest \u003d CONTAINERS_KEY_PREFIX + idStr\n-        + CONTAINER_REQUEST_KEY_SUFFIX;\n+    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n     String keyVersion \u003d getContainerVersionKey(idStr);\n+    String keyStartTime \u003d\n+        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(keyRequest),\n-            ((StartContainerRequestPBImpl) startRequest)\n-                .getProto().toByteArray());\n+            ((StartContainerRequestPBImpl) startRequest).getProto().\n+                toByteArray());\n+        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n         if (containerVersion !\u003d 0) {\n           batch.put(bytes(keyVersion),\n               bytes(Integer.toString(containerVersion)));\n         }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      long startTime, StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d getContainerKey(idStr, CONTAINER_REQUEST_KEY_SUFFIX);\n    String keyVersion \u003d getContainerVersionKey(idStr);\n    String keyStartTime \u003d\n        getContainerKey(idStr, CONTAINER_START_TIME_KEY_SUFFIX);\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest).getProto().\n                toByteArray());\n        batch.put(bytes(keyStartTime), bytes(Long.toString(startTime)));\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n              bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "e7933097354a246b080b46f1a4ca2ef0f39f3b38": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5630. NM fails to start after downgrade from 2.8 to 2.7. Contributed by Jason Lowe\n",
      "commitDate": "13/09/16 7:41 AM",
      "commitName": "e7933097354a246b080b46f1a4ca2ef0f39f3b38",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "30/08/16 3:52 PM",
      "commitNameOld": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 13.66,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,28 @@\n   public void storeContainer(ContainerId containerId, int containerVersion,\n       StartContainerRequest startRequest) throws IOException {\n+    String idStr \u003d containerId.toString();\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n+      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n           + \", startRequest\u003d \" + startRequest);\n     }\n-    String keyRequest \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyRequest \u003d CONTAINERS_KEY_PREFIX + idStr\n         + CONTAINER_REQUEST_KEY_SUFFIX;\n-    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n-        + CONTAINER_VERSION_KEY_SUFFIX;\n+    String keyVersion \u003d getContainerVersionKey(idStr);\n     try {\n       WriteBatch batch \u003d db.createWriteBatch();\n       try {\n         batch.put(bytes(keyRequest),\n             ((StartContainerRequestPBImpl) startRequest)\n                 .getProto().toByteArray());\n-        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        if (containerVersion !\u003d 0) {\n+          batch.put(bytes(keyVersion),\n+              bytes(Integer.toString(containerVersion)));\n+        }\n         db.write(batch);\n       } finally {\n         batch.close();\n       }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      StartContainerRequest startRequest) throws IOException {\n    String idStr \u003d containerId.toString();\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + idStr\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d CONTAINERS_KEY_PREFIX + idStr\n        + CONTAINER_REQUEST_KEY_SUFFIX;\n    String keyVersion \u003d getContainerVersionKey(idStr);\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest)\n                .getProto().toByteArray());\n        if (containerVersion !\u003d 0) {\n          batch.put(bytes(keyVersion),\n              bytes(Integer.toString(containerVersion)));\n        }\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "d6d9cff21b7b6141ed88359652cf22e8973c0661": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
      "commitDate": "30/08/16 3:52 PM",
      "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
      "commitAuthor": "Arun Suresh",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 77.03,
          "commitsBetweenForRepo": 656,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,25 @@\n-  public void storeContainer(ContainerId containerId,\n+  public void storeContainer(ContainerId containerId, int containerVersion,\n       StartContainerRequest startRequest) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n           + \", startRequest\u003d \" + startRequest);\n     }\n-\n-    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyRequest \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_REQUEST_KEY_SUFFIX;\n+    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_VERSION_KEY_SUFFIX;\n     try {\n-      db.put(bytes(key),\n-        ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        batch.put(bytes(keyRequest),\n+            ((StartContainerRequestPBImpl) startRequest)\n+                .getProto().toByteArray());\n+        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      StartContainerRequest startRequest) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_REQUEST_KEY_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest)\n                .getProto().toByteArray());\n        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {
            "oldValue": "[containerId-ContainerId, startRequest-StartContainerRequest]",
            "newValue": "[containerId-ContainerId, containerVersion-int, startRequest-StartContainerRequest]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5221. Expose UpdateResourceRequest API to allow AM to request for change in container properties. (asuresh)\n",
          "commitDate": "30/08/16 3:52 PM",
          "commitName": "d6d9cff21b7b6141ed88359652cf22e8973c0661",
          "commitAuthor": "Arun Suresh",
          "commitDateOld": "14/06/16 3:06 PM",
          "commitNameOld": "c77a1095dc556e8bea87df6d8ddf36e898f27e86",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 77.03,
          "commitsBetweenForRepo": 656,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,25 @@\n-  public void storeContainer(ContainerId containerId,\n+  public void storeContainer(ContainerId containerId, int containerVersion,\n       StartContainerRequest startRequest) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n           + \", startRequest\u003d \" + startRequest);\n     }\n-\n-    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+    String keyRequest \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_REQUEST_KEY_SUFFIX;\n+    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_VERSION_KEY_SUFFIX;\n     try {\n-      db.put(bytes(key),\n-        ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n+      WriteBatch batch \u003d db.createWriteBatch();\n+      try {\n+        batch.put(bytes(keyRequest),\n+            ((StartContainerRequestPBImpl) startRequest)\n+                .getProto().toByteArray());\n+        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n+        db.write(batch);\n+      } finally {\n+        batch.close();\n+      }\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void storeContainer(ContainerId containerId, int containerVersion,\n      StartContainerRequest startRequest) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n          + \", startRequest\u003d \" + startRequest);\n    }\n    String keyRequest \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_REQUEST_KEY_SUFFIX;\n    String keyVersion \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_VERSION_KEY_SUFFIX;\n    try {\n      WriteBatch batch \u003d db.createWriteBatch();\n      try {\n        batch.put(bytes(keyRequest),\n            ((StartContainerRequestPBImpl) startRequest)\n                .getProto().toByteArray());\n        batch.put(bytes(keyVersion), bytes(Integer.toString(containerVersion)));\n        db.write(batch);\n      } finally {\n        batch.close();\n      }\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
          "extendedDetails": {}
        }
      ]
    },
    "1cd55e0c171f7c4dec6f843931285557d59cd5ea": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4649. Add additional logging to some NM state store operations. Contributed by Sidharta Seethana\n",
      "commitDate": "01/02/16 7:55 PM",
      "commitName": "1cd55e0c171f7c4dec6f843931285557d59cd5ea",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "23/09/15 1:29 PM",
      "commitNameOld": "c57eac5dfe277845ab4522a1188023a73ee41539",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 131.31,
      "commitsBetweenForRepo": 904,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,16 @@\n   public void storeContainer(ContainerId containerId,\n       StartContainerRequest startRequest) throws IOException {\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n+          + \", startRequest\u003d \" + startRequest);\n+    }\n+\n     String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n         + CONTAINER_REQUEST_KEY_SUFFIX;\n     try {\n       db.put(bytes(key),\n         ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n     } catch (DBException e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId,\n      StartContainerRequest startRequest) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"storeContainer: containerId\u003d \" + containerId\n          + \", startRequest\u003d \" + startRequest);\n    }\n\n    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_REQUEST_KEY_SUFFIX;\n    try {\n      db.put(bytes(key),\n        ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java",
      "extendedDetails": {}
    },
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,11 @@\n+  public void storeContainer(ContainerId containerId,\n+      StartContainerRequest startRequest) throws IOException {\n+    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n+        + CONTAINER_REQUEST_KEY_SUFFIX;\n+    try {\n+      db.put(bytes(key),\n+        ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n+    } catch (DBException e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void storeContainer(ContainerId containerId,\n      StartContainerRequest startRequest) throws IOException {\n    String key \u003d CONTAINERS_KEY_PREFIX + containerId.toString()\n        + CONTAINER_REQUEST_KEY_SUFFIX;\n    try {\n      db.put(bytes(key),\n        ((StartContainerRequestPBImpl) startRequest).getProto().toByteArray());\n    } catch (DBException e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/recovery/NMLeveldbStateStoreService.java"
    }
  }
}