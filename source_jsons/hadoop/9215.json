{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "registerBackupNode",
  "functionId": "registerBackupNode___bnReg-NamenodeRegistration__nnReg-NamenodeRegistration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 5875,
  "functionEndLine": 5893,
  "numCommitsSeen": 914,
  "timeTaken": 53009,
  "changeHistory": [
    "ff0b99eafeda035ebe0dc82cfe689808047a8893",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": "Ymultichange(Yparameterchange,Ybodychange)",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ff0b99eafeda035ebe0dc82cfe689808047a8893": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10872. Add MutableRate metrics for FSNamesystemLock operations. Contributed by Erik Krogen.\n",
      "commitDate": "14/11/16 11:05 AM",
      "commitName": "ff0b99eafeda035ebe0dc82cfe689808047a8893",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "08/11/16 6:17 PM",
      "commitNameOld": "ed0bebabaaf27cd730f7f8eb002d92c9c7db327d",
      "commitAuthorOld": "Brahma Reddy Battula",
      "daysBetweenCommits": 5.7,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   void registerBackupNode(NamenodeRegistration bnReg,\n       NamenodeRegistration nnReg) throws IOException {\n     writeLock();\n     try {\n       if(getFSImage().getStorage().getNamespaceID() \n          !\u003d bnReg.getNamespaceID())\n         throw new IOException(\"Incompatible namespaceIDs: \"\n             + \" Namenode namespaceID \u003d \"\n             + getFSImage().getStorage().getNamespaceID() + \"; \"\n             + bnReg.getRole() +\n             \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n       if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n         getFSImage().getEditLog().registerBackupNode(\n             bnReg, nnReg);\n       }\n     } finally {\n-      writeUnlock();\n+      writeUnlock(\"registerBackupNode\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void registerBackupNode(NamenodeRegistration bnReg,\n      NamenodeRegistration nnReg) throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d bnReg.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + bnReg.getRole() +\n            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n        getFSImage().getEditLog().registerBackupNode(\n            bnReg, nnReg);\n      }\n    } finally {\n      writeUnlock(\"registerBackupNode\");\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void registerBackupNode(NamenodeRegistration bnReg,\n      NamenodeRegistration nnReg) throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d bnReg.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + bnReg.getRole() +\n            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n        getFSImage().getEditLog().registerBackupNode(\n            bnReg, nnReg);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  void registerBackupNode(NamenodeRegistration bnReg,\n      NamenodeRegistration nnReg) throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d bnReg.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + bnReg.getRole() +\n            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n        getFSImage().getEditLog().registerBackupNode(\n            bnReg, nnReg);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
      }
    },
    "28e6a4e44a3e920dcaf858f9a74a6358226b3a63": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/07/11 9:28 AM",
      "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/07/11 10:59 PM",
          "commitNameOld": "0b12cc822ddd57e6ecf4f7047f6614419c34580b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.44,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  void registerBackupNode(NamenodeRegistration registration)\n-    throws IOException {\n+  void registerBackupNode(NamenodeRegistration bnReg,\n+      NamenodeRegistration nnReg) throws IOException {\n     writeLock();\n     try {\n       if(getFSImage().getStorage().getNamespaceID() \n-         !\u003d registration.getNamespaceID())\n+         !\u003d bnReg.getNamespaceID())\n         throw new IOException(\"Incompatible namespaceIDs: \"\n             + \" Namenode namespaceID \u003d \"\n             + getFSImage().getStorage().getNamespaceID() + \"; \"\n-            + registration.getRole() +\n-            \" node namespaceID \u003d \" + registration.getNamespaceID());\n-      boolean regAllowed \u003d getEditLog().checkBackupRegistration(registration);\n-      if(!regAllowed)\n-        throw new IOException(\"Registration is not allowed. \" +\n-                              \"Another node is registered as a backup.\");\n+            + bnReg.getRole() +\n+            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n+      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n+        getFSImage().getEditLog().registerBackupNode(\n+            bnReg, nnReg);\n+      }\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void registerBackupNode(NamenodeRegistration bnReg,\n      NamenodeRegistration nnReg) throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d bnReg.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + bnReg.getRole() +\n            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n        getFSImage().getEditLog().registerBackupNode(\n            bnReg, nnReg);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {
            "oldValue": "[registration-NamenodeRegistration]",
            "newValue": "[bnReg-NamenodeRegistration, nnReg-NamenodeRegistration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-1073. Redesign the NameNode\u0027s storage layout for image checkpoints and edit logs to introduce transaction IDs and be more robust. Contributed by Todd Lipcon and Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1152295 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "29/07/11 9:28 AM",
          "commitName": "28e6a4e44a3e920dcaf858f9a74a6358226b3a63",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "26/07/11 10:59 PM",
          "commitNameOld": "0b12cc822ddd57e6ecf4f7047f6614419c34580b",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 2.44,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,19 @@\n-  void registerBackupNode(NamenodeRegistration registration)\n-    throws IOException {\n+  void registerBackupNode(NamenodeRegistration bnReg,\n+      NamenodeRegistration nnReg) throws IOException {\n     writeLock();\n     try {\n       if(getFSImage().getStorage().getNamespaceID() \n-         !\u003d registration.getNamespaceID())\n+         !\u003d bnReg.getNamespaceID())\n         throw new IOException(\"Incompatible namespaceIDs: \"\n             + \" Namenode namespaceID \u003d \"\n             + getFSImage().getStorage().getNamespaceID() + \"; \"\n-            + registration.getRole() +\n-            \" node namespaceID \u003d \" + registration.getNamespaceID());\n-      boolean regAllowed \u003d getEditLog().checkBackupRegistration(registration);\n-      if(!regAllowed)\n-        throw new IOException(\"Registration is not allowed. \" +\n-                              \"Another node is registered as a backup.\");\n+            + bnReg.getRole() +\n+            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n+      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n+        getFSImage().getEditLog().registerBackupNode(\n+            bnReg, nnReg);\n+      }\n     } finally {\n       writeUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void registerBackupNode(NamenodeRegistration bnReg,\n      NamenodeRegistration nnReg) throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d bnReg.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + bnReg.getRole() +\n            \" node namespaceID \u003d \" + bnReg.getNamespaceID());\n      if (bnReg.getRole() \u003d\u003d NamenodeRole.BACKUP) {\n        getFSImage().getEditLog().registerBackupNode(\n            bnReg, nnReg);\n      }\n    } finally {\n      writeUnlock();\n    }\n  }",
          "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,19 @@\n+  void registerBackupNode(NamenodeRegistration registration)\n+    throws IOException {\n+    writeLock();\n+    try {\n+      if(getFSImage().getStorage().getNamespaceID() \n+         !\u003d registration.getNamespaceID())\n+        throw new IOException(\"Incompatible namespaceIDs: \"\n+            + \" Namenode namespaceID \u003d \"\n+            + getFSImage().getStorage().getNamespaceID() + \"; \"\n+            + registration.getRole() +\n+            \" node namespaceID \u003d \" + registration.getNamespaceID());\n+      boolean regAllowed \u003d getEditLog().checkBackupRegistration(registration);\n+      if(!regAllowed)\n+        throw new IOException(\"Registration is not allowed. \" +\n+                              \"Another node is registered as a backup.\");\n+    } finally {\n+      writeUnlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  void registerBackupNode(NamenodeRegistration registration)\n    throws IOException {\n    writeLock();\n    try {\n      if(getFSImage().getStorage().getNamespaceID() \n         !\u003d registration.getNamespaceID())\n        throw new IOException(\"Incompatible namespaceIDs: \"\n            + \" Namenode namespaceID \u003d \"\n            + getFSImage().getStorage().getNamespaceID() + \"; \"\n            + registration.getRole() +\n            \" node namespaceID \u003d \" + registration.getNamespaceID());\n      boolean regAllowed \u003d getEditLog().checkBackupRegistration(registration);\n      if(!regAllowed)\n        throw new IOException(\"Registration is not allowed. \" +\n                              \"Another node is registered as a backup.\");\n    } finally {\n      writeUnlock();\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}