{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "GreedyReservationAgent.java",
  "functionName": "createReservation",
  "functionId": "createReservation___reservationId-ReservationId__user-String__plan-Plan__contract-ReservationDefinition",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/GreedyReservationAgent.java",
  "functionStartLine": 78,
  "functionEndLine": 101,
  "numCommitsSeen": 4,
  "timeTaken": 947,
  "changeHistory": [
    "156f24ead00436faad5d4aeef327a546392cd265"
  ],
  "changeHistoryShort": {
    "156f24ead00436faad5d4aeef327a546392cd265": "Yintroduced"
  },
  "changeHistoryDetails": {
    "156f24ead00436faad5d4aeef327a546392cd265": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3656. LowCost: A Cost-Based Placement Agent for YARN Reservations. (Jonathan Yaniv and Ishai Menache via curino)\n",
      "commitDate": "25/07/15 7:39 AM",
      "commitName": "156f24ead00436faad5d4aeef327a546392cd265",
      "commitAuthor": "ccurino",
      "diff": "@@ -0,0 +1,24 @@\n+  public boolean createReservation(ReservationId reservationId, String user,\n+      Plan plan, ReservationDefinition contract) throws PlanningException {\n+\n+    LOG.info(\"placing the following ReservationRequest: \" + contract);\n+\n+    try {\n+      boolean res \u003d\n+          planner.createReservation(reservationId, user, plan, contract);\n+\n+      if (res) {\n+        LOG.info(\"OUTCOME: SUCCESS, Reservation ID: \"\n+            + reservationId.toString() + \", Contract: \" + contract.toString());\n+      } else {\n+        LOG.info(\"OUTCOME: FAILURE, Reservation ID: \"\n+            + reservationId.toString() + \", Contract: \" + contract.toString());\n+      }\n+      return res;\n+    } catch (PlanningException e) {\n+      LOG.info(\"OUTCOME: FAILURE, Reservation ID: \" + reservationId.toString()\n+          + \", Contract: \" + contract.toString());\n+      throw e;\n+    }\n+\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean createReservation(ReservationId reservationId, String user,\n      Plan plan, ReservationDefinition contract) throws PlanningException {\n\n    LOG.info(\"placing the following ReservationRequest: \" + contract);\n\n    try {\n      boolean res \u003d\n          planner.createReservation(reservationId, user, plan, contract);\n\n      if (res) {\n        LOG.info(\"OUTCOME: SUCCESS, Reservation ID: \"\n            + reservationId.toString() + \", Contract: \" + contract.toString());\n      } else {\n        LOG.info(\"OUTCOME: FAILURE, Reservation ID: \"\n            + reservationId.toString() + \", Contract: \" + contract.toString());\n      }\n      return res;\n    } catch (PlanningException e) {\n      LOG.info(\"OUTCOME: FAILURE, Reservation ID: \" + reservationId.toString()\n          + \", Contract: \" + contract.toString());\n      throw e;\n    }\n\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/reservation/planning/GreedyReservationAgent.java"
    }
  }
}