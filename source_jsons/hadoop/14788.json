{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenFetcher.java",
  "functionName": "printTokensToString",
  "functionId": "printTokensToString___conf-Configuration(modifiers-final)__tokenFile-Path(modifiers-final)__verbose-boolean(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
  "functionStartLine": 217,
  "functionEndLine": 238,
  "numCommitsSeen": 60,
  "timeTaken": 4557,
  "changeHistory": [
    "2addebb94f592e46b261e2edd9e95a82e83bd761",
    "e24fe2641b4117601105fa097c8848d82b96b74c",
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a"
  ],
  "changeHistoryShort": {
    "2addebb94f592e46b261e2edd9e95a82e83bd761": "Ymultichange(Ymodifierchange,Ybodychange)",
    "e24fe2641b4117601105fa097c8848d82b96b74c": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2addebb94f592e46b261e2edd9e95a82e83bd761": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-13951. HDFS DelegationTokenFetcher can\u0027t print non-HDFS tokens in a tokenfile.\nContributed by Steve Loughran.\n",
      "commitDate": "11/10/18 12:03 PM",
      "commitName": "2addebb94f592e46b261e2edd9e95a82e83bd761",
      "commitAuthor": "Steve Loughran",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-13951. HDFS DelegationTokenFetcher can\u0027t print non-HDFS tokens in a tokenfile.\nContributed by Steve Loughran.\n",
          "commitDate": "11/10/18 12:03 PM",
          "commitName": "2addebb94f592e46b261e2edd9e95a82e83bd761",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 34.89,
          "commitsBetweenForRepo": 367,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  static String printTokensToString(\n+  public static String printTokensToString(\n       final Configuration conf,\n       final Path tokenFile,\n       final boolean verbose) throws IOException {\n     StringBuilder sbld \u003d new StringBuilder();\n     final String nl \u003d System.getProperty(\"line.separator\");\n-    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n-            0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n-      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n-              .getIdentifier()));\n-      id.readFields(in);\n-      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      TokenIdentifier tokenId \u003d token.decodeIdentifier();\n+\n+      String idStr;\n+      if (tokenId instanceof DelegationTokenIdentifier) {\n+        DelegationTokenIdentifier id \u003d (DelegationTokenIdentifier) tokenId;\n+        idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      } else {\n+        idStr \u003d tokenId.toString();\n+      }\n       sbld\n           .append(\"Token (\").append(idStr)\n           .append(\") for \").append(token.getService()).append(nl);\n     }\n     return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      TokenIdentifier tokenId \u003d token.decodeIdentifier();\n\n      String idStr;\n      if (tokenId instanceof DelegationTokenIdentifier) {\n        DelegationTokenIdentifier id \u003d (DelegationTokenIdentifier) tokenId;\n        idStr \u003d (verbose? id.toString() : id.toStringStable());\n      } else {\n        idStr \u003d tokenId.toString();\n      }\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13951. HDFS DelegationTokenFetcher can\u0027t print non-HDFS tokens in a tokenfile.\nContributed by Steve Loughran.\n",
          "commitDate": "11/10/18 12:03 PM",
          "commitName": "2addebb94f592e46b261e2edd9e95a82e83bd761",
          "commitAuthor": "Steve Loughran",
          "commitDateOld": "06/09/18 2:48 PM",
          "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
          "commitAuthorOld": "Giovanni Matteo Fumarola",
          "daysBetweenCommits": 34.89,
          "commitsBetweenForRepo": 367,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,19 +1,22 @@\n-  static String printTokensToString(\n+  public static String printTokensToString(\n       final Configuration conf,\n       final Path tokenFile,\n       final boolean verbose) throws IOException {\n     StringBuilder sbld \u003d new StringBuilder();\n     final String nl \u003d System.getProperty(\"line.separator\");\n-    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n-            0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n-      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n-              .getIdentifier()));\n-      id.readFields(in);\n-      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      TokenIdentifier tokenId \u003d token.decodeIdentifier();\n+\n+      String idStr;\n+      if (tokenId instanceof DelegationTokenIdentifier) {\n+        DelegationTokenIdentifier id \u003d (DelegationTokenIdentifier) tokenId;\n+        idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      } else {\n+        idStr \u003d tokenId.toString();\n+      }\n       sbld\n           .append(\"Token (\").append(idStr)\n           .append(\") for \").append(token.getService()).append(nl);\n     }\n     return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      TokenIdentifier tokenId \u003d token.decodeIdentifier();\n\n      String idStr;\n      if (tokenId instanceof DelegationTokenIdentifier) {\n        DelegationTokenIdentifier id \u003d (DelegationTokenIdentifier) tokenId;\n        idStr \u003d (verbose? id.toString() : id.toStringStable());\n      } else {\n        idStr \u003d tokenId.toString();\n      }\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {}
        }
      ]
    },
    "e24fe2641b4117601105fa097c8848d82b96b74c": {
      "type": "Ymultichange(Yrename,Yparameterchange,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
      "commitDate": "17/05/16 2:03 PM",
      "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/05/16 2:03 PM",
          "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "29/04/16 10:32 PM",
          "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 17.65,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  private static void printTokens(final Configuration conf,\n-                                  final Path tokenFile)\n-          throws IOException {\n+  static String printTokensToString(\n+      final Configuration conf,\n+      final Path tokenFile,\n+      final boolean verbose) throws IOException {\n+    StringBuilder sbld \u003d new StringBuilder();\n+    final String nl \u003d System.getProperty(\"line.separator\");\n     DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n             0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n       DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n               .getIdentifier()));\n       id.readFields(in);\n-      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      sbld\n+          .append(\"Token (\").append(idStr)\n+          .append(\") for \").append(token.getService()).append(nl);\n     }\n+    return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {
            "oldValue": "printTokens",
            "newValue": "printTokensToString"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/05/16 2:03 PM",
          "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "29/04/16 10:32 PM",
          "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 17.65,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  private static void printTokens(final Configuration conf,\n-                                  final Path tokenFile)\n-          throws IOException {\n+  static String printTokensToString(\n+      final Configuration conf,\n+      final Path tokenFile,\n+      final boolean verbose) throws IOException {\n+    StringBuilder sbld \u003d new StringBuilder();\n+    final String nl \u003d System.getProperty(\"line.separator\");\n     DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n             0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n       DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n               .getIdentifier()));\n       id.readFields(in);\n-      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      sbld\n+          .append(\"Token (\").append(idStr)\n+          .append(\") for \").append(token.getService()).append(nl);\n     }\n+    return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {
            "oldValue": "[conf-Configuration(modifiers-final), tokenFile-Path(modifiers-final)]",
            "newValue": "[conf-Configuration(modifiers-final), tokenFile-Path(modifiers-final), verbose-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/05/16 2:03 PM",
          "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "29/04/16 10:32 PM",
          "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 17.65,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  private static void printTokens(final Configuration conf,\n-                                  final Path tokenFile)\n-          throws IOException {\n+  static String printTokensToString(\n+      final Configuration conf,\n+      final Path tokenFile,\n+      final boolean verbose) throws IOException {\n+    StringBuilder sbld \u003d new StringBuilder();\n+    final String nl \u003d System.getProperty(\"line.separator\");\n     DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n             0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n       DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n               .getIdentifier()));\n       id.readFields(in);\n-      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      sbld\n+          .append(\"Token (\").append(idStr)\n+          .append(\") for \").append(token.getService()).append(nl);\n     }\n+    return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "String"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/05/16 2:03 PM",
          "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "29/04/16 10:32 PM",
          "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 17.65,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  private static void printTokens(final Configuration conf,\n-                                  final Path tokenFile)\n-          throws IOException {\n+  static String printTokensToString(\n+      final Configuration conf,\n+      final Path tokenFile,\n+      final boolean verbose) throws IOException {\n+    StringBuilder sbld \u003d new StringBuilder();\n+    final String nl \u003d System.getProperty(\"line.separator\");\n     DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n             0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n       DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n               .getIdentifier()));\n       id.readFields(in);\n-      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      sbld\n+          .append(\"Token (\").append(idStr)\n+          .append(\") for \").append(token.getService()).append(nl);\n     }\n+    return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {
            "oldValue": "[private, static]",
            "newValue": "[static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-9732, Improve DelegationTokenIdentifier.toString() for better logging. Contributed by Yongjun Zhang.\n",
          "commitDate": "17/05/16 2:03 PM",
          "commitName": "e24fe2641b4117601105fa097c8848d82b96b74c",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "29/04/16 10:32 PM",
          "commitNameOld": "2753185a010e70f8d9539f42151c79177781122d",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 17.65,
          "commitsBetweenForRepo": 112,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,19 @@\n-  private static void printTokens(final Configuration conf,\n-                                  final Path tokenFile)\n-          throws IOException {\n+  static String printTokensToString(\n+      final Configuration conf,\n+      final Path tokenFile,\n+      final boolean verbose) throws IOException {\n+    StringBuilder sbld \u003d new StringBuilder();\n+    final String nl \u003d System.getProperty(\"line.separator\");\n     DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n             0, null).createIdentifier();\n     for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n       DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n               .getIdentifier()));\n       id.readFields(in);\n-      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n+      sbld\n+          .append(\"Token (\").append(idStr)\n+          .append(\") for \").append(token.getService()).append(nl);\n     }\n+    return sbld.toString();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static String printTokensToString(\n      final Configuration conf,\n      final Path tokenFile,\n      final boolean verbose) throws IOException {\n    StringBuilder sbld \u003d new StringBuilder();\n    final String nl \u003d System.getProperty(\"line.separator\");\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      String idStr \u003d (verbose? id.toString() : id.toStringStable());\n      sbld\n          .append(\"Token (\").append(idStr)\n          .append(\") for \").append(token.getService()).append(nl);\n    }\n    return sbld.toString();\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java",
          "extendedDetails": {}
        }
      ]
    },
    "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5570. Deprecate hftp / hsftp and replace them with webhdfs / swebhdfs. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 10:28 AM",
      "commitName": "fb1d7fb596b8e8bb9a5f141c89acb1949bade87a",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,12 @@\n+  private static void printTokens(final Configuration conf,\n+                                  final Path tokenFile)\n+          throws IOException {\n+    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n+            0, null).createIdentifier();\n+    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n+      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n+              .getIdentifier()));\n+      id.readFields(in);\n+      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void printTokens(final Configuration conf,\n                                  final Path tokenFile)\n          throws IOException {\n    DelegationTokenIdentifier id \u003d new DelegationTokenSecretManager(0, 0, 0,\n            0, null).createIdentifier();\n    for (Token\u003c?\u003e token : readTokens(tokenFile, conf)) {\n      DataInputStream in \u003d new DataInputStream(new ByteArrayInputStream(token\n              .getIdentifier()));\n      id.readFields(in);\n      System.out.println(\"Token (\" + id + \") for \" + token.getService());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/DelegationTokenFetcher.java"
    }
  }
}