{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBHelperClient.java",
  "functionName": "convertErasureCodingPolicy",
  "functionId": "convertErasureCodingPolicy___proto-ErasureCodingPolicyProto",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
  "functionStartLine": 3209,
  "functionEndLine": 3228,
  "numCommitsSeen": 109,
  "timeTaken": 4606,
  "changeHistory": [
    "e565b5277d5b890dad107fe85e295a3907e4bfc1",
    "200b11368d3954138a9bce128c8fa763b4a503a1",
    "966b1b5b44103f3e3952da45da264d76fb3ac384",
    "7600e3c48ff2043654dbe9f415a186a336b5ea6c"
  ],
  "changeHistoryShort": {
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": "Ybodychange",
    "200b11368d3954138a9bce128c8fa763b4a503a1": "Ybodychange",
    "966b1b5b44103f3e3952da45da264d76fb3ac384": "Ymultichange(Yparameterchange,Ybodychange)",
    "7600e3c48ff2043654dbe9f415a186a336b5ea6c": "Ybodychange"
  },
  "changeHistoryDetails": {
    "e565b5277d5b890dad107fe85e295a3907e4bfc1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12682. ECAdmin -listPolicies will always show SystemErasureCodingPolicies state as DISABLED.\n",
      "commitDate": "02/11/17 9:27 PM",
      "commitName": "e565b5277d5b890dad107fe85e295a3907e4bfc1",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "31/10/17 9:44 AM",
      "commitNameOld": "d015e0bbd5416943cb4875274e67b7077c00e54b",
      "commitAuthorOld": "Chris Douglas",
      "daysBetweenCommits": 2.49,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,20 @@\n   public static ErasureCodingPolicy convertErasureCodingPolicy(\n       ErasureCodingPolicyProto proto) {\n     final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n     ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n     if (policy \u003d\u003d null) {\n       // If it\u0027s not a built-in policy, populate from the optional PB fields.\n       // The optional fields are required in this case.\n       Preconditions.checkArgument(proto.hasName(),\n           \"Missing name field in ErasureCodingPolicy proto\");\n       Preconditions.checkArgument(proto.hasSchema(),\n           \"Missing schema field in ErasureCodingPolicy proto\");\n       Preconditions.checkArgument(proto.hasCellSize(),\n           \"Missing cellsize field in ErasureCodingPolicy proto\");\n-      Preconditions.checkArgument(proto.hasState(),\n-          \"Missing state field in ErasureCodingPolicy proto\");\n \n       return new ErasureCodingPolicy(proto.getName(),\n           convertECSchema(proto.getSchema()),\n-          proto.getCellSize(), id, convertECState(proto.getState()));\n+          proto.getCellSize(), id);\n     }\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ErasureCodingPolicy convertErasureCodingPolicy(\n      ErasureCodingPolicyProto proto) {\n    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n    if (policy \u003d\u003d null) {\n      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n      // The optional fields are required in this case.\n      Preconditions.checkArgument(proto.hasName(),\n          \"Missing name field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasSchema(),\n          \"Missing schema field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasCellSize(),\n          \"Missing cellsize field in ErasureCodingPolicy proto\");\n\n      return new ErasureCodingPolicy(proto.getName(),\n          convertECSchema(proto.getSchema()),\n          proto.getCellSize(), id);\n    }\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "200b11368d3954138a9bce128c8fa763b4a503a1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12258. ec -listPolicies should list all policies in system, no matter it\u0027s enabled or disabled. Contributed by Wei Zhou.\n",
      "commitDate": "30/08/17 12:28 AM",
      "commitName": "200b11368d3954138a9bce128c8fa763b4a503a1",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "23/08/17 5:06 PM",
      "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 6.31,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n   public static ErasureCodingPolicy convertErasureCodingPolicy(\n       ErasureCodingPolicyProto proto) {\n     final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n     ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n     if (policy \u003d\u003d null) {\n       // If it\u0027s not a built-in policy, populate from the optional PB fields.\n       // The optional fields are required in this case.\n       Preconditions.checkArgument(proto.hasName(),\n           \"Missing name field in ErasureCodingPolicy proto\");\n       Preconditions.checkArgument(proto.hasSchema(),\n           \"Missing schema field in ErasureCodingPolicy proto\");\n       Preconditions.checkArgument(proto.hasCellSize(),\n           \"Missing cellsize field in ErasureCodingPolicy proto\");\n+      Preconditions.checkArgument(proto.hasState(),\n+          \"Missing state field in ErasureCodingPolicy proto\");\n \n       return new ErasureCodingPolicy(proto.getName(),\n           convertECSchema(proto.getSchema()),\n-          proto.getCellSize(), id);\n+          proto.getCellSize(), id, convertECState(proto.getState()));\n     }\n     return policy;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ErasureCodingPolicy convertErasureCodingPolicy(\n      ErasureCodingPolicyProto proto) {\n    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n    if (policy \u003d\u003d null) {\n      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n      // The optional fields are required in this case.\n      Preconditions.checkArgument(proto.hasName(),\n          \"Missing name field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasSchema(),\n          \"Missing schema field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasCellSize(),\n          \"Missing cellsize field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasState(),\n          \"Missing state field in ErasureCodingPolicy proto\");\n\n      return new ErasureCodingPolicy(proto.getName(),\n          convertECSchema(proto.getSchema()),\n          proto.getCellSize(), id, convertECState(proto.getState()));\n    }\n    return policy;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    },
    "966b1b5b44103f3e3952da45da264d76fb3ac384": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-11565. Use compact identifiers for built-in ECPolicies in HdfsFileStatus.\n",
      "commitDate": "12/04/17 12:24 PM",
      "commitName": "966b1b5b44103f3e3952da45da264d76fb3ac384",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-11565. Use compact identifiers for built-in ECPolicies in HdfsFileStatus.\n",
          "commitDate": "12/04/17 12:24 PM",
          "commitName": "966b1b5b44103f3e3952da45da264d76fb3ac384",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "11/04/17 10:03 PM",
          "commitNameOld": "23b1a7bdf1b546c1e29d7010cf139b6d700461fc",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.6,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,20 @@\n   public static ErasureCodingPolicy convertErasureCodingPolicy(\n-      ErasureCodingPolicyProto policy) {\n-    return new ErasureCodingPolicy(policy.getName(),\n-        convertECSchema(policy.getSchema()),\n-        policy.getCellSize(), (byte) policy.getId());\n+      ErasureCodingPolicyProto proto) {\n+    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n+    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n+    if (policy \u003d\u003d null) {\n+      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n+      // The optional fields are required in this case.\n+      Preconditions.checkArgument(proto.hasName(),\n+          \"Missing name field in ErasureCodingPolicy proto\");\n+      Preconditions.checkArgument(proto.hasSchema(),\n+          \"Missing schema field in ErasureCodingPolicy proto\");\n+      Preconditions.checkArgument(proto.hasCellSize(),\n+          \"Missing cellsize field in ErasureCodingPolicy proto\");\n+\n+      return new ErasureCodingPolicy(proto.getName(),\n+          convertECSchema(proto.getSchema()),\n+          proto.getCellSize(), id);\n+    }\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ErasureCodingPolicy convertErasureCodingPolicy(\n      ErasureCodingPolicyProto proto) {\n    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n    if (policy \u003d\u003d null) {\n      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n      // The optional fields are required in this case.\n      Preconditions.checkArgument(proto.hasName(),\n          \"Missing name field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasSchema(),\n          \"Missing schema field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasCellSize(),\n          \"Missing cellsize field in ErasureCodingPolicy proto\");\n\n      return new ErasureCodingPolicy(proto.getName(),\n          convertECSchema(proto.getSchema()),\n          proto.getCellSize(), id);\n    }\n    return policy;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {
            "oldValue": "[policy-ErasureCodingPolicyProto]",
            "newValue": "[proto-ErasureCodingPolicyProto]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-11565. Use compact identifiers for built-in ECPolicies in HdfsFileStatus.\n",
          "commitDate": "12/04/17 12:24 PM",
          "commitName": "966b1b5b44103f3e3952da45da264d76fb3ac384",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "11/04/17 10:03 PM",
          "commitNameOld": "23b1a7bdf1b546c1e29d7010cf139b6d700461fc",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.6,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,20 @@\n   public static ErasureCodingPolicy convertErasureCodingPolicy(\n-      ErasureCodingPolicyProto policy) {\n-    return new ErasureCodingPolicy(policy.getName(),\n-        convertECSchema(policy.getSchema()),\n-        policy.getCellSize(), (byte) policy.getId());\n+      ErasureCodingPolicyProto proto) {\n+    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n+    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n+    if (policy \u003d\u003d null) {\n+      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n+      // The optional fields are required in this case.\n+      Preconditions.checkArgument(proto.hasName(),\n+          \"Missing name field in ErasureCodingPolicy proto\");\n+      Preconditions.checkArgument(proto.hasSchema(),\n+          \"Missing schema field in ErasureCodingPolicy proto\");\n+      Preconditions.checkArgument(proto.hasCellSize(),\n+          \"Missing cellsize field in ErasureCodingPolicy proto\");\n+\n+      return new ErasureCodingPolicy(proto.getName(),\n+          convertECSchema(proto.getSchema()),\n+          proto.getCellSize(), id);\n+    }\n+    return policy;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ErasureCodingPolicy convertErasureCodingPolicy(\n      ErasureCodingPolicyProto proto) {\n    final byte id \u003d (byte) (proto.getId() \u0026 0xFF);\n    ErasureCodingPolicy policy \u003d SystemErasureCodingPolicies.getByID(id);\n    if (policy \u003d\u003d null) {\n      // If it\u0027s not a built-in policy, populate from the optional PB fields.\n      // The optional fields are required in this case.\n      Preconditions.checkArgument(proto.hasName(),\n          \"Missing name field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasSchema(),\n          \"Missing schema field in ErasureCodingPolicy proto\");\n      Preconditions.checkArgument(proto.hasCellSize(),\n          \"Missing cellsize field in ErasureCodingPolicy proto\");\n\n      return new ErasureCodingPolicy(proto.getName(),\n          convertECSchema(proto.getSchema()),\n          proto.getCellSize(), id);\n    }\n    return policy;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
          "extendedDetails": {}
        }
      ]
    },
    "7600e3c48ff2043654dbe9f415a186a336b5ea6c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7866. Erasure coding: NameNode manages multiple erasure coding policies. Contributed by Rui Li.\n",
      "commitDate": "08/03/16 10:30 PM",
      "commitName": "7600e3c48ff2043654dbe9f415a186a336b5ea6c",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "24/01/16 2:19 PM",
      "commitNameOld": "10a2bc0dffaece216eb9a6bac3236a086b9ece31",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 44.34,
      "commitsBetweenForRepo": 311,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public static ErasureCodingPolicy convertErasureCodingPolicy(\n       ErasureCodingPolicyProto policy) {\n     return new ErasureCodingPolicy(policy.getName(),\n         convertECSchema(policy.getSchema()),\n-        policy.getCellSize());\n+        policy.getCellSize(), (byte) policy.getId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ErasureCodingPolicy convertErasureCodingPolicy(\n      ErasureCodingPolicyProto policy) {\n    return new ErasureCodingPolicy(policy.getName(),\n        convertECSchema(policy.getSchema()),\n        policy.getCellSize(), (byte) policy.getId());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-client/src/main/java/org/apache/hadoop/hdfs/protocolPB/PBHelperClient.java",
      "extendedDetails": {}
    }
  }
}