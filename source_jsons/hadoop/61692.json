{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Apps.java",
  "functionName": "setEnvFromInputProperty",
  "functionId": "setEnvFromInputProperty___env-Map__String,String____propName-String__defaultPropValue-String__conf-Configuration__classPathSeparator-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java",
  "functionStartLine": 170,
  "functionEndLine": 191,
  "numCommitsSeen": 19,
  "timeTaken": 1335,
  "changeHistory": [
    "4571351cccf6d4977469d3d623cf045b06a5f5f0"
  ],
  "changeHistoryShort": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4571351cccf6d4977469d3d623cf045b06a5f5f0": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-7069. Add ability to specify user environment variables individually. Contributed by Jim Brennan\n",
      "commitDate": "12/04/18 9:12 AM",
      "commitName": "4571351cccf6d4977469d3d623cf045b06a5f5f0",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,22 @@\n+  public static void setEnvFromInputProperty(Map\u003cString, String\u003e env,\n+      String propName, String defaultPropValue, Configuration conf,\n+      String classPathSeparator) {\n+\n+    String envString \u003d conf.get(propName, defaultPropValue);\n+\n+    // Get k,v pairs from string into a tmp env. Note that we don\u0027t want\n+    // to expand the env var values, because we will do that below -\n+    // don\u0027t want to do it twice.\n+    Map\u003cString, String\u003e tmpEnv \u003d new HashMap\u003cString, String\u003e();\n+    Apps.setEnvFromInputStringNoExpand(tmpEnv, envString, classPathSeparator);\n+\n+    // Get map of props with prefix propName.\n+    // (e.g., map.reduce.env.ENV_VAR_NAME\u003dvalue)\n+    Map\u003cString, String\u003e inputMap \u003d conf.getPropsWithPrefix(propName + \".\");\n+\n+    // Entries from map should override entries from input string.\n+    tmpEnv.putAll(inputMap);\n+\n+    // Add them to the environment\n+    setEnvFromInputStringMap(env, tmpEnv, classPathSeparator);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void setEnvFromInputProperty(Map\u003cString, String\u003e env,\n      String propName, String defaultPropValue, Configuration conf,\n      String classPathSeparator) {\n\n    String envString \u003d conf.get(propName, defaultPropValue);\n\n    // Get k,v pairs from string into a tmp env. Note that we don\u0027t want\n    // to expand the env var values, because we will do that below -\n    // don\u0027t want to do it twice.\n    Map\u003cString, String\u003e tmpEnv \u003d new HashMap\u003cString, String\u003e();\n    Apps.setEnvFromInputStringNoExpand(tmpEnv, envString, classPathSeparator);\n\n    // Get map of props with prefix propName.\n    // (e.g., map.reduce.env.ENV_VAR_NAME\u003dvalue)\n    Map\u003cString, String\u003e inputMap \u003d conf.getPropsWithPrefix(propName + \".\");\n\n    // Entries from map should override entries from input string.\n    tmpEnv.putAll(inputMap);\n\n    // Add them to the environment\n    setEnvFromInputStringMap(env, tmpEnv, classPathSeparator);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/Apps.java"
    }
  }
}