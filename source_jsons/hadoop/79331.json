{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "unTarUsingJava",
  "functionId": "unTarUsingJava___inputStream-InputStream__untarDir-File__gzipped-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 943,
  "functionEndLine": 960,
  "numCommitsSeen": 52,
  "timeTaken": 1429,
  "changeHistory": [
    "57198bc51122a36db8cb4788fcb7b55edc788b3b",
    "7288b08330001102f944124d18e02bf0585d3e96"
  ],
  "changeHistoryShort": {
    "57198bc51122a36db8cb4788fcb7b55edc788b3b": "Ybodychange",
    "7288b08330001102f944124d18e02bf0585d3e96": "Yintroduced"
  },
  "changeHistoryDetails": {
    "57198bc51122a36db8cb4788fcb7b55edc788b3b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15962. The buffer size is small when unpacking tar archives. Contributed by BELUGA BEHR.\n",
      "commitDate": "27/12/18 10:38 PM",
      "commitName": "57198bc51122a36db8cb4788fcb7b55edc788b3b",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/10/18 9:51 PM",
      "commitNameOld": "7b57f2f71fbaa5af4897309597cca70a95b04edd",
      "commitAuthorOld": "Takanobu Asanuma",
      "daysBetweenCommits": 78.07,
      "commitsBetweenForRepo": 608,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,18 @@\n   private static void unTarUsingJava(InputStream inputStream, File untarDir,\n                                      boolean gzipped) throws IOException {\n     TarArchiveInputStream tis \u003d null;\n     try {\n       if (gzipped) {\n-        inputStream \u003d new BufferedInputStream(new GZIPInputStream(\n-            inputStream));\n-      } else {\n-        inputStream \u003d\n-            new BufferedInputStream(inputStream);\n+        inputStream \u003d new GZIPInputStream(inputStream);\n       }\n-\n+      inputStream \u003d new BufferedInputStream(inputStream);\n       tis \u003d new TarArchiveInputStream(inputStream);\n \n       for (TarArchiveEntry entry \u003d tis.getNextTarEntry(); entry !\u003d null;) {\n         unpackEntries(tis, entry, untarDir);\n         entry \u003d tis.getNextTarEntry();\n       }\n     } finally {\n       IOUtils.cleanupWithLogger(LOG, tis, inputStream);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static void unTarUsingJava(InputStream inputStream, File untarDir,\n                                     boolean gzipped) throws IOException {\n    TarArchiveInputStream tis \u003d null;\n    try {\n      if (gzipped) {\n        inputStream \u003d new GZIPInputStream(inputStream);\n      }\n      inputStream \u003d new BufferedInputStream(inputStream);\n      tis \u003d new TarArchiveInputStream(inputStream);\n\n      for (TarArchiveEntry entry \u003d tis.getNextTarEntry(); entry !\u003d null;) {\n        unpackEntries(tis, entry, untarDir);\n        entry \u003d tis.getNextTarEntry();\n      }\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, tis, inputStream);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
      "extendedDetails": {}
    },
    "7288b08330001102f944124d18e02bf0585d3e96": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2185. Use pipes when localizing archives. Contributed by Miklos Szegedi\n",
      "commitDate": "31/01/18 7:39 AM",
      "commitName": "7288b08330001102f944124d18e02bf0585d3e96",
      "commitAuthor": "Jason Lowe",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void unTarUsingJava(InputStream inputStream, File untarDir,\n+                                     boolean gzipped) throws IOException {\n+    TarArchiveInputStream tis \u003d null;\n+    try {\n+      if (gzipped) {\n+        inputStream \u003d new BufferedInputStream(new GZIPInputStream(\n+            inputStream));\n+      } else {\n+        inputStream \u003d\n+            new BufferedInputStream(inputStream);\n+      }\n+\n+      tis \u003d new TarArchiveInputStream(inputStream);\n+\n+      for (TarArchiveEntry entry \u003d tis.getNextTarEntry(); entry !\u003d null;) {\n+        unpackEntries(tis, entry, untarDir);\n+        entry \u003d tis.getNextTarEntry();\n+      }\n+    } finally {\n+      IOUtils.cleanupWithLogger(LOG, tis, inputStream);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void unTarUsingJava(InputStream inputStream, File untarDir,\n                                     boolean gzipped) throws IOException {\n    TarArchiveInputStream tis \u003d null;\n    try {\n      if (gzipped) {\n        inputStream \u003d new BufferedInputStream(new GZIPInputStream(\n            inputStream));\n      } else {\n        inputStream \u003d\n            new BufferedInputStream(inputStream);\n      }\n\n      tis \u003d new TarArchiveInputStream(inputStream);\n\n      for (TarArchiveEntry entry \u003d tis.getNextTarEntry(); entry !\u003d null;) {\n        unpackEntries(tis, entry, untarDir);\n        entry \u003d tis.getNextTarEntry();\n      }\n    } finally {\n      IOUtils.cleanupWithLogger(LOG, tis, inputStream);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}