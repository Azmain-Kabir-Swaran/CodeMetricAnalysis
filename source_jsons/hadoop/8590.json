{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSImageFormatPBINode.java",
  "functionName": "loadFilesUnderConstructionSection",
  "functionId": "loadFilesUnderConstructionSection___in-InputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
  "functionStartLine": 435,
  "functionEndLine": 445,
  "numCommitsSeen": 63,
  "timeTaken": 2983,
  "changeHistory": [
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da": "Ybodychange",
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "864f878d5912c82f3204f1582cfb7eb7c9f1a1da": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10763. Open files can leak permanently due to inconsistent lease update. Contributed by Kihwal Lee.\n",
      "commitDate": "15/08/16 3:28 PM",
      "commitName": "864f878d5912c82f3204f1582cfb7eb7c9f1a1da",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "15/06/16 10:35 PM",
      "commitNameOld": "2449db507d84b1c4fac70a800fb2ad8905cf3db7",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 60.7,
      "commitsBetweenForRepo": 534,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,11 @@\n     void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n+      // Leases are added when the inode section is loaded. This section is\n+      // still read in for compatibility reasons.\n       while (true) {\n         FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n             .parseDelimitedFrom(in);\n         if (entry \u003d\u003d null) {\n           break;\n         }\n-        // update the lease manager\n-        INodeFile file \u003d dir.getInode(entry.getInodeId()).asFile();\n-        FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n-        Preconditions.checkState(uc !\u003d null); // file must be under-construction\n-        fsn.leaseManager.addLease(uc.getClientName(),\n-                entry.getInodeId());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n      // Leases are added when the inode section is loaded. This section is\n      // still read in for compatibility reasons.\n      while (true) {\n        FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n            .parseDelimitedFrom(in);\n        if (entry \u003d\u003d null) {\n          break;\n        }\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
      "extendedDetails": {}
    },
    "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6757. Simplify lease manager with INodeID. Contributed by Haohui Mai.\n",
      "commitDate": "08/05/15 11:04 PM",
      "commitName": "00fe1ed3a4b3ee35fe24be257ec36445d2f44d63",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "21/02/15 3:38 PM",
      "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 76.27,
      "commitsBetweenForRepo": 731,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n     void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n       while (true) {\n         FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n             .parseDelimitedFrom(in);\n         if (entry \u003d\u003d null) {\n           break;\n         }\n         // update the lease manager\n         INodeFile file \u003d dir.getInode(entry.getInodeId()).asFile();\n         FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n         Preconditions.checkState(uc !\u003d null); // file must be under-construction\n-        fsn.leaseManager.addLease(uc.getClientName(), entry.getFullPath());\n+        fsn.leaseManager.addLease(uc.getClientName(),\n+                entry.getInodeId());\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n      while (true) {\n        FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n            .parseDelimitedFrom(in);\n        if (entry \u003d\u003d null) {\n          break;\n        }\n        // update the lease manager\n        INodeFile file \u003d dir.getInode(entry.getInodeId()).asFile();\n        FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        Preconditions.checkState(uc !\u003d null); // file must be under-construction\n        fsn.leaseManager.addLease(uc.getClientName(),\n                entry.getInodeId());\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,14 @@\n+    void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n+      while (true) {\n+        FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n+            .parseDelimitedFrom(in);\n+        if (entry \u003d\u003d null) {\n+          break;\n+        }\n+        // update the lease manager\n+        INodeFile file \u003d dir.getInode(entry.getInodeId()).asFile();\n+        FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n+        Preconditions.checkState(uc !\u003d null); // file must be under-construction\n+        fsn.leaseManager.addLease(uc.getClientName(), entry.getFullPath());\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    void loadFilesUnderConstructionSection(InputStream in) throws IOException {\n      while (true) {\n        FileUnderConstructionEntry entry \u003d FileUnderConstructionEntry\n            .parseDelimitedFrom(in);\n        if (entry \u003d\u003d null) {\n          break;\n        }\n        // update the lease manager\n        INodeFile file \u003d dir.getInode(entry.getInodeId()).asFile();\n        FileUnderConstructionFeature uc \u003d file.getFileUnderConstructionFeature();\n        Preconditions.checkState(uc !\u003d null); // file must be under-construction\n        fsn.leaseManager.addLease(uc.getClientName(), entry.getFullPath());\n      }\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSImageFormatPBINode.java"
    }
  }
}