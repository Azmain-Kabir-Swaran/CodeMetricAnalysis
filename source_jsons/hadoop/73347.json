{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DecayRpcScheduler.java",
  "functionName": "getTopCallers",
  "functionId": "getTopCallers___n-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
  "functionStartLine": 953,
  "functionEndLine": 966,
  "numCommitsSeen": 19,
  "timeTaken": 1771,
  "changeHistory": [
    "129576f628d370def74e56112aba3a93e97bbf70",
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833"
  ],
  "changeHistoryShort": {
    "129576f628d370def74e56112aba3a93e97bbf70": "Ybodychange",
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": "Ybodychange",
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833": "Yintroduced"
  },
  "changeHistoryDetails": {
    "129576f628d370def74e56112aba3a93e97bbf70": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14403. Cost-based extension to the RPC Fair Call Queue. Contributed by Christopher Gregorian.\n",
      "commitDate": "24/06/19 12:09 PM",
      "commitName": "129576f628d370def74e56112aba3a93e97bbf70",
      "commitAuthor": "Christopher Gregorian",
      "commitDateOld": "23/05/19 10:28 AM",
      "commitNameOld": "f96a2df38d889f29314c57f4d94227b2e419a11f",
      "commitAuthorOld": "Christopher Gregorian",
      "daysBetweenCommits": 32.07,
      "commitsBetweenForRepo": 314,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private TopN getTopCallers(int n) {\n     TopN topNCallers \u003d new TopN(n);\n     Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n-        callCounts.entrySet().iterator();\n+        callCosts.entrySet().iterator();\n     while (it.hasNext()) {\n       Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n       String caller \u003d entry.getKey().toString();\n-      Long count \u003d entry.getValue().get(1).get();\n-      if (count \u003e 0) {\n-        topNCallers.offer(new NameValuePair(caller, count));\n+      Long cost \u003d entry.getValue().get(1).get();\n+      if (cost \u003e 0) {\n+        topNCallers.offer(new NameValuePair(caller, cost));\n       }\n     }\n     return topNCallers;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TopN getTopCallers(int n) {\n    TopN topNCallers \u003d new TopN(n);\n    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n        callCosts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n      String caller \u003d entry.getKey().toString();\n      Long cost \u003d entry.getValue().get(1).get();\n      if (cost \u003e 0) {\n        topNCallers.offer(new NameValuePair(caller, cost));\n      }\n    }\n    return topNCallers;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13197. Add non-decayed call metrics for DecayRpcScheduler. Contributed by Xiaoyu Yao.\n",
      "commitDate": "27/05/16 6:07 PM",
      "commitName": "4ca8859583839761663fc1fc1de1b3ce2e3fc5b5",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "17/05/16 2:58 PM",
      "commitNameOld": "94784848456a92a6502f3a3c0074e44fba4b19c9",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 10.13,
      "commitsBetweenForRepo": 84,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   private TopN getTopCallers(int n) {\n     TopN topNCallers \u003d new TopN(n);\n-    Iterator\u003cMap.Entry\u003cObject, AtomicLong\u003e\u003e it \u003d\n+    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n         callCounts.entrySet().iterator();\n     while (it.hasNext()) {\n-      Map.Entry\u003cObject, AtomicLong\u003e entry \u003d it.next();\n+      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n       String caller \u003d entry.getKey().toString();\n-      Long count \u003d entry.getValue().get();\n+      Long count \u003d entry.getValue().get(1).get();\n       if (count \u003e 0) {\n         topNCallers.offer(new NameValuePair(caller, count));\n       }\n     }\n     return topNCallers;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private TopN getTopCallers(int n) {\n    TopN topNCallers \u003d new TopN(n);\n    Iterator\u003cMap.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e\u003e it \u003d\n        callCounts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, List\u003cAtomicLong\u003e\u003e entry \u003d it.next();\n      String caller \u003d entry.getKey().toString();\n      Long count \u003d entry.getValue().get(1).get();\n      if (count \u003e 0) {\n        topNCallers.offer(new NameValuePair(caller, count));\n      }\n    }\n    return topNCallers;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java",
      "extendedDetails": {}
    },
    "5bd7b592e5fbe4d448fd127c15d29f3121b8a833": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12985. Support MetricsSource interface for DecayRpcScheduler Metrics. Contributed by Xiaoyu Yao.\n",
      "commitDate": "20/04/16 11:10 PM",
      "commitName": "5bd7b592e5fbe4d448fd127c15d29f3121b8a833",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,14 @@\n+  private TopN getTopCallers(int n) {\n+    TopN topNCallers \u003d new TopN(n);\n+    Iterator\u003cMap.Entry\u003cObject, AtomicLong\u003e\u003e it \u003d\n+        callCounts.entrySet().iterator();\n+    while (it.hasNext()) {\n+      Map.Entry\u003cObject, AtomicLong\u003e entry \u003d it.next();\n+      String caller \u003d entry.getKey().toString();\n+      Long count \u003d entry.getValue().get();\n+      if (count \u003e 0) {\n+        topNCallers.offer(new NameValuePair(caller, count));\n+      }\n+    }\n+    return topNCallers;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private TopN getTopCallers(int n) {\n    TopN topNCallers \u003d new TopN(n);\n    Iterator\u003cMap.Entry\u003cObject, AtomicLong\u003e\u003e it \u003d\n        callCounts.entrySet().iterator();\n    while (it.hasNext()) {\n      Map.Entry\u003cObject, AtomicLong\u003e entry \u003d it.next();\n      String caller \u003d entry.getKey().toString();\n      Long count \u003d entry.getValue().get();\n      if (count \u003e 0) {\n        topNCallers.offer(new NameValuePair(caller, count));\n      }\n    }\n    return topNCallers;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/DecayRpcScheduler.java"
    }
  }
}