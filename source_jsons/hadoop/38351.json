{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContextImpl.java",
  "functionName": "getEpoch",
  "functionId": "getEpoch",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java",
  "functionStartLine": 493,
  "functionEndLine": 495,
  "numCommitsSeen": 60,
  "timeTaken": 1895,
  "changeHistory": [
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
    "3122daa80261b466e309e88d88d1e2c030525e3f",
    "b0c51504c494847a5d0e98d212660297ed43ba56"
  ],
  "changeHistoryShort": {
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": "Ybodychange",
    "3122daa80261b466e309e88d88d1e2c030525e3f": "Yreturntypechange",
    "b0c51504c494847a5d0e98d212660297ed43ba56": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2865. Fixed RM to always create a new RMContext when transtions from StandBy to Active. Contributed by Rohith Sharmaks\n",
      "commitDate": "19/11/14 7:48 PM",
      "commitName": "9cb8b75ba57f18639492bfa3b7e7c11c00bb3d3b",
      "commitAuthor": "Jian He",
      "commitDateOld": "27/10/14 3:49 PM",
      "commitNameOld": "a16d022ca4313a41425c8e97841c841a2d6f2f54",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 23.21,
      "commitsBetweenForRepo": 242,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n   public long getEpoch() {\n-    return this.epoch;\n+    return activeServiceContext.getEpoch();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long getEpoch() {\n    return activeServiceContext.getEpoch();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java",
      "extendedDetails": {}
    },
    "3122daa80261b466e309e88d88d1e2c030525e3f": {
      "type": "Yreturntypechange",
      "commitMessage": "YARN-2229. Changed the integer field of ContainerId to be long type. Contributed by Tsuyoshi OZAWA\n",
      "commitDate": "12/09/14 10:33 AM",
      "commitName": "3122daa80261b466e309e88d88d1e2c030525e3f",
      "commitAuthor": "Jian He",
      "commitDateOld": "11/09/14 7:04 PM",
      "commitNameOld": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthorOld": "junping_du",
      "daysBetweenCommits": 0.64,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,3 @@\n-  public int getEpoch() {\n+  public long getEpoch() {\n     return this.epoch;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public long getEpoch() {\n    return this.epoch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java",
      "extendedDetails": {
        "oldValue": "int",
        "newValue": "long"
      }
    },
    "b0c51504c494847a5d0e98d212660297ed43ba56": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2052. Embedded an epoch number in container id to ensure the uniqueness of container id after RM restarts. Contributed by Tsuyoshi OZAWA\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1606557 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/06/14 11:24 AM",
      "commitName": "b0c51504c494847a5d0e98d212660297ed43ba56",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,3 @@\n+  public int getEpoch() {\n+    return this.epoch;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int getEpoch() {\n    return this.epoch;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/RMContextImpl.java"
    }
  }
}