{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RPC.java",
  "functionName": "getProtocolEngine",
  "functionId": "getProtocolEngine___protocol-Class__?____conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
  "functionStartLine": 209,
  "functionEndLine": 219,
  "numCommitsSeen": 61,
  "timeTaken": 2855,
  "changeHistory": [
    "d355573f5681f43e760a1bc23ebed553bd35fca5",
    "62a9667136ebd8a048f556b534fcff4fdaf8e2ec",
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed",
    "a6c79f92d503c664f2d109355b719124f29a30e5",
    "12289efa2bc0f286ededc4c979cee0d304fadb0b",
    "68cb2b01b68a1a8bc160c5361f13fdc92e888b33",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "2ee80854a5d113cfe654643481ff8ca2e5978003",
    "6c842ad4b5cbb730bb02c6a586b604ea85665cf9"
  ],
  "changeHistoryShort": {
    "d355573f5681f43e760a1bc23ebed553bd35fca5": "Ybodychange",
    "62a9667136ebd8a048f556b534fcff4fdaf8e2ec": "Ybodychange",
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed": "Ybodychange",
    "a6c79f92d503c664f2d109355b719124f29a30e5": "Ybodychange",
    "12289efa2bc0f286ededc4c979cee0d304fadb0b": "Ymodifierchange",
    "68cb2b01b68a1a8bc160c5361f13fdc92e888b33": "Ymultichange(Yparameterchange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "2ee80854a5d113cfe654643481ff8ca2e5978003": "Ybodychange",
    "6c842ad4b5cbb730bb02c6a586b604ea85665cf9": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d355573f5681f43e760a1bc23ebed553bd35fca5": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-13218. Migrate other Hadoop side tests to prepare for removing WritableRPCEngine. Contributed by Wei Zhou and Kai Zheng\"\n\nThis reverts commit 62a9667136ebd8a048f556b534fcff4fdaf8e2ec\n",
      "commitDate": "07/09/16 2:50 PM",
      "commitName": "d355573f5681f43e760a1bc23ebed553bd35fca5",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "07/09/16 2:05 AM",
      "commitNameOld": "62a9667136ebd8a048f556b534fcff4fdaf8e2ec",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 0.53,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n       Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n-                                    ProtobufRpcEngine.class);\n+                                    WritableRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n      Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {}
    },
    "62a9667136ebd8a048f556b534fcff4fdaf8e2ec": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13218. Migrate other Hadoop side tests to prepare for removing WritableRPCEngine. Contributed by Wei Zhou and Kai Zheng\n",
      "commitDate": "07/09/16 2:05 AM",
      "commitName": "62a9667136ebd8a048f556b534fcff4fdaf8e2ec",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "31/05/16 5:41 PM",
      "commitNameOld": "93d8a7f2a2d72a1719d02b1ed90678397900b6ed",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 98.35,
      "commitsBetweenForRepo": 765,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n       Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n-                                    WritableRpcEngine.class);\n+                                    ProtobufRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n      Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    ProtobufRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {}
    },
    "93d8a7f2a2d72a1719d02b1ed90678397900b6ed": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-12579. Deprecate and remove WriteableRPCEngine. Contributed by Kai Zheng\"\n\nThis reverts commit a6c79f92d503c664f2d109355b719124f29a30e5.\n",
      "commitDate": "31/05/16 5:41 PM",
      "commitName": "93d8a7f2a2d72a1719d02b1ed90678397900b6ed",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "26/05/16 1:29 PM",
      "commitNameOld": "a6c79f92d503c664f2d109355b719124f29a30e5",
      "commitAuthorOld": "Kai Zheng",
      "daysBetweenCommits": 5.17,
      "commitsBetweenForRepo": 23,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n       Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n-                                    ProtobufRpcEngine.class);\n+                                    WritableRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n      Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {}
    },
    "a6c79f92d503c664f2d109355b719124f29a30e5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12579. Deprecate and remove WriteableRPCEngine. Contributed by Kai Zheng\n",
      "commitDate": "26/05/16 1:29 PM",
      "commitName": "a6c79f92d503c664f2d109355b719124f29a30e5",
      "commitAuthor": "Kai Zheng",
      "commitDateOld": "03/01/16 9:31 PM",
      "commitNameOld": "64ae85fd2ea91f46ab3b21f007befbeef8c3c947",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 143.62,
      "commitsBetweenForRepo": 944,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n       Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n-                                    WritableRpcEngine.class);\n+                                    ProtobufRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n      Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    ProtobufRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {}
    },
    "12289efa2bc0f286ededc4c979cee0d304fadb0b": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-7965. Support for protocol version and signature in PB.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236444 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/01/12 3:23 PM",
      "commitName": "12289efa2bc0f286ededc4c979cee0d304fadb0b",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "15/01/12 11:15 AM",
      "commitNameOld": "a9002bfea1e02c4e565cc708dbf55607f5a6d458",
      "commitAuthorOld": "Harsh J",
      "daysBetweenCommits": 11.17,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n-  private static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n-                                                          Configuration conf) {\n+  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n+      Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                     WritableRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n      Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {
        "oldValue": "[private, static, synchronized]",
        "newValue": "[static, synchronized]"
      }
    },
    "68cb2b01b68a1a8bc160c5361f13fdc92e888b33": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-7607 and MAPREDUCE-2934. Simplify the RPC proxy cleanup process. (atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167318 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/09/11 11:12 AM",
      "commitName": "68cb2b01b68a1a8bc160c5361f13fdc92e888b33",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-7607 and MAPREDUCE-2934. Simplify the RPC proxy cleanup process. (atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167318 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/09/11 11:12 AM",
          "commitName": "68cb2b01b68a1a8bc160c5361f13fdc92e888b33",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "02/09/11 5:31 PM",
          "commitNameOld": "b97a4d40c8752451fc02168a7f6eb3e93e459c2d",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 6.74,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,11 @@\n-  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n+  private static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n                                                           Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                     WritableRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n-      if (protocol.isInterface())\n-        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n-                                              protocol),\n-                          engine);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
          "extendedDetails": {
            "oldValue": "[protocol-Class, conf-Configuration]",
            "newValue": "[protocol-Class\u003c?\u003e, conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-7607 and MAPREDUCE-2934. Simplify the RPC proxy cleanup process. (atm)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1167318 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "09/09/11 11:12 AM",
          "commitName": "68cb2b01b68a1a8bc160c5361f13fdc92e888b33",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "02/09/11 5:31 PM",
          "commitNameOld": "b97a4d40c8752451fc02168a7f6eb3e93e459c2d",
          "commitAuthorOld": "Sanjay Radia",
          "daysBetweenCommits": 6.74,
          "commitsBetweenForRepo": 44,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,11 @@\n-  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n+  private static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n                                                           Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                     WritableRpcEngine.class);\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n-      if (protocol.isInterface())\n-        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n-                                              protocol),\n-                          engine);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class\u003c?\u003e protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      if (protocol.isInterface())\n        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                              protocol),\n                          engine);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      if (protocol.isInterface())\n        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                              protocol),\n                          engine);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/ipc/RPC.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/ipc/RPC.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      if (protocol.isInterface())\n        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                              protocol),\n                          engine);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "common/src/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/ipc/RPC.java",
        "newPath": "common/src/java/org/apache/hadoop/ipc/RPC.java"
      }
    },
    "2ee80854a5d113cfe654643481ff8ca2e5978003": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6422.  Remove log line.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@890410 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/09 9:45 AM",
      "commitName": "2ee80854a5d113cfe654643481ff8ca2e5978003",
      "commitAuthor": "Doug Cutting",
      "commitDateOld": "11/12/09 8:37 PM",
      "commitNameOld": "6c842ad4b5cbb730bb02c6a586b604ea85665cf9",
      "commitAuthorOld": "Doug Cutting",
      "daysBetweenCommits": 2.55,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,15 @@\n   private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                           Configuration conf) {\n     RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n     if (engine \u003d\u003d null) {\n       Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                     WritableRpcEngine.class);\n-      LOG.info(\"Using \"+impl.getName()+\" for \"+protocol.getName());\n       engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n       if (protocol.isInterface())\n         PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                               protocol),\n                           engine);\n       PROTOCOL_ENGINES.put(protocol, engine);\n     }\n     return engine;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      if (protocol.isInterface())\n        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                              protocol),\n                          engine);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "src/java/org/apache/hadoop/ipc/RPC.java",
      "extendedDetails": {}
    },
    "6c842ad4b5cbb730bb02c6a586b604ea85665cf9": {
      "type": "Yintroduced",
      "commitMessage": "AVRO-6422. Make RPC backend plugable.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@889889 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/12/09 8:37 PM",
      "commitName": "6c842ad4b5cbb730bb02c6a586b604ea85665cf9",
      "commitAuthor": "Doug Cutting",
      "diff": "@@ -0,0 +1,16 @@\n+  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n+                                                          Configuration conf) {\n+    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n+    if (engine \u003d\u003d null) {\n+      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n+                                    WritableRpcEngine.class);\n+      LOG.info(\"Using \"+impl.getName()+\" for \"+protocol.getName());\n+      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n+      if (protocol.isInterface())\n+        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n+                                              protocol),\n+                          engine);\n+      PROTOCOL_ENGINES.put(protocol, engine);\n+    }\n+    return engine;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static synchronized RpcEngine getProtocolEngine(Class protocol,\n                                                          Configuration conf) {\n    RpcEngine engine \u003d PROTOCOL_ENGINES.get(protocol);\n    if (engine \u003d\u003d null) {\n      Class\u003c?\u003e impl \u003d conf.getClass(ENGINE_PROP+\".\"+protocol.getName(),\n                                    WritableRpcEngine.class);\n      LOG.info(\"Using \"+impl.getName()+\" for \"+protocol.getName());\n      engine \u003d (RpcEngine)ReflectionUtils.newInstance(impl, conf);\n      if (protocol.isInterface())\n        PROXY_ENGINES.put(Proxy.getProxyClass(protocol.getClassLoader(),\n                                              protocol),\n                          engine);\n      PROTOCOL_ENGINES.put(protocol, engine);\n    }\n    return engine;\n  }",
      "path": "src/java/org/apache/hadoop/ipc/RPC.java"
    }
  }
}