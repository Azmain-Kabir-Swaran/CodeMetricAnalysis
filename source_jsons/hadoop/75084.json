{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AbstractJavaKeyStoreProvider.java",
  "functionName": "locateKeystore",
  "functionId": "locateKeystore",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
  "functionStartLine": 310,
  "functionEndLine": 335,
  "numCommitsSeen": 7,
  "timeTaken": 1227,
  "changeHistory": [
    "7154ace71212e9fb9dd6209a92165fb075df7806",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa"
  ],
  "changeHistoryShort": {
    "7154ace71212e9fb9dd6209a92165fb075df7806": "Ybodychange",
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7154ace71212e9fb9dd6209a92165fb075df7806": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13157. Follow-on improvements to hadoop credential commands. Contributed by Mike Yoder.\n",
      "commitDate": "17/05/16 5:44 PM",
      "commitName": "7154ace71212e9fb9dd6209a92165fb075df7806",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "11/05/16 11:30 AM",
      "commitNameOld": "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
      "commitAuthorOld": "Larry McCay",
      "daysBetweenCommits": 6.26,
      "commitsBetweenForRepo": 57,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,26 @@\n   private void locateKeystore() throws IOException {\n     try {\n-      password \u003d locatePassword();\n+      password \u003d ProviderUtils.locatePassword(CREDENTIAL_PASSWORD_ENV_VAR,\n+          conf.get(CREDENTIAL_PASSWORD_FILE_KEY));\n       if (password \u003d\u003d null) {\n-        password \u003d KEYSTORE_PASSWORD_DEFAULT.toCharArray();\n+        password \u003d CREDENTIAL_PASSWORD_DEFAULT.toCharArray();\n       }\n       KeyStore ks;\n       ks \u003d KeyStore.getInstance(\"jceks\");\n       if (keystoreExists()) {\n         stashOriginalFilePermissions();\n         try (InputStream in \u003d getInputStreamForFile()) {\n           ks.load(in, password);\n         }\n       } else {\n         createPermissions(\"600\");\n         // required to create an empty keystore. *sigh*\n         ks.load(null, password);\n       }\n       keyStore \u003d ks;\n     } catch (KeyStoreException e) {\n       throw new IOException(\"Can\u0027t create keystore\", e);\n     } catch (GeneralSecurityException e) {\n       throw new IOException(\"Can\u0027t load keystore \" + getPathAsString(), e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void locateKeystore() throws IOException {\n    try {\n      password \u003d ProviderUtils.locatePassword(CREDENTIAL_PASSWORD_ENV_VAR,\n          conf.get(CREDENTIAL_PASSWORD_FILE_KEY));\n      if (password \u003d\u003d null) {\n        password \u003d CREDENTIAL_PASSWORD_DEFAULT.toCharArray();\n      }\n      KeyStore ks;\n      ks \u003d KeyStore.getInstance(\"jceks\");\n      if (keystoreExists()) {\n        stashOriginalFilePermissions();\n        try (InputStream in \u003d getInputStreamForFile()) {\n          ks.load(in, password);\n        }\n      } else {\n        createPermissions(\"600\");\n        // required to create an empty keystore. *sigh*\n        ks.load(null, password);\n      }\n      keyStore \u003d ks;\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Can\u0027t create keystore\", e);\n    } catch (GeneralSecurityException e) {\n      throw new IOException(\"Can\u0027t load keystore \" + getPathAsString(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java",
      "extendedDetails": {}
    },
    "acb509b2fa0bbe6e00f8a90aec37f63a09463afa": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12942. hadoop credential commands non-obviously use password of \"none\" (Mike Yoder via lmccay)",
      "commitDate": "11/05/16 11:30 AM",
      "commitName": "acb509b2fa0bbe6e00f8a90aec37f63a09463afa",
      "commitAuthor": "Larry McCay",
      "diff": "@@ -0,0 +1,25 @@\n+  private void locateKeystore() throws IOException {\n+    try {\n+      password \u003d locatePassword();\n+      if (password \u003d\u003d null) {\n+        password \u003d KEYSTORE_PASSWORD_DEFAULT.toCharArray();\n+      }\n+      KeyStore ks;\n+      ks \u003d KeyStore.getInstance(\"jceks\");\n+      if (keystoreExists()) {\n+        stashOriginalFilePermissions();\n+        try (InputStream in \u003d getInputStreamForFile()) {\n+          ks.load(in, password);\n+        }\n+      } else {\n+        createPermissions(\"600\");\n+        // required to create an empty keystore. *sigh*\n+        ks.load(null, password);\n+      }\n+      keyStore \u003d ks;\n+    } catch (KeyStoreException e) {\n+      throw new IOException(\"Can\u0027t create keystore\", e);\n+    } catch (GeneralSecurityException e) {\n+      throw new IOException(\"Can\u0027t load keystore \" + getPathAsString(), e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void locateKeystore() throws IOException {\n    try {\n      password \u003d locatePassword();\n      if (password \u003d\u003d null) {\n        password \u003d KEYSTORE_PASSWORD_DEFAULT.toCharArray();\n      }\n      KeyStore ks;\n      ks \u003d KeyStore.getInstance(\"jceks\");\n      if (keystoreExists()) {\n        stashOriginalFilePermissions();\n        try (InputStream in \u003d getInputStreamForFile()) {\n          ks.load(in, password);\n        }\n      } else {\n        createPermissions(\"600\");\n        // required to create an empty keystore. *sigh*\n        ks.load(null, password);\n      }\n      keyStore \u003d ks;\n    } catch (KeyStoreException e) {\n      throw new IOException(\"Can\u0027t create keystore\", e);\n    } catch (GeneralSecurityException e) {\n      throw new IOException(\"Can\u0027t load keystore \" + getPathAsString(), e);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/alias/AbstractJavaKeyStoreProvider.java"
    }
  }
}