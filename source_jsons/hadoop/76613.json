{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SecureIOUtils.java",
  "functionName": "openForRead",
  "functionId": "openForRead___f-File__expectedOwner-String__expectedGroup-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java",
  "functionStartLine": 195,
  "functionEndLine": 201,
  "numCommitsSeen": 11,
  "timeTaken": 790,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "dc16490ad3f8ff42849647fa6150fa53d771809c",
    "dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "dc16490ad3f8ff42849647fa6150fa53d771809c": "Ybodychange",
    "dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileInputStream openForRead(File f, String expectedOwner, \n      String expectedGroup) throws IOException {\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      return new FileInputStream(f);\n    }\n    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileInputStream openForRead(File f, String expectedOwner, \n      String expectedGroup) throws IOException {\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      return new FileInputStream(f);\n    }\n    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/SecureIOUtils.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/SecureIOUtils.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FileInputStream openForRead(File f, String expectedOwner, \n      String expectedGroup) throws IOException {\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      return new FileInputStream(f);\n    }\n    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);\n  }",
      "path": "common/src/java/org/apache/hadoop/io/SecureIOUtils.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/SecureIOUtils.java",
        "newPath": "common/src/java/org/apache/hadoop/io/SecureIOUtils.java"
      }
    },
    "dc16490ad3f8ff42849647fa6150fa53d771809c": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-7172. SecureIO should not check owner on non-secure clusters that have no native support. Contributed by Todd Lipcon\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1095958 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/04/11 9:19 AM",
      "commitName": "dc16490ad3f8ff42849647fa6150fa53d771809c",
      "commitAuthor": "Eli Collins",
      "commitDateOld": "01/12/10 12:03 AM",
      "commitNameOld": "dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5",
      "commitAuthorOld": "Devaraj Das",
      "daysBetweenCommits": 142.34,
      "commitsBetweenForRepo": 112,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,7 @@\n   public static FileInputStream openForRead(File f, String expectedOwner, \n       String expectedGroup) throws IOException {\n-    if (skipSecurity) {\n-      // Subject to race conditions but this is the best we can do\n-      FileStatus status \u003d\n-        rawFilesystem.getFileStatus(new Path(f.getAbsolutePath()));\n-      checkStat(f, status.getOwner(), status.getGroup(),\n-          expectedOwner, expectedGroup);\n+    if (!UserGroupInformation.isSecurityEnabled()) {\n       return new FileInputStream(f);\n     }\n-\n-    FileInputStream fis \u003d new FileInputStream(f);\n-    boolean success \u003d false;\n-    try {\n-      Stat stat \u003d NativeIO.fstat(fis.getFD());\n-      checkStat(f, stat.getOwner(), stat.getGroup(), expectedOwner,\n-          expectedGroup);\n-      success \u003d true;\n-      return fis;\n-    } finally {\n-      if (!success) {\n-        fis.close();\n-      }\n-    }\n+    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileInputStream openForRead(File f, String expectedOwner, \n      String expectedGroup) throws IOException {\n    if (!UserGroupInformation.isSecurityEnabled()) {\n      return new FileInputStream(f);\n    }\n    return forceSecureOpenForRead(f, expectedOwner, expectedGroup);\n  }",
      "path": "src/java/org/apache/hadoop/io/SecureIOUtils.java",
      "extendedDetails": {}
    },
    "dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-6978. Adds support for NativeIO using JNI. Contributed by Todd Lipcon, Devaraj Das \u0026 Owen O\u0027Malley.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1040883 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/12/10 12:03 AM",
      "commitName": "dbd07f9e8c2824cdb04d44d07d27c2b56f68c1d5",
      "commitAuthor": "Devaraj Das",
      "diff": "@@ -0,0 +1,25 @@\n+  public static FileInputStream openForRead(File f, String expectedOwner, \n+      String expectedGroup) throws IOException {\n+    if (skipSecurity) {\n+      // Subject to race conditions but this is the best we can do\n+      FileStatus status \u003d\n+        rawFilesystem.getFileStatus(new Path(f.getAbsolutePath()));\n+      checkStat(f, status.getOwner(), status.getGroup(),\n+          expectedOwner, expectedGroup);\n+      return new FileInputStream(f);\n+    }\n+\n+    FileInputStream fis \u003d new FileInputStream(f);\n+    boolean success \u003d false;\n+    try {\n+      Stat stat \u003d NativeIO.fstat(fis.getFD());\n+      checkStat(f, stat.getOwner(), stat.getGroup(), expectedOwner,\n+          expectedGroup);\n+      success \u003d true;\n+      return fis;\n+    } finally {\n+      if (!success) {\n+        fis.close();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FileInputStream openForRead(File f, String expectedOwner, \n      String expectedGroup) throws IOException {\n    if (skipSecurity) {\n      // Subject to race conditions but this is the best we can do\n      FileStatus status \u003d\n        rawFilesystem.getFileStatus(new Path(f.getAbsolutePath()));\n      checkStat(f, status.getOwner(), status.getGroup(),\n          expectedOwner, expectedGroup);\n      return new FileInputStream(f);\n    }\n\n    FileInputStream fis \u003d new FileInputStream(f);\n    boolean success \u003d false;\n    try {\n      Stat stat \u003d NativeIO.fstat(fis.getFD());\n      checkStat(f, stat.getOwner(), stat.getGroup(), expectedOwner,\n          expectedGroup);\n      success \u003d true;\n      return fis;\n    } finally {\n      if (!success) {\n        fis.close();\n      }\n    }\n  }",
      "path": "src/java/org/apache/hadoop/io/SecureIOUtils.java"
    }
  }
}