{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnServiceClient.java",
  "functionName": "createApp",
  "functionId": "createApp___app-Service",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/YarnServiceClient.java",
  "functionStartLine": 68,
  "functionEndLine": 103,
  "numCommitsSeen": 2,
  "timeTaken": 527,
  "changeHistory": [
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e"
  ],
  "changeHistoryShort": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7129. Application Catalog for YARN applications. Contributed by Eric Yang\n",
      "commitDate": "29/03/19 1:51 PM",
      "commitName": "7ee32a2eb187d43f1c8d7c6416eebc13d461ee1e",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,36 @@\n+  public void createApp(Service app) {\n+    ObjectMapper mapper \u003d new ObjectMapper();\n+    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n+    ClientResponse response;\n+    try {\n+      boolean useKerberos \u003d UserGroupInformation.isSecurityEnabled();\n+      if (useKerberos) {\n+        KerberosPrincipal kerberos \u003d new KerberosPrincipal();\n+        String[] temp \u003d System.getenv(\"PRINCIPAL\").split(\"@\");\n+        String[] temp2 \u003d temp[0].split(\"/\");\n+        StringBuilder sb \u003d new StringBuilder();\n+        sb.append(temp2[0]);\n+        sb.append(\"/\");\n+        sb.append(\"_HOST\");\n+        sb.append(\"@\");\n+        sb.append(temp[1]);\n+        String keytab \u003d System.getenv(\"KEYTAB\");\n+        if (!keytab.startsWith(\"file://\")) {\n+          keytab \u003d \"file://\" + keytab;\n+        }\n+        kerberos.setPrincipalName(sb.toString());\n+        kerberos.setKeytab(keytab);\n+        app.setKerberosPrincipal(kerberos);\n+      }\n+      response \u003d asc.getApiClient().post(ClientResponse.class,\n+          mapper.writeValueAsString(app));\n+      if (response.getStatus() \u003e\u003d 299) {\n+        String message \u003d response.getEntity(String.class);\n+        throw new RuntimeException(\"Failed : HTTP error code : \"\n+            + response.getStatus() + \" error: \" + message);\n+      }\n+    } catch (UniformInterfaceException | ClientHandlerException\n+        | IOException e) {\n+      LOG.error(\"Error in deploying application: \", e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void createApp(Service app) {\n    ObjectMapper mapper \u003d new ObjectMapper();\n    mapper.configure(DeserializationFeature.FAIL_ON_UNKNOWN_PROPERTIES, false);\n    ClientResponse response;\n    try {\n      boolean useKerberos \u003d UserGroupInformation.isSecurityEnabled();\n      if (useKerberos) {\n        KerberosPrincipal kerberos \u003d new KerberosPrincipal();\n        String[] temp \u003d System.getenv(\"PRINCIPAL\").split(\"@\");\n        String[] temp2 \u003d temp[0].split(\"/\");\n        StringBuilder sb \u003d new StringBuilder();\n        sb.append(temp2[0]);\n        sb.append(\"/\");\n        sb.append(\"_HOST\");\n        sb.append(\"@\");\n        sb.append(temp[1]);\n        String keytab \u003d System.getenv(\"KEYTAB\");\n        if (!keytab.startsWith(\"file://\")) {\n          keytab \u003d \"file://\" + keytab;\n        }\n        kerberos.setPrincipalName(sb.toString());\n        kerberos.setKeytab(keytab);\n        app.setKerberosPrincipal(kerberos);\n      }\n      response \u003d asc.getApiClient().post(ClientResponse.class,\n          mapper.writeValueAsString(app));\n      if (response.getStatus() \u003e\u003d 299) {\n        String message \u003d response.getEntity(String.class);\n        throw new RuntimeException(\"Failed : HTTP error code : \"\n            + response.getStatus() + \" error: \" + message);\n      }\n    } catch (UniformInterfaceException | ClientHandlerException\n        | IOException e) {\n      LOG.error(\"Error in deploying application: \", e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-catalog/hadoop-yarn-applications-catalog-webapp/src/main/java/org/apache/hadoop/yarn/appcatalog/application/YarnServiceClient.java"
    }
  }
}