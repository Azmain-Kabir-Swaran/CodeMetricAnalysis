{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JobBuilder.java",
  "functionName": "process",
  "functionId": "process___event-HistoryEvent",
  "sourceFilePath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/JobBuilder.java",
  "functionStartLine": 134,
  "functionEndLine": 186,
  "numCommitsSeen": 18,
  "timeTaken": 5489,
  "changeHistory": [
    "b8f7966c7a0d6aa0c0835fc0c4a4254420ab26a6",
    "a93be7b46c3eab8aecb20a334c6d24d20649314d",
    "10325d97329c214bb3899c8535df5a366bc86d2f",
    "1dcc4b57ee29c372934b72511302b689cd93c1cf",
    "7e056015add4c742f3571f487ae97f8fd8ac720a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "b8f7966c7a0d6aa0c0835fc0c4a4254420ab26a6": "Ybodychange",
    "a93be7b46c3eab8aecb20a334c6d24d20649314d": "Ybodychange",
    "10325d97329c214bb3899c8535df5a366bc86d2f": "Yfilerename",
    "1dcc4b57ee29c372934b72511302b689cd93c1cf": "Ybodychange",
    "7e056015add4c742f3571f487ae97f8fd8ac720a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b8f7966c7a0d6aa0c0835fc0c4a4254420ab26a6": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6126. Fixed Rumen JobBuilder to ignore NormalizedResourceEvent. Contributed by Junping Du\n",
      "commitDate": "22/10/14 10:43 AM",
      "commitName": "b8f7966c7a0d6aa0c0835fc0c4a4254420ab26a6",
      "commitAuthor": "Jian He",
      "commitDateOld": "23/04/14 10:59 PM",
      "commitNameOld": "a93be7b46c3eab8aecb20a334c6d24d20649314d",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 181.49,
      "commitsBetweenForRepo": 1485,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,49 +1,53 @@\n   public void process(HistoryEvent event) {\n     if (finalized) {\n       throw new IllegalStateException(\n           \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n     }\n \n     // these are in lexicographical order by class name.\n     if (event instanceof AMStartedEvent) {\n       // ignore this event as Rumen currently doesnt need this event\n       //TODO Enhance Rumen to process this event and capture restarts\n       return;\n+    } else if (event instanceof NormalizedResourceEvent) {\n+      // Log an warn message as NormalizedResourceEvent shouldn\u0027t be written.\n+      LOG.warn(\"NormalizedResourceEvent should be ignored in history server.\");\n     } else if (event instanceof JobFinishedEvent) {\n       processJobFinishedEvent((JobFinishedEvent) event);\n     } else if (event instanceof JobInfoChangeEvent) {\n       processJobInfoChangeEvent((JobInfoChangeEvent) event);\n     } else if (event instanceof JobInitedEvent) {\n       processJobInitedEvent((JobInitedEvent) event);\n     } else if (event instanceof JobPriorityChangeEvent) {\n       processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n     } else if (event instanceof JobQueueChangeEvent) {\n       processJobQueueChangeEvent((JobQueueChangeEvent) event);\n     } else if (event instanceof JobStatusChangedEvent) {\n       processJobStatusChangedEvent((JobStatusChangedEvent) event);\n     } else if (event instanceof JobSubmittedEvent) {\n       processJobSubmittedEvent((JobSubmittedEvent) event);\n     } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n       processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof MapAttemptFinishedEvent) {\n       processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n     } else if (event instanceof ReduceAttemptFinishedEvent) {\n       processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptFinishedEvent) {\n       processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptStartedEvent) {\n       processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n     } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n       processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof TaskFailedEvent) {\n       processTaskFailedEvent((TaskFailedEvent) event);\n     } else if (event instanceof TaskFinishedEvent) {\n       processTaskFinishedEvent((TaskFinishedEvent) event);\n     } else if (event instanceof TaskStartedEvent) {\n       processTaskStartedEvent((TaskStartedEvent) event);\n     } else if (event instanceof TaskUpdatedEvent) {\n       processTaskUpdatedEvent((TaskUpdatedEvent) event);\n     } else\n       throw new IllegalArgumentException(\n-          \"JobBuilder.process(HistoryEvent): unknown event type\");\n+          \"JobBuilder.process(HistoryEvent): unknown event type:\"\n+          + event.getEventType() + \" for event:\" + event);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof AMStartedEvent) {\n      // ignore this event as Rumen currently doesnt need this event\n      //TODO Enhance Rumen to process this event and capture restarts\n      return;\n    } else if (event instanceof NormalizedResourceEvent) {\n      // Log an warn message as NormalizedResourceEvent shouldn\u0027t be written.\n      LOG.warn(\"NormalizedResourceEvent should be ignored in history server.\");\n    } else if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobQueueChangeEvent) {\n      processJobQueueChangeEvent((JobQueueChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type:\"\n          + event.getEventType() + \" for event:\" + event);\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {}
    },
    "a93be7b46c3eab8aecb20a334c6d24d20649314d": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5846. Rumen doesn\u0027t understand JobQueueChangedEvent (Nathan Roberts via raviprak)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1589595 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/14 10:59 PM",
      "commitName": "a93be7b46c3eab8aecb20a334c6d24d20649314d",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "27/02/13 1:03 PM",
      "commitNameOld": "979fb054f8e7141116718645d19ec7ba00455a63",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 420.37,
      "commitsBetweenForRepo": 2785,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,49 @@\n   public void process(HistoryEvent event) {\n     if (finalized) {\n       throw new IllegalStateException(\n           \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n     }\n \n     // these are in lexicographical order by class name.\n     if (event instanceof AMStartedEvent) {\n       // ignore this event as Rumen currently doesnt need this event\n       //TODO Enhance Rumen to process this event and capture restarts\n       return;\n     } else if (event instanceof JobFinishedEvent) {\n       processJobFinishedEvent((JobFinishedEvent) event);\n     } else if (event instanceof JobInfoChangeEvent) {\n       processJobInfoChangeEvent((JobInfoChangeEvent) event);\n     } else if (event instanceof JobInitedEvent) {\n       processJobInitedEvent((JobInitedEvent) event);\n     } else if (event instanceof JobPriorityChangeEvent) {\n       processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n+    } else if (event instanceof JobQueueChangeEvent) {\n+      processJobQueueChangeEvent((JobQueueChangeEvent) event);\n     } else if (event instanceof JobStatusChangedEvent) {\n       processJobStatusChangedEvent((JobStatusChangedEvent) event);\n     } else if (event instanceof JobSubmittedEvent) {\n       processJobSubmittedEvent((JobSubmittedEvent) event);\n     } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n       processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof MapAttemptFinishedEvent) {\n       processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n     } else if (event instanceof ReduceAttemptFinishedEvent) {\n       processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptFinishedEvent) {\n       processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptStartedEvent) {\n       processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n     } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n       processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof TaskFailedEvent) {\n       processTaskFailedEvent((TaskFailedEvent) event);\n     } else if (event instanceof TaskFinishedEvent) {\n       processTaskFinishedEvent((TaskFinishedEvent) event);\n     } else if (event instanceof TaskStartedEvent) {\n       processTaskStartedEvent((TaskStartedEvent) event);\n     } else if (event instanceof TaskUpdatedEvent) {\n       processTaskUpdatedEvent((TaskUpdatedEvent) event);\n     } else\n       throw new IllegalArgumentException(\n           \"JobBuilder.process(HistoryEvent): unknown event type\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof AMStartedEvent) {\n      // ignore this event as Rumen currently doesnt need this event\n      //TODO Enhance Rumen to process this event and capture restarts\n      return;\n    } else if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobQueueChangeEvent) {\n      processJobQueueChangeEvent((JobQueueChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {}
    },
    "10325d97329c214bb3899c8535df5a366bc86d2f": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3582. Move successfully passing MR1 tests to MR2 maven tree.(ahmed via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1233090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/01/12 2:10 PM",
      "commitName": "10325d97329c214bb3899c8535df5a366bc86d2f",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/01/12 10:20 AM",
      "commitNameOld": "8b2f6909ec7df5cffb5ef417f5c9cffdee43e38a",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.16,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof AMStartedEvent) {\n      // ignore this event as Rumen currently doesnt need this event\n      //TODO Enhance Rumen to process this event and capture restarts\n      return;\n    } else if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
        "newPath": "hadoop-tools/hadoop-rumen/src/main/java/org/apache/hadoop/tools/rumen/JobBuilder.java"
      }
    },
    "1dcc4b57ee29c372934b72511302b689cd93c1cf": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3597. [Rumen] Rumen should provide APIs to access all the job-history related information.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1222695 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/12/11 6:47 AM",
      "commitName": "1dcc4b57ee29c372934b72511302b689cd93c1cf",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "20/12/11 6:58 PM",
      "commitNameOld": "264d3b7dd0c81fe02baaa09b6e3aaad5ee6d191a",
      "commitAuthorOld": "Amar Kamat",
      "daysBetweenCommits": 2.49,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,47 +1,47 @@\n   public void process(HistoryEvent event) {\n     if (finalized) {\n       throw new IllegalStateException(\n-          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n+          \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n     }\n \n     // these are in lexicographical order by class name.\n     if (event instanceof AMStartedEvent) {\n       // ignore this event as Rumen currently doesnt need this event\n       //TODO Enhance Rumen to process this event and capture restarts\n       return;\n     } else if (event instanceof JobFinishedEvent) {\n       processJobFinishedEvent((JobFinishedEvent) event);\n     } else if (event instanceof JobInfoChangeEvent) {\n       processJobInfoChangeEvent((JobInfoChangeEvent) event);\n     } else if (event instanceof JobInitedEvent) {\n       processJobInitedEvent((JobInitedEvent) event);\n     } else if (event instanceof JobPriorityChangeEvent) {\n       processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n     } else if (event instanceof JobStatusChangedEvent) {\n       processJobStatusChangedEvent((JobStatusChangedEvent) event);\n     } else if (event instanceof JobSubmittedEvent) {\n       processJobSubmittedEvent((JobSubmittedEvent) event);\n     } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n       processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof MapAttemptFinishedEvent) {\n       processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n     } else if (event instanceof ReduceAttemptFinishedEvent) {\n       processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptFinishedEvent) {\n       processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptStartedEvent) {\n       processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n     } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n       processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof TaskFailedEvent) {\n       processTaskFailedEvent((TaskFailedEvent) event);\n     } else if (event instanceof TaskFinishedEvent) {\n       processTaskFinishedEvent((TaskFinishedEvent) event);\n     } else if (event instanceof TaskStartedEvent) {\n       processTaskStartedEvent((TaskStartedEvent) event);\n     } else if (event instanceof TaskUpdatedEvent) {\n       processTaskUpdatedEvent((TaskUpdatedEvent) event);\n     } else\n       throw new IllegalArgumentException(\n           \"JobBuilder.process(HistoryEvent): unknown event type\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after ParsedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof AMStartedEvent) {\n      // ignore this event as Rumen currently doesnt need this event\n      //TODO Enhance Rumen to process this event and capture restarts\n      return;\n    } else if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {}
    },
    "7e056015add4c742f3571f487ae97f8fd8ac720a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3241. [Rumen] Fix Rumen to ignore the AMStartedEvent. (amarrk)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195535 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 8:51 AM",
      "commitName": "7e056015add4c742f3571f487ae97f8fd8ac720a",
      "commitAuthor": "Amar Kamat",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 67.65,
      "commitsBetweenForRepo": 507,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,43 +1,47 @@\n   public void process(HistoryEvent event) {\n     if (finalized) {\n       throw new IllegalStateException(\n           \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n     }\n \n     // these are in lexicographical order by class name.\n-    if (event instanceof JobFinishedEvent) {\n+    if (event instanceof AMStartedEvent) {\n+      // ignore this event as Rumen currently doesnt need this event\n+      //TODO Enhance Rumen to process this event and capture restarts\n+      return;\n+    } else if (event instanceof JobFinishedEvent) {\n       processJobFinishedEvent((JobFinishedEvent) event);\n     } else if (event instanceof JobInfoChangeEvent) {\n       processJobInfoChangeEvent((JobInfoChangeEvent) event);\n     } else if (event instanceof JobInitedEvent) {\n       processJobInitedEvent((JobInitedEvent) event);\n     } else if (event instanceof JobPriorityChangeEvent) {\n       processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n     } else if (event instanceof JobStatusChangedEvent) {\n       processJobStatusChangedEvent((JobStatusChangedEvent) event);\n     } else if (event instanceof JobSubmittedEvent) {\n       processJobSubmittedEvent((JobSubmittedEvent) event);\n     } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n       processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof MapAttemptFinishedEvent) {\n       processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n     } else if (event instanceof ReduceAttemptFinishedEvent) {\n       processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptFinishedEvent) {\n       processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n     } else if (event instanceof TaskAttemptStartedEvent) {\n       processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n     } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n       processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n     } else if (event instanceof TaskFailedEvent) {\n       processTaskFailedEvent((TaskFailedEvent) event);\n     } else if (event instanceof TaskFinishedEvent) {\n       processTaskFinishedEvent((TaskFinishedEvent) event);\n     } else if (event instanceof TaskStartedEvent) {\n       processTaskStartedEvent((TaskStartedEvent) event);\n     } else if (event instanceof TaskUpdatedEvent) {\n       processTaskUpdatedEvent((TaskUpdatedEvent) event);\n     } else\n       throw new IllegalArgumentException(\n           \"JobBuilder.process(HistoryEvent): unknown event type\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof AMStartedEvent) {\n      // ignore this event as Rumen currently doesnt need this event\n      //TODO Enhance Rumen to process this event and capture restarts\n      return;\n    } else if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
        "newPath": "hadoop-mapreduce-project/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/08/11 8:02 PM",
      "commitNameOld": "dd86860633d2ed64705b669a75bf318442ed6225",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.34,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
      "extendedDetails": {
        "oldPath": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java",
        "newPath": "hadoop-mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,43 @@\n+  public void process(HistoryEvent event) {\n+    if (finalized) {\n+      throw new IllegalStateException(\n+          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n+    }\n+\n+    // these are in lexicographical order by class name.\n+    if (event instanceof JobFinishedEvent) {\n+      processJobFinishedEvent((JobFinishedEvent) event);\n+    } else if (event instanceof JobInfoChangeEvent) {\n+      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n+    } else if (event instanceof JobInitedEvent) {\n+      processJobInitedEvent((JobInitedEvent) event);\n+    } else if (event instanceof JobPriorityChangeEvent) {\n+      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n+    } else if (event instanceof JobStatusChangedEvent) {\n+      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n+    } else if (event instanceof JobSubmittedEvent) {\n+      processJobSubmittedEvent((JobSubmittedEvent) event);\n+    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n+      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n+    } else if (event instanceof MapAttemptFinishedEvent) {\n+      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n+    } else if (event instanceof ReduceAttemptFinishedEvent) {\n+      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n+    } else if (event instanceof TaskAttemptFinishedEvent) {\n+      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n+    } else if (event instanceof TaskAttemptStartedEvent) {\n+      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n+    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n+      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n+    } else if (event instanceof TaskFailedEvent) {\n+      processTaskFailedEvent((TaskFailedEvent) event);\n+    } else if (event instanceof TaskFinishedEvent) {\n+      processTaskFinishedEvent((TaskFinishedEvent) event);\n+    } else if (event instanceof TaskStartedEvent) {\n+      processTaskStartedEvent((TaskStartedEvent) event);\n+    } else if (event instanceof TaskUpdatedEvent) {\n+      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n+    } else\n+      throw new IllegalArgumentException(\n+          \"JobBuilder.process(HistoryEvent): unknown event type\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void process(HistoryEvent event) {\n    if (finalized) {\n      throw new IllegalStateException(\n          \"JobBuilder.process(HistoryEvent event) called after LoggedJob built\");\n    }\n\n    // these are in lexicographical order by class name.\n    if (event instanceof JobFinishedEvent) {\n      processJobFinishedEvent((JobFinishedEvent) event);\n    } else if (event instanceof JobInfoChangeEvent) {\n      processJobInfoChangeEvent((JobInfoChangeEvent) event);\n    } else if (event instanceof JobInitedEvent) {\n      processJobInitedEvent((JobInitedEvent) event);\n    } else if (event instanceof JobPriorityChangeEvent) {\n      processJobPriorityChangeEvent((JobPriorityChangeEvent) event);\n    } else if (event instanceof JobStatusChangedEvent) {\n      processJobStatusChangedEvent((JobStatusChangedEvent) event);\n    } else if (event instanceof JobSubmittedEvent) {\n      processJobSubmittedEvent((JobSubmittedEvent) event);\n    } else if (event instanceof JobUnsuccessfulCompletionEvent) {\n      processJobUnsuccessfulCompletionEvent((JobUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof MapAttemptFinishedEvent) {\n      processMapAttemptFinishedEvent((MapAttemptFinishedEvent) event);\n    } else if (event instanceof ReduceAttemptFinishedEvent) {\n      processReduceAttemptFinishedEvent((ReduceAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptFinishedEvent) {\n      processTaskAttemptFinishedEvent((TaskAttemptFinishedEvent) event);\n    } else if (event instanceof TaskAttemptStartedEvent) {\n      processTaskAttemptStartedEvent((TaskAttemptStartedEvent) event);\n    } else if (event instanceof TaskAttemptUnsuccessfulCompletionEvent) {\n      processTaskAttemptUnsuccessfulCompletionEvent((TaskAttemptUnsuccessfulCompletionEvent) event);\n    } else if (event instanceof TaskFailedEvent) {\n      processTaskFailedEvent((TaskFailedEvent) event);\n    } else if (event instanceof TaskFinishedEvent) {\n      processTaskFinishedEvent((TaskFinishedEvent) event);\n    } else if (event instanceof TaskStartedEvent) {\n      processTaskStartedEvent((TaskStartedEvent) event);\n    } else if (event instanceof TaskUpdatedEvent) {\n      processTaskUpdatedEvent((TaskUpdatedEvent) event);\n    } else\n      throw new IllegalArgumentException(\n          \"JobBuilder.process(HistoryEvent): unknown event type\");\n  }",
      "path": "mapreduce/src/tools/org/apache/hadoop/tools/rumen/JobBuilder.java"
    }
  }
}