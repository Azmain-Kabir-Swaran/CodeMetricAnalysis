{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMLauncher.java",
  "functionName": "launch",
  "functionId": "launch",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
  "functionStartLine": 111,
  "functionEndLine": 140,
  "numCommitsSeen": 61,
  "timeTaken": 7837,
  "changeHistory": [
    "3ca3137179ef093e42cde06587c9ea785b10f32c",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "2692675fc3b5046d2ec88542c30203c87e135b70",
    "92b7165a71656468f17ce8b760ce11e648932f0e",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "2692675fc3b5046d2ec88542c30203c87e135b70": "Ybodychange",
    "92b7165a71656468f17ce8b760ce11e648932f0e": "Yexceptionschange",
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/07/13 12:03 PM",
      "commitNameOld": "32bc200d54928d39acdc837c2c77b4c443fb46be",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 5.36,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,30 @@\n   private void launch() throws IOException, YarnException {\n     connect();\n     ContainerId masterContainerID \u003d masterContainer.getId();\n     ApplicationSubmissionContext applicationContext \u003d\n       application.getSubmissionContext();\n     LOG.info(\"Setting up container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());  \n     ContainerLaunchContext launchContext \u003d\n         createAMContainerLaunchContext(applicationContext, masterContainerID);\n-    StartContainerRequest request \u003d \n-        recordFactory.newRecordInstance(StartContainerRequest.class);\n-    request.setContainerLaunchContext(launchContext);\n-    request.setContainerToken(masterContainer.getContainerToken());\n-    containerMgrProxy.startContainer(request);\n-    LOG.info(\"Done launching container \" + masterContainer\n-        + \" for AM \" + application.getAppAttemptId());\n+\n+    StartContainerRequest scRequest \u003d\n+        StartContainerRequest.newInstance(launchContext,\n+          masterContainer.getContainerToken());\n+    List\u003cStartContainerRequest\u003e list \u003d new ArrayList\u003cStartContainerRequest\u003e();\n+    list.add(scRequest);\n+    StartContainersRequest allRequests \u003d\n+        StartContainersRequest.newInstance(list);\n+\n+    StartContainersResponse response \u003d\n+        containerMgrProxy.startContainers(allRequests);\n+    if (response.getFailedRequests() !\u003d null\n+        \u0026\u0026 response.getFailedRequests().containsKey(masterContainerID)) {\n+      Throwable t \u003d\n+          response.getFailedRequests().get(masterContainerID).deSerialize();\n+      parseAndThrowException(t);\n+    } else {\n+      LOG.info(\"Done launching container \" + masterContainer + \" for AM \"\n+          + application.getAppAttemptId());\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException, YarnException {\n    connect();\n    ContainerId masterContainerID \u003d masterContainer.getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n\n    StartContainerRequest scRequest \u003d\n        StartContainerRequest.newInstance(launchContext,\n          masterContainer.getContainerToken());\n    List\u003cStartContainerRequest\u003e list \u003d new ArrayList\u003cStartContainerRequest\u003e();\n    list.add(scRequest);\n    StartContainersRequest allRequests \u003d\n        StartContainersRequest.newInstance(list);\n\n    StartContainersResponse response \u003d\n        containerMgrProxy.startContainers(allRequests);\n    if (response.getFailedRequests() !\u003d null\n        \u0026\u0026 response.getFailedRequests().containsKey(masterContainerID)) {\n      Throwable t \u003d\n          response.getFailedRequests().get(masterContainerID).deSerialize();\n      parseAndThrowException(t);\n    } else {\n      LOG.info(\"Done launching container \" + masterContainer + \" for AM \"\n          + application.getAppAttemptId());\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "30/05/13 9:13 PM",
      "commitNameOld": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 3.99,
      "commitsBetweenForRepo": 43,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  private void launch() throws IOException, YarnRemoteException {\n+  private void launch() throws IOException, YarnException {\n     connect();\n     ContainerId masterContainerID \u003d masterContainer.getId();\n     ApplicationSubmissionContext applicationContext \u003d\n       application.getSubmissionContext();\n     LOG.info(\"Setting up container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());  \n     ContainerLaunchContext launchContext \u003d\n         createAMContainerLaunchContext(applicationContext, masterContainerID);\n     StartContainerRequest request \u003d \n         recordFactory.newRecordInstance(StartContainerRequest.class);\n     request.setContainerLaunchContext(launchContext);\n     request.setContainerToken(masterContainer.getContainerToken());\n     containerMgrProxy.startContainer(request);\n     LOG.info(\"Done launching container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException, YarnException {\n    connect();\n    ContainerId masterContainerID \u003d masterContainer.getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d \n        recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    request.setContainerToken(masterContainer.getContainerToken());\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldValue": "[IOException, YarnRemoteException]",
        "newValue": "[IOException, YarnException]"
      }
    },
    "2692675fc3b5046d2ec88542c30203c87e135b70": {
      "type": "Ybodychange",
      "commitMessage": "YARN-684. ContainerManager.startContainer should use ContainerTokenIdentifier instead of the entire Container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1488085 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/05/13 9:13 PM",
      "commitName": "2692675fc3b5046d2ec88542c30203c87e135b70",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "23/05/13 8:22 PM",
      "commitNameOld": "259edf8dca44de54033e96f7eb65a83aaa6096f2",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.03,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n   private void launch() throws IOException, YarnRemoteException {\n     connect();\n     ContainerId masterContainerID \u003d masterContainer.getId();\n     ApplicationSubmissionContext applicationContext \u003d\n       application.getSubmissionContext();\n     LOG.info(\"Setting up container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());  \n     ContainerLaunchContext launchContext \u003d\n         createAMContainerLaunchContext(applicationContext, masterContainerID);\n     StartContainerRequest request \u003d \n         recordFactory.newRecordInstance(StartContainerRequest.class);\n     request.setContainerLaunchContext(launchContext);\n-    request.setContainer(masterContainer);\n+    request.setContainerToken(masterContainer.getContainerToken());\n     containerMgrProxy.startContainer(request);\n     LOG.info(\"Done launching container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException, YarnRemoteException {\n    connect();\n    ContainerId masterContainerID \u003d masterContainer.getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d \n        recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    request.setContainerToken(masterContainer.getContainerToken());\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "92b7165a71656468f17ce8b760ce11e648932f0e": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-629. Make YarnRemoteException not be rooted at IOException. Contributed by Xuan Gong.\nMAPREDUCE-5204. Handling YarnRemoteException separately from IOException in MR app after YARN-629. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1479680 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/05/13 12:04 PM",
      "commitName": "92b7165a71656468f17ce8b760ce11e648932f0e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "24/04/13 7:46 PM",
      "commitNameOld": "be256a181985737ade3f8231b472a2438659c3b2",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 11.68,
      "commitsBetweenForRepo": 67,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,17 @@\n-  private void launch() throws IOException {\n+  private void launch() throws IOException, YarnRemoteException {\n     connect();\n     ContainerId masterContainerID \u003d masterContainer.getId();\n     ApplicationSubmissionContext applicationContext \u003d\n       application.getSubmissionContext();\n     LOG.info(\"Setting up container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());  \n     ContainerLaunchContext launchContext \u003d\n         createAMContainerLaunchContext(applicationContext, masterContainerID);\n     StartContainerRequest request \u003d \n         recordFactory.newRecordInstance(StartContainerRequest.class);\n     request.setContainerLaunchContext(launchContext);\n     request.setContainer(masterContainer);\n     containerMgrProxy.startContainer(request);\n     LOG.info(\"Done launching container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException, YarnRemoteException {\n    connect();\n    ContainerId masterContainerID \u003d masterContainer.getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d \n        recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    request.setContainer(masterContainer);\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldValue": "[IOException]",
        "newValue": "[IOException, YarnRemoteException]"
      }
    },
    "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-486. Changed NM\u0027s startContainer API to accept Container record given by RM as a direct parameter instead of as part of the ContainerLaunchContext record. Contributed by Xuan Gong.\nMAPREDUCE-5139. Update MR AM to use the modified startContainer API after YARN-486. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1467063 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/04/13 12:28 PM",
      "commitName": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/03/13 2:11 PM",
      "commitNameOld": "07573640147bb4cf3568078acae7b245e9299cf7",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 16.93,
      "commitsBetweenForRepo": 96,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,17 @@\n   private void launch() throws IOException {\n     connect();\n-    ContainerId masterContainerID \u003d application.getMasterContainer().getId();\n+    ContainerId masterContainerID \u003d masterContainer.getId();\n     ApplicationSubmissionContext applicationContext \u003d\n       application.getSubmissionContext();\n-    LOG.info(\"Setting up container \" + application.getMasterContainer() \n+    LOG.info(\"Setting up container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());  \n     ContainerLaunchContext launchContext \u003d\n         createAMContainerLaunchContext(applicationContext, masterContainerID);\n     StartContainerRequest request \u003d \n         recordFactory.newRecordInstance(StartContainerRequest.class);\n     request.setContainerLaunchContext(launchContext);\n+    request.setContainer(masterContainer);\n     containerMgrProxy.startContainer(request);\n-    LOG.info(\"Done launching container \" + application.getMasterContainer() \n+    LOG.info(\"Done launching container \" + masterContainer\n         + \" for AM \" + application.getAppAttemptId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException {\n    connect();\n    ContainerId masterContainerID \u003d masterContainer.getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d \n        recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    request.setContainer(masterContainer);\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + masterContainer\n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void launch() throws IOException {\n    connect();\n    ContainerId masterContainerID \u003d application.getMasterContainer().getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d \n        recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void launch() throws IOException {\n    connect();\n    ContainerId masterContainerID \u003d application.getMasterContainer().getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,15 @@\n+  private void launch() throws IOException {\n+    connect();\n+    ContainerId masterContainerID \u003d application.getMasterContainer().getId();\n+    ApplicationSubmissionContext applicationContext \u003d\n+      application.getSubmissionContext();\n+    LOG.info(\"Setting up container \" + application.getMasterContainer() \n+        + \" for AM \" + application.getAppAttemptId());  \n+    ContainerLaunchContext launchContext \u003d\n+        createAMContainerLaunchContext(applicationContext, masterContainerID);\n+    StartContainerRequest request \u003d recordFactory.newRecordInstance(StartContainerRequest.class);\n+    request.setContainerLaunchContext(launchContext);\n+    containerMgrProxy.startContainer(request);\n+    LOG.info(\"Done launching container \" + application.getMasterContainer() \n+        + \" for AM \" + application.getAppAttemptId());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void launch() throws IOException {\n    connect();\n    ContainerId masterContainerID \u003d application.getMasterContainer().getId();\n    ApplicationSubmissionContext applicationContext \u003d\n      application.getSubmissionContext();\n    LOG.info(\"Setting up container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());  \n    ContainerLaunchContext launchContext \u003d\n        createAMContainerLaunchContext(applicationContext, masterContainerID);\n    StartContainerRequest request \u003d recordFactory.newRecordInstance(StartContainerRequest.class);\n    request.setContainerLaunchContext(launchContext);\n    containerMgrProxy.startContainer(request);\n    LOG.info(\"Done launching container \" + application.getMasterContainer() \n        + \" for AM \" + application.getAppAttemptId());\n  }",
      "path": "hadoop-mapreduce/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/amlauncher/AMLauncher.java"
    }
  }
}