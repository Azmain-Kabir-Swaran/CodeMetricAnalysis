{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "read",
  "functionId": "read___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 884,
  "functionEndLine": 915,
  "numCommitsSeen": 66,
  "timeTaken": 3728,
  "changeHistory": [
    "843ee8d59d8bacbca0d87ccf0790772e39d16138",
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
    "3ce0a6502e78240f551c29bb27a2324ce359cd70",
    "5f6edb30c2bb648d5564c951edc25645e17e6636",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "843ee8d59d8bacbca0d87ccf0790772e39d16138": "Ybodychange",
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": "Ybodychange",
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79": "Ybodychange",
    "3ce0a6502e78240f551c29bb27a2324ce359cd70": "Ymultichange(Yexceptionschange,Ybodychange)",
    "5f6edb30c2bb648d5564c951edc25645e17e6636": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "843ee8d59d8bacbca0d87ccf0790772e39d16138": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12994. Specify PositionedReadable, add contract tests, fix problems. Contributed by Steve Loughran.\n",
      "commitDate": "08/04/16 1:36 PM",
      "commitName": "843ee8d59d8bacbca0d87ccf0790772e39d16138",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "23/02/16 9:37 PM",
      "commitNameOld": "3369a4f6916f12e9d6b97072badd1b176be443bd",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 44.62,
      "commitsBetweenForRepo": 271,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n       try {\n         int result \u003d 0;\n         result \u003d in.read(b, off, len);\n         if (result \u003e 0) {\n           pos +\u003d result;\n         }\n \n-        if (null !\u003d statistics) {\n+        if (null !\u003d statistics \u0026\u0026 result \u003e 0) {\n           statistics.incrementBytesRead(result);\n         }\n \n         // Return to the caller with the result.\n         return result;\n       } catch(IOException e) {\n \n         Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException) {\n \n           LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n               + \" Exception details: {} Error Code : {}\",\n               key, e, ((StorageException) innerException).getErrorCode());\n \n           if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n             throw new FileNotFoundException(String.format(\"%s is not found\", key));\n           }\n         }\n \n        throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics \u0026\u0026 result \u003e 0) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException) {\n\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e, ((StorageException) innerException).getErrorCode());\n\n          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n          }\n        }\n\n       throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12635. Adding Append API support for WASB. Contributed by Dushyanth.\n",
      "commitDate": "18/01/16 9:08 AM",
      "commitName": "8bc93db2e7c64830b6a662f28c8917a9eef4e7c9",
      "commitAuthor": "cnauroth",
      "commitDateOld": "09/01/16 10:18 PM",
      "commitNameOld": "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 8.45,
      "commitsBetweenForRepo": 64,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n       try {\n         int result \u003d 0;\n         result \u003d in.read(b, off, len);\n         if (result \u003e 0) {\n           pos +\u003d result;\n         }\n \n         if (null !\u003d statistics) {\n           statistics.incrementBytesRead(result);\n         }\n \n         // Return to the caller with the result.\n         return result;\n       } catch(IOException e) {\n \n-        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n+        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException) {\n \n           LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n               + \" Exception details: {} Error Code : {}\",\n               key, e, ((StorageException) innerException).getErrorCode());\n \n-          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n+          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n             throw new FileNotFoundException(String.format(\"%s is not found\", key));\n           }\n         }\n \n        throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException) {\n\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e, ((StorageException) innerException).getErrorCode());\n\n          if (NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n          }\n        }\n\n       throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12551. Introduce FileNotFoundException for WASB FileSystem API. Contributed by Dushyanth.\n",
      "commitDate": "09/01/16 10:18 PM",
      "commitName": "0e76f1fceaaaeb66bdb4818f43b9a55fc092bf79",
      "commitAuthor": "cnauroth",
      "commitDateOld": "08/01/16 8:18 PM",
      "commitNameOld": "f0fa6d869b9abb5a900ea1c9eb4eb19ec9831dc4",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 1.08,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,32 @@\n     public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n       try {\n         int result \u003d 0;\n         result \u003d in.read(b, off, len);\n         if (result \u003e 0) {\n           pos +\u003d result;\n         }\n \n         if (null !\u003d statistics) {\n           statistics.incrementBytesRead(result);\n         }\n \n         // Return to the caller with the result.\n         return result;\n       } catch(IOException e) {\n \n-        Throwable innerException \u003d checkForAzureStorageException(e);\n+        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n \n         if (innerException instanceof StorageException) {\n \n           LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n               + \" Exception details: {} Error Code : {}\",\n               key, e, ((StorageException) innerException).getErrorCode());\n \n-          if (isFileNotFoundException((StorageException) innerException)) {\n+          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n             throw new FileNotFoundException(String.format(\"%s is not found\", key));\n           }\n         }\n \n        throw e;\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n\n        Throwable innerException \u003d NativeAzureFileSystem.checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException) {\n\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e, ((StorageException) innerException).getErrorCode());\n\n          if (NativeAzureFileSystem.isFileNotFoundException((StorageException) innerException)) {\n            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n          }\n        }\n\n       throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "3ce0a6502e78240f551c29bb27a2324ce359cd70": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
      "commitDate": "02/11/15 10:17 AM",
      "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
      "commitAuthor": "cnauroth",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
          "commitDate": "02/11/15 10:17 AM",
          "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/15 10:56 PM",
          "commitNameOld": "1f7ecb0c84042783f9fcf3f77d7d889dc58c9ead",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 5.51,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-    public synchronized int read(byte[] b, int off, int len) throws IOException {\n+    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n       try {\n         int result \u003d 0;\n         result \u003d in.read(b, off, len);\n         if (result \u003e 0) {\n           pos +\u003d result;\n         }\n \n         if (null !\u003d statistics) {\n           statistics.incrementBytesRead(result);\n         }\n \n         // Return to the caller with the result.\n         return result;\n       } catch(IOException e) {\n-        if (e.getCause() instanceof StorageException) {\n-          StorageException storageExcp  \u003d (StorageException) e.getCause();\n+\n+        Throwable innerException \u003d checkForAzureStorageException(e);\n+\n+        if (innerException instanceof StorageException) {\n+\n           LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n               + \" Exception details: {} Error Code : {}\",\n-              key, e.getMessage(), storageExcp.getErrorCode());\n+              key, e, ((StorageException) innerException).getErrorCode());\n+\n+          if (isFileNotFoundException((StorageException) innerException)) {\n+            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n+          }\n         }\n-        throw e;\n+\n+       throw e;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n\n        Throwable innerException \u003d checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException) {\n\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e, ((StorageException) innerException).getErrorCode());\n\n          if (isFileNotFoundException((StorageException) innerException)) {\n            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n          }\n        }\n\n       throw e;\n      }\n    }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[FileNotFoundException, IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-12533. Introduce FileNotFoundException in WASB for read and seek API. Contributed by Dushyanth.\n",
          "commitDate": "02/11/15 10:17 AM",
          "commitName": "3ce0a6502e78240f551c29bb27a2324ce359cd70",
          "commitAuthor": "cnauroth",
          "commitDateOld": "27/10/15 10:56 PM",
          "commitNameOld": "1f7ecb0c84042783f9fcf3f77d7d889dc58c9ead",
          "commitAuthorOld": "cnauroth",
          "daysBetweenCommits": 5.51,
          "commitsBetweenForRepo": 52,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,32 @@\n-    public synchronized int read(byte[] b, int off, int len) throws IOException {\n+    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n       try {\n         int result \u003d 0;\n         result \u003d in.read(b, off, len);\n         if (result \u003e 0) {\n           pos +\u003d result;\n         }\n \n         if (null !\u003d statistics) {\n           statistics.incrementBytesRead(result);\n         }\n \n         // Return to the caller with the result.\n         return result;\n       } catch(IOException e) {\n-        if (e.getCause() instanceof StorageException) {\n-          StorageException storageExcp  \u003d (StorageException) e.getCause();\n+\n+        Throwable innerException \u003d checkForAzureStorageException(e);\n+\n+        if (innerException instanceof StorageException) {\n+\n           LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n               + \" Exception details: {} Error Code : {}\",\n-              key, e.getMessage(), storageExcp.getErrorCode());\n+              key, e, ((StorageException) innerException).getErrorCode());\n+\n+          if (isFileNotFoundException((StorageException) innerException)) {\n+            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n+          }\n         }\n-        throw e;\n+\n+       throw e;\n       }\n     }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws FileNotFoundException, IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n\n        Throwable innerException \u003d checkForAzureStorageException(e);\n\n        if (innerException instanceof StorageException) {\n\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e, ((StorageException) innerException).getErrorCode());\n\n          if (isFileNotFoundException((StorageException) innerException)) {\n            throw new FileNotFoundException(String.format(\"%s is not found\", key));\n          }\n        }\n\n       throw e;\n      }\n    }",
          "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
          "extendedDetails": {}
        }
      ]
    },
    "5f6edb30c2bb648d5564c951edc25645e17e6636": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12350. WASB Logging: Improve WASB Logging around deletes, reads and writes. Contributed by Dushyanth.\n",
      "commitDate": "05/10/15 8:11 PM",
      "commitName": "5f6edb30c2bb648d5564c951edc25645e17e6636",
      "commitAuthor": "cnauroth",
      "commitDateOld": "28/09/15 3:31 PM",
      "commitNameOld": "3abbdc929bde05f8819f5410cef1eaeb8940203f",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 7.19,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,24 @@\n     public synchronized int read(byte[] b, int off, int len) throws IOException {\n-      int result \u003d 0;\n-      result \u003d in.read(b, off, len);\n-      if (result \u003e 0) {\n-        pos +\u003d result;\n-      }\n+      try {\n+        int result \u003d 0;\n+        result \u003d in.read(b, off, len);\n+        if (result \u003e 0) {\n+          pos +\u003d result;\n+        }\n \n-      if (null !\u003d statistics) {\n-        statistics.incrementBytesRead(result);\n-      }\n+        if (null !\u003d statistics) {\n+          statistics.incrementBytesRead(result);\n+        }\n \n-      // Return to the caller with the result.\n-      return result;\n+        // Return to the caller with the result.\n+        return result;\n+      } catch(IOException e) {\n+        if (e.getCause() instanceof StorageException) {\n+          StorageException storageExcp  \u003d (StorageException) e.getCause();\n+          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n+              + \" Exception details: {} Error Code : {}\",\n+              key, e.getMessage(), storageExcp.getErrorCode());\n+        }\n+        throw e;\n+      }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws IOException {\n      try {\n        int result \u003d 0;\n        result \u003d in.read(b, off, len);\n        if (result \u003e 0) {\n          pos +\u003d result;\n        }\n\n        if (null !\u003d statistics) {\n          statistics.incrementBytesRead(result);\n        }\n\n        // Return to the caller with the result.\n        return result;\n      } catch(IOException e) {\n        if (e.getCause() instanceof StorageException) {\n          StorageException storageExcp  \u003d (StorageException) e.getCause();\n          LOG.error(\"Encountered Storage Exception for read on Blob : {}\"\n              + \" Exception details: {} Error Code : {}\",\n              key, e.getMessage(), storageExcp.getErrorCode());\n        }\n        throw e;\n      }\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,14 @@\n+    public synchronized int read(byte[] b, int off, int len) throws IOException {\n+      int result \u003d 0;\n+      result \u003d in.read(b, off, len);\n+      if (result \u003e 0) {\n+        pos +\u003d result;\n+      }\n+\n+      if (null !\u003d statistics) {\n+        statistics.incrementBytesRead(result);\n+      }\n+\n+      // Return to the caller with the result.\n+      return result;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public synchronized int read(byte[] b, int off, int len) throws IOException {\n      int result \u003d 0;\n      result \u003d in.read(b, off, len);\n      if (result \u003e 0) {\n        pos +\u003d result;\n      }\n\n      if (null !\u003d statistics) {\n        statistics.incrementBytesRead(result);\n      }\n\n      // Return to the caller with the result.\n      return result;\n    }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}