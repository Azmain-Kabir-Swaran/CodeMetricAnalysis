{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AzureNativeFileSystemStore.java",
  "functionName": "connectUsingCredentials",
  "functionId": "connectUsingCredentials___accountName-String__credentials-StorageCredentials__containerName-String",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
  "functionStartLine": 883,
  "functionEndLine": 905,
  "numCommitsSeen": 53,
  "timeTaken": 2767,
  "changeHistory": [
    "c6bd73c6c5760c3a52203e6a51628587ceec6896",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82"
  ],
  "changeHistoryShort": {
    "c6bd73c6c5760c3a52203e6a51628587ceec6896": "Ybodychange",
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": "Ybodychange",
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c6bd73c6c5760c3a52203e6a51628587ceec6896": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14547. [WASB] the configured retry policy is not used for all storage operations.\nContributed by Thomas.\n",
      "commitDate": "23/06/17 1:38 PM",
      "commitName": "c6bd73c6c5760c3a52203e6a51628587ceec6896",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "05/06/17 3:56 PM",
      "commitNameOld": "5fd9742c83fbeae96bf0913bdcdf77fafbf15b2f",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 17.9,
      "commitsBetweenForRepo": 90,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,24 @@\n   private void connectUsingCredentials(String accountName,\n       StorageCredentials credentials, String containerName)\n       throws URISyntaxException, StorageException, AzureException {\n \n     URI blobEndPoint;\n     if (isStorageEmulatorAccount(accountName)) {\n       isStorageEmulator \u003d true;\n       CloudStorageAccount account \u003d\n           CloudStorageAccount.getDevelopmentStorageAccount();\n       storageInteractionLayer.createBlobClient(account);\n     } else {\n       blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" +\n           accountName);\n       storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n     }\n     suppressRetryPolicyInClientIfNeeded();\n \n     // Capture the container reference for debugging purposes.\n     container \u003d storageInteractionLayer.getContainerReference(containerName);\n     rootDirectory \u003d container.getDirectoryReference(\"\");\n \n     // Can only create container if using account key credentials\n     canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n-\n-    // Configure Azure storage session.\n-    configureAzureStorageSession();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectUsingCredentials(String accountName,\n      StorageCredentials credentials, String containerName)\n      throws URISyntaxException, StorageException, AzureException {\n\n    URI blobEndPoint;\n    if (isStorageEmulatorAccount(accountName)) {\n      isStorageEmulator \u003d true;\n      CloudStorageAccount account \u003d\n          CloudStorageAccount.getDevelopmentStorageAccount();\n      storageInteractionLayer.createBlobClient(account);\n    } else {\n      blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" +\n          accountName);\n      storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n    }\n    suppressRetryPolicyInClientIfNeeded();\n\n    // Capture the container reference for debugging purposes.\n    container \u003d storageInteractionLayer.getContainerReference(containerName);\n    rootDirectory \u003d container.getDirectoryReference(\"\");\n\n    // Can only create container if using account key credentials\n    canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "2217e2f8ff418b88eac6ad36cafe3a9795a11f40": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10809. hadoop-azure: page blob support. Contributed by Dexter Bradshaw, Mostafa Elhemali, Eric Hanson, and Mike Liddell.\n",
      "commitDate": "08/10/14 2:20 PM",
      "commitName": "2217e2f8ff418b88eac6ad36cafe3a9795a11f40",
      "commitAuthor": "cnauroth",
      "commitDateOld": "24/06/14 1:52 PM",
      "commitNameOld": "0d91576ec31f63402f2db6107a04155368e2632d",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 106.02,
      "commitsBetweenForRepo": 1005,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   private void connectUsingCredentials(String accountName,\n       StorageCredentials credentials, String containerName)\n       throws URISyntaxException, StorageException, AzureException {\n \n+    URI blobEndPoint;\n     if (isStorageEmulatorAccount(accountName)) {\n       isStorageEmulator \u003d true;\n-      CloudStorageAccount account \u003d CloudStorageAccount\n-          .getDevelopmentStorageAccount();\n+      CloudStorageAccount account \u003d\n+          CloudStorageAccount.getDevelopmentStorageAccount();\n       storageInteractionLayer.createBlobClient(account);\n     } else {\n-      URI blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" + accountName);\n+      blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" +\n+          accountName);\n       storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n     }\n     suppressRetryPolicyInClientIfNeeded();\n \n     // Capture the container reference for debugging purposes.\n     container \u003d storageInteractionLayer.getContainerReference(containerName);\n     rootDirectory \u003d container.getDirectoryReference(\"\");\n \n     // Can only create container if using account key credentials\n     canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n \n     // Configure Azure storage session.\n     configureAzureStorageSession();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectUsingCredentials(String accountName,\n      StorageCredentials credentials, String containerName)\n      throws URISyntaxException, StorageException, AzureException {\n\n    URI blobEndPoint;\n    if (isStorageEmulatorAccount(accountName)) {\n      isStorageEmulator \u003d true;\n      CloudStorageAccount account \u003d\n          CloudStorageAccount.getDevelopmentStorageAccount();\n      storageInteractionLayer.createBlobClient(account);\n    } else {\n      blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" +\n          accountName);\n      storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n    }\n    suppressRetryPolicyInClientIfNeeded();\n\n    // Capture the container reference for debugging purposes.\n    container \u003d storageInteractionLayer.getContainerReference(containerName);\n    rootDirectory \u003d container.getDirectoryReference(\"\");\n\n    // Can only create container if using account key credentials\n    canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n\n    // Configure Azure storage session.\n    configureAzureStorageSession();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java",
      "extendedDetails": {}
    },
    "81bc395deb3ba00567dc067d6ca71bacf9e3bc82": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9629. Support Windows Azure Storage - Blob as a file system in Hadoop. Contributed by Dexter Bradshaw, Mostafa Elhemali, Xi Fang, Johannes Klein, David Lao, Mike Liddell, Chuan Liu, Lengning Liu, Ivan Mitic, Michael Rys, Alexander Stojanovic, Brian Swan, and Min Wei.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/06/14 3:26 PM",
      "commitName": "81bc395deb3ba00567dc067d6ca71bacf9e3bc82",
      "commitAuthor": "Chris Nauroth",
      "diff": "@@ -0,0 +1,25 @@\n+  private void connectUsingCredentials(String accountName,\n+      StorageCredentials credentials, String containerName)\n+      throws URISyntaxException, StorageException, AzureException {\n+\n+    if (isStorageEmulatorAccount(accountName)) {\n+      isStorageEmulator \u003d true;\n+      CloudStorageAccount account \u003d CloudStorageAccount\n+          .getDevelopmentStorageAccount();\n+      storageInteractionLayer.createBlobClient(account);\n+    } else {\n+      URI blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" + accountName);\n+      storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n+    }\n+    suppressRetryPolicyInClientIfNeeded();\n+\n+    // Capture the container reference for debugging purposes.\n+    container \u003d storageInteractionLayer.getContainerReference(containerName);\n+    rootDirectory \u003d container.getDirectoryReference(\"\");\n+\n+    // Can only create container if using account key credentials\n+    canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n+\n+    // Configure Azure storage session.\n+    configureAzureStorageSession();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void connectUsingCredentials(String accountName,\n      StorageCredentials credentials, String containerName)\n      throws URISyntaxException, StorageException, AzureException {\n\n    if (isStorageEmulatorAccount(accountName)) {\n      isStorageEmulator \u003d true;\n      CloudStorageAccount account \u003d CloudStorageAccount\n          .getDevelopmentStorageAccount();\n      storageInteractionLayer.createBlobClient(account);\n    } else {\n      URI blobEndPoint \u003d new URI(getHTTPScheme() + \"://\" + accountName);\n      storageInteractionLayer.createBlobClient(blobEndPoint, credentials);\n    }\n    suppressRetryPolicyInClientIfNeeded();\n\n    // Capture the container reference for debugging purposes.\n    container \u003d storageInteractionLayer.getContainerReference(containerName);\n    rootDirectory \u003d container.getDirectoryReference(\"\");\n\n    // Can only create container if using account key credentials\n    canCreateOrModifyContainer \u003d credentials instanceof StorageCredentialsAccountAndKey;\n\n    // Configure Azure storage session.\n    configureAzureStorageSession();\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/AzureNativeFileSystemStore.java"
    }
  }
}