{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "JvmPauseMonitor.java",
  "functionName": "formatMessage",
  "functionId": "formatMessage___extraSleepTime-long__gcTimesAfterSleep-Map__String,GcTimes____gcTimesBeforeSleep-Map__String,GcTimes__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JvmPauseMonitor.java",
  "functionStartLine": 121,
  "functionEndLine": 146,
  "numCommitsSeen": 11,
  "timeTaken": 794,
  "changeHistory": [
    "32076136f7734cb5ca008f10c2088ccd81c2ca99"
  ],
  "changeHistoryShort": {
    "32076136f7734cb5ca008f10c2088ccd81c2ca99": "Yintroduced"
  },
  "changeHistoryDetails": {
    "32076136f7734cb5ca008f10c2088ccd81c2ca99": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9618.  thread which detects GC pauses (Todd Lipcon via Colin Patrick McCabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1503806 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/07/13 10:48 AM",
      "commitName": "32076136f7734cb5ca008f10c2088ccd81c2ca99",
      "commitAuthor": "Colin McCabe",
      "diff": "@@ -0,0 +1,26 @@\n+  private String formatMessage(long extraSleepTime,\n+      Map\u003cString, GcTimes\u003e gcTimesAfterSleep,\n+      Map\u003cString, GcTimes\u003e gcTimesBeforeSleep) {\n+    \n+    Set\u003cString\u003e gcBeanNames \u003d Sets.intersection(\n+        gcTimesAfterSleep.keySet(),\n+        gcTimesBeforeSleep.keySet());\n+    List\u003cString\u003e gcDiffs \u003d Lists.newArrayList();\n+    for (String name : gcBeanNames) {\n+      GcTimes diff \u003d gcTimesAfterSleep.get(name).subtract(\n+          gcTimesBeforeSleep.get(name));\n+      if (diff.gcCount !\u003d 0) {\n+        gcDiffs.add(\"GC pool \u0027\" + name + \"\u0027 had collection(s): \" +\n+            diff.toString());\n+      }\n+    }\n+    \n+    String ret \u003d \"Detected pause in JVM or host machine (eg GC): \" +\n+        \"pause of approximately \" + extraSleepTime + \"ms\\n\";\n+    if (gcDiffs.isEmpty()) {\n+      ret +\u003d \"No GCs detected\";\n+    } else {\n+      ret +\u003d Joiner.on(\"\\n\").join(gcDiffs);\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private String formatMessage(long extraSleepTime,\n      Map\u003cString, GcTimes\u003e gcTimesAfterSleep,\n      Map\u003cString, GcTimes\u003e gcTimesBeforeSleep) {\n    \n    Set\u003cString\u003e gcBeanNames \u003d Sets.intersection(\n        gcTimesAfterSleep.keySet(),\n        gcTimesBeforeSleep.keySet());\n    List\u003cString\u003e gcDiffs \u003d Lists.newArrayList();\n    for (String name : gcBeanNames) {\n      GcTimes diff \u003d gcTimesAfterSleep.get(name).subtract(\n          gcTimesBeforeSleep.get(name));\n      if (diff.gcCount !\u003d 0) {\n        gcDiffs.add(\"GC pool \u0027\" + name + \"\u0027 had collection(s): \" +\n            diff.toString());\n      }\n    }\n    \n    String ret \u003d \"Detected pause in JVM or host machine (eg GC): \" +\n        \"pause of approximately \" + extraSleepTime + \"ms\\n\";\n    if (gcDiffs.isEmpty()) {\n      ret +\u003d \"No GCs detected\";\n    } else {\n      ret +\u003d Joiner.on(\"\\n\").join(gcDiffs);\n    }\n    return ret;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/JvmPauseMonitor.java"
    }
  }
}