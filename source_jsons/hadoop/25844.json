{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerAllocator.java",
  "functionName": "getResourceLimit",
  "functionId": "getResourceLimit",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
  "functionStartLine": 1038,
  "functionEndLine": 1047,
  "numCommitsSeen": 130,
  "timeTaken": 9017,
  "changeHistory": [
    "4aa9b3e75ca86917125e56e1b438668273a5d87f",
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698",
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": "Ybodychange",
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": "Ybodychange",
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012": "Ymodifierchange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4aa9b3e75ca86917125e56e1b438668273a5d87f": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-6302. Incorrect headroom can lead to a deadlock between map and reduce allocations. (kasha)\n",
      "commitDate": "09/10/15 7:37 AM",
      "commitName": "4aa9b3e75ca86917125e56e1b438668273a5d87f",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "21/09/15 8:54 PM",
      "commitNameOld": "dfd807afab0fae3839c9cc5d552aa0304444f956",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 17.45,
      "commitsBetweenForRepo": 132,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,10 @@\n   public Resource getResourceLimit() {\n     Resource headRoom \u003d getAvailableResources();\n-    if (headRoom \u003d\u003d null) {\n-      headRoom \u003d Resources.none();\n-    }\n     Resource assignedMapResource \u003d\n         Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n     Resource assignedReduceResource \u003d\n         Resources.multiply(reduceResourceRequest,\n           assignedRequests.reduces.size());\n     return Resources.add(headRoom,\n       Resources.add(assignedMapResource, assignedReduceResource));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Resource getResourceLimit() {\n    Resource headRoom \u003d getAvailableResources();\n    Resource assignedMapResource \u003d\n        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n    Resource assignedReduceResource \u003d\n        Resources.multiply(reduceResourceRequest,\n          assignedRequests.reduces.size());\n    return Resources.add(headRoom,\n      Resources.add(assignedMapResource, assignedReduceResource));\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "376233cdd4a4ddbde5a92a0627f78338cb4c38b7": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.\n",
      "commitDate": "22/09/14 9:28 AM",
      "commitName": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.\n",
          "commitDate": "22/09/14 9:28 AM",
          "commitName": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "08/08/14 2:38 PM",
          "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
          "commitAuthorOld": "Xuan Gong",
          "daysBetweenCommits": 44.78,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,13 @@\n-  public int getMemLimit() {\n-    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n-    return headRoom + assignedRequests.maps.size() * mapResourceRequest +\n-       assignedRequests.reduces.size() * reduceResourceRequest;\n+  public Resource getResourceLimit() {\n+    Resource headRoom \u003d getAvailableResources();\n+    if (headRoom \u003d\u003d null) {\n+      headRoom \u003d Resources.none();\n+    }\n+    Resource assignedMapResource \u003d\n+        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n+    Resource assignedReduceResource \u003d\n+        Resources.multiply(reduceResourceRequest,\n+          assignedRequests.reduces.size());\n+    return Resources.add(headRoom,\n+      Resources.add(assignedMapResource, assignedReduceResource));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource getResourceLimit() {\n    Resource headRoom \u003d getAvailableResources();\n    if (headRoom \u003d\u003d null) {\n      headRoom \u003d Resources.none();\n    }\n    Resource assignedMapResource \u003d\n        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n    Resource assignedReduceResource \u003d\n        Resources.multiply(reduceResourceRequest,\n          assignedRequests.reduces.size());\n    return Resources.add(headRoom,\n      Resources.add(assignedMapResource, assignedReduceResource));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "getMemLimit",
            "newValue": "getResourceLimit"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.\n",
          "commitDate": "22/09/14 9:28 AM",
          "commitName": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "08/08/14 2:38 PM",
          "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
          "commitAuthorOld": "Xuan Gong",
          "daysBetweenCommits": 44.78,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,13 @@\n-  public int getMemLimit() {\n-    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n-    return headRoom + assignedRequests.maps.size() * mapResourceRequest +\n-       assignedRequests.reduces.size() * reduceResourceRequest;\n+  public Resource getResourceLimit() {\n+    Resource headRoom \u003d getAvailableResources();\n+    if (headRoom \u003d\u003d null) {\n+      headRoom \u003d Resources.none();\n+    }\n+    Resource assignedMapResource \u003d\n+        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n+    Resource assignedReduceResource \u003d\n+        Resources.multiply(reduceResourceRequest,\n+          assignedRequests.reduces.size());\n+    return Resources.add(headRoom,\n+      Resources.add(assignedMapResource, assignedReduceResource));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource getResourceLimit() {\n    Resource headRoom \u003d getAvailableResources();\n    if (headRoom \u003d\u003d null) {\n      headRoom \u003d Resources.none();\n    }\n    Resource assignedMapResource \u003d\n        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n    Resource assignedReduceResource \u003d\n        Resources.multiply(reduceResourceRequest,\n          assignedRequests.reduces.size());\n    return Resources.add(headRoom,\n      Resources.add(assignedMapResource, assignedReduceResource));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {
            "oldValue": "int",
            "newValue": "Resource"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5279. Made MR headroom calculation honor cpu dimension when YARN scheduler resource type is memory plus cpu. Contributed by Peng Zhang and Varun Vasudev.\n",
          "commitDate": "22/09/14 9:28 AM",
          "commitName": "376233cdd4a4ddbde5a92a0627f78338cb4c38b7",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "08/08/14 2:38 PM",
          "commitNameOld": "eeb4acd955802e2a84ea94cecf2e2341b83d5efb",
          "commitAuthorOld": "Xuan Gong",
          "daysBetweenCommits": 44.78,
          "commitsBetweenForRepo": 414,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,5 +1,13 @@\n-  public int getMemLimit() {\n-    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n-    return headRoom + assignedRequests.maps.size() * mapResourceRequest +\n-       assignedRequests.reduces.size() * reduceResourceRequest;\n+  public Resource getResourceLimit() {\n+    Resource headRoom \u003d getAvailableResources();\n+    if (headRoom \u003d\u003d null) {\n+      headRoom \u003d Resources.none();\n+    }\n+    Resource assignedMapResource \u003d\n+        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n+    Resource assignedReduceResource \u003d\n+        Resources.multiply(reduceResourceRequest,\n+          assignedRequests.reduces.size());\n+    return Resources.add(headRoom,\n+      Resources.add(assignedMapResource, assignedReduceResource));\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Resource getResourceLimit() {\n    Resource headRoom \u003d getAvailableResources();\n    if (headRoom \u003d\u003d null) {\n      headRoom \u003d Resources.none();\n    }\n    Resource assignedMapResource \u003d\n        Resources.multiply(mapResourceRequest, assignedRequests.maps.size());\n    Resource assignedReduceResource \u003d\n        Resources.multiply(reduceResourceRequest,\n          assignedRequests.reduces.size());\n    return Resources.add(headRoom,\n      Resources.add(assignedMapResource, assignedReduceResource));\n  }",
          "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
          "extendedDetails": {}
        }
      ]
    },
    "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5844. Add a configurable delay to reducer-preemption. (Maysam Yabandeh via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1603957 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:22 AM",
      "commitName": "7b9c074b7635e3dcdc38d4e7fb1afbff7145e698",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "22/04/14 11:44 AM",
      "commitNameOld": "4a91b876db768e7997e740d754aeea66c3b7a36c",
      "commitAuthorOld": "Chris Nauroth",
      "daysBetweenCommits": 57.94,
      "commitsBetweenForRepo": 333,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n   public int getMemLimit() {\n     int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n-    return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n-       assignedRequests.reduces.size() * reduceResourceReqt;\n+    return headRoom + assignedRequests.maps.size() * mapResourceRequest +\n+       assignedRequests.reduces.size() * reduceResourceRequest;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getMemLimit() {\n    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n    return headRoom + assignedRequests.maps.size() * mapResourceRequest +\n       assignedRequests.reduces.size() * reduceResourceRequest;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {}
    },
    "55e94dc5ef4171c4e7b57942f22ead9a01dd9012": {
      "type": "Ymodifierchange",
      "commitMessage": "MAPREDUCE-3490. Fixed MapReduce AM to count failed maps also towards Reduce ramp up. Contributed by Sharad Agarwal and Arun C Murthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227226 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/01/12 9:10 AM",
      "commitName": "55e94dc5ef4171c4e7b57942f22ead9a01dd9012",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "20/12/11 3:27 PM",
      "commitNameOld": "e7543b944c2b35d0a1ca0a92efeca47ad414ac7a",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 14.74,
      "commitsBetweenForRepo": 34,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n-  private int getMemLimit() {\n+  public int getMemLimit() {\n     int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n     return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n        assignedRequests.reduces.size() * reduceResourceReqt;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int getMemLimit() {\n    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n    return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n       assignedRequests.reduces.size() * reduceResourceReqt;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[public]"
      }
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private int getMemLimit() {\n    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n    return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n       assignedRequests.reduces.size() * reduceResourceReqt;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,5 @@\n+  private int getMemLimit() {\n+    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n+    return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n+       assignedRequests.reduces.size() * reduceResourceReqt;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int getMemLimit() {\n    int headRoom \u003d getAvailableResources() !\u003d null ? getAvailableResources().getMemory() : 0;\n    return headRoom + assignedRequests.maps.size() * mapResourceReqt + \n       assignedRequests.reduces.size() * reduceResourceReqt;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerAllocator.java"
    }
  }
}