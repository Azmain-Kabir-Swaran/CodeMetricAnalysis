{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPServiceActor.java",
  "functionName": "scheduleNextHeartbeat",
  "functionId": "scheduleNextHeartbeat",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
  "functionStartLine": 1164,
  "functionEndLine": 1169,
  "numCommitsSeen": 125,
  "timeTaken": 2238,
  "changeHistory": [
    "2759689d7d23001f007cb0dbe2521de90734dd5c",
    "d8736eb9ca351b82854601ea3b1fbc3c9fab44e4",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd"
  ],
  "changeHistoryShort": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": "Ybodychange",
    "d8736eb9ca351b82854601ea3b1fbc3c9fab44e4": "Ybodychange",
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2759689d7d23001f007cb0dbe2521de90734dd5c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9239. DataNode Lifeline Protocol: an alternative protocol for reporting DataNode liveness. Contributed by Chris Nauroth.\n",
      "commitDate": "04/03/16 3:29 PM",
      "commitName": "2759689d7d23001f007cb0dbe2521de90734dd5c",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "26/02/16 3:32 PM",
      "commitNameOld": "d1d4e16690cc85f7f22fbead9cf596260819b561",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 7.0,
      "commitsBetweenForRepo": 48,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,6 @@\n     long scheduleNextHeartbeat() {\n       // Numerical overflow is possible here and is okay.\n       nextHeartbeatTime \u003d monotonicNow() + heartbeatIntervalMs;\n+      scheduleNextLifeline(nextHeartbeatTime);\n       return nextHeartbeatTime;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    long scheduleNextHeartbeat() {\n      // Numerical overflow is possible here and is okay.\n      nextHeartbeatTime \u003d monotonicNow() + heartbeatIntervalMs;\n      scheduleNextLifeline(nextHeartbeatTime);\n      return nextHeartbeatTime;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "d8736eb9ca351b82854601ea3b1fbc3c9fab44e4": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9305. Delayed heartbeat processing causes storm of subsequent heartbeats. (Contributed by Arpit Agarwal)\n",
      "commitDate": "26/10/15 3:54 PM",
      "commitName": "d8736eb9ca351b82854601ea3b1fbc3c9fab44e4",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/09/15 5:58 PM",
      "commitNameOld": "5652131d2ea68c408dd3cd8bee31723642a8cdde",
      "commitAuthorOld": "yliu",
      "daysBetweenCommits": 54.91,
      "commitsBetweenForRepo": 418,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,5 +1,5 @@\n     long scheduleNextHeartbeat() {\n       // Numerical overflow is possible here and is okay.\n-      nextHeartbeatTime +\u003d heartbeatIntervalMs;\n+      nextHeartbeatTime \u003d monotonicNow() + heartbeatIntervalMs;\n       return nextHeartbeatTime;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    long scheduleNextHeartbeat() {\n      // Numerical overflow is possible here and is okay.\n      nextHeartbeatTime \u003d monotonicNow() + heartbeatIntervalMs;\n      return nextHeartbeatTime;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java",
      "extendedDetails": {}
    },
    "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8163. Using monotonicNow for block report scheduling causes test failures on recently restarted systems. (Arpit Agarwal)\n",
      "commitDate": "21/04/15 10:58 AM",
      "commitName": "dfc1c4c303cf15afc6c3361ed9d3238562f73cbd",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,5 @@\n+    long scheduleNextHeartbeat() {\n+      // Numerical overflow is possible here and is okay.\n+      nextHeartbeatTime +\u003d heartbeatIntervalMs;\n+      return nextHeartbeatTime;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    long scheduleNextHeartbeat() {\n      // Numerical overflow is possible here and is okay.\n      nextHeartbeatTime +\u003d heartbeatIntervalMs;\n      return nextHeartbeatTime;\n    }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPServiceActor.java"
    }
  }
}