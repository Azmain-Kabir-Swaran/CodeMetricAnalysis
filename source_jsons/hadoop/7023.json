{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirectory.java",
  "functionName": "getAttributes",
  "functionId": "getAttributes___iip-INodesInPath",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
  "functionStartLine": 2023,
  "functionEndLine": 2040,
  "numCommitsSeen": 609,
  "timeTaken": 6181,
  "changeHistory": [
    "d77ed238a911fc85d6f4bbce606cac7ec44f557f",
    "a0730aa5ced7666a8c92f9fb830b615f5f9f477a",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
    "9f4bf3bdf9e74800643477cfb18361e01cf6859c",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2"
  ],
  "changeHistoryShort": {
    "d77ed238a911fc85d6f4bbce606cac7ec44f557f": "Ymultichange(Yexceptionschange,Ybodychange)",
    "a0730aa5ced7666a8c92f9fb830b615f5f9f477a": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": "Ybodychange",
    "9f4bf3bdf9e74800643477cfb18361e01cf6859c": "Ybodychange",
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d77ed238a911fc85d6f4bbce606cac7ec44f557f": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-12357. Let NameNode to bypass external attribute provider for configured users. Contributed by Yongjun Zhang, Arun Suresh.\n",
      "commitDate": "07/09/17 9:50 AM",
      "commitName": "d77ed238a911fc85d6f4bbce606cac7ec44f557f",
      "commitAuthor": "Yongjun Zhang",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-12357. Let NameNode to bypass external attribute provider for configured users. Contributed by Yongjun Zhang, Arun Suresh.\n",
          "commitDate": "07/09/17 9:50 AM",
          "commitName": "d77ed238a911fc85d6f4bbce606cac7ec44f557f",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 14.7,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   INodeAttributes getAttributes(INodesInPath iip)\n-      throws FileNotFoundException {\n+      throws IOException {\n     INode node \u003d FSDirectory.resolveLastINode(iip);\n     int snapshot \u003d iip.getPathSnapshotId();\n     INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n-    if (attributeProvider !\u003d null) {\n+    UserGroupInformation ugi \u003d NameNode.getRemoteUser();\n+    INodeAttributeProvider ap \u003d this.getUserFilteredAttributeProvider(ugi);\n+    if (ap !\u003d null) {\n       // permission checking sends the full components array including the\n       // first empty component for the root.  however file status\n       // related calls are expected to strip out the root component according\n       // to TestINodeAttributeProvider.\n       byte[][] components \u003d iip.getPathComponents();\n       components \u003d Arrays.copyOfRange(components, 1, components.length);\n-      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n+      nodeAttrs \u003d ap.getAttributes(components, nodeAttrs);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodeAttributes getAttributes(INodesInPath iip)\n      throws IOException {\n    INode node \u003d FSDirectory.resolveLastINode(iip);\n    int snapshot \u003d iip.getPathSnapshotId();\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    UserGroupInformation ugi \u003d NameNode.getRemoteUser();\n    INodeAttributeProvider ap \u003d this.getUserFilteredAttributeProvider(ugi);\n    if (ap !\u003d null) {\n      // permission checking sends the full components array including the\n      // first empty component for the root.  however file status\n      // related calls are expected to strip out the root component according\n      // to TestINodeAttributeProvider.\n      byte[][] components \u003d iip.getPathComponents();\n      components \u003d Arrays.copyOfRange(components, 1, components.length);\n      nodeAttrs \u003d ap.getAttributes(components, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[FileNotFoundException]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12357. Let NameNode to bypass external attribute provider for configured users. Contributed by Yongjun Zhang, Arun Suresh.\n",
          "commitDate": "07/09/17 9:50 AM",
          "commitName": "d77ed238a911fc85d6f4bbce606cac7ec44f557f",
          "commitAuthor": "Yongjun Zhang",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 14.7,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n   INodeAttributes getAttributes(INodesInPath iip)\n-      throws FileNotFoundException {\n+      throws IOException {\n     INode node \u003d FSDirectory.resolveLastINode(iip);\n     int snapshot \u003d iip.getPathSnapshotId();\n     INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n-    if (attributeProvider !\u003d null) {\n+    UserGroupInformation ugi \u003d NameNode.getRemoteUser();\n+    INodeAttributeProvider ap \u003d this.getUserFilteredAttributeProvider(ugi);\n+    if (ap !\u003d null) {\n       // permission checking sends the full components array including the\n       // first empty component for the root.  however file status\n       // related calls are expected to strip out the root component according\n       // to TestINodeAttributeProvider.\n       byte[][] components \u003d iip.getPathComponents();\n       components \u003d Arrays.copyOfRange(components, 1, components.length);\n-      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n+      nodeAttrs \u003d ap.getAttributes(components, nodeAttrs);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodeAttributes getAttributes(INodesInPath iip)\n      throws IOException {\n    INode node \u003d FSDirectory.resolveLastINode(iip);\n    int snapshot \u003d iip.getPathSnapshotId();\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    UserGroupInformation ugi \u003d NameNode.getRemoteUser();\n    INodeAttributeProvider ap \u003d this.getUserFilteredAttributeProvider(ugi);\n    if (ap !\u003d null) {\n      // permission checking sends the full components array including the\n      // first empty component for the root.  however file status\n      // related calls are expected to strip out the root component according\n      // to TestINodeAttributeProvider.\n      byte[][] components \u003d iip.getPathComponents();\n      components \u003d Arrays.copyOfRange(components, 1, components.length);\n      nodeAttrs \u003d ap.getAttributes(components, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "a0730aa5ced7666a8c92f9fb830b615f5f9f477a": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-10851. FSDirStatAndListingOp: stop passing path as string. Contributed by Daryn Sharp.\n",
      "commitDate": "30/09/16 11:03 AM",
      "commitName": "a0730aa5ced7666a8c92f9fb830b615f5f9f477a",
      "commitAuthor": "Kihwal Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10851. FSDirStatAndListingOp: stop passing path as string. Contributed by Daryn Sharp.\n",
          "commitDate": "30/09/16 11:03 AM",
          "commitName": "a0730aa5ced7666a8c92f9fb830b615f5f9f477a",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/09/16 3:57 PM",
          "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.8,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-  INodeAttributes getAttributes(String fullPath, byte[] path,\n-      INode node, int snapshot) {\n+  INodeAttributes getAttributes(INodesInPath iip)\n+      throws FileNotFoundException {\n+    INode node \u003d FSDirectory.resolveLastINode(iip);\n+    int snapshot \u003d iip.getPathSnapshotId();\n     INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     if (attributeProvider !\u003d null) {\n-      fullPath \u003d fullPath\n-          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n-          + DFSUtil.bytes2String(path);\n-      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n+      // permission checking sends the full components array including the\n+      // first empty component for the root.  however file status\n+      // related calls are expected to strip out the root component according\n+      // to TestINodeAttributeProvider.\n+      byte[][] components \u003d iip.getPathComponents();\n+      components \u003d Arrays.copyOfRange(components, 1, components.length);\n+      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodeAttributes getAttributes(INodesInPath iip)\n      throws FileNotFoundException {\n    INode node \u003d FSDirectory.resolveLastINode(iip);\n    int snapshot \u003d iip.getPathSnapshotId();\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    if (attributeProvider !\u003d null) {\n      // permission checking sends the full components array including the\n      // first empty component for the root.  however file status\n      // related calls are expected to strip out the root component according\n      // to TestINodeAttributeProvider.\n      byte[][] components \u003d iip.getPathComponents();\n      components \u003d Arrays.copyOfRange(components, 1, components.length);\n      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[fullPath-String, path-byte[], node-INode, snapshot-int]",
            "newValue": "[iip-INodesInPath]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-10851. FSDirStatAndListingOp: stop passing path as string. Contributed by Daryn Sharp.\n",
          "commitDate": "30/09/16 11:03 AM",
          "commitName": "a0730aa5ced7666a8c92f9fb830b615f5f9f477a",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/09/16 3:57 PM",
          "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.8,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-  INodeAttributes getAttributes(String fullPath, byte[] path,\n-      INode node, int snapshot) {\n+  INodeAttributes getAttributes(INodesInPath iip)\n+      throws FileNotFoundException {\n+    INode node \u003d FSDirectory.resolveLastINode(iip);\n+    int snapshot \u003d iip.getPathSnapshotId();\n     INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     if (attributeProvider !\u003d null) {\n-      fullPath \u003d fullPath\n-          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n-          + DFSUtil.bytes2String(path);\n-      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n+      // permission checking sends the full components array including the\n+      // first empty component for the root.  however file status\n+      // related calls are expected to strip out the root component according\n+      // to TestINodeAttributeProvider.\n+      byte[][] components \u003d iip.getPathComponents();\n+      components \u003d Arrays.copyOfRange(components, 1, components.length);\n+      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodeAttributes getAttributes(INodesInPath iip)\n      throws FileNotFoundException {\n    INode node \u003d FSDirectory.resolveLastINode(iip);\n    int snapshot \u003d iip.getPathSnapshotId();\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    if (attributeProvider !\u003d null) {\n      // permission checking sends the full components array including the\n      // first empty component for the root.  however file status\n      // related calls are expected to strip out the root component according\n      // to TestINodeAttributeProvider.\n      byte[][] components \u003d iip.getPathComponents();\n      components \u003d Arrays.copyOfRange(components, 1, components.length);\n      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[FileNotFoundException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10851. FSDirStatAndListingOp: stop passing path as string. Contributed by Daryn Sharp.\n",
          "commitDate": "30/09/16 11:03 AM",
          "commitName": "a0730aa5ced7666a8c92f9fb830b615f5f9f477a",
          "commitAuthor": "Kihwal Lee",
          "commitDateOld": "28/09/16 3:57 PM",
          "commitNameOld": "5f34402adae191232fe78e62990396ca07f314bb",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 1.8,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,16 @@\n-  INodeAttributes getAttributes(String fullPath, byte[] path,\n-      INode node, int snapshot) {\n+  INodeAttributes getAttributes(INodesInPath iip)\n+      throws FileNotFoundException {\n+    INode node \u003d FSDirectory.resolveLastINode(iip);\n+    int snapshot \u003d iip.getPathSnapshotId();\n     INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     if (attributeProvider !\u003d null) {\n-      fullPath \u003d fullPath\n-          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n-          + DFSUtil.bytes2String(path);\n-      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n+      // permission checking sends the full components array including the\n+      // first empty component for the root.  however file status\n+      // related calls are expected to strip out the root component according\n+      // to TestINodeAttributeProvider.\n+      byte[][] components \u003d iip.getPathComponents();\n+      components \u003d Arrays.copyOfRange(components, 1, components.length);\n+      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  INodeAttributes getAttributes(INodesInPath iip)\n      throws FileNotFoundException {\n    INode node \u003d FSDirectory.resolveLastINode(iip);\n    int snapshot \u003d iip.getPathSnapshotId();\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    if (attributeProvider !\u003d null) {\n      // permission checking sends the full components array including the\n      // first empty component for the root.  however file status\n      // related calls are expected to strip out the root component according\n      // to TestINodeAttributeProvider.\n      byte[][] components \u003d iip.getPathComponents();\n      components \u003d Arrays.copyOfRange(components, 1, components.length);\n      nodeAttrs \u003d attributeProvider.getAttributes(components, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
          "extendedDetails": {}
        }
      ]
    },
    "438a9f047eb6af2a4b916a4f6ef6f68adeab8068": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10673. Optimize FSPermissionChecker\u0027s internal path usage. Contributed by Daryn Sharp.\n",
      "commitDate": "04/08/16 2:14 PM",
      "commitName": "438a9f047eb6af2a4b916a4f6ef6f68adeab8068",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "03/08/16 11:12 AM",
      "commitNameOld": "22ef5286bc8511ddee9594b7cecc598bf41a850b",
      "commitAuthorOld": "Kihwal Lee",
      "daysBetweenCommits": 1.13,
      "commitsBetweenForRepo": 21,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,11 @@\n   INodeAttributes getAttributes(String fullPath, byte[] path,\n       INode node, int snapshot) {\n-    INodeAttributes nodeAttrs;\n+    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     if (attributeProvider !\u003d null) {\n-      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n       fullPath \u003d fullPath\n           + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n           + DFSUtil.bytes2String(path);\n       nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n-    } else {\n-      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  INodeAttributes getAttributes(String fullPath, byte[] path,\n      INode node, int snapshot) {\n    INodeAttributes nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    if (attributeProvider !\u003d null) {\n      fullPath \u003d fullPath\n          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n          + DFSUtil.bytes2String(path);\n      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n    }\n    return nodeAttrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "9f4bf3bdf9e74800643477cfb18361e01cf6859c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9621. getListing wrongly associates Erasure Coding policy to pre-existing replicated files under an EC directory. Contributed by Jing Zhao.\n",
      "commitDate": "11/01/16 11:31 AM",
      "commitName": "9f4bf3bdf9e74800643477cfb18361e01cf6859c",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "30/11/15 2:32 PM",
      "commitNameOld": "9b8e50b424d060e16c1175b1811e7abc476e2468",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 41.87,
      "commitsBetweenForRepo": 214,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   INodeAttributes getAttributes(String fullPath, byte[] path,\n       INode node, int snapshot) {\n-    INodeAttributes nodeAttrs \u003d node;\n+    INodeAttributes nodeAttrs;\n     if (attributeProvider !\u003d null) {\n       nodeAttrs \u003d node.getSnapshotINode(snapshot);\n-      fullPath \u003d fullPath + (fullPath.endsWith(Path.SEPARATOR) ? \"\"\n-                                                               : Path.SEPARATOR)\n+      fullPath \u003d fullPath\n+          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n           + DFSUtil.bytes2String(path);\n       nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n     } else {\n       nodeAttrs \u003d node.getSnapshotINode(snapshot);\n     }\n     return nodeAttrs;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  INodeAttributes getAttributes(String fullPath, byte[] path,\n      INode node, int snapshot) {\n    INodeAttributes nodeAttrs;\n    if (attributeProvider !\u003d null) {\n      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n      fullPath \u003d fullPath\n          + (fullPath.endsWith(Path.SEPARATOR) ? \"\" : Path.SEPARATOR)\n          + DFSUtil.bytes2String(path);\n      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n    } else {\n      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    }\n    return nodeAttrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java",
      "extendedDetails": {}
    },
    "53a28afe293e5bf185c8d4f2c7aea212e66015c2": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6826. Plugin interface to enable delegation of HDFS authorization assertions. Contributed by Arun Suresh.\n",
      "commitDate": "24/03/15 4:02 PM",
      "commitName": "53a28afe293e5bf185c8d4f2c7aea212e66015c2",
      "commitAuthor": "Jitendra Pandey",
      "diff": "@@ -0,0 +1,14 @@\n+  INodeAttributes getAttributes(String fullPath, byte[] path,\n+      INode node, int snapshot) {\n+    INodeAttributes nodeAttrs \u003d node;\n+    if (attributeProvider !\u003d null) {\n+      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n+      fullPath \u003d fullPath + (fullPath.endsWith(Path.SEPARATOR) ? \"\"\n+                                                               : Path.SEPARATOR)\n+          + DFSUtil.bytes2String(path);\n+      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n+    } else {\n+      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n+    }\n+    return nodeAttrs;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  INodeAttributes getAttributes(String fullPath, byte[] path,\n      INode node, int snapshot) {\n    INodeAttributes nodeAttrs \u003d node;\n    if (attributeProvider !\u003d null) {\n      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n      fullPath \u003d fullPath + (fullPath.endsWith(Path.SEPARATOR) ? \"\"\n                                                               : Path.SEPARATOR)\n          + DFSUtil.bytes2String(path);\n      nodeAttrs \u003d attributeProvider.getAttributes(fullPath, nodeAttrs);\n    } else {\n      nodeAttrs \u003d node.getSnapshotINode(snapshot);\n    }\n    return nodeAttrs;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirectory.java"
    }
  }
}