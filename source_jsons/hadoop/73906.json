{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Server.java",
  "functionName": "addAuxiliaryListener",
  "functionId": "addAuxiliaryListener___auxiliaryPort-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
  "functionStartLine": 3126,
  "functionEndLine": 3142,
  "numCommitsSeen": 162,
  "timeTaken": 2774,
  "changeHistory": [
    "ce7b8b5634ef84602019cac4ce52337fbe4f9d42",
    "635786a511344b53b1d3f25c2f29ab5298f6ac74"
  ],
  "changeHistoryShort": {
    "ce7b8b5634ef84602019cac4ce52337fbe4f9d42": "Ybodychange",
    "635786a511344b53b1d3f25c2f29ab5298f6ac74": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ce7b8b5634ef84602019cac4ce52337fbe4f9d42": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15148. dfs.namenode.send.qop.enabled should not apply to primary NN port. Contributed by Chen Liang.\n",
      "commitDate": "04/02/20 12:12 PM",
      "commitName": "ce7b8b5634ef84602019cac4ce52337fbe4f9d42",
      "commitAuthor": "Chen Liang",
      "commitDateOld": "20/11/19 7:56 AM",
      "commitNameOld": "be77231452baee2c3dd68f7c0991411cae2eea1b",
      "commitAuthorOld": "Erik Krogen",
      "daysBetweenCommits": 76.18,
      "commitsBetweenForRepo": 256,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,17 @@\n   public synchronized void addAuxiliaryListener(int auxiliaryPort)\n       throws IOException {\n     if (auxiliaryListenerMap \u003d\u003d null) {\n       auxiliaryListenerMap \u003d new HashMap\u003c\u003e();\n     }\n     if (auxiliaryListenerMap.containsKey(auxiliaryPort) \u0026\u0026 auxiliaryPort !\u003d 0) {\n       throw new IOException(\n           \"There is already a listener binding to: \" + auxiliaryPort);\n     }\n     Listener newListener \u003d new Listener(auxiliaryPort);\n+    newListener.setIsAuxiliary();\n+\n     // in the case of port \u003d 0, the listener would be on a !\u003d 0 port.\n     LOG.info(\"Adding a server listener on port \" +\n         newListener.getAddress().getPort());\n     auxiliaryListenerMap.put(newListener.getAddress().getPort(), newListener);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void addAuxiliaryListener(int auxiliaryPort)\n      throws IOException {\n    if (auxiliaryListenerMap \u003d\u003d null) {\n      auxiliaryListenerMap \u003d new HashMap\u003c\u003e();\n    }\n    if (auxiliaryListenerMap.containsKey(auxiliaryPort) \u0026\u0026 auxiliaryPort !\u003d 0) {\n      throw new IOException(\n          \"There is already a listener binding to: \" + auxiliaryPort);\n    }\n    Listener newListener \u003d new Listener(auxiliaryPort);\n    newListener.setIsAuxiliary();\n\n    // in the case of port \u003d 0, the listener would be on a !\u003d 0 port.\n    LOG.info(\"Adding a server listener on port \" +\n        newListener.getAddress().getPort());\n    auxiliaryListenerMap.put(newListener.getAddress().getPort(), newListener);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java",
      "extendedDetails": {}
    },
    "635786a511344b53b1d3f25c2f29ab5298f6ac74": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13566. Add configurable additional RPC listener to NameNode. Contributed by Chen Liang.\n",
      "commitDate": "23/10/18 2:53 PM",
      "commitName": "635786a511344b53b1d3f25c2f29ab5298f6ac74",
      "commitAuthor": "Chen Liang",
      "diff": "@@ -0,0 +1,15 @@\n+  public synchronized void addAuxiliaryListener(int auxiliaryPort)\n+      throws IOException {\n+    if (auxiliaryListenerMap \u003d\u003d null) {\n+      auxiliaryListenerMap \u003d new HashMap\u003c\u003e();\n+    }\n+    if (auxiliaryListenerMap.containsKey(auxiliaryPort) \u0026\u0026 auxiliaryPort !\u003d 0) {\n+      throw new IOException(\n+          \"There is already a listener binding to: \" + auxiliaryPort);\n+    }\n+    Listener newListener \u003d new Listener(auxiliaryPort);\n+    // in the case of port \u003d 0, the listener would be on a !\u003d 0 port.\n+    LOG.info(\"Adding a server listener on port \" +\n+        newListener.getAddress().getPort());\n+    auxiliaryListenerMap.put(newListener.getAddress().getPort(), newListener);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void addAuxiliaryListener(int auxiliaryPort)\n      throws IOException {\n    if (auxiliaryListenerMap \u003d\u003d null) {\n      auxiliaryListenerMap \u003d new HashMap\u003c\u003e();\n    }\n    if (auxiliaryListenerMap.containsKey(auxiliaryPort) \u0026\u0026 auxiliaryPort !\u003d 0) {\n      throw new IOException(\n          \"There is already a listener binding to: \" + auxiliaryPort);\n    }\n    Listener newListener \u003d new Listener(auxiliaryPort);\n    // in the case of port \u003d 0, the listener would be on a !\u003d 0 port.\n    LOG.info(\"Adding a server listener on port \" +\n        newListener.getAddress().getPort());\n    auxiliaryListenerMap.put(newListener.getAddress().getPort(), newListener);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/Server.java"
    }
  }
}