{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AutoCreatedLeafQueue.java",
  "functionName": "reinitialize",
  "functionId": "reinitialize___newlyParsedQueue-CSQueue__clusterResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
  "functionStartLine": 51,
  "functionEndLine": 70,
  "numCommitsSeen": 16,
  "timeTaken": 5645,
  "changeHistory": [
    "cdb2107066a2d8557270888c0a9a75f29a6853bf",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
    "0e065f2edead41f6f894c9d70def389af1c0f239",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
    "d573f09fb93dbb711d504620af5d73840ea063a6",
    "18a594257e052e8f10a03e5594e6cc6901dc56be",
    "eb3e40b833b9d82c1556843f960194dc42e482f3"
  ],
  "changeHistoryShort": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": "Ybodychange",
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": "Ybodychange",
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": "Ybodychange",
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": "Ybodychange",
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": "Ymultichange(Yfilerename,Ybodychange)",
    "0e065f2edead41f6f894c9d70def389af1c0f239": "Ybodychange",
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": "Ymultichange(Ymodifierchange,Ybodychange)",
    "d573f09fb93dbb711d504620af5d73840ea063a6": "Ybodychange",
    "18a594257e052e8f10a03e5594e6cc6901dc56be": "Ybodychange",
    "eb3e40b833b9d82c1556843f960194dc42e482f3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cdb2107066a2d8557270888c0a9a75f29a6853bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9879. Allow multiple leaf queues with the same name in CapacityScheduler. Contributed by Gergely Pollak.\n",
      "commitDate": "25/03/20 4:20 AM",
      "commitName": "cdb2107066a2d8557270888c0a9a75f29a6853bf",
      "commitAuthor": "Sunil G",
      "commitDateOld": "07/03/19 1:47 PM",
      "commitNameOld": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 383.56,
      "commitsBetweenForRepo": 2259,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n       throws IOException {\n     writeLock.lock();\n     try {\n       validate(newlyParsedQueue);\n \n       ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n \n       super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n-          .getLeafQueueConfigs(newlyParsedQueue.getQueueName()));\n+          .getLeafQueueConfigs(newlyParsedQueue.getQueueShortName()));\n \n       //Reset capacities to 0 since reinitialize above\n       // queueCapacities to initialize to configured capacity which might\n       // overcommit resources from parent queue\n       updateCapacitiesToZero();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n      throws IOException {\n    writeLock.lock();\n    try {\n      validate(newlyParsedQueue);\n\n      ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n\n      super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n          .getLeafQueueConfigs(newlyParsedQueue.getQueueShortName()));\n\n      //Reset capacities to 0 since reinitialize above\n      // queueCapacities to initialize to configured capacity which might\n      // overcommit resources from parent queue\n      updateCapacitiesToZero();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {}
    },
    "39b4a37e02e929a698fcf9e32f1f71bb6b977635": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9341.  Fixed enentrant lock usage in YARN project.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "07/03/19 1:47 PM",
      "commitName": "39b4a37e02e929a698fcf9e32f1f71bb6b977635",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "09/04/18 8:47 AM",
      "commitNameOld": "821b0de4c59156d4a65112de03ba3e7e1c88e309",
      "commitAuthorOld": "Sunil G",
      "daysBetweenCommits": 332.25,
      "commitsBetweenForRepo": 3102,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n       throws IOException {\n+    writeLock.lock();\n     try {\n-      writeLock.lock();\n-\n       validate(newlyParsedQueue);\n \n       ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n \n       super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n           .getLeafQueueConfigs(newlyParsedQueue.getQueueName()));\n \n       //Reset capacities to 0 since reinitialize above\n       // queueCapacities to initialize to configured capacity which might\n       // overcommit resources from parent queue\n       updateCapacitiesToZero();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n      throws IOException {\n    writeLock.lock();\n    try {\n      validate(newlyParsedQueue);\n\n      ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n\n      super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n          .getLeafQueueConfigs(newlyParsedQueue.getQueueName()));\n\n      //Reset capacities to 0 since reinitialize above\n      // queueCapacities to initialize to configured capacity which might\n      // overcommit resources from parent queue\n      updateCapacitiesToZero();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {}
    },
    "b38643c9a8dd2c53024ae830b9565a550d0ec39c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7473. Implement Framework and policy for capacity management of auto created queues. (Suma Shivaprasad via wangda)\n\nChange-Id: Icca7805fe12f6f7fb335effff4b121b6f7f6337b\n",
      "commitDate": "08/12/17 3:10 PM",
      "commitName": "b38643c9a8dd2c53024ae830b9565a550d0ec39c",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "16/11/17 11:25 AM",
      "commitNameOld": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 22.16,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n       throws IOException {\n     try {\n       writeLock.lock();\n \n       validate(newlyParsedQueue);\n \n-      super.reinitialize(newlyParsedQueue, clusterResource);\n-      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-          this, labelManager, null);\n+      ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n \n-      AutoCreatedLeafQueueTemplate leafQueueTemplate \u003d\n-          parent.getLeafQueueTemplate();\n-      updateApplicationAndUserLimits(leafQueueTemplate.getUserLimit(),\n-          leafQueueTemplate.getUserLimitFactor(),\n-          leafQueueTemplate.getMaxApps(),\n-          leafQueueTemplate.getMaxAppsPerUser());\n+      super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n+          .getLeafQueueConfigs(newlyParsedQueue.getQueueName()));\n+\n+      //Reset capacities to 0 since reinitialize above\n+      // queueCapacities to initialize to configured capacity which might\n+      // overcommit resources from parent queue\n+      updateCapacitiesToZero();\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n      throws IOException {\n    try {\n      writeLock.lock();\n\n      validate(newlyParsedQueue);\n\n      ManagedParentQueue managedParentQueue \u003d (ManagedParentQueue) parent;\n\n      super.reinitialize(newlyParsedQueue, clusterResource, managedParentQueue\n          .getLeafQueueConfigs(newlyParsedQueue.getQueueName()));\n\n      //Reset capacities to 0 since reinitialize above\n      // queueCapacities to initialize to configured capacity which might\n      // overcommit resources from parent queue\n      updateCapacitiesToZero();\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {}
    },
    "0987a7b8cbbbb2c1e4c2095821d98a7db19644df": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7419. CapacityScheduler: Allow auto leaf queue creation after queue mapping. (Suma Shivaprasad via wangda)\n\nChange-Id: Ia1704bb8cb5070e5b180b5a85787d7b9ca57ebc6\n",
      "commitDate": "16/11/17 11:25 AM",
      "commitName": "0987a7b8cbbbb2c1e4c2095821d98a7db19644df",
      "commitAuthor": "Wangda Tan",
      "commitDateOld": "06/11/17 9:38 PM",
      "commitNameOld": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 9.57,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,22 @@\n-  public void reinitialize(CSQueue newlyParsedQueue,\n-      Resource clusterResource) throws IOException {\n+  public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n+      throws IOException {\n     try {\n       writeLock.lock();\n \n       validate(newlyParsedQueue);\n \n       super.reinitialize(newlyParsedQueue, clusterResource);\n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n \n-      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),\n-          parent.getUserLimitFactor(),\n-          parent.getMaxApplicationsForAutoCreatedQueues(),\n-          parent.getMaxApplicationsPerUserForAutoCreatedQueues());\n+      AutoCreatedLeafQueueTemplate leafQueueTemplate \u003d\n+          parent.getLeafQueueTemplate();\n+      updateApplicationAndUserLimits(leafQueueTemplate.getUserLimit(),\n+          leafQueueTemplate.getUserLimitFactor(),\n+          leafQueueTemplate.getMaxApps(),\n+          leafQueueTemplate.getMaxAppsPerUser());\n \n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue, Resource clusterResource)\n      throws IOException {\n    try {\n      writeLock.lock();\n\n      validate(newlyParsedQueue);\n\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      AutoCreatedLeafQueueTemplate leafQueueTemplate \u003d\n          parent.getLeafQueueTemplate();\n      updateApplicationAndUserLimits(leafQueueTemplate.getUserLimit(),\n          leafQueueTemplate.getUserLimitFactor(),\n          leafQueueTemplate.getMaxApps(),\n          leafQueueTemplate.getMaxAppsPerUser());\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
      "extendedDetails": {}
    },
    "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9": {
      "type": "Ymultichange(Yfilerename,Ybodychange)",
      "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
      "commitDate": "06/11/17 9:38 PM",
      "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yfilerename",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,20 @@\n   public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n     try {\n       writeLock.lock();\n-      // Sanity check\n-      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n-          .getQueuePath().equals(getQueuePath())) {\n-        throw new IOException(\n-            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n-                + newlyParsedQueue.getQueuePath());\n-      }\n+\n+      validate(newlyParsedQueue);\n+\n       super.reinitialize(newlyParsedQueue, clusterResource);\n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n \n-      updateQuotas(parent.getUserLimitForReservation(),\n+      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),\n           parent.getUserLimitFactor(),\n-          parent.getMaxApplicationsForReservations(),\n-          parent.getMaxApplicationsPerUserForReservation());\n+          parent.getMaxApplicationsForAutoCreatedQueues(),\n+          parent.getMaxApplicationsPerUserForAutoCreatedQueues());\n+\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n\n      validate(newlyParsedQueue);\n\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForAutoCreatedQueues(),\n          parent.getMaxApplicationsPerUserForAutoCreatedQueues());\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7394. Merge code paths for Reservation/Plan queues and Auto Created queues. (Suma Shivaprasad via wangda)\n",
          "commitDate": "06/11/17 9:38 PM",
          "commitName": "13fa2d4e3e55a849dcd7e472750f3e0422cc2ac9",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "06/11/17 3:45 PM",
          "commitNameOld": "8f214dc4f8423250947a3f0027f70b9ab402ab62",
          "commitAuthorOld": "Haibo Chen",
          "daysBetweenCommits": 0.24,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,20 @@\n   public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n     try {\n       writeLock.lock();\n-      // Sanity check\n-      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n-          .getQueuePath().equals(getQueuePath())) {\n-        throw new IOException(\n-            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n-                + newlyParsedQueue.getQueuePath());\n-      }\n+\n+      validate(newlyParsedQueue);\n+\n       super.reinitialize(newlyParsedQueue, clusterResource);\n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n           this, labelManager, null);\n \n-      updateQuotas(parent.getUserLimitForReservation(),\n+      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),\n           parent.getUserLimitFactor(),\n-          parent.getMaxApplicationsForReservations(),\n-          parent.getMaxApplicationsPerUserForReservation());\n+          parent.getMaxApplicationsForAutoCreatedQueues(),\n+          parent.getMaxApplicationsPerUserForAutoCreatedQueues());\n+\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n\n      validate(newlyParsedQueue);\n\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      updateApplicationAndUserLimits(parent.getUserLimitForAutoCreatedQueues(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForAutoCreatedQueues(),\n          parent.getMaxApplicationsPerUserForAutoCreatedQueues());\n\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/AutoCreatedLeafQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "0e065f2edead41f6f894c9d70def389af1c0f239": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6195. Export UsedCapacity and AbsoluteUsedCapacity to JMX. Contributed by Benson Qiu\n",
      "commitDate": "11/04/17 6:44 AM",
      "commitName": "0e065f2edead41f6f894c9d70def389af1c0f239",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/09/16 12:03 AM",
      "commitNameOld": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 203.28,
      "commitsBetweenForRepo": 1276,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n     try {\n       writeLock.lock();\n       // Sanity check\n       if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n           .getQueuePath().equals(getQueuePath())) {\n         throw new IOException(\n             \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                 + newlyParsedQueue.getQueuePath());\n       }\n       super.reinitialize(newlyParsedQueue, clusterResource);\n       CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-          minimumAllocation, this, labelManager, null);\n+          this, labelManager, null);\n \n       updateQuotas(parent.getUserLimitForReservation(),\n           parent.getUserLimitFactor(),\n           parent.getMaxApplicationsForReservations(),\n           parent.getMaxApplicationsPerUserForReservation());\n     } finally {\n       writeLock.unlock();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          this, labelManager, null);\n\n      updateQuotas(parent.getUserLimitForReservation(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForReservations(),\n          parent.getMaxApplicationsPerUserForReservation());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
      "extendedDetails": {}
    },
    "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
      "commitDate": "20/09/16 12:03 AM",
      "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
      "commitAuthor": "Jian He",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/07/15 7:33 PM",
          "commitNameOld": "0fcb4a8cf2add3f112907ff4e833e2f04947b53e",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 424.19,
          "commitsBetweenForRepo": 2887,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n+  public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n-    // Sanity check\n-    if (!(newlyParsedQueue instanceof ReservationQueue)\n-        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n-      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n-          + \" from \" + newlyParsedQueue.getQueuePath());\n-    }\n-    super.reinitialize(newlyParsedQueue, clusterResource);\n-    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-        minimumAllocation, this, labelManager, null);\n+    try {\n+      writeLock.lock();\n+      // Sanity check\n+      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n+          .getQueuePath().equals(getQueuePath())) {\n+        throw new IOException(\n+            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n+                + newlyParsedQueue.getQueuePath());\n+      }\n+      super.reinitialize(newlyParsedQueue, clusterResource);\n+      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+          minimumAllocation, this, labelManager, null);\n \n-    updateQuotas(parent.getUserLimitForReservation(),\n-        parent.getUserLimitFactor(),\n-        parent.getMaxApplicationsForReservations(),\n-        parent.getMaxApplicationsPerUserForReservation());\n+      updateQuotas(parent.getUserLimitForReservation(),\n+          parent.getUserLimitFactor(),\n+          parent.getMaxApplicationsForReservations(),\n+          parent.getMaxApplicationsPerUserForReservation());\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          minimumAllocation, this, labelManager, null);\n\n      updateQuotas(parent.getUserLimitForReservation(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForReservations(),\n          parent.getMaxApplicationsPerUserForReservation());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3140. Improve locks in AbstractCSQueue/LeafQueue/ParentQueue. Contributed by Wangda Tan\n",
          "commitDate": "20/09/16 12:03 AM",
          "commitName": "2b66d9ec5bdaec7e6b278926fbb6f222c4e3afaa",
          "commitAuthor": "Jian He",
          "commitDateOld": "23/07/15 7:33 PM",
          "commitNameOld": "0fcb4a8cf2add3f112907ff4e833e2f04947b53e",
          "commitAuthorOld": "carlo curino",
          "daysBetweenCommits": 424.19,
          "commitsBetweenForRepo": 2887,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,23 @@\n-  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n+  public void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n-    // Sanity check\n-    if (!(newlyParsedQueue instanceof ReservationQueue)\n-        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n-      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n-          + \" from \" + newlyParsedQueue.getQueuePath());\n-    }\n-    super.reinitialize(newlyParsedQueue, clusterResource);\n-    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n-        minimumAllocation, this, labelManager, null);\n+    try {\n+      writeLock.lock();\n+      // Sanity check\n+      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n+          .getQueuePath().equals(getQueuePath())) {\n+        throw new IOException(\n+            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n+                + newlyParsedQueue.getQueuePath());\n+      }\n+      super.reinitialize(newlyParsedQueue, clusterResource);\n+      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+          minimumAllocation, this, labelManager, null);\n \n-    updateQuotas(parent.getUserLimitForReservation(),\n-        parent.getUserLimitFactor(),\n-        parent.getMaxApplicationsForReservations(),\n-        parent.getMaxApplicationsPerUserForReservation());\n+      updateQuotas(parent.getUserLimitForReservation(),\n+          parent.getUserLimitFactor(),\n+          parent.getMaxApplicationsForReservations(),\n+          parent.getMaxApplicationsPerUserForReservation());\n+    } finally {\n+      writeLock.unlock();\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    try {\n      writeLock.lock();\n      // Sanity check\n      if (!(newlyParsedQueue instanceof ReservationQueue) || !newlyParsedQueue\n          .getQueuePath().equals(getQueuePath())) {\n        throw new IOException(\n            \"Trying to reinitialize \" + getQueuePath() + \" from \"\n                + newlyParsedQueue.getQueuePath());\n      }\n      super.reinitialize(newlyParsedQueue, clusterResource);\n      CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n          minimumAllocation, this, labelManager, null);\n\n      updateQuotas(parent.getUserLimitForReservation(),\n          parent.getUserLimitFactor(),\n          parent.getMaxApplicationsForReservations(),\n          parent.getMaxApplicationsPerUserForReservation());\n    } finally {\n      writeLock.unlock();\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "d573f09fb93dbb711d504620af5d73840ea063a6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2696. Queue sorting in CapacityScheduler should consider node label. Contributed by Wangda Tan\n",
      "commitDate": "17/04/15 1:36 PM",
      "commitName": "d573f09fb93dbb711d504620af5d73840ea063a6",
      "commitAuthor": "Jian He",
      "commitDateOld": "12/02/15 2:58 PM",
      "commitNameOld": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 63.9,
      "commitsBetweenForRepo": 557,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public synchronized void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof ReservationQueue)\n         || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n           + \" from \" + newlyParsedQueue.getQueuePath());\n     }\n     super.reinitialize(newlyParsedQueue, clusterResource);\n-    CSQueueUtils.updateQueueStatistics(\n-        parent.schedulerContext.getResourceCalculator(), newlyParsedQueue,\n-        parent, parent.schedulerContext.getClusterResource(),\n-        parent.schedulerContext.getMinimumResourceCapability());\n+    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n+        minimumAllocation, this, labelManager, null);\n+\n     updateQuotas(parent.getUserLimitForReservation(),\n         parent.getUserLimitFactor(),\n         parent.getMaxApplicationsForReservations(),\n         parent.getMaxApplicationsPerUserForReservation());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof ReservationQueue)\n        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n          + \" from \" + newlyParsedQueue.getQueuePath());\n    }\n    super.reinitialize(newlyParsedQueue, clusterResource);\n    CSQueueUtils.updateQueueStatistics(resourceCalculator, clusterResource,\n        minimumAllocation, this, labelManager, null);\n\n    updateQuotas(parent.getUserLimitForReservation(),\n        parent.getUserLimitFactor(),\n        parent.getMaxApplicationsForReservations(),\n        parent.getMaxApplicationsPerUserForReservation());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
      "extendedDetails": {}
    },
    "18a594257e052e8f10a03e5594e6cc6901dc56be": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3124. Fixed CS LeafQueue/ParentQueue to use QueueCapacities to track capacities-by-label. Contributed by Wangda Tan\n",
      "commitDate": "12/02/15 2:58 PM",
      "commitName": "18a594257e052e8f10a03e5594e6cc6901dc56be",
      "commitAuthor": "Jian He",
      "commitDateOld": "15/10/14 6:33 PM",
      "commitNameOld": "f2ea555ac6c06a3f2f6559731f48711fff05d3f1",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 119.89,
      "commitsBetweenForRepo": 932,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public synchronized void reinitialize(CSQueue newlyParsedQueue,\n       Resource clusterResource) throws IOException {\n     // Sanity check\n     if (!(newlyParsedQueue instanceof ReservationQueue)\n         || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n       throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n           + \" from \" + newlyParsedQueue.getQueuePath());\n     }\n+    super.reinitialize(newlyParsedQueue, clusterResource);\n     CSQueueUtils.updateQueueStatistics(\n         parent.schedulerContext.getResourceCalculator(), newlyParsedQueue,\n         parent, parent.schedulerContext.getClusterResource(),\n         parent.schedulerContext.getMinimumResourceCapability());\n-    super.reinitialize(newlyParsedQueue, clusterResource);\n     updateQuotas(parent.getUserLimitForReservation(),\n         parent.getUserLimitFactor(),\n         parent.getMaxApplicationsForReservations(),\n         parent.getMaxApplicationsPerUserForReservation());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof ReservationQueue)\n        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n          + \" from \" + newlyParsedQueue.getQueuePath());\n    }\n    super.reinitialize(newlyParsedQueue, clusterResource);\n    CSQueueUtils.updateQueueStatistics(\n        parent.schedulerContext.getResourceCalculator(), newlyParsedQueue,\n        parent, parent.schedulerContext.getClusterResource(),\n        parent.schedulerContext.getMinimumResourceCapability());\n    updateQuotas(parent.getUserLimitForReservation(),\n        parent.getUserLimitFactor(),\n        parent.getMaxApplicationsForReservations(),\n        parent.getMaxApplicationsPerUserForReservation());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java",
      "extendedDetails": {}
    },
    "eb3e40b833b9d82c1556843f960194dc42e482f3": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1707. Introduce APIs to add/remove/resize queues in the CapacityScheduler. Contributed by Carlo Curino and Subru Krishnan\n(cherry picked from commit aac47fda7fecda9fc18ade34d633eca895865a70)\n\nConflicts:\n\thadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/CapacityScheduler.java\n",
      "commitDate": "03/10/14 3:41 PM",
      "commitName": "eb3e40b833b9d82c1556843f960194dc42e482f3",
      "commitAuthor": "carlo curino",
      "diff": "@@ -0,0 +1,18 @@\n+  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n+      Resource clusterResource) throws IOException {\n+    // Sanity check\n+    if (!(newlyParsedQueue instanceof ReservationQueue)\n+        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n+      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n+          + \" from \" + newlyParsedQueue.getQueuePath());\n+    }\n+    CSQueueUtils.updateQueueStatistics(\n+        parent.schedulerContext.getResourceCalculator(), newlyParsedQueue,\n+        parent, parent.schedulerContext.getClusterResource(),\n+        parent.schedulerContext.getMinimumResourceCapability());\n+    super.reinitialize(newlyParsedQueue, clusterResource);\n+    updateQuotas(parent.getUserLimitForReservation(),\n+        parent.getUserLimitFactor(),\n+        parent.getMaxApplicationsForReservations(),\n+        parent.getMaxApplicationsPerUserForReservation());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void reinitialize(CSQueue newlyParsedQueue,\n      Resource clusterResource) throws IOException {\n    // Sanity check\n    if (!(newlyParsedQueue instanceof ReservationQueue)\n        || !newlyParsedQueue.getQueuePath().equals(getQueuePath())) {\n      throw new IOException(\"Trying to reinitialize \" + getQueuePath()\n          + \" from \" + newlyParsedQueue.getQueuePath());\n    }\n    CSQueueUtils.updateQueueStatistics(\n        parent.schedulerContext.getResourceCalculator(), newlyParsedQueue,\n        parent, parent.schedulerContext.getClusterResource(),\n        parent.schedulerContext.getMinimumResourceCapability());\n    super.reinitialize(newlyParsedQueue, clusterResource);\n    updateQuotas(parent.getUserLimitForReservation(),\n        parent.getUserLimitFactor(),\n        parent.getMaxApplicationsForReservations(),\n        parent.getMaxApplicationsPerUserForReservation());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ReservationQueue.java"
    }
  }
}