{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollectorManager.java",
  "functionName": "run",
  "functionId": "run",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
  "functionStartLine": 264,
  "functionEndLine": 277,
  "numCommitsSeen": 21,
  "timeTaken": 861,
  "changeHistory": [
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec",
    "8603736ef2bb34605ea10f516dbe4e73bed3f309"
  ],
  "changeHistoryShort": {
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec": "Ybodychange",
    "8603736ef2bb34605ea10f516dbe4e73bed3f309": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6376. Exceptions caused by synchronous putEntities requests can be swallowed (Haibo Chen via Varun Saxena)\n",
      "commitDate": "30/03/17 1:47 PM",
      "commitName": "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "08/12/16 12:31 PM",
      "commitNameOld": "a5a55a54ab1568e941062ea3dabdd237f71f15c4",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 112.01,
      "commitsBetweenForRepo": 580,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,14 @@\n     public void run() {\n       try {\n-        writer.flush();\n+        // synchronize on the writer object to avoid flushing timeline\n+        // entities placed on the buffer by synchronous putEntities\n+        // requests.\n+        synchronized (writer) {\n+          writer.flush();\n+        }\n       } catch (Throwable th) {\n         // we need to handle all exceptions or subsequent execution may be\n         // suppressed\n         LOG.error(\"exception during timeline writer flush!\", th);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        // synchronize on the writer object to avoid flushing timeline\n        // entities placed on the buffer by synchronous putEntities\n        // requests.\n        synchronized (writer) {\n          writer.flush();\n        }\n      } catch (Throwable th) {\n        // we need to handle all exceptions or subsequent execution may be\n        // suppressed\n        LOG.error(\"exception during timeline writer flush!\", th);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java",
      "extendedDetails": {}
    },
    "8603736ef2bb34605ea10f516dbe4e73bed3f309": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3949. Ensure timely flush of timeline writes. Contributed by Sangjin Lee.\n\n(cherry picked from commit 967bef7e0396d857913caa2574afb103a5f0b81b)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8603736ef2bb34605ea10f516dbe4e73bed3f309",
      "commitAuthor": "Junping Du",
      "diff": "@@ -0,0 +1,9 @@\n+    public void run() {\n+      try {\n+        writer.flush();\n+      } catch (Throwable th) {\n+        // we need to handle all exceptions or subsequent execution may be\n+        // suppressed\n+        LOG.error(\"exception during timeline writer flush!\", th);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void run() {\n      try {\n        writer.flush();\n      } catch (Throwable th) {\n        // we need to handle all exceptions or subsequent execution may be\n        // suppressed\n        LOG.error(\"exception during timeline writer flush!\", th);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollectorManager.java"
    }
  }
}