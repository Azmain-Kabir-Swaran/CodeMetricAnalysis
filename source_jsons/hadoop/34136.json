{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerScheduler.java",
  "functionName": "serviceInit",
  "functionId": "serviceInit___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
  "functionStartLine": 131,
  "functionEndLine": 147,
  "numCommitsSeen": 22,
  "timeTaken": 2592,
  "changeHistory": [
    "7861a5eb1afd3b8c485b1db83f3bb21a50928e4e",
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "6341c3a437489737a9c4bf0911b218b0023d8dd9",
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8"
  ],
  "changeHistoryShort": {
    "7861a5eb1afd3b8c485b1db83f3bb21a50928e4e": "Ybodychange",
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "6341c3a437489737a9c4bf0911b218b0023d8dd9": "Ybodychange",
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7861a5eb1afd3b8c485b1db83f3bb21a50928e4e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9033. ResourceHandlerChain#bootstrap is invoked twice during NM start if LinuxContainerExecutor enabled. Contributed by Zhankun Tang.\n",
      "commitDate": "30/05/19 9:52 PM",
      "commitName": "7861a5eb1afd3b8c485b1db83f3bb21a50928e4e",
      "commitAuthor": "Sunil G",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 76.23,
      "commitsBetweenForRepo": 463,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,17 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n-    try {\n-      if (resourceHandlerChain \u003d\u003d null) {\n-        resourceHandlerChain \u003d ResourceHandlerModule\n-            .getConfiguredResourceHandlerChain(conf, context);\n-      }\n-      LOG.debug(\"Resource handler chain enabled \u003d {}\",\n-          (resourceHandlerChain !\u003d null));\n-      if (resourceHandlerChain !\u003d null) {\n-        LOG.debug(\"Bootstrapping resource handler chain\");\n-        resourceHandlerChain.bootstrap(conf);\n-      }\n-    } catch (ResourceHandlerException e) {\n-      LOG.error(\"Failed to bootstrap configured resource subsystems! \", e);\n-      throw new IOException(\n-          \"Failed to bootstrap configured resource subsystems!\");\n+    if (resourceHandlerChain \u003d\u003d null) {\n+      resourceHandlerChain \u003d ResourceHandlerModule\n+          .getConfiguredResourceHandlerChain(conf, context);\n+    }\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Resource handler chain enabled \u003d \" + (resourceHandlerChain\n+          !\u003d null));\n+\n     }\n     this.usePauseEventForPreemption \u003d\n         conf.getBoolean(\n             YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n             YarnConfiguration.\n                 DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    if (resourceHandlerChain \u003d\u003d null) {\n      resourceHandlerChain \u003d ResourceHandlerModule\n          .getConfiguredResourceHandlerChain(conf, context);\n    }\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Resource handler chain enabled \u003d \" + (resourceHandlerChain\n          !\u003d null));\n\n    }\n    this.usePauseEventForPreemption \u003d\n        conf.getBoolean(\n            YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n            YarnConfiguration.\n                DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "07/01/19 3:16 PM",
      "commitNameOld": "489411579c5e30c1dc855c4fd3d5f7f68a58b27e",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 67.0,
      "commitsBetweenForRepo": 548,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,24 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n     try {\n       if (resourceHandlerChain \u003d\u003d null) {\n         resourceHandlerChain \u003d ResourceHandlerModule\n             .getConfiguredResourceHandlerChain(conf, context);\n       }\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Resource handler chain enabled \u003d \" + (resourceHandlerChain\n-            !\u003d null));\n-      }\n+      LOG.debug(\"Resource handler chain enabled \u003d {}\",\n+          (resourceHandlerChain !\u003d null));\n       if (resourceHandlerChain !\u003d null) {\n         LOG.debug(\"Bootstrapping resource handler chain\");\n         resourceHandlerChain.bootstrap(conf);\n       }\n     } catch (ResourceHandlerException e) {\n       LOG.error(\"Failed to bootstrap configured resource subsystems! \", e);\n       throw new IOException(\n           \"Failed to bootstrap configured resource subsystems!\");\n     }\n     this.usePauseEventForPreemption \u003d\n         conf.getBoolean(\n             YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n             YarnConfiguration.\n                 DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    try {\n      if (resourceHandlerChain \u003d\u003d null) {\n        resourceHandlerChain \u003d ResourceHandlerModule\n            .getConfiguredResourceHandlerChain(conf, context);\n      }\n      LOG.debug(\"Resource handler chain enabled \u003d {}\",\n          (resourceHandlerChain !\u003d null));\n      if (resourceHandlerChain !\u003d null) {\n        LOG.debug(\"Bootstrapping resource handler chain\");\n        resourceHandlerChain.bootstrap(conf);\n      }\n    } catch (ResourceHandlerException e) {\n      LOG.error(\"Failed to bootstrap configured resource subsystems! \", e);\n      throw new IOException(\n          \"Failed to bootstrap configured resource subsystems!\");\n    }\n    this.usePauseEventForPreemption \u003d\n        conf.getBoolean(\n            YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n            YarnConfiguration.\n                DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "6341c3a437489737a9c4bf0911b218b0023d8dd9": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7715. Support NM promotion/demotion of running containers. (Miklos Szegedi via Haibo Chen)\n",
      "commitDate": "10/05/18 11:01 AM",
      "commitName": "6341c3a437489737a9c4bf0911b218b0023d8dd9",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "12/04/18 10:17 PM",
      "commitNameOld": "226bedc0239ba23f3ca0c40dac6aab3777d3ada6",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 27.53,
      "commitsBetweenForRepo": 685,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,26 @@\n   public void serviceInit(Configuration conf) throws Exception {\n     super.serviceInit(conf);\n+    try {\n+      if (resourceHandlerChain \u003d\u003d null) {\n+        resourceHandlerChain \u003d ResourceHandlerModule\n+            .getConfiguredResourceHandlerChain(conf, context);\n+      }\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Resource handler chain enabled \u003d \" + (resourceHandlerChain\n+            !\u003d null));\n+      }\n+      if (resourceHandlerChain !\u003d null) {\n+        LOG.debug(\"Bootstrapping resource handler chain\");\n+        resourceHandlerChain.bootstrap(conf);\n+      }\n+    } catch (ResourceHandlerException e) {\n+      LOG.error(\"Failed to bootstrap configured resource subsystems! \", e);\n+      throw new IOException(\n+          \"Failed to bootstrap configured resource subsystems!\");\n+    }\n     this.usePauseEventForPreemption \u003d\n         conf.getBoolean(\n             YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n             YarnConfiguration.\n                 DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    try {\n      if (resourceHandlerChain \u003d\u003d null) {\n        resourceHandlerChain \u003d ResourceHandlerModule\n            .getConfiguredResourceHandlerChain(conf, context);\n      }\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Resource handler chain enabled \u003d \" + (resourceHandlerChain\n            !\u003d null));\n      }\n      if (resourceHandlerChain !\u003d null) {\n        LOG.debug(\"Bootstrapping resource handler chain\");\n        resourceHandlerChain.bootstrap(conf);\n      }\n    } catch (ResourceHandlerException e) {\n      LOG.error(\"Failed to bootstrap configured resource subsystems! \", e);\n      throw new IOException(\n          \"Failed to bootstrap configured resource subsystems!\");\n    }\n    this.usePauseEventForPreemption \u003d\n        conf.getBoolean(\n            YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n            YarnConfiguration.\n                DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java",
      "extendedDetails": {}
    },
    "4f8194430fc6a69d9cc99b78828fd7045d5683e8": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5216. Expose configurable preemption policy for OPPORTUNISTIC containers running on the NM. (Hitesh Sharma via asuresh)\n",
      "commitDate": "14/09/17 8:51 AM",
      "commitName": "4f8194430fc6a69d9cc99b78828fd7045d5683e8",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,8 @@\n+  public void serviceInit(Configuration conf) throws Exception {\n+    super.serviceInit(conf);\n+    this.usePauseEventForPreemption \u003d\n+        conf.getBoolean(\n+            YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n+            YarnConfiguration.\n+                DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void serviceInit(Configuration conf) throws Exception {\n    super.serviceInit(conf);\n    this.usePauseEventForPreemption \u003d\n        conf.getBoolean(\n            YarnConfiguration.NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION,\n            YarnConfiguration.\n                DEFAULT_NM_CONTAINER_QUEUING_USE_PAUSE_FOR_PREEMPTION);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/scheduler/ContainerScheduler.java"
    }
  }
}