{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LogWebService.java",
  "functionName": "getApp",
  "functionId": "getApp___req-HttpServletRequest__appId-String__clusterId-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java",
  "functionStartLine": 197,
  "functionEndLine": 232,
  "numCommitsSeen": 5,
  "timeTaken": 2215,
  "changeHistory": [
    "dd2607e3ec3c349130e4143b0f67b23e11da420a",
    "8d1981806feb8278966c02a9eff42d72541bb35e"
  ],
  "changeHistoryShort": {
    "dd2607e3ec3c349130e4143b0f67b23e11da420a": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
    "8d1981806feb8278966c02a9eff42d72541bb35e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dd2607e3ec3c349130e4143b0f67b23e11da420a": {
      "type": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-10026. Pull out common code pieces from ATS v1.5 and v2. Contributed by Adam Antal\n",
      "commitDate": "06/01/20 8:16 AM",
      "commitName": "dd2607e3ec3c349130e4143b0f67b23e11da420a",
      "commitAuthor": "Szilard Nemeth",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-10026. Pull out common code pieces from ATS v1.5 and v2. Contributed by Adam Antal\n",
          "commitDate": "06/01/20 8:16 AM",
          "commitName": "dd2607e3ec3c349130e4143b0f67b23e11da420a",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 296.7,
          "commitsBetweenForRepo": 1914,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,36 @@\n-  protected AppInfo getApp(HttpServletRequest req, String appId,\n+  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n       String clusterId) {\n     UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n \n     String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n     MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n     params.add(\"fields\", \"INFO\");\n     String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n     TimelineEntity appEntity \u003d null;\n \n     try {\n       if (callerUGI \u003d\u003d null) {\n         appEntity \u003d getEntity(path, params);\n       } else {\n         setUserName(params, callerUGI.getShortUserName());\n         appEntity \u003d\n             callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n               @Override public TimelineEntity run() throws Exception {\n                 return getEntity(path, params);\n               }\n             });\n       }\n     } catch (Exception e) {\n       LogWebServiceUtils.rewrapAndThrowException(e);\n     }\n \n     if (appEntity \u003d\u003d null) {\n       return null;\n     }\n     String appOwner \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n     String state \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n     YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n-    AppInfo info \u003d new AppInfo(appState, appOwner);\n-    return info;\n+    return new BasicAppInfo(appState, appOwner);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n      String clusterId) {\n    UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n\n    String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n    MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n    params.add(\"fields\", \"INFO\");\n    String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n    TimelineEntity appEntity \u003d null;\n\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appEntity \u003d getEntity(path, params);\n      } else {\n        setUserName(params, callerUGI.getShortUserName());\n        appEntity \u003d\n            callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n              @Override public TimelineEntity run() throws Exception {\n                return getEntity(path, params);\n              }\n            });\n      }\n    } catch (Exception e) {\n      LogWebServiceUtils.rewrapAndThrowException(e);\n    }\n\n    if (appEntity \u003d\u003d null) {\n      return null;\n    }\n    String appOwner \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n    String state \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n    YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n    return new BasicAppInfo(appState, appOwner);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java",
          "extendedDetails": {
            "oldValue": "AppInfo",
            "newValue": "BasicAppInfo"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-10026. Pull out common code pieces from ATS v1.5 and v2. Contributed by Adam Antal\n",
          "commitDate": "06/01/20 8:16 AM",
          "commitName": "dd2607e3ec3c349130e4143b0f67b23e11da420a",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 296.7,
          "commitsBetweenForRepo": 1914,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,36 @@\n-  protected AppInfo getApp(HttpServletRequest req, String appId,\n+  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n       String clusterId) {\n     UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n \n     String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n     MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n     params.add(\"fields\", \"INFO\");\n     String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n     TimelineEntity appEntity \u003d null;\n \n     try {\n       if (callerUGI \u003d\u003d null) {\n         appEntity \u003d getEntity(path, params);\n       } else {\n         setUserName(params, callerUGI.getShortUserName());\n         appEntity \u003d\n             callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n               @Override public TimelineEntity run() throws Exception {\n                 return getEntity(path, params);\n               }\n             });\n       }\n     } catch (Exception e) {\n       LogWebServiceUtils.rewrapAndThrowException(e);\n     }\n \n     if (appEntity \u003d\u003d null) {\n       return null;\n     }\n     String appOwner \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n     String state \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n     YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n-    AppInfo info \u003d new AppInfo(appState, appOwner);\n-    return info;\n+    return new BasicAppInfo(appState, appOwner);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n      String clusterId) {\n    UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n\n    String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n    MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n    params.add(\"fields\", \"INFO\");\n    String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n    TimelineEntity appEntity \u003d null;\n\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appEntity \u003d getEntity(path, params);\n      } else {\n        setUserName(params, callerUGI.getShortUserName());\n        appEntity \u003d\n            callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n              @Override public TimelineEntity run() throws Exception {\n                return getEntity(path, params);\n              }\n            });\n      }\n    } catch (Exception e) {\n      LogWebServiceUtils.rewrapAndThrowException(e);\n    }\n\n    if (appEntity \u003d\u003d null) {\n      return null;\n    }\n    String appOwner \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n    String state \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n    YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n    return new BasicAppInfo(appState, appOwner);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-10026. Pull out common code pieces from ATS v1.5 and v2. Contributed by Adam Antal\n",
          "commitDate": "06/01/20 8:16 AM",
          "commitName": "dd2607e3ec3c349130e4143b0f67b23e11da420a",
          "commitAuthor": "Szilard Nemeth",
          "commitDateOld": "15/03/19 4:20 PM",
          "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
          "commitAuthorOld": "Eric Yang",
          "daysBetweenCommits": 296.7,
          "commitsBetweenForRepo": 1914,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,37 +1,36 @@\n-  protected AppInfo getApp(HttpServletRequest req, String appId,\n+  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n       String clusterId) {\n     UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n \n     String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n     MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n     params.add(\"fields\", \"INFO\");\n     String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n     TimelineEntity appEntity \u003d null;\n \n     try {\n       if (callerUGI \u003d\u003d null) {\n         appEntity \u003d getEntity(path, params);\n       } else {\n         setUserName(params, callerUGI.getShortUserName());\n         appEntity \u003d\n             callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n               @Override public TimelineEntity run() throws Exception {\n                 return getEntity(path, params);\n               }\n             });\n       }\n     } catch (Exception e) {\n       LogWebServiceUtils.rewrapAndThrowException(e);\n     }\n \n     if (appEntity \u003d\u003d null) {\n       return null;\n     }\n     String appOwner \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n     String state \u003d (String) appEntity.getInfo()\n         .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n     YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n-    AppInfo info \u003d new AppInfo(appState, appOwner);\n-    return info;\n+    return new BasicAppInfo(appState, appOwner);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public BasicAppInfo getApp(HttpServletRequest req, String appId,\n      String clusterId) {\n    UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n\n    String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n    MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n    params.add(\"fields\", \"INFO\");\n    String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n    TimelineEntity appEntity \u003d null;\n\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appEntity \u003d getEntity(path, params);\n      } else {\n        setUserName(params, callerUGI.getShortUserName());\n        appEntity \u003d\n            callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n              @Override public TimelineEntity run() throws Exception {\n                return getEntity(path, params);\n              }\n            });\n      }\n    } catch (Exception e) {\n      LogWebServiceUtils.rewrapAndThrowException(e);\n    }\n\n    if (appEntity \u003d\u003d null) {\n      return null;\n    }\n    String appOwner \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n    String state \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n    YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n    return new BasicAppInfo(appState, appOwner);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java",
          "extendedDetails": {}
        }
      ]
    },
    "8d1981806feb8278966c02a9eff42d72541bb35e": {
      "type": "Yintroduced",
      "commitMessage": "YARN-5742 Serve aggregated logs of historical apps from timeline service. Contributed by Rohith Sharma KS\n",
      "commitDate": "11/10/18 4:26 PM",
      "commitName": "8d1981806feb8278966c02a9eff42d72541bb35e",
      "commitAuthor": "Vrushali C",
      "diff": "@@ -0,0 +1,37 @@\n+  protected AppInfo getApp(HttpServletRequest req, String appId,\n+      String clusterId) {\n+    UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n+\n+    String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n+    MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n+    params.add(\"fields\", \"INFO\");\n+    String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n+    TimelineEntity appEntity \u003d null;\n+\n+    try {\n+      if (callerUGI \u003d\u003d null) {\n+        appEntity \u003d getEntity(path, params);\n+      } else {\n+        setUserName(params, callerUGI.getShortUserName());\n+        appEntity \u003d\n+            callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n+              @Override public TimelineEntity run() throws Exception {\n+                return getEntity(path, params);\n+              }\n+            });\n+      }\n+    } catch (Exception e) {\n+      LogWebServiceUtils.rewrapAndThrowException(e);\n+    }\n+\n+    if (appEntity \u003d\u003d null) {\n+      return null;\n+    }\n+    String appOwner \u003d (String) appEntity.getInfo()\n+        .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n+    String state \u003d (String) appEntity.getInfo()\n+        .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n+    YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n+    AppInfo info \u003d new AppInfo(appState, appOwner);\n+    return info;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected AppInfo getApp(HttpServletRequest req, String appId,\n      String clusterId) {\n    UserGroupInformation callerUGI \u003d LogWebServiceUtils.getUser(req);\n\n    String cId \u003d clusterId !\u003d null ? clusterId : defaultClusterid;\n    MultivaluedMap\u003cString, String\u003e params \u003d new MultivaluedMapImpl();\n    params.add(\"fields\", \"INFO\");\n    String path \u003d JOINER.join(\"clusters/\", cId, \"/apps/\", appId);\n    TimelineEntity appEntity \u003d null;\n\n    try {\n      if (callerUGI \u003d\u003d null) {\n        appEntity \u003d getEntity(path, params);\n      } else {\n        setUserName(params, callerUGI.getShortUserName());\n        appEntity \u003d\n            callerUGI.doAs(new PrivilegedExceptionAction\u003cTimelineEntity\u003e() {\n              @Override public TimelineEntity run() throws Exception {\n                return getEntity(path, params);\n              }\n            });\n      }\n    } catch (Exception e) {\n      LogWebServiceUtils.rewrapAndThrowException(e);\n    }\n\n    if (appEntity \u003d\u003d null) {\n      return null;\n    }\n    String appOwner \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.USER_ENTITY_INFO);\n    String state \u003d (String) appEntity.getInfo()\n        .get(ApplicationMetricsConstants.STATE_EVENT_INFO);\n    YarnApplicationState appState \u003d YarnApplicationState.valueOf(state);\n    AppInfo info \u003d new AppInfo(appState, appOwner);\n    return info;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/webapp/LogWebService.java"
    }
  }
}