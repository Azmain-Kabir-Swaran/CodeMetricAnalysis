{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IPCLoggerChannel.java",
  "functionName": "startLogSegment",
  "functionId": "startLogSegment___txid-long(modifiers-final)__layoutVersion-int(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
  "functionStartLine": 529,
  "functionEndLine": 547,
  "numCommitsSeen": 68,
  "timeTaken": 2188,
  "changeHistory": [
    "faa4455be512e070fa420084be8d1be5c72f3b08",
    "9dab514b22f49322738935cfd915c2b4eba50b88",
    "cae8116a146cb27d40e4e41cece9a17945bc7f9c",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Ybodychange",
    "9dab514b22f49322738935cfd915c2b4eba50b88": "Ymultichange(Yparameterchange,Ybodychange)",
    "cae8116a146cb27d40e4e41cece9a17945bc7f9c": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/14 4:32 PM",
      "commitNameOld": "c2ef7e239eb0e81cf8a3e971378e9e696202de67",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 161.9,
      "commitsBetweenForRepo": 1116,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n       final int layoutVersion) {\n-    return executor.submit(new Callable\u003cVoid\u003e() {\n+    return singleThreadExecutor.submit(new Callable\u003cVoid\u003e() {\n       @Override\n       public Void call() throws IOException {\n         getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n         synchronized (IPCLoggerChannel.this) {\n           if (outOfSync) {\n             outOfSync \u003d false;\n             QuorumJournalManager.LOG.info(\n                 \"Restarting previously-stopped writes to \" +\n                 IPCLoggerChannel.this + \" in segment starting at txid \" +\n                 txid);\n           }\n         }\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n      final int layoutVersion) {\n    return singleThreadExecutor.submit(new Callable\u003cVoid\u003e() {\n      @Override\n      public Void call() throws IOException {\n        getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n        synchronized (IPCLoggerChannel.this) {\n          if (outOfSync) {\n            outOfSync \u003d false;\n            QuorumJournalManager.LOG.info(\n                \"Restarting previously-stopped writes to \" +\n                IPCLoggerChannel.this + \" in segment starting at txid \" +\n                txid);\n          }\n        }\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "9dab514b22f49322738935cfd915c2b4eba50b88": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/14 4:06 PM",
      "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/14 4:06 PM",
          "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "26/02/14 12:55 PM",
          "commitNameOld": "9cc0d5d4979aea2836fbedabf2cfa9e5b27a5607",
          "commitAuthorOld": "",
          "daysBetweenCommits": 22.09,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n+  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n+      final int layoutVersion) {\n     return executor.submit(new Callable\u003cVoid\u003e() {\n       @Override\n       public Void call() throws IOException {\n-        getProxy().startLogSegment(createReqInfo(), txid);\n+        getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n         synchronized (IPCLoggerChannel.this) {\n           if (outOfSync) {\n             outOfSync \u003d false;\n             QuorumJournalManager.LOG.info(\n                 \"Restarting previously-stopped writes to \" +\n                 IPCLoggerChannel.this + \" in segment starting at txid \" +\n                 txid);\n           }\n         }\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n      final int layoutVersion) {\n    return executor.submit(new Callable\u003cVoid\u003e() {\n      @Override\n      public Void call() throws IOException {\n        getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n        synchronized (IPCLoggerChannel.this) {\n          if (outOfSync) {\n            outOfSync \u003d false;\n            QuorumJournalManager.LOG.info(\n                \"Restarting previously-stopped writes to \" +\n                IPCLoggerChannel.this + \" in segment starting at txid \" +\n                txid);\n          }\n        }\n        return null;\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {
            "oldValue": "[txid-long(modifiers-final)]",
            "newValue": "[txid-long(modifiers-final), layoutVersion-int(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6038. Allow JournalNode to handle editlog produced by new release with future layoutversion. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1579813 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "20/03/14 4:06 PM",
          "commitName": "9dab514b22f49322738935cfd915c2b4eba50b88",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "26/02/14 12:55 PM",
          "commitNameOld": "9cc0d5d4979aea2836fbedabf2cfa9e5b27a5607",
          "commitAuthorOld": "",
          "daysBetweenCommits": 22.09,
          "commitsBetweenForRepo": 190,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n+  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n+      final int layoutVersion) {\n     return executor.submit(new Callable\u003cVoid\u003e() {\n       @Override\n       public Void call() throws IOException {\n-        getProxy().startLogSegment(createReqInfo(), txid);\n+        getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n         synchronized (IPCLoggerChannel.this) {\n           if (outOfSync) {\n             outOfSync \u003d false;\n             QuorumJournalManager.LOG.info(\n                 \"Restarting previously-stopped writes to \" +\n                 IPCLoggerChannel.this + \" in segment starting at txid \" +\n                 txid);\n           }\n         }\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid,\n      final int layoutVersion) {\n    return executor.submit(new Callable\u003cVoid\u003e() {\n      @Override\n      public Void call() throws IOException {\n        getProxy().startLogSegment(createReqInfo(), txid, layoutVersion);\n        synchronized (IPCLoggerChannel.this) {\n          if (outOfSync) {\n            outOfSync \u003d false;\n            QuorumJournalManager.LOG.info(\n                \"Restarting previously-stopped writes to \" +\n                IPCLoggerChannel.this + \" in segment starting at txid \" +\n                txid);\n          }\n        }\n        return null;\n      }\n    });\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
          "extendedDetails": {}
        }
      ]
    },
    "cae8116a146cb27d40e4e41cece9a17945bc7f9c": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3726. If a logger misses an RPC, don\u0027t retry that logger until next segment. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1381482 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/12 12:03 AM",
      "commitName": "cae8116a146cb27d40e4e41cece9a17945bc7f9c",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "04/09/12 9:16 PM",
      "commitNameOld": "72485f3112832a6a32f912d59ecf303a0c7e919a",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.12,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,18 @@\n   public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n     return executor.submit(new Callable\u003cVoid\u003e() {\n       @Override\n       public Void call() throws IOException {\n         getProxy().startLogSegment(createReqInfo(), txid);\n+        synchronized (IPCLoggerChannel.this) {\n+          if (outOfSync) {\n+            outOfSync \u003d false;\n+            QuorumJournalManager.LOG.info(\n+                \"Restarting previously-stopped writes to \" +\n+                IPCLoggerChannel.this + \" in segment starting at txid \" +\n+                txid);\n+          }\n+        }\n         return null;\n       }\n     });\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n    return executor.submit(new Callable\u003cVoid\u003e() {\n      @Override\n      public Void call() throws IOException {\n        getProxy().startLogSegment(createReqInfo(), txid);\n        synchronized (IPCLoggerChannel.this) {\n          if (outOfSync) {\n            outOfSync \u003d false;\n            QuorumJournalManager.LOG.info(\n                \"Restarting previously-stopped writes to \" +\n                IPCLoggerChannel.this + \" in segment starting at txid \" +\n                txid);\n          }\n        }\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,9 @@\n+  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n+    return executor.submit(new Callable\u003cVoid\u003e() {\n+      @Override\n+      public Void call() throws IOException {\n+        getProxy().startLogSegment(createReqInfo(), txid);\n+        return null;\n+      }\n+    });\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ListenableFuture\u003cVoid\u003e startLogSegment(final long txid) {\n    return executor.submit(new Callable\u003cVoid\u003e() {\n      @Override\n      public Void call() throws IOException {\n        getProxy().startLogSegment(createReqInfo(), txid);\n        return null;\n      }\n    });\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/client/IPCLoggerChannel.java"
    }
  }
}