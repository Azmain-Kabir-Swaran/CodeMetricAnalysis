{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PmemMappedBlock.java",
  "functionName": "close",
  "functionId": "close",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemMappedBlock.java",
  "functionStartLine": 63,
  "functionEndLine": 74,
  "numCommitsSeen": 4,
  "timeTaken": 2220,
  "changeHistory": [
    "d79cce20abbbf321f6dcce03f4087544124a7cd2",
    "9b0aace1e6c54f201784912c0b623707aa82b761",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a"
  ],
  "changeHistoryShort": {
    "d79cce20abbbf321f6dcce03f4087544124a7cd2": "Ybodychange",
    "9b0aace1e6c54f201784912c0b623707aa82b761": "Ybodychange",
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "d79cce20abbbf321f6dcce03f4087544124a7cd2": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14740. Recover data blocks from persistent memory read cache during datanode restarts. Contributed by Feilong He.\n",
      "commitDate": "01/01/20 10:14 PM",
      "commitName": "d79cce20abbbf321f6dcce03f4087544124a7cd2",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "05/06/19 6:33 AM",
      "commitNameOld": "d1aad444907e1fc5314e8e64529e57c51ed7561c",
      "commitAuthorOld": "Sammi Chen",
      "daysBetweenCommits": 210.7,
      "commitsBetweenForRepo": 1399,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   public void close() {\n-    String cacheFilePath \u003d\n-        PmemVolumeManager.getInstance().getCachePath(key);\n+    String cacheFilePath \u003d null;\n     try {\n+      cacheFilePath \u003d\n+          PmemVolumeManager.getInstance().getCachePath(key);\n       FsDatasetUtil.deleteMappedFile(cacheFilePath);\n       LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n           + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() {\n    String cacheFilePath \u003d null;\n    try {\n      cacheFilePath \u003d\n          PmemVolumeManager.getInstance().getCachePath(key);\n      FsDatasetUtil.deleteMappedFile(cacheFilePath);\n      LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n          + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemMappedBlock.java",
      "extendedDetails": {}
    },
    "9b0aace1e6c54f201784912c0b623707aa82b761": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14401. Refine the implementation for HDFS cache on SCM. Contributed by Feilong He.\n",
      "commitDate": "08/05/19 4:50 AM",
      "commitName": "9b0aace1e6c54f201784912c0b623707aa82b761",
      "commitAuthor": "Rakesh Radhakrishnan",
      "commitDateOld": "30/03/19 11:33 PM",
      "commitNameOld": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthorOld": "Uma Maheswara Rao G",
      "daysBetweenCommits": 38.22,
      "commitsBetweenForRepo": 236,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,11 @@\n   public void close() {\n     String cacheFilePath \u003d\n-        pmemVolumeManager.inferCacheFilePath(volumeIndex, key);\n+        PmemVolumeManager.getInstance().getCachePath(key);\n     try {\n       FsDatasetUtil.deleteMappedFile(cacheFilePath);\n-      pmemVolumeManager.afterUncache(key);\n       LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n           + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n     } catch (IOException e) {\n       LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() {\n    String cacheFilePath \u003d\n        PmemVolumeManager.getInstance().getCachePath(key);\n    try {\n      FsDatasetUtil.deleteMappedFile(cacheFilePath);\n      LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n          + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemMappedBlock.java",
      "extendedDetails": {}
    },
    "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-14355 : Implement HDFS cache on SCM by using pure java mapped byte buffer. Contributed by Feilong He.\n",
      "commitDate": "30/03/19 11:33 PM",
      "commitName": "35ff31dd9462cf4fb4ebf5556ee8ae6bcd7c5c3a",
      "commitAuthor": "Uma Maheswara Rao G",
      "diff": "@@ -0,0 +1,12 @@\n+  public void close() {\n+    String cacheFilePath \u003d\n+        pmemVolumeManager.inferCacheFilePath(volumeIndex, key);\n+    try {\n+      FsDatasetUtil.deleteMappedFile(cacheFilePath);\n+      pmemVolumeManager.afterUncache(key);\n+      LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n+          + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n+    } catch (IOException e) {\n+      LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void close() {\n    String cacheFilePath \u003d\n        pmemVolumeManager.inferCacheFilePath(volumeIndex, key);\n    try {\n      FsDatasetUtil.deleteMappedFile(cacheFilePath);\n      pmemVolumeManager.afterUncache(key);\n      LOG.info(\"Successfully uncached one replica:{} from persistent memory\"\n          + \", [cached path\u003d{}, length\u003d{}]\", key, cacheFilePath, length);\n    } catch (IOException e) {\n      LOG.warn(\"Failed to delete the mapped File: {}!\", cacheFilePath, e);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/PmemMappedBlock.java"
    }
  }
}