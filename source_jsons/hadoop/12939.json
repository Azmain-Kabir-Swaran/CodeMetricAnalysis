{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AvailableSpaceBlockPlacementPolicy.java",
  "functionName": "chooseDataNode",
  "functionId": "chooseDataNode___scope-String(modifiers-final)__excludedNode-Collection__Node__(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
  "functionStartLine": 155,
  "functionEndLine": 162,
  "numCommitsSeen": 8,
  "timeTaken": 3934,
  "changeHistory": [
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17",
    "9ae9467f920e95ca989d7d51775b39e1b9fee300",
    "ef432579a7763cc0e482fe049027c6e5325eb034",
    "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
    "de30d66b2673d0344346fb985e786247ca682317"
  ],
  "changeHistoryShort": {
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17": "Ybodychange",
    "9ae9467f920e95ca989d7d51775b39e1b9fee300": "Ybodychange",
    "ef432579a7763cc0e482fe049027c6e5325eb034": "Ybodychange",
    "1268cf5fbe4458fa75ad0662512d352f9e8d3470": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "de30d66b2673d0344346fb985e786247ca682317": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cebce0a348d60ded20eb4a55d1c26ee20017ed17": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-14578. AvailableSpaceBlockPlacementPolicy always prefers local node. Contributed by Ayush Saxena.\n",
      "commitDate": "10/01/20 8:59 PM",
      "commitName": "cebce0a348d60ded20eb4a55d1c26ee20017ed17",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "06/09/18 2:48 PM",
      "commitNameOld": "eca1a4bfe952fc184fe90dde50bac9b0e5293568",
      "commitAuthorOld": "Giovanni Matteo Fumarola",
      "daysBetweenCommits": 491.3,
      "commitsBetweenForRepo": 3510,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected DatanodeDescriptor chooseDataNode(final String scope,\n       final Collection\u003cNode\u003e excludedNode) {\n     DatanodeDescriptor a \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     DatanodeDescriptor b \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n-    return select(a, b);\n+    return select(a, b, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    return select(a, b, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
      "extendedDetails": {}
    },
    "9ae9467f920e95ca989d7d51775b39e1b9fee300": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-11998. Enable DFSNetworkTopology as default. Contributed by Chen Liang.\n",
      "commitDate": "21/06/17 10:01 PM",
      "commitName": "9ae9467f920e95ca989d7d51775b39e1b9fee300",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "05/08/16 1:31 AM",
      "commitNameOld": "ef432579a7763cc0e482fe049027c6e5325eb034",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 320.85,
      "commitsBetweenForRepo": 1923,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,8 @@\n   protected DatanodeDescriptor chooseDataNode(final String scope,\n       final Collection\u003cNode\u003e excludedNode) {\n     DatanodeDescriptor a \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     DatanodeDescriptor b \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n-    if (a !\u003d null \u0026\u0026 b !\u003d null){\n-      int ret \u003d compareDataNode(a, b);\n-      if (ret \u003d\u003d 0) {\n-        return a;\n-      } else if (ret \u003c 0) {\n-        return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n-      } else {\n-        return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n-      }\n-    } else {\n-      return a \u003d\u003d null ? b : a;\n-    }\n+    return select(a, b);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    return select(a, b);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
      "extendedDetails": {}
    },
    "ef432579a7763cc0e482fe049027c6e5325eb034": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10715. NPE when applying AvailableSpaceBlockPlacementPolicy. Contributed by Guangbin Zhu.\n",
      "commitDate": "05/08/16 1:31 AM",
      "commitName": "ef432579a7763cc0e482fe049027c6e5325eb034",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "04/05/16 5:02 PM",
      "commitNameOld": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
      "commitAuthorOld": "Ming Ma",
      "daysBetweenCommits": 92.35,
      "commitsBetweenForRepo": 754,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,19 @@\n   protected DatanodeDescriptor chooseDataNode(final String scope,\n       final Collection\u003cNode\u003e excludedNode) {\n     DatanodeDescriptor a \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     DatanodeDescriptor b \u003d\n         (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n-    int ret \u003d compareDataNode(a, b);\n-    if (ret \u003d\u003d 0) {\n-      return a;\n-    } else if (ret \u003c 0) {\n-      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n+    if (a !\u003d null \u0026\u0026 b !\u003d null){\n+      int ret \u003d compareDataNode(a, b);\n+      if (ret \u003d\u003d 0) {\n+        return a;\n+      } else if (ret \u003c 0) {\n+        return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n+      } else {\n+        return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n+      }\n     } else {\n-      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n+      return a \u003d\u003d null ? b : a;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    if (a !\u003d null \u0026\u0026 b !\u003d null){\n      int ret \u003d compareDataNode(a, b);\n      if (ret \u003d\u003d 0) {\n        return a;\n      } else if (ret \u003c 0) {\n        return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n      } else {\n        return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n      }\n    } else {\n      return a \u003d\u003d null ? b : a;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
      "extendedDetails": {}
    },
    "1268cf5fbe4458fa75ad0662512d352f9e8d3470": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-10320. Rack failures may result in NN terminate. (Xiao Chen via mingma)\n",
      "commitDate": "04/05/16 5:02 PM",
      "commitName": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
      "commitAuthor": "Ming Ma",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10320. Rack failures may result in NN terminate. (Xiao Chen via mingma)\n",
          "commitDate": "04/05/16 5:02 PM",
          "commitName": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
          "commitAuthor": "Ming Ma",
          "commitDateOld": "19/05/15 6:04 AM",
          "commitNameOld": "de30d66b2673d0344346fb985e786247ca682317",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 351.46,
          "commitsBetweenForRepo": 2491,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  protected DatanodeDescriptor chooseDataNode(String scope) {\n-    DatanodeDescriptor a \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n-    DatanodeDescriptor b \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n+  protected DatanodeDescriptor chooseDataNode(final String scope,\n+      final Collection\u003cNode\u003e excludedNode) {\n+    DatanodeDescriptor a \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n+    DatanodeDescriptor b \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     int ret \u003d compareDataNode(a, b);\n     if (ret \u003d\u003d 0) {\n       return a;\n     } else if (ret \u003c 0) {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n     } else {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    int ret \u003d compareDataNode(a, b);\n    if (ret \u003d\u003d 0) {\n      return a;\n    } else if (ret \u003c 0) {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n    } else {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
          "extendedDetails": {
            "oldValue": "[scope-String]",
            "newValue": "[scope-String(modifiers-final), excludedNode-Collection\u003cNode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10320. Rack failures may result in NN terminate. (Xiao Chen via mingma)\n",
          "commitDate": "04/05/16 5:02 PM",
          "commitName": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
          "commitAuthor": "Ming Ma",
          "commitDateOld": "19/05/15 6:04 AM",
          "commitNameOld": "de30d66b2673d0344346fb985e786247ca682317",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 351.46,
          "commitsBetweenForRepo": 2491,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  protected DatanodeDescriptor chooseDataNode(String scope) {\n-    DatanodeDescriptor a \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n-    DatanodeDescriptor b \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n+  protected DatanodeDescriptor chooseDataNode(final String scope,\n+      final Collection\u003cNode\u003e excludedNode) {\n+    DatanodeDescriptor a \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n+    DatanodeDescriptor b \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     int ret \u003d compareDataNode(a, b);\n     if (ret \u003d\u003d 0) {\n       return a;\n     } else if (ret \u003c 0) {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n     } else {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    int ret \u003d compareDataNode(a, b);\n    if (ret \u003d\u003d 0) {\n      return a;\n    } else if (ret \u003c 0) {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n    } else {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-10320. Rack failures may result in NN terminate. (Xiao Chen via mingma)\n",
          "commitDate": "04/05/16 5:02 PM",
          "commitName": "1268cf5fbe4458fa75ad0662512d352f9e8d3470",
          "commitAuthor": "Ming Ma",
          "commitDateOld": "19/05/15 6:04 AM",
          "commitNameOld": "de30d66b2673d0344346fb985e786247ca682317",
          "commitAuthorOld": "Kihwal Lee",
          "daysBetweenCommits": 351.46,
          "commitsBetweenForRepo": 2491,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  protected DatanodeDescriptor chooseDataNode(String scope) {\n-    DatanodeDescriptor a \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n-    DatanodeDescriptor b \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n+  protected DatanodeDescriptor chooseDataNode(final String scope,\n+      final Collection\u003cNode\u003e excludedNode) {\n+    DatanodeDescriptor a \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n+    DatanodeDescriptor b \u003d\n+        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n     int ret \u003d compareDataNode(a, b);\n     if (ret \u003d\u003d 0) {\n       return a;\n     } else if (ret \u003c 0) {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n     } else {\n       return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected DatanodeDescriptor chooseDataNode(final String scope,\n      final Collection\u003cNode\u003e excludedNode) {\n    DatanodeDescriptor a \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    DatanodeDescriptor b \u003d\n        (DatanodeDescriptor) clusterMap.chooseRandom(scope, excludedNode);\n    int ret \u003d compareDataNode(a, b);\n    if (ret \u003d\u003d 0) {\n      return a;\n    } else if (ret \u003c 0) {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n    } else {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java",
          "extendedDetails": {
            "oldValue": "[scope-String]",
            "newValue": "[scope-String(modifiers-final), excludedNode-Collection\u003cNode\u003e(modifiers-final)]"
          }
        }
      ]
    },
    "de30d66b2673d0344346fb985e786247ca682317": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-8131. Implement a space balanced block placement policy. Contributed by Liu Shaohui.\n",
      "commitDate": "19/05/15 6:04 AM",
      "commitName": "de30d66b2673d0344346fb985e786247ca682317",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,12 @@\n+  protected DatanodeDescriptor chooseDataNode(String scope) {\n+    DatanodeDescriptor a \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n+    DatanodeDescriptor b \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n+    int ret \u003d compareDataNode(a, b);\n+    if (ret \u003d\u003d 0) {\n+      return a;\n+    } else if (ret \u003c 0) {\n+      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n+    } else {\n+      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected DatanodeDescriptor chooseDataNode(String scope) {\n    DatanodeDescriptor a \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n    DatanodeDescriptor b \u003d (DatanodeDescriptor) clusterMap.chooseRandom(scope);\n    int ret \u003d compareDataNode(a, b);\n    if (ret \u003d\u003d 0) {\n      return a;\n    } else if (ret \u003c 0) {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? a : b;\n    } else {\n      return (RAND.nextInt(100) \u003c balancedPreference) ? b : a;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/AvailableSpaceBlockPlacementPolicy.java"
    }
  }
}