{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceTrackerService.java",
  "functionName": "loadDynamicResourceConfiguration",
  "functionId": "loadDynamicResourceConfiguration___conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
  "functionStartLine": 202,
  "functionEndLine": 220,
  "numCommitsSeen": 98,
  "timeTaken": 2219,
  "changeHistory": [
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
    "524bc3c33aff301c1a8d60ed8e6a3b240e305045"
  ],
  "changeHistoryShort": {
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": "Ybodychange",
    "524bc3c33aff301c1a8d60ed8e6a3b240e305045": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4832. NM side resource value should get updated if change applied in RM side. Contributed by Junping Du\n",
      "commitDate": "17/05/16 12:52 PM",
      "commitName": "fa3bc3405dc2f8497faab45ba5c4de2caf4c29bc",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/05/16 1:38 PM",
      "commitNameOld": "f0ac18d001d97914a9ee810b1fab56c5cebff830",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 3.97,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,19 @@\n   public void loadDynamicResourceConfiguration(Configuration conf)\n       throws IOException {\n     try {\n       // load dynamic-resources.xml\n       InputStream drInputStream \u003d this.rmContext.getConfigurationProvider()\n           .getConfigurationInputStream(conf,\n           YarnConfiguration.DR_CONFIGURATION_FILE);\n+      // write lock here on drConfig is unnecessary as here get called at\n+      // ResourceTrackerService get initiated and other read and write\n+      // operations haven\u0027t started yet.\n       if (drInputStream !\u003d null) {\n         this.drConf \u003d new DynamicResourceConfiguration(conf, drInputStream);\n       } else {\n         this.drConf \u003d new DynamicResourceConfiguration(conf);\n       }\n     } catch (Exception e) {\n       throw new IOException(e);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void loadDynamicResourceConfiguration(Configuration conf)\n      throws IOException {\n    try {\n      // load dynamic-resources.xml\n      InputStream drInputStream \u003d this.rmContext.getConfigurationProvider()\n          .getConfigurationInputStream(conf,\n          YarnConfiguration.DR_CONFIGURATION_FILE);\n      // write lock here on drConfig is unnecessary as here get called at\n      // ResourceTrackerService get initiated and other read and write\n      // operations haven\u0027t started yet.\n      if (drInputStream !\u003d null) {\n        this.drConf \u003d new DynamicResourceConfiguration(conf, drInputStream);\n      } else {\n        this.drConf \u003d new DynamicResourceConfiguration(conf);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java",
      "extendedDetails": {}
    },
    "524bc3c33aff301c1a8d60ed8e6a3b240e305045": {
      "type": "Yintroduced",
      "commitMessage": "YARN-998. Keep NM resource updated through dynamic resource config for RM/NM restart. Contributed by Junping Du\n",
      "commitDate": "28/03/16 11:12 AM",
      "commitName": "524bc3c33aff301c1a8d60ed8e6a3b240e305045",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,16 @@\n+  public void loadDynamicResourceConfiguration(Configuration conf)\n+      throws IOException {\n+    try {\n+      // load dynamic-resources.xml\n+      InputStream drInputStream \u003d this.rmContext.getConfigurationProvider()\n+          .getConfigurationInputStream(conf,\n+          YarnConfiguration.DR_CONFIGURATION_FILE);\n+      if (drInputStream !\u003d null) {\n+        this.drConf \u003d new DynamicResourceConfiguration(conf, drInputStream);\n+      } else {\n+        this.drConf \u003d new DynamicResourceConfiguration(conf);\n+      }\n+    } catch (Exception e) {\n+      throw new IOException(e);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void loadDynamicResourceConfiguration(Configuration conf)\n      throws IOException {\n    try {\n      // load dynamic-resources.xml\n      InputStream drInputStream \u003d this.rmContext.getConfigurationProvider()\n          .getConfigurationInputStream(conf,\n          YarnConfiguration.DR_CONFIGURATION_FILE);\n      if (drInputStream !\u003d null) {\n        this.drConf \u003d new DynamicResourceConfiguration(conf, drInputStream);\n      } else {\n        this.drConf \u003d new DynamicResourceConfiguration(conf);\n      }\n    } catch (Exception e) {\n      throw new IOException(e);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/ResourceTrackerService.java"
    }
  }
}