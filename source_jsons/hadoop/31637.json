{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "EntityRowKey.java",
  "functionName": "getRowKey",
  "functionId": "getRowKey",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
  "functionStartLine": 97,
  "functionEndLine": 99,
  "numCommitsSeen": 30,
  "timeTaken": 4974,
  "changeHistory": [
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
    "892b193bd77c15932b4c084c1d525b7017def0d4",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
    "8ef546c1ee9fce0b171813547253374d268566ba",
    "b51d0fef56a59b15489f5b932025718b4e9613d2",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65",
    "9422d9b50d90a99062880cf648dd86a764bf97ec",
    "92d90c3a243134177f192d1d473dd606c79a91fc"
  ],
  "changeHistoryShort": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": "Yfilerename",
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": "Yfilerename",
    "892b193bd77c15932b4c084c1d525b7017def0d4": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": "Ybodychange",
    "8ef546c1ee9fce0b171813547253374d268566ba": "Ymultichange(Yparameterchange,Ybodychange)",
    "b51d0fef56a59b15489f5b932025718b4e9613d2": "Ybodychange",
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": "Ymultichange(Yparameterchange,Ybodychange)",
    "9422d9b50d90a99062880cf648dd86a764bf97ec": "Ybodychange",
    "92d90c3a243134177f192d1d473dd606c79a91fc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7919. Refactor timelineservice-hbase module into submodules. Contributed by Haibo Chen.\n",
      "commitDate": "17/02/18 7:00 AM",
      "commitName": "9af30d46c6e82332a8eda20cb3eb5f987e25e7a2",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "17/02/18 3:24 AM",
      "commitNameOld": "a1e56a62863d8d494af309ec5f476c4b7e4d5ef9",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 0.15,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public byte[] getRowKey() {\n    return entityRowKeyConverter.encode(this);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/hadoop-yarn-server-timelineservice-hbase-common/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java"
      }
    },
    "b01514f65bc6090a50a583f67d1ecb5d74b6d276": {
      "type": "Yfilerename",
      "commitMessage": "YARN-5928. Move ATSv2 HBase backend code into a new module that is only dependent at runtime by yarn servers. Contributed by Haibo Chen.\n",
      "commitDate": "19/01/17 8:52 PM",
      "commitName": "b01514f65bc6090a50a583f67d1ecb5d74b6d276",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "19/01/17 5:32 PM",
      "commitNameOld": "60865c8ea08053f3d6ac23f81c3376a3de3ca996",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 0.14,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public byte[] getRowKey() {\n    return entityRowKeyConverter.encode(this);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice-hbase/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java"
      }
    },
    "892b193bd77c15932b4c084c1d525b7017def0d4": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
      "commitAuthor": "Varun Saxena",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,3 @@\n-  public static byte[] getRowKey(String clusterId, String userId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      String entityId) {\n-    return EntityRowKeyConverter.getInstance().encode(new EntityRowKey(\n-        clusterId, userId, flowName, flowRunId, appId, entityType, entityId));\n+  public byte[] getRowKey() {\n+    return entityRowKeyConverter.encode(this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] getRowKey() {\n    return entityRowKeyConverter.encode(this);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldValue": "[clusterId-String, userId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, entityId-String]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,3 @@\n-  public static byte[] getRowKey(String clusterId, String userId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      String entityId) {\n-    return EntityRowKeyConverter.getInstance().encode(new EntityRowKey(\n-        clusterId, userId, flowName, flowRunId, appId, entityType, entityId));\n+  public byte[] getRowKey() {\n+    return entityRowKeyConverter.encode(this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] getRowKey() {\n    return entityRowKeyConverter.encode(this);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldValue": "[public, static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-5170. Eliminate singleton converters and static method access. (Joep Rottinghuis via Varun Saxena)\n",
          "commitDate": "10/07/16 8:46 AM",
          "commitName": "892b193bd77c15932b4c084c1d525b7017def0d4",
          "commitAuthor": "Varun Saxena",
          "commitDateOld": "10/07/16 8:46 AM",
          "commitNameOld": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 7,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,3 @@\n-  public static byte[] getRowKey(String clusterId, String userId,\n-      String flowName, Long flowRunId, String appId, String entityType,\n-      String entityId) {\n-    return EntityRowKeyConverter.getInstance().encode(new EntityRowKey(\n-        clusterId, userId, flowName, flowRunId, appId, entityType, entityId));\n+  public byte[] getRowKey() {\n+    return entityRowKeyConverter.encode(this);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] getRowKey() {\n    return entityRowKeyConverter.encode(this);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {}
        }
      ]
    },
    "7b8cfa5c2ff62005c8b78867fedd64b48e50383d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5109. timestamps are stored unencoded causing parse errors (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:46 AM",
      "commitName": "7b8cfa5c2ff62005c8b78867fedd64b48e50383d",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,6 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n       String flowName, Long flowRunId, String appId, String entityType,\n       String entityId) {\n-    byte[] first \u003d\n-        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n-            flowName));\n-    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n-    // time.\n-    byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n-    byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n-    byte[] fourth \u003d\n-        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n-    return Separator.QUALIFIERS.join(first, second, third, fourth);\n+    return EntityRowKeyConverter.getInstance().encode(new EntityRowKey(\n+        clusterId, userId, flowName, flowRunId, appId, entityType, entityId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    return EntityRowKeyConverter.getInstance().encode(new EntityRowKey(\n        clusterId, userId, flowName, flowRunId, appId, entityType, entityId));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {}
    },
    "8ef546c1ee9fce0b171813547253374d268566ba": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       String entityId) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n-            flowId));\n+            flowName));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n     byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n     byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n     byte[] fourth \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n     return Separator.QUALIFIERS.join(first, second, third, fourth);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowName));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n    byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n    byte[] fourth \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n    return Separator.QUALIFIERS.join(first, second, third, fourth);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldValue": "[clusterId-String, userId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, entityId-String]",
            "newValue": "[clusterId-String, userId-String, flowName-String, flowRunId-Long, appId-String, entityType-String, entityId-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4445. Unify the term flowId and flowName in timeline v2 codebase.\nContributed by Zhan Zhang.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "8ef546c1ee9fce0b171813547253374d268566ba",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "b51d0fef56a59b15489f5b932025718b4e9613d2",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,14 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n-      String flowId, Long flowRunId, String appId, String entityType,\n+      String flowName, Long flowRunId, String appId, String entityType,\n       String entityId) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n-            flowId));\n+            flowName));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n     byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n     byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n     byte[] fourth \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n     return Separator.QUALIFIERS.join(first, second, third, fourth);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowName, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowName));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n    byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n    byte[] fourth \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n    return Separator.QUALIFIERS.join(first, second, third, fourth);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {}
        }
      ]
    },
    "b51d0fef56a59b15489f5b932025718b4e9613d2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4178. [storage implementation] app id as string in row keys can cause incorrect ordering (Varun Saxena via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "b51d0fef56a59b15489f5b932025718b4e9613d2",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "10fa6da7d8a6013698767c6136ae20f0e04415e9",
      "commitAuthorOld": "Vrushali",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 5,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n       String flowId, Long flowRunId, String appId, String entityType,\n       String entityId) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n             flowId));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n-    byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n-    byte[] third \u003d\n-        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, entityType,\n-            entityId));\n-    return Separator.QUALIFIERS.join(first, second, third);\n+    byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n+    byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n+    byte[] fourth \u003d\n+        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n+    return Separator.QUALIFIERS.join(first, second, third, fourth);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowId));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineStorageUtils.invertLong(flowRunId));\n    byte[] third \u003d TimelineStorageUtils.encodeAppId(appId);\n    byte[] fourth \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(entityType, entityId));\n    return Separator.QUALIFIERS.join(first, second, third, fourth);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {}
    },
    "9e5155be363c6610ccf41fe08b7f1394f353ea65": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9422d9b50d90a99062880cf648dd86a764bf97ec",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n-      String flowId, Long flowRunId, String appId, TimelineEntity te) {\n+      String flowId, Long flowRunId, String appId, String entityType,\n+      String entityId) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n             flowId));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n     byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n     byte[] third \u003d\n-        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n-            te.getId()));\n+        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, entityType,\n+            entityId));\n     return Separator.QUALIFIERS.join(first, second, third);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowId));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n    byte[] third \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, entityType,\n            entityId));\n    return Separator.QUALIFIERS.join(first, second, third);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {
            "oldValue": "[clusterId-String, userId-String, flowId-String, flowRunId-Long, appId-String, te-TimelineEntity]",
            "newValue": "[clusterId-String, userId-String, flowId-String, flowRunId-Long, appId-String, entityType-String, entityId-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3049. [Storage Implementation] Implement storage reader interface to fetch raw data from HBase backend (Zhijie Shen via sjlee)\n\n(cherry picked from commit 07433c2ad52df9e844dbd90020c277d3df844dcd)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "9e5155be363c6610ccf41fe08b7f1394f353ea65",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "9422d9b50d90a99062880cf648dd86a764bf97ec",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,14 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n-      String flowId, Long flowRunId, String appId, TimelineEntity te) {\n+      String flowId, Long flowRunId, String appId, String entityType,\n+      String entityId) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n             flowId));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n     byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n     byte[] third \u003d\n-        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n-            te.getId()));\n+        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, entityType,\n+            entityId));\n     return Separator.QUALIFIERS.join(first, second, third);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowId, Long flowRunId, String appId, String entityType,\n      String entityId) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowId));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n    byte[] third \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, entityType,\n            entityId));\n    return Separator.QUALIFIERS.join(first, second, third);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
          "extendedDetails": {}
        }
      ]
    },
    "9422d9b50d90a99062880cf648dd86a764bf97ec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3984. Adjusted the event column key schema and avoided missing empty event. Contributed by Vrushali C.\n\n(cherry picked from commit 895ccfa1ab9e701f2908586e323249f670fe5544)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "9422d9b50d90a99062880cf648dd86a764bf97ec",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "92d90c3a243134177f192d1d473dd606c79a91fc",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 8,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public static byte[] getRowKey(String clusterId, String userId,\n       String flowId, Long flowRunId, String appId, TimelineEntity te) {\n     byte[] first \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n             flowId));\n     // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n     // time.\n-    byte[] second \u003d Bytes.toBytes(EntityRowKey.invert(flowRunId));\n+    byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n     byte[] third \u003d\n         Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n             te.getId()));\n     return Separator.QUALIFIERS.join(first, second, third);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowId, Long flowRunId, String appId, TimelineEntity te) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowId));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(TimelineWriterUtils.invert(flowRunId));\n    byte[] third \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n            te.getId()));\n    return Separator.QUALIFIERS.join(first, second, third);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java",
      "extendedDetails": {}
    },
    "92d90c3a243134177f192d1d473dd606c79a91fc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3706. Generalize native HBase writer for additional tables (Joep Rottinghuis via sjlee)\n\n(cherry picked from commit 9137aeae0dec83f9eff40d12cae712dfd508c0c5)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "92d90c3a243134177f192d1d473dd606c79a91fc",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,13 @@\n+  public static byte[] getRowKey(String clusterId, String userId,\n+      String flowId, Long flowRunId, String appId, TimelineEntity te) {\n+    byte[] first \u003d\n+        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n+            flowId));\n+    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n+    // time.\n+    byte[] second \u003d Bytes.toBytes(EntityRowKey.invert(flowRunId));\n+    byte[] third \u003d\n+        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n+            te.getId()));\n+    return Separator.QUALIFIERS.join(first, second, third);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static byte[] getRowKey(String clusterId, String userId,\n      String flowId, Long flowRunId, String appId, TimelineEntity te) {\n    byte[] first \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(userId, clusterId,\n            flowId));\n    // Note that flowRunId is a long, so we can\u0027t encode them all at the same\n    // time.\n    byte[] second \u003d Bytes.toBytes(EntityRowKey.invert(flowRunId));\n    byte[] third \u003d\n        Bytes.toBytes(Separator.QUALIFIERS.joinEncoded(appId, te.getType(),\n            te.getId()));\n    return Separator.QUALIFIERS.join(first, second, third);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/storage/entity/EntityRowKey.java"
    }
  }
}