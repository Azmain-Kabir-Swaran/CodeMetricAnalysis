{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PartitionedStagingCommitter.java",
  "functionName": "commitTaskInternal",
  "functionId": "commitTaskInternal___context-TaskAttemptContext__taskOutput-List__? extends FileStatus__",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/staging/PartitionedStagingCommitter.java",
  "functionStartLine": 92,
  "functionEndLine": 114,
  "numCommitsSeen": 3,
  "timeTaken": 1649,
  "changeHistory": [
    "5a0babf76550f63dad4c17173c4da2bf335c6532",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c"
  ],
  "changeHistoryShort": {
    "5a0babf76550f63dad4c17173c4da2bf335c6532": "Ybodychange",
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5a0babf76550f63dad4c17173c4da2bf335c6532": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15107. Stabilize/tune S3A committers; review correctness \u0026 docs.\nContributed by Steve Loughran.\n",
      "commitDate": "30/08/18 6:49 AM",
      "commitName": "5a0babf76550f63dad4c17173c4da2bf335c6532",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "22/11/17 7:28 AM",
      "commitNameOld": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 280.93,
      "commitsBetweenForRepo": 2523,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,23 @@\n   protected int commitTaskInternal(TaskAttemptContext context,\n       List\u003c? extends FileStatus\u003e taskOutput) throws IOException {\n     Path attemptPath \u003d getTaskAttemptPath(context);\n     Set\u003cString\u003e partitions \u003d Paths.getPartitions(attemptPath, taskOutput);\n \n     // enforce conflict resolution, but only if the mode is FAIL. for APPEND,\n     // it doesn\u0027t matter that the partitions are already there, and for REPLACE,\n     // deletion should be done during job commit.\n     FileSystem fs \u003d getDestFS();\n     if (getConflictResolutionMode(context, fs.getConf())\n         \u003d\u003d ConflictResolution.FAIL) {\n       for (String partition : partitions) {\n         // getFinalPath adds the UUID to the file name. this needs the parent.\n         Path partitionPath \u003d getFinalPath(partition + \"/file\",\n             context).getParent();\n         if (fs.exists(partitionPath)) {\n-          LOG.debug(\"Failing commit by task attempt {} to write\"\n-              + \" to existing path {} under {}\",\n-              context.getTaskAttemptID(), partitionPath, getOutputPath());\n-          throw new PathExistsException(partitionPath.toString(),\n-              E_DEST_EXISTS);\n+          throw failDestinationExists(partitionPath,\n+              \"Committing task \" + context.getTaskAttemptID());\n         }\n       }\n     }\n     return super.commitTaskInternal(context, taskOutput);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected int commitTaskInternal(TaskAttemptContext context,\n      List\u003c? extends FileStatus\u003e taskOutput) throws IOException {\n    Path attemptPath \u003d getTaskAttemptPath(context);\n    Set\u003cString\u003e partitions \u003d Paths.getPartitions(attemptPath, taskOutput);\n\n    // enforce conflict resolution, but only if the mode is FAIL. for APPEND,\n    // it doesn\u0027t matter that the partitions are already there, and for REPLACE,\n    // deletion should be done during job commit.\n    FileSystem fs \u003d getDestFS();\n    if (getConflictResolutionMode(context, fs.getConf())\n        \u003d\u003d ConflictResolution.FAIL) {\n      for (String partition : partitions) {\n        // getFinalPath adds the UUID to the file name. this needs the parent.\n        Path partitionPath \u003d getFinalPath(partition + \"/file\",\n            context).getParent();\n        if (fs.exists(partitionPath)) {\n          throw failDestinationExists(partitionPath,\n              \"Committing task \" + context.getTaskAttemptID());\n        }\n      }\n    }\n    return super.commitTaskInternal(context, taskOutput);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/staging/PartitionedStagingCommitter.java",
      "extendedDetails": {}
    },
    "de8b6ca5ef8614de6d6277b7617e27c788b0555c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13786 Add S3A committer for zero-rename commits to S3 endpoints.\nContributed by Steve Loughran and Ryan Blue.\n",
      "commitDate": "22/11/17 7:28 AM",
      "commitName": "de8b6ca5ef8614de6d6277b7617e27c788b0555c",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,26 @@\n+  protected int commitTaskInternal(TaskAttemptContext context,\n+      List\u003c? extends FileStatus\u003e taskOutput) throws IOException {\n+    Path attemptPath \u003d getTaskAttemptPath(context);\n+    Set\u003cString\u003e partitions \u003d Paths.getPartitions(attemptPath, taskOutput);\n+\n+    // enforce conflict resolution, but only if the mode is FAIL. for APPEND,\n+    // it doesn\u0027t matter that the partitions are already there, and for REPLACE,\n+    // deletion should be done during job commit.\n+    FileSystem fs \u003d getDestFS();\n+    if (getConflictResolutionMode(context, fs.getConf())\n+        \u003d\u003d ConflictResolution.FAIL) {\n+      for (String partition : partitions) {\n+        // getFinalPath adds the UUID to the file name. this needs the parent.\n+        Path partitionPath \u003d getFinalPath(partition + \"/file\",\n+            context).getParent();\n+        if (fs.exists(partitionPath)) {\n+          LOG.debug(\"Failing commit by task attempt {} to write\"\n+              + \" to existing path {} under {}\",\n+              context.getTaskAttemptID(), partitionPath, getOutputPath());\n+          throw new PathExistsException(partitionPath.toString(),\n+              E_DEST_EXISTS);\n+        }\n+      }\n+    }\n+    return super.commitTaskInternal(context, taskOutput);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected int commitTaskInternal(TaskAttemptContext context,\n      List\u003c? extends FileStatus\u003e taskOutput) throws IOException {\n    Path attemptPath \u003d getTaskAttemptPath(context);\n    Set\u003cString\u003e partitions \u003d Paths.getPartitions(attemptPath, taskOutput);\n\n    // enforce conflict resolution, but only if the mode is FAIL. for APPEND,\n    // it doesn\u0027t matter that the partitions are already there, and for REPLACE,\n    // deletion should be done during job commit.\n    FileSystem fs \u003d getDestFS();\n    if (getConflictResolutionMode(context, fs.getConf())\n        \u003d\u003d ConflictResolution.FAIL) {\n      for (String partition : partitions) {\n        // getFinalPath adds the UUID to the file name. this needs the parent.\n        Path partitionPath \u003d getFinalPath(partition + \"/file\",\n            context).getParent();\n        if (fs.exists(partitionPath)) {\n          LOG.debug(\"Failing commit by task attempt {} to write\"\n              + \" to existing path {} under {}\",\n              context.getTaskAttemptID(), partitionPath, getOutputPath());\n          throw new PathExistsException(partitionPath.toString(),\n              E_DEST_EXISTS);\n        }\n      }\n    }\n    return super.commitTaskInternal(context, taskOutput);\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/commit/staging/PartitionedStagingCommitter.java"
    }
  }
}