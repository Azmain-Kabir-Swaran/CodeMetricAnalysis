{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationMaster.java",
  "functionName": "setupSchedulingRequest",
  "functionId": "setupSchedulingRequest___spec-PlacementSpec",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
  "functionStartLine": 1604,
  "functionEndLine": 1615,
  "numCommitsSeen": 113,
  "timeTaken": 1684,
  "changeHistory": [
    "aae629913cee0157c945a2c7384c7bf398f10616",
    "e60f51299dba360d13aa39f9ab714fdfc666b532"
  ],
  "changeHistoryShort": {
    "aae629913cee0157c945a2c7384c7bf398f10616": "Ybodychange",
    "e60f51299dba360d13aa39f9ab714fdfc666b532": "Yintroduced"
  },
  "changeHistoryDetails": {
    "aae629913cee0157c945a2c7384c7bf398f10616": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7292. Retrospect Resource Profile Behavior for overriding capability. Contributed by Wangda Tan.\n",
      "commitDate": "15/02/18 11:07 PM",
      "commitName": "aae629913cee0157c945a2c7384c7bf398f10616",
      "commitAuthor": "Sunil G",
      "commitDateOld": "10/02/18 10:20 PM",
      "commitNameOld": "a08c048832d68c203fbdfce8d9f0e7dcccb02a55",
      "commitAuthorOld": "Weiwei Yang",
      "daysBetweenCommits": 5.03,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private SchedulingRequest setupSchedulingRequest(PlacementSpec spec) {\n     long allocId \u003d allocIdCounter.incrementAndGet();\n     SchedulingRequest sReq \u003d SchedulingRequest.newInstance(\n         allocId, Priority.newInstance(requestPriority),\n         ExecutionTypeRequest.newInstance(),\n         Collections.singleton(spec.sourceTag),\n         ResourceSizing.newInstance(\n-            createProfileCapability().getProfileCapabilityOverride()), null);\n+            getTaskResourceCapability()), null);\n     sReq.setPlacementConstraint(spec.constraint);\n     LOG.info(\"Scheduling Request made: \" + sReq.toString());\n     return sReq;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private SchedulingRequest setupSchedulingRequest(PlacementSpec spec) {\n    long allocId \u003d allocIdCounter.incrementAndGet();\n    SchedulingRequest sReq \u003d SchedulingRequest.newInstance(\n        allocId, Priority.newInstance(requestPriority),\n        ExecutionTypeRequest.newInstance(),\n        Collections.singleton(spec.sourceTag),\n        ResourceSizing.newInstance(\n            getTaskResourceCapability()), null);\n    sReq.setPlacementConstraint(spec.constraint);\n    LOG.info(\"Scheduling Request made: \" + sReq.toString());\n    return sReq;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java",
      "extendedDetails": {}
    },
    "e60f51299dba360d13aa39f9ab714fdfc666b532": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7745. Allow DistributedShell to take a placement specification for containers it wants to launch. (Arun Suresh via wangda)\n\nChange-Id: Ided146d662e944a8a4692e5d6885f23fd9bbcad5\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "e60f51299dba360d13aa39f9ab714fdfc666b532",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,12 @@\n+  private SchedulingRequest setupSchedulingRequest(PlacementSpec spec) {\n+    long allocId \u003d allocIdCounter.incrementAndGet();\n+    SchedulingRequest sReq \u003d SchedulingRequest.newInstance(\n+        allocId, Priority.newInstance(requestPriority),\n+        ExecutionTypeRequest.newInstance(),\n+        Collections.singleton(spec.sourceTag),\n+        ResourceSizing.newInstance(\n+            createProfileCapability().getProfileCapabilityOverride()), null);\n+    sReq.setPlacementConstraint(spec.constraint);\n+    LOG.info(\"Scheduling Request made: \" + sReq.toString());\n+    return sReq;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private SchedulingRequest setupSchedulingRequest(PlacementSpec spec) {\n    long allocId \u003d allocIdCounter.incrementAndGet();\n    SchedulingRequest sReq \u003d SchedulingRequest.newInstance(\n        allocId, Priority.newInstance(requestPriority),\n        ExecutionTypeRequest.newInstance(),\n        Collections.singleton(spec.sourceTag),\n        ResourceSizing.newInstance(\n            createProfileCapability().getProfileCapabilityOverride()), null);\n    sReq.setPlacementConstraint(spec.constraint);\n    LOG.info(\"Scheduling Request made: \" + sReq.toString());\n    return sReq;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/ApplicationMaster.java"
    }
  }
}