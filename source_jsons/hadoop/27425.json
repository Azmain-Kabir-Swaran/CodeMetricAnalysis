{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineReaderServer.java",
  "functionName": "startTimelineReaderServer",
  "functionId": "startTimelineReaderServer___args-String[]__conf-Configuration",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
  "functionStartLine": 230,
  "functionEndLine": 249,
  "numCommitsSeen": 23,
  "timeTaken": 1663,
  "changeHistory": [
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1",
    "e27642abf4deb12c6e8c47ffc891b41300494307"
  ],
  "changeHistoryShort": {
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": "Ybodychange",
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": "Ymultichange(Yparameterchange,Ybodychange)",
    "e27642abf4deb12c6e8c47ffc891b41300494307": "Yintroduced"
  },
  "changeHistoryDetails": {
    "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6958. Moving logging APIs over to slf4j in hadoop-yarn-server-timelineservice. Contributed by Yeliang Cang.\n",
      "commitDate": "09/08/17 7:58 AM",
      "commitName": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "10/03/17 2:39 PM",
      "commitNameOld": "229c7c9f8922f2b1bfd04b09b834e00d359046ff",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 151.68,
      "commitsBetweenForRepo": 856,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   static TimelineReaderServer startTimelineReaderServer(String[] args,\n       Configuration conf) {\n     Thread.setDefaultUncaughtExceptionHandler(\n         new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n         args, LOG);\n     TimelineReaderServer timelineReaderServer \u003d null;\n     try {\n       timelineReaderServer \u003d new TimelineReaderServer();\n       ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(timelineReaderServer),\n           SHUTDOWN_HOOK_PRIORITY);\n       timelineReaderServer.init(conf);\n       timelineReaderServer.start();\n     } catch (Throwable t) {\n-      LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n+      LOG.error(\"Error starting TimelineReaderWebServer\", t);\n       ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n     }\n     return timelineReaderServer;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static TimelineReaderServer startTimelineReaderServer(String[] args,\n      Configuration conf) {\n    Thread.setDefaultUncaughtExceptionHandler(\n        new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n        args, LOG);\n    TimelineReaderServer timelineReaderServer \u003d null;\n    try {\n      timelineReaderServer \u003d new TimelineReaderServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(timelineReaderServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      timelineReaderServer.init(conf);\n      timelineReaderServer.start();\n    } catch (Throwable t) {\n      LOG.error(\"Error starting TimelineReaderWebServer\", t);\n      ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n    }\n    return timelineReaderServer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
      "extendedDetails": {}
    },
    "89e5c44f9e891a3579384c3fa3766937cd4970f1": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
      "commitAuthor": "Li Lu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  static TimelineReaderServer startTimelineReaderServer(String[] args) {\n+  static TimelineReaderServer startTimelineReaderServer(String[] args,\n+      Configuration conf) {\n     Thread.setDefaultUncaughtExceptionHandler(\n         new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n         args, LOG);\n     TimelineReaderServer timelineReaderServer \u003d null;\n     try {\n       timelineReaderServer \u003d new TimelineReaderServer();\n       ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(timelineReaderServer),\n           SHUTDOWN_HOOK_PRIORITY);\n-      YarnConfiguration conf \u003d new YarnConfiguration();\n       timelineReaderServer.init(conf);\n       timelineReaderServer.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n       ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n     }\n     return timelineReaderServer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static TimelineReaderServer startTimelineReaderServer(String[] args,\n      Configuration conf) {\n    Thread.setDefaultUncaughtExceptionHandler(\n        new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n        args, LOG);\n    TimelineReaderServer timelineReaderServer \u003d null;\n    try {\n      timelineReaderServer \u003d new TimelineReaderServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(timelineReaderServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      timelineReaderServer.init(conf);\n      timelineReaderServer.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n      ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n    }\n    return timelineReaderServer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
          "extendedDetails": {
            "oldValue": "[args-String[]]",
            "newValue": "[args-String[], conf-Configuration]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4356. Ensure the timeline service v.2 is disabled cleanly and has no\nimpact when it\u0027s turned off. Contributed by Sangjin Lee.\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "89e5c44f9e891a3579384c3fa3766937cd4970f1",
          "commitAuthor": "Li Lu",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "d95dc89a02d5915363153e0d9254f2cc0cf73ca0",
          "commitAuthorOld": "Vrushali Channapattan",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 13,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  static TimelineReaderServer startTimelineReaderServer(String[] args) {\n+  static TimelineReaderServer startTimelineReaderServer(String[] args,\n+      Configuration conf) {\n     Thread.setDefaultUncaughtExceptionHandler(\n         new YarnUncaughtExceptionHandler());\n     StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n         args, LOG);\n     TimelineReaderServer timelineReaderServer \u003d null;\n     try {\n       timelineReaderServer \u003d new TimelineReaderServer();\n       ShutdownHookManager.get().addShutdownHook(\n           new CompositeServiceShutdownHook(timelineReaderServer),\n           SHUTDOWN_HOOK_PRIORITY);\n-      YarnConfiguration conf \u003d new YarnConfiguration();\n       timelineReaderServer.init(conf);\n       timelineReaderServer.start();\n     } catch (Throwable t) {\n       LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n       ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n     }\n     return timelineReaderServer;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static TimelineReaderServer startTimelineReaderServer(String[] args,\n      Configuration conf) {\n    Thread.setDefaultUncaughtExceptionHandler(\n        new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n        args, LOG);\n    TimelineReaderServer timelineReaderServer \u003d null;\n    try {\n      timelineReaderServer \u003d new TimelineReaderServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(timelineReaderServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      timelineReaderServer.init(conf);\n      timelineReaderServer.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n      ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n    }\n    return timelineReaderServer;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java",
          "extendedDetails": {}
        }
      ]
    },
    "e27642abf4deb12c6e8c47ffc891b41300494307": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3047. [Data Serving] Set up ATS reader with basic request serving structure and lifecycle (Varun Saxena via sjlee)\n\n(cherry picked from commit 4c5f88fb0f04b7919738d07598b0f006a9ff91f2)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "e27642abf4deb12c6e8c47ffc891b41300494307",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,20 @@\n+  static TimelineReaderServer startTimelineReaderServer(String[] args) {\n+    Thread.setDefaultUncaughtExceptionHandler(\n+        new YarnUncaughtExceptionHandler());\n+    StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n+        args, LOG);\n+    TimelineReaderServer timelineReaderServer \u003d null;\n+    try {\n+      timelineReaderServer \u003d new TimelineReaderServer();\n+      ShutdownHookManager.get().addShutdownHook(\n+          new CompositeServiceShutdownHook(timelineReaderServer),\n+          SHUTDOWN_HOOK_PRIORITY);\n+      YarnConfiguration conf \u003d new YarnConfiguration();\n+      timelineReaderServer.init(conf);\n+      timelineReaderServer.start();\n+    } catch (Throwable t) {\n+      LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n+      ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n+    }\n+    return timelineReaderServer;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static TimelineReaderServer startTimelineReaderServer(String[] args) {\n    Thread.setDefaultUncaughtExceptionHandler(\n        new YarnUncaughtExceptionHandler());\n    StringUtils.startupShutdownMessage(TimelineReaderServer.class,\n        args, LOG);\n    TimelineReaderServer timelineReaderServer \u003d null;\n    try {\n      timelineReaderServer \u003d new TimelineReaderServer();\n      ShutdownHookManager.get().addShutdownHook(\n          new CompositeServiceShutdownHook(timelineReaderServer),\n          SHUTDOWN_HOOK_PRIORITY);\n      YarnConfiguration conf \u003d new YarnConfiguration();\n      timelineReaderServer.init(conf);\n      timelineReaderServer.start();\n    } catch (Throwable t) {\n      LOG.fatal(\"Error starting TimelineReaderWebServer\", t);\n      ExitUtil.terminate(-1, \"Error starting TimelineReaderWebServer\");\n    }\n    return timelineReaderServer;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/reader/TimelineReaderServer.java"
    }
  }
}