{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "NativeAzureFileSystem.java",
  "functionName": "setXAttr",
  "functionId": "setXAttr___path-Path__xAttrName-String__value-byte[]__flag-EnumSet__XAttrSetFlag__",
  "sourceFilePath": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java",
  "functionStartLine": 3577,
  "functionEndLine": 3601,
  "numCommitsSeen": 66,
  "timeTaken": 933,
  "changeHistory": [
    "c36f09deb91454c086926c01f872d8ca4419aee0"
  ],
  "changeHistoryShort": {
    "c36f09deb91454c086926c01f872d8ca4419aee0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c36f09deb91454c086926c01f872d8ca4419aee0": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16005. NativeAzureFileSystem does not support setXAttr.\n\nContributed by Clemens Wolff.\n",
      "commitDate": "14/01/20 5:28 PM",
      "commitName": "c36f09deb91454c086926c01f872d8ca4419aee0",
      "commitAuthor": "Clemens Wolff",
      "diff": "@@ -0,0 +1,25 @@\n+  public void setXAttr(Path path, String xAttrName, byte[] value, EnumSet\u003cXAttrSetFlag\u003e flag) throws IOException {\n+    Path absolutePath \u003d makeAbsolute(path);\n+    performAuthCheck(absolutePath, WasbAuthorizationOperations.WRITE, \"setXAttr\", absolutePath);\n+\n+    String key \u003d pathToKey(absolutePath);\n+    FileMetadata metadata;\n+    try {\n+      metadata \u003d store.retrieveMetadata(key);\n+    } catch (IOException ex) {\n+      Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n+      if (innerException instanceof StorageException\n+          \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n+        throw new FileNotFoundException(\"File \" + path + \" doesn\u0027t exists.\");\n+      }\n+      throw ex;\n+    }\n+\n+    if (metadata \u003d\u003d null) {\n+      throw new FileNotFoundException(\"File doesn\u0027t exist: \" + path);\n+    }\n+\n+    boolean xAttrExists \u003d store.retrieveAttribute(key, xAttrName) !\u003d null;\n+    XAttrSetFlag.validate(xAttrName, xAttrExists, flag);\n+    store.storeAttribute(key, xAttrName, value);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void setXAttr(Path path, String xAttrName, byte[] value, EnumSet\u003cXAttrSetFlag\u003e flag) throws IOException {\n    Path absolutePath \u003d makeAbsolute(path);\n    performAuthCheck(absolutePath, WasbAuthorizationOperations.WRITE, \"setXAttr\", absolutePath);\n\n    String key \u003d pathToKey(absolutePath);\n    FileMetadata metadata;\n    try {\n      metadata \u003d store.retrieveMetadata(key);\n    } catch (IOException ex) {\n      Throwable innerException \u003d NativeAzureFileSystemHelper.checkForAzureStorageException(ex);\n      if (innerException instanceof StorageException\n          \u0026\u0026 NativeAzureFileSystemHelper.isFileNotFoundException((StorageException) innerException)) {\n        throw new FileNotFoundException(\"File \" + path + \" doesn\u0027t exists.\");\n      }\n      throw ex;\n    }\n\n    if (metadata \u003d\u003d null) {\n      throw new FileNotFoundException(\"File doesn\u0027t exist: \" + path);\n    }\n\n    boolean xAttrExists \u003d store.retrieveAttribute(key, xAttrName) !\u003d null;\n    XAttrSetFlag.validate(xAttrName, xAttrExists, flag);\n    store.storeAttribute(key, xAttrName, value);\n  }",
      "path": "hadoop-tools/hadoop-azure/src/main/java/org/apache/hadoop/fs/azure/NativeAzureFileSystem.java"
    }
  }
}