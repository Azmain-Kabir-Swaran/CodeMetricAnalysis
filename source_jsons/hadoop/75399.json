{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HealthMonitor.java",
  "functionName": "enterState",
  "functionId": "enterState___newState-State",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
  "functionStartLine": 241,
  "functionEndLine": 251,
  "numCommitsSeen": 14,
  "timeTaken": 1027,
  "changeHistory": [
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92"
  ],
  "changeHistoryShort": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": "Ybodychange",
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92": "Yintroduced"
  },
  "changeHistoryDetails": {
    "f20dc0d5770d3876954faf0a6e8dcce6539ffc23": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10571. Use Log.*(Object, Throwable) overload to log exceptions.\nContributed by Andras Bokor.\n",
      "commitDate": "14/02/18 8:20 AM",
      "commitName": "f20dc0d5770d3876954faf0a6e8dcce6539ffc23",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 211.49,
      "commitsBetweenForRepo": 1578,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,11 @@\n   private synchronized void enterState(State newState) {\n     if (newState !\u003d state) {\n-      LOG.info(\"Entering state \" + newState);\n+      LOG.info(\"Entering state {}\", newState);\n       state \u003d newState;\n       synchronized (callbacks) {\n         for (Callback cb : callbacks) {\n           cb.enteredState(newState);\n         }\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void enterState(State newState) {\n    if (newState !\u003d state) {\n      LOG.info(\"Entering state {}\", newState);\n      state \u003d newState;\n      synchronized (callbacks) {\n        for (Callback cb : callbacks) {\n          cb.enteredState(newState);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java",
      "extendedDetails": {}
    },
    "19495b2f4b9e621279b5e78be6464c6bf8f7cc92": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7788. Add simple HealthMonitor class to watch an HAService. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1303208 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/03/12 4:29 PM",
      "commitName": "19495b2f4b9e621279b5e78be6464c6bf8f7cc92",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,11 @@\n+  private synchronized void enterState(State newState) {\n+    if (newState !\u003d state) {\n+      LOG.info(\"Entering state \" + newState);\n+      state \u003d newState;\n+      synchronized (callbacks) {\n+        for (Callback cb : callbacks) {\n+          cb.enteredState(newState);\n+        }\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private synchronized void enterState(State newState) {\n    if (newState !\u003d state) {\n      LOG.info(\"Entering state \" + newState);\n      state \u003d newState;\n      synchronized (callbacks) {\n        for (Callback cb : callbacks) {\n          cb.enteredState(newState);\n        }\n      }\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/HealthMonitor.java"
    }
  }
}