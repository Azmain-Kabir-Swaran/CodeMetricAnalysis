{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CBZip2OutputStream.java",
  "functionName": "sendMTFValues",
  "functionId": "sendMTFValues",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
  "functionStartLine": 949,
  "functionEndLine": 990,
  "numCommitsSeen": 7,
  "timeTaken": 1021,
  "changeHistory": [
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void sendMTFValues() throws IOException {\n    final byte[][] len \u003d this.data.sendMTFValues_len;\n    final int alphaSize \u003d this.nInUse + 2;\n\n    for (int t \u003d N_GROUPS; --t \u003e\u003d 0;) {\n      byte[] len_t \u003d len[t];\n      for (int v \u003d alphaSize; --v \u003e\u003d 0;) {\n        len_t[v] \u003d GREATER_ICOST;\n      }\n    }\n\n    /* Decide how many coding tables to use */\n    // assert (this.nMTF \u003e 0) : this.nMTF;\n    final int nGroups \u003d (this.nMTF \u003c 200) ? 2 : (this.nMTF \u003c 600) ? 3\n        : (this.nMTF \u003c 1200) ? 4 : (this.nMTF \u003c 2400) ? 5 : 6;\n\n    /* Generate an initial set of coding tables */\n    sendMTFValues0(nGroups, alphaSize);\n\n    /*\n    * Iterate up to N_ITERS times to improve the tables.\n    */\n    final int nSelectors \u003d sendMTFValues1(nGroups, alphaSize);\n\n    /* Compute MTF values for the selectors. */\n    sendMTFValues2(nGroups, nSelectors);\n\n    /* Assign actual codes for the tables. */\n    sendMTFValues3(nGroups, alphaSize);\n\n    /* Transmit the mapping table. */\n    sendMTFValues4();\n\n    /* Now the selectors. */\n    sendMTFValues5(nGroups, nSelectors);\n\n    /* Now the coding tables. */\n    sendMTFValues6(nGroups, alphaSize);\n\n    /* And finally, the block data proper */\n    sendMTFValues7(nSelectors);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void sendMTFValues() throws IOException {\n    final byte[][] len \u003d this.data.sendMTFValues_len;\n    final int alphaSize \u003d this.nInUse + 2;\n\n    for (int t \u003d N_GROUPS; --t \u003e\u003d 0;) {\n      byte[] len_t \u003d len[t];\n      for (int v \u003d alphaSize; --v \u003e\u003d 0;) {\n        len_t[v] \u003d GREATER_ICOST;\n      }\n    }\n\n    /* Decide how many coding tables to use */\n    // assert (this.nMTF \u003e 0) : this.nMTF;\n    final int nGroups \u003d (this.nMTF \u003c 200) ? 2 : (this.nMTF \u003c 600) ? 3\n        : (this.nMTF \u003c 1200) ? 4 : (this.nMTF \u003c 2400) ? 5 : 6;\n\n    /* Generate an initial set of coding tables */\n    sendMTFValues0(nGroups, alphaSize);\n\n    /*\n    * Iterate up to N_ITERS times to improve the tables.\n    */\n    final int nSelectors \u003d sendMTFValues1(nGroups, alphaSize);\n\n    /* Compute MTF values for the selectors. */\n    sendMTFValues2(nGroups, nSelectors);\n\n    /* Assign actual codes for the tables. */\n    sendMTFValues3(nGroups, alphaSize);\n\n    /* Transmit the mapping table. */\n    sendMTFValues4();\n\n    /* Now the selectors. */\n    sendMTFValues5(nGroups, nSelectors);\n\n    /* Now the coding tables. */\n    sendMTFValues6(nGroups, alphaSize);\n\n    /* And finally, the block data proper */\n    sendMTFValues7(nSelectors);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void sendMTFValues() throws IOException {\n    final byte[][] len \u003d this.data.sendMTFValues_len;\n    final int alphaSize \u003d this.nInUse + 2;\n\n    for (int t \u003d N_GROUPS; --t \u003e\u003d 0;) {\n      byte[] len_t \u003d len[t];\n      for (int v \u003d alphaSize; --v \u003e\u003d 0;) {\n        len_t[v] \u003d GREATER_ICOST;\n      }\n    }\n\n    /* Decide how many coding tables to use */\n    // assert (this.nMTF \u003e 0) : this.nMTF;\n    final int nGroups \u003d (this.nMTF \u003c 200) ? 2 : (this.nMTF \u003c 600) ? 3\n        : (this.nMTF \u003c 1200) ? 4 : (this.nMTF \u003c 2400) ? 5 : 6;\n\n    /* Generate an initial set of coding tables */\n    sendMTFValues0(nGroups, alphaSize);\n\n    /*\n    * Iterate up to N_ITERS times to improve the tables.\n    */\n    final int nSelectors \u003d sendMTFValues1(nGroups, alphaSize);\n\n    /* Compute MTF values for the selectors. */\n    sendMTFValues2(nGroups, nSelectors);\n\n    /* Assign actual codes for the tables. */\n    sendMTFValues3(nGroups, alphaSize);\n\n    /* Transmit the mapping table. */\n    sendMTFValues4();\n\n    /* Now the selectors. */\n    sendMTFValues5(nGroups, nSelectors);\n\n    /* Now the coding tables. */\n    sendMTFValues6(nGroups, alphaSize);\n\n    /* And finally, the block data proper */\n    sendMTFValues7(nSelectors);\n  }",
      "path": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java",
        "newPath": "common/src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,42 @@\n+  private void sendMTFValues() throws IOException {\n+    final byte[][] len \u003d this.data.sendMTFValues_len;\n+    final int alphaSize \u003d this.nInUse + 2;\n+\n+    for (int t \u003d N_GROUPS; --t \u003e\u003d 0;) {\n+      byte[] len_t \u003d len[t];\n+      for (int v \u003d alphaSize; --v \u003e\u003d 0;) {\n+        len_t[v] \u003d GREATER_ICOST;\n+      }\n+    }\n+\n+    /* Decide how many coding tables to use */\n+    // assert (this.nMTF \u003e 0) : this.nMTF;\n+    final int nGroups \u003d (this.nMTF \u003c 200) ? 2 : (this.nMTF \u003c 600) ? 3\n+        : (this.nMTF \u003c 1200) ? 4 : (this.nMTF \u003c 2400) ? 5 : 6;\n+\n+    /* Generate an initial set of coding tables */\n+    sendMTFValues0(nGroups, alphaSize);\n+\n+    /*\n+    * Iterate up to N_ITERS times to improve the tables.\n+    */\n+    final int nSelectors \u003d sendMTFValues1(nGroups, alphaSize);\n+\n+    /* Compute MTF values for the selectors. */\n+    sendMTFValues2(nGroups, nSelectors);\n+\n+    /* Assign actual codes for the tables. */\n+    sendMTFValues3(nGroups, alphaSize);\n+\n+    /* Transmit the mapping table. */\n+    sendMTFValues4();\n+\n+    /* Now the selectors. */\n+    sendMTFValues5(nGroups, nSelectors);\n+\n+    /* Now the coding tables. */\n+    sendMTFValues6(nGroups, alphaSize);\n+\n+    /* And finally, the block data proper */\n+    sendMTFValues7(nSelectors);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void sendMTFValues() throws IOException {\n    final byte[][] len \u003d this.data.sendMTFValues_len;\n    final int alphaSize \u003d this.nInUse + 2;\n\n    for (int t \u003d N_GROUPS; --t \u003e\u003d 0;) {\n      byte[] len_t \u003d len[t];\n      for (int v \u003d alphaSize; --v \u003e\u003d 0;) {\n        len_t[v] \u003d GREATER_ICOST;\n      }\n    }\n\n    /* Decide how many coding tables to use */\n    // assert (this.nMTF \u003e 0) : this.nMTF;\n    final int nGroups \u003d (this.nMTF \u003c 200) ? 2 : (this.nMTF \u003c 600) ? 3\n        : (this.nMTF \u003c 1200) ? 4 : (this.nMTF \u003c 2400) ? 5 : 6;\n\n    /* Generate an initial set of coding tables */\n    sendMTFValues0(nGroups, alphaSize);\n\n    /*\n    * Iterate up to N_ITERS times to improve the tables.\n    */\n    final int nSelectors \u003d sendMTFValues1(nGroups, alphaSize);\n\n    /* Compute MTF values for the selectors. */\n    sendMTFValues2(nGroups, nSelectors);\n\n    /* Assign actual codes for the tables. */\n    sendMTFValues3(nGroups, alphaSize);\n\n    /* Transmit the mapping table. */\n    sendMTFValues4();\n\n    /* Now the selectors. */\n    sendMTFValues5(nGroups, nSelectors);\n\n    /* Now the coding tables. */\n    sendMTFValues6(nGroups, alphaSize);\n\n    /* And finally, the block data proper */\n    sendMTFValues7(nSelectors);\n  }",
      "path": "src/java/org/apache/hadoop/io/compress/bzip2/CBZip2OutputStream.java"
    }
  }
}