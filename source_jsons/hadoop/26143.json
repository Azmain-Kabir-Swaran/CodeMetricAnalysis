{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AMWebServices.java",
  "functionName": "getTaskAttemptFromTaskAttemptString",
  "functionId": "getTaskAttemptFromTaskAttemptString___attId-String__task-Task",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
  "functionStartLine": 181,
  "functionEndLine": 210,
  "numCommitsSeen": 12,
  "timeTaken": 1091,
  "changeHistory": [
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "7a082ec2bd29d04abe0dc86349d163d6e03250eb",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0"
  ],
  "changeHistoryShort": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "7a082ec2bd29d04abe0dc86349d163d6e03250eb": "Ybodychange",
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "25/04/12 2:13 PM",
      "commitNameOld": "e7583d816a69677bbaa4280deb58ea73dbc42cef",
      "commitAuthorOld": "Thomas Graves",
      "daysBetweenCommits": 404.29,
      "commitsBetweenForRepo": 2282,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n       throws NotFoundException {\n     TaskAttemptId attemptId;\n     TaskAttempt ta;\n     try {\n       attemptId \u003d MRApps.toTaskAttemptID(attId);\n-    } catch (YarnException e) {\n-      // TODO: after MAPREDUCE-2793 YarnException is probably not expected here\n+    } catch (YarnRuntimeException e) {\n+      // TODO: after MAPREDUCE-2793 YarnRuntimeException is probably not expected here\n       // anymore but keeping it for now just in case other stuff starts failing.\n       // Also, the webservice should ideally return BadRequest (HTTP:400) when\n       // the id is malformed instead of NotFound (HTTP:404). The webserver on\n       // top of which AMWebServices is built seems to automatically do that for\n       // unhandled exceptions\n       throw new NotFoundException(e.getMessage());\n     } catch (NumberFormatException ne) {\n       throw new NotFoundException(ne.getMessage());\n     } catch (IllegalArgumentException e) {\n       throw new NotFoundException(e.getMessage());\n     }\n     if (attemptId \u003d\u003d null) {\n       throw new NotFoundException(\"task attempt id \" + attId\n           + \" not found or invalid\");\n     }\n     ta \u003d task.getAttempt(attemptId);\n     if (ta \u003d\u003d null) {\n       throw new NotFoundException(\"Error getting info on task attempt id \"\n           + attId);\n     }\n     return ta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n      throws NotFoundException {\n    TaskAttemptId attemptId;\n    TaskAttempt ta;\n    try {\n      attemptId \u003d MRApps.toTaskAttemptID(attId);\n    } catch (YarnRuntimeException e) {\n      // TODO: after MAPREDUCE-2793 YarnRuntimeException is probably not expected here\n      // anymore but keeping it for now just in case other stuff starts failing.\n      // Also, the webservice should ideally return BadRequest (HTTP:400) when\n      // the id is malformed instead of NotFound (HTTP:404). The webserver on\n      // top of which AMWebServices is built seems to automatically do that for\n      // unhandled exceptions\n      throw new NotFoundException(e.getMessage());\n    } catch (NumberFormatException ne) {\n      throw new NotFoundException(ne.getMessage());\n    } catch (IllegalArgumentException e) {\n      throw new NotFoundException(e.getMessage());\n    }\n    if (attemptId \u003d\u003d null) {\n      throw new NotFoundException(\"task attempt id \" + attId\n          + \" not found or invalid\");\n    }\n    ta \u003d task.getAttempt(attemptId);\n    if (ta \u003d\u003d null) {\n      throw new NotFoundException(\"Error getting info on task attempt id \"\n          + attId);\n    }\n    return ta;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
      "extendedDetails": {}
    },
    "7a082ec2bd29d04abe0dc86349d163d6e03250eb": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2793. Corrected AppIDs, JobIDs, TaskAttemptIDs to be of correct format on the web pages. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1293517 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/02/12 6:03 PM",
      "commitName": "7a082ec2bd29d04abe0dc86349d163d6e03250eb",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "10/01/12 2:26 PM",
      "commitNameOld": "bc374626bebef8297c7fd03ceaa27932baf6a523",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 45.15,
      "commitsBetweenForRepo": 288,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,30 @@\n   public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n       throws NotFoundException {\n     TaskAttemptId attemptId;\n     TaskAttempt ta;\n     try {\n       attemptId \u003d MRApps.toTaskAttemptID(attId);\n     } catch (YarnException e) {\n+      // TODO: after MAPREDUCE-2793 YarnException is probably not expected here\n+      // anymore but keeping it for now just in case other stuff starts failing.\n+      // Also, the webservice should ideally return BadRequest (HTTP:400) when\n+      // the id is malformed instead of NotFound (HTTP:404). The webserver on\n+      // top of which AMWebServices is built seems to automatically do that for\n+      // unhandled exceptions\n       throw new NotFoundException(e.getMessage());\n     } catch (NumberFormatException ne) {\n       throw new NotFoundException(ne.getMessage());\n+    } catch (IllegalArgumentException e) {\n+      throw new NotFoundException(e.getMessage());\n     }\n     if (attemptId \u003d\u003d null) {\n       throw new NotFoundException(\"task attempt id \" + attId\n           + \" not found or invalid\");\n     }\n     ta \u003d task.getAttempt(attemptId);\n     if (ta \u003d\u003d null) {\n       throw new NotFoundException(\"Error getting info on task attempt id \"\n           + attId);\n     }\n     return ta;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n      throws NotFoundException {\n    TaskAttemptId attemptId;\n    TaskAttempt ta;\n    try {\n      attemptId \u003d MRApps.toTaskAttemptID(attId);\n    } catch (YarnException e) {\n      // TODO: after MAPREDUCE-2793 YarnException is probably not expected here\n      // anymore but keeping it for now just in case other stuff starts failing.\n      // Also, the webservice should ideally return BadRequest (HTTP:400) when\n      // the id is malformed instead of NotFound (HTTP:404). The webserver on\n      // top of which AMWebServices is built seems to automatically do that for\n      // unhandled exceptions\n      throw new NotFoundException(e.getMessage());\n    } catch (NumberFormatException ne) {\n      throw new NotFoundException(ne.getMessage());\n    } catch (IllegalArgumentException e) {\n      throw new NotFoundException(e.getMessage());\n    }\n    if (attemptId \u003d\u003d null) {\n      throw new NotFoundException(\"task attempt id \" + attId\n          + \" not found or invalid\");\n    }\n    ta \u003d task.getAttempt(attemptId);\n    if (ta \u003d\u003d null) {\n      throw new NotFoundException(\"Error getting info on task attempt id \"\n          + attId);\n    }\n    return ta;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java",
      "extendedDetails": {}
    },
    "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3548. Added more unit tests for MR AM \u0026 JHS web-services. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227801 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 12:01 PM",
      "commitName": "7440a8aa374a3a1d4eb2b6dd8d4db184bff5ade0",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,22 @@\n+  public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n+      throws NotFoundException {\n+    TaskAttemptId attemptId;\n+    TaskAttempt ta;\n+    try {\n+      attemptId \u003d MRApps.toTaskAttemptID(attId);\n+    } catch (YarnException e) {\n+      throw new NotFoundException(e.getMessage());\n+    } catch (NumberFormatException ne) {\n+      throw new NotFoundException(ne.getMessage());\n+    }\n+    if (attemptId \u003d\u003d null) {\n+      throw new NotFoundException(\"task attempt id \" + attId\n+          + \" not found or invalid\");\n+    }\n+    ta \u003d task.getAttempt(attemptId);\n+    if (ta \u003d\u003d null) {\n+      throw new NotFoundException(\"Error getting info on task attempt id \"\n+          + attId);\n+    }\n+    return ta;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static TaskAttempt getTaskAttemptFromTaskAttemptString(String attId, Task task)\n      throws NotFoundException {\n    TaskAttemptId attemptId;\n    TaskAttempt ta;\n    try {\n      attemptId \u003d MRApps.toTaskAttemptID(attId);\n    } catch (YarnException e) {\n      throw new NotFoundException(e.getMessage());\n    } catch (NumberFormatException ne) {\n      throw new NotFoundException(ne.getMessage());\n    }\n    if (attemptId \u003d\u003d null) {\n      throw new NotFoundException(\"task attempt id \" + attId\n          + \" not found or invalid\");\n    }\n    ta \u003d task.getAttempt(attemptId);\n    if (ta \u003d\u003d null) {\n      throw new NotFoundException(\"Error getting info on task attempt id \"\n          + attId);\n    }\n    return ta;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/webapp/AMWebServices.java"
    }
  }
}