{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileUtil.java",
  "functionName": "getJarsInDirectory",
  "functionId": "getJarsInDirectory___path-String__useLocal-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java",
  "functionStartLine": 1582,
  "functionEndLine": 1601,
  "numCommitsSeen": 52,
  "timeTaken": 1177,
  "changeHistory": [
    "0ad48aa2c8f41196743305c711ea19cc48f186da"
  ],
  "changeHistoryShort": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ad48aa2c8f41196743305c711ea19cc48f186da": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12747. support wildcard in libjars argument (sjlee)\n",
      "commitDate": "08/08/16 5:34 PM",
      "commitName": "0ad48aa2c8f41196743305c711ea19cc48f186da",
      "commitAuthor": "Sangjin Lee",
      "diff": "@@ -0,0 +1,20 @@\n+  public static List\u003cPath\u003e getJarsInDirectory(String path, boolean useLocal) {\n+    List\u003cPath\u003e paths \u003d new ArrayList\u003c\u003e();\n+    try {\n+      // add the wildcard if it is not provided\n+      if (!path.endsWith(\"*\")) {\n+        path +\u003d File.separator + \"*\";\n+      }\n+      Path globPath \u003d new Path(path).suffix(\"{.jar,.JAR}\");\n+      FileContext context \u003d useLocal ?\n+          FileContext.getLocalFSFileContext() :\n+          FileContext.getFileContext(globPath.toUri());\n+      FileStatus[] files \u003d context.util().globStatus(globPath);\n+      if (files !\u003d null) {\n+        for (FileStatus file: files) {\n+          paths.add(file.getPath());\n+        }\n+      }\n+    } catch (IOException ignore) {} // return the empty list\n+    return paths;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static List\u003cPath\u003e getJarsInDirectory(String path, boolean useLocal) {\n    List\u003cPath\u003e paths \u003d new ArrayList\u003c\u003e();\n    try {\n      // add the wildcard if it is not provided\n      if (!path.endsWith(\"*\")) {\n        path +\u003d File.separator + \"*\";\n      }\n      Path globPath \u003d new Path(path).suffix(\"{.jar,.JAR}\");\n      FileContext context \u003d useLocal ?\n          FileContext.getLocalFSFileContext() :\n          FileContext.getFileContext(globPath.toUri());\n      FileStatus[] files \u003d context.util().globStatus(globPath);\n      if (files !\u003d null) {\n        for (FileStatus file: files) {\n          paths.add(file.getPath());\n        }\n      }\n    } catch (IOException ignore) {} // return the empty list\n    return paths;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/FileUtil.java"
    }
  }
}