{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKFailoverController.java",
  "functionName": "enteredState",
  "functionId": "enteredState___newState-HealthMonitor.State",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
  "functionStartLine": 968,
  "functionEndLine": 971,
  "numCommitsSeen": 35,
  "timeTaken": 1115,
  "changeHistory": [
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5",
    "9d5799553fea81920edfab611e5d485a97841848",
    "578f413778a6f005a35d18d7f015df128aeded5b"
  ],
  "changeHistoryShort": {
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5": "Ybodychange",
    "9d5799553fea81920edfab611e5d485a97841848": "Ybodychange",
    "578f413778a6f005a35d18d7f015df128aeded5b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3412. Fix findbugs warnings in auto-HA branch. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1338817 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/05/12 11:16 AM",
      "commitName": "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "02/05/12 6:56 PM",
      "commitNameOld": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 12.68,
      "commitsBetweenForRepo": 72,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,4 @@\n     public void enteredState(HealthMonitor.State newState) {\n-      LOG.info(\"Local service \" + localTarget +\n-          \" entered state: \" + newState);\n-      lastHealthState \u003d newState;\n+      setLastHealthState(newState);\n       recheckElectability();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void enteredState(HealthMonitor.State newState) {\n      setLastHealthState(newState);\n      recheckElectability();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "9d5799553fea81920edfab611e5d485a97841848": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8279. Allow manual failover to be invoked when auto-failover is enabled. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1333288 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/05/12 6:56 PM",
      "commitName": "9d5799553fea81920edfab611e5d485a97841848",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "24/04/12 12:34 PM",
      "commitNameOld": "c6e132124591362657e6f1722acca376747ea254",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 8.27,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,6 @@\n     public void enteredState(HealthMonitor.State newState) {\n       LOG.info(\"Local service \" + localTarget +\n           \" entered state: \" + newState);\n-      switch (newState) {\n-      case SERVICE_HEALTHY:\n-        LOG.info(\"Joining master election for \" + localTarget);\n-        elector.joinElection(targetToData(localTarget));\n-        break;\n-        \n-      case INITIALIZING:\n-        LOG.info(\"Ensuring that \" + localTarget + \" does not \" +\n-            \"participate in active master election\");\n-        elector.quitElection(false);\n-        break;\n-\n-      case SERVICE_UNHEALTHY:\n-      case SERVICE_NOT_RESPONDING:\n-        LOG.info(\"Quitting master election for \" + localTarget +\n-            \" and marking that fencing is necessary\");\n-        elector.quitElection(true);\n-        break;\n-        \n-      case HEALTH_MONITOR_FAILED:\n-        fatalError(\"Health monitor failed!\");\n-        break;\n-        \n-      default:\n-        throw new IllegalArgumentException(\"Unhandled state:\" + newState);\n-      }\n-      \n       lastHealthState \u003d newState;\n+      recheckElectability();\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void enteredState(HealthMonitor.State newState) {\n      LOG.info(\"Local service \" + localTarget +\n          \" entered state: \" + newState);\n      lastHealthState \u003d newState;\n      recheckElectability();\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "578f413778a6f005a35d18d7f015df128aeded5b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 4:37 PM",
      "commitName": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,32 @@\n+    public void enteredState(HealthMonitor.State newState) {\n+      LOG.info(\"Local service \" + localTarget +\n+          \" entered state: \" + newState);\n+      switch (newState) {\n+      case SERVICE_HEALTHY:\n+        LOG.info(\"Joining master election for \" + localTarget);\n+        elector.joinElection(targetToData(localTarget));\n+        break;\n+        \n+      case INITIALIZING:\n+        LOG.info(\"Ensuring that \" + localTarget + \" does not \" +\n+            \"participate in active master election\");\n+        elector.quitElection(false);\n+        break;\n+\n+      case SERVICE_UNHEALTHY:\n+      case SERVICE_NOT_RESPONDING:\n+        LOG.info(\"Quitting master election for \" + localTarget +\n+            \" and marking that fencing is necessary\");\n+        elector.quitElection(true);\n+        break;\n+        \n+      case HEALTH_MONITOR_FAILED:\n+        fatalError(\"Health monitor failed!\");\n+        break;\n+        \n+      default:\n+        throw new IllegalArgumentException(\"Unhandled state:\" + newState);\n+      }\n+      \n+      lastHealthState \u003d newState;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void enteredState(HealthMonitor.State newState) {\n      LOG.info(\"Local service \" + localTarget +\n          \" entered state: \" + newState);\n      switch (newState) {\n      case SERVICE_HEALTHY:\n        LOG.info(\"Joining master election for \" + localTarget);\n        elector.joinElection(targetToData(localTarget));\n        break;\n        \n      case INITIALIZING:\n        LOG.info(\"Ensuring that \" + localTarget + \" does not \" +\n            \"participate in active master election\");\n        elector.quitElection(false);\n        break;\n\n      case SERVICE_UNHEALTHY:\n      case SERVICE_NOT_RESPONDING:\n        LOG.info(\"Quitting master election for \" + localTarget +\n            \" and marking that fencing is necessary\");\n        elector.quitElection(true);\n        break;\n        \n      case HEALTH_MONITOR_FAILED:\n        fatalError(\"Health monitor failed!\");\n        break;\n        \n      default:\n        throw new IllegalArgumentException(\"Unhandled state:\" + newState);\n      }\n      \n      lastHealthState \u003d newState;\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java"
    }
  }
}