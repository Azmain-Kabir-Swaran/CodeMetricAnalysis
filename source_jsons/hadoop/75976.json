{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZlibDecompressor.java",
  "functionName": "decompress",
  "functionId": "decompress___b-byte[]__off-int__len-int",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
  "functionStartLine": 201,
  "functionEndLine": 233,
  "numCommitsSeen": 13,
  "timeTaken": 1206,
  "changeHistory": [
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb",
    "d9ba056bdb851138d0d25185d45c9f894080de24",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "2a248dfc32e5061c1f80295f448ca525ade764c6",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb": "Ymodifierchange",
    "d9ba056bdb851138d0d25185d45c9f894080de24": "Ymultichange(Yexceptionschange,Ybodychange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "2a248dfc32e5061c1f80295f448ca525ade764c6": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-10681. Remove unnecessary synchronization from Snappy \u0026 Zlib codecs. Contributed by Gopal Vijayaraghavan.\n",
      "commitDate": "05/10/14 7:38 AM",
      "commitName": "8f9ab998e273259c1e7a3ed53ba37d767e02b6bb",
      "commitAuthor": "Arun C. Murthy",
      "commitDateOld": "19/11/13 11:29 AM",
      "commitNameOld": "d9ba056bdb851138d0d25185d45c9f894080de24",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 319.8,
      "commitsBetweenForRepo": 2444,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n-    public synchronized int decompress(byte[] b, int off, int len) {\n+    public int decompress(byte[] b, int off, int len) {\n       throw new UnsupportedOperationException(\n           \"byte[] arrays are not supported for DirectDecompressor\");\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[public]"
      }
    },
    "d9ba056bdb851138d0d25185d45c9f894080de24": {
      "type": "Ymultichange(Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/11/13 11:29 AM",
      "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
      "commitAuthor": "Arun Murthy",
      "subchanges": [
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/11/13 11:29 AM",
          "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "19/11/13 11:25 AM",
          "commitNameOld": "a6acf72aaa072d61cb3dc3c336f82a677ecf3f93",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-  public synchronized int decompress(byte[] b, int off, int len) \n-    throws IOException {\n-    if (b \u003d\u003d null) {\n-      throw new NullPointerException();\n-    }\n-    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n-      throw new ArrayIndexOutOfBoundsException();\n-    }\n-    \n-    int n \u003d 0;\n-    \n-    // Check if there is uncompressed data\n-    n \u003d uncompressedDirectBuf.remaining();\n-    if (n \u003e 0) {\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n-      return n;\n-    }\n-    \n-    // Re-initialize the zlib\u0027s output direct buffer\n-    uncompressedDirectBuf.rewind();\n-    uncompressedDirectBuf.limit(directBufferSize);\n-\n-    // Decompress data\n-    n \u003d inflateBytesDirect();\n-    uncompressedDirectBuf.limit(n);\n-\n-    // Get at most \u0027len\u0027 bytes\n-    n \u003d Math.min(n, len);\n-    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n-\n-    return n;\n-  }\n\\ No newline at end of file\n+    public synchronized int decompress(byte[] b, int off, int len) {\n+      throw new UnsupportedOperationException(\n+          \"byte[] arrays are not supported for DirectDecompressor\");\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-10047. Add a direct-buffer based apis for compression. Contributed by Gopal V.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1543542 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "19/11/13 11:29 AM",
          "commitName": "d9ba056bdb851138d0d25185d45c9f894080de24",
          "commitAuthor": "Arun Murthy",
          "commitDateOld": "19/11/13 11:25 AM",
          "commitNameOld": "a6acf72aaa072d61cb3dc3c336f82a677ecf3f93",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,33 +1,4 @@\n-  public synchronized int decompress(byte[] b, int off, int len) \n-    throws IOException {\n-    if (b \u003d\u003d null) {\n-      throw new NullPointerException();\n-    }\n-    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n-      throw new ArrayIndexOutOfBoundsException();\n-    }\n-    \n-    int n \u003d 0;\n-    \n-    // Check if there is uncompressed data\n-    n \u003d uncompressedDirectBuf.remaining();\n-    if (n \u003e 0) {\n-      n \u003d Math.min(n, len);\n-      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n-      return n;\n-    }\n-    \n-    // Re-initialize the zlib\u0027s output direct buffer\n-    uncompressedDirectBuf.rewind();\n-    uncompressedDirectBuf.limit(directBufferSize);\n-\n-    // Decompress data\n-    n \u003d inflateBytesDirect();\n-    uncompressedDirectBuf.limit(n);\n-\n-    // Get at most \u0027len\u0027 bytes\n-    n \u003d Math.min(n, len);\n-    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n-\n-    return n;\n-  }\n\\ No newline at end of file\n+    public synchronized int decompress(byte[] b, int off, int len) {\n+      throw new UnsupportedOperationException(\n+          \"byte[] arrays are not supported for DirectDecompressor\");\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public synchronized int decompress(byte[] b, int off, int len) {\n      throw new UnsupportedOperationException(\n          \"byte[] arrays are not supported for DirectDecompressor\");\n    }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
          "extendedDetails": {}
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len) \n    throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    \n    int n \u003d 0;\n    \n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    \n    // Re-initialize the zlib\u0027s output direct buffer\n    uncompressedDirectBuf.rewind();\n    uncompressedDirectBuf.limit(directBufferSize);\n\n    // Decompress data\n    n \u003d inflateBytesDirect();\n    uncompressedDirectBuf.limit(n);\n\n    // Get at most \u0027len\u0027 bytes\n    n \u003d Math.min(n, len);\n    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n\n    return n;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len) \n    throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    \n    int n \u003d 0;\n    \n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    \n    // Re-initialize the zlib\u0027s output direct buffer\n    uncompressedDirectBuf.rewind();\n    uncompressedDirectBuf.limit(directBufferSize);\n\n    // Decompress data\n    n \u003d inflateBytesDirect();\n    uncompressedDirectBuf.limit(n);\n\n    // Get at most \u0027len\u0027 bytes\n    n \u003d Math.min(n, len);\n    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n\n    return n;\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len) \n    throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    \n    int n \u003d 0;\n    \n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    \n    // Re-initialize the zlib\u0027s output direct buffer\n    uncompressedDirectBuf.rewind();\n    uncompressedDirectBuf.limit(directBufferSize);\n\n    // Decompress data\n    n \u003d inflateBytesDirect();\n    uncompressedDirectBuf.limit(n);\n\n    // Get at most \u0027len\u0027 bytes\n    n \u003d Math.min(n, len);\n    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n\n    return n;\n  }",
      "path": "common/src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
        "newPath": "common/src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java"
      }
    },
    "2a248dfc32e5061c1f80295f448ca525ade764c6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6835. Add support for concatenated gzip input. Contributed by Greg Roelofs\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@961532 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/07/10 4:22 PM",
      "commitName": "2a248dfc32e5061c1f80295f448ca525ade764c6",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 414.79,
      "commitsBetweenForRepo": 389,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public synchronized int decompress(byte[] b, int off, int len) \n     throws IOException {\n     if (b \u003d\u003d null) {\n       throw new NullPointerException();\n     }\n     if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n       throw new ArrayIndexOutOfBoundsException();\n     }\n     \n     int n \u003d 0;\n     \n     // Check if there is uncompressed data\n     n \u003d uncompressedDirectBuf.remaining();\n     if (n \u003e 0) {\n       n \u003d Math.min(n, len);\n       ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n       return n;\n     }\n     \n     // Re-initialize the zlib\u0027s output direct buffer\n     uncompressedDirectBuf.rewind();\n     uncompressedDirectBuf.limit(directBufferSize);\n \n     // Decompress data\n     n \u003d inflateBytesDirect();\n     uncompressedDirectBuf.limit(n);\n \n-    // Get atmost \u0027len\u0027 bytes\n+    // Get at most \u0027len\u0027 bytes\n     n \u003d Math.min(n, len);\n     ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n \n     return n;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len) \n    throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    \n    int n \u003d 0;\n    \n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    \n    // Re-initialize the zlib\u0027s output direct buffer\n    uncompressedDirectBuf.rewind();\n    uncompressedDirectBuf.limit(directBufferSize);\n\n    // Decompress data\n    n \u003d inflateBytesDirect();\n    uncompressedDirectBuf.limit(n);\n\n    // Get at most \u0027len\u0027 bytes\n    n \u003d Math.min(n, len);\n    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n\n    return n;\n  }",
      "path": "src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,33 @@\n+  public synchronized int decompress(byte[] b, int off, int len) \n+    throws IOException {\n+    if (b \u003d\u003d null) {\n+      throw new NullPointerException();\n+    }\n+    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n+      throw new ArrayIndexOutOfBoundsException();\n+    }\n+    \n+    int n \u003d 0;\n+    \n+    // Check if there is uncompressed data\n+    n \u003d uncompressedDirectBuf.remaining();\n+    if (n \u003e 0) {\n+      n \u003d Math.min(n, len);\n+      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n+      return n;\n+    }\n+    \n+    // Re-initialize the zlib\u0027s output direct buffer\n+    uncompressedDirectBuf.rewind();\n+    uncompressedDirectBuf.limit(directBufferSize);\n+\n+    // Decompress data\n+    n \u003d inflateBytesDirect();\n+    uncompressedDirectBuf.limit(n);\n+\n+    // Get atmost \u0027len\u0027 bytes\n+    n \u003d Math.min(n, len);\n+    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n+\n+    return n;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized int decompress(byte[] b, int off, int len) \n    throws IOException {\n    if (b \u003d\u003d null) {\n      throw new NullPointerException();\n    }\n    if (off \u003c 0 || len \u003c 0 || off \u003e b.length - len) {\n      throw new ArrayIndexOutOfBoundsException();\n    }\n    \n    int n \u003d 0;\n    \n    // Check if there is uncompressed data\n    n \u003d uncompressedDirectBuf.remaining();\n    if (n \u003e 0) {\n      n \u003d Math.min(n, len);\n      ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n      return n;\n    }\n    \n    // Re-initialize the zlib\u0027s output direct buffer\n    uncompressedDirectBuf.rewind();\n    uncompressedDirectBuf.limit(directBufferSize);\n\n    // Decompress data\n    n \u003d inflateBytesDirect();\n    uncompressedDirectBuf.limit(n);\n\n    // Get atmost \u0027len\u0027 bytes\n    n \u003d Math.min(n, len);\n    ((ByteBuffer)uncompressedDirectBuf).get(b, off, n);\n\n    return n;\n  }",
      "path": "src/java/org/apache/hadoop/io/compress/zlib/ZlibDecompressor.java"
    }
  }
}