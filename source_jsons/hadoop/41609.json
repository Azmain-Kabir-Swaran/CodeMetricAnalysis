{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "hasAccess",
  "functionId": "hasAccess___acl-QueueACL__user-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 317,
  "functionEndLine": 322,
  "numCommitsSeen": 61,
  "timeTaken": 2478,
  "changeHistory": [
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
    "dc523bd18247df232fe814aed7062a116242ab04",
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
    "65bda6d168e47106f5542e15bb7b21522478626e",
    "19a291a0d65b64e50571c3519414b9d54acbe28a",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21"
  ],
  "changeHistoryShort": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": "Ybodychange",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": "Ybodychange",
    "dc523bd18247df232fe814aed7062a116242ab04": "Ybodychange",
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf": "Ybodychange",
    "65bda6d168e47106f5542e15bb7b21522478626e": "Ybodychange",
    "19a291a0d65b64e50571c3519414b9d54acbe28a": "Ymultichange(Ymovefromfile,Ybodychange)",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b3befc021b0e2d63d1a3710ea450797d1129f1f5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4997. Update fair scheduler to use pluggable auth provider (Contributed by Tao Jie via Daniel Templeton)\n",
      "commitDate": "30/11/16 9:50 AM",
      "commitName": "b3befc021b0e2d63d1a3710ea450797d1129f1f5",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "29/11/16 12:46 PM",
      "commitNameOld": "3b9d3acd203cef4d861c5182fc4dccc55128d347",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 0.88,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,6 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n-    return scheduler.getAllocationConfiguration().hasAccess(name, acl, user);\n+    return authorizer.checkPermission(\n+        new AccessRequest(queueEntity, user,\n+            SchedulerUtils.toAccessType(acl), null, null,\n+            Server.getRemoteAddress(), null));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    return authorizer.checkPermission(\n        new AccessRequest(queueEntity, user,\n            SchedulerUtils.toAccessType(acl), null, null,\n            Server.getRemoteAddress(), null));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 7:26 PM",
      "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "29/11/13 11:02 AM",
      "commitNameOld": "7545d8bf996e5d060d5d613bf769ec52a62d428b",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,3 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n-    // Check if the leaf-queue allows access\n-    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n-      return true;\n-    }\n-\n-    // Check if parent-queue allows access\n-    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n+    return scheduler.getAllocationConfiguration().hasAccess(name, acl, user);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    return scheduler.getAllocationConfiguration().hasAccess(name, acl, user);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "dc523bd18247df232fe814aed7062a116242ab04": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1288. Make Fair Scheduler ACLs more user friendly (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534315 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:45 AM",
      "commitName": "dc523bd18247df232fe814aed7062a116242ab04",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "21/10/13 11:37 AM",
      "commitNameOld": "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n     // Check if the leaf-queue allows access\n-    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n+    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n       return true;\n     }\n \n     // Check if parent-queue allows access\n     return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    // Check if the leaf-queue allows access\n    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n      return true;\n    }\n\n    // Check if parent-queue allows access\n    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf": {
      "type": "Ybodychange",
      "commitMessage": "Reverting \"YARN-1258: Move to 2.2.1 in CHANGES.txt\" because it contained unintended changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534308 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:37 AM",
      "commitName": "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "21/10/13 11:31 AM",
      "commitNameOld": "65bda6d168e47106f5542e15bb7b21522478626e",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n     // Check if the leaf-queue allows access\n-    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n+    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n       return true;\n     }\n \n     // Check if parent-queue allows access\n     return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    // Check if the leaf-queue allows access\n    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n      return true;\n    }\n\n    // Check if parent-queue allows access\n    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "65bda6d168e47106f5542e15bb7b21522478626e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1258: Move to 2.2.1 in CHANGES.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534307 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:31 AM",
      "commitName": "65bda6d168e47106f5542e15bb7b21522478626e",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "28/06/13 11:59 AM",
      "commitNameOld": "c221204ccaadcf70992d9e858ef71c6f8864ff4e",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 114.98,
      "commitsBetweenForRepo": 678,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n     // Check if the leaf-queue allows access\n-    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n+    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n       return true;\n     }\n \n     // Check if parent-queue allows access\n     return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    // Check if the leaf-queue allows access\n    if (queueMgr.getQueueAcl(getName(), acl).isUserAllowed(user)) {\n      return true;\n    }\n\n    // Check if parent-queue allows access\n    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "19a291a0d65b64e50571c3519414b9d54acbe28a": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange)",
      "commitMessage": "YARN-288. Fair scheduler queue doesn\u0027t accept any jobs when ACLs are configured. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428362 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/01/13 6:32 AM",
      "commitName": "19a291a0d65b64e50571c3519414b9d54acbe28a",
      "commitAuthor": "Thomas White",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-288. Fair scheduler queue doesn\u0027t accept any jobs when ACLs are configured. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428362 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/01/13 6:32 AM",
          "commitName": "19a291a0d65b64e50571c3519414b9d54acbe28a",
          "commitAuthor": "Thomas White",
          "commitDateOld": "03/01/13 4:29 AM",
          "commitNameOld": "ba90c9c867151ef484a091dfb1b66e147ad1f100",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n-    synchronized (this) {\n-      if (getQueueAcls().get(acl).isUserAllowed(user)) {\n-        return true;\n-      }\n+    // Check if the leaf-queue allows access\n+    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n+      return true;\n     }\n-    \n-    if (parent !\u003d null) {\n-      return parent.hasAccess(acl, user);\n-    }\n-    \n-    return false;\n+\n+    // Check if parent-queue allows access\n+    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    // Check if the leaf-queue allows access\n    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n      return true;\n    }\n\n    // Check if parent-queue allows access\n    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
            "oldMethodName": "hasAccess",
            "newMethodName": "hasAccess"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-288. Fair scheduler queue doesn\u0027t accept any jobs when ACLs are configured. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1428362 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/01/13 6:32 AM",
          "commitName": "19a291a0d65b64e50571c3519414b9d54acbe28a",
          "commitAuthor": "Thomas White",
          "commitDateOld": "03/01/13 4:29 AM",
          "commitNameOld": "ba90c9c867151ef484a091dfb1b66e147ad1f100",
          "commitAuthorOld": "Thomas White",
          "daysBetweenCommits": 0.09,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,13 +1,9 @@\n   public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n-    synchronized (this) {\n-      if (getQueueAcls().get(acl).isUserAllowed(user)) {\n-        return true;\n-      }\n+    // Check if the leaf-queue allows access\n+    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n+      return true;\n     }\n-    \n-    if (parent !\u003d null) {\n-      return parent.hasAccess(acl, user);\n-    }\n-    \n-    return false;\n+\n+    // Check if parent-queue allows access\n+    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    // Check if the leaf-queue allows access\n    if (queueMgr.getQueueAcls(getName()).get(acl).isUserAllowed(user)) {\n      return true;\n    }\n\n    // Check if parent-queue allows access\n    return parent !\u003d null \u0026\u0026 parent.hasAccess(acl, user);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
          "extendedDetails": {}
        }
      ]
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Yintroduced",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "diff": "@@ -0,0 +1,13 @@\n+  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n+    synchronized (this) {\n+      if (getQueueAcls().get(acl).isUserAllowed(user)) {\n+        return true;\n+      }\n+    }\n+    \n+    if (parent !\u003d null) {\n+      return parent.hasAccess(acl, user);\n+    }\n+    \n+    return false;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean hasAccess(QueueACL acl, UserGroupInformation user) {\n    synchronized (this) {\n      if (getQueueAcls().get(acl).isUserAllowed(user)) {\n        return true;\n      }\n    }\n    \n    if (parent !\u003d null) {\n      return parent.hasAccess(acl, user);\n    }\n    \n    return false;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSParentQueue.java"
    }
  }
}