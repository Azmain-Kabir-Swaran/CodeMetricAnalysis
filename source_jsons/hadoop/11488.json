{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsVolumeList.java",
  "functionName": "removeVolume",
  "functionId": "removeVolume___storageLocation-StorageLocation__clearFailure-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
  "functionStartLine": 339,
  "functionEndLine": 349,
  "numCommitsSeen": 119,
  "timeTaken": 5389,
  "changeHistory": [
    "96b12662ea76e3ded4ef13944fc8df206cfb4613",
    "533a2be5ac7c7f0473fdd24d6201582d08964e21",
    "b49c3a1813aa8c5b05fe6c02a653286c573137ca",
    "9729b244de50322c2cc889c97c2ffb2b4675cf77",
    "a17584936cc5141e3f5612ac3ecf35e27968e439",
    "3b173d95171d01ab55042b1162569d1cf14a8d43",
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe"
  ],
  "changeHistoryShort": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": "Ymultichange(Yparameterchange,Ybodychange)",
    "533a2be5ac7c7f0473fdd24d6201582d08964e21": "Ybodychange",
    "b49c3a1813aa8c5b05fe6c02a653286c573137ca": "Ymultichange(Yparameterchange,Ybodychange)",
    "9729b244de50322c2cc889c97c2ffb2b4675cf77": "Ybodychange",
    "a17584936cc5141e3f5612ac3ecf35e27968e439": "Ymultichange(Yparameterchange,Ybodychange)",
    "3b173d95171d01ab55042b1162569d1cf14a8d43": "Ymultichange(Ymodifierchange,Ybodychange)",
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe": "Yintroduced"
  },
  "changeHistoryDetails": {
    "96b12662ea76e3ded4ef13944fc8df206cfb4613": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
      "commitDate": "10/10/16 3:30 PM",
      "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "16/09/16 12:08 AM",
          "commitNameOld": "b09a03cd7d26cf96ec26a81ba11f00778241eb3e",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 24.64,
          "commitsBetweenForRepo": 171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-  void removeVolume(File volume, boolean clearFailure) {\n+  void removeVolume(StorageLocation storageLocation, boolean clearFailure) {\n     for (FsVolumeImpl fsVolume : volumes) {\n-      String basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n-      String targetPath \u003d volume.getAbsolutePath();\n-      if (basePath.equals(targetPath)) {\n+      StorageLocation baseLocation \u003d fsVolume.getStorageLocation();\n+      if (baseLocation.equals(storageLocation)) {\n         removeVolume(fsVolume);\n       }\n     }\n     if (clearFailure) {\n-      removeVolumeFailureInfo(volume);\n+      removeVolumeFailureInfo(storageLocation);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(StorageLocation storageLocation, boolean clearFailure) {\n    for (FsVolumeImpl fsVolume : volumes) {\n      StorageLocation baseLocation \u003d fsVolume.getStorageLocation();\n      if (baseLocation.equals(storageLocation)) {\n        removeVolume(fsVolume);\n      }\n    }\n    if (clearFailure) {\n      removeVolumeFailureInfo(storageLocation);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {
            "oldValue": "[volume-File, clearFailure-boolean]",
            "newValue": "[storageLocation-StorageLocation, clearFailure-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10637. Modifications to remove the assumption that FsVolumes are backed by java.io.File. (Virajith Jalaparti via lei)\n",
          "commitDate": "10/10/16 3:30 PM",
          "commitName": "96b12662ea76e3ded4ef13944fc8df206cfb4613",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "16/09/16 12:08 AM",
          "commitNameOld": "b09a03cd7d26cf96ec26a81ba11f00778241eb3e",
          "commitAuthorOld": "Akira Ajisaka",
          "daysBetweenCommits": 24.64,
          "commitsBetweenForRepo": 171,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-  void removeVolume(File volume, boolean clearFailure) {\n+  void removeVolume(StorageLocation storageLocation, boolean clearFailure) {\n     for (FsVolumeImpl fsVolume : volumes) {\n-      String basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n-      String targetPath \u003d volume.getAbsolutePath();\n-      if (basePath.equals(targetPath)) {\n+      StorageLocation baseLocation \u003d fsVolume.getStorageLocation();\n+      if (baseLocation.equals(storageLocation)) {\n         removeVolume(fsVolume);\n       }\n     }\n     if (clearFailure) {\n-      removeVolumeFailureInfo(volume);\n+      removeVolumeFailureInfo(storageLocation);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(StorageLocation storageLocation, boolean clearFailure) {\n    for (FsVolumeImpl fsVolume : volumes) {\n      StorageLocation baseLocation \u003d fsVolume.getStorageLocation();\n      if (baseLocation.equals(storageLocation)) {\n        removeVolume(fsVolume);\n      }\n    }\n    if (clearFailure) {\n      removeVolumeFailureInfo(storageLocation);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {}
        }
      ]
    },
    "533a2be5ac7c7f0473fdd24d6201582d08964e21": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9264. Minor cleanup of operations on FsVolumeList#volumes.  (Walter Su via lei)\n",
      "commitDate": "23/10/15 1:52 PM",
      "commitName": "533a2be5ac7c7f0473fdd24d6201582d08964e21",
      "commitAuthor": "Lei Xu",
      "commitDateOld": "05/05/15 11:08 AM",
      "commitNameOld": "24d3a2d4fdd836ac9a5bc755a7fb9354f7a582b1",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 171.11,
      "commitsBetweenForRepo": 1435,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,12 @@\n   void removeVolume(File volume, boolean clearFailure) {\n-    // Make a copy of volumes to remove one volume.\n-    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n-    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n-    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n-      FsVolumeImpl fsVolume \u003d it.next();\n-      String basePath, targetPath;\n-      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n-      targetPath \u003d volume.getAbsolutePath();\n+    for (FsVolumeImpl fsVolume : volumes) {\n+      String basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n+      String targetPath \u003d volume.getAbsolutePath();\n       if (basePath.equals(targetPath)) {\n-        // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n     if (clearFailure) {\n       removeVolumeFailureInfo(volume);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeVolume(File volume, boolean clearFailure) {\n    for (FsVolumeImpl fsVolume : volumes) {\n      String basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      String targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        removeVolume(fsVolume);\n      }\n    }\n    if (clearFailure) {\n      removeVolumeFailureInfo(volume);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "b49c3a1813aa8c5b05fe6c02a653286c573137ca": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7722. DataNode#checkDiskError should also remove Storage when error is found. (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "12/03/15 12:00 PM",
      "commitName": "b49c3a1813aa8c5b05fe6c02a653286c573137ca",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7722. DataNode#checkDiskError should also remove Storage when error is found. (Lei Xu via Colin P. McCabe)\n",
          "commitDate": "12/03/15 12:00 PM",
          "commitName": "b49c3a1813aa8c5b05fe6c02a653286c573137ca",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/02/15 3:38 PM",
          "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 18.81,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  void removeVolume(File volume) {\n+  void removeVolume(File volume, boolean clearFailure) {\n     // Make a copy of volumes to remove one volume.\n     final FsVolumeImpl[] curVolumes \u003d volumes.get();\n     final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n       String basePath, targetPath;\n       basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n       targetPath \u003d volume.getAbsolutePath();\n       if (basePath.equals(targetPath)) {\n         // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n-    removeVolumeFailureInfo(volume);\n+    if (clearFailure) {\n+      removeVolumeFailureInfo(volume);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(File volume, boolean clearFailure) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      String basePath, targetPath;\n      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n    if (clearFailure) {\n      removeVolumeFailureInfo(volume);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {
            "oldValue": "[volume-File]",
            "newValue": "[volume-File, clearFailure-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7722. DataNode#checkDiskError should also remove Storage when error is found. (Lei Xu via Colin P. McCabe)\n",
          "commitDate": "12/03/15 12:00 PM",
          "commitName": "b49c3a1813aa8c5b05fe6c02a653286c573137ca",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "21/02/15 3:38 PM",
          "commitNameOld": "8b465b4b8caed31ca9daeaae108f9a868a30a455",
          "commitAuthorOld": "Arpit Agarwal",
          "daysBetweenCommits": 18.81,
          "commitsBetweenForRepo": 143,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  void removeVolume(File volume) {\n+  void removeVolume(File volume, boolean clearFailure) {\n     // Make a copy of volumes to remove one volume.\n     final FsVolumeImpl[] curVolumes \u003d volumes.get();\n     final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n       String basePath, targetPath;\n       basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n       targetPath \u003d volume.getAbsolutePath();\n       if (basePath.equals(targetPath)) {\n         // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n-    removeVolumeFailureInfo(volume);\n+    if (clearFailure) {\n+      removeVolumeFailureInfo(volume);\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(File volume, boolean clearFailure) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      String basePath, targetPath;\n      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n    if (clearFailure) {\n      removeVolumeFailureInfo(volume);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {}
        }
      ]
    },
    "9729b244de50322c2cc889c97c2ffb2b4675cf77": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7604. Track and display failed DataNode storage locations in NameNode. Contributed by Chris Nauroth.\n",
      "commitDate": "16/02/15 2:43 PM",
      "commitName": "9729b244de50322c2cc889c97c2ffb2b4675cf77",
      "commitAuthor": "cnauroth",
      "commitDateOld": "21/01/15 7:00 PM",
      "commitNameOld": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 25.82,
      "commitsBetweenForRepo": 263,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,16 @@\n   void removeVolume(File volume) {\n     // Make a copy of volumes to remove one volume.\n     final FsVolumeImpl[] curVolumes \u003d volumes.get();\n     final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n       String basePath, targetPath;\n       basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n       targetPath \u003d volume.getAbsolutePath();\n       if (basePath.equals(targetPath)) {\n         // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n+    removeVolumeFailureInfo(volume);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void removeVolume(File volume) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      String basePath, targetPath;\n      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n    removeVolumeFailureInfo(volume);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
      "extendedDetails": {}
    },
    "a17584936cc5141e3f5612ac3ecf35e27968e439": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-7610. Fix removal of dynamically added DN volumes (Lei (Eddy) Xu via Colin P. McCabe)\n",
      "commitDate": "20/01/15 8:11 PM",
      "commitName": "a17584936cc5141e3f5612ac3ecf35e27968e439",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7610. Fix removal of dynamically added DN volumes (Lei (Eddy) Xu via Colin P. McCabe)\n",
          "commitDate": "20/01/15 8:11 PM",
          "commitName": "a17584936cc5141e3f5612ac3ecf35e27968e439",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "20/01/15 7:05 PM",
          "commitNameOld": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  void removeVolume(String volume) {\n+  void removeVolume(File volume) {\n     // Make a copy of volumes to remove one volume.\n     final FsVolumeImpl[] curVolumes \u003d volumes.get();\n     final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n-      if (fsVolume.getBasePath().equals(volume)) {\n+      String basePath, targetPath;\n+      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n+      targetPath \u003d volume.getAbsolutePath();\n+      if (basePath.equals(targetPath)) {\n         // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(File volume) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      String basePath, targetPath;\n      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {
            "oldValue": "[volume-String]",
            "newValue": "[volume-File]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7610. Fix removal of dynamically added DN volumes (Lei (Eddy) Xu via Colin P. McCabe)\n",
          "commitDate": "20/01/15 8:11 PM",
          "commitName": "a17584936cc5141e3f5612ac3ecf35e27968e439",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "20/01/15 7:05 PM",
          "commitNameOld": "b7f4a3156c0f5c600816c469637237ba6c9b330c",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 0.05,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  void removeVolume(String volume) {\n+  void removeVolume(File volume) {\n     // Make a copy of volumes to remove one volume.\n     final FsVolumeImpl[] curVolumes \u003d volumes.get();\n     final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n-      if (fsVolume.getBasePath().equals(volume)) {\n+      String basePath, targetPath;\n+      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n+      targetPath \u003d volume.getAbsolutePath();\n+      if (basePath.equals(targetPath)) {\n         // Make sure the removed volume is the one in the curVolumes.\n         removeVolume(fsVolume);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(File volume) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      String basePath, targetPath;\n      basePath \u003d new File(fsVolume.getBasePath()).getAbsolutePath();\n      targetPath \u003d volume.getAbsolutePath();\n      if (basePath.equals(targetPath)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {}
        }
      ]
    },
    "3b173d95171d01ab55042b1162569d1cf14a8d43": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-7531. Improve the concurrent access on FsVolumeList (Lei Xu via Colin P. McCabe)\n",
      "commitDate": "17/12/14 4:41 PM",
      "commitName": "3b173d95171d01ab55042b1162569d1cf14a8d43",
      "commitAuthor": "Colin Patrick Mccabe",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-7531. Improve the concurrent access on FsVolumeList (Lei Xu via Colin P. McCabe)\n",
          "commitDate": "17/12/14 4:41 PM",
          "commitName": "3b173d95171d01ab55042b1162569d1cf14a8d43",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "09/12/14 10:56 AM",
          "commitNameOld": "d8352b9b2b99aa46679c5880a724ba3f0ceb41ff",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 8.24,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  synchronized void removeVolume(String volume) {\n+  void removeVolume(String volume) {\n     // Make a copy of volumes to remove one volume.\n-    final List\u003cFsVolumeImpl\u003e volumeList \u003d new ArrayList\u003cFsVolumeImpl\u003e(volumes);\n+    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n+    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n       if (fsVolume.getBasePath().equals(volume)) {\n-        fsVolume.shutdown();\n-        it.remove();\n-        volumes \u003d Collections.unmodifiableList(volumeList);\n-        FsDatasetImpl.LOG.info(\"Removed volume: \" + volume);\n-        break;\n+        // Make sure the removed volume is the one in the curVolumes.\n+        removeVolume(fsVolume);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(String volume) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      if (fsVolume.getBasePath().equals(volume)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {
            "oldValue": "[synchronized]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7531. Improve the concurrent access on FsVolumeList (Lei Xu via Colin P. McCabe)\n",
          "commitDate": "17/12/14 4:41 PM",
          "commitName": "3b173d95171d01ab55042b1162569d1cf14a8d43",
          "commitAuthor": "Colin Patrick Mccabe",
          "commitDateOld": "09/12/14 10:56 AM",
          "commitNameOld": "d8352b9b2b99aa46679c5880a724ba3f0ceb41ff",
          "commitAuthorOld": "Colin Patrick Mccabe",
          "daysBetweenCommits": 8.24,
          "commitsBetweenForRepo": 70,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,12 @@\n-  synchronized void removeVolume(String volume) {\n+  void removeVolume(String volume) {\n     // Make a copy of volumes to remove one volume.\n-    final List\u003cFsVolumeImpl\u003e volumeList \u003d new ArrayList\u003cFsVolumeImpl\u003e(volumes);\n+    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n+    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n     for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n       FsVolumeImpl fsVolume \u003d it.next();\n       if (fsVolume.getBasePath().equals(volume)) {\n-        fsVolume.shutdown();\n-        it.remove();\n-        volumes \u003d Collections.unmodifiableList(volumeList);\n-        FsDatasetImpl.LOG.info(\"Removed volume: \" + volume);\n-        break;\n+        // Make sure the removed volume is the one in the curVolumes.\n+        removeVolume(fsVolume);\n       }\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  void removeVolume(String volume) {\n    // Make a copy of volumes to remove one volume.\n    final FsVolumeImpl[] curVolumes \u003d volumes.get();\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d Lists.newArrayList(curVolumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      if (fsVolume.getBasePath().equals(volume)) {\n        // Make sure the removed volume is the one in the curVolumes.\n        removeVolume(fsVolume);\n      }\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java",
          "extendedDetails": {}
        }
      ]
    },
    "7eab2a29a5706ce10912c12fa225ef6b27a82cbe": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-6774. Make FsDataset and DataStore support removing volumes. Contributed by Lei Xu.\n",
      "commitDate": "29/08/14 1:00 PM",
      "commitName": "7eab2a29a5706ce10912c12fa225ef6b27a82cbe",
      "commitAuthor": "Aaron T. Myers",
      "diff": "@@ -0,0 +1,14 @@\n+  synchronized void removeVolume(String volume) {\n+    // Make a copy of volumes to remove one volume.\n+    final List\u003cFsVolumeImpl\u003e volumeList \u003d new ArrayList\u003cFsVolumeImpl\u003e(volumes);\n+    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n+      FsVolumeImpl fsVolume \u003d it.next();\n+      if (fsVolume.getBasePath().equals(volume)) {\n+        fsVolume.shutdown();\n+        it.remove();\n+        volumes \u003d Collections.unmodifiableList(volumeList);\n+        FsDatasetImpl.LOG.info(\"Removed volume: \" + volume);\n+        break;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  synchronized void removeVolume(String volume) {\n    // Make a copy of volumes to remove one volume.\n    final List\u003cFsVolumeImpl\u003e volumeList \u003d new ArrayList\u003cFsVolumeImpl\u003e(volumes);\n    for (Iterator\u003cFsVolumeImpl\u003e it \u003d volumeList.iterator(); it.hasNext(); ) {\n      FsVolumeImpl fsVolume \u003d it.next();\n      if (fsVolume.getBasePath().equals(volume)) {\n        fsVolume.shutdown();\n        it.remove();\n        volumes \u003d Collections.unmodifiableList(volumeList);\n        FsDatasetImpl.LOG.info(\"Removed volume: \" + volume);\n        break;\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/fsdataset/impl/FsVolumeList.java"
    }
  }
}