{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SimpleCopyListing.java",
  "functionName": "writeToFileListing",
  "functionId": "writeToFileListing___fileListWriter-SequenceFile.Writer__fileStatus-CopyListingFileStatus__sourcePathRoot-Path",
  "sourceFilePath": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
  "functionStartLine": 709,
  "functionEndLine": 732,
  "numCommitsSeen": 43,
  "timeTaken": 4678,
  "changeHistory": [
    "faba3591d32f2e4808c2faeb9472348d52619c8a",
    "bf3fb585aaf2b179836e139c041fc87920a3c886",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6",
    "a287d2fb77d9873b61c6ab24134993d784ae8475",
    "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
    "640a097533e0883bf49504673228d5a327089b44",
    "6f92ad9868b008eb523ae3279e05004de31a08ce",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67"
  ],
  "changeHistoryShort": {
    "faba3591d32f2e4808c2faeb9472348d52619c8a": "Ybodychange",
    "bf3fb585aaf2b179836e139c041fc87920a3c886": "Ybodychange",
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": "Ybodychange",
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": "Ybodychange",
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": "Ymultichange(Yparameterchange,Ybodychange)",
    "a287d2fb77d9873b61c6ab24134993d784ae8475": "Ybodychange",
    "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7": "Ybodychange",
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": "Ymultichange(Yparameterchange,Ybodychange)",
    "640a097533e0883bf49504673228d5a327089b44": "Ybodychange",
    "6f92ad9868b008eb523ae3279e05004de31a08ce": "Ymultichange(Yparameterchange,Ybodychange)",
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": "Yintroduced"
  },
  "changeHistoryDetails": {
    "faba3591d32f2e4808c2faeb9472348d52619c8a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16147. Allow CopyListing sequence file keys and values to be more easily customized.\n\nAuthor:    Andrew Olson\n",
      "commitDate": "22/03/19 3:35 AM",
      "commitName": "faba3591d32f2e4808c2faeb9472348d52619c8a",
      "commitAuthor": "Andrew Olson",
      "commitDateOld": "15/08/18 8:31 AM",
      "commitNameOld": "3e3963b035911703c61e6d9a2939eb894da5644c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 218.79,
      "commitsBetweenForRepo": 1733,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n-    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n-        fileStatus.getPath())), fileStatus);\n+    fileListWriter.append(getFileListingKey(sourcePathRoot, fileStatus),\n+        getFileListingValue(fileStatus));\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(getFileListingKey(sourcePathRoot, fileStatus),\n        getFileListingValue(fileStatus));\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "bf3fb585aaf2b179836e139c041fc87920a3c886": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen, Rosie Li.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "bf3fb585aaf2b179836e139c041fc87920a3c886",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:38 PM",
      "commitNameOld": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), fileStatus);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n-      totalBytesToCopy +\u003d fileStatus.getLen();\n+      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), fileStatus);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "144f1cf76527e6c75aec77ef683a898580f3cc8d": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\"\n\nThis reverts commit 064c8b25eca9bc825dc07a54d9147d65c9290a03.\n",
      "commitDate": "30/03/17 5:38 PM",
      "commitName": "144f1cf76527e6c75aec77ef683a898580f3cc8d",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "30/03/17 5:01 PM",
      "commitNameOld": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthorOld": "Yongjun Zhang",
      "daysBetweenCommits": 0.03,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), fileStatus);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n-      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n+      totalBytesToCopy +\u003d fileStatus.getLen();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), fileStatus);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "064c8b25eca9bc825dc07a54d9147d65c9290a03": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11794. Enable distcp to copy blocks in parallel. Contributed by Yongjun Zhang, Wei-Chiu Chuang, Xiao Chen.\n",
      "commitDate": "30/03/17 5:01 PM",
      "commitName": "064c8b25eca9bc825dc07a54d9147d65c9290a03",
      "commitAuthor": "Yongjun Zhang",
      "commitDateOld": "15/11/16 10:57 AM",
      "commitNameOld": "5af572b6443715b7a741296c1bd520a1840f9a7c",
      "commitAuthorOld": "Mingliang Liu",
      "daysBetweenCommits": 135.21,
      "commitsBetweenForRepo": 732,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), fileStatus);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n-      totalBytesToCopy +\u003d fileStatus.getLen();\n+      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), fileStatus);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getSizeToCopy();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "0790275f058b0cf41780ad337c9150a1e8ebebc6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
      "commitDate": "18/05/15 1:24 PM",
      "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
          "commitDate": "18/05/15 1:24 PM",
          "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/04/15 1:39 PM",
          "commitNameOld": "a287d2fb77d9873b61c6ab24134993d784ae8475",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 23.99,
          "commitsBetweenForRepo": 280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n-                                  Path sourcePathRoot,\n-                                  DistCpOptions options) throws IOException {\n+                                  Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n-    FileStatus status \u003d fileStatus;\n-\n-    if (!shouldCopy(fileStatus.getPath(), options)) {\n+    if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n-        fileStatus.getPath())), status);\n+        fileStatus.getPath())), fileStatus);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), fileStatus);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-1540. Support file exclusion list in distcp. Contributed by Rich Haase.\n",
          "commitDate": "18/05/15 1:24 PM",
          "commitName": "0790275f058b0cf41780ad337c9150a1e8ebebc6",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "24/04/15 1:39 PM",
          "commitNameOld": "a287d2fb77d9873b61c6ab24134993d784ae8475",
          "commitAuthorOld": "Ravi Prakash",
          "daysBetweenCommits": 23.99,
          "commitsBetweenForRepo": 280,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n-                                  Path sourcePathRoot,\n-                                  DistCpOptions options) throws IOException {\n+                                  Path sourcePathRoot) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n-    FileStatus status \u003d fileStatus;\n-\n-    if (!shouldCopy(fileStatus.getPath(), options)) {\n+    if (!shouldCopy(fileStatus.getPath())) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n-        fileStatus.getPath())), status);\n+        fileStatus.getPath())), fileStatus);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n     maybePrintStats();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    if (!shouldCopy(fileStatus.getPath())) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), fileStatus);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "a287d2fb77d9873b61c6ab24134993d784ae8475": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11876. Refactor code to make it more readable, minor maybePrintStats bug (Zoran Dimitrijevic via raviprak)\n",
      "commitDate": "24/04/15 1:39 PM",
      "commitName": "a287d2fb77d9873b61c6ab24134993d784ae8475",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "21/04/15 4:49 PM",
      "commitNameOld": "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7",
      "commitAuthorOld": "Ravi Prakash",
      "daysBetweenCommits": 2.87,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,27 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot,\n                                   DistCpOptions options) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n \n     if (!shouldCopy(fileStatus.getPath(), options)) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     } else {\n       totalDirs++;\n     }\n     totalPaths++;\n+    maybePrintStats();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  DistCpOptions options) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n    maybePrintStats();\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11827. Speed-up distcp buildListing() using threadpool (Zoran Dimitrijevic via raviprak)\n",
      "commitDate": "21/04/15 4:49 PM",
      "commitName": "cfba355052df15f8eb6cc9b8e90e2d8492bec7d7",
      "commitAuthor": "Ravi Prakash",
      "commitDateOld": "03/04/15 2:08 PM",
      "commitNameOld": "932730df7d62077f7356464ad27f69469965d77a",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 18.11,
      "commitsBetweenForRepo": 133,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,26 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot,\n                                   DistCpOptions options) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n \n     if (!shouldCopy(fileStatus.getPath(), options)) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n+    } else {\n+      totalDirs++;\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  DistCpOptions options) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    } else {\n      totalDirs++;\n    }\n    totalPaths++;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "11be7334c4e04b1b3fe12d86f4646cc83c068b05": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/14 11:25 AM",
      "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
      "commitAuthor": "Chris Nauroth",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/14 11:25 AM",
          "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/04/14 5:32 PM",
          "commitNameOld": "640a097533e0883bf49504673228d5a327089b44",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 43.75,
          "commitsBetweenForRepo": 263,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n-                                  FileStatus fileStatus,\n+                                  CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot,\n-                                  boolean localFile,\n                                   DistCpOptions options) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n-    if (localFile) {\n-      status \u003d getFileStatus(fileStatus);\n-    }\n \n     if (!shouldCopy(fileStatus.getPath(), options)) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  DistCpOptions options) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-FileStatus, sourcePathRoot-Path, localFile-boolean, options-DistCpOptions]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-CopyListingFileStatus, sourcePathRoot-Path, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5809. Enhance distcp to support preserving HDFS ACLs. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1595283 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "16/05/14 11:25 AM",
          "commitName": "11be7334c4e04b1b3fe12d86f4646cc83c068b05",
          "commitAuthor": "Chris Nauroth",
          "commitDateOld": "02/04/14 5:32 PM",
          "commitNameOld": "640a097533e0883bf49504673228d5a327089b44",
          "commitAuthorOld": "Aaron Myers",
          "daysBetweenCommits": 43.75,
          "commitsBetweenForRepo": 263,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,28 +1,24 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n-                                  FileStatus fileStatus,\n+                                  CopyListingFileStatus fileStatus,\n                                   Path sourcePathRoot,\n-                                  boolean localFile,\n                                   DistCpOptions options) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n-    if (localFile) {\n-      status \u003d getFileStatus(fileStatus);\n-    }\n \n     if (!shouldCopy(fileStatus.getPath(), options)) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  CopyListingFileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  DistCpOptions options) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "640a097533e0883bf49504673228d5a327089b44": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10459. distcp V2 doesn\u0027t preserve root dir\u0027s attributes when -p is specified. Contributed by Yongjun Zhang.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1584227 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/04/14 5:32 PM",
      "commitName": "640a097533e0883bf49504673228d5a327089b44",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "05/12/13 7:47 AM",
      "commitNameOld": "9ea61e44153b938309841b1499488360e9abd176",
      "commitAuthorOld": "Daryn Sharp",
      "daysBetweenCommits": 118.36,
      "commitsBetweenForRepo": 864,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,28 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                   FileStatus fileStatus,\n                                   Path sourcePathRoot,\n                                   boolean localFile,\n                                   DistCpOptions options) throws IOException {\n-    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n-      return; // Skip the root-paths.\n-\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n     if (localFile) {\n       status \u003d getFileStatus(fileStatus);\n     }\n \n     if (!shouldCopy(fileStatus.getPath(), options)) {\n       return;\n     }\n \n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  FileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  boolean localFile,\n                                  DistCpOptions options) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n    if (localFile) {\n      status \u003d getFileStatus(fileStatus);\n    }\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
      "extendedDetails": {}
    },
    "6f92ad9868b008eb523ae3279e05004de31a08ce": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/03/13 3:09 AM",
      "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
      "commitAuthor": "Amareshwari Sri Ramadasu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/13 3:09 AM",
          "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
          "commitAuthor": "Amareshwari Sri Ramadasu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 421.15,
          "commitsBetweenForRepo": 2459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,31 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n-                                  FileStatus fileStatus, Path sourcePathRoot,\n-                                  boolean localFile) throws IOException {\n+                                  FileStatus fileStatus,\n+                                  Path sourcePathRoot,\n+                                  boolean localFile,\n+                                  DistCpOptions options) throws IOException {\n     if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n       return; // Skip the root-paths.\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n     if (localFile) {\n       status \u003d getFileStatus(fileStatus);\n     }\n \n+    if (!shouldCopy(fileStatus.getPath(), options)) {\n+      return;\n+    }\n+\n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  FileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  boolean localFile,\n                                  DistCpOptions options) throws IOException {\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n      return; // Skip the root-paths.\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n    if (localFile) {\n      status \u003d getFileStatus(fileStatus);\n    }\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {
            "oldValue": "[fileListWriter-SequenceFile.Writer, fileStatus-FileStatus, sourcePathRoot-Path, localFile-boolean]",
            "newValue": "[fileListWriter-SequenceFile.Writer, fileStatus-FileStatus, sourcePathRoot-Path, localFile-boolean, options-DistCpOptions]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-5014. Extend Distcp to accept a custom CopyListing. Contributed by Srikanth Sundarrajan\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1459690 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/03/13 3:09 AM",
          "commitName": "6f92ad9868b008eb523ae3279e05004de31a08ce",
          "commitAuthor": "Amareshwari Sri Ramadasu",
          "commitDateOld": "25/01/12 10:36 PM",
          "commitNameOld": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
          "commitAuthorOld": "Mahadev Konar",
          "daysBetweenCommits": 421.15,
          "commitsBetweenForRepo": 2459,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,25 +1,31 @@\n   private void writeToFileListing(SequenceFile.Writer fileListWriter,\n-                                  FileStatus fileStatus, Path sourcePathRoot,\n-                                  boolean localFile) throws IOException {\n+                                  FileStatus fileStatus,\n+                                  Path sourcePathRoot,\n+                                  boolean localFile,\n+                                  DistCpOptions options) throws IOException {\n     if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n       return; // Skip the root-paths.\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n     }\n \n     FileStatus status \u003d fileStatus;\n     if (localFile) {\n       status \u003d getFileStatus(fileStatus);\n     }\n \n+    if (!shouldCopy(fileStatus.getPath(), options)) {\n+      return;\n+    }\n+\n     fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n         fileStatus.getPath())), status);\n     fileListWriter.sync();\n \n     if (!fileStatus.isDirectory()) {\n       totalBytesToCopy +\u003d fileStatus.getLen();\n     }\n     totalPaths++;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  FileStatus fileStatus,\n                                  Path sourcePathRoot,\n                                  boolean localFile,\n                                  DistCpOptions options) throws IOException {\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n      return; // Skip the root-paths.\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n    if (localFile) {\n      status \u003d getFileStatus(fileStatus);\n    }\n\n    if (!shouldCopy(fileStatus.getPath(), options)) {\n      return;\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
          "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java",
          "extendedDetails": {}
        }
      ]
    },
    "d06948002fb0cabf72cc0d46bf2fa67d45370f67": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2765. DistCp Rewrite. (Mithun Radhakrishnan via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1236045 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/12 10:36 PM",
      "commitName": "d06948002fb0cabf72cc0d46bf2fa67d45370f67",
      "commitAuthor": "Mahadev Konar",
      "diff": "@@ -0,0 +1,25 @@\n+  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n+                                  FileStatus fileStatus, Path sourcePathRoot,\n+                                  boolean localFile) throws IOException {\n+    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n+      return; // Skip the root-paths.\n+\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n+        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n+    }\n+\n+    FileStatus status \u003d fileStatus;\n+    if (localFile) {\n+      status \u003d getFileStatus(fileStatus);\n+    }\n+\n+    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n+        fileStatus.getPath())), status);\n+    fileListWriter.sync();\n+\n+    if (!fileStatus.isDirectory()) {\n+      totalBytesToCopy +\u003d fileStatus.getLen();\n+    }\n+    totalPaths++;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeToFileListing(SequenceFile.Writer fileListWriter,\n                                  FileStatus fileStatus, Path sourcePathRoot,\n                                  boolean localFile) throws IOException {\n    if (fileStatus.getPath().equals(sourcePathRoot) \u0026\u0026 fileStatus.isDirectory())\n      return; // Skip the root-paths.\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"REL PATH: \" + DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath()) + \", FULL PATH: \" + fileStatus.getPath());\n    }\n\n    FileStatus status \u003d fileStatus;\n    if (localFile) {\n      status \u003d getFileStatus(fileStatus);\n    }\n\n    fileListWriter.append(new Text(DistCpUtils.getRelativePath(sourcePathRoot,\n        fileStatus.getPath())), status);\n    fileListWriter.sync();\n\n    if (!fileStatus.isDirectory()) {\n      totalBytesToCopy +\u003d fileStatus.getLen();\n    }\n    totalPaths++;\n  }",
      "path": "hadoop-tools/hadoop-distcp/src/main/java/org/apache/hadoop/tools/SimpleCopyListing.java"
    }
  }
}