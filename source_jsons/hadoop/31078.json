{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FederationInterceptorREST.java",
  "functionName": "getApp",
  "functionId": "getApp___hsr-HttpServletRequest__appId-String__unselectedFields-Set__String__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
  "functionStartLine": 558,
  "functionEndLine": 595,
  "numCommitsSeen": 20,
  "timeTaken": 1730,
  "changeHistory": [
    "8be5707067509b78bde5fcf60072ae988d5a9f32",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d"
  ],
  "changeHistoryShort": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": "Ybodychange",
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": "Ybodychange",
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8be5707067509b78bde5fcf60072ae988d5a9f32": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7276. Federation Router Web Service fixes. Contributed by Inigo Goiri.\n",
      "commitDate": "27/10/17 4:46 PM",
      "commitName": "8be5707067509b78bde5fcf60072ae988d5a9f32",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 24.07,
      "commitsBetweenForRepo": 186,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,37 +1,38 @@\n   public AppInfo getApp(HttpServletRequest hsr, String appId,\n       Set\u003cString\u003e unselectedFields) {\n \n     long startTime \u003d clock.getTime();\n \n     ApplicationId applicationId \u003d null;\n     try {\n       applicationId \u003d ApplicationId.fromString(appId);\n     } catch (IllegalArgumentException e) {\n       routerMetrics.incrAppsFailedRetrieved();\n       return null;\n     }\n \n     SubClusterInfo subClusterInfo \u003d null;\n     SubClusterId subClusterId \u003d null;\n     try {\n       subClusterId \u003d\n           federationFacade.getApplicationHomeSubCluster(applicationId);\n       if (subClusterId \u003d\u003d null) {\n         routerMetrics.incrAppsFailedRetrieved();\n         return null;\n       }\n       subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n     } catch (YarnException e) {\n       routerMetrics.incrAppsFailedRetrieved();\n       return null;\n     }\n \n-    AppInfo response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n-        subClusterInfo.getRMWebServiceAddress()).getApp(hsr, appId,\n-            unselectedFields);\n+    DefaultRequestInterceptorREST interceptor \u003d\n+        getOrCreateInterceptorForSubCluster(\n+            subClusterId, subClusterInfo.getRMWebServiceAddress());\n+    AppInfo response \u003d interceptor.getApp(hsr, appId, unselectedFields);\n \n     long stopTime \u003d clock.getTime();\n     routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n \n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(HttpServletRequest hsr, String appId,\n      Set\u003cString\u003e unselectedFields) {\n\n    long startTime \u003d clock.getTime();\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(appId);\n    } catch (IllegalArgumentException e) {\n      routerMetrics.incrAppsFailedRetrieved();\n      return null;\n    }\n\n    SubClusterInfo subClusterInfo \u003d null;\n    SubClusterId subClusterId \u003d null;\n    try {\n      subClusterId \u003d\n          federationFacade.getApplicationHomeSubCluster(applicationId);\n      if (subClusterId \u003d\u003d null) {\n        routerMetrics.incrAppsFailedRetrieved();\n        return null;\n      }\n      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n    } catch (YarnException e) {\n      routerMetrics.incrAppsFailedRetrieved();\n      return null;\n    }\n\n    DefaultRequestInterceptorREST interceptor \u003d\n        getOrCreateInterceptorForSubCluster(\n            subClusterId, subClusterInfo.getRMWebServiceAddress());\n    AppInfo response \u003d interceptor.getApp(hsr, appId, unselectedFields);\n\n    long stopTime \u003d clock.getTime();\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "ae8fb13b312b30de50d65b5450b565d50d690e9e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6923. Metrics for Federation Router. (Giovanni Matteo Fumarola via asuresh)\n",
      "commitDate": "21/08/17 10:50 PM",
      "commitName": "ae8fb13b312b30de50d65b5450b565d50d690e9e",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "11/08/17 3:58 PM",
      "commitNameOld": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthorOld": "Carlo Curino",
      "daysBetweenCommits": 10.29,
      "commitsBetweenForRepo": 50,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,37 @@\n   public AppInfo getApp(HttpServletRequest hsr, String appId,\n       Set\u003cString\u003e unselectedFields) {\n \n+    long startTime \u003d clock.getTime();\n+\n     ApplicationId applicationId \u003d null;\n     try {\n       applicationId \u003d ApplicationId.fromString(appId);\n     } catch (IllegalArgumentException e) {\n+      routerMetrics.incrAppsFailedRetrieved();\n       return null;\n     }\n \n     SubClusterInfo subClusterInfo \u003d null;\n     SubClusterId subClusterId \u003d null;\n     try {\n       subClusterId \u003d\n           federationFacade.getApplicationHomeSubCluster(applicationId);\n       if (subClusterId \u003d\u003d null) {\n+        routerMetrics.incrAppsFailedRetrieved();\n         return null;\n       }\n       subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n     } catch (YarnException e) {\n+      routerMetrics.incrAppsFailedRetrieved();\n       return null;\n     }\n \n-    return getOrCreateInterceptorForSubCluster(subClusterId,\n+    AppInfo response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n         subClusterInfo.getRMWebServiceAddress()).getApp(hsr, appId,\n             unselectedFields);\n+\n+    long stopTime \u003d clock.getTime();\n+    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n+\n+    return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(HttpServletRequest hsr, String appId,\n      Set\u003cString\u003e unselectedFields) {\n\n    long startTime \u003d clock.getTime();\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(appId);\n    } catch (IllegalArgumentException e) {\n      routerMetrics.incrAppsFailedRetrieved();\n      return null;\n    }\n\n    SubClusterInfo subClusterInfo \u003d null;\n    SubClusterId subClusterId \u003d null;\n    try {\n      subClusterId \u003d\n          federationFacade.getApplicationHomeSubCluster(applicationId);\n      if (subClusterId \u003d\u003d null) {\n        routerMetrics.incrAppsFailedRetrieved();\n        return null;\n      }\n      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n    } catch (YarnException e) {\n      routerMetrics.incrAppsFailedRetrieved();\n      return null;\n    }\n\n    AppInfo response \u003d getOrCreateInterceptorForSubCluster(subClusterId,\n        subClusterInfo.getRMWebServiceAddress()).getApp(hsr, appId,\n            unselectedFields);\n\n    long stopTime \u003d clock.getTime();\n    routerMetrics.succeededAppsRetrieved(stopTime - startTime);\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java",
      "extendedDetails": {}
    },
    "cc59b5fb26ccf58dffcd8850fa12ec65250f127d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6896. Federation: routing REST invocations transparently to multiple RMs (part 1 - basic execution). (Contributed by Giovanni Matteo Fumarola via curino)\n",
      "commitDate": "11/08/17 3:58 PM",
      "commitName": "cc59b5fb26ccf58dffcd8850fa12ec65250f127d",
      "commitAuthor": "Carlo Curino",
      "diff": "@@ -0,0 +1,27 @@\n+  public AppInfo getApp(HttpServletRequest hsr, String appId,\n+      Set\u003cString\u003e unselectedFields) {\n+\n+    ApplicationId applicationId \u003d null;\n+    try {\n+      applicationId \u003d ApplicationId.fromString(appId);\n+    } catch (IllegalArgumentException e) {\n+      return null;\n+    }\n+\n+    SubClusterInfo subClusterInfo \u003d null;\n+    SubClusterId subClusterId \u003d null;\n+    try {\n+      subClusterId \u003d\n+          federationFacade.getApplicationHomeSubCluster(applicationId);\n+      if (subClusterId \u003d\u003d null) {\n+        return null;\n+      }\n+      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n+    } catch (YarnException e) {\n+      return null;\n+    }\n+\n+    return getOrCreateInterceptorForSubCluster(subClusterId,\n+        subClusterInfo.getRMWebServiceAddress()).getApp(hsr, appId,\n+            unselectedFields);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public AppInfo getApp(HttpServletRequest hsr, String appId,\n      Set\u003cString\u003e unselectedFields) {\n\n    ApplicationId applicationId \u003d null;\n    try {\n      applicationId \u003d ApplicationId.fromString(appId);\n    } catch (IllegalArgumentException e) {\n      return null;\n    }\n\n    SubClusterInfo subClusterInfo \u003d null;\n    SubClusterId subClusterId \u003d null;\n    try {\n      subClusterId \u003d\n          federationFacade.getApplicationHomeSubCluster(applicationId);\n      if (subClusterId \u003d\u003d null) {\n        return null;\n      }\n      subClusterInfo \u003d federationFacade.getSubCluster(subClusterId);\n    } catch (YarnException e) {\n      return null;\n    }\n\n    return getOrCreateInterceptorForSubCluster(subClusterId,\n        subClusterInfo.getRMWebServiceAddress()).getApp(hsr, appId,\n            unselectedFields);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-router/src/main/java/org/apache/hadoop/yarn/server/router/webapp/FederationInterceptorREST.java"
    }
  }
}