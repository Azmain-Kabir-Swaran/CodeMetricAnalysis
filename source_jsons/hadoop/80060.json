{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FsPermission.java",
  "functionName": "getUMask",
  "functionId": "getUMask___conf-Configuration",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
  "functionStartLine": 305,
  "functionEndLine": 329,
  "numCommitsSeen": 34,
  "timeTaken": 1563,
  "changeHistory": [
    "b21dffb1fec376784810af89cfc9cc05e5f781ce",
    "4492b9e7302b8c84dddec9713d8148cc6183f46b",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "67c006c322c3925b42322f6ced841a54084f582a",
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701",
    "934deda190138cfb031aac574cb3bd8d4cb21318",
    "3617ed0badf8b16b4de56eabd950df7cf0986593",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "b21dffb1fec376784810af89cfc9cc05e5f781ce": "Ybodychange",
    "4492b9e7302b8c84dddec9713d8148cc6183f46b": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "67c006c322c3925b42322f6ced841a54084f582a": "Ybodychange",
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701": "Ybodychange",
    "934deda190138cfb031aac574cb3bd8d4cb21318": "Ybodychange",
    "3617ed0badf8b16b4de56eabd950df7cf0986593": "Ybodychange",
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b21dffb1fec376784810af89cfc9cc05e5f781ce": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9451. Clean up depreated umasks and related unit tests. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "25/11/15 12:47 PM",
      "commitName": "b21dffb1fec376784810af89cfc9cc05e5f781ce",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "22/11/15 4:47 PM",
      "commitNameOld": "4492b9e7302b8c84dddec9713d8148cc6183f46b",
      "commitAuthorOld": "Haohui Mai",
      "daysBetweenCommits": 2.83,
      "commitsBetweenForRepo": 55,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,25 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n     // To ensure backward compatibility first use the deprecated key.\n     // If the deprecated key is not present then check for the new key\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n-      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n       try {\n         if(confUmask !\u003d null) {\n           umask \u003d new UmaskParser(confUmask).getUMask();\n         }\n       } catch(IllegalArgumentException iae) {\n         // Provide more explanation for user-facing message\n         String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n             : \"octal or symbolic\";\n         String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n             + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n         LOG.warn(error);\n \n         throw new IllegalArgumentException(error);\n       }\n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n\n        throw new IllegalArgumentException(error);\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "4492b9e7302b8c84dddec9713d8148cc6183f46b": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-12294. Remove the support of the deprecated dfs.umask. Contributed by Chang Li.\n",
      "commitDate": "22/11/15 4:47 PM",
      "commitName": "4492b9e7302b8c84dddec9713d8148cc6183f46b",
      "commitAuthor": "Haohui Mai",
      "commitDateOld": "18/06/15 11:39 AM",
      "commitNameOld": "6e0a9f92fe0052d39b95a605174b3f6423c6aae7",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 157.26,
      "commitsBetweenForRepo": 1081,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,26 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n     // To ensure backward compatibility first use the deprecated key.\n     // If the deprecated key is not present then check for the new key\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n       int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n       try {\n         if(confUmask !\u003d null) {\n           umask \u003d new UmaskParser(confUmask).getUMask();\n         }\n       } catch(IllegalArgumentException iae) {\n         // Provide more explanation for user-facing message\n         String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n             : \"octal or symbolic\";\n         String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n             + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n         LOG.warn(error);\n-        \n-        // If oldUmask is not set, then throw the exception\n-        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n-          throw new IllegalArgumentException(error);\n-        }\n-      }\n-        \n-      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n-        if (umask !\u003d oldUmask) {\n-          LOG.warn(DEPRECATED_UMASK_LABEL\n-              + \" configuration key is deprecated. \" + \"Convert to \"\n-              + UMASK_LABEL + \", using octal or symbolic umask \"\n-              + \"specifications.\");\n-          // Old and new umask values do not match - Use old umask\n-          umask \u003d oldUmask;\n-        }\n+\n+        throw new IllegalArgumentException(error);\n       }\n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n\n        throw new IllegalArgumentException(error);\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n        \n        // If oldUmask is not set, then throw the exception\n        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n          throw new IllegalArgumentException(error);\n        }\n      }\n        \n      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n        if (umask !\u003d oldUmask) {\n          LOG.warn(DEPRECATED_UMASK_LABEL\n              + \" configuration key is deprecated. \" + \"Convert to \"\n              + UMASK_LABEL + \", using octal or symbolic umask \"\n              + \"specifications.\");\n          // Old and new umask values do not match - Use old umask\n          umask \u003d oldUmask;\n        }\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n        \n        // If oldUmask is not set, then throw the exception\n        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n          throw new IllegalArgumentException(error);\n        }\n      }\n        \n      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n        if (umask !\u003d oldUmask) {\n          LOG.warn(DEPRECATED_UMASK_LABEL\n              + \" configuration key is deprecated. \" + \"Convert to \"\n              + UMASK_LABEL + \", using octal or symbolic umask \"\n              + \"specifications.\");\n          // Old and new umask values do not match - Use old umask\n          umask \u003d oldUmask;\n        }\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/permission/FsPermission.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/permission/FsPermission.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n        \n        // If oldUmask is not set, then throw the exception\n        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n          throw new IllegalArgumentException(error);\n        }\n      }\n        \n      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n        if (umask !\u003d oldUmask) {\n          LOG.warn(DEPRECATED_UMASK_LABEL\n              + \" configuration key is deprecated. \" + \"Convert to \"\n              + UMASK_LABEL + \", using octal or symbolic umask \"\n              + \"specifications.\");\n          // Old and new umask values do not match - Use old umask\n          umask \u003d oldUmask;\n        }\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/permission/FsPermission.java"
      }
    },
    "67c006c322c3925b42322f6ced841a54084f582a": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6521. User specified umask using deprecated dfs.umask must override server configured using new dfs.umaskmode for backward compatibility. Contributed by Suresh Srinivas.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@937559 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/04/10 5:01 PM",
      "commitName": "67c006c322c3925b42322f6ced841a54084f582a",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "26/03/10 1:25 AM",
      "commitNameOld": "f4d31cd029f8369b8e41de2667f6ba2bd95ca701",
      "commitAuthorOld": "Christopher Douglas",
      "daysBetweenCommits": 28.65,
      "commitsBetweenForRepo": 15,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,40 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n-    // Attempt to pull value from configuration, trying new key first and then\n-    // deprecated key, along with a warning, if not present\n+    // To ensure backward compatibility first use the deprecated key.\n+    // If the deprecated key is not present then check for the new key\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n-      if(confUmask !\u003d null) { // UMASK_LABEL is set\n-        try {\n-          if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n-            umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n-          else\n-            return new FsPermission(confUmask);\n-        } catch(IllegalArgumentException iae) {\n-          // Provide more explanation for user-facing message\n-          String type \u003d iae instanceof NumberFormatException ? \"decimal\" \n-                                                          : \"octal or symbolic\";\n-          \n-          throw new IllegalArgumentException(\"Unable to parse \" + confUmask + \n-                                              \" as \" + type + \" umask.\");\n+      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n+      try {\n+        if(confUmask !\u003d null) {\n+          umask \u003d new UmaskParser(confUmask).getUMask();\n         }\n-      } \n+      } catch(IllegalArgumentException iae) {\n+        // Provide more explanation for user-facing message\n+        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n+            : \"octal or symbolic\";\n+        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n+            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n+        LOG.warn(error);\n+        \n+        // If oldUmask is not set, then throw the exception\n+        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n+          throw new IllegalArgumentException(error);\n+        }\n+      }\n+        \n+      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n+        if (umask !\u003d oldUmask) {\n+          LOG.warn(DEPRECATED_UMASK_LABEL\n+              + \" configuration key is deprecated. \" + \"Convert to \"\n+              + UMASK_LABEL + \", using octal or symbolic umask \"\n+              + \"specifications.\");\n+          // Old and new umask values do not match - Use old umask\n+          umask \u003d oldUmask;\n+        }\n+      }\n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // To ensure backward compatibility first use the deprecated key.\n    // If the deprecated key is not present then check for the new key\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      int oldUmask \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n      try {\n        if(confUmask !\u003d null) {\n          umask \u003d new UmaskParser(confUmask).getUMask();\n        }\n      } catch(IllegalArgumentException iae) {\n        // Provide more explanation for user-facing message\n        String type \u003d iae instanceof NumberFormatException ? \"decimal\"\n            : \"octal or symbolic\";\n        String error \u003d \"Unable to parse configuration \" + UMASK_LABEL\n            + \" with value \" + confUmask + \" as \" + type + \" umask.\";\n        LOG.warn(error);\n        \n        // If oldUmask is not set, then throw the exception\n        if (oldUmask \u003d\u003d Integer.MIN_VALUE) {\n          throw new IllegalArgumentException(error);\n        }\n      }\n        \n      if(oldUmask !\u003d Integer.MIN_VALUE) { // Property was set with old key\n        if (umask !\u003d oldUmask) {\n          LOG.warn(DEPRECATED_UMASK_LABEL\n              + \" configuration key is deprecated. \" + \"Convert to \"\n              + UMASK_LABEL + \", using octal or symbolic umask \"\n              + \"specifications.\");\n          // Old and new umask values do not match - Use old umask\n          umask \u003d oldUmask;\n        }\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "f4d31cd029f8369b8e41de2667f6ba2bd95ca701": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6566. Add methods supporting, enforcing narrower permissions on local daemon directories.\nContributed by Arun Murthy and Luke Lu\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@927728 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/10 1:25 AM",
      "commitName": "f4d31cd029f8369b8e41de2667f6ba2bd95ca701",
      "commitAuthor": "Christopher Douglas",
      "commitDateOld": "04/12/09 4:46 PM",
      "commitNameOld": "934deda190138cfb031aac574cb3bd8d4cb21318",
      "commitAuthorOld": "Jakob Homan",
      "daysBetweenCommits": 111.32,
      "commitsBetweenForRepo": 114,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,26 +1,26 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n     // Attempt to pull value from configuration, trying new key first and then\n     // deprecated key, along with a warning, if not present\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n       if(confUmask !\u003d null) { // UMASK_LABEL is set\n         try {\n           if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n             umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n           else\n-            umask \u003d new UmaskParser(confUmask).getUMask();\n+            return new FsPermission(confUmask);\n         } catch(IllegalArgumentException iae) {\n           // Provide more explanation for user-facing message\n           String type \u003d iae instanceof NumberFormatException ? \"decimal\" \n                                                           : \"octal or symbolic\";\n           \n           throw new IllegalArgumentException(\"Unable to parse \" + confUmask + \n                                               \" as \" + type + \" umask.\");\n         }\n       } \n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // Attempt to pull value from configuration, trying new key first and then\n    // deprecated key, along with a warning, if not present\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      if(confUmask !\u003d null) { // UMASK_LABEL is set\n        try {\n          if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n            umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n          else\n            return new FsPermission(confUmask);\n        } catch(IllegalArgumentException iae) {\n          // Provide more explanation for user-facing message\n          String type \u003d iae instanceof NumberFormatException ? \"decimal\" \n                                                          : \"octal or symbolic\";\n          \n          throw new IllegalArgumentException(\"Unable to parse \" + confUmask + \n                                              \" as \" + type + \" umask.\");\n        }\n      } \n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "934deda190138cfb031aac574cb3bd8d4cb21318": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6396.  Fix unhelpful exception message when unable to parse umask (jghoman)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@887472 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/09 4:46 PM",
      "commitName": "934deda190138cfb031aac574cb3bd8d4cb21318",
      "commitAuthor": "Jakob Homan",
      "commitDateOld": "18/09/09 5:26 PM",
      "commitNameOld": "6ef2552953322f086fa63a11385c55b36d124d0b",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 77.01,
      "commitsBetweenForRepo": 51,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,26 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n     // Attempt to pull value from configuration, trying new key first and then\n     // deprecated key, along with a warning, if not present\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n       if(confUmask !\u003d null) { // UMASK_LABEL is set\n-        if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n-          umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n-        else\n-          umask \u003d new UmaskParser(confUmask).getUMask();\n+        try {\n+          if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n+            umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n+          else\n+            umask \u003d new UmaskParser(confUmask).getUMask();\n+        } catch(IllegalArgumentException iae) {\n+          // Provide more explanation for user-facing message\n+          String type \u003d iae instanceof NumberFormatException ? \"decimal\" \n+                                                          : \"octal or symbolic\";\n+          \n+          throw new IllegalArgumentException(\"Unable to parse \" + confUmask + \n+                                              \" as \" + type + \" umask.\");\n+        }\n       } \n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // Attempt to pull value from configuration, trying new key first and then\n    // deprecated key, along with a warning, if not present\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      if(confUmask !\u003d null) { // UMASK_LABEL is set\n        try {\n          if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n            umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n          else\n            umask \u003d new UmaskParser(confUmask).getUMask();\n        } catch(IllegalArgumentException iae) {\n          // Provide more explanation for user-facing message\n          String type \u003d iae instanceof NumberFormatException ? \"decimal\" \n                                                          : \"octal or symbolic\";\n          \n          throw new IllegalArgumentException(\"Unable to parse \" + confUmask + \n                                              \" as \" + type + \" umask.\");\n        }\n      } \n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "3617ed0badf8b16b4de56eabd950df7cf0986593": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6246. Add backward compatibility support to use deprecated decimal umask from old configuration. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@814080 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/09/09 4:28 PM",
      "commitName": "3617ed0badf8b16b4de56eabd950df7cf0986593",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "08/09/09 12:08 PM",
      "commitNameOld": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
      "commitAuthorOld": "Suresh Srinivas",
      "daysBetweenCommits": 3.18,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n     \n     // Attempt to pull value from configuration, trying new key first and then\n     // deprecated key, along with a warning, if not present\n     if(conf !\u003d null) {\n       String confUmask \u003d conf.get(UMASK_LABEL);\n       if(confUmask !\u003d null) { // UMASK_LABEL is set\n-        umask \u003d new UmaskParser(confUmask).getUMask();\n-      } else { // check for deprecated key label\n-        int oldStyleValue \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n-        if(oldStyleValue !\u003d Integer.MIN_VALUE) { // Property was set with old key\n-          LOG.warn(DEPRECATED_UMASK_LABEL + \" configuration key is deprecated. \" +\n-              \"Convert to \" + UMASK_LABEL + \", using octal or symbolic umask \" +\n-              \"specifications.\");\n-          umask \u003d oldStyleValue;\n-        }\n-      }\n+        if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n+          umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n+        else\n+          umask \u003d new UmaskParser(confUmask).getUMask();\n+      } \n     }\n     \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // Attempt to pull value from configuration, trying new key first and then\n    // deprecated key, along with a warning, if not present\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      if(confUmask !\u003d null) { // UMASK_LABEL is set\n        if(conf.deprecatedKeyWasSet(DEPRECATED_UMASK_LABEL)) \n          umask \u003d Integer.parseInt(confUmask); // Evaluate as decimal value\n        else\n          umask \u003d new UmaskParser(confUmask).getUMask();\n      } \n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "cdbb724edbe093a02d4e2c24523001dcdff0ffd5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6234. Add new option dfs.umaskmode to set umask in configuration to use octal or symbolic instead of decimal. Contributed by Jakob Homan.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@812652 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/09/09 12:08 PM",
      "commitName": "cdbb724edbe093a02d4e2c24523001dcdff0ffd5",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 112.62,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,22 @@\n   public static FsPermission getUMask(Configuration conf) {\n     int umask \u003d DEFAULT_UMASK;\n-    if (conf !\u003d null) {\n-      umask \u003d conf.getInt(UMASK_LABEL, DEFAULT_UMASK);\n+    \n+    // Attempt to pull value from configuration, trying new key first and then\n+    // deprecated key, along with a warning, if not present\n+    if(conf !\u003d null) {\n+      String confUmask \u003d conf.get(UMASK_LABEL);\n+      if(confUmask !\u003d null) { // UMASK_LABEL is set\n+        umask \u003d new UmaskParser(confUmask).getUMask();\n+      } else { // check for deprecated key label\n+        int oldStyleValue \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n+        if(oldStyleValue !\u003d Integer.MIN_VALUE) { // Property was set with old key\n+          LOG.warn(DEPRECATED_UMASK_LABEL + \" configuration key is deprecated. \" +\n+              \"Convert to \" + UMASK_LABEL + \", using octal or symbolic umask \" +\n+              \"specifications.\");\n+          umask \u003d oldStyleValue;\n+        }\n+      }\n     }\n+    \n     return new FsPermission((short)umask);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    \n    // Attempt to pull value from configuration, trying new key first and then\n    // deprecated key, along with a warning, if not present\n    if(conf !\u003d null) {\n      String confUmask \u003d conf.get(UMASK_LABEL);\n      if(confUmask !\u003d null) { // UMASK_LABEL is set\n        umask \u003d new UmaskParser(confUmask).getUMask();\n      } else { // check for deprecated key label\n        int oldStyleValue \u003d conf.getInt(DEPRECATED_UMASK_LABEL, Integer.MIN_VALUE);\n        if(oldStyleValue !\u003d Integer.MIN_VALUE) { // Property was set with old key\n          LOG.warn(DEPRECATED_UMASK_LABEL + \" configuration key is deprecated. \" +\n              \"Convert to \" + UMASK_LABEL + \", using octal or symbolic umask \" +\n              \"specifications.\");\n          umask \u003d oldStyleValue;\n        }\n      }\n    }\n    \n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,7 @@\n+  public static FsPermission getUMask(Configuration conf) {\n+    int umask \u003d DEFAULT_UMASK;\n+    if (conf !\u003d null) {\n+      umask \u003d conf.getInt(UMASK_LABEL, DEFAULT_UMASK);\n+    }\n+    return new FsPermission((short)umask);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static FsPermission getUMask(Configuration conf) {\n    int umask \u003d DEFAULT_UMASK;\n    if (conf !\u003d null) {\n      umask \u003d conf.getInt(UMASK_LABEL, DEFAULT_UMASK);\n    }\n    return new FsPermission((short)umask);\n  }",
      "path": "src/java/org/apache/hadoop/fs/permission/FsPermission.java"
    }
  }
}