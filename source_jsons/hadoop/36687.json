{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CapacitySchedulerInfo.java",
  "functionName": "getQueues",
  "functionId": "getQueues___cs-CapacityScheduler__parent-CSQueue",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
  "functionStartLine": 143,
  "functionEndLine": 175,
  "numCommitsSeen": 25,
  "timeTaken": 6914,
  "changeHistory": [
    "9a2e43e29e14905d98edd8512d24363dec407634",
    "ca8106d2dd03458944303d93679daa03b1d82ad5",
    "4337b263aa23464a01c316336db2319e2858a2b3",
    "0e85044e26da698c45185585310ae0e99448cd80",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1f4197984cc4c0f9850810d1756254f9f12723f9",
    "4404f20671048ca4066a74094cb0961d664c5330",
    "f025652fdafae4d385d4174f48cb4246d07caa3b",
    "0ea8570be578be60e2f32849900a1c50506d78d3"
  ],
  "changeHistoryShort": {
    "9a2e43e29e14905d98edd8512d24363dec407634": "Ymultichange(Yparameterchange,Ybodychange)",
    "ca8106d2dd03458944303d93679daa03b1d82ad5": "Ybodychange",
    "4337b263aa23464a01c316336db2319e2858a2b3": "Ymultichange(Yparameterchange,Ybodychange)",
    "0e85044e26da698c45185585310ae0e99448cd80": "Ymultichange(Yparameterchange,Ybodychange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1f4197984cc4c0f9850810d1756254f9f12723f9": "Ymultichange(Yreturntypechange,Ybodychange)",
    "4404f20671048ca4066a74094cb0961d664c5330": "Ybodychange",
    "f025652fdafae4d385d4174f48cb4246d07caa3b": "Ybodychange",
    "0ea8570be578be60e2f32849900a1c50506d78d3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9a2e43e29e14905d98edd8512d24363dec407634": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-9937. Add missing queue configs in RMWebService#CapacitySchedulerQueueInfo. Contributed by Prabhu Joseph.\n",
      "commitDate": "30/10/19 12:04 PM",
      "commitName": "9a2e43e29e14905d98edd8512d24363dec407634",
      "commitAuthor": "Sunil G",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-9937. Add missing queue configs in RMWebService#CapacitySchedulerQueueInfo. Contributed by Prabhu Joseph.\n",
          "commitDate": "30/10/19 12:04 PM",
          "commitName": "9a2e43e29e14905d98edd8512d24363dec407634",
          "commitAuthor": "Sunil G",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "d52627a7cbddfd981db973e223aefffde1ebf82d",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 691.67,
          "commitsBetweenForRepo": 5727,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(\n+      CapacityScheduler cs, CSQueue parent) {\n     CapacitySchedulerQueueInfoList queuesInfo \u003d\n         new CapacitySchedulerQueueInfoList();\n     // JAXB marashalling leads to situation where the \"type\" field injected\n     // for JSON changes from string to array depending on order of printing\n     // Issue gets fixed if all the leaf queues are marshalled before the\n     // non-leaf queues. See YARN-4785 for more details.\n     List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n     List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n     List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : parent.getChildQueues()) {\n       if (queue instanceof LeafQueue) {\n         childLeafQueues.add(queue);\n       } else {\n         childNonLeafQueues.add(queue);\n       }\n     }\n     childQueues.addAll(childLeafQueues);\n     childQueues.addAll(childNonLeafQueues);\n \n     for (CSQueue queue : childQueues) {\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n-        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n+        info \u003d new CapacitySchedulerLeafQueueInfo(cs, (LeafQueue) queue);\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.queues \u003d getQueues(queue);\n+        info \u003d new CapacitySchedulerQueueInfo(cs, queue);\n+        info.queues \u003d getQueues(cs, queue);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(\n      CapacityScheduler cs, CSQueue parent) {\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    // JAXB marashalling leads to situation where the \"type\" field injected\n    // for JSON changes from string to array depending on order of printing\n    // Issue gets fixed if all the leaf queues are marshalled before the\n    // non-leaf queues. See YARN-4785 for more details.\n    List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : parent.getChildQueues()) {\n      if (queue instanceof LeafQueue) {\n        childLeafQueues.add(queue);\n      } else {\n        childNonLeafQueues.add(queue);\n      }\n    }\n    childQueues.addAll(childLeafQueues);\n    childQueues.addAll(childNonLeafQueues);\n\n    for (CSQueue queue : childQueues) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo(cs, (LeafQueue) queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(cs, queue);\n        info.queues \u003d getQueues(cs, queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {
            "oldValue": "[parent-CSQueue]",
            "newValue": "[cs-CapacityScheduler, parent-CSQueue]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-9937. Add missing queue configs in RMWebService#CapacitySchedulerQueueInfo. Contributed by Prabhu Joseph.\n",
          "commitDate": "30/10/19 12:04 PM",
          "commitName": "9a2e43e29e14905d98edd8512d24363dec407634",
          "commitAuthor": "Sunil G",
          "commitDateOld": "07/12/17 6:56 PM",
          "commitNameOld": "d52627a7cbddfd981db973e223aefffde1ebf82d",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 691.67,
          "commitsBetweenForRepo": 5727,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,32 +1,33 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(\n+      CapacityScheduler cs, CSQueue parent) {\n     CapacitySchedulerQueueInfoList queuesInfo \u003d\n         new CapacitySchedulerQueueInfoList();\n     // JAXB marashalling leads to situation where the \"type\" field injected\n     // for JSON changes from string to array depending on order of printing\n     // Issue gets fixed if all the leaf queues are marshalled before the\n     // non-leaf queues. See YARN-4785 for more details.\n     List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n     List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n     List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n     for (CSQueue queue : parent.getChildQueues()) {\n       if (queue instanceof LeafQueue) {\n         childLeafQueues.add(queue);\n       } else {\n         childNonLeafQueues.add(queue);\n       }\n     }\n     childQueues.addAll(childLeafQueues);\n     childQueues.addAll(childNonLeafQueues);\n \n     for (CSQueue queue : childQueues) {\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n-        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n+        info \u003d new CapacitySchedulerLeafQueueInfo(cs, (LeafQueue) queue);\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.queues \u003d getQueues(queue);\n+        info \u003d new CapacitySchedulerQueueInfo(cs, queue);\n+        info.queues \u003d getQueues(cs, queue);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(\n      CapacityScheduler cs, CSQueue parent) {\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    // JAXB marashalling leads to situation where the \"type\" field injected\n    // for JSON changes from string to array depending on order of printing\n    // Issue gets fixed if all the leaf queues are marshalled before the\n    // non-leaf queues. See YARN-4785 for more details.\n    List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : parent.getChildQueues()) {\n      if (queue instanceof LeafQueue) {\n        childLeafQueues.add(queue);\n      } else {\n        childNonLeafQueues.add(queue);\n      }\n    }\n    childQueues.addAll(childLeafQueues);\n    childQueues.addAll(childNonLeafQueues);\n\n    for (CSQueue queue : childQueues) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo(cs, (LeafQueue) queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(cs, queue);\n        info.queues \u003d getQueues(cs, queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "ca8106d2dd03458944303d93679daa03b1d82ad5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4785. inconsistent value type of the type field for LeafQueueInfo in response of RM REST API.\n",
      "commitDate": "17/03/16 9:04 AM",
      "commitName": "ca8106d2dd03458944303d93679daa03b1d82ad5",
      "commitAuthor": "Junping Du",
      "commitDateOld": "17/01/16 7:11 PM",
      "commitNameOld": "b08ecf5c7589b055e93b2907413213f36097724d",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 59.54,
      "commitsBetweenForRepo": 408,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,32 @@\n   protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n-    CSQueue parentQueue \u003d parent;\n     CapacitySchedulerQueueInfoList queuesInfo \u003d\n         new CapacitySchedulerQueueInfoList();\n-    for (CSQueue queue : parentQueue.getChildQueues()) {\n+    // JAXB marashalling leads to situation where the \"type\" field injected\n+    // for JSON changes from string to array depending on order of printing\n+    // Issue gets fixed if all the leaf queues are marshalled before the\n+    // non-leaf queues. See YARN-4785 for more details.\n+    List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n+    List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n+    List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n+    for (CSQueue queue : parent.getChildQueues()) {\n+      if (queue instanceof LeafQueue) {\n+        childLeafQueues.add(queue);\n+      } else {\n+        childNonLeafQueues.add(queue);\n+      }\n+    }\n+    childQueues.addAll(childLeafQueues);\n+    childQueues.addAll(childNonLeafQueues);\n+\n+    for (CSQueue queue : childQueues) {\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n-        info \u003d\n-            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n+        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n       } else {\n         info \u003d new CapacitySchedulerQueueInfo(queue);\n         info.queues \u003d getQueues(queue);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    // JAXB marashalling leads to situation where the \"type\" field injected\n    // for JSON changes from string to array depending on order of printing\n    // Issue gets fixed if all the leaf queues are marshalled before the\n    // non-leaf queues. See YARN-4785 for more details.\n    List\u003cCSQueue\u003e childQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childLeafQueues \u003d new ArrayList\u003c\u003e();\n    List\u003cCSQueue\u003e childNonLeafQueues \u003d new ArrayList\u003c\u003e();\n    for (CSQueue queue : parent.getChildQueues()) {\n      if (queue instanceof LeafQueue) {\n        childLeafQueues.add(queue);\n      } else {\n        childNonLeafQueues.add(queue);\n      }\n    }\n    childQueues.addAll(childLeafQueues);\n    childQueues.addAll(childNonLeafQueues);\n\n    for (CSQueue queue : childQueues) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
      "extendedDetails": {}
    },
    "4337b263aa23464a01c316336db2319e2858a2b3": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
      "commitDate": "16/10/15 3:06 PM",
      "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
          "commitDate": "16/10/15 3:06 PM",
          "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "13/05/15 5:00 PM",
          "commitNameOld": "0e85044e26da698c45185585310ae0e99448cd80",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 155.92,
          "commitsBetweenForRepo": 1228,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,17 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n-      RMNodeLabel nodeLabel) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n     CapacitySchedulerQueueInfoList queuesInfo \u003d\n         new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n-      if (nodeLabel.getIsExclusive()\n-          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n-              .getLabelName())) {\n-        // Skip displaying the hierarchy for the queues for which the exclusive\n-        // labels are not accessible\n-        continue;\n-      }\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n         info \u003d\n-            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n-                nodeLabel.getLabelName());\n+            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n-        info.queues \u003d getQueues(queue, nodeLabel);\n+        info \u003d new CapacitySchedulerQueueInfo(queue);\n+        info.queues \u003d getQueues(queue);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d\n            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {
            "oldValue": "[parent-CSQueue, nodeLabel-RMNodeLabel]",
            "newValue": "[parent-CSQueue]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4162. CapacityScheduler: Add resource usage by partition and queue capacity by partition to REST API. (Naganarasimha G R via wangda)\n",
          "commitDate": "16/10/15 3:06 PM",
          "commitName": "4337b263aa23464a01c316336db2319e2858a2b3",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "13/05/15 5:00 PM",
          "commitNameOld": "0e85044e26da698c45185585310ae0e99448cd80",
          "commitAuthorOld": "Wangda Tan",
          "daysBetweenCommits": 155.92,
          "commitsBetweenForRepo": 1228,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,26 +1,17 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n-      RMNodeLabel nodeLabel) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n     CapacitySchedulerQueueInfoList queuesInfo \u003d\n         new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n-      if (nodeLabel.getIsExclusive()\n-          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n-              .getLabelName())) {\n-        // Skip displaying the hierarchy for the queues for which the exclusive\n-        // labels are not accessible\n-        continue;\n-      }\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n         info \u003d\n-            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n-                nodeLabel.getLabelName());\n+            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n-        info.queues \u003d getQueues(queue, nodeLabel);\n+        info \u003d new CapacitySchedulerQueueInfo(queue);\n+        info.queues \u003d getQueues(queue);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d\n            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "0e85044e26da698c45185585310ae0e99448cd80": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3362. Add node label usage in RM CapacityScheduler web UI. (Naganarasimha G R via wangda)\n",
      "commitDate": "13/05/15 5:00 PM",
      "commitName": "0e85044e26da698c45185585310ae0e99448cd80",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3362. Add node label usage in RM CapacityScheduler web UI. (Naganarasimha G R via wangda)\n",
          "commitDate": "13/05/15 5:00 PM",
          "commitName": "0e85044e26da698c45185585310ae0e99448cd80",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/04/15 11:38 PM",
          "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 33.72,
          "commitsBetweenForRepo": 362,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,26 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n+      RMNodeLabel nodeLabel) {\n     CSQueue parentQueue \u003d parent;\n-    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n+    CapacitySchedulerQueueInfoList queuesInfo \u003d\n+        new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n+      if (nodeLabel.getIsExclusive()\n+          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n+              .getLabelName())) {\n+        // Skip displaying the hierarchy for the queues for which the exclusive\n+        // labels are not accessible\n+        continue;\n+      }\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n-        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n+        info \u003d\n+            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n+                nodeLabel.getLabelName());\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.queues \u003d getQueues(queue);\n+        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n+        info.queues \u003d getQueues(queue, nodeLabel);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n      RMNodeLabel nodeLabel) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      if (nodeLabel.getIsExclusive()\n          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n              .getLabelName())) {\n        // Skip displaying the hierarchy for the queues for which the exclusive\n        // labels are not accessible\n        continue;\n      }\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d\n            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n                nodeLabel.getLabelName());\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n        info.queues \u003d getQueues(queue, nodeLabel);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {
            "oldValue": "[parent-CSQueue]",
            "newValue": "[parent-CSQueue, nodeLabel-RMNodeLabel]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3362. Add node label usage in RM CapacityScheduler web UI. (Naganarasimha G R via wangda)\n",
          "commitDate": "13/05/15 5:00 PM",
          "commitName": "0e85044e26da698c45185585310ae0e99448cd80",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "09/04/15 11:38 PM",
          "commitNameOld": "afa5d4715a3aea2a6e93380b014c7bb8f0880383",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 33.72,
          "commitsBetweenForRepo": 362,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,26 @@\n-  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n+      RMNodeLabel nodeLabel) {\n     CSQueue parentQueue \u003d parent;\n-    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n+    CapacitySchedulerQueueInfoList queuesInfo \u003d\n+        new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n+      if (nodeLabel.getIsExclusive()\n+          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n+              .getLabelName())) {\n+        // Skip displaying the hierarchy for the queues for which the exclusive\n+        // labels are not accessible\n+        continue;\n+      }\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n-        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n+        info \u003d\n+            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n+                nodeLabel.getLabelName());\n       } else {\n-        info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.queues \u003d getQueues(queue);\n+        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n+        info.queues \u003d getQueues(queue, nodeLabel);\n       }\n       queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent,\n      RMNodeLabel nodeLabel) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d\n        new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      if (nodeLabel.getIsExclusive()\n          \u0026\u0026 !((AbstractCSQueue) queue).accessibleToPartition(nodeLabel\n              .getLabelName())) {\n        // Skip displaying the hierarchy for the queues for which the exclusive\n        // labels are not accessible\n        continue;\n      }\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d\n            new CapacitySchedulerLeafQueueInfo((LeafQueue) queue,\n                nodeLabel.getLabelName());\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue, nodeLabel.getLabelName());\n        info.queues \u003d getQueues(queue, nodeLabel);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java"
      }
    },
    "1f4197984cc4c0f9850810d1756254f9f12723f9": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "MAPREDUCE-4020. Web services returns incorrect JSON for deep queue tree (Anupam Seth via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309133 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 1:39 PM",
      "commitName": "1f4197984cc4c0f9850810d1756254f9f12723f9",
      "commitAuthor": "Thomas Graves",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "MAPREDUCE-4020. Web services returns incorrect JSON for deep queue tree (Anupam Seth via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309133 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/04/12 1:39 PM",
          "commitName": "1f4197984cc4c0f9850810d1756254f9f12723f9",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "05/01/12 11:50 AM",
          "commitNameOld": "4404f20671048ca4066a74094cb0961d664c5330",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 89.03,
          "commitsBetweenForRepo": 672,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n-    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n+    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n         info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n       } else {\n         info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.subQueues \u003d getQueues(queue);\n+        info.queues \u003d getQueues(queue);\n       }\n-      queuesInfo.add(info);\n+      queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {
            "oldValue": "ArrayList\u003cCapacitySchedulerQueueInfo\u003e",
            "newValue": "CapacitySchedulerQueueInfoList"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "MAPREDUCE-4020. Web services returns incorrect JSON for deep queue tree (Anupam Seth via tgraves)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1309133 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/04/12 1:39 PM",
          "commitName": "1f4197984cc4c0f9850810d1756254f9f12723f9",
          "commitAuthor": "Thomas Graves",
          "commitDateOld": "05/01/12 11:50 AM",
          "commitNameOld": "4404f20671048ca4066a74094cb0961d664c5330",
          "commitAuthorOld": "Arun Murthy",
          "daysBetweenCommits": 89.03,
          "commitsBetweenForRepo": 672,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,15 @@\n-  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n+  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n-    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n+    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n       CapacitySchedulerQueueInfo info;\n       if (queue instanceof LeafQueue) {\n         info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n       } else {\n         info \u003d new CapacitySchedulerQueueInfo(queue);\n-        info.subQueues \u003d getQueues(queue);\n+        info.queues \u003d getQueues(queue);\n       }\n-      queuesInfo.add(info);\n+      queuesInfo.addToQueueInfoList(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected CapacitySchedulerQueueInfoList getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    CapacitySchedulerQueueInfoList queuesInfo \u003d new CapacitySchedulerQueueInfoList();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.queues \u003d getQueues(queue);\n      }\n      queuesInfo.addToQueueInfoList(info);\n    }\n    return queuesInfo;\n  }",
          "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
          "extendedDetails": {}
        }
      ]
    },
    "4404f20671048ca4066a74094cb0961d664c5330": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3326. Added detailed information about queue\u0027s to the CapacityScheduler web-ui. Contributed by Jason Lowe. \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1227788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/01/12 11:50 AM",
      "commitName": "4404f20671048ca4066a74094cb0961d664c5330",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "29/12/11 12:06 AM",
      "commitNameOld": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 7.49,
      "commitsBetweenForRepo": 29,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,15 @@\n   protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n     ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n-      float usedCapacity \u003d queue.getUsedCapacity() * 100;\n-      float capacity \u003d queue.getCapacity() * 100;\n-      String queueName \u003d queue.getQueueName();\n-      String queuePath \u003d queue.getQueuePath();\n-      float max \u003d queue.getMaximumCapacity();\n-      if (max \u003c EPSILON || max \u003e 1f)\n-        max \u003d 1f;\n-      float maxCapacity \u003d max * 100;\n-      QueueState state \u003d queue.getState();\n-      CapacitySchedulerQueueInfo info \u003d new CapacitySchedulerQueueInfo(\n-          capacity, usedCapacity, maxCapacity, queueName, state, queuePath);\n-\n-      if (queue instanceof ParentQueue) {\n-        info.isParent \u003d true;\n-        info.queue \u003d queue;\n+      CapacitySchedulerQueueInfo info;\n+      if (queue instanceof LeafQueue) {\n+        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n+      } else {\n+        info \u003d new CapacitySchedulerQueueInfo(queue);\n         info.subQueues \u003d getQueues(queue);\n       }\n       queuesInfo.add(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      CapacitySchedulerQueueInfo info;\n      if (queue instanceof LeafQueue) {\n        info \u003d new CapacitySchedulerLeafQueueInfo((LeafQueue)queue);\n      } else {\n        info \u003d new CapacitySchedulerQueueInfo(queue);\n        info.subQueues \u003d getQueues(queue);\n      }\n      queuesInfo.add(info);\n    }\n    return queuesInfo;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
      "extendedDetails": {}
    },
    "f025652fdafae4d385d4174f48cb4246d07caa3b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3547. Added a bunch of unit tests for the the RM/NM webservices. Contributed by Thomas Graves.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1225463 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/12/11 12:06 AM",
      "commitName": "f025652fdafae4d385d4174f48cb4246d07caa3b",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "13/12/11 3:05 PM",
      "commitNameOld": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.38,
      "commitsBetweenForRepo": 69,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n     CSQueue parentQueue \u003d parent;\n     ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n     for (CSQueue queue : parentQueue.getChildQueues()) {\n       float usedCapacity \u003d queue.getUsedCapacity() * 100;\n       float capacity \u003d queue.getCapacity() * 100;\n       String queueName \u003d queue.getQueueName();\n       String queuePath \u003d queue.getQueuePath();\n       float max \u003d queue.getMaximumCapacity();\n       if (max \u003c EPSILON || max \u003e 1f)\n         max \u003d 1f;\n       float maxCapacity \u003d max * 100;\n-      String state \u003d queue.getState().toString();\n+      QueueState state \u003d queue.getState();\n       CapacitySchedulerQueueInfo info \u003d new CapacitySchedulerQueueInfo(\n           capacity, usedCapacity, maxCapacity, queueName, state, queuePath);\n \n       if (queue instanceof ParentQueue) {\n         info.isParent \u003d true;\n         info.queue \u003d queue;\n         info.subQueues \u003d getQueues(queue);\n       }\n       queuesInfo.add(info);\n     }\n     return queuesInfo;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      float usedCapacity \u003d queue.getUsedCapacity() * 100;\n      float capacity \u003d queue.getCapacity() * 100;\n      String queueName \u003d queue.getQueueName();\n      String queuePath \u003d queue.getQueuePath();\n      float max \u003d queue.getMaximumCapacity();\n      if (max \u003c EPSILON || max \u003e 1f)\n        max \u003d 1f;\n      float maxCapacity \u003d max * 100;\n      QueueState state \u003d queue.getState();\n      CapacitySchedulerQueueInfo info \u003d new CapacitySchedulerQueueInfo(\n          capacity, usedCapacity, maxCapacity, queueName, state, queuePath);\n\n      if (queue instanceof ParentQueue) {\n        info.isParent \u003d true;\n        info.queue \u003d queue;\n        info.subQueues \u003d getQueues(queue);\n      }\n      queuesInfo.add(info);\n    }\n    return queuesInfo;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java",
      "extendedDetails": {}
    },
    "0ea8570be578be60e2f32849900a1c50506d78d3": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2863. Support web services for YARN and MR components. (Thomas Graves via vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1213975 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "13/12/11 3:05 PM",
      "commitName": "0ea8570be578be60e2f32849900a1c50506d78d3",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,25 @@\n+  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n+    CSQueue parentQueue \u003d parent;\n+    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n+    for (CSQueue queue : parentQueue.getChildQueues()) {\n+      float usedCapacity \u003d queue.getUsedCapacity() * 100;\n+      float capacity \u003d queue.getCapacity() * 100;\n+      String queueName \u003d queue.getQueueName();\n+      String queuePath \u003d queue.getQueuePath();\n+      float max \u003d queue.getMaximumCapacity();\n+      if (max \u003c EPSILON || max \u003e 1f)\n+        max \u003d 1f;\n+      float maxCapacity \u003d max * 100;\n+      String state \u003d queue.getState().toString();\n+      CapacitySchedulerQueueInfo info \u003d new CapacitySchedulerQueueInfo(\n+          capacity, usedCapacity, maxCapacity, queueName, state, queuePath);\n+\n+      if (queue instanceof ParentQueue) {\n+        info.isParent \u003d true;\n+        info.queue \u003d queue;\n+        info.subQueues \u003d getQueues(queue);\n+      }\n+      queuesInfo.add(info);\n+    }\n+    return queuesInfo;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ArrayList\u003cCapacitySchedulerQueueInfo\u003e getQueues(CSQueue parent) {\n    CSQueue parentQueue \u003d parent;\n    ArrayList\u003cCapacitySchedulerQueueInfo\u003e queuesInfo \u003d new ArrayList\u003cCapacitySchedulerQueueInfo\u003e();\n    for (CSQueue queue : parentQueue.getChildQueues()) {\n      float usedCapacity \u003d queue.getUsedCapacity() * 100;\n      float capacity \u003d queue.getCapacity() * 100;\n      String queueName \u003d queue.getQueueName();\n      String queuePath \u003d queue.getQueuePath();\n      float max \u003d queue.getMaximumCapacity();\n      if (max \u003c EPSILON || max \u003e 1f)\n        max \u003d 1f;\n      float maxCapacity \u003d max * 100;\n      String state \u003d queue.getState().toString();\n      CapacitySchedulerQueueInfo info \u003d new CapacitySchedulerQueueInfo(\n          capacity, usedCapacity, maxCapacity, queueName, state, queuePath);\n\n      if (queue instanceof ParentQueue) {\n        info.isParent \u003d true;\n        info.queue \u003d queue;\n        info.subQueues \u003d getQueues(queue);\n      }\n      queuesInfo.add(info);\n    }\n    return queuesInfo;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/webapp/dao/CapacitySchedulerInfo.java"
    }
  }
}