{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineWriter.java",
  "functionName": "doPostingObject",
  "functionId": "doPostingObject___object-Object__path-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
  "functionStartLine": 146,
  "functionEndLine": 165,
  "numCommitsSeen": 37,
  "timeTaken": 4399,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "655110393bf90a7dac5d85f831ea225071f5f3c2",
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
    "882f2f04644a13cadb93070d5545f7a4f8691fde",
    "1d4612f5ad9678c952b416e798dccd20c88f96ef",
    "d78b452a4f413c6931a494c33df0666ce9b44973",
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885",
    "84425fb435cb603fd8adcc2f76631c0244175310",
    "e74e117ad3e0b6c0572913f602a28934f87bba70"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "655110393bf90a7dac5d85f831ea225071f5f3c2": "Ybodychange",
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec": "Ybodychange",
    "882f2f04644a13cadb93070d5545f7a4f8691fde": "Ymovefromfile",
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": "Ybodychange",
    "d78b452a4f413c6931a494c33df0666ce9b44973": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885": "Yfilerename",
    "84425fb435cb603fd8adcc2f76631c0244175310": "Yparameterchange",
    "e74e117ad3e0b6c0572913f602a28934f87bba70": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "03/03/19 11:59 PM",
      "commitNameOld": "bd8d299ded742813cabd4b4e7ce1e33e0d1f9509",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 11.64,
      "commitsBetweenForRepo": 118,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,20 @@\n   public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n     if (path \u003d\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"POST to \" + resURI);\n-      }\n+      LOG.debug(\"POST to {}\", resURI);\n       ClientResponse r \u003d webResource.accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .post(ClientResponse.class, object);\n       r.bufferEntity();\n       return r;\n     } else if (path.equals(\"domain\")) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"PUT to \" + resURI +\"/\" + path);\n-      }\n+      LOG.debug(\"PUT to {}/{}\", resURI, path);\n       ClientResponse r \u003d webResource.path(path).accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .put(ClientResponse.class, object);\n       r.bufferEntity();\n       return r;\n     } else {\n       throw new YarnRuntimeException(\"Unknown resource type\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path \u003d\u003d null) {\n      LOG.debug(\"POST to {}\", resURI);\n      ClientResponse r \u003d webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n      r.bufferEntity();\n      return r;\n    } else if (path.equals(\"domain\")) {\n      LOG.debug(\"PUT to {}/{}\", resURI, path);\n      ClientResponse r \u003d webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n      r.bufferEntity();\n      return r;\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
      "extendedDetails": {}
    },
    "655110393bf90a7dac5d85f831ea225071f5f3c2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6797. TimelineWriter does not fully consume the POST response. Contributed by Jason Lowe\n",
      "commitDate": "12/07/17 1:52 PM",
      "commitName": "655110393bf90a7dac5d85f831ea225071f5f3c2",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "20/06/16 4:05 PM",
      "commitNameOld": "5d58858bb6dfc07272ef099d60ca7cfb3b04423c",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 386.91,
      "commitsBetweenForRepo": 2457,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,24 @@\n   public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n     if (path \u003d\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"POST to \" + resURI);\n       }\n-      return webResource.accept(MediaType.APPLICATION_JSON)\n+      ClientResponse r \u003d webResource.accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .post(ClientResponse.class, object);\n+      r.bufferEntity();\n+      return r;\n     } else if (path.equals(\"domain\")) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"PUT to \" + resURI +\"/\" + path);\n       }\n-      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n+      ClientResponse r \u003d webResource.path(path).accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .put(ClientResponse.class, object);\n+      r.bufferEntity();\n+      return r;\n     } else {\n       throw new YarnRuntimeException(\"Unknown resource type\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"POST to \" + resURI);\n      }\n      ClientResponse r \u003d webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n      r.bufferEntity();\n      return r;\n    } else if (path.equals(\"domain\")) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PUT to \" + resURI +\"/\" + path);\n      }\n      ClientResponse r \u003d webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n      r.bufferEntity();\n      return r;\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
      "extendedDetails": {}
    },
    "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4696. Improving EntityGroupFSTimelineStore on exception handling, test setup, and concurrency. (Steve Loughran via gtcarrera9)\n",
      "commitDate": "10/03/16 10:51 AM",
      "commitName": "d49cfb350454c2dfa2f3eb70f79b6d5030ce7bec",
      "commitAuthor": "Li Lu",
      "commitDateOld": "23/12/15 5:26 AM",
      "commitNameOld": "882f2f04644a13cadb93070d5545f7a4f8691fde",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 78.23,
      "commitsBetweenForRepo": 495,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,20 @@\n   public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n     if (path \u003d\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"POST to \" + resURI);\n+      }\n       return webResource.accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .post(ClientResponse.class, object);\n     } else if (path.equals(\"domain\")) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"PUT to \" + resURI +\"/\" + path);\n+      }\n       return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .put(ClientResponse.class, object);\n     } else {\n       throw new YarnRuntimeException(\"Unknown resource type\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path \u003d\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"POST to \" + resURI);\n      }\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"PUT to \" + resURI +\"/\" + path);\n      }\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
      "extendedDetails": {}
    },
    "882f2f04644a13cadb93070d5545f7a4f8691fde": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-4234. New put APIs in TimelineClient for ats v1.5. Contributed by Xuan Gong.\n",
      "commitDate": "23/12/15 5:26 AM",
      "commitName": "882f2f04644a13cadb93070d5545f7a4f8691fde",
      "commitAuthor": "Junping Du",
      "commitDateOld": "22/12/15 7:42 PM",
      "commitNameOld": "8c180a13c82ab9d60f595e6942e35d51024dab53",
      "commitAuthorOld": "rohithsharmaks",
      "daysBetweenCommits": 0.41,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path \u003d\u003d null) {\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineWriter.java",
        "oldMethodName": "doPostingObject",
        "newMethodName": "doPostingObject"
      }
    },
    "1d4612f5ad9678c952b416e798dccd20c88f96ef": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2629. Made the distributed shell use the domain-based timeline ACLs. Contributed by Zhijie Shen.\n",
      "commitDate": "09/10/14 12:59 PM",
      "commitName": "1d4612f5ad9678c952b416e798dccd20c88f96ef",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "24/09/14 11:27 AM",
      "commitNameOld": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 15.06,
      "commitsBetweenForRepo": 165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,14 @@\n   public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n-    if (path !\u003d null) {\n-      webResource.path(path);\n-    }\n     if (path \u003d\u003d null) {\n       return webResource.accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .post(ClientResponse.class, object);\n     } else if (path.equals(\"domain\")) {\n       return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n           .type(MediaType.APPLICATION_JSON)\n           .put(ClientResponse.class, object);\n     } else {\n       throw new YarnRuntimeException(\"Unknown resource type\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path \u003d\u003d null) {\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {}
    },
    "d78b452a4f413c6931a494c33df0666ce9b44973": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
      "commitDate": "24/09/14 11:27 AM",
      "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
          "commitDate": "24/09/14 11:27 AM",
          "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "20/08/14 10:05 AM",
          "commitNameOld": "e4539e88e388b7ff01a6acd0b1596a5a276d4478",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 330,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,17 @@\n-  public ClientResponse doPostingEntities(TimelineEntities entities) {\n+  public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n-    return webResource.accept(MediaType.APPLICATION_JSON)\n-        .type(MediaType.APPLICATION_JSON)\n-        .post(ClientResponse.class, entities);\n+    if (path !\u003d null) {\n+      webResource.path(path);\n+    }\n+    if (path \u003d\u003d null) {\n+      return webResource.accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .post(ClientResponse.class, object);\n+    } else if (path.equals(\"domain\")) {\n+      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .put(ClientResponse.class, object);\n+    } else {\n+      throw new YarnRuntimeException(\"Unknown resource type\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path !\u003d null) {\n      webResource.path(path);\n    }\n    if (path \u003d\u003d null) {\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {
            "oldValue": "doPostingEntities",
            "newValue": "doPostingObject"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
          "commitDate": "24/09/14 11:27 AM",
          "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "20/08/14 10:05 AM",
          "commitNameOld": "e4539e88e388b7ff01a6acd0b1596a5a276d4478",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 330,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,17 @@\n-  public ClientResponse doPostingEntities(TimelineEntities entities) {\n+  public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n-    return webResource.accept(MediaType.APPLICATION_JSON)\n-        .type(MediaType.APPLICATION_JSON)\n-        .post(ClientResponse.class, entities);\n+    if (path !\u003d null) {\n+      webResource.path(path);\n+    }\n+    if (path \u003d\u003d null) {\n+      return webResource.accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .post(ClientResponse.class, object);\n+    } else if (path.equals(\"domain\")) {\n+      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .put(ClientResponse.class, object);\n+    } else {\n+      throw new YarnRuntimeException(\"Unknown resource type\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path !\u003d null) {\n      webResource.path(path);\n    }\n    if (path \u003d\u003d null) {\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {
            "oldValue": "[entities-TimelineEntities]",
            "newValue": "[object-Object, path-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2102. Added the concept of a Timeline Domain to handle read/write ACLs on Timeline service event data. Contributed by Zhijie Shen.\n",
          "commitDate": "24/09/14 11:27 AM",
          "commitName": "d78b452a4f413c6931a494c33df0666ce9b44973",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "20/08/14 10:05 AM",
          "commitNameOld": "e4539e88e388b7ff01a6acd0b1596a5a276d4478",
          "commitAuthorOld": "Jian He",
          "daysBetweenCommits": 35.06,
          "commitsBetweenForRepo": 330,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,17 @@\n-  public ClientResponse doPostingEntities(TimelineEntities entities) {\n+  public ClientResponse doPostingObject(Object object, String path) {\n     WebResource webResource \u003d client.resource(resURI);\n-    return webResource.accept(MediaType.APPLICATION_JSON)\n-        .type(MediaType.APPLICATION_JSON)\n-        .post(ClientResponse.class, entities);\n+    if (path !\u003d null) {\n+      webResource.path(path);\n+    }\n+    if (path \u003d\u003d null) {\n+      return webResource.accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .post(ClientResponse.class, object);\n+    } else if (path.equals(\"domain\")) {\n+      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n+          .type(MediaType.APPLICATION_JSON)\n+          .put(ClientResponse.class, object);\n+    } else {\n+      throw new YarnRuntimeException(\"Unknown resource type\");\n+    }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ClientResponse doPostingObject(Object object, String path) {\n    WebResource webResource \u003d client.resource(resURI);\n    if (path !\u003d null) {\n      webResource.path(path);\n    }\n    if (path \u003d\u003d null) {\n      return webResource.accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .post(ClientResponse.class, object);\n    } else if (path.equals(\"domain\")) {\n      return webResource.path(path).accept(MediaType.APPLICATION_JSON)\n          .type(MediaType.APPLICATION_JSON)\n          .put(ClientResponse.class, object);\n    } else {\n      throw new YarnRuntimeException(\"Unknown resource type\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b47f65214c7a7b6ca8c77369ebc90dba67f9d885": {
      "type": "Yfilerename",
      "commitMessage": "YARN-2298. Move TimelineClient to yarn-common project (Contributed by Zhijie Shen)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616100 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/08/14 10:48 PM",
      "commitName": "b47f65214c7a7b6ca8c77369ebc90dba67f9d885",
      "commitAuthor": "Junping Du",
      "commitDateOld": "05/08/14 5:50 PM",
      "commitNameOld": "812ac91add512c518394178c5162720d61957e1f",
      "commitAuthorOld": "Brandon Li",
      "daysBetweenCommits": 0.21,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ClientResponse doPostingEntities(TimelineEntities entities) {\n    WebResource webResource \u003d client.resource(resURI);\n    return webResource.accept(MediaType.APPLICATION_JSON)\n        .type(MediaType.APPLICATION_JSON)\n        .post(ClientResponse.class, entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
      }
    },
    "84425fb435cb603fd8adcc2f76631c0244175310": {
      "type": "Yparameterchange",
      "commitMessage": "YARN-1687. Renamed user-facing records for the timeline-service to be simply named after \u0027timeline\u0027 instead of \u0027apptimeline\u0027. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1570922 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/02/14 12:55 PM",
      "commitName": "84425fb435cb603fd8adcc2f76631c0244175310",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "14/02/14 12:01 PM",
      "commitNameOld": "990cffdcfa9349fff0cee144b1d0e5267c40f63d",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 8.04,
      "commitsBetweenForRepo": 63,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n-  public ClientResponse doPostingEntities(ATSEntities entities) {\n+  public ClientResponse doPostingEntities(TimelineEntities entities) {\n     WebResource webResource \u003d client.resource(resURI);\n     return webResource.accept(MediaType.APPLICATION_JSON)\n         .type(MediaType.APPLICATION_JSON)\n         .post(ClientResponse.class, entities);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingEntities(TimelineEntities entities) {\n    WebResource webResource \u003d client.resource(resURI);\n    return webResource.accept(MediaType.APPLICATION_JSON)\n        .type(MediaType.APPLICATION_JSON)\n        .post(ClientResponse.class, entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java",
      "extendedDetails": {
        "oldValue": "[entities-ATSEntities]",
        "newValue": "[entities-TimelineEntities]"
      }
    },
    "e74e117ad3e0b6c0572913f602a28934f87bba70": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1637. Implemented a client library for Java users to post timeline entities and events. Contributed by Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566752 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/02/14 1:31 PM",
      "commitName": "e74e117ad3e0b6c0572913f602a28934f87bba70",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,6 @@\n+  public ClientResponse doPostingEntities(ATSEntities entities) {\n+    WebResource webResource \u003d client.resource(resURI);\n+    return webResource.accept(MediaType.APPLICATION_JSON)\n+        .type(MediaType.APPLICATION_JSON)\n+        .post(ClientResponse.class, entities);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ClientResponse doPostingEntities(ATSEntities entities) {\n    WebResource webResource \u003d client.resource(resURI);\n    return webResource.accept(MediaType.APPLICATION_JSON)\n        .type(MediaType.APPLICATION_JSON)\n        .post(ClientResponse.class, entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/TimelineClientImpl.java"
    }
  }
}