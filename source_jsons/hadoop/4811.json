{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileWithSnapshotFeature.java",
  "functionName": "cleanFile",
  "functionId": "cleanFile___reclaimContext-INode.ReclaimContext__file-INodeFile(modifiers-final)__snapshotId-int(modifiers-final)__priorSnapshotId-int__storagePolicyId-byte",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
  "functionStartLine": 122,
  "functionEndLine": 142,
  "numCommitsSeen": 90,
  "timeTaken": 5565,
  "changeHistory": [
    "b2c85db86c9a62b0a03ee87547265077f664970a",
    "4536399d47f6c061e149e2504600804a0f1e093d",
    "5dae97a584d30cef3e34141edfaca49c4ec57913",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823",
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a"
  ],
  "changeHistoryShort": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "4536399d47f6c061e149e2504600804a0f1e093d": "Ymultichange(Yparameterchange,Ybodychange)",
    "5dae97a584d30cef3e34141edfaca49c4ec57913": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": "Ymultichange(Yparameterchange,Ybodychange)",
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": "Ybodychange",
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b2c85db86c9a62b0a03ee87547265077f664970a": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
      "commitDate": "13/05/15 9:50 PM",
      "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/05/15 6:29 AM",
          "commitNameOld": "6d5da9484185ca9f585195d6da069b9cd5be4044",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 1.64,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n-  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n-      final INodeFile file, final int snapshotId,\n-      int priorSnapshotId) {\n+  public void cleanFile(INode.ReclaimContext reclaimContext,\n+      final INodeFile file, final int snapshotId, int priorSnapshotId,\n+      byte storagePolicyId) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n+      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n+          .getPolicy(storagePolicyId);\n+      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n       collectBlocksAndClear(reclaimContext, file);\n-      return new QuotaCounts.Builder().build();\n+      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n+      reclaimContext.quotaDelta().add(old.subtract(current));\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(reclaimContext,\n-          snapshotId, priorSnapshotId, file);\n+      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n+          file);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void cleanFile(INode.ReclaimContext reclaimContext,\n      final INodeFile file, final int snapshotId, int priorSnapshotId,\n      byte storagePolicyId) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n          .getPolicy(storagePolicyId);\n      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n      collectBlocksAndClear(reclaimContext, file);\n      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n      reclaimContext.quotaDelta().add(old.subtract(current));\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n          file);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[reclaimContext-INode.ReclaimContext, file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int]",
            "newValue": "[reclaimContext-INode.ReclaimContext, file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, storagePolicyId-byte]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/05/15 6:29 AM",
          "commitNameOld": "6d5da9484185ca9f585195d6da069b9cd5be4044",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 1.64,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n-  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n-      final INodeFile file, final int snapshotId,\n-      int priorSnapshotId) {\n+  public void cleanFile(INode.ReclaimContext reclaimContext,\n+      final INodeFile file, final int snapshotId, int priorSnapshotId,\n+      byte storagePolicyId) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n+      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n+          .getPolicy(storagePolicyId);\n+      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n       collectBlocksAndClear(reclaimContext, file);\n-      return new QuotaCounts.Builder().build();\n+      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n+      reclaimContext.quotaDelta().add(old.subtract(current));\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(reclaimContext,\n-          snapshotId, priorSnapshotId, file);\n+      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n+          file);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void cleanFile(INode.ReclaimContext reclaimContext,\n      final INodeFile file, final int snapshotId, int priorSnapshotId,\n      byte storagePolicyId) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n          .getPolicy(storagePolicyId);\n      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n      collectBlocksAndClear(reclaimContext, file);\n      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n      reclaimContext.quotaDelta().add(old.subtract(current));\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n          file);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "QuotaCounts",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7728. Avoid updating quota usage while loading edits. Contributed by Jing Zhao.\n",
          "commitDate": "13/05/15 9:50 PM",
          "commitName": "b2c85db86c9a62b0a03ee87547265077f664970a",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "12/05/15 6:29 AM",
          "commitNameOld": "6d5da9484185ca9f585195d6da069b9cd5be4044",
          "commitAuthorOld": "yliu",
          "daysBetweenCommits": 1.64,
          "commitsBetweenForRepo": 24,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,21 @@\n-  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n-      final INodeFile file, final int snapshotId,\n-      int priorSnapshotId) {\n+  public void cleanFile(INode.ReclaimContext reclaimContext,\n+      final INodeFile file, final int snapshotId, int priorSnapshotId,\n+      byte storagePolicyId) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n+      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n+          .getPolicy(storagePolicyId);\n+      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n       collectBlocksAndClear(reclaimContext, file);\n-      return new QuotaCounts.Builder().build();\n+      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n+      reclaimContext.quotaDelta().add(old.subtract(current));\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(reclaimContext,\n-          snapshotId, priorSnapshotId, file);\n+      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n+          file);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void cleanFile(INode.ReclaimContext reclaimContext,\n      final INodeFile file, final int snapshotId, int priorSnapshotId,\n      byte storagePolicyId) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      final BlockStoragePolicy policy \u003d reclaimContext.storagePolicySuite()\n          .getPolicy(storagePolicyId);\n      QuotaCounts old \u003d file.storagespaceConsumed(policy);\n      collectBlocksAndClear(reclaimContext, file);\n      QuotaCounts current \u003d file.storagespaceConsumed(policy);\n      reclaimContext.quotaDelta().add(old.subtract(current));\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      diffs.deleteSnapshotDiff(reclaimContext, snapshotId, priorSnapshotId,\n          file);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "4536399d47f6c061e149e2504600804a0f1e093d": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
      "commitDate": "09/05/15 10:51 PM",
      "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:09 PM",
          "commitNameOld": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n+  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n       final INodeFile file, final int snapshotId,\n-      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) {\n+      int priorSnapshotId) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n-      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n+      collectBlocksAndClear(reclaimContext, file);\n       return new QuotaCounts.Builder().build();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n-          collectedBlocks, removedINodes);\n+      return diffs.deleteSnapshotDiff(reclaimContext,\n+          snapshotId, priorSnapshotId, file);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n      final INodeFile file, final int snapshotId,\n      int priorSnapshotId) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(reclaimContext, file);\n      return new QuotaCounts.Builder().build();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(reclaimContext,\n          snapshotId, priorSnapshotId, file);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[bsps-BlockStoragePolicySuite(modifiers-final), file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[reclaimContext-INode.ReclaimContext, file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-8357. Consolidate parameters of INode.CleanSubtree() into a parameter objects. Contributed by Li Lu.\n",
          "commitDate": "09/05/15 10:51 PM",
          "commitName": "4536399d47f6c061e149e2504600804a0f1e093d",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "08/05/15 11:09 PM",
          "commitNameOld": "02a4a22b9c0e22c2e7dd6ec85edd5c5a167fe19f",
          "commitAuthorOld": "Haohui Mai",
          "daysBetweenCommits": 0.99,
          "commitsBetweenForRepo": 5,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n-  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n+  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n       final INodeFile file, final int snapshotId,\n-      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes) {\n+      int priorSnapshotId) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n-      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n+      collectBlocksAndClear(reclaimContext, file);\n       return new QuotaCounts.Builder().build();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n-          collectedBlocks, removedINodes);\n+      return diffs.deleteSnapshotDiff(reclaimContext,\n+          snapshotId, priorSnapshotId, file);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanFile(INode.ReclaimContext reclaimContext,\n      final INodeFile file, final int snapshotId,\n      int priorSnapshotId) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(reclaimContext, file);\n      return new QuotaCounts.Builder().build();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(reclaimContext,\n          snapshotId, priorSnapshotId, file);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "5dae97a584d30cef3e34141edfaca49c4ec57913": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
      "commitDate": "11/02/15 10:41 AM",
      "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n+  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n+      final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n-      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n-      return Quota.Counts.newInstance();\n+      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n+      return new QuotaCounts.Builder().build();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n+      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n           collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n      final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n      return new QuotaCounts.Builder().build();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]",
            "newValue": "[bsps-BlockStoragePolicySuite(modifiers-final), file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n+  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n+      final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n-      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n-      return Quota.Counts.newInstance();\n+      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n+      return new QuotaCounts.Builder().build();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n+      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n           collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n      final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n      return new QuotaCounts.Builder().build();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "Quota.Counts",
            "newValue": "QuotaCounts"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-7723. Quota By Storage Type namenode implemenation. (Contributed by Xiaoyu Yao)\n",
          "commitDate": "11/02/15 10:41 AM",
          "commitName": "5dae97a584d30cef3e34141edfaca49c4ec57913",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/02/15 11:51 AM",
          "commitNameOld": "1382ae525c67bf95d8f3a436b547dbc72cfbb177",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 2.95,
          "commitsBetweenForRepo": 40,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n-  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n+  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n+      final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n-      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n-      return Quota.Counts.newInstance();\n+      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n+      return new QuotaCounts.Builder().build();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n-      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n+      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n           collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public QuotaCounts cleanFile(final BlockStoragePolicySuite bsps,\n      final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(bsps, file, collectedBlocks, removedINodes);\n      return new QuotaCounts.Builder().build();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(bsps, snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e": {
      "type": "Ymultichange(Yparameterchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
      "commitDate": "02/02/15 4:32 PM",
      "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
      "commitAuthor": "Haohui Mai",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "13/01/15 12:24 AM",
          "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 20.67,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n   public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n       return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n-          collectedBlocks, removedINodes, countDiffChange);\n+          collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]",
            "newValue": "[file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final)]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "13/01/15 12:24 AM",
          "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 20.67,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n   public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n       return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n-          collectedBlocks, removedINodes, countDiffChange);\n+          collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[QuotaExceededException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6651. Deletion failure can leak inodes permanently. Contributed by Jing Zhao.\n",
          "commitDate": "02/02/15 4:32 PM",
          "commitName": "8cb473124c1cf1c6f68ead7bde06558ebf7ce47e",
          "commitAuthor": "Haohui Mai",
          "commitDateOld": "13/01/15 12:24 AM",
          "commitNameOld": "08ac06283a3e9bf0d49d873823aabd419b08e41f",
          "commitAuthorOld": "Konstantin V Shvachko",
          "daysBetweenCommits": 20.67,
          "commitsBetweenForRepo": 149,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,17 @@\n   public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n       int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n-      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n-      throws QuotaExceededException {\n+      final List\u003cINode\u003e removedINodes) {\n     if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n         file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n       priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n       return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n-          collectedBlocks, removedINodes, countDiffChange);\n+          collectedBlocks, removedINodes);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes) {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "70cff9e2f0c8f78c1dc54a064182971bb2106795": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/01/14 12:52 PM",
      "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n-      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n+  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n+      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n-    if (snapshot \u003d\u003d null) {\n+    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n-        file.recordModification(prior);\n+        file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n-      prior \u003d getDiffs().updatePrior(snapshot, prior);\n-      return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n-          removedINodes, countDiffChange);\n+      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n+      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n+          collectedBlocks, removedINodes, countDiffChange);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes, countDiffChange);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {
            "oldValue": "[file-INodeFile(modifiers-final), snapshot-Snapshot(modifiers-final), prior-Snapshot, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]",
            "newValue": "[file-INodeFile(modifiers-final), snapshotId-int(modifiers-final), priorSnapshotId-int, collectedBlocks-BlocksMapUpdateInfo(modifiers-final), removedINodes-List\u003cINode\u003e(modifiers-final), countDiffChange-boolean(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5715. Use Snapshot ID to indicate the corresponding Snapshot for a FileDiff/DirectoryDiff. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556353 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "07/01/14 12:52 PM",
          "commitName": "70cff9e2f0c8f78c1dc54a064182971bb2106795",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "14/12/13 2:13 AM",
          "commitNameOld": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 24.44,
          "commitsBetweenForRepo": 98,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n-      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n+  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n+      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n-    if (snapshot \u003d\u003d null) {\n+    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n-        file.recordModification(prior);\n+        file.recordModification(priorSnapshotId);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n-      prior \u003d getDiffs().updatePrior(snapshot, prior);\n-      return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n-          removedINodes, countDiffChange);\n+      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n+      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n+          collectedBlocks, removedINodes, countDiffChange);\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final int snapshotId,\n      int priorSnapshotId, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    if (snapshotId \u003d\u003d Snapshot.CURRENT_STATE_ID) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(priorSnapshotId);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      priorSnapshotId \u003d getDiffs().updatePrior(snapshotId, priorSnapshotId);\n      return diffs.deleteSnapshotDiff(snapshotId, priorSnapshotId, file,\n          collectedBlocks, removedINodes, countDiffChange);\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
          "extendedDetails": {}
        }
      ]
    },
    "44a6560b5da3f79d2299579a36e7a2a60a91f823": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5632. Flatten INodeDirectory hierarchy: Replace INodeDirectoryWithSnapshot with DirectoryWithSnapshotFeature.  Contributed by jing9 \n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550917 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/12/13 2:13 AM",
      "commitName": "44a6560b5da3f79d2299579a36e7a2a60a91f823",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "12/12/13 10:26 AM",
      "commitNameOld": "5fd7230671bb3d90081d4138c364c3f65b35cdbc",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.66,
      "commitsBetweenForRepo": 12,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n       Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n       final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n       throws QuotaExceededException {\n     if (snapshot \u003d\u003d null) {\n       // delete the current file while the file has snapshot feature\n       if (!isCurrentFileDeleted()) {\n-        file.recordModification(prior, null);\n+        file.recordModification(prior);\n         deleteCurrentFile();\n       }\n       collectBlocksAndClear(file, collectedBlocks, removedINodes);\n       return Quota.Counts.newInstance();\n     } else { // delete the snapshot\n       prior \u003d getDiffs().updatePrior(snapshot, prior);\n       return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n           removedINodes, countDiffChange);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    if (snapshot \u003d\u003d null) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(prior);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      prior \u003d getDiffs().updatePrior(snapshot, prior);\n      return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java",
      "extendedDetails": {}
    },
    "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5554. Flatten INodeFile hierarchy: Replace INodeFileWithSnapshot with FileWithSnapshotFeature.  Contributed by jing9\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548796 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/12/13 10:17 PM",
      "commitName": "4c87a27ad851ffaa3cc3e2074a9ef7073b5a164a",
      "commitAuthor": "Tsz-wo Sze",
      "diff": "@@ -0,0 +1,18 @@\n+  public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n+      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n+      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n+      throws QuotaExceededException {\n+    if (snapshot \u003d\u003d null) {\n+      // delete the current file while the file has snapshot feature\n+      if (!isCurrentFileDeleted()) {\n+        file.recordModification(prior, null);\n+        deleteCurrentFile();\n+      }\n+      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n+      return Quota.Counts.newInstance();\n+    } else { // delete the snapshot\n+      prior \u003d getDiffs().updatePrior(snapshot, prior);\n+      return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n+          removedINodes, countDiffChange);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Quota.Counts cleanFile(final INodeFile file, final Snapshot snapshot,\n      Snapshot prior, final BlocksMapUpdateInfo collectedBlocks,\n      final List\u003cINode\u003e removedINodes, final boolean countDiffChange)\n      throws QuotaExceededException {\n    if (snapshot \u003d\u003d null) {\n      // delete the current file while the file has snapshot feature\n      if (!isCurrentFileDeleted()) {\n        file.recordModification(prior, null);\n        deleteCurrentFile();\n      }\n      collectBlocksAndClear(file, collectedBlocks, removedINodes);\n      return Quota.Counts.newInstance();\n    } else { // delete the snapshot\n      prior \u003d getDiffs().updatePrior(snapshot, prior);\n      return diffs.deleteSnapshotDiff(snapshot, prior, file, collectedBlocks,\n          removedINodes, countDiffChange);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/snapshot/FileWithSnapshotFeature.java"
    }
  }
}