{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RegisterApplicationMasterResponsePBImpl.java",
  "functionName": "iterator",
  "functionId": "iterator",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
  "functionStartLine": 204,
  "functionEndLine": 227,
  "numCommitsSeen": 22,
  "timeTaken": 3426,
  "changeHistory": [
    "36e158ae98ef8b72a7a9f63102b714e025cafcc5",
    "b67d5ba7842cc10695d987f217027848a5a8c3d8",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "df2991c0cbc3f35c2640b93680667507c4f810dd"
  ],
  "changeHistoryShort": {
    "36e158ae98ef8b72a7a9f63102b714e025cafcc5": "Ymultichange(Yreturntypechange,Ybodychange)",
    "b67d5ba7842cc10695d987f217027848a5a8c3d8": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": "Yfilerename",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "df2991c0cbc3f35c2640b93680667507c4f810dd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "36e158ae98ef8b72a7a9f63102b714e025cafcc5": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-7307. Allow client/AM update supported resource types via YARN APIs. (Sunil G via wangda)\n\nChange-Id: I14c5ea7252b7c17e86ab38f692b5f9d43196dbe0\n",
      "commitDate": "26/10/17 8:15 PM",
      "commitName": "36e158ae98ef8b72a7a9f63102b714e025cafcc5",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-7307. Allow client/AM update supported resource types via YARN APIs. (Sunil G via wangda)\n\nChange-Id: I14c5ea7252b7c17e86ab38f692b5f9d43196dbe0\n",
          "commitDate": "26/10/17 8:15 PM",
          "commitName": "36e158ae98ef8b72a7a9f63102b714e025cafcc5",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 44.46,
          "commitsBetweenForRepo": 377,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n-            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n-              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n-                  schedulerResourceTypes.iterator();\n+      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n+        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n \n-              @Override\n-              public boolean hasNext() {\n-                return settingsIterator.hasNext();\n-              }\n+          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n \n-              @Override\n-              public SchedulerResourceTypes next() {\n-                return settingsIterator.next();\n-              }\n+          @Override\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n \n-              @Override\n-              public void remove() {\n-                throw new UnsupportedOperationException();\n-              }\n-            };\n-          }\n\\ No newline at end of file\n+          @Override\n+          public ResourceTypeInfoProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+\n+          }\n+        };\n+\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n\n          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ResourceTypeInfoProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cSchedulerResourceTypes\u003e",
            "newValue": "Iterator\u003cResourceTypeInfoProto\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-7307. Allow client/AM update supported resource types via YARN APIs. (Sunil G via wangda)\n\nChange-Id: I14c5ea7252b7c17e86ab38f692b5f9d43196dbe0\n",
          "commitDate": "26/10/17 8:15 PM",
          "commitName": "36e158ae98ef8b72a7a9f63102b714e025cafcc5",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "12/09/17 9:19 AM",
          "commitNameOld": "6708ac330147b2d3816a31f2ee83e09c41fe0dd9",
          "commitAuthorOld": "Arun Suresh",
          "daysBetweenCommits": 44.46,
          "commitsBetweenForRepo": 377,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,23 @@\n-          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n-            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n-              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n-                  schedulerResourceTypes.iterator();\n+      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n+        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n \n-              @Override\n-              public boolean hasNext() {\n-                return settingsIterator.hasNext();\n-              }\n+          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n \n-              @Override\n-              public SchedulerResourceTypes next() {\n-                return settingsIterator.next();\n-              }\n+          @Override\n+          public boolean hasNext() {\n+            return iter.hasNext();\n+          }\n \n-              @Override\n-              public void remove() {\n-                throw new UnsupportedOperationException();\n-              }\n-            };\n-          }\n\\ No newline at end of file\n+          @Override\n+          public ResourceTypeInfoProto next() {\n+            return convertToProtoFormat(iter.next());\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+\n+          }\n+        };\n+\n+      }\n\\ No newline at end of file\n",
          "actualSource": "      public Iterator\u003cResourceTypeInfoProto\u003e iterator() {\n        return new Iterator\u003cResourceTypeInfoProto\u003e() {\n\n          Iterator\u003cResourceTypeInfo\u003e iter \u003d resourceTypeInfo.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public ResourceTypeInfoProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n\n          }\n        };\n\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "b67d5ba7842cc10695d987f217027848a5a8c3d8": {
      "type": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-2448. Changed ApplicationMasterProtocol to expose RM-recognized resource types to the AMs. Contributed by Varun Vasudev.\n",
      "commitDate": "10/09/14 10:15 AM",
      "commitName": "b67d5ba7842cc10695d987f217027848a5a8c3d8",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-2448. Changed ApplicationMasterProtocol to expose RM-recognized resource types to the AMs. Contributed by Varun Vasudev.\n",
          "commitDate": "10/09/14 10:15 AM",
          "commitName": "b67d5ba7842cc10695d987f217027848a5a8c3d8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "26/02/14 12:20 PM",
          "commitNameOld": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 195.87,
          "commitsBetweenForRepo": 1407,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n-        return new Iterator\u003cNMTokenProto\u003e() {\n+          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n+            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n+              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n+                  schedulerResourceTypes.iterator();\n \n-          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n+              @Override\n+              public boolean hasNext() {\n+                return settingsIterator.hasNext();\n+              }\n \n-          @Override\n-          public boolean hasNext() {\n-            return iter.hasNext();\n-          }\n+              @Override\n+              public SchedulerResourceTypes next() {\n+                return settingsIterator.next();\n+              }\n \n-          @Override\n-          public NMTokenProto next() {\n-            return convertToProtoFormat(iter.next());\n-          }\n-\n-          @Override\n-          public void remove() {\n-            throw new UnsupportedOperationException();\n-          }\n-        };\n-      }\n\\ No newline at end of file\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+            };\n+          }\n\\ No newline at end of file\n",
          "actualSource": "          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n                  schedulerResourceTypes.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return settingsIterator.hasNext();\n              }\n\n              @Override\n              public SchedulerResourceTypes next() {\n                return settingsIterator.next();\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n          }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cNMTokenProto\u003e",
            "newValue": "Iterator\u003cSchedulerResourceTypes\u003e"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-2448. Changed ApplicationMasterProtocol to expose RM-recognized resource types to the AMs. Contributed by Varun Vasudev.\n",
          "commitDate": "10/09/14 10:15 AM",
          "commitName": "b67d5ba7842cc10695d987f217027848a5a8c3d8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "26/02/14 12:20 PM",
          "commitNameOld": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 195.87,
          "commitsBetweenForRepo": 1407,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n-        return new Iterator\u003cNMTokenProto\u003e() {\n+          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n+            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n+              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n+                  schedulerResourceTypes.iterator();\n \n-          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n+              @Override\n+              public boolean hasNext() {\n+                return settingsIterator.hasNext();\n+              }\n \n-          @Override\n-          public boolean hasNext() {\n-            return iter.hasNext();\n-          }\n+              @Override\n+              public SchedulerResourceTypes next() {\n+                return settingsIterator.next();\n+              }\n \n-          @Override\n-          public NMTokenProto next() {\n-            return convertToProtoFormat(iter.next());\n-          }\n-\n-          @Override\n-          public void remove() {\n-            throw new UnsupportedOperationException();\n-          }\n-        };\n-      }\n\\ No newline at end of file\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+            };\n+          }\n\\ No newline at end of file\n",
          "actualSource": "          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n                  schedulerResourceTypes.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return settingsIterator.hasNext();\n              }\n\n              @Override\n              public SchedulerResourceTypes next() {\n                return settingsIterator.next();\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n          }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-2448. Changed ApplicationMasterProtocol to expose RM-recognized resource types to the AMs. Contributed by Varun Vasudev.\n",
          "commitDate": "10/09/14 10:15 AM",
          "commitName": "b67d5ba7842cc10695d987f217027848a5a8c3d8",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "26/02/14 12:20 PM",
          "commitNameOld": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 195.87,
          "commitsBetweenForRepo": 1407,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,21 +1,21 @@\n-      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n-        return new Iterator\u003cNMTokenProto\u003e() {\n+          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n+            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n+              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n+                  schedulerResourceTypes.iterator();\n \n-          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n+              @Override\n+              public boolean hasNext() {\n+                return settingsIterator.hasNext();\n+              }\n \n-          @Override\n-          public boolean hasNext() {\n-            return iter.hasNext();\n-          }\n+              @Override\n+              public SchedulerResourceTypes next() {\n+                return settingsIterator.next();\n+              }\n \n-          @Override\n-          public NMTokenProto next() {\n-            return convertToProtoFormat(iter.next());\n-          }\n-\n-          @Override\n-          public void remove() {\n-            throw new UnsupportedOperationException();\n-          }\n-        };\n-      }\n\\ No newline at end of file\n+              @Override\n+              public void remove() {\n+                throw new UnsupportedOperationException();\n+              }\n+            };\n+          }\n\\ No newline at end of file\n",
          "actualSource": "          public Iterator\u003cSchedulerResourceTypes\u003e iterator() {\n            return new Iterator\u003cSchedulerResourceTypes\u003e() {\n              Iterator\u003cSchedulerResourceTypes\u003e settingsIterator \u003d\n                  schedulerResourceTypes.iterator();\n\n              @Override\n              public boolean hasNext() {\n                return settingsIterator.hasNext();\n              }\n\n              @Override\n              public SchedulerResourceTypes next() {\n                return settingsIterator.next();\n              }\n\n              @Override\n              public void remove() {\n                throw new UnsupportedOperationException();\n              }\n            };\n          }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc": {
      "type": "Ymultichange(Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/02/14 12:20 PM",
      "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/02/14 12:20 PM",
          "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/01/14 2:25 PM",
          "commitNameOld": "163348701ca6b80b6d9dd7816872845d288f0c18",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 34.91,
          "commitsBetweenForRepo": 283,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,21 @@\n-      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n-        return new Iterator\u003cApplicationACLMapProto\u003e() {\n-          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n-              .keySet().iterator();\n+      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n+        return new Iterator\u003cNMTokenProto\u003e() {\n+\n+          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n \n           @Override\n           public boolean hasNext() {\n-            return aclsIterator.hasNext();\n+            return iter.hasNext();\n           }\n \n           @Override\n-          public ApplicationACLMapProto next() {\n-            ApplicationAccessType key \u003d aclsIterator.next();\n-            return ApplicationACLMapProto.newBuilder().setAcl(\n-                applicationACLS.get(key)).setAccessType(\n-                ProtoUtils.convertToProtoFormat(key)).build();\n+          public NMTokenProto next() {\n+            return convertToProtoFormat(iter.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n        return new Iterator\u003cNMTokenProto\u003e() {\n\n          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public NMTokenProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "Iterator\u003cApplicationACLMapProto\u003e",
            "newValue": "Iterator\u003cNMTokenProto\u003e"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/02/14 12:20 PM",
          "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/01/14 2:25 PM",
          "commitNameOld": "163348701ca6b80b6d9dd7816872845d288f0c18",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 34.91,
          "commitsBetweenForRepo": 283,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,21 @@\n-      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n-        return new Iterator\u003cApplicationACLMapProto\u003e() {\n-          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n-              .keySet().iterator();\n+      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n+        return new Iterator\u003cNMTokenProto\u003e() {\n+\n+          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n \n           @Override\n           public boolean hasNext() {\n-            return aclsIterator.hasNext();\n+            return iter.hasNext();\n           }\n \n           @Override\n-          public ApplicationACLMapProto next() {\n-            ApplicationAccessType key \u003d aclsIterator.next();\n-            return ApplicationACLMapProto.newBuilder().setAcl(\n-                applicationACLS.get(key)).setAccessType(\n-                ProtoUtils.convertToProtoFormat(key)).build();\n+          public NMTokenProto next() {\n+            return convertToProtoFormat(iter.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n        return new Iterator\u003cNMTokenProto\u003e() {\n\n          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public NMTokenProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[public, synchronized]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1588. Enhanced RM and the scheduling protocol to also send NMTokens of transferred containers from previous app-attempts to new AMs after YARN-1490. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1572230 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "26/02/14 12:20 PM",
          "commitName": "0fbc7fe816007b4e330604e9f8bae6b1e4b448bc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "22/01/14 2:25 PM",
          "commitNameOld": "163348701ca6b80b6d9dd7816872845d288f0c18",
          "commitAuthorOld": "Sanford Ryza",
          "daysBetweenCommits": 34.91,
          "commitsBetweenForRepo": 283,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,24 +1,21 @@\n-      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n-        return new Iterator\u003cApplicationACLMapProto\u003e() {\n-          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n-              .keySet().iterator();\n+      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n+        return new Iterator\u003cNMTokenProto\u003e() {\n+\n+          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n \n           @Override\n           public boolean hasNext() {\n-            return aclsIterator.hasNext();\n+            return iter.hasNext();\n           }\n \n           @Override\n-          public ApplicationACLMapProto next() {\n-            ApplicationAccessType key \u003d aclsIterator.next();\n-            return ApplicationACLMapProto.newBuilder().setAcl(\n-                applicationACLS.get(key)).setAccessType(\n-                ProtoUtils.convertToProtoFormat(key)).build();\n+          public NMTokenProto next() {\n+            return convertToProtoFormat(iter.next());\n           }\n \n           @Override\n           public void remove() {\n             throw new UnsupportedOperationException();\n           }\n         };\n       }\n\\ No newline at end of file\n",
          "actualSource": "      public synchronized Iterator\u003cNMTokenProto\u003e iterator() {\n        return new Iterator\u003cNMTokenProto\u003e() {\n\n          Iterator\u003cNMToken\u003e iter \u003d nmTokenList.iterator();\n\n          @Override\n          public boolean hasNext() {\n            return iter.hasNext();\n          }\n\n          @Override\n          public NMTokenProto next() {\n            return convertToProtoFormat(iter.next());\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "2fd7f2823074cbfbcc083a6f66edff62c7a131f0": {
      "type": "Yfilerename",
      "commitMessage": "YARN-846.  Move pb Impl classes from yarn-api to yarn-common. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494052 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 12:36 AM",
      "commitName": "2fd7f2823074cbfbcc083a6f66edff62c7a131f0",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 11:34 PM",
      "commitNameOld": "6451288704922576e75dd1597f5fd0ef09ab4f26",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n        return new Iterator\u003cApplicationACLMapProto\u003e() {\n          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n              .keySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return aclsIterator.hasNext();\n          }\n\n          @Override\n          public ApplicationACLMapProto next() {\n            ApplicationAccessType key \u003d aclsIterator.next();\n            return ApplicationACLMapProto.newBuilder().setAcl(\n                applicationACLS.get(key)).setAccessType(\n                ProtoUtils.convertToProtoFormat(key)).build();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java"
      }
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n        return new Iterator\u003cApplicationACLMapProto\u003e() {\n          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n              .keySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return aclsIterator.hasNext();\n          }\n\n          @Override\n          public ApplicationACLMapProto next() {\n            ApplicationAccessType key \u003d aclsIterator.next();\n            return ApplicationACLMapProto.newBuilder().setAcl(\n                applicationACLS.get(key)).setAccessType(\n                ProtoUtils.convertToProtoFormat(key)).build();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java"
      }
    },
    "df2991c0cbc3f35c2640b93680667507c4f810dd": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3104. Implemented Application-acls. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1186748 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "20/10/11 4:45 AM",
      "commitName": "df2991c0cbc3f35c2640b93680667507c4f810dd",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n+        return new Iterator\u003cApplicationACLMapProto\u003e() {\n+          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n+              .keySet().iterator();\n+\n+          @Override\n+          public boolean hasNext() {\n+            return aclsIterator.hasNext();\n+          }\n+\n+          @Override\n+          public ApplicationACLMapProto next() {\n+            ApplicationAccessType key \u003d aclsIterator.next();\n+            return ApplicationACLMapProto.newBuilder().setAcl(\n+                applicationACLS.get(key)).setAccessType(\n+                ProtoUtils.convertToProtoFormat(key)).build();\n+          }\n+\n+          @Override\n+          public void remove() {\n+            throw new UnsupportedOperationException();\n+          }\n+        };\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public Iterator\u003cApplicationACLMapProto\u003e iterator() {\n        return new Iterator\u003cApplicationACLMapProto\u003e() {\n          Iterator\u003cApplicationAccessType\u003e aclsIterator \u003d applicationACLS\n              .keySet().iterator();\n\n          @Override\n          public boolean hasNext() {\n            return aclsIterator.hasNext();\n          }\n\n          @Override\n          public ApplicationACLMapProto next() {\n            ApplicationAccessType key \u003d aclsIterator.next();\n            return ApplicationACLMapProto.newBuilder().setAcl(\n                applicationACLS.get(key)).setAccessType(\n                ProtoUtils.convertToProtoFormat(key)).build();\n          }\n\n          @Override\n          public void remove() {\n            throw new UnsupportedOperationException();\n          }\n        };\n      }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/protocolrecords/impl/pb/RegisterApplicationMasterResponsePBImpl.java"
    }
  }
}