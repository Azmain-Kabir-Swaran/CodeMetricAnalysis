{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineCollector.java",
  "functionName": "putEntities",
  "functionId": "putEntities___entities-TimelineEntities__callerUgi-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
  "functionStartLine": 152,
  "functionEndLine": 166,
  "numCommitsSeen": 24,
  "timeTaken": 5079,
  "changeHistory": [
    "2064ca015d1584263aac0cc20c60b925a3aff612",
    "9f6540535d9148abbea836d54a9e94d25319c5d5",
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec",
    "063b513b1c10987461caab3d26c8543c6e657bf7",
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438",
    "f0e752c14b0b441955cdfc94f95937c90f1f055d",
    "bf54d32750f8b27a170d7a0a8d8f022430327341",
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68"
  ],
  "changeHistoryShort": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": "Ybodychange",
    "9f6540535d9148abbea836d54a9e94d25319c5d5": "Ybodychange",
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec": "Ybodychange",
    "063b513b1c10987461caab3d26c8543c6e657bf7": "Ybodychange",
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": "Ybodychange",
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40": "Ybodychange",
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": "Ymultichange(Yrename,Ybodychange)",
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": "Yfilerename",
    "f0e752c14b0b441955cdfc94f95937c90f1f055d": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
    "bf54d32750f8b27a170d7a0a8d8f022430327341": "Yfilerename",
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c": "Ybodychange",
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5": "Ymultichange(Yreturntypechange,Ybodychange)",
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2064ca015d1584263aac0cc20c60b925a3aff612": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9349.  Changed logging to use slf4j api.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "15/03/19 4:20 PM",
      "commitName": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/05/18 1:00 PM",
      "commitNameOld": "e3b7d7ac1694b8766ae11bc7e8ecf09763bb26db",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 303.14,
      "commitsBetweenForRepo": 2382,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,15 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n-          + callerUgi + \")\");\n-    }\n+    LOG.debug(\"putEntities(entities\u003d{}, callerUgi\u003d{})\", entities, callerUgi);\n \n     TimelineWriteResponse response;\n     // synchronize on the writer object so that no other threads can\n     // flush the writer buffer concurrently and swallow any exception\n     // caused by the timeline enitites that are being put here.\n     synchronized (writer) {\n       response \u003d writeTimelineEntities(entities, callerUgi);\n       flushBufferedTimelineEntities();\n     }\n \n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    LOG.debug(\"putEntities(entities\u003d{}, callerUgi\u003d{})\", entities, callerUgi);\n\n    TimelineWriteResponse response;\n    // synchronize on the writer object so that no other threads can\n    // flush the writer buffer concurrently and swallow any exception\n    // caused by the timeline enitites that are being put here.\n    synchronized (writer) {\n      response \u003d writeTimelineEntities(entities, callerUgi);\n      flushBufferedTimelineEntities();\n    }\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "9f6540535d9148abbea836d54a9e94d25319c5d5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6734. Ensure sub-application user is extracted \u0026 sent to timeline service (Rohith Sharma K S via Varun Saxena)\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "9f6540535d9148abbea836d54a9e94d25319c5d5",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "09/08/17 7:58 AM",
      "commitNameOld": "63cfcb90ac6fbb79ba9ed6b3044cd999fc74e58c",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 20.63,
      "commitsBetweenForRepo": 159,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n \n     TimelineWriteResponse response;\n     // synchronize on the writer object so that no other threads can\n     // flush the writer buffer concurrently and swallow any exception\n     // caused by the timeline enitites that are being put here.\n     synchronized (writer) {\n-      response \u003d writeTimelineEntities(entities);\n+      response \u003d writeTimelineEntities(entities, callerUgi);\n       flushBufferedTimelineEntities();\n     }\n \n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineWriteResponse response;\n    // synchronize on the writer object so that no other threads can\n    // flush the writer buffer concurrently and swallow any exception\n    // caused by the timeline enitites that are being put here.\n    synchronized (writer) {\n      response \u003d writeTimelineEntities(entities, callerUgi);\n      flushBufferedTimelineEntities();\n    }\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6376. Exceptions caused by synchronous putEntities requests can be swallowed (Haibo Chen via Varun Saxena)\n",
      "commitDate": "30/03/17 1:47 PM",
      "commitName": "b58777a9c9a5b6f2e4bcfd2b3bede33f25f80dec",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "28/03/17 3:18 PM",
      "commitNameOld": "063b513b1c10987461caab3d26c8543c6e657bf7",
      "commitAuthorOld": "Varun Saxena",
      "daysBetweenCommits": 1.94,
      "commitsBetweenForRepo": 19,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,18 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n \n-    TimelineWriteResponse response \u003d writeTimelineEntities(entities);\n-    flushBufferedTimelineEntities();\n+    TimelineWriteResponse response;\n+    // synchronize on the writer object so that no other threads can\n+    // flush the writer buffer concurrently and swallow any exception\n+    // caused by the timeline enitites that are being put here.\n+    synchronized (writer) {\n+      response \u003d writeTimelineEntities(entities);\n+      flushBufferedTimelineEntities();\n+    }\n \n     return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineWriteResponse response;\n    // synchronize on the writer object so that no other threads can\n    // flush the writer buffer concurrently and swallow any exception\n    // caused by the timeline enitites that are being put here.\n    synchronized (writer) {\n      response \u003d writeTimelineEntities(entities);\n      flushBufferedTimelineEntities();\n    }\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "063b513b1c10987461caab3d26c8543c6e657bf7": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6357. Implement putEntitiesAsync API in TimelineCollector (Haibo Chen via Varun Saxena)\n",
      "commitDate": "28/03/17 3:18 PM",
      "commitName": "063b513b1c10987461caab3d26c8543c6e657bf7",
      "commitAuthor": "Varun Saxena",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "a1b6d7456fa37b7b418dd08178ea73ed5c1de124",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 261.27,
      "commitsBetweenForRepo": 1672,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,12 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n       LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n-    TimelineCollectorContext context \u003d getTimelineEntityContext();\n \n-    // Update application metrics for aggregation\n-    updateAggregateStatus(entities, aggregationGroups,\n-        getEntityTypesSkipAggregation());\n+    TimelineWriteResponse response \u003d writeTimelineEntities(entities);\n+    flushBufferedTimelineEntities();\n \n-    return writer.write(context.getClusterId(), context.getUserId(),\n-        context.getFlowName(), context.getFlowVersion(), context.getFlowRunId(),\n-        context.getAppId(), entities);\n+    return response;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineWriteResponse response \u003d writeTimelineEntities(entities);\n    flushBufferedTimelineEntities();\n\n    return response;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "39cce4e629aadb7fadf1fb14a23108f55b59eb21": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3816. [Aggregation] App-level aggregation and accumulation for YARN system metrics (Li Lu via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "39cce4e629aadb7fadf1fb14a23108f55b59eb21",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "960af7d4717b8a8949d0b2e43949e7daab45aa88",
      "commitAuthorOld": "Sangjin Lee",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,17 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n       LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n-\n     TimelineCollectorContext context \u003d getTimelineEntityContext();\n+\n+    // Update application metrics for aggregation\n+    updateAggregateStatus(entities, aggregationGroups,\n+        getEntityTypesSkipAggregation());\n+\n     return writer.write(context.getClusterId(), context.getUserId(),\n         context.getFlowName(), context.getFlowVersion(), context.getFlowRunId(),\n         context.getAppId(), entities);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n    TimelineCollectorContext context \u003d getTimelineEntityContext();\n\n    // Update application metrics for aggregation\n    updateAggregateStatus(entities, aggregationGroups,\n        getEntityTypesSkipAggregation());\n\n    return writer.write(context.getClusterId(), context.getUserId(),\n        context.getFlowName(), context.getFlowVersion(), context.getFlowRunId(),\n        context.getAppId(), entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "47f35a30bb4d99349593e9d6e1c9e76e71341c40": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3391. Clearly define flow ID/ flow run / flow version in API and storage. Contributed by Zhijie Shen\n\n(cherry picked from commit 68c6232f8423e55b4d152ef3d1d66aeb2d6a555e)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "47f35a30bb4d99349593e9d6e1c9e76e71341c40",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,13 @@\n   public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n       LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n \n     TimelineCollectorContext context \u003d getTimelineEntityContext();\n     return writer.write(context.getClusterId(), context.getUserId(),\n-        context.getFlowId(), context.getFlowRunId(), context.getAppId(),\n-        entities);\n+        context.getFlowName(), context.getFlowVersion(), context.getFlowRunId(),\n+        context.getAppId(), entities);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineCollectorContext context \u003d getTimelineEntityContext();\n    return writer.write(context.getClusterId(), context.getUserId(),\n        context.getFlowName(), context.getFlowVersion(), context.getFlowRunId(),\n        context.getAppId(), entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {}
    },
    "d67c9bdb4db2b075484a779802ecf3296bad5cd4": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n-  public TimelineWriteResponse postEntities(TimelineEntities entities,\n+  public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n-      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n+      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n \n-    return writer.write(entities);\n+    TimelineCollectorContext context \u003d getTimelineEntityContext();\n+    return writer.write(context.getClusterId(), context.getUserId(),\n+        context.getFlowId(), context.getFlowRunId(), context.getAppId(),\n+        entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineCollectorContext context \u003d getTimelineEntityContext();\n    return writer.write(context.getClusterId(), context.getUserId(),\n        context.getFlowId(), context.getFlowRunId(), context.getAppId(),\n        entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {
            "oldValue": "postEntities",
            "newValue": "putEntities"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3040. Make putEntities operation be aware of the app\u0027s context. Contributed by Zhijie Shen\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "d67c9bdb4db2b075484a779802ecf3296bad5cd4",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
          "commitAuthorOld": "Junping Du",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 3,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,13 @@\n-  public TimelineWriteResponse postEntities(TimelineEntities entities,\n+  public TimelineWriteResponse putEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n-      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n+      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n           + callerUgi + \")\");\n     }\n \n-    return writer.write(entities);\n+    TimelineCollectorContext context \u003d getTimelineEntityContext();\n+    return writer.write(context.getClusterId(), context.getUserId(),\n+        context.getFlowId(), context.getFlowRunId(), context.getAppId(),\n+        entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse putEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"putEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    TimelineCollectorContext context \u003d getTimelineEntityContext();\n    return writer.write(context.getClusterId(), context.getUserId(),\n        context.getFlowId(), context.getFlowRunId(), context.getAppId(),\n        entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
          "extendedDetails": {}
        }
      ]
    },
    "2188a07e5bea1da26bf679ca0ece26ab596d3438": {
      "type": "Yfilerename",
      "commitMessage": "YARN-3333. Rename TimelineAggregator etc. to TimelineCollector. Contributed by Sangjin Lee\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "2188a07e5bea1da26bf679ca0ece26ab596d3438",
      "commitAuthor": "Junping Du",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "9b5636408005676ae580f8d929f8e912c27828e7",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public TimelineWriteResponse postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    return writer.write(entities);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/collector/TimelineCollector.java"
      }
    },
    "f0e752c14b0b441955cdfc94f95937c90f1f055d": {
      "type": "Ymultichange(Yreturntypechange,Yexceptionschange,Ybodychange)",
      "commitMessage": "YARN-3264. Created backing storage write interface and a POC only FS based storage implementation. Contributed by Vrushali C.\n\n(cherry picked from commit 821b68d05d246fd57d7b7286eb2ccc075ed1eae8)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f0e752c14b0b441955cdfc94f95937c90f1f055d",
      "commitAuthor": "Zhijie Shen",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3264. Created backing storage write interface and a POC only FS based storage implementation. Contributed by Vrushali C.\n\n(cherry picked from commit 821b68d05d246fd57d7b7286eb2ccc075ed1eae8)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f0e752c14b0b441955cdfc94f95937c90f1f055d",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,10 @@\n-  public void postEntities(TimelineEntities entities,\n-      UserGroupInformation callerUgi) {\n-    // Add this output temporarily for our prototype\n-    // TODO remove this after we have an actual implementation\n-    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n-    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-        callerUgi + \")\");\n-\n-    // TODO implement\n+  public TimelineWriteResponse postEntities(TimelineEntities entities,\n+      UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-          callerUgi + \")\");\n+      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n+      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n+          + callerUgi + \")\");\n     }\n+\n+    return writer.write(entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    return writer.write(entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "TimelineWriteResponse"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "YARN-3264. Created backing storage write interface and a POC only FS based storage implementation. Contributed by Vrushali C.\n\n(cherry picked from commit 821b68d05d246fd57d7b7286eb2ccc075ed1eae8)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f0e752c14b0b441955cdfc94f95937c90f1f055d",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,10 @@\n-  public void postEntities(TimelineEntities entities,\n-      UserGroupInformation callerUgi) {\n-    // Add this output temporarily for our prototype\n-    // TODO remove this after we have an actual implementation\n-    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n-    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-        callerUgi + \")\");\n-\n-    // TODO implement\n+  public TimelineWriteResponse postEntities(TimelineEntities entities,\n+      UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-          callerUgi + \")\");\n+      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n+      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n+          + callerUgi + \")\");\n     }\n+\n+    return writer.write(entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    return writer.write(entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[IOException]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3264. Created backing storage write interface and a POC only FS based storage implementation. Contributed by Vrushali C.\n\n(cherry picked from commit 821b68d05d246fd57d7b7286eb2ccc075ed1eae8)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "f0e752c14b0b441955cdfc94f95937c90f1f055d",
          "commitAuthor": "Zhijie Shen",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "bf54d32750f8b27a170d7a0a8d8f022430327341",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,14 +1,10 @@\n-  public void postEntities(TimelineEntities entities,\n-      UserGroupInformation callerUgi) {\n-    // Add this output temporarily for our prototype\n-    // TODO remove this after we have an actual implementation\n-    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n-    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-        callerUgi + \")\");\n-\n-    // TODO implement\n+  public TimelineWriteResponse postEntities(TimelineEntities entities,\n+      UserGroupInformation callerUgi) throws IOException {\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n-          callerUgi + \")\");\n+      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n+      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n+          + callerUgi + \")\");\n     }\n+\n+    return writer.write(entities);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public TimelineWriteResponse postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) throws IOException {\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\"\n          + callerUgi + \")\");\n    }\n\n    return writer.write(entities);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
          "extendedDetails": {}
        }
      ]
    },
    "bf54d32750f8b27a170d7a0a8d8f022430327341": {
      "type": "Yfilerename",
      "commitMessage": "YARN-3210. Refactored timeline aggregator according to new code organization proposed in YARN-3166. Contributed by Li Lu.\n\n(cherry picked from commit d3ff7f06cbc66d3a23c2551e7d4c752689f46afe)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "bf54d32750f8b27a170d7a0a8d8f022430327341",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // Add this output temporarily for our prototype\n    // TODO remove this after we have an actual implementation\n    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n        callerUgi + \")\");\n\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/TimelineAggregator.java"
      }
    },
    "d45ff878c4cb8b359abb17ecf09d24b6f862874c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3125. Made the distributed shell use timeline service next gen and add an integration test for it. Contributed by Junping Du and Li Lu.\n\n(cherry picked from commit bf08f7f0ed4900ce52f98137297dd1a47ba2a536)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "d45ff878c4cb8b359abb17ecf09d24b6f862874c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,14 @@\n   public void postEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) {\n+    // Add this output temporarily for our prototype\n+    // TODO remove this after we have an actual implementation\n+    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n+    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n+        callerUgi + \")\");\n+\n     // TODO implement\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // Add this output temporarily for our prototype\n    // TODO remove this after we have an actual implementation\n    LOG.info(\"SUCCESS - TIMELINE V2 PROTOTYPE\");\n    LOG.info(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n        callerUgi + \")\");\n\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java",
      "extendedDetails": {}
    },
    "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5": {
      "type": "Ymultichange(Yreturntypechange,Ybodychange)",
      "commitMessage": "YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen\n\n(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
      "commitAuthor": "Junping Du",
      "subchanges": [
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen\n\n(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public TimelinePutResponse postEntities(TimelineEntities entities,\n+  public void postEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) {\n     // TODO implement\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n-    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java",
          "extendedDetails": {
            "oldValue": "TimelinePutResponse",
            "newValue": "void"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3240. Implement client API to put generic entities. Contributed by Zhijie Shen\n\n(cherry picked from commit 4487da249f448d5c67b712cd0aa723e764eed77d)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "4f0c7eaff3b66df6e87aa251e1316a85f38ffab5",
          "commitAuthor": "Junping Du",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
          "commitAuthorOld": "Zhijie Shen",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 2,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,9 +1,8 @@\n-  public TimelinePutResponse postEntities(TimelineEntities entities,\n+  public void postEntities(TimelineEntities entities,\n       UserGroupInformation callerUgi) {\n     // TODO implement\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n           callerUgi + \")\");\n     }\n-    return null;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java",
          "extendedDetails": {}
        }
      ]
    },
    "7c8abec0a8fc8b10f57438c60b77f48dac679b68": {
      "type": "Yintroduced",
      "commitMessage": "YARN-3030. Set up TS aggregator with basic request serving structure and lifecycle. Contributed by Sangjin Lee.\n\n(cherry picked from commit f26941b39028ac30c77547e2be2d657bb5bf044a)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "7c8abec0a8fc8b10f57438c60b77f48dac679b68",
      "commitAuthor": "Zhijie Shen",
      "diff": "@@ -0,0 +1,9 @@\n+  public TimelinePutResponse postEntities(TimelineEntities entities,\n+      UserGroupInformation callerUgi) {\n+    // TODO implement\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n+          callerUgi + \")\");\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public TimelinePutResponse postEntities(TimelineEntities entities,\n      UserGroupInformation callerUgi) {\n    // TODO implement\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"postEntities(entities\u003d\" + entities + \", callerUgi\u003d\" +\n          callerUgi + \")\");\n    }\n    return null;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-timelineservice/src/main/java/org/apache/hadoop/yarn/server/timelineservice/aggregator/BaseAggregatorService.java"
    }
  }
}