{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSQueue.java",
  "functionName": "assignContainerPreCheck",
  "functionId": "assignContainerPreCheck___node-FSSchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
  "functionStartLine": 431,
  "functionEndLine": 446,
  "numCommitsSeen": 60,
  "timeTaken": 3834,
  "changeHistory": [
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
    "99292adcefdc6b8f280b8e100605fb39f755c38a",
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880"
  ],
  "changeHistoryShort": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": "Ybodychange",
    "99292adcefdc6b8f280b8e100605fb39f755c38a": "Ybodychange",
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": "Ybodychange",
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ymodifierchange",
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": "Ybodychange",
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": "Ybodychange",
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf": "Ybodychange",
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9363.  Replaced debug logging with SLF4J parameterized log message.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "18/03/19 10:57 AM",
      "commitName": "5f6e22516668ff94a76737ad5e2cdcb2ff9f6dfd",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 2.78,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,16 @@\n   boolean assignContainerPreCheck(FSSchedulerNode node) {\n     if (node.getReservedContainer() !\u003d null) {\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n-            + \" because it has reserved containers.\");\n-      }\n+      LOG.debug(\"Assigning container failed on node \u0027{}\u0027 because it has\"\n+          + \" reserved containers.\", node.getNodeName());\n       return false;\n     } else if (!Resources.fitsIn(getResourceUsage(), getMaxShare())) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n             + \" because queue resource usage is larger than MaxShare: \"\n             + dumpState());\n       }\n       return false;\n     } else {\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (node.getReservedContainer() !\u003d null) {\n      LOG.debug(\"Assigning container failed on node \u0027{}\u0027 because it has\"\n          + \" reserved containers.\", node.getNodeName());\n      return false;\n    } else if (!Resources.fitsIn(getResourceUsage(), getMaxShare())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n            + \" because queue resource usage is larger than MaxShare: \"\n            + dumpState());\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "99292adcefdc6b8f280b8e100605fb39f755c38a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2162. Add ability in Fair Scheduler to optionally configure maxResources in terms of percentage. (Yufei Gu)\n",
      "commitDate": "05/10/17 11:51 PM",
      "commitName": "99292adcefdc6b8f280b8e100605fb39f755c38a",
      "commitAuthor": "Yufei Gu",
      "commitDateOld": "14/09/17 11:23 AM",
      "commitNameOld": "09b476e6dabe8039a41dde7930c8a9c0d14bb750",
      "commitAuthorOld": "Yufei Gu",
      "daysBetweenCommits": 21.52,
      "commitsBetweenForRepo": 160,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   boolean assignContainerPreCheck(FSSchedulerNode node) {\n     if (node.getReservedContainer() !\u003d null) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n             + \" because it has reserved containers.\");\n       }\n       return false;\n-    } else if (!Resources.fitsIn(getResourceUsage(), maxShare)) {\n+    } else if (!Resources.fitsIn(getResourceUsage(), getMaxShare())) {\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n             + \" because queue resource usage is larger than MaxShare: \"\n             + dumpState());\n       }\n       return false;\n     } else {\n       return true;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (node.getReservedContainer() !\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n            + \" because it has reserved containers.\");\n      }\n      return false;\n    } else if (!Resources.fitsIn(getResourceUsage(), getMaxShare())) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n            + \" because queue resource usage is larger than MaxShare: \"\n            + dumpState());\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "4db9cc70d0178703fb28f451eb84d97f2bf63af8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6042. Dump scheduler and queue state information into FairScheduler DEBUG log. (Yufei Gu via rchiang)\n",
      "commitDate": "10/03/17 4:13 PM",
      "commitName": "4db9cc70d0178703fb28f451eb84d97f2bf63af8",
      "commitAuthor": "Ray Chiang",
      "commitDateOld": "22/02/17 3:58 PM",
      "commitNameOld": "b10e962224a8ae1c6031a05322b0cc5e564bd078",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 16.01,
      "commitsBetweenForRepo": 113,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,18 @@\n   boolean assignContainerPreCheck(FSSchedulerNode node) {\n-    if (!Resources.fitsIn(getResourceUsage(), maxShare)\n-        || node.getReservedContainer() !\u003d null) {\n+    if (node.getReservedContainer() !\u003d null) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n+            + \" because it has reserved containers.\");\n+      }\n       return false;\n+    } else if (!Resources.fitsIn(getResourceUsage(), maxShare)) {\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n+            + \" because queue resource usage is larger than MaxShare: \"\n+            + dumpState());\n+      }\n+      return false;\n+    } else {\n+      return true;\n     }\n-    return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (node.getReservedContainer() !\u003d null) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n            + \" because it has reserved containers.\");\n      }\n      return false;\n    } else if (!Resources.fitsIn(getResourceUsage(), maxShare)) {\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Assigning container failed on node \u0027\" + node.getNodeName()\n            + \" because queue resource usage is larger than MaxShare: \"\n            + dumpState());\n      }\n      return false;\n    } else {\n      return true;\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "02/09/16 2:56 PM",
      "commitNameOld": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 82.33,
      "commitsBetweenForRepo": 620,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,7 @@\n-  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n+  boolean assignContainerPreCheck(FSSchedulerNode node) {\n     if (!Resources.fitsIn(getResourceUsage(), maxShare)\n         || node.getReservedContainer() !\u003d null) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (!Resources.fitsIn(getResourceUsage(), maxShare)\n        || node.getReservedContainer() !\u003d null) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[]"
      }
    },
    "f6ea9be5473ab66798b0536317d2f32c5348eb57": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5264. Store all queue-specific information in FSQueue. (Yufei Gu via kasha)\n",
      "commitDate": "02/09/16 2:56 PM",
      "commitName": "f6ea9be5473ab66798b0536317d2f32c5348eb57",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "17/06/16 10:24 PM",
      "commitNameOld": "20f2799938c5cad59f59617cdb0f86e137c3c2c0",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 76.69,
      "commitsBetweenForRepo": 646,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,7 @@\n   protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n-    if (!Resources.fitsIn(getResourceUsage(),\n-        scheduler.getAllocationConfiguration().getMaxResources(getName()))\n+    if (!Resources.fitsIn(getResourceUsage(), maxShare)\n         || node.getReservedContainer() !\u003d null) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (!Resources.fitsIn(getResourceUsage(), maxShare)\n        || node.getReservedContainer() !\u003d null) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1403. Separate out configuration loading from QueueManager in the Fair Scheduler (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1548006 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/12/13 7:26 PM",
      "commitName": "6d5f8ebed60e59d772e0dcee0b069f8db95f6ccc",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "29/11/13 11:02 AM",
      "commitNameOld": "7545d8bf996e5d060d5d613bf769ec52a62d428b",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 5.35,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n     if (!Resources.fitsIn(getResourceUsage(),\n-        queueMgr.getMaxResources(getName()))\n+        scheduler.getAllocationConfiguration().getMaxResources(getName()))\n         || node.getReservedContainer() !\u003d null) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (!Resources.fitsIn(getResourceUsage(),\n        scheduler.getAllocationConfiguration().getMaxResources(getName()))\n        || node.getReservedContainer() !\u003d null) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "a43c344eee888f2a2488c8c9dca7e25a2cce10bf": {
      "type": "Ybodychange",
      "commitMessage": "YARN-595. Refactor fair scheduler to use common Resources. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1475670 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/04/13 1:33 AM",
      "commitName": "a43c344eee888f2a2488c8c9dca7e25a2cce10bf",
      "commitAuthor": "Thomas White",
      "commitDateOld": "18/04/13 11:11 AM",
      "commitNameOld": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 6.6,
      "commitsBetweenForRepo": 37,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,8 @@\n   protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n-    if (Resources.greaterThan(getResourceUsage(),\n+    if (!Resources.fitsIn(getResourceUsage(),\n         queueMgr.getMaxResources(getName()))\n         || node.getReservedContainer() !\u003d null) {\n       return false;\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (!Resources.fitsIn(getResourceUsage(),\n        queueMgr.getMaxResources(getName()))\n        || node.getReservedContainer() !\u003d null) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java",
      "extendedDetails": {}
    },
    "df55edd5dec9c944a6c38f08d6f1f0fdb901c880": {
      "type": "Yintroduced",
      "commitMessage": "YARN-482. FS: Extend SchedulingMode to intermediate queues. (kkambatl via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469506 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 11:11 AM",
      "commitName": "df55edd5dec9c944a6c38f08d6f1f0fdb901c880",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,8 @@\n+  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n+    if (Resources.greaterThan(getResourceUsage(),\n+        queueMgr.getMaxResources(getName()))\n+        || node.getReservedContainer() !\u003d null) {\n+      return false;\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected boolean assignContainerPreCheck(FSSchedulerNode node) {\n    if (Resources.greaterThan(getResourceUsage(),\n        queueMgr.getMaxResources(getName()))\n        || node.getReservedContainer() !\u003d null) {\n      return false;\n    }\n    return true;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueue.java"
    }
  }
}