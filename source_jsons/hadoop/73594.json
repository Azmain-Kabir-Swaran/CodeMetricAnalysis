{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "CallQueueManager.java",
  "functionName": "addInternal",
  "functionId": "addInternal___e-E__checkBackoff-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
  "functionStartLine": 244,
  "functionEndLine": 258,
  "numCommitsSeen": 29,
  "timeTaken": 3272,
  "changeHistory": [
    "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
    "855e0477b1706a2d5b0df6a2b0e461aeec8839c2"
  ],
  "changeHistoryShort": {
    "8c95cb9d6bef369fef6a8364f0c0764eba90e44a": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
    "855e0477b1706a2d5b0df6a2b0e461aeec8839c2": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8c95cb9d6bef369fef6a8364f0c0764eba90e44a": {
      "type": "Ymultichange(Yrename,Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HADOOP-16192. Fix CallQueue backoff bugs: perform backoff when add() is used and update backoff when refreshed.\n",
      "commitDate": "18/03/19 8:13 AM",
      "commitName": "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
      "commitAuthor": "Erik Krogen",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "HADOOP-16192. Fix CallQueue backoff bugs: perform backoff when add() is used and update backoff when refreshed.\n",
          "commitDate": "18/03/19 8:13 AM",
          "commitName": "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "17/09/18 8:10 PM",
          "commitNameOld": "ee051ef9fec1fddb612aa1feae9fd3df7091354f",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 181.5,
          "commitsBetweenForRepo": 1420,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  public boolean add(E e) {\n+  boolean addInternal(E e, boolean checkBackoff) {\n+    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n+      throwBackoff();\n+    }\n     try {\n       return putRef.get().add(e);\n     } catch (CallQueueOverflowException ex) {\n       // queue provided a custom exception that may control if the client\n       // should be disconnected.\n       throw ex;\n     } catch (IllegalStateException ise) {\n       throwBackoff();\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean addInternal(E e, boolean checkBackoff) {\n    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n      throwBackoff();\n    }\n    try {\n      return putRef.get().add(e);\n    } catch (CallQueueOverflowException ex) {\n      // queue provided a custom exception that may control if the client\n      // should be disconnected.\n      throw ex;\n    } catch (IllegalStateException ise) {\n      throwBackoff();\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "add",
            "newValue": "addInternal"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-16192. Fix CallQueue backoff bugs: perform backoff when add() is used and update backoff when refreshed.\n",
          "commitDate": "18/03/19 8:13 AM",
          "commitName": "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "17/09/18 8:10 PM",
          "commitNameOld": "ee051ef9fec1fddb612aa1feae9fd3df7091354f",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 181.5,
          "commitsBetweenForRepo": 1420,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  public boolean add(E e) {\n+  boolean addInternal(E e, boolean checkBackoff) {\n+    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n+      throwBackoff();\n+    }\n     try {\n       return putRef.get().add(e);\n     } catch (CallQueueOverflowException ex) {\n       // queue provided a custom exception that may control if the client\n       // should be disconnected.\n       throw ex;\n     } catch (IllegalStateException ise) {\n       throwBackoff();\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean addInternal(E e, boolean checkBackoff) {\n    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n      throwBackoff();\n    }\n    try {\n      return putRef.get().add(e);\n    } catch (CallQueueOverflowException ex) {\n      // queue provided a custom exception that may control if the client\n      // should be disconnected.\n      throw ex;\n    } catch (IllegalStateException ise) {\n      throwBackoff();\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "[e-E]",
            "newValue": "[e-E, checkBackoff-boolean]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-16192. Fix CallQueue backoff bugs: perform backoff when add() is used and update backoff when refreshed.\n",
          "commitDate": "18/03/19 8:13 AM",
          "commitName": "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "17/09/18 8:10 PM",
          "commitNameOld": "ee051ef9fec1fddb612aa1feae9fd3df7091354f",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 181.5,
          "commitsBetweenForRepo": 1420,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  public boolean add(E e) {\n+  boolean addInternal(E e, boolean checkBackoff) {\n+    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n+      throwBackoff();\n+    }\n     try {\n       return putRef.get().add(e);\n     } catch (CallQueueOverflowException ex) {\n       // queue provided a custom exception that may control if the client\n       // should be disconnected.\n       throw ex;\n     } catch (IllegalStateException ise) {\n       throwBackoff();\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean addInternal(E e, boolean checkBackoff) {\n    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n      throwBackoff();\n    }\n    try {\n      return putRef.get().add(e);\n    } catch (CallQueueOverflowException ex) {\n      // queue provided a custom exception that may control if the client\n      // should be disconnected.\n      throw ex;\n    } catch (IllegalStateException ise) {\n      throwBackoff();\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {
            "oldValue": "[public]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-16192. Fix CallQueue backoff bugs: perform backoff when add() is used and update backoff when refreshed.\n",
          "commitDate": "18/03/19 8:13 AM",
          "commitName": "8c95cb9d6bef369fef6a8364f0c0764eba90e44a",
          "commitAuthor": "Erik Krogen",
          "commitDateOld": "17/09/18 8:10 PM",
          "commitNameOld": "ee051ef9fec1fddb612aa1feae9fd3df7091354f",
          "commitAuthorOld": "Yiqun Lin",
          "daysBetweenCommits": 181.5,
          "commitsBetweenForRepo": 1420,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,15 @@\n-  public boolean add(E e) {\n+  boolean addInternal(E e, boolean checkBackoff) {\n+    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n+      throwBackoff();\n+    }\n     try {\n       return putRef.get().add(e);\n     } catch (CallQueueOverflowException ex) {\n       // queue provided a custom exception that may control if the client\n       // should be disconnected.\n       throw ex;\n     } catch (IllegalStateException ise) {\n       throwBackoff();\n     }\n     return true;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  boolean addInternal(E e, boolean checkBackoff) {\n    if (checkBackoff \u0026\u0026 isClientBackoffEnabled() \u0026\u0026 shouldBackOff(e)) {\n      throwBackoff();\n    }\n    try {\n      return putRef.get().add(e);\n    } catch (CallQueueOverflowException ex) {\n      // queue provided a custom exception that may control if the client\n      // should be disconnected.\n      throw ex;\n    } catch (IllegalStateException ise) {\n      throwBackoff();\n    }\n    return true;\n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "855e0477b1706a2d5b0df6a2b0e461aeec8839c2": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14035. Reduce fair call queue backoff\u0027s impact on clients. Contributed by Daryn Sharp.\n",
      "commitDate": "06/06/17 6:35 AM",
      "commitName": "855e0477b1706a2d5b0df6a2b0e461aeec8839c2",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,12 @@\n+  public boolean add(E e) {\n+    try {\n+      return putRef.get().add(e);\n+    } catch (CallQueueOverflowException ex) {\n+      // queue provided a custom exception that may control if the client\n+      // should be disconnected.\n+      throw ex;\n+    } catch (IllegalStateException ise) {\n+      throwBackoff();\n+    }\n+    return true;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean add(E e) {\n    try {\n      return putRef.get().add(e);\n    } catch (CallQueueOverflowException ex) {\n      // queue provided a custom exception that may control if the client\n      // should be disconnected.\n      throw ex;\n    } catch (IllegalStateException ise) {\n      throwBackoff();\n    }\n    return true;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/CallQueueManager.java"
    }
  }
}