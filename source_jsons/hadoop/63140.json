{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationReport.java",
  "functionName": "newInstance",
  "functionId": "newInstance___applicationId-ApplicationId__applicationAttemptId-ApplicationAttemptId__user-String__queue-String__name-String__host-String__rpcPort-int__clientToAMToken-Token__state-YarnApplicationState__diagnostics-String__url-String__startTime-long__finishTime-long__finalStatus-FinalApplicationStatus__appResources-ApplicationResourceUsageReport__origTrackingUrl-String__progress-float__applicationType-String__amRmToken-Token__tags-Set__String____unmanagedApplication-boolean__priority-Priority__appNodeLabelExpression-String__amNodeLabelExpression-String",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
  "functionStartLine": 109,
  "functionEndLine": 130,
  "numCommitsSeen": 83,
  "timeTaken": 4606,
  "changeHistory": [
    "04105bbfdb041a41062c856632641140de84fba8",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
    "ae5308fe1d08479da0f3929cc6a57816411e9121",
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
    "0306d902f53582320aa5895ca9f5c31f64aaaff6",
    "3e000a919fede85230fcfb06309a1f1d5e0c479c"
  ],
  "changeHistoryShort": {
    "04105bbfdb041a41062c856632641140de84fba8": "Ybodychange",
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": "Ybodychange",
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": "Ybodychange",
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": "Ybodychange",
    "ae5308fe1d08479da0f3929cc6a57816411e9121": "Ymultichange(Yparameterchange,Ybodychange)",
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2": "Ymultichange(Yparameterchange,Ybodychange)",
    "0306d902f53582320aa5895ca9f5c31f64aaaff6": "Ymultichange(Yparameterchange,Ybodychange)",
    "3e000a919fede85230fcfb06309a1f1d5e0c479c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "04105bbfdb041a41062c856632641140de84fba8": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6616: YARN AHS shows submitTime for jobs same as startTime. Contributed by  Prabhu Joseph\n",
      "commitDate": "29/01/19 9:22 AM",
      "commitName": "04105bbfdb041a41062c856632641140de84fba8",
      "commitAuthor": "Eric E Payne",
      "commitDateOld": "17/04/18 11:15 AM",
      "commitNameOld": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 286.96,
      "commitsBetweenForRepo": 2711,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n         ApplicationAttemptId applicationAttemptId, String user, String queue,\n         String name, String host, int rpcPort, Token clientToAMToken,\n         YarnApplicationState state, String diagnostics, String url,\n         long startTime, long finishTime,\n         FinalApplicationStatus finalStatus,\n         ApplicationResourceUsageReport appResources, String origTrackingUrl,\n         float progress, String applicationType, Token amRmToken,\n         Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n         String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n             newInstance(applicationId, applicationAttemptId, user, queue, name,\n                     host, rpcPort, clientToAMToken, state, diagnostics, url,\n-                    startTime, 0, finishTime, finalStatus, appResources,\n+                    startTime, 0, 0, finishTime, finalStatus, appResources,\n                     origTrackingUrl, progress, applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n     report.setAppNodeLabelExpression(appNodeLabelExpression);\n     report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n        ApplicationAttemptId applicationAttemptId, String user, String queue,\n        String name, String host, int rpcPort, Token clientToAMToken,\n        YarnApplicationState state, String diagnostics, String url,\n        long startTime, long finishTime,\n        FinalApplicationStatus finalStatus,\n        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n        float progress, String applicationType, Token amRmToken,\n        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n        String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n            newInstance(applicationId, applicationAttemptId, user, queue, name,\n                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n                    startTime, 0, 0, finishTime, finalStatus, appResources,\n                    origTrackingUrl, progress, applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
      "extendedDetails": {}
    },
    "bb92bfb4ef96baa234966b60e464d1773fbf3f22": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 11:15 AM",
      "commitName": "bb92bfb4ef96baa234966b60e464d1773fbf3f22",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 6:04 AM",
      "commitNameOld": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.22,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n-      ApplicationAttemptId applicationAttemptId, String user, String queue,\n-      String name, String host, int rpcPort, Token clientToAMToken,\n-      YarnApplicationState state, String diagnostics, String url,\n-      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n-      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n-      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n-      boolean unmanagedApplication, Priority priority,\n-      String appNodeLabelExpression, String amNodeLabelExpression) {\n+        ApplicationAttemptId applicationAttemptId, String user, String queue,\n+        String name, String host, int rpcPort, Token clientToAMToken,\n+        YarnApplicationState state, String diagnostics, String url,\n+        long startTime, long finishTime,\n+        FinalApplicationStatus finalStatus,\n+        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n+        float progress, String applicationType, Token amRmToken,\n+        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n+        String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n-        newInstance(applicationId, applicationAttemptId, user, queue, name,\n-          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n-          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n-          applicationType, amRmToken);\n+            newInstance(applicationId, applicationAttemptId, user, queue, name,\n+                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n+                    startTime, 0, finishTime, finalStatus, appResources,\n+                    origTrackingUrl, progress, applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n     report.setAppNodeLabelExpression(appNodeLabelExpression);\n     report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n        ApplicationAttemptId applicationAttemptId, String user, String queue,\n        String name, String host, int rpcPort, Token clientToAMToken,\n        YarnApplicationState state, String diagnostics, String url,\n        long startTime, long finishTime,\n        FinalApplicationStatus finalStatus,\n        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n        float progress, String applicationType, Token amRmToken,\n        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n        String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n            newInstance(applicationId, applicationAttemptId, user, queue, name,\n                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n                    startTime, 0, finishTime, finalStatus, appResources,\n                    origTrackingUrl, progress, applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
      "extendedDetails": {}
    },
    "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\"\n\nThis reverts commit 0c14b6f0d80d847be7ef3eda1614eadbf835181c.\n",
      "commitDate": "17/04/18 6:04 AM",
      "commitName": "86dfb70875d3e583deeec9998d95cfd7c5ae4ec4",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "17/04/18 5:59 AM",
      "commitNameOld": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthorOld": "Haibo Chen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,21 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n-        ApplicationAttemptId applicationAttemptId, String user, String queue,\n-        String name, String host, int rpcPort, Token clientToAMToken,\n-        YarnApplicationState state, String diagnostics, String url,\n-        long startTime, long finishTime,\n-        FinalApplicationStatus finalStatus,\n-        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n-        float progress, String applicationType, Token amRmToken,\n-        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n-        String appNodeLabelExpression, String amNodeLabelExpression) {\n+      ApplicationAttemptId applicationAttemptId, String user, String queue,\n+      String name, String host, int rpcPort, Token clientToAMToken,\n+      YarnApplicationState state, String diagnostics, String url,\n+      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n+      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n+      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n+      boolean unmanagedApplication, Priority priority,\n+      String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n-            newInstance(applicationId, applicationAttemptId, user, queue, name,\n-                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n-                    startTime, 0, finishTime, finalStatus, appResources,\n-                    origTrackingUrl, progress, applicationType, amRmToken);\n+        newInstance(applicationId, applicationAttemptId, user, queue, name,\n+          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n+          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n+          applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n     report.setAppNodeLabelExpression(appNodeLabelExpression);\n     report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n      boolean unmanagedApplication, Priority priority,\n      String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
      "extendedDetails": {}
    },
    "0c14b6f0d80d847be7ef3eda1614eadbf835181c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7088. Add application launch time to Resource Manager REST API. (Kanwaljeet Sachdev via Haibo Chen)\n",
      "commitDate": "17/04/18 5:59 AM",
      "commitName": "0c14b6f0d80d847be7ef3eda1614eadbf835181c",
      "commitAuthor": "Haibo Chen",
      "commitDateOld": "03/10/17 3:01 PM",
      "commitNameOld": "c9b525bd943fe7e098e72fb9be5623862c7ab5ff",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 195.62,
      "commitsBetweenForRepo": 1448,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,22 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n-      ApplicationAttemptId applicationAttemptId, String user, String queue,\n-      String name, String host, int rpcPort, Token clientToAMToken,\n-      YarnApplicationState state, String diagnostics, String url,\n-      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n-      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n-      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n-      boolean unmanagedApplication, Priority priority,\n-      String appNodeLabelExpression, String amNodeLabelExpression) {\n+        ApplicationAttemptId applicationAttemptId, String user, String queue,\n+        String name, String host, int rpcPort, Token clientToAMToken,\n+        YarnApplicationState state, String diagnostics, String url,\n+        long startTime, long finishTime,\n+        FinalApplicationStatus finalStatus,\n+        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n+        float progress, String applicationType, Token amRmToken,\n+        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n+        String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n-        newInstance(applicationId, applicationAttemptId, user, queue, name,\n-          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n-          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n-          applicationType, amRmToken);\n+            newInstance(applicationId, applicationAttemptId, user, queue, name,\n+                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n+                    startTime, 0, finishTime, finalStatus, appResources,\n+                    origTrackingUrl, progress, applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n     report.setAppNodeLabelExpression(appNodeLabelExpression);\n     report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n        ApplicationAttemptId applicationAttemptId, String user, String queue,\n        String name, String host, int rpcPort, Token clientToAMToken,\n        YarnApplicationState state, String diagnostics, String url,\n        long startTime, long finishTime,\n        FinalApplicationStatus finalStatus,\n        ApplicationResourceUsageReport appResources, String origTrackingUrl,\n        float progress, String applicationType, Token amRmToken,\n        Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority,\n        String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n            newInstance(applicationId, applicationAttemptId, user, queue, name,\n                    host, rpcPort, clientToAMToken, state, diagnostics, url,\n                    startTime, 0, finishTime, finalStatus, appResources,\n                    origTrackingUrl, progress, applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
      "extendedDetails": {}
    },
    "ae5308fe1d08479da0f3929cc6a57816411e9121": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
      "commitDate": "15/09/15 11:40 AM",
      "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
      "commitAuthor": "Wangda Tan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
          "commitDate": "15/09/15 11:40 AM",
          "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "13/09/15 6:25 AM",
          "commitNameOld": "7269906254afe59ea464ed674d8218f82eeaec26",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 2.22,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n-      float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n+      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n+      boolean unmanagedApplication, Priority priority,\n+      String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n+    report.setAppNodeLabelExpression(appNodeLabelExpression);\n+    report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n      boolean unmanagedApplication, Priority priority,\n      String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {
            "oldValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e, unmanagedApplication-boolean, priority-Priority]",
            "newValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e, unmanagedApplication-boolean, priority-Priority, appNodeLabelExpression-String, amNodeLabelExpression-String]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3717. Expose app/am/queue\u0027s node-label-expression to RM web UI / CLI / REST-API. (Naganarasimha G R via wangda)\n",
          "commitDate": "15/09/15 11:40 AM",
          "commitName": "ae5308fe1d08479da0f3929cc6a57816411e9121",
          "commitAuthor": "Wangda Tan",
          "commitDateOld": "13/09/15 6:25 AM",
          "commitNameOld": "7269906254afe59ea464ed674d8218f82eeaec26",
          "commitAuthorOld": "Steve Loughran",
          "daysBetweenCommits": 2.22,
          "commitsBetweenForRepo": 15,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n-      float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n+      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n+      boolean unmanagedApplication, Priority priority,\n+      String appNodeLabelExpression, String amNodeLabelExpression) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n     report.setPriority(priority);\n+    report.setAppNodeLabelExpression(appNodeLabelExpression);\n+    report.setAmNodeLabelExpression(amNodeLabelExpression);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken, Set\u003cString\u003e tags,\n      boolean unmanagedApplication, Priority priority,\n      String appNodeLabelExpression, String amNodeLabelExpression) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    report.setAppNodeLabelExpression(appNodeLabelExpression);\n    report.setAmNodeLabelExpression(amNodeLabelExpression);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-4023. Publish Application Priority to TimelineServer. (Sunil G via rohithsharmaks)\n",
      "commitDate": "12/08/15 2:15 AM",
      "commitName": "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
      "commitAuthor": "rohithsharmaks",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4023. Publish Application Priority to TimelineServer. (Sunil G via rohithsharmaks)\n",
          "commitDate": "12/08/15 2:15 AM",
          "commitName": "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
          "commitAuthor": "rohithsharmaks",
          "commitDateOld": "06/08/15 10:13 PM",
          "commitNameOld": "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 5.17,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n       float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n+      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n+    report.setPriority(priority);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken,\n      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {
            "oldValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e, unmanagedApplication-boolean]",
            "newValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e, unmanagedApplication-boolean, priority-Priority]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4023. Publish Application Priority to TimelineServer. (Sunil G via rohithsharmaks)\n",
          "commitDate": "12/08/15 2:15 AM",
          "commitName": "1c12adb71f32f24ec525313ff8dfcd2b738fc8e2",
          "commitAuthor": "rohithsharmaks",
          "commitDateOld": "06/08/15 10:13 PM",
          "commitNameOld": "b6265d39c5d0fda21dfe55273f193d8a6a20c6a8",
          "commitAuthorOld": "Rohith Sharma K S",
          "daysBetweenCommits": 5.17,
          "commitsBetweenForRepo": 11,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,17 +1,18 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n       float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n+      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n     report.setUnmanagedApp(unmanagedApplication);\n+    report.setPriority(priority);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken,\n      Set\u003cString\u003e tags, boolean unmanagedApplication, Priority priority) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    report.setPriority(priority);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "0306d902f53582320aa5895ca9f5c31f64aaaff6": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-3543. ApplicationReport should be able to tell whether the\nApplication is AM managed or not. Contributed by Rohith Sharma K S\n",
      "commitDate": "03/08/15 3:46 PM",
      "commitName": "0306d902f53582320aa5895ca9f5c31f64aaaff6",
      "commitAuthor": "Xuan",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-3543. ApplicationReport should be able to tell whether the\nApplication is AM managed or not. Contributed by Rohith Sharma K S\n",
          "commitDate": "03/08/15 3:46 PM",
          "commitName": "0306d902f53582320aa5895ca9f5c31f64aaaff6",
          "commitAuthor": "Xuan",
          "commitDateOld": "05/06/15 12:48 PM",
          "commitNameOld": "3e000a919fede85230fcfb06309a1f1d5e0c479c",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 59.12,
          "commitsBetweenForRepo": 362,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n       float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags) {\n+      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n+    report.setUnmanagedApp(unmanagedApplication);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken,\n      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {
            "oldValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e]",
            "newValue": "[applicationId-ApplicationId, applicationAttemptId-ApplicationAttemptId, user-String, queue-String, name-String, host-String, rpcPort-int, clientToAMToken-Token, state-YarnApplicationState, diagnostics-String, url-String, startTime-long, finishTime-long, finalStatus-FinalApplicationStatus, appResources-ApplicationResourceUsageReport, origTrackingUrl-String, progress-float, applicationType-String, amRmToken-Token, tags-Set\u003cString\u003e, unmanagedApplication-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-3543. ApplicationReport should be able to tell whether the\nApplication is AM managed or not. Contributed by Rohith Sharma K S\n",
          "commitDate": "03/08/15 3:46 PM",
          "commitName": "0306d902f53582320aa5895ca9f5c31f64aaaff6",
          "commitAuthor": "Xuan",
          "commitDateOld": "05/06/15 12:48 PM",
          "commitNameOld": "3e000a919fede85230fcfb06309a1f1d5e0c479c",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 59.12,
          "commitsBetweenForRepo": 362,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,17 @@\n   public static ApplicationReport newInstance(ApplicationId applicationId,\n       ApplicationAttemptId applicationAttemptId, String user, String queue,\n       String name, String host, int rpcPort, Token clientToAMToken,\n       YarnApplicationState state, String diagnostics, String url,\n       long startTime, long finishTime, FinalApplicationStatus finalStatus,\n       ApplicationResourceUsageReport appResources, String origTrackingUrl,\n       float progress, String applicationType, Token amRmToken,\n-      Set\u003cString\u003e tags) {\n+      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n     ApplicationReport report \u003d\n         newInstance(applicationId, applicationAttemptId, user, queue, name,\n           host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n           finishTime, finalStatus, appResources, origTrackingUrl, progress,\n           applicationType, amRmToken);\n     report.setApplicationTags(tags);\n+    report.setUnmanagedApp(unmanagedApplication);\n     return report;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken,\n      Set\u003cString\u003e tags, boolean unmanagedApplication) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    report.setUnmanagedApp(unmanagedApplication);\n    return report;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java",
          "extendedDetails": {}
        }
      ]
    },
    "3e000a919fede85230fcfb06309a1f1d5e0c479c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1462. AHS API and other AHS changes to handle tags for completed MR jobs. Contributed by Xuan Gong\n",
      "commitDate": "05/06/15 12:48 PM",
      "commitName": "3e000a919fede85230fcfb06309a1f1d5e0c479c",
      "commitAuthor": "Xuan",
      "diff": "@@ -0,0 +1,16 @@\n+  public static ApplicationReport newInstance(ApplicationId applicationId,\n+      ApplicationAttemptId applicationAttemptId, String user, String queue,\n+      String name, String host, int rpcPort, Token clientToAMToken,\n+      YarnApplicationState state, String diagnostics, String url,\n+      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n+      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n+      float progress, String applicationType, Token amRmToken,\n+      Set\u003cString\u003e tags) {\n+    ApplicationReport report \u003d\n+        newInstance(applicationId, applicationAttemptId, user, queue, name,\n+          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n+          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n+          applicationType, amRmToken);\n+    report.setApplicationTags(tags);\n+    return report;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static ApplicationReport newInstance(ApplicationId applicationId,\n      ApplicationAttemptId applicationAttemptId, String user, String queue,\n      String name, String host, int rpcPort, Token clientToAMToken,\n      YarnApplicationState state, String diagnostics, String url,\n      long startTime, long finishTime, FinalApplicationStatus finalStatus,\n      ApplicationResourceUsageReport appResources, String origTrackingUrl,\n      float progress, String applicationType, Token amRmToken,\n      Set\u003cString\u003e tags) {\n    ApplicationReport report \u003d\n        newInstance(applicationId, applicationAttemptId, user, queue, name,\n          host, rpcPort, clientToAMToken, state, diagnostics, url, startTime,\n          finishTime, finalStatus, appResources, origTrackingUrl, progress,\n          applicationType, amRmToken);\n    report.setApplicationTags(tags);\n    return report;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/api/records/ApplicationReport.java"
    }
  }
}