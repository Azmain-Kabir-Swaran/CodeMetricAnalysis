{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenManager.java",
  "functionName": "createToken",
  "functionId": "createToken___ugi-UserGroupInformation__renewer-String__service-String",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java",
  "functionStartLine": 167,
  "functionEndLine": 188,
  "numCommitsSeen": 8,
  "timeTaken": 842,
  "changeHistory": [
    "2b08a1fc644904a37545107666efc25b3552542d"
  ],
  "changeHistoryShort": {
    "2b08a1fc644904a37545107666efc25b3552542d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2b08a1fc644904a37545107666efc25b3552542d": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-14920. KMSClientProvider won\u0027t work with KMS delegation token retrieved from non-Java client. Contributed by Xiaoyu Yao.\n",
      "commitDate": "06/10/17 10:12 AM",
      "commitName": "2b08a1fc644904a37545107666efc25b3552542d",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,22 @@\n+  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n+      UserGroupInformation ugi, String renewer, String service) {\n+    LOG.debug(\"Creating token with ugi:{}, renewer:{}, service:{}.\",\n+        ugi, renewer, service !\u003dnull ? service : \"\");\n+    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n+    String user \u003d ugi.getUserName();\n+    Text owner \u003d new Text(user);\n+    Text realUser \u003d null;\n+    if (ugi.getRealUser() !\u003d null) {\n+      realUser \u003d new Text(ugi.getRealUser().getUserName());\n+    }\n+    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n+        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n+    tokenIdentifier.setOwner(owner);\n+    tokenIdentifier.setRenewer(new Text(renewer));\n+    tokenIdentifier.setRealUser(realUser);\n+    Token token \u003d new Token(tokenIdentifier, secretManager);\n+    if (service !\u003d null) {\n+      token.setService(new Text(service));\n+    }\n+    return token;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Token\u003c? extends AbstractDelegationTokenIdentifier\u003e createToken(\n      UserGroupInformation ugi, String renewer, String service) {\n    LOG.debug(\"Creating token with ugi:{}, renewer:{}, service:{}.\",\n        ugi, renewer, service !\u003dnull ? service : \"\");\n    renewer \u003d (renewer \u003d\u003d null) ? ugi.getShortUserName() : renewer;\n    String user \u003d ugi.getUserName();\n    Text owner \u003d new Text(user);\n    Text realUser \u003d null;\n    if (ugi.getRealUser() !\u003d null) {\n      realUser \u003d new Text(ugi.getRealUser().getUserName());\n    }\n    AbstractDelegationTokenIdentifier tokenIdentifier \u003d\n        (AbstractDelegationTokenIdentifier) secretManager.createIdentifier();\n    tokenIdentifier.setOwner(owner);\n    tokenIdentifier.setRenewer(new Text(renewer));\n    tokenIdentifier.setRealUser(realUser);\n    Token token \u003d new Token(tokenIdentifier, secretManager);\n    if (service !\u003d null) {\n      token.setService(new Text(service));\n    }\n    return token;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/security/token/delegation/web/DelegationTokenManager.java"
    }
  }
}