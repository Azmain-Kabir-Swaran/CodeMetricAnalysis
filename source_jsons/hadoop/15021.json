{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "PBImageXmlWriter.java",
  "functionName": "dumpSnapshotSection",
  "functionId": "dumpSnapshotSection___in-InputStream",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageXmlWriter.java",
  "functionStartLine": 832,
  "functionEndLine": 855,
  "numCommitsSeen": 27,
  "timeTaken": 2444,
  "changeHistory": [
    "680716f31e120f4d3ee70b095e4db46c05b891d9",
    "700b0e4019cf483f7532609711812150b8c44742",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305"
  ],
  "changeHistoryShort": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": "Ybodychange",
    "700b0e4019cf483f7532609711812150b8c44742": "Ybodychange",
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": "Yintroduced"
  },
  "changeHistoryDetails": {
    "680716f31e120f4d3ee70b095e4db46c05b891d9": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9951. Use string constants for XML tags in OfflineImageReconstructor (Lin Yiqun via cmccabe)\n",
      "commitDate": "21/03/16 11:40 AM",
      "commitName": "680716f31e120f4d3ee70b095e4db46c05b891d9",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "02/03/16 5:56 PM",
      "commitNameOld": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 18.7,
      "commitsBetweenForRepo": 94,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private void dumpSnapshotSection(InputStream in) throws IOException {\n-    out.print(\"\u003cSnapshotSection\u003e\");\n+    out.print(\"\u003c\" + SNAPSHOT_SECTION_NAME + \"\u003e\");\n     SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n-    o(\"snapshotCounter\", s.getSnapshotCounter());\n-    o(\"numSnapshots\", s.getNumSnapshots());\n+    o(SNAPSHOT_SECTION_SNAPSHOT_COUNTER, s.getSnapshotCounter());\n+    o(SNAPSHOT_SECTION_NUM_SNAPSHOTS, s.getNumSnapshots());\n     if (s.getSnapshottableDirCount() \u003e 0) {\n-      out.print(\"\u003csnapshottableDir\u003e\");\n+      out.print(\"\u003c\" + SNAPSHOT_SECTION_SNAPSHOT_TABLE_DIR + \"\u003e\");\n       for (long id : s.getSnapshottableDirList()) {\n-        o(\"dir\", id);\n+        o(SNAPSHOT_SECTION_DIR, id);\n       }\n-      out.print(\"\u003c/snapshottableDir\u003e\\n\");\n+      out.print(\"\u003c/\" + SNAPSHOT_SECTION_SNAPSHOT_TABLE_DIR + \"\u003e\\n\");\n     }\n     for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n       SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n           .parseDelimitedFrom(in);\n-      out.print(\"\u003csnapshot\u003e\");\n-      o(\"id\", pbs.getSnapshotId());\n-      out.print(\"\u003croot\u003e\");\n+      out.print(\"\u003c\" + SNAPSHOT_SECTION_SNAPSHOT + \"\u003e\");\n+      o(SECTION_ID, pbs.getSnapshotId());\n+      out.print(\"\u003c\" + SNAPSHOT_SECTION_ROOT + \"\u003e\");\n       dumpINodeFields(pbs.getRoot());\n-      out.print(\"\u003c/root\u003e\");\n-      out.print(\"\u003c/snapshot\u003e\");\n+      out.print(\"\u003c/\" + SNAPSHOT_SECTION_ROOT + \"\u003e\");\n+      out.print(\"\u003c/\" + SNAPSHOT_SECTION_SNAPSHOT + \"\u003e\");\n     }\n-    out.print(\"\u003c/SnapshotSection\u003e\\n\");\n+    out.print(\"\u003c/\" + SNAPSHOT_SECTION_NAME + \"\u003e\\n\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpSnapshotSection(InputStream in) throws IOException {\n    out.print(\"\u003c\" + SNAPSHOT_SECTION_NAME + \"\u003e\");\n    SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n    o(SNAPSHOT_SECTION_SNAPSHOT_COUNTER, s.getSnapshotCounter());\n    o(SNAPSHOT_SECTION_NUM_SNAPSHOTS, s.getNumSnapshots());\n    if (s.getSnapshottableDirCount() \u003e 0) {\n      out.print(\"\u003c\" + SNAPSHOT_SECTION_SNAPSHOT_TABLE_DIR + \"\u003e\");\n      for (long id : s.getSnapshottableDirList()) {\n        o(SNAPSHOT_SECTION_DIR, id);\n      }\n      out.print(\"\u003c/\" + SNAPSHOT_SECTION_SNAPSHOT_TABLE_DIR + \"\u003e\\n\");\n    }\n    for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n      SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n          .parseDelimitedFrom(in);\n      out.print(\"\u003c\" + SNAPSHOT_SECTION_SNAPSHOT + \"\u003e\");\n      o(SECTION_ID, pbs.getSnapshotId());\n      out.print(\"\u003c\" + SNAPSHOT_SECTION_ROOT + \"\u003e\");\n      dumpINodeFields(pbs.getRoot());\n      out.print(\"\u003c/\" + SNAPSHOT_SECTION_ROOT + \"\u003e\");\n      out.print(\"\u003c/\" + SNAPSHOT_SECTION_SNAPSHOT + \"\u003e\");\n    }\n    out.print(\"\u003c/\" + SNAPSHOT_SECTION_NAME + \"\u003e\\n\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageXmlWriter.java",
      "extendedDetails": {}
    },
    "700b0e4019cf483f7532609711812150b8c44742": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9835. OIV: add ReverseXML processor which reconstructs an fsimage from an XML file (cmccabe)\n",
      "commitDate": "02/03/16 5:56 PM",
      "commitName": "700b0e4019cf483f7532609711812150b8c44742",
      "commitAuthor": "Colin Patrick Mccabe",
      "commitDateOld": "21/10/15 2:58 PM",
      "commitNameOld": "a24c6e84205c684ef864b0fc5301dc07b3578351",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 133.17,
      "commitsBetweenForRepo": 905,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,24 @@\n   private void dumpSnapshotSection(InputStream in) throws IOException {\n     out.print(\"\u003cSnapshotSection\u003e\");\n     SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n     o(\"snapshotCounter\", s.getSnapshotCounter());\n+    o(\"numSnapshots\", s.getNumSnapshots());\n     if (s.getSnapshottableDirCount() \u003e 0) {\n       out.print(\"\u003csnapshottableDir\u003e\");\n       for (long id : s.getSnapshottableDirList()) {\n         o(\"dir\", id);\n       }\n       out.print(\"\u003c/snapshottableDir\u003e\\n\");\n     }\n     for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n       SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n           .parseDelimitedFrom(in);\n-      o(\"snapshot\", pbs.getSnapshotId());\n+      out.print(\"\u003csnapshot\u003e\");\n+      o(\"id\", pbs.getSnapshotId());\n+      out.print(\"\u003croot\u003e\");\n+      dumpINodeFields(pbs.getRoot());\n+      out.print(\"\u003c/root\u003e\");\n+      out.print(\"\u003c/snapshot\u003e\");\n     }\n     out.print(\"\u003c/SnapshotSection\u003e\\n\");\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpSnapshotSection(InputStream in) throws IOException {\n    out.print(\"\u003cSnapshotSection\u003e\");\n    SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n    o(\"snapshotCounter\", s.getSnapshotCounter());\n    o(\"numSnapshots\", s.getNumSnapshots());\n    if (s.getSnapshottableDirCount() \u003e 0) {\n      out.print(\"\u003csnapshottableDir\u003e\");\n      for (long id : s.getSnapshottableDirList()) {\n        o(\"dir\", id);\n      }\n      out.print(\"\u003c/snapshottableDir\u003e\\n\");\n    }\n    for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n      SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n          .parseDelimitedFrom(in);\n      out.print(\"\u003csnapshot\u003e\");\n      o(\"id\", pbs.getSnapshotId());\n      out.print(\"\u003croot\u003e\");\n      dumpINodeFields(pbs.getRoot());\n      out.print(\"\u003c/root\u003e\");\n      out.print(\"\u003c/snapshot\u003e\");\n    }\n    out.print(\"\u003c/SnapshotSection\u003e\\n\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageXmlWriter.java",
      "extendedDetails": {}
    },
    "a2edb11b68ae01a44092cb14ac2717a6aad93305": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5698. Use protobuf to serialize / deserialize FSImage. Contributed by Haohui Mai.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1566359 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/02/14 11:18 AM",
      "commitName": "a2edb11b68ae01a44092cb14ac2717a6aad93305",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,18 @@\n+  private void dumpSnapshotSection(InputStream in) throws IOException {\n+    out.print(\"\u003cSnapshotSection\u003e\");\n+    SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n+    o(\"snapshotCounter\", s.getSnapshotCounter());\n+    if (s.getSnapshottableDirCount() \u003e 0) {\n+      out.print(\"\u003csnapshottableDir\u003e\");\n+      for (long id : s.getSnapshottableDirList()) {\n+        o(\"dir\", id);\n+      }\n+      out.print(\"\u003c/snapshottableDir\u003e\\n\");\n+    }\n+    for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n+      SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n+          .parseDelimitedFrom(in);\n+      o(\"snapshot\", pbs.getSnapshotId());\n+    }\n+    out.print(\"\u003c/SnapshotSection\u003e\\n\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void dumpSnapshotSection(InputStream in) throws IOException {\n    out.print(\"\u003cSnapshotSection\u003e\");\n    SnapshotSection s \u003d SnapshotSection.parseDelimitedFrom(in);\n    o(\"snapshotCounter\", s.getSnapshotCounter());\n    if (s.getSnapshottableDirCount() \u003e 0) {\n      out.print(\"\u003csnapshottableDir\u003e\");\n      for (long id : s.getSnapshottableDirList()) {\n        o(\"dir\", id);\n      }\n      out.print(\"\u003c/snapshottableDir\u003e\\n\");\n    }\n    for (int i \u003d 0; i \u003c s.getNumSnapshots(); ++i) {\n      SnapshotSection.Snapshot pbs \u003d SnapshotSection.Snapshot\n          .parseDelimitedFrom(in);\n      o(\"snapshot\", pbs.getSnapshotId());\n    }\n    out.print(\"\u003c/SnapshotSection\u003e\\n\");\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/tools/offlineImageViewer/PBImageXmlWriter.java"
    }
  }
}