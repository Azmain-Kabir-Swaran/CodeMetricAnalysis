{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RawLocalFileSystem.java",
  "functionName": "rename",
  "functionId": "rename___src-Path__dst-Path",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
  "functionStartLine": 381,
  "functionEndLine": 400,
  "numCommitsSeen": 73,
  "timeTaken": 1905,
  "changeHistory": [
    "5763b173d34dcf7372520076f00b576f493662cd",
    "38adf46c02c8c76f8b5c27d10a76efcc6a0533ca",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "5763b173d34dcf7372520076f00b576f493662cd": "Ybodychange",
    "38adf46c02c8c76f8b5c27d10a76efcc6a0533ca": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "5763b173d34dcf7372520076f00b576f493662cd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9805. Refactor RawLocalFileSystem#rename for improved testability. Contributed by Jean-Pierre Matsumoto.\n",
      "commitDate": "02/04/15 4:13 PM",
      "commitName": "5763b173d34dcf7372520076f00b576f493662cd",
      "commitAuthor": "cnauroth",
      "commitDateOld": "21/01/15 4:00 PM",
      "commitNameOld": "a0521bc83a168a06f21314a9aff78630a576fc75",
      "commitAuthorOld": "Konstantin V Shvachko",
      "daysBetweenCommits": 70.97,
      "commitsBetweenForRepo": 671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,20 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n     // Attempt rename using Java API.\n     File srcFile \u003d pathToFile(src);\n     File dstFile \u003d pathToFile(dst);\n     if (srcFile.renameTo(dstFile)) {\n       return true;\n     }\n \n-    // Enforce POSIX rename behavior that a source directory replaces an existing\n-    // destination if the destination is an empty directory.  On most platforms,\n-    // this is already handled by the Java API call above.  Some platforms\n-    // (notably Windows) do not provide this behavior, so the Java API call above\n-    // fails.  Delete destination and attempt rename again.\n-    if (this.exists(dst)) {\n-      FileStatus sdst \u003d this.getFileStatus(dst);\n-      if (sdst.isDirectory() \u0026\u0026 dstFile.list().length \u003d\u003d 0) {\n-        if (LOG.isDebugEnabled()) {\n-          LOG.debug(\"Deleting empty destination and renaming \" + src + \" to \" +\n-            dst);\n-        }\n-        if (this.delete(dst, false) \u0026\u0026 srcFile.renameTo(dstFile)) {\n-          return true;\n-        }\n-      }\n+    // Else try POSIX style rename on Windows only\n+    if (Shell.WINDOWS \u0026\u0026\n+        handleEmptyDstDirectoryOnWindows(src, srcFile, dst, dstFile)) {\n+      return true;\n     }\n \n     // The fallback behavior accomplishes the rename by a full copy.\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n     }\n     return FileUtil.copy(this, src, this, dst, true, getConf());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    // Attempt rename using Java API.\n    File srcFile \u003d pathToFile(src);\n    File dstFile \u003d pathToFile(dst);\n    if (srcFile.renameTo(dstFile)) {\n      return true;\n    }\n\n    // Else try POSIX style rename on Windows only\n    if (Shell.WINDOWS \u0026\u0026\n        handleEmptyDstDirectoryOnWindows(src, srcFile, dst, dstFile)) {\n      return true;\n    }\n\n    // The fallback behavior accomplishes the rename by a full copy.\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "38adf46c02c8c76f8b5c27d10a76efcc6a0533ca": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-9507. LocalFileSystem rename() is broken in some cases when destination exists. Contributed by Chris Nauroth.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507429 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/07/13 1:47 PM",
      "commitName": "38adf46c02c8c76f8b5c27d10a76efcc6a0533ca",
      "commitAuthor": "Chris Nauroth",
      "commitDateOld": "11/07/13 11:10 AM",
      "commitNameOld": "e1a1c336323804e77265216da38a5e04e8214d85",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 15.11,
      "commitsBetweenForRepo": 101,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,32 @@\n   public boolean rename(Path src, Path dst) throws IOException {\n-    if (pathToFile(src).renameTo(pathToFile(dst))) {\n+    // Attempt rename using Java API.\n+    File srcFile \u003d pathToFile(src);\n+    File dstFile \u003d pathToFile(dst);\n+    if (srcFile.renameTo(dstFile)) {\n       return true;\n     }\n+\n+    // Enforce POSIX rename behavior that a source directory replaces an existing\n+    // destination if the destination is an empty directory.  On most platforms,\n+    // this is already handled by the Java API call above.  Some platforms\n+    // (notably Windows) do not provide this behavior, so the Java API call above\n+    // fails.  Delete destination and attempt rename again.\n+    if (this.exists(dst)) {\n+      FileStatus sdst \u003d this.getFileStatus(dst);\n+      if (sdst.isDirectory() \u0026\u0026 dstFile.list().length \u003d\u003d 0) {\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Deleting empty destination and renaming \" + src + \" to \" +\n+            dst);\n+        }\n+        if (this.delete(dst, false) \u0026\u0026 srcFile.renameTo(dstFile)) {\n+          return true;\n+        }\n+      }\n+    }\n+\n+    // The fallback behavior accomplishes the rename by a full copy.\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n+    }\n     return FileUtil.copy(this, src, this, dst, true, getConf());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    // Attempt rename using Java API.\n    File srcFile \u003d pathToFile(src);\n    File dstFile \u003d pathToFile(dst);\n    if (srcFile.renameTo(dstFile)) {\n      return true;\n    }\n\n    // Enforce POSIX rename behavior that a source directory replaces an existing\n    // destination if the destination is an empty directory.  On most platforms,\n    // this is already handled by the Java API call above.  Some platforms\n    // (notably Windows) do not provide this behavior, so the Java API call above\n    // fails.  Delete destination and attempt rename again.\n    if (this.exists(dst)) {\n      FileStatus sdst \u003d this.getFileStatus(dst);\n      if (sdst.isDirectory() \u0026\u0026 dstFile.list().length \u003d\u003d 0) {\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Deleting empty destination and renaming \" + src + \" to \" +\n            dst);\n        }\n        if (this.delete(dst, false) \u0026\u0026 srcFile.renameTo(dstFile)) {\n          return true;\n        }\n      }\n    }\n\n    // The fallback behavior accomplishes the rename by a full copy.\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Falling through to a copy of \" + src + \" to \" + dst);\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    if (pathToFile(src).renameTo(pathToFile(dst))) {\n      return true;\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    if (pathToFile(src).renameTo(pathToFile(dst))) {\n      return true;\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    if (pathToFile(src).renameTo(pathToFile(dst))) {\n      return true;\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "common/src/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/fs/RawLocalFileSystem.java",
        "newPath": "common/src/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
      }
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,6 @@\n+  public boolean rename(Path src, Path dst) throws IOException {\n+    if (pathToFile(src).renameTo(pathToFile(dst))) {\n+      return true;\n+    }\n+    return FileUtil.copy(this, src, this, dst, true, getConf());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public boolean rename(Path src, Path dst) throws IOException {\n    if (pathToFile(src).renameTo(pathToFile(dst))) {\n      return true;\n    }\n    return FileUtil.copy(this, src, this, dst, true, getConf());\n  }",
      "path": "src/java/org/apache/hadoop/fs/RawLocalFileSystem.java"
    }
  }
}