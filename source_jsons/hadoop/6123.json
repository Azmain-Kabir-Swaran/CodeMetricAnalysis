{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSEditLog.java",
  "functionName": "selectInputStreams",
  "functionId": "selectInputStreams___fromTxId-long__toAtLeastTxId-long",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
  "functionStartLine": 1711,
  "functionEndLine": 1714,
  "numCommitsSeen": 141,
  "timeTaken": 3790,
  "changeHistory": [
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
    "74dfa8f1f22d58df64a78c660af111e17ab7053e",
    "f87a4b40bc99e76602a75906df31747cfdbff78a",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15"
  ],
  "changeHistoryShort": {
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e": "Ybodychange",
    "74dfa8f1f22d58df64a78c660af111e17ab7053e": "Ymultichange(Ymodifierchange,Ybodychange)",
    "f87a4b40bc99e76602a75906df31747cfdbff78a": "Ybodychange",
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": "Ybodychange",
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15": "Yintroduced"
  },
  "changeHistoryDetails": {
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10519. Add a configuration option to enable in-progress edit log tailing. Contributed by Jiayi Zhou.\n",
      "commitDate": "27/07/16 5:55 PM",
      "commitName": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "07/06/16 1:52 AM",
      "commitNameOld": "e620530301fd3e62537d4b7bc3d8ed296bda1ffc",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 50.67,
      "commitsBetweenForRepo": 454,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,4 @@\n   public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n       long fromTxId, long toAtLeastTxId) throws IOException {\n-    return selectInputStreams(fromTxId, toAtLeastTxId, null, true);\n+    return selectInputStreams(fromTxId, toAtLeastTxId, null, true, false);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n      long fromTxId, long toAtLeastTxId) throws IOException {\n    return selectInputStreams(fromTxId, toAtLeastTxId, null, true, false);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "74dfa8f1f22d58df64a78c660af111e17ab7053e": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-2982. Startup performance suffers when there are many edit log segments. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1342042 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/05/12 1:42 PM",
      "commitName": "74dfa8f1f22d58df64a78c660af111e17ab7053e",
      "commitAuthor": "Todd Lipcon",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-2982. Startup performance suffers when there are many edit log segments. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1342042 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/12 1:42 PM",
          "commitName": "74dfa8f1f22d58df64a78c660af111e17ab7053e",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/04/12 12:31 PM",
          "commitNameOld": "f1667dee146fe5e3edbb50e409ae96fa0777473a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 37.05,
          "commitsBetweenForRepo": 235,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n-      long toAtLeastTxId) throws IOException {\n-    return selectInputStreams(fromTxId, toAtLeastTxId, true);\n+  public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n+      long fromTxId, long toAtLeastTxId) throws IOException {\n+    return selectInputStreams(fromTxId, toAtLeastTxId, null, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n      long fromTxId, long toAtLeastTxId) throws IOException {\n    return selectInputStreams(fromTxId, toAtLeastTxId, null, true);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-2982. Startup performance suffers when there are many edit log segments. Contributed by Colin Patrick McCabe.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1342042 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/05/12 1:42 PM",
          "commitName": "74dfa8f1f22d58df64a78c660af111e17ab7053e",
          "commitAuthor": "Todd Lipcon",
          "commitDateOld": "16/04/12 12:31 PM",
          "commitNameOld": "f1667dee146fe5e3edbb50e409ae96fa0777473a",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 37.05,
          "commitsBetweenForRepo": 235,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,4 +1,4 @@\n-  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n-      long toAtLeastTxId) throws IOException {\n-    return selectInputStreams(fromTxId, toAtLeastTxId, true);\n+  public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n+      long fromTxId, long toAtLeastTxId) throws IOException {\n+    return selectInputStreams(fromTxId, toAtLeastTxId, null, true);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public Collection\u003cEditLogInputStream\u003e selectInputStreams(\n      long fromTxId, long toAtLeastTxId) throws IOException {\n    return selectInputStreams(fromTxId, toAtLeastTxId, null, true);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
          "extendedDetails": {}
        }
      ]
    },
    "f87a4b40bc99e76602a75906df31747cfdbff78a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1975. Support for sharing the namenode state from active to standby. Contributed by Jitendra Nath Pandey, Aaron T Myers, and Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208813 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 1:46 PM",
      "commitName": "f87a4b40bc99e76602a75906df31747cfdbff78a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "19/11/11 7:58 PM",
      "commitNameOld": "b2313021fd03d9803a04b120d97bfd91fcbd4d36",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 10.74,
      "commitsBetweenForRepo": 68,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,4 @@\n   Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n       long toAtLeastTxId) throws IOException {\n-    List\u003cEditLogInputStream\u003e streams \u003d new ArrayList\u003cEditLogInputStream\u003e();\n-    EditLogInputStream stream \u003d journalSet.getInputStream(fromTxId);\n-    while (stream !\u003d null) {\n-      fromTxId \u003d stream.getLastTxId() + 1;\n-      streams.add(stream);\n-      stream \u003d journalSet.getInputStream(fromTxId);\n-    }\n-    if (fromTxId \u003c\u003d toAtLeastTxId) {\n-      closeAllStreams(streams);\n-      throw new IOException(\"No non-corrupt logs for txid \" \n-                            + fromTxId);\n-    }\n-    return streams;\n+    return selectInputStreams(fromTxId, toAtLeastTxId, true);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n      long toAtLeastTxId) throws IOException {\n    return selectInputStreams(fromTxId, toAtLeastTxId, true);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "1ae5b5e338ef383c5642e2f04b927871c7b184f6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-2158. Add JournalSet to manage the set of journals.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177473 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/09/11 6:14 PM",
      "commitName": "1ae5b5e338ef383c5642e2f04b927871c7b184f6",
      "commitAuthor": "Jitendra Nath Pandey",
      "commitDateOld": "06/09/11 1:27 PM",
      "commitNameOld": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthorOld": "Jitendra Nath Pandey",
      "daysBetweenCommits": 23.2,
      "commitsBetweenForRepo": 169,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,16 @@\n-  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId, long toAtLeastTxId) \n-      throws IOException {\n-    List\u003cEditLogInputStream\u003e streams \u003d Lists.newArrayList();\n-    \n-    boolean gapFound \u003d false;\n-    EditLogInputStream stream \u003d selectStream(fromTxId);\n+  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n+      long toAtLeastTxId) throws IOException {\n+    List\u003cEditLogInputStream\u003e streams \u003d new ArrayList\u003cEditLogInputStream\u003e();\n+    EditLogInputStream stream \u003d journalSet.getInputStream(fromTxId);\n     while (stream !\u003d null) {\n       fromTxId \u003d stream.getLastTxId() + 1;\n       streams.add(stream);\n-      try {\n-        stream \u003d selectStream(fromTxId);\n-      } catch (IOException ioe) {\n-        gapFound \u003d true;\n-        break;\n-      }\n+      stream \u003d journalSet.getInputStream(fromTxId);\n     }\n-    if (fromTxId \u003c\u003d toAtLeastTxId || gapFound) {\n+    if (fromTxId \u003c\u003d toAtLeastTxId) {\n       closeAllStreams(streams);\n       throw new IOException(\"No non-corrupt logs for txid \" \n                             + fromTxId);\n     }\n     return streams;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId,\n      long toAtLeastTxId) throws IOException {\n    List\u003cEditLogInputStream\u003e streams \u003d new ArrayList\u003cEditLogInputStream\u003e();\n    EditLogInputStream stream \u003d journalSet.getInputStream(fromTxId);\n    while (stream !\u003d null) {\n      fromTxId \u003d stream.getLastTxId() + 1;\n      streams.add(stream);\n      stream \u003d journalSet.getInputStream(fromTxId);\n    }\n    if (fromTxId \u003c\u003d toAtLeastTxId) {\n      closeAllStreams(streams);\n      throw new IOException(\"No non-corrupt logs for txid \" \n                            + fromTxId);\n    }\n    return streams;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java",
      "extendedDetails": {}
    },
    "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2018. Move all journal stream management code into one place. Contributed by Ivan Kelly.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1165826 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/09/11 1:27 PM",
      "commitName": "bdc3720d5b67a1c8fc2dfb29be16e4155c0e7f15",
      "commitAuthor": "Jitendra Nath Pandey",
      "diff": "@@ -0,0 +1,23 @@\n+  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId, long toAtLeastTxId) \n+      throws IOException {\n+    List\u003cEditLogInputStream\u003e streams \u003d Lists.newArrayList();\n+    \n+    boolean gapFound \u003d false;\n+    EditLogInputStream stream \u003d selectStream(fromTxId);\n+    while (stream !\u003d null) {\n+      fromTxId \u003d stream.getLastTxId() + 1;\n+      streams.add(stream);\n+      try {\n+        stream \u003d selectStream(fromTxId);\n+      } catch (IOException ioe) {\n+        gapFound \u003d true;\n+        break;\n+      }\n+    }\n+    if (fromTxId \u003c\u003d toAtLeastTxId || gapFound) {\n+      closeAllStreams(streams);\n+      throw new IOException(\"No non-corrupt logs for txid \" \n+                            + fromTxId);\n+    }\n+    return streams;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  Collection\u003cEditLogInputStream\u003e selectInputStreams(long fromTxId, long toAtLeastTxId) \n      throws IOException {\n    List\u003cEditLogInputStream\u003e streams \u003d Lists.newArrayList();\n    \n    boolean gapFound \u003d false;\n    EditLogInputStream stream \u003d selectStream(fromTxId);\n    while (stream !\u003d null) {\n      fromTxId \u003d stream.getLastTxId() + 1;\n      streams.add(stream);\n      try {\n        stream \u003d selectStream(fromTxId);\n      } catch (IOException ioe) {\n        gapFound \u003d true;\n        break;\n      }\n    }\n    if (fromTxId \u003c\u003d toAtLeastTxId || gapFound) {\n      closeAllStreams(streams);\n      throw new IOException(\"No non-corrupt logs for txid \" \n                            + fromTxId);\n    }\n    return streams;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSEditLog.java"
    }
  }
}