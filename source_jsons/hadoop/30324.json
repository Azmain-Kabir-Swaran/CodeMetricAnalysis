{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContextFactory.java",
  "functionName": "createContext",
  "functionId": "createContext___classes-Class[]__properties-Map__String,Object__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ContextFactory.java",
  "functionStartLine": 92,
  "functionEndLine": 120,
  "numCommitsSeen": 3,
  "timeTaken": 1110,
  "changeHistory": [
    "fab5b80a36bad90e03f7e5e37ded47d67d6e2e81",
    "7b42e0e32ac7dfb60f25fa656a9bef69c2a62501"
  ],
  "changeHistoryShort": {
    "fab5b80a36bad90e03f7e5e37ded47d67d6e2e81": "Ybodychange",
    "7b42e0e32ac7dfb60f25fa656a9bef69c2a62501": "Yintroduced"
  },
  "changeHistoryDetails": {
    "fab5b80a36bad90e03f7e5e37ded47d67d6e2e81": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9554.  Fixed TimelineEntity DAO serialization handling.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "16/05/19 1:39 PM",
      "commitName": "fab5b80a36bad90e03f7e5e37ded47d67d6e2e81",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "05/03/19 9:17 AM",
      "commitNameOld": "7b42e0e32ac7dfb60f25fa656a9bef69c2a62501",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 72.14,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,29 @@\n   public static JAXBContext createContext(Class[] classes,\n       Map\u003cString, Object\u003e properties) throws Exception {\n-    synchronized (ContextFactory.class) {\n-      if (jaxbContext \u003d\u003d null) {\n-        Class spFactory \u003d Class.forName(\n-            \"com.sun.xml.internal.bind.v2.ContextFactory\");\n-        Method m \u003d spFactory.getMethod(\"createContext\", Class[].class,\n-            Map.class);\n-        jaxbContext \u003d (JAXBContext) m.invoke((Object) null, classes,\n-            properties);\n+    for (Class c : classes) {\n+      if (IGNORE_SET.contains(c)) {\n+        je.setStackTrace(stackTrace);\n+        throw je;\n+      }\n+      if (!CLASS_SET.contains(c)) {\n+        try {\n+          return newContext(classes, properties);\n+        } catch (Exception e) {\n+          LOG.warn(\"Error while Creating JAXBContext\", e);\n+          throw e;\n+        }\n       }\n     }\n-    return jaxbContext;\n+\n+    try {\n+      synchronized (ContextFactory.class) {\n+        if (cacheContext \u003d\u003d null) {\n+          cacheContext \u003d newContext(CTYPES, properties);\n+        }\n+      }\n+    } catch(Exception e) {\n+      LOG.warn(\"Error while Creating JAXBContext\", e);\n+      throw e;\n+    }\n+    return cacheContext;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static JAXBContext createContext(Class[] classes,\n      Map\u003cString, Object\u003e properties) throws Exception {\n    for (Class c : classes) {\n      if (IGNORE_SET.contains(c)) {\n        je.setStackTrace(stackTrace);\n        throw je;\n      }\n      if (!CLASS_SET.contains(c)) {\n        try {\n          return newContext(classes, properties);\n        } catch (Exception e) {\n          LOG.warn(\"Error while Creating JAXBContext\", e);\n          throw e;\n        }\n      }\n    }\n\n    try {\n      synchronized (ContextFactory.class) {\n        if (cacheContext \u003d\u003d null) {\n          cacheContext \u003d newContext(CTYPES, properties);\n        }\n      }\n    } catch(Exception e) {\n      LOG.warn(\"Error while Creating JAXBContext\", e);\n      throw e;\n    }\n    return cacheContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ContextFactory.java",
      "extendedDetails": {}
    },
    "7b42e0e32ac7dfb60f25fa656a9bef69c2a62501": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7266.  Fixed deadlock in Timeline Server thread initialization.\n            Contributed by Prabhu Joseph\n",
      "commitDate": "05/03/19 9:17 AM",
      "commitName": "7b42e0e32ac7dfb60f25fa656a9bef69c2a62501",
      "commitAuthor": "Eric Yang",
      "diff": "@@ -0,0 +1,14 @@\n+  public static JAXBContext createContext(Class[] classes,\n+      Map\u003cString, Object\u003e properties) throws Exception {\n+    synchronized (ContextFactory.class) {\n+      if (jaxbContext \u003d\u003d null) {\n+        Class spFactory \u003d Class.forName(\n+            \"com.sun.xml.internal.bind.v2.ContextFactory\");\n+        Method m \u003d spFactory.getMethod(\"createContext\", Class[].class,\n+            Map.class);\n+        jaxbContext \u003d (JAXBContext) m.invoke((Object) null, classes,\n+            properties);\n+      }\n+    }\n+    return jaxbContext;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static JAXBContext createContext(Class[] classes,\n      Map\u003cString, Object\u003e properties) throws Exception {\n    synchronized (ContextFactory.class) {\n      if (jaxbContext \u003d\u003d null) {\n        Class spFactory \u003d Class.forName(\n            \"com.sun.xml.internal.bind.v2.ContextFactory\");\n        Method m \u003d spFactory.getMethod(\"createContext\", Class[].class,\n            Map.class);\n        jaxbContext \u003d (JAXBContext) m.invoke((Object) null, classes,\n            properties);\n      }\n    }\n    return jaxbContext;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-applicationhistoryservice/src/main/java/org/apache/hadoop/yarn/server/applicationhistoryservice/webapp/ContextFactory.java"
    }
  }
}