{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LeveldbRMStateStore.java",
  "functionName": "startInternal",
  "functionId": "startInternal",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
  "functionStartLine": 161,
  "functionEndLine": 171,
  "numCommitsSeen": 19,
  "timeTaken": 1881,
  "changeHistory": [
    "76900b4f5b7ad8d11baf505abc43f7b24d364071",
    "dd80042c42aadaa347db93028724f69c9aca69c6",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f"
  ],
  "changeHistoryShort": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": "Ybodychange",
    "dd80042c42aadaa347db93028724f69c9aca69c6": "Ybodychange",
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "76900b4f5b7ad8d11baf505abc43f7b24d364071": {
      "type": "Ybodychange",
      "commitMessage": "YARN-10189. Code cleanup in LeveldbRMStateStore. Contributed by Benjamin Teke\n",
      "commitDate": "18/04/20 12:57 AM",
      "commitName": "76900b4f5b7ad8d11baf505abc43f7b24d364071",
      "commitAuthor": "Szilard Nemeth",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 399.36,
      "commitsBetweenForRepo": 2266,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,4 +1,11 @@\n   protected void startInternal() throws Exception {\n-    db \u003d openDatabase();\n-    startCompactionTimer();\n+    Path storeRoot \u003d createStorageDir();\n+    Options options \u003d new Options();\n+    options.createIfMissing(false);\n+    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n+    File dbfile \u003d new File(storeRoot.toString());\n+    db \u003d dbManager.initDatabase(dbfile, options, (database) -\u003e\n+        storeVersion(CURRENT_VERSION_INFO));\n+    dbManager.startCompactionTimer(compactionIntervalMsec,\n+        this.getClass().getSimpleName());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startInternal() throws Exception {\n    Path storeRoot \u003d createStorageDir();\n    Options options \u003d new Options();\n    options.createIfMissing(false);\n    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n    File dbfile \u003d new File(storeRoot.toString());\n    db \u003d dbManager.initDatabase(dbfile, options, (database) -\u003e\n        storeVersion(CURRENT_VERSION_INFO));\n    dbManager.startCompactionTimer(compactionIntervalMsec,\n        this.getClass().getSimpleName());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "dd80042c42aadaa347db93028724f69c9aca69c6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5008. LeveldbRMStateStore database can grow substantially leading to long recovery times. Contributed by Jason Lowe\n",
      "commitDate": "28/04/16 9:27 PM",
      "commitName": "dd80042c42aadaa347db93028724f69c9aca69c6",
      "commitAuthor": "Jian He",
      "commitDateOld": "01/02/16 6:17 PM",
      "commitNameOld": "9875325d5c63f343809907d06bf48a298035a611",
      "commitAuthorOld": "Wangda Tan",
      "daysBetweenCommits": 87.09,
      "commitsBetweenForRepo": 554,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,4 @@\n   protected void startInternal() throws Exception {\n-    Path storeRoot \u003d createStorageDir();\n-    Options options \u003d new Options();\n-    options.createIfMissing(false);\n-    options.logger(new LeveldbLogger());\n-    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n-    File dbfile \u003d new File(storeRoot.toString());\n-    try {\n-      db \u003d JniDBFactory.factory.open(dbfile, options);\n-    } catch (NativeDB.DBException e) {\n-      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n-        LOG.info(\"Creating state database at \" + dbfile);\n-        options.createIfMissing(true);\n-        try {\n-          db \u003d JniDBFactory.factory.open(dbfile, options);\n-          // store version\n-          storeVersion();\n-        } catch (DBException dbErr) {\n-          throw new IOException(dbErr.getMessage(), dbErr);\n-        }\n-      } else {\n-        throw e;\n-      }\n-    }\n+    db \u003d openDatabase();\n+    startCompactionTimer();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startInternal() throws Exception {\n    db \u003d openDatabase();\n    startCompactionTimer();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java",
      "extendedDetails": {}
    },
    "a7fba0bc28764e0fb36c335ea60cc58079fe007f": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2765. Added leveldb-based implementation for RMStateStore. Contributed by Jason Lowe\n",
      "commitDate": "01/12/14 4:38 PM",
      "commitName": "a7fba0bc28764e0fb36c335ea60cc58079fe007f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,25 @@\n+  protected void startInternal() throws Exception {\n+    Path storeRoot \u003d createStorageDir();\n+    Options options \u003d new Options();\n+    options.createIfMissing(false);\n+    options.logger(new LeveldbLogger());\n+    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n+    File dbfile \u003d new File(storeRoot.toString());\n+    try {\n+      db \u003d JniDBFactory.factory.open(dbfile, options);\n+    } catch (NativeDB.DBException e) {\n+      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n+        LOG.info(\"Creating state database at \" + dbfile);\n+        options.createIfMissing(true);\n+        try {\n+          db \u003d JniDBFactory.factory.open(dbfile, options);\n+          // store version\n+          storeVersion();\n+        } catch (DBException dbErr) {\n+          throw new IOException(dbErr.getMessage(), dbErr);\n+        }\n+      } else {\n+        throw e;\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void startInternal() throws Exception {\n    Path storeRoot \u003d createStorageDir();\n    Options options \u003d new Options();\n    options.createIfMissing(false);\n    options.logger(new LeveldbLogger());\n    LOG.info(\"Using state database at \" + storeRoot + \" for recovery\");\n    File dbfile \u003d new File(storeRoot.toString());\n    try {\n      db \u003d JniDBFactory.factory.open(dbfile, options);\n    } catch (NativeDB.DBException e) {\n      if (e.isNotFound() || e.getMessage().contains(\" does not exist \")) {\n        LOG.info(\"Creating state database at \" + dbfile);\n        options.createIfMissing(true);\n        try {\n          db \u003d JniDBFactory.factory.open(dbfile, options);\n          // store version\n          storeVersion();\n        } catch (DBException dbErr) {\n          throw new IOException(dbErr.getMessage(), dbErr);\n        }\n      } else {\n        throw e;\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/LeveldbRMStateStore.java"
    }
  }
}