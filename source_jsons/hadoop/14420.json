{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "Journal.java",
  "functionName": "getEditLogManifest",
  "functionId": "getEditLogManifest___sinceTxId-long__inProgressOk-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
  "functionStartLine": 717,
  "functionEndLine": 741,
  "numCommitsSeen": 152,
  "timeTaken": 3806,
  "changeHistory": [
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
    "faa4455be512e070fa420084be8d1be5c72f3b08",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087",
    "8c62c46046656c01b327c378e89d57b4bf37e16e",
    "f765fdb65701e61887daedb2b369af4be12cb432",
    "939f4a9f92ab260aee697d3715946218a7ff769a",
    "74d4573a23db5586c6e47ff2277aa7c35237da34"
  ],
  "changeHistoryShort": {
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e": "Ybodychange",
    "faa4455be512e070fa420084be8d1be5c72f3b08": "Ybodychange",
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": "Ymultichange(Yparameterchange,Ybodychange)",
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": "Ymultichange(Yparameterchange,Ybodychange)",
    "8c62c46046656c01b327c378e89d57b4bf37e16e": "Ymultichange(Yparameterchange,Ybodychange)",
    "f765fdb65701e61887daedb2b369af4be12cb432": "Ybodychange",
    "939f4a9f92ab260aee697d3715946218a7ff769a": "Ybodychange",
    "74d4573a23db5586c6e47ff2277aa7c35237da34": "Yintroduced"
  },
  "changeHistoryDetails": {
    "098ec2b11ff3f677eb823f75b147a1ac8dbf959e": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10519. Add a configuration option to enable in-progress edit log tailing. Contributed by Jiayi Zhou.\n",
      "commitDate": "27/07/16 5:55 PM",
      "commitName": "098ec2b11ff3f677eb823f75b147a1ac8dbf959e",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "14/09/15 3:22 PM",
      "commitNameOld": "53bad4eb008ec553dcdbe01e7ae975dcecde6590",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 317.11,
      "commitsBetweenForRepo": 2253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,25 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n       boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n     List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n     \n     if (inProgressOk) {\n       RemoteEditLog log \u003d null;\n       for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n         log \u003d iter.next();\n         if (log.isInProgress()) {\n           iter.remove();\n           break;\n         }\n       }\n       if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n-        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId(),\n-            true));\n+        logs.add(new RemoteEditLog(log.getStartTxId(),\n+            getHighestWrittenTxId(), true));\n       }\n     }\n-    \n-    return new RemoteEditLogManifest(logs);\n+\n+    return new RemoteEditLogManifest(logs, getCommittedTxnId());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(),\n            getHighestWrittenTxId(), true));\n      }\n    }\n\n    return new RemoteEditLogManifest(logs, getCommittedTxnId());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
      "extendedDetails": {}
    },
    "faa4455be512e070fa420084be8d1be5c72f3b08": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-6634. inotify in HDFS. Contributed by James Thomas.\n",
      "commitDate": "02/09/14 2:02 PM",
      "commitName": "faa4455be512e070fa420084be8d1be5c72f3b08",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "24/03/14 11:48 PM",
      "commitNameOld": "56205ca7d7f3b2a7e55f48b9cf444326e1d2b1a7",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 161.59,
      "commitsBetweenForRepo": 1111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,25 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n       boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n     List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n     \n     if (inProgressOk) {\n       RemoteEditLog log \u003d null;\n       for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n         log \u003d iter.next();\n         if (log.isInProgress()) {\n           iter.remove();\n           break;\n         }\n       }\n       if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n-        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n+        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId(),\n+            true));\n       }\n     }\n     \n     return new RemoteEditLogManifest(logs);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId(),\n            true));\n      }\n    }\n    \n    return new RemoteEditLogManifest(logs);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
      "extendedDetails": {}
    },
    "512a18a8d92305a34f3037064ceabdc5aff1f8bf": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/12/13 5:32 PM",
      "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/08/13 10:19 AM",
          "commitNameOld": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 117.34,
          "commitsBetweenForRepo": 711,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,24 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n-      boolean forReading, boolean inProgressOk) throws IOException {\n+      boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n-    // if this is for reading, ignore the in-progress editlog segment\n-    inProgressOk \u003d forReading ? false : inProgressOk;\n-    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n-        inProgressOk);\n+    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n     \n     if (inProgressOk) {\n       RemoteEditLog log \u003d null;\n       for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n         log \u003d iter.next();\n         if (log.isInProgress()) {\n           iter.remove();\n           break;\n         }\n       }\n       if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n         logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n       }\n     }\n     \n     return new RemoteEditLogManifest(logs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n      }\n    }\n    \n    return new RemoteEditLogManifest(logs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {
            "oldValue": "[sinceTxId-long, forReading-boolean, inProgressOk-boolean]",
            "newValue": "[sinceTxId-long, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5074. Allow starting up from an fsimage checkpoint in the middle of a segment. Contributed by Todd Lipcon.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1550016 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "10/12/13 5:32 PM",
          "commitName": "512a18a8d92305a34f3037064ceabdc5aff1f8bf",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "15/08/13 10:19 AM",
          "commitNameOld": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 117.34,
          "commitsBetweenForRepo": 711,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,27 +1,24 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n-      boolean forReading, boolean inProgressOk) throws IOException {\n+      boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n-    // if this is for reading, ignore the in-progress editlog segment\n-    inProgressOk \u003d forReading ? false : inProgressOk;\n-    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n-        inProgressOk);\n+    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n     \n     if (inProgressOk) {\n       RemoteEditLog log \u003d null;\n       for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n         log \u003d iter.next();\n         if (log.isInProgress()) {\n           iter.remove();\n           break;\n         }\n       }\n       if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n         logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n       }\n     }\n     \n     return new RemoteEditLogManifest(logs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n      }\n    }\n    \n    return new RemoteEditLogManifest(logs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {}
        }
      ]
    },
    "8172215e5601c3bb03fb5c0a0d88768142ea5087": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/08/13 10:19 AM",
      "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/07/13 1:44 PM",
          "commitNameOld": "0880be20acd9c57872b511b46e23ba56a051751e",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 33.86,
          "commitsBetweenForRepo": 213,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,27 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n-      boolean forReading) throws IOException {\n+      boolean forReading, boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n-    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n-        fjm.getRemoteEditLogs(sinceTxId, forReading));\n-    return manifest;\n+    // if this is for reading, ignore the in-progress editlog segment\n+    inProgressOk \u003d forReading ? false : inProgressOk;\n+    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n+        inProgressOk);\n+    \n+    if (inProgressOk) {\n+      RemoteEditLog log \u003d null;\n+      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n+        log \u003d iter.next();\n+        if (log.isInProgress()) {\n+          iter.remove();\n+          break;\n+        }\n+      }\n+      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n+        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n+      }\n+    }\n+    \n+    return new RemoteEditLogManifest(logs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean forReading, boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    // if this is for reading, ignore the in-progress editlog segment\n    inProgressOk \u003d forReading ? false : inProgressOk;\n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n        inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n      }\n    }\n    \n    return new RemoteEditLogManifest(logs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {
            "oldValue": "[sinceTxId-long, forReading-boolean]",
            "newValue": "[sinceTxId-long, forReading-boolean, inProgressOk-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5080. BootstrapStandby not working with QJM when the existing NN is active. Contributed by Jing Zhao.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514386 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "15/08/13 10:19 AM",
          "commitName": "8172215e5601c3bb03fb5c0a0d88768142ea5087",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "12/07/13 1:44 PM",
          "commitNameOld": "0880be20acd9c57872b511b46e23ba56a051751e",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 33.86,
          "commitsBetweenForRepo": 213,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,27 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n-      boolean forReading) throws IOException {\n+      boolean forReading, boolean inProgressOk) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n-    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n-        fjm.getRemoteEditLogs(sinceTxId, forReading));\n-    return manifest;\n+    // if this is for reading, ignore the in-progress editlog segment\n+    inProgressOk \u003d forReading ? false : inProgressOk;\n+    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n+        inProgressOk);\n+    \n+    if (inProgressOk) {\n+      RemoteEditLog log \u003d null;\n+      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n+        log \u003d iter.next();\n+        if (log.isInProgress()) {\n+          iter.remove();\n+          break;\n+        }\n+      }\n+      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n+        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n+      }\n+    }\n+    \n+    return new RemoteEditLogManifest(logs);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean forReading, boolean inProgressOk) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    // if this is for reading, ignore the in-progress editlog segment\n    inProgressOk \u003d forReading ? false : inProgressOk;\n    List\u003cRemoteEditLog\u003e logs \u003d fjm.getRemoteEditLogs(sinceTxId, forReading,\n        inProgressOk);\n    \n    if (inProgressOk) {\n      RemoteEditLog log \u003d null;\n      for (Iterator\u003cRemoteEditLog\u003e iter \u003d logs.iterator(); iter.hasNext();) {\n        log \u003d iter.next();\n        if (log.isInProgress()) {\n          iter.remove();\n          break;\n        }\n      }\n      if (log !\u003d null \u0026\u0026 log.isInProgress()) {\n        logs.add(new RemoteEditLog(log.getStartTxId(), getHighestWrittenTxId()));\n      }\n    }\n    \n    return new RemoteEditLogManifest(logs);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {}
        }
      ]
    },
    "8c62c46046656c01b327c378e89d57b4bf37e16e": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/05/13 12:37 PM",
      "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
      "commitAuthor": "Aaron Myers",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "27/03/13 11:42 AM",
          "commitNameOld": "81192e4e415d359ca832eff50d6f64c3da7acb73",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 56.04,
          "commitsBetweenForRepo": 335,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n-      throws IOException {\n+  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n+      boolean forReading) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n     RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n-        fjm.getRemoteEditLogs(sinceTxId));\n+        fjm.getRemoteEditLogs(sinceTxId, forReading));\n     return manifest;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean forReading) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n        fjm.getRemoteEditLogs(sinceTxId, forReading));\n    return manifest;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {
            "oldValue": "[sinceTxId-long]",
            "newValue": "[sinceTxId-long, forReading-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-4298. StorageRetentionManager spews warnings when used with QJM. Contributed by Aaron T. Myers.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1485371 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/05/13 12:37 PM",
          "commitName": "8c62c46046656c01b327c378e89d57b4bf37e16e",
          "commitAuthor": "Aaron Myers",
          "commitDateOld": "27/03/13 11:42 AM",
          "commitNameOld": "81192e4e415d359ca832eff50d6f64c3da7acb73",
          "commitAuthorOld": "Todd Lipcon",
          "daysBetweenCommits": 56.04,
          "commitsBetweenForRepo": 335,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,10 +1,10 @@\n-  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n-      throws IOException {\n+  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n+      boolean forReading) throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n     checkFormatted();\n     \n     RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n-        fjm.getRemoteEditLogs(sinceTxId));\n+        fjm.getRemoteEditLogs(sinceTxId, forReading));\n     return manifest;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId,\n      boolean forReading) throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n        fjm.getRemoteEditLogs(sinceTxId, forReading));\n    return manifest;\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
          "extendedDetails": {}
        }
      ]
    },
    "f765fdb65701e61887daedb2b369af4be12cb432": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3793. Implement genericized format() in QJM. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1373177 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/08/12 5:48 PM",
      "commitName": "f765fdb65701e61887daedb2b369af4be12cb432",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "25/07/12 2:47 PM",
      "commitNameOld": "b17018e4b821ec860144d8bd38bc1fcb0d7eeaa5",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 20.13,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,8 +1,10 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n       throws IOException {\n     // No need to checkRequest() here - anyone may ask for the list\n     // of segments.\n+    checkFormatted();\n+    \n     RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n         fjm.getRemoteEditLogs(sinceTxId));\n     return manifest;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n      throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    checkFormatted();\n    \n    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n        fjm.getRemoteEditLogs(sinceTxId));\n    return manifest;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
      "extendedDetails": {}
    },
    "939f4a9f92ab260aee697d3715946218a7ff769a": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3694. Fix getEditLogManifest to fetch httpPort if necessary. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1365788 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/12 2:40 PM",
      "commitName": "939f4a9f92ab260aee697d3715946218a7ff769a",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "19/07/12 5:25 PM",
      "commitNameOld": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 5.89,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,8 @@\n   public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n       throws IOException {\n-    // TODO: check fencing info?\n+    // No need to checkRequest() here - anyone may ask for the list\n+    // of segments.\n     RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n         fjm.getRemoteEditLogs(sinceTxId));\n     return manifest;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n      throws IOException {\n    // No need to checkRequest() here - anyone may ask for the list\n    // of segments.\n    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n        fjm.getRemoteEditLogs(sinceTxId));\n    return manifest;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java",
      "extendedDetails": {}
    },
    "74d4573a23db5586c6e47ff2277aa7c35237da34": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-3077. Quorum-based protocol for reading and writing edit logs. Contributed by Todd Lipcon based on initial work from Brandon Li and Hari Mankude.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3077@1363596 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/07/12 5:25 PM",
      "commitName": "74d4573a23db5586c6e47ff2277aa7c35237da34",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,7 @@\n+  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n+      throws IOException {\n+    // TODO: check fencing info?\n+    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n+        fjm.getRemoteEditLogs(sinceTxId));\n+    return manifest;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public RemoteEditLogManifest getEditLogManifest(long sinceTxId)\n      throws IOException {\n    // TODO: check fencing info?\n    RemoteEditLogManifest manifest \u003d new RemoteEditLogManifest(\n        fjm.getRemoteEditLogs(sinceTxId));\n    return manifest;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/qjournal/server/Journal.java"
    }
  }
}