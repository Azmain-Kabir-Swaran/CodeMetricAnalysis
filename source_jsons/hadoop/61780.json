{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WindowsBasedProcessTree.java",
  "functionName": "updateProcessTree",
  "functionId": "updateProcessTree",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/WindowsBasedProcessTree.java",
  "functionStartLine": 148,
  "functionEndLine": 177,
  "numCommitsSeen": 16,
  "timeTaken": 1590,
  "changeHistory": [
    "638801cce16fc1dc3259c541dc30a599faaddda1"
  ],
  "changeHistoryShort": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Yintroduced"
  },
  "changeHistoryDetails": {
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,30 @@\n+  public void updateProcessTree() {\n+    if(taskProcessId !\u003d null) {\n+      // taskProcessId can be null in some tests\n+      String processesInfoStr \u003d getAllProcessInfoFromShell();\n+      if (processesInfoStr !\u003d null \u0026\u0026 processesInfoStr.length() \u003e 0) {\n+        Map\u003cString, ProcessInfo\u003e allProcessInfo \u003d createProcessInfo(processesInfoStr);\n+\n+        for (Map.Entry\u003cString, ProcessInfo\u003e entry : allProcessInfo.entrySet()) {\n+          String pid \u003d entry.getKey();\n+          ProcessInfo pInfo \u003d entry.getValue();\n+          ProcessInfo oldInfo \u003d processTree.get(pid);\n+          if (oldInfo !\u003d null) {\n+            // existing process, update age and replace value\n+            pInfo.age +\u003d oldInfo.age;\n+            // calculate the delta since the last refresh. totals are being kept\n+            // in the WindowsBasedProcessTree object\n+            pInfo.cpuTimeMsDelta \u003d pInfo.cpuTimeMs - oldInfo.cpuTimeMs;\n+          } else {\n+            // new process. delta cpu \u003d\u003d total cpu\n+            pInfo.cpuTimeMsDelta \u003d pInfo.cpuTimeMs;\n+          }\n+        }\n+        processTree.clear();\n+        processTree \u003d allProcessInfo;\n+      } else {\n+        // clearing process tree to mimic semantics of existing Procfs impl\n+        processTree.clear();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void updateProcessTree() {\n    if(taskProcessId !\u003d null) {\n      // taskProcessId can be null in some tests\n      String processesInfoStr \u003d getAllProcessInfoFromShell();\n      if (processesInfoStr !\u003d null \u0026\u0026 processesInfoStr.length() \u003e 0) {\n        Map\u003cString, ProcessInfo\u003e allProcessInfo \u003d createProcessInfo(processesInfoStr);\n\n        for (Map.Entry\u003cString, ProcessInfo\u003e entry : allProcessInfo.entrySet()) {\n          String pid \u003d entry.getKey();\n          ProcessInfo pInfo \u003d entry.getValue();\n          ProcessInfo oldInfo \u003d processTree.get(pid);\n          if (oldInfo !\u003d null) {\n            // existing process, update age and replace value\n            pInfo.age +\u003d oldInfo.age;\n            // calculate the delta since the last refresh. totals are being kept\n            // in the WindowsBasedProcessTree object\n            pInfo.cpuTimeMsDelta \u003d pInfo.cpuTimeMs - oldInfo.cpuTimeMs;\n          } else {\n            // new process. delta cpu \u003d\u003d total cpu\n            pInfo.cpuTimeMsDelta \u003d pInfo.cpuTimeMs;\n          }\n        }\n        processTree.clear();\n        processTree \u003d allProcessInfo;\n      } else {\n        // clearing process tree to mimic semantics of existing Procfs impl\n        processTree.clear();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/util/WindowsBasedProcessTree.java"
    }
  }
}