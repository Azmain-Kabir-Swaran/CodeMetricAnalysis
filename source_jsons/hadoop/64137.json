{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SignerManager.java",
  "functionName": "maybeRegisterSigner",
  "functionId": "maybeRegisterSigner___signerName-String__signerClassName-String__conf-Configuration",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/SignerManager.java",
  "functionStartLine": 116,
  "functionEndLine": 137,
  "numCommitsSeen": 2,
  "timeTaken": 1773,
  "changeHistory": [
    "559ee277f50716a9a8c736ba3b655aad9f616e96",
    "e02b1023c2f42b6792d2941c1f987ae06259b021"
  ],
  "changeHistoryShort": {
    "559ee277f50716a9a8c736ba3b655aad9f616e96": "Ymovefromfile",
    "e02b1023c2f42b6792d2941c1f987ae06259b021": "Yintroduced"
  },
  "changeHistoryDetails": {
    "559ee277f50716a9a8c736ba3b655aad9f616e96": {
      "type": "Ymovefromfile",
      "commitMessage": "HADOOP-16599. Allow a SignerInitializer to be specified along with a Custom Signer\n\n",
      "commitDate": "02/10/19 4:03 PM",
      "commitName": "559ee277f50716a9a8c736ba3b655aad9f616e96",
      "commitAuthor": "Siddharth Seth",
      "commitDateOld": "02/10/19 3:41 PM",
      "commitNameOld": "b09d389001d95eedb7ec17c6f890e0ea3baace9d",
      "commitAuthorOld": "Bharat Viswanadham",
      "daysBetweenCommits": 0.02,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private static void maybeRegisterSigner(String signerName,\n      String signerClassName, Configuration conf) {\n    try {\n      SignerFactory.getSignerByTypeAndService(signerName, null);\n    } catch (IllegalArgumentException e) {\n      // Signer is not registered with the AWS SDK.\n      // Load the class and register the signer.\n      Class\u003c? extends Signer\u003e clazz \u003d null;\n      try {\n        clazz \u003d (Class\u003c? extends Signer\u003e) conf.getClassByName(signerClassName);\n      } catch (ClassNotFoundException cnfe) {\n        throw new RuntimeException(String\n            .format(\"Signer class [%s] not found for signer [%s]\",\n                signerClassName, signerName), cnfe);\n      }\n      LOG.debug(\"Registering Custom Signer - [{}-\u003e{}]\", signerName,\n          clazz.getName());\n      synchronized (SignerManager.class) {\n        SignerFactory.registerSigner(signerName, clazz);\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/SignerManager.java",
      "extendedDetails": {
        "oldPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/SignerManager.java",
        "newPath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/auth/SignerManager.java",
        "oldMethodName": "maybeRegisterSigner",
        "newMethodName": "maybeRegisterSigner"
      }
    },
    "e02b1023c2f42b6792d2941c1f987ae06259b021": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-16445. Allow separate custom signing algorithms for S3 and DDB (#1332)\n\n",
      "commitDate": "20/09/19 11:20 PM",
      "commitName": "e02b1023c2f42b6792d2941c1f987ae06259b021",
      "commitAuthor": "Siddharth Seth",
      "diff": "@@ -0,0 +1,22 @@\n+  private static void maybeRegisterSigner(String signerName,\n+      String signerClassName, Configuration conf) {\n+    try {\n+      SignerFactory.getSignerByTypeAndService(signerName, null);\n+    } catch (IllegalArgumentException e) {\n+      // Signer is not registered with the AWS SDK.\n+      // Load the class and register the signer.\n+      Class\u003c? extends Signer\u003e clazz \u003d null;\n+      try {\n+        clazz \u003d (Class\u003c? extends Signer\u003e) conf.getClassByName(signerClassName);\n+      } catch (ClassNotFoundException cnfe) {\n+        throw new RuntimeException(String\n+            .format(\"Signer class [%s] not found for signer [%s]\",\n+                signerClassName, signerName), cnfe);\n+      }\n+      LOG.debug(\"Registering Custom Signer - [{}-\u003e{}]\", signerName,\n+          clazz.getName());\n+      synchronized (SignerManager.class) {\n+        SignerFactory.registerSigner(signerName, clazz);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private static void maybeRegisterSigner(String signerName,\n      String signerClassName, Configuration conf) {\n    try {\n      SignerFactory.getSignerByTypeAndService(signerName, null);\n    } catch (IllegalArgumentException e) {\n      // Signer is not registered with the AWS SDK.\n      // Load the class and register the signer.\n      Class\u003c? extends Signer\u003e clazz \u003d null;\n      try {\n        clazz \u003d (Class\u003c? extends Signer\u003e) conf.getClassByName(signerClassName);\n      } catch (ClassNotFoundException cnfe) {\n        throw new RuntimeException(String\n            .format(\"Signer class [%s] not found for signer [%s]\",\n                signerClassName, signerName), cnfe);\n      }\n      LOG.debug(\"Registering Custom Signer - [{}-\u003e{}]\", signerName,\n          clazz.getName());\n      synchronized (SignerManager.class) {\n        SignerFactory.registerSigner(signerName, clazz);\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/SignerManager.java"
    }
  }
}