{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ResourceUtils.java",
  "functionName": "areMandatoryResourcesAvailable",
  "functionId": "areMandatoryResourcesAvailable___res-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java",
  "functionStartLine": 733,
  "functionEndLine": 767,
  "numCommitsSeen": 36,
  "timeTaken": 850,
  "changeHistory": [
    "2564b4d07f63de142fe1909d61904831c108667c"
  ],
  "changeHistoryShort": {
    "2564b4d07f63de142fe1909d61904831c108667c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2564b4d07f63de142fe1909d61904831c108667c": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7119. Support multiple resource types in rmadmin updateNodeResource command. Contributed by Manikandan R.\n",
      "commitDate": "14/12/17 2:41 AM",
      "commitName": "2564b4d07f63de142fe1909d61904831c108667c",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,35 @@\n+  public static void areMandatoryResourcesAvailable(Resource res) {\n+    ResourceInformation memoryResourceInformation \u003d\n+        res.getResourceInformation(MEMORY);\n+    if (memoryResourceInformation !\u003d null) {\n+      long value \u003d memoryResourceInformation.getValue();\n+      if (value \u003e Integer.MAX_VALUE) {\n+        throw new IllegalArgumentException(\"Value \u0027\" + value + \"\u0027 for \"\n+            + \"resource memory is more than the maximum for an integer.\");\n+      }\n+      if (value \u003d\u003d 0) {\n+        throw new IllegalArgumentException(\"Invalid value for resource \u0027\" +\n+            MEMORY + \"\u0027. Value cannot be 0(zero).\");\n+      }\n+    } else {\n+      throw new IllegalArgumentException(\"Mandatory resource \u0027memory-mb\u0027 \"\n+          + \"is missing.\");\n+    }\n+\n+    ResourceInformation vcoresResourceInformation \u003d\n+        res.getResourceInformation(VCORES);\n+    if (vcoresResourceInformation !\u003d null) {\n+      long value \u003d vcoresResourceInformation.getValue();\n+      if (value \u003e Integer.MAX_VALUE) {\n+        throw new IllegalArgumentException(\"Value \u0027\" + value + \"\u0027 for resource\"\n+            + \" vcores is more than the maximum for an integer.\");\n+      }\n+      if (value \u003d\u003d 0) {\n+        throw new IllegalArgumentException(\"Invalid value for resource \u0027\" +\n+            VCORES + \"\u0027. Value cannot be 0(zero).\");\n+      }\n+    } else {\n+      throw new IllegalArgumentException(\"Mandatory resource \u0027vcores\u0027 \"\n+          + \"is missing.\");\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void areMandatoryResourcesAvailable(Resource res) {\n    ResourceInformation memoryResourceInformation \u003d\n        res.getResourceInformation(MEMORY);\n    if (memoryResourceInformation !\u003d null) {\n      long value \u003d memoryResourceInformation.getValue();\n      if (value \u003e Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Value \u0027\" + value + \"\u0027 for \"\n            + \"resource memory is more than the maximum for an integer.\");\n      }\n      if (value \u003d\u003d 0) {\n        throw new IllegalArgumentException(\"Invalid value for resource \u0027\" +\n            MEMORY + \"\u0027. Value cannot be 0(zero).\");\n      }\n    } else {\n      throw new IllegalArgumentException(\"Mandatory resource \u0027memory-mb\u0027 \"\n          + \"is missing.\");\n    }\n\n    ResourceInformation vcoresResourceInformation \u003d\n        res.getResourceInformation(VCORES);\n    if (vcoresResourceInformation !\u003d null) {\n      long value \u003d vcoresResourceInformation.getValue();\n      if (value \u003e Integer.MAX_VALUE) {\n        throw new IllegalArgumentException(\"Value \u0027\" + value + \"\u0027 for resource\"\n            + \" vcores is more than the maximum for an integer.\");\n      }\n      if (value \u003d\u003d 0) {\n        throw new IllegalArgumentException(\"Invalid value for resource \u0027\" +\n            VCORES + \"\u0027. Value cannot be 0(zero).\");\n      }\n    } else {\n      throw new IllegalArgumentException(\"Mandatory resource \u0027vcores\u0027 \"\n          + \"is missing.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-api/src/main/java/org/apache/hadoop/yarn/util/resource/ResourceUtils.java"
    }
  }
}