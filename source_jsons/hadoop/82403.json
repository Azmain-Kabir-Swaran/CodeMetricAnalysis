{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "LightWeightCache.java",
  "functionName": "evictExpiredEntries",
  "functionId": "evictExpiredEntries",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LightWeightCache.java",
  "functionStartLine": 162,
  "functionEndLine": 173,
  "numCommitsSeen": 4,
  "timeTaken": 961,
  "changeHistory": [
    "95b7f1d29a5e2dadd70a56fca5faa006c5bd74fc",
    "3024030b24d47218b210018b5bfa8d5c88b4192c"
  ],
  "changeHistoryShort": {
    "95b7f1d29a5e2dadd70a56fca5faa006c5bd74fc": "Ybodychange",
    "3024030b24d47218b210018b5bfa8d5c88b4192c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "95b7f1d29a5e2dadd70a56fca5faa006c5bd74fc": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14276. Add a nanosecond API to Time/Timer/FakeTimer. Contributed by Erik Krogen.\n",
      "commitDate": "06/04/17 4:59 PM",
      "commitName": "95b7f1d29a5e2dadd70a56fca5faa006c5bd74fc",
      "commitAuthor": "Zhe Zhang",
      "commitDateOld": "14/10/13 5:19 PM",
      "commitNameOld": "af89caf9e4ff1b8113737d6b948bb43a42f1b715",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 1269.99,
      "commitsBetweenForRepo": 9380,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   private void evictExpiredEntries() {\n-    final long now \u003d clock.currentTime();\n+    final long now \u003d timer.monotonicNowNanos();\n     for(int i \u003d 0; i \u003c EVICTION_LIMIT; i++) {\n       final Entry peeked \u003d queue.peek();\n       if (peeked \u003d\u003d null || !isExpired(peeked, now)) {\n         return;\n       }\n \n       final E evicted \u003d evict();\n       Preconditions.checkState(evicted \u003d\u003d peeked);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void evictExpiredEntries() {\n    final long now \u003d timer.monotonicNowNanos();\n    for(int i \u003d 0; i \u003c EVICTION_LIMIT; i++) {\n      final Entry peeked \u003d queue.peek();\n      if (peeked \u003d\u003d null || !isExpired(peeked, now)) {\n        return;\n      }\n\n      final E evicted \u003d evict();\n      Preconditions.checkState(evicted \u003d\u003d peeked);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LightWeightCache.java",
      "extendedDetails": {}
    },
    "3024030b24d47218b210018b5bfa8d5c88b4192c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9763. Extends LightWeightGSet to support eviction of expired elements. Contributed by Tsz Wo (Nicholas) SZE.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506405 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 11:26 PM",
      "commitName": "3024030b24d47218b210018b5bfa8d5c88b4192c",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,12 @@\n+  private void evictExpiredEntries() {\n+    final long now \u003d clock.currentTime();\n+    for(int i \u003d 0; i \u003c EVICTION_LIMIT; i++) {\n+      final Entry peeked \u003d queue.peek();\n+      if (peeked \u003d\u003d null || !isExpired(peeked, now)) {\n+        return;\n+      }\n+\n+      final E evicted \u003d evict();\n+      Preconditions.checkState(evicted \u003d\u003d peeked);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void evictExpiredEntries() {\n    final long now \u003d clock.currentTime();\n    for(int i \u003d 0; i \u003c EVICTION_LIMIT; i++) {\n      final Entry peeked \u003d queue.peek();\n      if (peeked \u003d\u003d null || !isExpired(peeked, now)) {\n        return;\n      }\n\n      final E evicted \u003d evict();\n      Preconditions.checkState(evicted \u003d\u003d peeked);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/LightWeightCache.java"
    }
  }
}