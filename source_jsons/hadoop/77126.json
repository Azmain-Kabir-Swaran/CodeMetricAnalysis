{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "IOUtils.java",
  "functionName": "fsync",
  "functionId": "fsync___fileToSync-File",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java",
  "functionStartLine": 411,
  "functionEndLine": 432,
  "numCommitsSeen": 25,
  "timeTaken": 1707,
  "changeHistory": [
    "8783613696674aba4ae1739c6e8f48cda0d1c386",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3"
  ],
  "changeHistoryShort": {
    "8783613696674aba4ae1739c6e8f48cda0d1c386": "Ybodychange",
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8783613696674aba4ae1739c6e8f48cda0d1c386": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13586. Fsync fails on directories on Windows. Contributed by Lukas Majercack.\n",
      "commitDate": "17/05/18 7:26 PM",
      "commitName": "8783613696674aba4ae1739c6e8f48cda0d1c386",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "19/01/18 6:48 AM",
      "commitNameOld": "e5a1ad6e24807b166a40d1332c889c2c4cb4c733",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 118.48,
      "commitsBetweenForRepo": 1452,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,22 @@\n   public static void fsync(File fileToSync) throws IOException {\n     if (!fileToSync.exists()) {\n       throw new FileNotFoundException(\n           \"File/Directory \" + fileToSync.getAbsolutePath() + \" does not exist\");\n     }\n     boolean isDir \u003d fileToSync.isDirectory();\n+\n+    // HDFS-13586, FileChannel.open fails with AccessDeniedException\n+    // for any directory, ignore.\n+    if (isDir \u0026\u0026 Shell.WINDOWS) {\n+      return;\n+    }\n+\n     // If the file is a directory we have to open read-only, for regular files\n     // we must open r/w for the fsync to have an effect. See\n     // http://blog.httrack.com/blog/2013/11/15/\n     // everything-you-always-wanted-to-know-about-fsync/\n     try(FileChannel channel \u003d FileChannel.open(fileToSync.toPath(),\n         isDir ? StandardOpenOption.READ : StandardOpenOption.WRITE)){\n       fsync(channel, isDir);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void fsync(File fileToSync) throws IOException {\n    if (!fileToSync.exists()) {\n      throw new FileNotFoundException(\n          \"File/Directory \" + fileToSync.getAbsolutePath() + \" does not exist\");\n    }\n    boolean isDir \u003d fileToSync.isDirectory();\n\n    // HDFS-13586, FileChannel.open fails with AccessDeniedException\n    // for any directory, ignore.\n    if (isDir \u0026\u0026 Shell.WINDOWS) {\n      return;\n    }\n\n    // If the file is a directory we have to open read-only, for regular files\n    // we must open r/w for the fsync to have an effect. See\n    // http://blog.httrack.com/blog/2013/11/15/\n    // everything-you-always-wanted-to-know-about-fsync/\n    try(FileChannel channel \u003d FileChannel.open(fileToSync.toPath(),\n        isDir ? StandardOpenOption.READ : StandardOpenOption.WRITE)){\n      fsync(channel, isDir);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java",
      "extendedDetails": {}
    },
    "1543d0f5be6a02ad00e7a33e35d78af8516043e3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-5042. Completed files lost after power failure. Contributed by Vinayakumar B.\n",
      "commitDate": "31/05/17 8:55 AM",
      "commitName": "1543d0f5be6a02ad00e7a33e35d78af8516043e3",
      "commitAuthor": "Kihwal Lee",
      "diff": "@@ -0,0 +1,15 @@\n+  public static void fsync(File fileToSync) throws IOException {\n+    if (!fileToSync.exists()) {\n+      throw new FileNotFoundException(\n+          \"File/Directory \" + fileToSync.getAbsolutePath() + \" does not exist\");\n+    }\n+    boolean isDir \u003d fileToSync.isDirectory();\n+    // If the file is a directory we have to open read-only, for regular files\n+    // we must open r/w for the fsync to have an effect. See\n+    // http://blog.httrack.com/blog/2013/11/15/\n+    // everything-you-always-wanted-to-know-about-fsync/\n+    try(FileChannel channel \u003d FileChannel.open(fileToSync.toPath(),\n+        isDir ? StandardOpenOption.READ : StandardOpenOption.WRITE)){\n+      fsync(channel, isDir);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void fsync(File fileToSync) throws IOException {\n    if (!fileToSync.exists()) {\n      throw new FileNotFoundException(\n          \"File/Directory \" + fileToSync.getAbsolutePath() + \" does not exist\");\n    }\n    boolean isDir \u003d fileToSync.isDirectory();\n    // If the file is a directory we have to open read-only, for regular files\n    // we must open r/w for the fsync to have an effect. See\n    // http://blog.httrack.com/blog/2013/11/15/\n    // everything-you-always-wanted-to-know-about-fsync/\n    try(FileChannel channel \u003d FileChannel.open(fileToSync.toPath(),\n        isDir ? StandardOpenOption.READ : StandardOpenOption.WRITE)){\n      fsync(channel, isDir);\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/io/IOUtils.java"
    }
  }
}