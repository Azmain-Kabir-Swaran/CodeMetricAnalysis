{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "S3GuardTool.java",
  "functionName": "main",
  "functionId": "main___args-String[]",
  "sourceFilePath": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
  "functionStartLine": 2030,
  "functionEndLine": 2058,
  "numCommitsSeen": 42,
  "timeTaken": 3805,
  "changeHistory": [
    "49df83899543586bbcaf80f01399ade031cf68b0",
    "1e0ae6ed15f55f1dc64d2b9044eb2a84fc5c6837",
    "920a89627dd191f533ff3a3a8bca293cab59ade7",
    "c4a00d1ad3d3cfc02a6a4e1e04353678f2d588e1",
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
    "621b43e254afaff708cd6fc4698b29628f6abc33"
  ],
  "changeHistoryShort": {
    "49df83899543586bbcaf80f01399ade031cf68b0": "Ybodychange",
    "1e0ae6ed15f55f1dc64d2b9044eb2a84fc5c6837": "Ybodychange",
    "920a89627dd191f533ff3a3a8bca293cab59ade7": "Ybodychange",
    "c4a00d1ad3d3cfc02a6a4e1e04353678f2d588e1": "Ybodychange",
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f": "Ybodychange",
    "621b43e254afaff708cd6fc4698b29628f6abc33": "Yintroduced"
  },
  "changeHistoryDetails": {
    "49df83899543586bbcaf80f01399ade031cf68b0": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16697. Tune/audit S3A authoritative mode.\n\nContains:\n\nHADOOP-16474. S3Guard ProgressiveRenameTracker to mark destination\n              dirirectory as authoritative on success.\nHADOOP-16684. S3guard bucket info to list a bit more about\n              authoritative paths.\nHADOOP-16722. S3GuardTool to support FilterFileSystem.\n\nThis patch improves the marking of newly created/import directory\ntrees in S3Guard DynamoDB tables as authoritative.\n\nSpecific changes:\n\n * Renamed directories are marked as authoritative if the entire\n   operation succeeded (HADOOP-16474).\n * When updating parent table entries as part of any table write,\n   there\u0027s no overwriting of their authoritative flag.\n\ns3guard import changes:\n\n* new -verbose flag to print out what is going on.\n\n* The \"s3guard import\" command lets you declare that a directory tree\nis to be marked as authoritative\n\n  hadoop s3guard import -authoritative -verbose s3a://bucket/path\n\nWhen importing a listing and a file is found, the import tool queries\nthe metastore and only updates the entry if the file is different from\nbefore, where different \u003d\u003d new timestamp, etag, or length. S3Guard can get\ntimestamp differences due to clock skew in PUT operations.\n\nAs the recursive list performed by the import command doesn\u0027t retrieve the\nversionID, the existing entry may in fact be more complete.\nWhen updating an existing due to clock skew the existing version ID\nis propagated to the new entry (note: the etags must match; this is needed\nto deal with inconsistent listings).\n\nThere is a new s3guard command to audit a s3guard bucket/path\u0027s\nauthoritative state:\n\n  hadoop s3guard authoritative -check-config s3a://bucket/path\n\nThis is primarily for testing/auditing.\n\nThe s3guard bucket-info command also provides some more details on the\nauthoritative state of a store (HADOOP-16684).\n\nChange-Id: I58001341c04f6f3597fcb4fcb1581ccefeb77d91\n",
      "commitDate": "10/01/20 3:11 AM",
      "commitName": "49df83899543586bbcaf80f01399ade031cf68b0",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "10/12/19 6:51 AM",
      "commitNameOld": "875a3e97dd4a26fe224a1858c54d1b4512db6be3",
      "commitAuthorOld": "Gabor Bota",
      "daysBetweenCommits": 30.85,
      "commitsBetweenForRepo": 95,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,29 @@\n   public static void main(String[] args) {\n     try {\n       int ret \u003d run(new Configuration(), args);\n       exit(ret, \"\");\n     } catch (CommandFormat.UnknownOptionException e) {\n       errorln(e.getMessage());\n       printHelp();\n       exit(E_USAGE, e.getMessage());\n     } catch (ExitUtil.ExitException e) {\n       // explicitly raised exit code\n+      LOG.debug(\"Exception raised\", e);\n       exit(e.getExitCode(), e.toString());\n     } catch (FileNotFoundException e) {\n       // Bucket doesn\u0027t exist or similar - return code of 44, \"404\".\n       errorln(e.toString());\n       LOG.debug(\"Not found:\", e);\n       exit(EXIT_NOT_FOUND, e.toString());\n     } catch (Throwable e) {\n-      e.printStackTrace(System.err);\n-      exit(ERROR, e.toString());\n+      if (e instanceof ExitCodeProvider) {\n+        // this exception provides its own exit code\n+        final ExitCodeProvider ec \u003d (ExitCodeProvider) e;\n+        LOG.debug(\"Exception raised\", e);\n+        exit(ec.getExitCode(), e.toString());\n+      } else {\n+        e.printStackTrace(System.err);\n+        exit(ERROR, e.toString());\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(new Configuration(), args);\n      exit(ret, \"\");\n    } catch (CommandFormat.UnknownOptionException e) {\n      errorln(e.getMessage());\n      printHelp();\n      exit(E_USAGE, e.getMessage());\n    } catch (ExitUtil.ExitException e) {\n      // explicitly raised exit code\n      LOG.debug(\"Exception raised\", e);\n      exit(e.getExitCode(), e.toString());\n    } catch (FileNotFoundException e) {\n      // Bucket doesn\u0027t exist or similar - return code of 44, \"404\".\n      errorln(e.toString());\n      LOG.debug(\"Not found:\", e);\n      exit(EXIT_NOT_FOUND, e.toString());\n    } catch (Throwable e) {\n      if (e instanceof ExitCodeProvider) {\n        // this exception provides its own exit code\n        final ExitCodeProvider ec \u003d (ExitCodeProvider) e;\n        LOG.debug(\"Exception raised\", e);\n        exit(ec.getExitCode(), e.toString());\n      } else {\n        e.printStackTrace(System.err);\n        exit(ERROR, e.toString());\n      }\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "1e0ae6ed15f55f1dc64d2b9044eb2a84fc5c6837": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15843. s3guard bucket-info command to not print a stack trace on bucket-not-found.\n\nContributed by Adam Antal.\n\n(Revised patch applied after stevel committed the wrong one; that has been reverted)\n",
      "commitDate": "19/02/19 3:33 AM",
      "commitName": "1e0ae6ed15f55f1dc64d2b9044eb2a84fc5c6837",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "18/02/19 6:57 AM",
      "commitNameOld": "920a89627dd191f533ff3a3a8bca293cab59ade7",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 0.86,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,21 @@\n   public static void main(String[] args) {\n     try {\n       int ret \u003d run(new Configuration(), args);\n       exit(ret, \"\");\n     } catch (CommandFormat.UnknownOptionException e) {\n       errorln(e.getMessage());\n       printHelp();\n       exit(E_USAGE, e.getMessage());\n     } catch (ExitUtil.ExitException e) {\n       // explicitly raised exit code\n       exit(e.getExitCode(), e.toString());\n+    } catch (FileNotFoundException e) {\n+      // Bucket doesn\u0027t exist or similar - return code of 44, \"404\".\n+      errorln(e.toString());\n+      LOG.debug(\"Not found:\", e);\n+      exit(EXIT_NOT_FOUND, e.toString());\n     } catch (Throwable e) {\n       e.printStackTrace(System.err);\n       exit(ERROR, e.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(new Configuration(), args);\n      exit(ret, \"\");\n    } catch (CommandFormat.UnknownOptionException e) {\n      errorln(e.getMessage());\n      printHelp();\n      exit(E_USAGE, e.getMessage());\n    } catch (ExitUtil.ExitException e) {\n      // explicitly raised exit code\n      exit(e.getExitCode(), e.toString());\n    } catch (FileNotFoundException e) {\n      // Bucket doesn\u0027t exist or similar - return code of 44, \"404\".\n      errorln(e.toString());\n      LOG.debug(\"Not found:\", e);\n      exit(EXIT_NOT_FOUND, e.toString());\n    } catch (Throwable e) {\n      e.printStackTrace(System.err);\n      exit(ERROR, e.toString());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "920a89627dd191f533ff3a3a8bca293cab59ade7": {
      "type": "Ybodychange",
      "commitMessage": "Revert \"HADOOP-15843. s3guard bucket-info command to not print a stack trace on bucket-not-found.\"\n\nThis reverts commit c4a00d1ad3d3cfc02a6a4e1e04353678f2d588e1.\n",
      "commitDate": "18/02/19 6:57 AM",
      "commitName": "920a89627dd191f533ff3a3a8bca293cab59ade7",
      "commitAuthor": "Steve Loughran",
      "commitDateOld": "11/02/19 1:07 PM",
      "commitNameOld": "6c999fe4b0181720c8e55be8388bd592196c8c87",
      "commitAuthorOld": "Masatake Iwasaki",
      "daysBetweenCommits": 6.74,
      "commitsBetweenForRepo": 56,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,16 @@\n   public static void main(String[] args) {\n     try {\n       int ret \u003d run(new Configuration(), args);\n       exit(ret, \"\");\n     } catch (CommandFormat.UnknownOptionException e) {\n       errorln(e.getMessage());\n-      printHelp(command);\n+      printHelp();\n       exit(E_USAGE, e.getMessage());\n     } catch (ExitUtil.ExitException e) {\n       // explicitly raised exit code\n       exit(e.getExitCode(), e.toString());\n-    } catch (FileNotFoundException e) {\n-      // bucket doesn\u0027t exist or similar.\n-      // skip the stack trace and choose the return code of 44, \"404\"\n-      errorln(e.toString());\n-      LOG.debug(\"Not found:\", e);\n-      exit(EXIT_NOT_FOUND, e.toString());\n     } catch (Throwable e) {\n       e.printStackTrace(System.err);\n       exit(ERROR, e.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(new Configuration(), args);\n      exit(ret, \"\");\n    } catch (CommandFormat.UnknownOptionException e) {\n      errorln(e.getMessage());\n      printHelp();\n      exit(E_USAGE, e.getMessage());\n    } catch (ExitUtil.ExitException e) {\n      // explicitly raised exit code\n      exit(e.getExitCode(), e.toString());\n    } catch (Throwable e) {\n      e.printStackTrace(System.err);\n      exit(ERROR, e.toString());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "c4a00d1ad3d3cfc02a6a4e1e04353678f2d588e1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-15843. s3guard bucket-info command to not print a stack trace on bucket-not-found.\n\nContributed by Adam Antal.\n",
      "commitDate": "14/01/19 9:27 AM",
      "commitName": "c4a00d1ad3d3cfc02a6a4e1e04353678f2d588e1",
      "commitAuthor": "Adam Antal",
      "commitDateOld": "07/01/19 9:51 PM",
      "commitNameOld": "7f783970364930cc461d1a73833bc58cdd10553e",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 6.48,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,22 @@\n   public static void main(String[] args) {\n     try {\n       int ret \u003d run(new Configuration(), args);\n       exit(ret, \"\");\n     } catch (CommandFormat.UnknownOptionException e) {\n       errorln(e.getMessage());\n-      printHelp();\n+      printHelp(command);\n       exit(E_USAGE, e.getMessage());\n     } catch (ExitUtil.ExitException e) {\n       // explicitly raised exit code\n       exit(e.getExitCode(), e.toString());\n+    } catch (FileNotFoundException e) {\n+      // bucket doesn\u0027t exist or similar.\n+      // skip the stack trace and choose the return code of 44, \"404\"\n+      errorln(e.toString());\n+      LOG.debug(\"Not found:\", e);\n+      exit(EXIT_NOT_FOUND, e.toString());\n     } catch (Throwable e) {\n       e.printStackTrace(System.err);\n       exit(ERROR, e.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(new Configuration(), args);\n      exit(ret, \"\");\n    } catch (CommandFormat.UnknownOptionException e) {\n      errorln(e.getMessage());\n      printHelp(command);\n      exit(E_USAGE, e.getMessage());\n    } catch (ExitUtil.ExitException e) {\n      // explicitly raised exit code\n      exit(e.getExitCode(), e.toString());\n    } catch (FileNotFoundException e) {\n      // bucket doesn\u0027t exist or similar.\n      // skip the stack trace and choose the return code of 44, \"404\"\n      errorln(e.toString());\n      LOG.debug(\"Not found:\", e);\n      exit(EXIT_NOT_FOUND, e.toString());\n    } catch (Throwable e) {\n      e.printStackTrace(System.err);\n      exit(ERROR, e.toString());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "47011d7dd300b0c74bb6cfe25b918c479d718f4f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14220 Enhance S3GuardTool with bucket-info and set-capacity commands, tests. Contributed by Steve Loughran\n",
      "commitDate": "25/09/17 3:59 PM",
      "commitName": "47011d7dd300b0c74bb6cfe25b918c479d718f4f",
      "commitAuthor": "Aaron Fabbri",
      "commitDateOld": "01/09/17 6:13 AM",
      "commitNameOld": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthorOld": "Steve Loughran",
      "daysBetweenCommits": 24.41,
      "commitsBetweenForRepo": 233,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,16 @@\n   public static void main(String[] args) {\n     try {\n-      int ret \u003d run(args, new Configuration());\n-      System.exit(ret);\n+      int ret \u003d run(new Configuration(), args);\n+      exit(ret, \"\");\n     } catch (CommandFormat.UnknownOptionException e) {\n-      System.err.println(e.getMessage());\n+      errorln(e.getMessage());\n       printHelp();\n-      System.exit(INVALID_ARGUMENT);\n+      exit(E_USAGE, e.getMessage());\n+    } catch (ExitUtil.ExitException e) {\n+      // explicitly raised exit code\n+      exit(e.getExitCode(), e.toString());\n     } catch (Throwable e) {\n       e.printStackTrace(System.err);\n-      System.exit(ERROR);\n+      exit(ERROR, e.toString());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(new Configuration(), args);\n      exit(ret, \"\");\n    } catch (CommandFormat.UnknownOptionException e) {\n      errorln(e.getMessage());\n      printHelp();\n      exit(E_USAGE, e.getMessage());\n    } catch (ExitUtil.ExitException e) {\n      // explicitly raised exit code\n      exit(e.getExitCode(), e.toString());\n    } catch (Throwable e) {\n      e.printStackTrace(System.err);\n      exit(ERROR, e.toString());\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java",
      "extendedDetails": {}
    },
    "621b43e254afaff708cd6fc4698b29628f6abc33": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13345 HS3Guard: Improved Consistency for S3A.\nContributed by: Chris Nauroth, Aaron Fabbri, Mingliang Liu, Lei (Eddy) Xu,\nSean Mackrory, Steve Loughran and others.\n",
      "commitDate": "01/09/17 6:13 AM",
      "commitName": "621b43e254afaff708cd6fc4698b29628f6abc33",
      "commitAuthor": "Steve Loughran",
      "diff": "@@ -0,0 +1,13 @@\n+  public static void main(String[] args) {\n+    try {\n+      int ret \u003d run(args, new Configuration());\n+      System.exit(ret);\n+    } catch (CommandFormat.UnknownOptionException e) {\n+      System.err.println(e.getMessage());\n+      printHelp();\n+      System.exit(INVALID_ARGUMENT);\n+    } catch (Throwable e) {\n+      e.printStackTrace(System.err);\n+      System.exit(ERROR);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static void main(String[] args) {\n    try {\n      int ret \u003d run(args, new Configuration());\n      System.exit(ret);\n    } catch (CommandFormat.UnknownOptionException e) {\n      System.err.println(e.getMessage());\n      printHelp();\n      System.exit(INVALID_ARGUMENT);\n    } catch (Throwable e) {\n      e.printStackTrace(System.err);\n      System.exit(ERROR);\n    }\n  }",
      "path": "hadoop-tools/hadoop-aws/src/main/java/org/apache/hadoop/fs/s3a/s3guard/S3GuardTool.java"
    }
  }
}