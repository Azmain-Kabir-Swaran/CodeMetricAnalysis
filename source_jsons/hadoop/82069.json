{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "HostsFileReader.java",
  "functionName": "readFileToSet",
  "functionId": "readFileToSet___type-String__filename-String__set-Set__String__",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
  "functionStartLine": 77,
  "functionEndLine": 82,
  "numCommitsSeen": 24,
  "timeTaken": 2220,
  "changeHistory": [
    "7a3188d054481b9bd563e337901e93476303ce7f",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
    "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
    "802f885a550e97886e3dc72331016cf375b727af",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
    "9164c6319ec64adaba540760606d13a35495bacf",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36"
  ],
  "changeHistoryShort": {
    "7a3188d054481b9bd563e337901e93476303ce7f": "Ybodychange",
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": "Ybodychange",
    "a7bfb25d2bbab0a329712d1efb143edc49a4076d": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18": "Ybodychange",
    "802f885a550e97886e3dc72331016cf375b727af": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yfilerename",
    "9164c6319ec64adaba540760606d13a35495bacf": "Ybodychange",
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7a3188d054481b9bd563e337901e93476303ce7f": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-16282. Avoid FileStream to improve performance. Contributed by Ayush Saxena.\n",
      "commitDate": "02/05/19 12:58 PM",
      "commitName": "7a3188d054481b9bd563e337901e93476303ce7f",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 653.64,
      "commitsBetweenForRepo": 5524,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,6 +1,6 @@\n   public static void readFileToSet(String type,\n       String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n-    FileInputStream fis \u003d new FileInputStream(file);\n+    InputStream fis \u003d Files.newInputStream(file.toPath());\n     readFileToSetWithFileInputStream(type, filename, fis, set);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void readFileToSet(String type,\n      String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    InputStream fis \u003d Files.newInputStream(file.toPath());\n    readFileToSetWithFileInputStream(type, filename, fis, set);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "9da9f7d4d8f1dce210995a06863a8836c23d7c3a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1666. Modified RM HA handling of include/exclude node-lists to be available across RM failover by making using of a remote configuration-provider. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1569856 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/02/14 9:52 AM",
      "commitName": "9da9f7d4d8f1dce210995a06863a8836c23d7c3a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/06/13 10:14 AM",
      "commitNameOld": "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
      "commitAuthorOld": "Colin McCabe",
      "daysBetweenCommits": 261.03,
      "commitsBetweenForRepo": 1635,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,31 +1,6 @@\n   public static void readFileToSet(String type,\n       String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     FileInputStream fis \u003d new FileInputStream(file);\n-    BufferedReader reader \u003d null;\n-    try {\n-      reader \u003d new BufferedReader(new InputStreamReader(fis));\n-      String line;\n-      while ((line \u003d reader.readLine()) !\u003d null) {\n-        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n-        if (nodes !\u003d null) {\n-          for (int i \u003d 0; i \u003c nodes.length; i++) {\n-            if (nodes[i].trim().startsWith(\"#\")) {\n-              // Everything from now on is a comment\n-              break;\n-            }\n-            if (!nodes[i].isEmpty()) {\n-              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n-                  \" hosts from \" + filename);\n-              set.add(nodes[i]);\n-            }\n-          }\n-        }\n-      }   \n-    } finally {\n-      if (reader !\u003d null) {\n-        reader.close();\n-      }\n-      fis.close();\n-    }  \n+    readFileToSetWithFileInputStream(type, filename, fis, set);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static void readFileToSet(String type,\n      String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    readFileToSetWithFileInputStream(type, filename, fis, set);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "a7bfb25d2bbab0a329712d1efb143edc49a4076d": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-3934. duplicative dfs_hosts entries handled wrong. (cmccabe)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489065 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 10:14 AM",
      "commitName": "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
      "commitAuthor": "Colin McCabe",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-3934. duplicative dfs_hosts entries handled wrong. (cmccabe)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489065 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/06/13 10:14 AM",
          "commitName": "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 256.55,
          "commitsBetweenForRepo": 1423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,31 @@\n-  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n+  public static void readFileToSet(String type,\n+      String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n             if (nodes[i].trim().startsWith(\"#\")) {\n               // Everything from now on is a comment\n               break;\n             }\n             if (!nodes[i].isEmpty()) {\n-              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n-              set.add(nodes[i]);  // might need to add canonical name\n+              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n+                  \" hosts from \" + filename);\n+              set.add(nodes[i]);\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void readFileToSet(String type,\n      String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].isEmpty()) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n                  \" hosts from \" + filename);\n              set.add(nodes[i]);\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
          "extendedDetails": {
            "oldValue": "[filename-String, set-Set\u003cString\u003e]",
            "newValue": "[type-String, filename-String, set-Set\u003cString\u003e]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-3934. duplicative dfs_hosts entries handled wrong. (cmccabe)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489065 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/06/13 10:14 AM",
          "commitName": "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 256.55,
          "commitsBetweenForRepo": 1423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,31 @@\n-  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n+  public static void readFileToSet(String type,\n+      String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n             if (nodes[i].trim().startsWith(\"#\")) {\n               // Everything from now on is a comment\n               break;\n             }\n             if (!nodes[i].isEmpty()) {\n-              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n-              set.add(nodes[i]);  // might need to add canonical name\n+              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n+                  \" hosts from \" + filename);\n+              set.add(nodes[i]);\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void readFileToSet(String type,\n      String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].isEmpty()) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n                  \" hosts from \" + filename);\n              set.add(nodes[i]);\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public, static]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-3934. duplicative dfs_hosts entries handled wrong. (cmccabe)\n\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489065 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "03/06/13 10:14 AM",
          "commitName": "a7bfb25d2bbab0a329712d1efb143edc49a4076d",
          "commitAuthor": "Colin McCabe",
          "commitDateOld": "19/09/12 9:06 PM",
          "commitNameOld": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 256.55,
          "commitsBetweenForRepo": 1423,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,29 +1,31 @@\n-  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n+  public static void readFileToSet(String type,\n+      String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n             if (nodes[i].trim().startsWith(\"#\")) {\n               // Everything from now on is a comment\n               break;\n             }\n             if (!nodes[i].isEmpty()) {\n-              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n-              set.add(nodes[i]);  // might need to add canonical name\n+              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n+                  \" hosts from \" + filename);\n+              set.add(nodes[i]);\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
          "actualSource": "  public static void readFileToSet(String type,\n      String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].isEmpty()) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of \" + type +\n                  \" hosts from \" + filename);\n              set.add(nodes[i]);\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
          "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
          "extendedDetails": {}
        }
      ]
    },
    "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8814. Replace string equals  by String#isEmpty(). Contributed by Brandon Li.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1387853 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/12 9:06 PM",
      "commitName": "4c56bccf5ee1d6ec1fcef0804eacae785c4d7c18",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "29/06/12 3:24 PM",
      "commitNameOld": "802f885a550e97886e3dc72331016cf375b727af",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 82.24,
      "commitsBetweenForRepo": 461,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,29 +1,29 @@\n   private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n             if (nodes[i].trim().startsWith(\"#\")) {\n               // Everything from now on is a comment\n               break;\n             }\n-            if (!nodes[i].equals(\"\")) {\n+            if (!nodes[i].isEmpty()) {\n               LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n               set.add(nodes[i]);  // might need to add canonical name\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].isEmpty()) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "802f885a550e97886e3dc72331016cf375b727af": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3446. HostsFileReader silently ignores bad includes/excludes. Contributed by Matthew Jacobs.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1355584 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "29/06/12 3:24 PM",
      "commitName": "802f885a550e97886e3dc72331016cf375b727af",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 309.92,
      "commitsBetweenForRepo": 2111,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,29 @@\n   private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n-    if (!file.exists()) {\n-      return;\n-    }\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n             if (nodes[i].trim().startsWith(\"#\")) {\n               // Everything from now on is a comment\n               break;\n             }\n             if (!nodes[i].equals(\"\")) {\n               LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n               set.add(nodes[i]);  // might need to add canonical name\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].equals(\"\")) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    if (!file.exists()) {\n      return;\n    }\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].equals(\"\")) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {
        "oldPath": "hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
        "newPath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java"
      }
    },
    "0f6dfeeacbab65a31a33927a4eb84871d371fe52": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-6671. Use maven for hadoop common builds. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1153184 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "02/08/11 9:37 AM",
      "commitName": "0f6dfeeacbab65a31a33927a4eb84871d371fe52",
      "commitAuthor": "Thomas White",
      "commitDateOld": "01/08/11 3:53 PM",
      "commitNameOld": "9bac807cedbcff34e1a144fb475eff267e5ed86d",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    if (!file.exists()) {\n      return;\n    }\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].equals(\"\")) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {
        "oldPath": "common/src/java/org/apache/hadoop/util/HostsFileReader.java",
        "newPath": "hadoop-common/src/main/java/org/apache/hadoop/util/HostsFileReader.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "11/06/11 9:13 PM",
      "commitNameOld": "a285fb5effe9ba3be4ec5f942afaf5ddd1186151",
      "commitAuthorOld": "Eli Collins",
      "daysBetweenCommits": 0.74,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    if (!file.exists()) {\n      return;\n    }\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].equals(\"\")) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "common/src/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {
        "oldPath": "src/java/org/apache/hadoop/util/HostsFileReader.java",
        "newPath": "common/src/java/org/apache/hadoop/util/HostsFileReader.java"
      }
    },
    "9164c6319ec64adaba540760606d13a35495bacf": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-6216. Support comments in host files.  Contributed by Ravi Phulari and Dmytro Molkov\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@815524 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/09/09 3:18 PM",
      "commitName": "9164c6319ec64adaba540760606d13a35495bacf",
      "commitAuthor": "Tsz-wo Sze",
      "commitDateOld": "18/05/09 9:20 PM",
      "commitNameOld": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthorOld": "Owen O\u0027Malley",
      "daysBetweenCommits": 119.75,
      "commitsBetweenForRepo": 109,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,32 @@\n   private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n     File file \u003d new File(filename);\n     if (!file.exists()) {\n       return;\n     }\n     FileInputStream fis \u003d new FileInputStream(file);\n     BufferedReader reader \u003d null;\n     try {\n       reader \u003d new BufferedReader(new InputStreamReader(fis));\n       String line;\n       while ((line \u003d reader.readLine()) !\u003d null) {\n         String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n         if (nodes !\u003d null) {\n           for (int i \u003d 0; i \u003c nodes.length; i++) {\n+            if (nodes[i].trim().startsWith(\"#\")) {\n+              // Everything from now on is a comment\n+              break;\n+            }\n             if (!nodes[i].equals(\"\")) {\n+              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n               set.add(nodes[i]);  // might need to add canonical name\n             }\n           }\n         }\n       }   \n     } finally {\n       if (reader !\u003d null) {\n         reader.close();\n       }\n       fis.close();\n     }  \n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    if (!file.exists()) {\n      return;\n    }\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (nodes[i].trim().startsWith(\"#\")) {\n              // Everything from now on is a comment\n              break;\n            }\n            if (!nodes[i].equals(\"\")) {\n              LOG.info(\"Adding \" + nodes[i] + \" to the list of hosts from \" + filename);\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "src/java/org/apache/hadoop/util/HostsFileReader.java",
      "extendedDetails": {}
    },
    "5128a9a453d64bfe1ed978cf9ffed27985eeef36": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-4687 Moving src directories on branch\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/core/branches/HADOOP-4687/core@776174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/05/09 9:20 PM",
      "commitName": "5128a9a453d64bfe1ed978cf9ffed27985eeef36",
      "commitAuthor": "Owen O\u0027Malley",
      "diff": "@@ -0,0 +1,27 @@\n+  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n+    File file \u003d new File(filename);\n+    if (!file.exists()) {\n+      return;\n+    }\n+    FileInputStream fis \u003d new FileInputStream(file);\n+    BufferedReader reader \u003d null;\n+    try {\n+      reader \u003d new BufferedReader(new InputStreamReader(fis));\n+      String line;\n+      while ((line \u003d reader.readLine()) !\u003d null) {\n+        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n+        if (nodes !\u003d null) {\n+          for (int i \u003d 0; i \u003c nodes.length; i++) {\n+            if (!nodes[i].equals(\"\")) {\n+              set.add(nodes[i]);  // might need to add canonical name\n+            }\n+          }\n+        }\n+      }   \n+    } finally {\n+      if (reader !\u003d null) {\n+        reader.close();\n+      }\n+      fis.close();\n+    }  \n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void readFileToSet(String filename, Set\u003cString\u003e set) throws IOException {\n    File file \u003d new File(filename);\n    if (!file.exists()) {\n      return;\n    }\n    FileInputStream fis \u003d new FileInputStream(file);\n    BufferedReader reader \u003d null;\n    try {\n      reader \u003d new BufferedReader(new InputStreamReader(fis));\n      String line;\n      while ((line \u003d reader.readLine()) !\u003d null) {\n        String[] nodes \u003d line.split(\"[ \\t\\n\\f\\r]+\");\n        if (nodes !\u003d null) {\n          for (int i \u003d 0; i \u003c nodes.length; i++) {\n            if (!nodes[i].equals(\"\")) {\n              set.add(nodes[i]);  // might need to add canonical name\n            }\n          }\n        }\n      }   \n    } finally {\n      if (reader !\u003d null) {\n        reader.close();\n      }\n      fis.close();\n    }  \n  }",
      "path": "src/java/org/apache/hadoop/util/HostsFileReader.java"
    }
  }
}