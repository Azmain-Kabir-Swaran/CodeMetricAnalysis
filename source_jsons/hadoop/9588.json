{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ExecuteCommand.java",
  "functionName": "submitPlan",
  "functionId": "submitPlan___planFile-String(modifiers-final)__planData-String(modifiers-final)__skipDateCheck-boolean",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
  "functionStartLine": 94,
  "functionEndLine": 111,
  "numCommitsSeen": 26,
  "timeTaken": 3070,
  "changeHistory": [
    "cb64e993c270a68cb0c056ff41ad522e9306c88b",
    "a3c304c5dd90923b749c4aa1baafe603687aef45",
    "35c5943b8ba394191405555cdfc5e6127053ee97",
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
    "78a1032b71af7672840da98808e2bebac3cc11d1",
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3"
  ],
  "changeHistoryShort": {
    "cb64e993c270a68cb0c056ff41ad522e9306c88b": "Ybodychange",
    "a3c304c5dd90923b749c4aa1baafe603687aef45": "Ymultichange(Yparameterchange,Ybodychange)",
    "35c5943b8ba394191405555cdfc5e6127053ee97": "Ybodychange",
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3": "Ybodychange",
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
    "78a1032b71af7672840da98808e2bebac3cc11d1": "Ybodychange",
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3": "Yintroduced"
  },
  "changeHistoryDetails": {
    "cb64e993c270a68cb0c056ff41ad522e9306c88b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-15347. Replace the deprecated method shaHex. Contributed by bianqi.\n",
      "commitDate": "09/05/20 11:41 AM",
      "commitName": "cb64e993c270a68cb0c056ff41ad522e9306c88b",
      "commitAuthor": "Ayush Saxena",
      "commitDateOld": "03/03/18 3:42 PM",
      "commitNameOld": "a3c304c5dd90923b749c4aa1baafe603687aef45",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 797.79,
      "commitsBetweenForRepo": 5862,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void submitPlan(final String planFile, final String planData,\n                           boolean skipDateCheck)\n           throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n-    String planHash \u003d DigestUtils.shaHex(planData);\n+    String planHash \u003d DigestUtils.sha1Hex(planData);\n     try {\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                       planFile, planData, skipDateCheck);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitPlan(final String planFile, final String planData,\n                          boolean skipDateCheck)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha1Hex(planData);\n    try {\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                      planFile, planData, skipDateCheck);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "a3c304c5dd90923b749c4aa1baafe603687aef45": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "HDFS-13178. Disk Balancer: Add a force option to DiskBalancer Execute command. Contributed by Bharat Viswanadham.\n",
      "commitDate": "03/03/18 3:42 PM",
      "commitName": "a3c304c5dd90923b749c4aa1baafe603687aef45",
      "commitAuthor": "Arpit Agarwal",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-13178. Disk Balancer: Add a force option to DiskBalancer Execute command. Contributed by Bharat Viswanadham.\n",
          "commitDate": "03/03/18 3:42 PM",
          "commitName": "a3c304c5dd90923b749c4aa1baafe603687aef45",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/09/16 7:26 PM",
          "commitNameOld": "35c5943b8ba394191405555cdfc5e6127053ee97",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 540.89,
          "commitsBetweenForRepo": 3511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private void submitPlan(final String planFile, final String planData)\n+  private void submitPlan(final String planFile, final String planData,\n+                          boolean skipDateCheck)\n           throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.shaHex(planData);\n     try {\n-      // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n-                                      planFile, planData, false);\n+                                      planFile, planData, skipDateCheck);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void submitPlan(final String planFile, final String planData,\n                          boolean skipDateCheck)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.shaHex(planData);\n    try {\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                      planFile, planData, skipDateCheck);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
          "extendedDetails": {
            "oldValue": "[planFile-String(modifiers-final), planData-String(modifiers-final)]",
            "newValue": "[planFile-String(modifiers-final), planData-String(modifiers-final), skipDateCheck-boolean]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-13178. Disk Balancer: Add a force option to DiskBalancer Execute command. Contributed by Bharat Viswanadham.\n",
          "commitDate": "03/03/18 3:42 PM",
          "commitName": "a3c304c5dd90923b749c4aa1baafe603687aef45",
          "commitAuthor": "Arpit Agarwal",
          "commitDateOld": "08/09/16 7:26 PM",
          "commitNameOld": "35c5943b8ba394191405555cdfc5e6127053ee97",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 540.89,
          "commitsBetweenForRepo": 3511,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,18 @@\n-  private void submitPlan(final String planFile, final String planData)\n+  private void submitPlan(final String planFile, final String planData,\n+                          boolean skipDateCheck)\n           throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.shaHex(planData);\n     try {\n-      // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n-                                      planFile, planData, false);\n+                                      planFile, planData, skipDateCheck);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void submitPlan(final String planFile, final String planData,\n                          boolean skipDateCheck)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.shaHex(planData);\n    try {\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                      planFile, planData, skipDateCheck);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
          "extendedDetails": {}
        }
      ]
    },
    "35c5943b8ba394191405555cdfc5e6127053ee97": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10553. DiskBalancer: Rename Tools/DiskBalancer class to Tools/DiskBalancerCLI. Contributed by Manoj Govindassamy.\n",
      "commitDate": "08/09/16 7:26 PM",
      "commitName": "35c5943b8ba394191405555cdfc5e6127053ee97",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "15/08/16 8:10 PM",
      "commitNameOld": "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 23.97,
      "commitsBetweenForRepo": 154,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void submitPlan(final String planFile, final String planData)\n           throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.shaHex(planData);\n     try {\n       // TODO : Support skipping date check.\n-      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n+      dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                       planFile, planData, false);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitPlan(final String planFile, final String planData)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.shaHex(planData);\n    try {\n      // TODO : Support skipping date check.\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancerCLI.PLAN_VERSION,\n                                      planFile, planData, false);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "5628b36c0872d58c9b25f23da3dab4eafad9bca3": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10559. DiskBalancer: Use SHA1 for Plan ID. Contributed by Xiaobing Zhou.\n",
      "commitDate": "15/08/16 8:10 PM",
      "commitName": "5628b36c0872d58c9b25f23da3dab4eafad9bca3",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "09/08/16 3:59 PM",
      "commitNameOld": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
      "commitAuthorOld": "Lei Xu",
      "daysBetweenCommits": 6.17,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private void submitPlan(final String planFile, final String planData)\n           throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n-    String planHash \u003d DigestUtils.sha512Hex(planData);\n+    String planHash \u003d DigestUtils.shaHex(planData);\n     try {\n       // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n                                       planFile, planData, false);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitPlan(final String planFile, final String planData)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.shaHex(planData);\n    try {\n      // TODO : Support skipping date check.\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n                                      planFile, planData, false);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "9c6a4383cac29b2893ce14e6c9a75705fabfd522": {
      "type": "Ymultichange(Yparameterchange,Ybodychange,Yparametermetachange)",
      "commitMessage": "HDFS-10681. DiskBalancer: query command should report Plan file path apart from PlanID. (Manoj Govindassamy via lei)\n",
      "commitDate": "09/08/16 3:59 PM",
      "commitName": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10681. DiskBalancer: query command should report Plan file path apart from PlanID. (Manoj Govindassamy via lei)\n",
          "commitDate": "09/08/16 3:59 PM",
          "commitName": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "23/06/16 6:27 PM",
          "commitNameOld": "e8de28181a3ed0053d5cd5f196434739880ee978",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 46.9,
          "commitsBetweenForRepo": 404,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void submitPlan(String planData) throws IOException {\n+  private void submitPlan(final String planFile, final String planData)\n+          throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.sha512Hex(planData);\n     try {\n+      // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n-          planData, false); // TODO : Support skipping date check.\n+                                      planFile, planData, false);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void submitPlan(final String planFile, final String planData)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha512Hex(planData);\n    try {\n      // TODO : Support skipping date check.\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n                                      planFile, planData, false);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
          "extendedDetails": {
            "oldValue": "[planData-String]",
            "newValue": "[planFile-String(modifiers-final), planData-String(modifiers-final)]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10681. DiskBalancer: query command should report Plan file path apart from PlanID. (Manoj Govindassamy via lei)\n",
          "commitDate": "09/08/16 3:59 PM",
          "commitName": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "23/06/16 6:27 PM",
          "commitNameOld": "e8de28181a3ed0053d5cd5f196434739880ee978",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 46.9,
          "commitsBetweenForRepo": 404,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void submitPlan(String planData) throws IOException {\n+  private void submitPlan(final String planFile, final String planData)\n+          throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.sha512Hex(planData);\n     try {\n+      // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n-          planData, false); // TODO : Support skipping date check.\n+                                      planFile, planData, false);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void submitPlan(final String planFile, final String planData)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha512Hex(planData);\n    try {\n      // TODO : Support skipping date check.\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n                                      planFile, planData, false);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparametermetachange",
          "commitMessage": "HDFS-10681. DiskBalancer: query command should report Plan file path apart from PlanID. (Manoj Govindassamy via lei)\n",
          "commitDate": "09/08/16 3:59 PM",
          "commitName": "9c6a4383cac29b2893ce14e6c9a75705fabfd522",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "23/06/16 6:27 PM",
          "commitNameOld": "e8de28181a3ed0053d5cd5f196434739880ee978",
          "commitAuthorOld": "Anu Engineer",
          "daysBetweenCommits": 46.9,
          "commitsBetweenForRepo": 404,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,16 +1,18 @@\n-  private void submitPlan(String planData) throws IOException {\n+  private void submitPlan(final String planFile, final String planData)\n+          throws IOException {\n     Preconditions.checkNotNull(planData);\n     NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.sha512Hex(planData);\n     try {\n+      // TODO : Support skipping date check.\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n-          planData, false); // TODO : Support skipping date check.\n+                                      planFile, planData, false);\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private void submitPlan(final String planFile, final String planData)\n          throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha512Hex(planData);\n    try {\n      // TODO : Support skipping date check.\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n                                      planFile, planData, false);\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
          "extendedDetails": {
            "oldValue": "[planData-String]",
            "newValue": "[planFile-String(modifiers-final), planData-String(modifiers-final)]"
          }
        }
      ]
    },
    "78a1032b71af7672840da98808e2bebac3cc11d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10500. Diskbalancer: Print out information when a plan is not generated. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "78a1032b71af7672840da98808e2bebac3cc11d1",
      "commitAuthor": "Anu Engineer",
      "commitDateOld": "23/06/16 6:21 PM",
      "commitNameOld": "d2ff793ae4788418116b64e7141e80897d4f9c24",
      "commitAuthorOld": "Anu Engineer",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,16 @@\n   private void submitPlan(String planData) throws IOException {\n     Preconditions.checkNotNull(planData);\n-    NodePlan plan \u003d readPlan(planData);\n+    NodePlan plan \u003d NodePlan.parseJson(planData);\n     String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n     Preconditions.checkNotNull(dataNodeAddress);\n     ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n     String planHash \u003d DigestUtils.sha512Hex(planData);\n     try {\n       dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n           planData, false); // TODO : Support skipping date check.\n     } catch (DiskBalancerException ex) {\n       LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n           plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n       throw ex;\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitPlan(String planData) throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d NodePlan.parseJson(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha512Hex(planData);\n    try {\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n          planData, false); // TODO : Support skipping date check.\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java",
      "extendedDetails": {}
    },
    "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-9546: DiskBalancer: Add Execute command. Contributed by Anu Engineer.\n",
      "commitDate": "23/06/16 6:21 PM",
      "commitName": "1b39b283c70854bf3b77f5ba9fbcce064bfea5c3",
      "commitAuthor": "Anu Engineer",
      "diff": "@@ -0,0 +1,16 @@\n+  private void submitPlan(String planData) throws IOException {\n+    Preconditions.checkNotNull(planData);\n+    NodePlan plan \u003d readPlan(planData);\n+    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n+    Preconditions.checkNotNull(dataNodeAddress);\n+    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n+    String planHash \u003d DigestUtils.sha512Hex(planData);\n+    try {\n+      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n+          planData, false); // TODO : Support skipping date check.\n+    } catch (DiskBalancerException ex) {\n+      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n+          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n+      throw ex;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void submitPlan(String planData) throws IOException {\n    Preconditions.checkNotNull(planData);\n    NodePlan plan \u003d readPlan(planData);\n    String dataNodeAddress \u003d plan.getNodeName() + \":\" + plan.getPort();\n    Preconditions.checkNotNull(dataNodeAddress);\n    ClientDatanodeProtocol dataNode \u003d getDataNodeProxy(dataNodeAddress);\n    String planHash \u003d DigestUtils.sha512Hex(planData);\n    try {\n      dataNode.submitDiskBalancerPlan(planHash, DiskBalancer.PLAN_VERSION,\n          planData, false); // TODO : Support skipping date check.\n    } catch (DiskBalancerException ex) {\n      LOG.error(\"Submitting plan on  {} failed. Result: {}, Message: {}\",\n          plan.getNodeName(), ex.getResult().toString(), ex.getMessage());\n      throw ex;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/diskbalancer/command/ExecuteCommand.java"
    }
  }
}