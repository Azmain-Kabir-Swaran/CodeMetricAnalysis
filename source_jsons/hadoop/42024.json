{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKRMStateStore.java",
  "functionName": "updateApplicationAttemptStateInternal",
  "functionId": "updateApplicationAttemptStateInternal___appAttemptId-ApplicationAttemptId__attemptStateDataPB-ApplicationAttemptStateData",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
  "functionStartLine": 962,
  "functionEndLine": 968,
  "numCommitsSeen": 102,
  "timeTaken": 5206,
  "changeHistory": [
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
    "87852b6ef4b9d973b7b3999974d41c8860fb1495",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
    "e516706b896743e47e2852be81944eb5613e3e76",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e",
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344",
    "dc84800184a58a26d370d9cc3ef094c20e687211",
    "93907baa0b033c1431dc7055116746fc9db508cc",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330"
  ],
  "changeHistoryShort": {
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": "Ybodychange",
    "87852b6ef4b9d973b7b3999974d41c8860fb1495": "Ybodychange",
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": "Ymodifierchange",
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": "Ybodychange",
    "e516706b896743e47e2852be81944eb5613e3e76": "Ybodychange",
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": "Yparameterchange",
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e": "Ybodychange",
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344": "Ybodychange",
    "dc84800184a58a26d370d9cc3ef094c20e687211": "Ybodychange",
    "93907baa0b033c1431dc7055116746fc9db508cc": "Ymultichange(Yparameterchange,Ybodychange)",
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": "Ymultichange(Yrename,Ybodychange)",
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": "Yintroduced"
  },
  "changeHistoryDetails": {
    "2e52789edf68016e7a3f450164f8bd3d8e6cb210": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2962. ZKRMStateStore: Limit the number of znodes under a znode (Contributed by Varun Sexena via Daniel Templeton)\n",
      "commitDate": "28/04/17 1:30 PM",
      "commitName": "2e52789edf68016e7a3f450164f8bd3d8e6cb210",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "30/01/17 9:44 PM",
      "commitNameOld": "87852b6ef4b9d973b7b3999974d41c8860fb1495",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 87.62,
      "commitsBetweenForRepo": 498,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,7 @@\n   protected synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n-    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n-    String appAttemptIdStr \u003d appAttemptId.toString();\n-    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n-    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n-\n-    if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n-          + \" at: \" + nodeUpdatePath);\n-    }\n-\n-    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-\n-    if (exists(nodeUpdatePath)) {\n-      safeSetData(nodeUpdatePath, attemptStateData, -1);\n-    } else {\n-      safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n-          CreateMode.PERSISTENT);\n-      if (LOG.isDebugEnabled()) {\n-        LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n-            + \" update the application attempt state.\");\n-      }\n-    }\n+    handleApplicationAttemptStateOp(appAttemptId, attemptStateDataPB,\n+        AppAttemptOp.UPDATE);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    handleApplicationAttemptStateOp(appAttemptId, attemptStateDataPB,\n        AppAttemptOp.UPDATE);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "87852b6ef4b9d973b7b3999974d41c8860fb1495": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6103. Log updates for ZKRMStateStore (Contributed by Daniel Sturman via Daniel Templeton)\n",
      "commitDate": "30/01/17 9:44 PM",
      "commitName": "87852b6ef4b9d973b7b3999974d41c8860fb1495",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "14/11/16 9:28 PM",
      "commitNameOld": "b7070f3308fc4c6a8a9a25021562169cae87d223",
      "commitAuthorOld": "Rohith Sharma K S",
      "daysBetweenCommits": 77.01,
      "commitsBetweenForRepo": 397,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,25 +1,27 @@\n   protected synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n \n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n \n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n     if (exists(nodeUpdatePath)) {\n       safeSetData(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n           CreateMode.PERSISTENT);\n-      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n-          + \" update the application attempt state.\");\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n+            + \" update the application attempt state.\");\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (exists(nodeUpdatePath)) {\n      safeSetData(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n          CreateMode.PERSISTENT);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n            + \" update the application attempt state.\");\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "bcb2528a51c33e4caff8d744c5e14c1accfc47d0": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5400. Light cleanup in ZKRMStateStore (templedf via rkanter)\n",
      "commitDate": "28/09/16 2:56 PM",
      "commitName": "bcb2528a51c33e4caff8d744c5e14c1accfc47d0",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "25/09/16 11:00 PM",
      "commitNameOld": "14a696f369f7e3802587f57c8fff3aa51b5ab576",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 2.66,
      "commitsBetweenForRepo": 26,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n-  public synchronized void updateApplicationAttemptStateInternal(\n+  protected synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n+\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n+\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n     if (exists(nodeUpdatePath)) {\n       safeSetData(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n           CreateMode.PERSISTENT);\n       LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (exists(nodeUpdatePath)) {\n      safeSetData(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n          CreateMode.PERSISTENT);\n      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[public, synchronized]",
        "newValue": "[protected, synchronized]"
      }
    },
    "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2716. Refactor ZKRMStateStore retry code with Apache Curator. Contributed by Karthik Kambatla\n",
      "commitDate": "08/06/15 2:50 PM",
      "commitName": "960b8f19ca98dbcfdd30f2f1f275b8718d2e872f",
      "commitAuthor": "Jian He",
      "commitDateOld": "08/05/15 3:12 PM",
      "commitNameOld": "d0b73287c26983f32b0efe01862150e9fd28086f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 30.99,
      "commitsBetweenForRepo": 257,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n-    if (existsWithRetries(nodeUpdatePath, false) !\u003d null) {\n-      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n+    if (exists(nodeUpdatePath)) {\n+      safeSetData(nodeUpdatePath, attemptStateData, -1);\n     } else {\n-      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n-        CreateMode.PERSISTENT);\n+      safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n+          CreateMode.PERSISTENT);\n       LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (exists(nodeUpdatePath)) {\n      safeSetData(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      safeCreate(nodeUpdatePath, attemptStateData, zkAcl,\n          CreateMode.PERSISTENT);\n      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "e516706b896743e47e2852be81944eb5613e3e76": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3469. ZKRMStateStore: Avoid setting watches that are not required. (Jun Hong via kasha)\n",
      "commitDate": "10/04/15 11:20 AM",
      "commitName": "e516706b896743e47e2852be81944eb5613e3e76",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "04/03/15 7:49 PM",
      "commitNameOld": "8d88691d162f87f95c9ed7e0a569ef08e8385d4f",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 36.61,
      "commitsBetweenForRepo": 327,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n-    if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n+    if (existsWithRetries(nodeUpdatePath, false) !\u003d null) {\n       setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n         CreateMode.PERSISTENT);\n       LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (existsWithRetries(nodeUpdatePath, false) !\u003d null) {\n      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "c94f2cec3a4d46718aa4cd144fb32e328406b9b3": {
      "type": "Yparameterchange",
      "commitMessage": "Augmented RMStateStore with state machine. Contributed by Binglin Chang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1601491 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/06/14 12:44 PM",
      "commitName": "c94f2cec3a4d46718aa4cd144fb32e328406b9b3",
      "commitAuthor": "Jian He",
      "commitDateOld": "06/06/14 11:12 PM",
      "commitNameOld": "9958072d53e1abddbafedbc9bc62f6cb40c40fc3",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 2.56,
      "commitsBetweenForRepo": 7,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n-      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n+      ApplicationAttemptStateData attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n     if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n       setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n         CreateMode.PERSISTENT);\n       LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateData attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {
        "oldValue": "[appAttemptId-ApplicationAttemptId, attemptStateDataPB-ApplicationAttemptStateDataPBImpl]",
        "newValue": "[appAttemptId-ApplicationAttemptId, attemptStateDataPB-ApplicationAttemptStateData]"
      }
    },
    "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2061. Revisit logging levels in ZKRMStateStore. (Ray Chiang via kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1600498 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "04/06/14 2:11 PM",
      "commitName": "d1d6bb70f4de66f393f2d5c52d4611b1f87b152e",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "30/05/14 8:24 AM",
      "commitNameOld": "49a3a0cd0ceb0dfe84367a2adfb8f9f0990a5548",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 5.24,
      "commitsBetweenForRepo": 25,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n     if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n       setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n         CreateMode.PERSISTENT);\n-      LOG.info(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n+      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n      LOG.debug(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1934. Fixed a potential NPE in ZKRMStateStore caused by handling Disconnected event from ZK. Contributed by Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1587776 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "15/04/14 7:02 PM",
      "commitName": "38d5ca2e47e8ca1b08d77fe2de6e1e83c6440344",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/04/14 2:51 PM",
      "commitNameOld": "c6b70f4760bc9d4028616de779ccf86219f38ec8",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.17,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n \n-    if (zkClient.exists(nodeUpdatePath, true) !\u003d null) {\n+    if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n       setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n     } else {\n       createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n         CreateMode.PERSISTENT);\n       LOG.info(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n           + \" update the application attempt state.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (existsWithRetries(nodeUpdatePath, true) !\u003d null) {\n      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n      LOG.info(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "dc84800184a58a26d370d9cc3ef094c20e687211": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1924. Made ZKRMStateStore updateApplication(Attempt)StateInternal work when Application(Attempt) state hasn\u0027t been stored before. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1586547 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/14 8:36 PM",
      "commitName": "dc84800184a58a26d370d9cc3ef094c20e687211",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "21/03/14 9:12 PM",
      "commitNameOld": "ce56616037fc160ba875b496bdc369411bb873be",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 19.97,
      "commitsBetweenForRepo": 138,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,23 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n       ApplicationAttemptId appAttemptId,\n       ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n     String appIdStr \u003d appAttemptId.getApplicationId().toString();\n     String appAttemptIdStr \u003d appAttemptId.toString();\n     String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n     String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n           + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-    setDataWithRetries(nodeUpdatePath, attemptStateData, 0);\n+\n+    if (zkClient.exists(nodeUpdatePath, true) !\u003d null) {\n+      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n+    } else {\n+      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n+        CreateMode.PERSISTENT);\n+      LOG.info(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n+          + \" update the application attempt state.\");\n+    }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n\n    if (zkClient.exists(nodeUpdatePath, true) !\u003d null) {\n      setDataWithRetries(nodeUpdatePath, attemptStateData, -1);\n    } else {\n      createWithRetries(nodeUpdatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n      LOG.info(appAttemptId + \" znode didn\u0027t exist. Created a new znode to\"\n          + \" update the application attempt state.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
      "extendedDetails": {}
    },
    "93907baa0b033c1431dc7055116746fc9db508cc": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/12/13 6:33 PM",
      "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n-      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n+      ApplicationAttemptId appAttemptId,\n+      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n-    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n+    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n+    String appAttemptIdStr \u003d appAttemptId.toString();\n+    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n+    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n-          + nodeCreatePath);\n+      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n+          + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n+    setDataWithRetries(nodeUpdatePath, attemptStateData, 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n    setDataWithRetries(nodeUpdatePath, attemptStateData, 0);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "[attemptId-String, attemptStateDataPB-ApplicationAttemptStateDataPBImpl]",
            "newValue": "[appAttemptId-ApplicationAttemptId, attemptStateDataPB-ApplicationAttemptStateDataPBImpl]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-1307. Redesign znode structure for Zookeeper based RM state-store for better organization and scalability. Contributed by Tsuyoshi OZAWA.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1552209 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "18/12/13 6:33 PM",
          "commitName": "93907baa0b033c1431dc7055116746fc9db508cc",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "07/12/13 8:17 PM",
          "commitNameOld": "305ae48136d6e201de4451e824cb7b84f94ba2e0",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 10.93,
          "commitsBetweenForRepo": 69,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,11 +1,15 @@\n   public synchronized void updateApplicationAttemptStateInternal(\n-      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n+      ApplicationAttemptId appAttemptId,\n+      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n-    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n+    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n+    String appAttemptIdStr \u003d appAttemptId.toString();\n+    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n+    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n-          + nodeCreatePath);\n+      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n+          + \" at: \" + nodeUpdatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n+    setDataWithRetries(nodeUpdatePath, attemptStateData, 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      ApplicationAttemptId appAttemptId,\n      ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String appIdStr \u003d appAttemptId.getApplicationId().toString();\n    String appAttemptIdStr \u003d appAttemptId.toString();\n    String appDirPath \u003d getNodePath(rmAppRoot, appIdStr);\n    String nodeUpdatePath \u003d getNodePath(appDirPath, appAttemptIdStr);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + appAttemptIdStr\n          + \" at: \" + nodeUpdatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n    setDataWithRetries(nodeUpdatePath, attemptStateData, 0);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6": {
      "type": "Ymultichange(Yrename,Ybodychange)",
      "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/13 10:25 AM",
      "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/13 10:25 AM",
          "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/09/13 1:39 PM",
          "commitNameOld": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
          "commitAuthorOld": "Hitesh Shah",
          "daysBetweenCommits": 41.87,
          "commitsBetweenForRepo": 291,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-  public synchronized void storeApplicationAttemptState(\n+  public synchronized void updateApplicationAttemptStateInternal(\n       String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n     String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing info for attempt: \" + attemptId + \" at: \"\n+      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n           + nodeCreatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-    createWithRetries(nodeCreatePath, attemptStateData, zkAcl,\n-        CreateMode.PERSISTENT);\n+    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n          + nodeCreatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {
            "oldValue": "storeApplicationAttemptState",
            "newValue": "updateApplicationAttemptStateInternal"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-891. Modified ResourceManager state-store to remember completed applications so that clients can get information about them post RM-restart. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1537560 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "31/10/13 10:25 AM",
          "commitName": "9f4d4e27fb1760b352cc5b301cd65a50d2d43ff6",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "19/09/13 1:39 PM",
          "commitNameOld": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
          "commitAuthorOld": "Hitesh Shah",
          "daysBetweenCommits": 41.87,
          "commitsBetweenForRepo": 291,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,12 +1,11 @@\n-  public synchronized void storeApplicationAttemptState(\n+  public synchronized void updateApplicationAttemptStateInternal(\n       String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n       throws Exception {\n     String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n     if (LOG.isDebugEnabled()) {\n-      LOG.debug(\"Storing info for attempt: \" + attemptId + \" at: \"\n+      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n           + nodeCreatePath);\n     }\n     byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n-    createWithRetries(nodeCreatePath, attemptStateData, zkAcl,\n-        CreateMode.PERSISTENT);\n+    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public synchronized void updateApplicationAttemptStateInternal(\n      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing final state info for attempt: \" + attemptId + \" at: \"\n          + nodeCreatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n    setDataWithRetries(nodeCreatePath, attemptStateData, 0);\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "8628c1704b7d8c1a0ac01cea679c03245d11d330": {
      "type": "Yintroduced",
      "commitMessage": "YARN-353. Add Zookeeper-based store implementation for RMStateStore. Contributed by Bikas Saha, Jian He and Karthik Kambatla.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1524829 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/09/13 1:39 PM",
      "commitName": "8628c1704b7d8c1a0ac01cea679c03245d11d330",
      "commitAuthor": "Hitesh Shah",
      "diff": "@@ -0,0 +1,12 @@\n+  public synchronized void storeApplicationAttemptState(\n+      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n+      throws Exception {\n+    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"Storing info for attempt: \" + attemptId + \" at: \"\n+          + nodeCreatePath);\n+    }\n+    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n+    createWithRetries(nodeCreatePath, attemptStateData, zkAcl,\n+        CreateMode.PERSISTENT);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized void storeApplicationAttemptState(\n      String attemptId, ApplicationAttemptStateDataPBImpl attemptStateDataPB)\n      throws Exception {\n    String nodeCreatePath \u003d getNodePath(rmAppRoot, attemptId);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"Storing info for attempt: \" + attemptId + \" at: \"\n          + nodeCreatePath);\n    }\n    byte[] attemptStateData \u003d attemptStateDataPB.getProto().toByteArray();\n    createWithRetries(nodeCreatePath, attemptStateData, zkAcl,\n        CreateMode.PERSISTENT);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/ZKRMStateStore.java"
    }
  }
}