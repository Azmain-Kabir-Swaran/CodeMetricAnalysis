{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "YarnClientImpl.java",
  "functionName": "getApplicationReport",
  "functionId": "getApplicationReport___appId-ApplicationId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
  "functionStartLine": 535,
  "functionEndLine": 559,
  "numCommitsSeen": 92,
  "timeTaken": 3417,
  "changeHistory": [
    "ee3355be3cd1cd956296a1b79b264177ff139ce6",
    "692d51c09d3668cde47cc297296d095ddfa933a3",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
    "87c5d243db050ac9ce0c53e0905930573132221e",
    "10e704c50ba1fa601329d0fee099993e8c3725a6",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5"
  ],
  "changeHistoryShort": {
    "ee3355be3cd1cd956296a1b79b264177ff139ce6": "Ybodychange",
    "692d51c09d3668cde47cc297296d095ddfa933a3": "Ybodychange",
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": "Ybodychange",
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": "Yfilerename",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Yexceptionschange",
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43": "Yexceptionschange",
    "87c5d243db050ac9ce0c53e0905930573132221e": "Yfilerename",
    "10e704c50ba1fa601329d0fee099993e8c3725a6": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ee3355be3cd1cd956296a1b79b264177ff139ce6": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8303. YarnClient should contact TimelineReader for application/attempt/container report.\n",
      "commitDate": "16/11/18 4:28 AM",
      "commitName": "ee3355be3cd1cd956296a1b79b264177ff139ce6",
      "commitAuthor": "Rohith Sharma K S",
      "commitDateOld": "12/09/18 3:31 AM",
      "commitNameOld": "8cf6a9a2bde9d4ccad95a514885634792889ec7f",
      "commitAuthorOld": "bibinchundatt",
      "daysBetweenCommits": 65.08,
      "commitsBetweenForRepo": 633,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,25 @@\n   public ApplicationReport getApplicationReport(ApplicationId appId)\n       throws YarnException, IOException {\n     GetApplicationReportResponse response \u003d null;\n     try {\n       GetApplicationReportRequest request \u003d Records\n           .newRecord(GetApplicationReportRequest.class);\n       request.setApplicationId(appId);\n       response \u003d rmClient.getApplicationReport(request);\n     } catch (ApplicationNotFoundException e) {\n+      if (timelineV2ServiceEnabled) {\n+        try {\n+          return ahsV2Client.getApplicationReport(appId);\n+        } catch (Exception ex) {\n+          LOG.warn(\"Failed to fetch application report from \"\n+              + \"ATS v2\", ex);\n+        }\n+      }\n       if (!historyServiceEnabled) {\n         // Just throw it as usual if historyService is not enabled.\n         throw e;\n       }\n       return historyClient.getApplicationReport(appId);\n     }\n     return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnException, IOException {\n    GetApplicationReportResponse response \u003d null;\n    try {\n      GetApplicationReportRequest request \u003d Records\n          .newRecord(GetApplicationReportRequest.class);\n      request.setApplicationId(appId);\n      response \u003d rmClient.getApplicationReport(request);\n    } catch (ApplicationNotFoundException e) {\n      if (timelineV2ServiceEnabled) {\n        try {\n          return ahsV2Client.getApplicationReport(appId);\n        } catch (Exception ex) {\n          LOG.warn(\"Failed to fetch application report from \"\n              + \"ATS v2\", ex);\n        }\n      }\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n      return historyClient.getApplicationReport(appId);\n    }\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "692d51c09d3668cde47cc297296d095ddfa933a3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3975. WebAppProxyServlet should not redirect to RM page if AHS is enabled. Contributed by Mit Desai\n",
      "commitDate": "23/09/15 9:38 AM",
      "commitName": "692d51c09d3668cde47cc297296d095ddfa933a3",
      "commitAuthor": "Jason Lowe",
      "commitDateOld": "24/08/15 8:36 PM",
      "commitNameOld": "57c7ae1affb2e1821fbdc3f47738d7e6fd83c7c1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 29.54,
      "commitsBetweenForRepo": 175,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,17 @@\n   public ApplicationReport getApplicationReport(ApplicationId appId)\n       throws YarnException, IOException {\n     GetApplicationReportResponse response \u003d null;\n     try {\n       GetApplicationReportRequest request \u003d Records\n           .newRecord(GetApplicationReportRequest.class);\n       request.setApplicationId(appId);\n       response \u003d rmClient.getApplicationReport(request);\n-    } catch (YarnException e) {\n+    } catch (ApplicationNotFoundException e) {\n       if (!historyServiceEnabled) {\n         // Just throw it as usual if historyService is not enabled.\n         throw e;\n       }\n-      // Even if history-service is enabled, treat all exceptions still the same\n-      // except the following\n-      if (!(e.getClass() \u003d\u003d ApplicationNotFoundException.class)) {\n-        throw e;\n-      }\n       return historyClient.getApplicationReport(appId);\n     }\n     return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnException, IOException {\n    GetApplicationReportResponse response \u003d null;\n    try {\n      GetApplicationReportRequest request \u003d Records\n          .newRecord(GetApplicationReportRequest.class);\n      request.setApplicationId(appId);\n      response \u003d rmClient.getApplicationReport(request);\n    } catch (ApplicationNotFoundException e) {\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n      return historyClient.getApplicationReport(appId);\n    }\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "cbee889711eddc5c67a61df4a6531b4ab3cd205a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-321. Merging YARN-321 branch to trunk.\nsvn merge ../branches/YARN-321\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1561452 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/01/14 8:51 PM",
      "commitName": "cbee889711eddc5c67a61df4a6531b4ab3cd205a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/12/13 2:32 PM",
      "commitNameOld": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 39.26,
      "commitsBetweenForRepo": 167,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,25 @@\n   public ApplicationReport getApplicationReport(ApplicationId appId)\n       throws YarnException, IOException {\n-    GetApplicationReportRequest request \u003d\n-        Records.newRecord(GetApplicationReportRequest.class);\n-    request.setApplicationId(appId);\n-    GetApplicationReportResponse response \u003d\n-        rmClient.getApplicationReport(request);\n+    GetApplicationReportResponse response \u003d null;\n+    try {\n+      GetApplicationReportRequest request \u003d Records\n+          .newRecord(GetApplicationReportRequest.class);\n+      request.setApplicationId(appId);\n+      response \u003d rmClient.getApplicationReport(request);\n+    } catch (YarnException e) {\n+\n+      if (!historyServiceEnabled) {\n+        // Just throw it as usual if historyService is not enabled.\n+        throw e;\n+      }\n+\n+      // Even if history-service is enabled, treat all exceptions still the same\n+      // except the following\n+      if (!(e.getClass() \u003d\u003d ApplicationNotFoundException.class)) {\n+        throw e;\n+      }\n+\n+      return historyClient.getApplicationReport(appId);\n+    }\n     return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnException, IOException {\n    GetApplicationReportResponse response \u003d null;\n    try {\n      GetApplicationReportRequest request \u003d Records\n          .newRecord(GetApplicationReportRequest.class);\n      request.setApplicationId(appId);\n      response \u003d rmClient.getApplicationReport(request);\n    } catch (YarnException e) {\n\n      if (!historyServiceEnabled) {\n        // Just throw it as usual if historyService is not enabled.\n        throw e;\n      }\n\n      // Even if history-service is enabled, treat all exceptions still the same\n      // except the following\n      if (!(e.getClass() \u003d\u003d ApplicationNotFoundException.class)) {\n        throw e;\n      }\n\n      return historyClient.getApplicationReport(appId);\n    }\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {}
    },
    "7ef54faad4bee4346da082a3f8cc5d6ea405d74a": {
      "type": "Yfilerename",
      "commitMessage": "YARN-834. Fixed annotations for yarn-client module, reorganized packages and clearly differentiated *Async apis. Contributed by Arun C Murthy and Zhijie Shen.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494017 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/06/13 9:02 PM",
      "commitName": "7ef54faad4bee4346da082a3f8cc5d6ea405d74a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/06/13 8:10 PM",
      "commitNameOld": "2b14656ab5050dd75935b64681cdc25fb49db94f",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnException, IOException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/YarnClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/api/impl/YarnClientImpl.java"
      }
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "01/06/13 2:43 PM",
      "commitNameOld": "a2c42330047bf955a6a585dcddf798920d4c8640",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 2.27,
      "commitsBetweenForRepo": 31,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public ApplicationReport getApplicationReport(ApplicationId appId)\n-      throws YarnRemoteException, IOException {\n+      throws YarnException, IOException {\n     GetApplicationReportRequest request \u003d\n         Records.newRecord(GetApplicationReportRequest.class);\n     request.setApplicationId(appId);\n     GetApplicationReportResponse response \u003d\n         rmClient.getApplicationReport(request);\n     return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnException, IOException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/YarnClientImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException, IOException]",
        "newValue": "[YarnException, IOException]"
      }
    },
    "0727ecaf50481fa7a529398bc2a12ce18c9a6b43": {
      "type": "Yexceptionschange",
      "commitMessage": "YARN-631. Changed ClientRMProtocol api to throw IOException and YarnRemoteException. Contributed by Xuan Gong.\nMAPREDUCE-5212. Handling YarnRemoteException separately from IOException in MR App after YARN-631. Contributed by Xuan Gong.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1480494 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/05/13 3:53 PM",
      "commitName": "0727ecaf50481fa7a529398bc2a12ce18c9a6b43",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "22/04/13 8:06 PM",
      "commitNameOld": "a1ee2145cf4769ffb4d47f775b64e4a91f29d73f",
      "commitAuthorOld": "Bikas Saha",
      "daysBetweenCommits": 15.82,
      "commitsBetweenForRepo": 93,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n   public ApplicationReport getApplicationReport(ApplicationId appId)\n-      throws YarnRemoteException {\n+      throws YarnRemoteException, IOException {\n     GetApplicationReportRequest request \u003d\n         Records.newRecord(GetApplicationReportRequest.class);\n     request.setApplicationId(appId);\n     GetApplicationReportResponse response \u003d\n         rmClient.getApplicationReport(request);\n     return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException, IOException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/YarnClientImpl.java",
      "extendedDetails": {
        "oldValue": "[YarnRemoteException]",
        "newValue": "[YarnRemoteException, IOException]"
      }
    },
    "87c5d243db050ac9ce0c53e0905930573132221e": {
      "type": "Yfilerename",
      "commitMessage": "YARN-83. Change package of YarnClient to org.apache.hadoop. Contributed by Bikas Saha.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1381273 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/09/12 10:54 AM",
      "commitName": "87c5d243db050ac9ce0c53e0905930573132221e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/09/12 9:53 PM",
      "commitNameOld": "31142aa8927568b7901eb48d80ba04d3e0080f60",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 0.54,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/YarnClientImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/YarnClientImpl.java"
      }
    },
    "10e704c50ba1fa601329d0fee099993e8c3725a6": {
      "type": "Ymultichange(Ymovefromfile,Yreturntypechange,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/08/12 11:27 AM",
      "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
      "commitAuthor": "Siddharth Seth",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
            "oldMethodName": "getApplication",
            "newMethodName": "getApplicationReport"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {
            "oldValue": "GetNewApplicationResponse",
            "newValue": "ApplicationReport"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {
            "oldValue": "getApplication",
            "newValue": "getApplicationReport"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-29. Add a yarn-client module. (Contributed by Vinod Kumar Vavilapalli)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1377781 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "27/08/12 11:27 AM",
          "commitName": "10e704c50ba1fa601329d0fee099993e8c3725a6",
          "commitAuthor": "Siddharth Seth",
          "commitDateOld": "25/08/12 9:00 PM",
          "commitNameOld": "735046ebecd9e803398be56fbf79dbde5226b4c1",
          "commitAuthorOld": "Suresh Srinivas",
          "daysBetweenCommits": 1.6,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,6 +1,9 @@\n-  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n-    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n-    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n-    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n-    return response;\t\t\n+  public ApplicationReport getApplicationReport(ApplicationId appId)\n+      throws YarnRemoteException {\n+    GetApplicationReportRequest request \u003d\n+        Records.newRecord(GetApplicationReportRequest.class);\n+    request.setApplicationId(appId);\n+    GetApplicationReportResponse response \u003d\n+        rmClient.getApplicationReport(request);\n+    return response.getApplicationReport();\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public ApplicationReport getApplicationReport(ApplicationId appId)\n      throws YarnRemoteException {\n    GetApplicationReportRequest request \u003d\n        Records.newRecord(GetApplicationReportRequest.class);\n    request.setApplicationId(appId);\n    GetApplicationReportResponse response \u003d\n        rmClient.getApplicationReport(request);\n    return response.getApplicationReport();\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/hadoop/yarn/client/YarnClientImpl.java",
          "extendedDetails": {
            "oldValue": "[]",
            "newValue": "[appId-ApplicationId]"
          }
        }
      ]
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n    return response;\t\t\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java"
      }
    },
    "fad230a49d0d4cdbb2062b10c3dea6c755737db5": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2719. Add a simple, DistributedShell, application to illustrate alternate frameworks on YARN. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1177864 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/09/11 3:25 PM",
      "commitName": "fad230a49d0d4cdbb2062b10c3dea6c755737db5",
      "commitAuthor": "Arun Murthy",
      "diff": "@@ -0,0 +1,6 @@\n+  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n+    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n+    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n+    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n+    return response;\t\t\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private GetNewApplicationResponse getApplication() throws YarnRemoteException {\n    GetNewApplicationRequest request \u003d Records.newRecord(GetNewApplicationRequest.class);\t\t\n    GetNewApplicationResponse response \u003d applicationsManager.getNewApplication(request);\n    LOG.info(\"Got new application id\u003d\" + response.getApplicationId());\t\t\n    return response;\t\t\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-applications-distributedshell/src/main/java/org/apache/hadoop/yarn/applications/distributedshell/Client.java"
    }
  }
}