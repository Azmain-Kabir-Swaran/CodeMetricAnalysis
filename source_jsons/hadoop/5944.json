{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSDirEncryptionZoneOp.java",
  "functionName": "cancelReencryptEncryptionZone",
  "functionId": "cancelReencryptEncryptionZone___fsd-FSDirectory(modifiers-final)__iip-INodesInPath(modifiers-final)",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
  "functionStartLine": 233,
  "functionEndLine": 236,
  "numCommitsSeen": 41,
  "timeTaken": 3935,
  "changeHistory": [
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
    "1000a2af04b24c123a3b08168f36b4e90420cab7"
  ],
  "changeHistoryShort": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
    "1000a2af04b24c123a3b08168f36b4e90420cab7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ba8ff4b77db11fb68111f20fb077cffddd24f17": {
      "type": "Ymultichange(Yparameterchange,Yreturntypechange,Ybodychange)",
      "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
      "commitDate": "05/09/17 10:08 AM",
      "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
      "commitAuthor": "Xiao Chen",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,4 @@\n-  static void cancelReencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xattrs;\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      xattrs \u003d fsd.ezManager.cancelReencryptEncryptionZone(iip);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    if (xattrs !\u003d null \u0026\u0026 !xattrs.isEmpty()) {\n-      fsd.getEditLog().logSetXAttrs(zone, xattrs, logRetryCache);\n-    }\n+  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip) throws IOException {\n+    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip) throws IOException {\n    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "[fsd-FSDirectory(modifiers-final), zone-String(modifiers-final), logRetryCache-boolean(modifiers-final)]",
            "newValue": "[fsd-FSDirectory(modifiers-final), iip-INodesInPath(modifiers-final)]"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,4 @@\n-  static void cancelReencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xattrs;\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      xattrs \u003d fsd.ezManager.cancelReencryptEncryptionZone(iip);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    if (xattrs !\u003d null \u0026\u0026 !xattrs.isEmpty()) {\n-      fsd.getEditLog().logSetXAttrs(zone, xattrs, logRetryCache);\n-    }\n+  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip) throws IOException {\n+    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip) throws IOException {\n    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "List\u003cXAttr\u003e"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-12359. Re-encryption should operate with minimum KMS ACL requirements.\n",
          "commitDate": "05/09/17 10:08 AM",
          "commitName": "0ba8ff4b77db11fb68111f20fb077cffddd24f17",
          "commitAuthor": "Xiao Chen",
          "commitDateOld": "23/08/17 5:06 PM",
          "commitNameOld": "1000a2af04b24c123a3b08168f36b4e90420cab7",
          "commitAuthorOld": "Xiao Chen",
          "daysBetweenCommits": 12.71,
          "commitsBetweenForRepo": 132,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,15 +1,4 @@\n-  static void cancelReencryptEncryptionZone(final FSDirectory fsd,\n-      final String zone, final boolean logRetryCache) throws IOException {\n-    final List\u003cXAttr\u003e xattrs;\n-    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n-    fsd.writeLock();\n-    try {\n-      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n-      xattrs \u003d fsd.ezManager.cancelReencryptEncryptionZone(iip);\n-    } finally {\n-      fsd.writeUnlock();\n-    }\n-    if (xattrs !\u003d null \u0026\u0026 !xattrs.isEmpty()) {\n-      fsd.getEditLog().logSetXAttrs(zone, xattrs, logRetryCache);\n-    }\n+  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n+      final INodesInPath iip) throws IOException {\n+    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  static List\u003cXAttr\u003e cancelReencryptEncryptionZone(final FSDirectory fsd,\n      final INodesInPath iip) throws IOException {\n    return fsd.ezManager.cancelReencryptEncryptionZone(iip);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java",
          "extendedDetails": {}
        }
      ]
    },
    "1000a2af04b24c123a3b08168f36b4e90420cab7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-10899. Add functionality to re-encrypt EDEKs.\n",
      "commitDate": "23/08/17 5:06 PM",
      "commitName": "1000a2af04b24c123a3b08168f36b4e90420cab7",
      "commitAuthor": "Xiao Chen",
      "diff": "@@ -0,0 +1,15 @@\n+  static void cancelReencryptEncryptionZone(final FSDirectory fsd,\n+      final String zone, final boolean logRetryCache) throws IOException {\n+    final List\u003cXAttr\u003e xattrs;\n+    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n+    fsd.writeLock();\n+    try {\n+      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n+      xattrs \u003d fsd.ezManager.cancelReencryptEncryptionZone(iip);\n+    } finally {\n+      fsd.writeUnlock();\n+    }\n+    if (xattrs !\u003d null \u0026\u0026 !xattrs.isEmpty()) {\n+      fsd.getEditLog().logSetXAttrs(zone, xattrs, logRetryCache);\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void cancelReencryptEncryptionZone(final FSDirectory fsd,\n      final String zone, final boolean logRetryCache) throws IOException {\n    final List\u003cXAttr\u003e xattrs;\n    final FSPermissionChecker pc \u003d fsd.getPermissionChecker();\n    fsd.writeLock();\n    try {\n      final INodesInPath iip \u003d fsd.resolvePath(pc, zone, DirOp.WRITE);\n      xattrs \u003d fsd.ezManager.cancelReencryptEncryptionZone(iip);\n    } finally {\n      fsd.writeUnlock();\n    }\n    if (xattrs !\u003d null \u0026\u0026 !xattrs.isEmpty()) {\n      fsd.getEditLog().logSetXAttrs(zone, xattrs, logRetryCache);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSDirEncryptionZoneOp.java"
    }
  }
}