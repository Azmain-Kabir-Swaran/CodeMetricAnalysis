{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SingleConstraintAppPlacementAllocator.java",
  "functionName": "allocate",
  "functionId": "allocate___schedulerKey-SchedulerRequestKey__type-NodeType__node-SchedulerNode",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java",
  "functionStartLine": 333,
  "functionEndLine": 350,
  "numCommitsSeen": 17,
  "timeTaken": 2678,
  "changeHistory": [
    "38af23796971193fa529c3d08ffde8fcd6e607b6"
  ],
  "changeHistoryShort": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "38af23796971193fa529c3d08ffde8fcd6e607b6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6599. Support anti-affinity constraint via AppPlacementAllocator. (Wangda Tan via asuresh)\n",
      "commitDate": "31/01/18 1:30 AM",
      "commitName": "38af23796971193fa529c3d08ffde8fcd6e607b6",
      "commitAuthor": "Arun Suresh",
      "diff": "@@ -0,0 +1,18 @@\n+  public ContainerRequest allocate(SchedulerRequestKey schedulerKey,\n+      NodeType type, SchedulerNode node) {\n+    writeLock.lock();\n+    try {\n+      // Per container scheduling request, it is just a copy of existing\n+      // scheduling request with #allocations\u003d1\n+      SchedulingRequest containerSchedulingRequest \u003d new SchedulingRequestPBImpl(\n+          ((SchedulingRequestPBImpl) schedulingRequest).getProto());\n+      containerSchedulingRequest.getResourceSizing().setNumAllocations(1);\n+\n+      // Deduct sizing\n+      decreasePendingNumAllocation();\n+\n+      return new ContainerRequest(containerSchedulingRequest);\n+    } finally {\n+      writeLock.unlock();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public ContainerRequest allocate(SchedulerRequestKey schedulerKey,\n      NodeType type, SchedulerNode node) {\n    writeLock.lock();\n    try {\n      // Per container scheduling request, it is just a copy of existing\n      // scheduling request with #allocations\u003d1\n      SchedulingRequest containerSchedulingRequest \u003d new SchedulingRequestPBImpl(\n          ((SchedulingRequestPBImpl) schedulingRequest).getProto());\n      containerSchedulingRequest.getResourceSizing().setNumAllocations(1);\n\n      // Deduct sizing\n      decreasePendingNumAllocation();\n\n      return new ContainerRequest(containerSchedulingRequest);\n    } finally {\n      writeLock.unlock();\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/placement/SingleConstraintAppPlacementAllocator.java"
    }
  }
}