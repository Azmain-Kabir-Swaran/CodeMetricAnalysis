{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "SlowPeerTracker.java",
  "functionName": "addReport",
  "functionId": "addReport___slowNode-String__reportingNode-String",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java",
  "functionStartLine": 115,
  "functionEndLine": 127,
  "numCommitsSeen": 5,
  "timeTaken": 1758,
  "changeHistory": [
    "b57368b6f893cb27d77fc9425e116f1312f4790f"
  ],
  "changeHistoryShort": {
    "b57368b6f893cb27d77fc9425e116f1312f4790f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "b57368b6f893cb27d77fc9425e116f1312f4790f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11194. Maintain aggregated peer performance metrics on NameNode.\n",
      "commitDate": "24/01/17 4:58 PM",
      "commitName": "b57368b6f893cb27d77fc9425e116f1312f4790f",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,13 @@\n+  public void addReport(String slowNode,\n+                        String reportingNode) {\n+    ConcurrentMap\u003cString, Long\u003e nodeEntries \u003d allReports.get(slowNode);\n+\n+    if (nodeEntries \u003d\u003d null) {\n+      // putIfAbsent guards against multiple writers.\n+      allReports.putIfAbsent(slowNode, new ConcurrentHashMap\u003c\u003e());\n+      nodeEntries \u003d allReports.get(slowNode);\n+    }\n+\n+    // Replace the existing entry from this node, if any.\n+    nodeEntries.put(reportingNode, timer.monotonicNow());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void addReport(String slowNode,\n                        String reportingNode) {\n    ConcurrentMap\u003cString, Long\u003e nodeEntries \u003d allReports.get(slowNode);\n\n    if (nodeEntries \u003d\u003d null) {\n      // putIfAbsent guards against multiple writers.\n      allReports.putIfAbsent(slowNode, new ConcurrentHashMap\u003c\u003e());\n      nodeEntries \u003d allReports.get(slowNode);\n    }\n\n    // Replace the existing entry from this node, if any.\n    nodeEntries.put(reportingNode, timer.monotonicNow());\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/SlowPeerTracker.java"
    }
  }
}