{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ApplicationCLI.java",
  "functionName": "executeStatusCommand",
  "functionId": "executeStatusCommand___cliParser-CommandLine__title-String__opts-Options",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java",
  "functionStartLine": 1030,
  "functionEndLine": 1070,
  "numCommitsSeen": 72,
  "timeTaken": 1263,
  "changeHistory": [
    "206e6339469ca6d362382efbb488089ece830e98"
  ],
  "changeHistoryShort": {
    "206e6339469ca6d362382efbb488089ece830e98": "Yintroduced"
  },
  "changeHistoryDetails": {
    "206e6339469ca6d362382efbb488089ece830e98": {
      "type": "Yintroduced",
      "commitMessage": "YARN-9453. Clean up code long if-else chain in ApplicationCLI#run. Contributed by Wanqiang Ji.\n",
      "commitDate": "13/05/19 11:11 AM",
      "commitName": "206e6339469ca6d362382efbb488089ece830e98",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "diff": "@@ -0,0 +1,41 @@\n+  private int executeStatusCommand(CommandLine cliParser, String title,\n+      Options opts) throws Exception {\n+    int exitCode \u003d -1;\n+    if (hasAnyOtherCLIOptions(cliParser, opts, STATUS_CMD, APP_TYPE_CMD)) {\n+      printUsage(title, opts);\n+      return exitCode;\n+    }\n+    if (title.equalsIgnoreCase(APPLICATION) ||\n+        title.equalsIgnoreCase(APP)) {\n+      String appIdOrName \u003d cliParser.getOptionValue(STATUS_CMD);\n+      try {\n+        // try parsing appIdOrName, if it succeeds, it means it\u0027s appId\n+        ApplicationId.fromString(appIdOrName);\n+        exitCode \u003d printApplicationReport(appIdOrName);\n+      } catch (IllegalArgumentException e) {\n+        // not appId format, it could be appName.\n+        // Print app specific report, if app-type is not provided,\n+        // assume it is yarn-service type.\n+        AppAdminClient client \u003d AppAdminClient\n+            .createAppAdminClient(getSingleAppTypeFromCLI(cliParser),\n+                getConf());\n+        try {\n+          sysout.println(client.getStatusString(appIdOrName));\n+          exitCode \u003d 0;\n+        } catch (ApplicationNotFoundException exception) {\n+          System.err.println(\"Application with name \u0027\" + appIdOrName\n+              + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n+          return -1;\n+        } catch (Exception ie) {\n+          System.err.println(ie.getMessage());\n+          return -1;\n+        }\n+      }\n+    } else if (title.equalsIgnoreCase(APPLICATION_ATTEMPT)) {\n+      exitCode \u003d printApplicationAttemptReport(cliParser\n+          .getOptionValue(STATUS_CMD));\n+    } else if (title.equalsIgnoreCase(CONTAINER)) {\n+      exitCode \u003d printContainerReport(cliParser.getOptionValue(STATUS_CMD));\n+    }\n+    return exitCode;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private int executeStatusCommand(CommandLine cliParser, String title,\n      Options opts) throws Exception {\n    int exitCode \u003d -1;\n    if (hasAnyOtherCLIOptions(cliParser, opts, STATUS_CMD, APP_TYPE_CMD)) {\n      printUsage(title, opts);\n      return exitCode;\n    }\n    if (title.equalsIgnoreCase(APPLICATION) ||\n        title.equalsIgnoreCase(APP)) {\n      String appIdOrName \u003d cliParser.getOptionValue(STATUS_CMD);\n      try {\n        // try parsing appIdOrName, if it succeeds, it means it\u0027s appId\n        ApplicationId.fromString(appIdOrName);\n        exitCode \u003d printApplicationReport(appIdOrName);\n      } catch (IllegalArgumentException e) {\n        // not appId format, it could be appName.\n        // Print app specific report, if app-type is not provided,\n        // assume it is yarn-service type.\n        AppAdminClient client \u003d AppAdminClient\n            .createAppAdminClient(getSingleAppTypeFromCLI(cliParser),\n                getConf());\n        try {\n          sysout.println(client.getStatusString(appIdOrName));\n          exitCode \u003d 0;\n        } catch (ApplicationNotFoundException exception) {\n          System.err.println(\"Application with name \u0027\" + appIdOrName\n              + \"\u0027 doesn\u0027t exist in RM or Timeline Server.\");\n          return -1;\n        } catch (Exception ie) {\n          System.err.println(ie.getMessage());\n          return -1;\n        }\n      }\n    } else if (title.equalsIgnoreCase(APPLICATION_ATTEMPT)) {\n      exitCode \u003d printApplicationAttemptReport(cliParser\n          .getOptionValue(STATUS_CMD));\n    } else if (title.equalsIgnoreCase(CONTAINER)) {\n      exitCode \u003d printContainerReport(cliParser.getOptionValue(STATUS_CMD));\n    }\n    return exitCode;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-client/src/main/java/org/apache/hadoop/yarn/client/cli/ApplicationCLI.java"
    }
  }
}