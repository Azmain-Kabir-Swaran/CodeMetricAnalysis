{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "VolumeBuilder.java",
  "functionName": "build",
  "functionId": "build",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/VolumeBuilder.java",
  "functionStartLine": 86,
  "functionEndLine": 105,
  "numCommitsSeen": 1,
  "timeTaken": 751,
  "changeHistory": [
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55"
  ],
  "changeHistoryShort": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55": {
      "type": "Yintroduced",
      "commitMessage": "YARN-8902. [CSI] Add volume manager that manages CSI volume lifecycle. Contributed by Weiwei Yang.\n",
      "commitDate": "11/11/18 10:27 PM",
      "commitName": "4e7284443e6cf8dac3cd5d2581730c87ae6ffb55",
      "commitAuthor": "Sunil G",
      "diff": "@@ -0,0 +1,20 @@\n+  public Volume build() throws InvalidVolumeException {\n+    VolumeId vid \u003d new VolumeId(\n+        Optional.ofNullable(id)\n+            .orElse(UUID.randomUUID().toString()));\n+\n+    VolumeCapabilityRange volumeCap \u003d VolumeCapabilityRange.newBuilder()\n+        .minCapacity(Optional.ofNullable(min).orElse(0L))\n+        .maxCapacity(Optional.ofNullable(max).orElse(Long.MAX_VALUE))\n+        .unit(Optional.ofNullable(unit).orElse(\"Gi\"))\n+        .build();\n+\n+    VolumeMetaData meta \u003d VolumeMetaData.newBuilder()\n+        .capability(volumeCap)\n+        .driverName(Optional.ofNullable(driver).orElse(\"test-driver\"))\n+        .mountPoint(Optional.ofNullable(mount).orElse(\"/mnt/data\"))\n+        .volumeName(name)\n+        .volumeId(vid)\n+        .build();\n+    return new VolumeImpl(meta);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public Volume build() throws InvalidVolumeException {\n    VolumeId vid \u003d new VolumeId(\n        Optional.ofNullable(id)\n            .orElse(UUID.randomUUID().toString()));\n\n    VolumeCapabilityRange volumeCap \u003d VolumeCapabilityRange.newBuilder()\n        .minCapacity(Optional.ofNullable(min).orElse(0L))\n        .maxCapacity(Optional.ofNullable(max).orElse(Long.MAX_VALUE))\n        .unit(Optional.ofNullable(unit).orElse(\"Gi\"))\n        .build();\n\n    VolumeMetaData meta \u003d VolumeMetaData.newBuilder()\n        .capability(volumeCap)\n        .driverName(Optional.ofNullable(driver).orElse(\"test-driver\"))\n        .mountPoint(Optional.ofNullable(mount).orElse(\"/mnt/data\"))\n        .volumeName(name)\n        .volumeId(vid)\n        .build();\n    return new VolumeImpl(meta);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/volume/csi/VolumeBuilder.java"
    }
  }
}