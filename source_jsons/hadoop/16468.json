{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConnectionPool.java",
  "functionName": "getConnection",
  "functionId": "getConnection",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java",
  "functionStartLine": 212,
  "functionEndLine": 232,
  "numCommitsSeen": 13,
  "timeTaken": 2299,
  "changeHistory": [
    "e11d67404945d80db2eb8a99453606419dbdc938",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
    "8133cd5305d7913453abb2d48da12f672c0ce334",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7"
  ],
  "changeHistoryShort": {
    "e11d67404945d80db2eb8a99453606419dbdc938": "Ybodychange",
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": "Yfilerename",
    "8133cd5305d7913453abb2d48da12f672c0ce334": "Ybodychange",
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e11d67404945d80db2eb8a99453606419dbdc938": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13637. RBF: Router fails when threadIndex (in ConnectionPool) wraps around Integer.MIN_VALUE. Contributed by CR Hota.\n",
      "commitDate": "01/06/18 4:59 PM",
      "commitName": "e11d67404945d80db2eb8a99453606419dbdc938",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "03/04/18 12:08 AM",
      "commitNameOld": "2be64eb201134502a92f7239bef8aa780771ca0b",
      "commitAuthorOld": "Yiqun Lin",
      "daysBetweenCommits": 59.7,
      "commitsBetweenForRepo": 961,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,21 @@\n   protected ConnectionContext getConnection() {\n \n     this.lastActiveTime \u003d Time.now();\n \n     // Get a connection from the pool following round-robin\n     ConnectionContext conn \u003d null;\n     List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n     int size \u003d tmpConnections.size();\n-    int threadIndex \u003d this.clientIndex.getAndIncrement();\n+    // Inc and mask off sign bit, lookup index should be non-negative int\n+    int threadIndex \u003d this.clientIndex.getAndIncrement() \u0026 0x7FFFFFFF;\n     for (int i\u003d0; i\u003csize; i++) {\n       int index \u003d (threadIndex + i) % size;\n       conn \u003d tmpConnections.get(index);\n       if (conn !\u003d null \u0026\u0026 conn.isUsable()) {\n         return conn;\n       }\n     }\n \n     // We return a connection even if it\u0027s active\n     return conn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ConnectionContext getConnection() {\n\n    this.lastActiveTime \u003d Time.now();\n\n    // Get a connection from the pool following round-robin\n    ConnectionContext conn \u003d null;\n    List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n    int size \u003d tmpConnections.size();\n    // Inc and mask off sign bit, lookup index should be non-negative int\n    int threadIndex \u003d this.clientIndex.getAndIncrement() \u0026 0x7FFFFFFF;\n    for (int i\u003d0; i\u003csize; i++) {\n      int index \u003d (threadIndex + i) % size;\n      conn \u003d tmpConnections.get(index);\n      if (conn !\u003d null \u0026\u0026 conn.isUsable()) {\n        return conn;\n      }\n    }\n\n    // We return a connection even if it\u0027s active\n    return conn;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java",
      "extendedDetails": {}
    },
    "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-13215. RBF: Move Router to its own module. Contributed by Wei Yan\n",
      "commitDate": "19/03/18 10:13 PM",
      "commitName": "6e2b5fa493ff8e8c2bb28e6f6f4c19347bc9b99d",
      "commitAuthor": "weiy",
      "commitDateOld": "19/03/18 5:19 PM",
      "commitNameOld": "e65ff1c8be48ef4f04ed96f96ac4caef4974944d",
      "commitAuthorOld": "Inigo Goiri",
      "daysBetweenCommits": 0.2,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  protected ConnectionContext getConnection() {\n\n    this.lastActiveTime \u003d Time.now();\n\n    // Get a connection from the pool following round-robin\n    ConnectionContext conn \u003d null;\n    List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n    int size \u003d tmpConnections.size();\n    int threadIndex \u003d this.clientIndex.getAndIncrement();\n    for (int i\u003d0; i\u003csize; i++) {\n      int index \u003d (threadIndex + i) % size;\n      conn \u003d tmpConnections.get(index);\n      if (conn !\u003d null \u0026\u0026 conn.isUsable()) {\n        return conn;\n      }\n    }\n\n    // We return a connection even if it\u0027s active\n    return conn;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java"
      }
    },
    "8133cd5305d7913453abb2d48da12f672c0ce334": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13232. RBF: ConnectionPool should return first usable connection. Contributed by Ekanth S.\n",
      "commitDate": "09/03/18 6:25 PM",
      "commitName": "8133cd5305d7913453abb2d48da12f672c0ce334",
      "commitAuthor": "Inigo Goiri",
      "commitDateOld": "29/11/17 9:43 AM",
      "commitNameOld": "301641811d93ac22dc6fe1a05f18c1f266cc5e54",
      "commitAuthorOld": "Wei Yan",
      "daysBetweenCommits": 100.36,
      "commitsBetweenForRepo": 621,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   protected ConnectionContext getConnection() {\n \n     this.lastActiveTime \u003d Time.now();\n \n     // Get a connection from the pool following round-robin\n     ConnectionContext conn \u003d null;\n     List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n     int size \u003d tmpConnections.size();\n     int threadIndex \u003d this.clientIndex.getAndIncrement();\n     for (int i\u003d0; i\u003csize; i++) {\n       int index \u003d (threadIndex + i) % size;\n       conn \u003d tmpConnections.get(index);\n-      if (conn !\u003d null \u0026\u0026 !conn.isUsable()) {\n+      if (conn !\u003d null \u0026\u0026 conn.isUsable()) {\n         return conn;\n       }\n     }\n \n     // We return a connection even if it\u0027s active\n     return conn;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected ConnectionContext getConnection() {\n\n    this.lastActiveTime \u003d Time.now();\n\n    // Get a connection from the pool following round-robin\n    ConnectionContext conn \u003d null;\n    List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n    int size \u003d tmpConnections.size();\n    int threadIndex \u003d this.clientIndex.getAndIncrement();\n    for (int i\u003d0; i\u003csize; i++) {\n      int index \u003d (threadIndex + i) % size;\n      conn \u003d tmpConnections.get(index);\n      if (conn !\u003d null \u0026\u0026 conn.isUsable()) {\n        return conn;\n      }\n    }\n\n    // We return a connection even if it\u0027s active\n    return conn;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java",
      "extendedDetails": {}
    },
    "ca4f209b49e3aad6a80306f7342c9b6b560a79a7": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-11546. Federation Router RPC server. Contributed by Jason Kace and Inigo Goiri.\n\n(cherry picked from commit 8a9cdebebf26841a0f1e99fb08135f4597f2eba2)\n",
      "commitDate": "06/10/17 6:50 PM",
      "commitName": "ca4f209b49e3aad6a80306f7342c9b6b560a79a7",
      "commitAuthor": "Inigo Goiri",
      "diff": "@@ -0,0 +1,20 @@\n+  protected ConnectionContext getConnection() {\n+\n+    this.lastActiveTime \u003d Time.now();\n+\n+    // Get a connection from the pool following round-robin\n+    ConnectionContext conn \u003d null;\n+    List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n+    int size \u003d tmpConnections.size();\n+    int threadIndex \u003d this.clientIndex.getAndIncrement();\n+    for (int i\u003d0; i\u003csize; i++) {\n+      int index \u003d (threadIndex + i) % size;\n+      conn \u003d tmpConnections.get(index);\n+      if (conn !\u003d null \u0026\u0026 !conn.isUsable()) {\n+        return conn;\n+      }\n+    }\n+\n+    // We return a connection even if it\u0027s active\n+    return conn;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ConnectionContext getConnection() {\n\n    this.lastActiveTime \u003d Time.now();\n\n    // Get a connection from the pool following round-robin\n    ConnectionContext conn \u003d null;\n    List\u003cConnectionContext\u003e tmpConnections \u003d this.connections;\n    int size \u003d tmpConnections.size();\n    int threadIndex \u003d this.clientIndex.getAndIncrement();\n    for (int i\u003d0; i\u003csize; i++) {\n      int index \u003d (threadIndex + i) % size;\n      conn \u003d tmpConnections.get(index);\n      if (conn !\u003d null \u0026\u0026 !conn.isUsable()) {\n        return conn;\n      }\n    }\n\n    // We return a connection even if it\u0027s active\n    return conn;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/federation/router/ConnectionPool.java"
    }
  }
}