{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TaskAttemptImpl.java",
  "functionName": "logAttemptFinishedEvent",
  "functionId": "logAttemptFinishedEvent___state-TaskAttemptStateInternal",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
  "functionStartLine": 2113,
  "functionEndLine": 2152,
  "numCommitsSeen": 153,
  "timeTaken": 9131,
  "changeHistory": [
    "092fead5d9875fb3760206bcdd76cdafec5e9481",
    "cb78a65a152a4f576a3255df3676c3b788c84eb5",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b",
    "9db078212f5a37154925cc8872f9adaeca0ed371",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
    "7d5434c6b300bff1858787a876b20f080a8eb64a",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "092fead5d9875fb3760206bcdd76cdafec5e9481": "Ybodychange",
    "cb78a65a152a4f576a3255df3676c3b788c84eb5": "Ybodychange",
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": "Yparameterchange",
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": "Ybodychange",
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b": "Ybodychange",
    "9db078212f5a37154925cc8872f9adaeca0ed371": "Ybodychange",
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": "Ybodychange",
    "7d5434c6b300bff1858787a876b20f080a8eb64a": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "092fead5d9875fb3760206bcdd76cdafec5e9481": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5792. Adopt the id prefix for YARN, MR, and DS entities. Contributed by Varun Saxena.\n",
      "commitDate": "29/08/17 10:59 PM",
      "commitName": "092fead5d9875fb3760206bcdd76cdafec5e9481",
      "commitAuthor": "Sangjin Lee",
      "commitDateOld": "02/04/17 9:06 PM",
      "commitNameOld": "845529b3ab338e759665a687eb525fb2cccde7bf",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 149.08,
      "commitsBetweenForRepo": 858,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,40 +1,40 @@\n   private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     String containerHostName \u003d this.container \u003d\u003d null ? \"UNKNOWN\"\n          : this.container.getNodeId().getHost();\n     int containerNodePort \u003d\n         this.container \u003d\u003d null ? -1 : this.container.getNodeId().getPort();\n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n-         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n-         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n-         state.toString(),\n-         this.reportedStatus.mapFinishTime,\n-         finishTime,\n-         containerHostName,\n-         containerNodePort,\n-         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n-         this.reportedStatus.stateString,\n-         getCounters(),\n-         getProgressSplitBlock().burst());\n-         eventHandler.handle(\n-           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n+          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n+          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n+          state.toString(),\n+          this.reportedStatus.mapFinishTime,\n+          finishTime,\n+          containerHostName,\n+          containerNodePort,\n+          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n+          this.reportedStatus.stateString,\n+          getCounters(),\n+          getProgressSplitBlock().burst(), launchTime);\n+      eventHandler.handle(\n+          new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n-       ReduceAttemptFinishedEvent rfe \u003d\n-         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n-         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n-         state.toString(),\n-         this.reportedStatus.shuffleFinishTime,\n-         this.reportedStatus.sortFinishTime,\n-         finishTime,\n-         containerHostName,\n-         containerNodePort,\n-         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n-         this.reportedStatus.stateString,\n-         getCounters(),\n-         getProgressSplitBlock().burst());\n-         eventHandler.handle(\n-           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n+      ReduceAttemptFinishedEvent rfe \u003d\n+          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n+          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n+          state.toString(),\n+          this.reportedStatus.shuffleFinishTime,\n+          this.reportedStatus.sortFinishTime,\n+          finishTime,\n+          containerHostName,\n+          containerNodePort,\n+          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n+          this.reportedStatus.stateString,\n+          getCounters(),\n+          getProgressSplitBlock().burst(), launchTime);\n+      eventHandler.handle(\n+          new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    String containerHostName \u003d this.container \u003d\u003d null ? \"UNKNOWN\"\n         : this.container.getNodeId().getHost();\n    int containerNodePort \u003d\n        this.container \u003d\u003d null ? -1 : this.container.getNodeId().getPort();\n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime,\n          containerHostName,\n          containerNodePort,\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst(), launchTime);\n      eventHandler.handle(\n          new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n      ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n          finishTime,\n          containerHostName,\n          containerNodePort,\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst(), launchTime);\n      eventHandler.handle(\n          new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "cb78a65a152a4f576a3255df3676c3b788c84eb5": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-5152. Make MR App to simply pass through the container from RM instead of extracting and populating information itself to start any container. Contributed by Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1469544 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/04/13 1:13 PM",
      "commitName": "cb78a65a152a4f576a3255df3676c3b788c84eb5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "11/04/13 12:28 PM",
      "commitNameOld": "e4c55e17fea55e2fcbef182bb2b0c4b22686f38c",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 7.03,
      "commitsBetweenForRepo": 35,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,40 @@\n   private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n+    String containerHostName \u003d this.container \u003d\u003d null ? \"UNKNOWN\"\n+         : this.container.getNodeId().getHost();\n+    int containerNodePort \u003d\n+        this.container \u003d\u003d null ? -1 : this.container.getNodeId().getPort();\n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime,\n-         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n-             : this.containerNodeId.getHost(),\n-         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n+         containerHostName,\n+         containerNodePort,\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n          finishTime,\n-         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n-             : this.containerNodeId.getHost(),\n-         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n+         containerHostName,\n+         containerNodePort,\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    String containerHostName \u003d this.container \u003d\u003d null ? \"UNKNOWN\"\n         : this.container.getNodeId().getHost();\n    int containerNodePort \u003d\n        this.container \u003d\u003d null ? -1 : this.container.getNodeId().getPort();\n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime,\n         containerHostName,\n         containerNodePort,\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime,\n         containerHostName,\n         containerNodePort,\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "022f7b4a25c73b8c43985e8d1bac717b96373ac6": {
      "type": "Yparameterchange",
      "commitMessage": "MAPREDUCE-4596. Split StateMachine state from states seen by MRClientProtocol for Job, Task and TaskAttempt. Contributed by Siddarth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1399976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/12 10:57 PM",
      "commitName": "022f7b4a25c73b8c43985e8d1bac717b96373ac6",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "08/10/12 1:50 PM",
      "commitNameOld": "49b20c2ed1be55c90a057acea71b55a28a3f69fb",
      "commitAuthorOld": "Robert Joseph Evans",
      "daysBetweenCommits": 10.38,
      "commitsBetweenForRepo": 75,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n-  private void logAttemptFinishedEvent(TaskAttemptState state) {\n+  private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n              : this.containerNodeId.getHost(),\n          this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n              : this.containerNodeId.getHost(),\n          this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptStateInternal state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {
        "oldValue": "[state-TaskAttemptState]",
        "newValue": "[state-TaskAttemptStateInternal]"
      }
    },
    "e8645636ce1721aa6dc3674fbc553a7bb3522fbe": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3511. Removed a multitude of cloned/duplicate counters in the AM thereby reducing the AM heap size and preventing full GCs. (vinodkv)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1229347 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/01/12 1:04 PM",
      "commitName": "e8645636ce1721aa6dc3674fbc553a7bb3522fbe",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "04/01/12 9:19 PM",
      "commitNameOld": "03d46dc571bc5b0f1b3c0cb5daa52e7ee324dd54",
      "commitAuthorOld": "Siddharth Seth",
      "daysBetweenCommits": 4.66,
      "commitsBetweenForRepo": 18,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n   private void logAttemptFinishedEvent(TaskAttemptState state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n              : this.containerNodeId.getHost(),\n          this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n-         TypeConverter.fromYarn(getCounters()),\n+         getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n              : this.containerNodeId.getHost(),\n          this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n-         TypeConverter.fromYarn(getCounters()),\n+         getCounters(),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         getCounters(),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "94bf0dacbaa54ead5af98b6d62ae1713c579a16b": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3450. NM port info no longer available in JobHistory. (Siddharth Seth via mahadev)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1208327 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 12:43 AM",
      "commitName": "94bf0dacbaa54ead5af98b6d62ae1713c579a16b",
      "commitAuthor": "Mahadev Konar",
      "commitDateOld": "31/10/11 10:27 AM",
      "commitNameOld": "9db078212f5a37154925cc8872f9adaeca0ed371",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 29.64,
      "commitsBetweenForRepo": 165,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,36 +1,38 @@\n   private void logAttemptFinishedEvent(TaskAttemptState state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n              : this.containerNodeId.getHost(),\n+         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n          finishTime,\n          this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n-                                         : this.containerNodeId.getHost(),\n+             : this.containerNodeId.getHost(),\n+         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n          this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.containerNodeId \u003d\u003d null ? -1 : this.containerNodeId.getPort(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "9db078212f5a37154925cc8872f9adaeca0ed371": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3035. Fixed MR JobHistory to ensure rack information is present. Contributed by chakravarthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1195575 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "31/10/11 10:27 AM",
      "commitName": "9db078212f5a37154925cc8872f9adaeca0ed371",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "30/10/11 11:42 PM",
      "commitNameOld": "47a381e306877750b5a3ce5d76e0a5ff652ec188",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 0.45,
      "commitsBetweenForRepo": 4,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,32 +1,36 @@\n   private void logAttemptFinishedEvent(TaskAttemptState state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n-         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n-             : this.containerMgrAddress,\n+         finishTime,\n+         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n+             : this.containerNodeId.getHost(),\n+         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n-         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n-             : this.containerMgrAddress,\n+         finishTime,\n+         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n+                                         : this.containerNodeId.getHost(),\n+         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n             : this.containerNodeId.getHost(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime,\n         this.containerNodeId \u003d\u003d null ? \"UNKNOWN\"\n                                         : this.containerNodeId.getHost(),\n         this.nodeRackName \u003d\u003d null ? \"UNKNOWN\" : this.nodeRackName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "13e4562924a6cb3d16c262e0f595b2ffbf9e0546": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3144. Augmented JobHistory with the information needed for serving aggregated logs. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1185976 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/10/11 10:21 PM",
      "commitName": "13e4562924a6cb3d16c262e0f595b2ffbf9e0546",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "17/10/11 6:22 PM",
      "commitNameOld": "c1d90772b6e38bb4e4be7ed75cb5d34f3048ad7b",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 1.17,
      "commitsBetweenForRepo": 9,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,32 @@\n   private void logAttemptFinishedEvent(TaskAttemptState state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n-         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n+         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n+             : this.containerMgrAddress,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n-         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n+         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n+             : this.containerMgrAddress,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n             : this.containerMgrAddress,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" \n             : this.containerMgrAddress,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "7d5434c6b300bff1858787a876b20f080a8eb64a": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-3020. Fixed TaskAttemptImpl to log the correct node-address for a finished Reduce task. Contributed by Chackaravarthy.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1181793 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "11/10/11 7:09 AM",
      "commitName": "7d5434c6b300bff1858787a876b20f080a8eb64a",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "21/09/11 11:28 AM",
      "commitNameOld": "d00b3c49f6fb3f6a617add6203c6b55f6c345940",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 19.82,
      "commitsBetweenForRepo": 141,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,30 +1,30 @@\n   private void logAttemptFinishedEvent(TaskAttemptState state) {\n     //Log finished events only if an attempt started.\n     if (getLaunchTime() \u003d\u003d 0) return; \n     if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n       MapAttemptFinishedEvent mfe \u003d\n          new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.mapFinishTime,\n          finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n     } else {\n        ReduceAttemptFinishedEvent rfe \u003d\n          new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n          TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n          state.toString(),\n          this.reportedStatus.shuffleFinishTime,\n          this.reportedStatus.sortFinishTime,\n-         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" : this.containerMgrAddress,\n+         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n          this.reportedStatus.stateString,\n          TypeConverter.fromYarn(getCounters()),\n          getProgressSplitBlock().burst());\n          eventHandler.handle(\n            new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" : this.containerMgrAddress,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,30 @@\n+  private void logAttemptFinishedEvent(TaskAttemptState state) {\n+    //Log finished events only if an attempt started.\n+    if (getLaunchTime() \u003d\u003d 0) return; \n+    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n+      MapAttemptFinishedEvent mfe \u003d\n+         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n+         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n+         state.toString(),\n+         this.reportedStatus.mapFinishTime,\n+         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n+         this.reportedStatus.stateString,\n+         TypeConverter.fromYarn(getCounters()),\n+         getProgressSplitBlock().burst());\n+         eventHandler.handle(\n+           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n+    } else {\n+       ReduceAttemptFinishedEvent rfe \u003d\n+         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n+         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n+         state.toString(),\n+         this.reportedStatus.shuffleFinishTime,\n+         this.reportedStatus.sortFinishTime,\n+         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" : this.containerMgrAddress,\n+         this.reportedStatus.stateString,\n+         TypeConverter.fromYarn(getCounters()),\n+         getProgressSplitBlock().burst());\n+         eventHandler.handle(\n+           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void logAttemptFinishedEvent(TaskAttemptState state) {\n    //Log finished events only if an attempt started.\n    if (getLaunchTime() \u003d\u003d 0) return; \n    if (attemptId.getTaskId().getTaskType() \u003d\u003d TaskType.MAP) {\n      MapAttemptFinishedEvent mfe \u003d\n         new MapAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.mapFinishTime,\n         finishTime, this.nodeHostName \u003d\u003d null ? \"UNKNOWN\" : this.nodeHostName,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), mfe));\n    } else {\n       ReduceAttemptFinishedEvent rfe \u003d\n         new ReduceAttemptFinishedEvent(TypeConverter.fromYarn(attemptId),\n         TypeConverter.fromYarn(attemptId.getTaskId().getTaskType()),\n         state.toString(),\n         this.reportedStatus.shuffleFinishTime,\n         this.reportedStatus.sortFinishTime,\n         finishTime, this.containerMgrAddress \u003d\u003d null ? \"UNKNOWN\" : this.containerMgrAddress,\n         this.reportedStatus.stateString,\n         TypeConverter.fromYarn(getCounters()),\n         getProgressSplitBlock().burst());\n         eventHandler.handle(\n           new JobHistoryEvent(attemptId.getTaskId().getJobId(), rfe));\n    }\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/job/impl/TaskAttemptImpl.java"
    }
  }
}