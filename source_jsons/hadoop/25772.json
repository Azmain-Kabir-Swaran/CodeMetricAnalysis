{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMContainerRequestor.java",
  "functionName": "addResourceRequest",
  "functionId": "addResourceRequest___priority-Priority__resourceName-String__capability-Resource__nodeLabelExpression-String__executionType-ExecutionType",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
  "functionStartLine": 442,
  "functionEndLine": 481,
  "numCommitsSeen": 38,
  "timeTaken": 1121,
  "changeHistory": [
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3",
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f"
  ],
  "changeHistoryShort": {
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3": "Ybodychange",
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "dc26601d8fe27a4223a50601bf7522cc42e8e2f3": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5180. Allow ResourceRequest to specify an enforceExecutionType flag. (asuresh)\n",
      "commitDate": "02/06/16 9:01 AM",
      "commitName": "dc26601d8fe27a4223a50601bf7522cc42e8e2f3",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "24/05/16 7:47 PM",
      "commitNameOld": "ae353ea96993ec664090c5d84f6675c29d9f0f5f",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 8.55,
      "commitsBetweenForRepo": 54,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,39 +1,40 @@\n   private void addResourceRequest(Priority priority, String resourceName,\n       Resource capability, String nodeLabelExpression,\n       ExecutionType executionType) {\n     Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n       this.remoteRequestsTable.get(priority);\n     if (remoteRequests \u003d\u003d null) {\n       remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n       this.remoteRequestsTable.put(priority, remoteRequests);\n       if (LOG.isDebugEnabled()) {\n         LOG.debug(\"Added priority\u003d\" + priority);\n       }\n     }\n     Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n     if (reqMap \u003d\u003d null) {\n       reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n       remoteRequests.put(resourceName, reqMap);\n     }\n     ResourceRequest remoteRequest \u003d reqMap.get(capability);\n     if (remoteRequest \u003d\u003d null) {\n       remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n       remoteRequest.setPriority(priority);\n       remoteRequest.setResourceName(resourceName);\n       remoteRequest.setCapability(capability);\n       remoteRequest.setNumContainers(0);\n       remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n-      remoteRequest.setExecutionType(executionType);\n+      remoteRequest.setExecutionTypeRequest(\n+          ExecutionTypeRequest.newInstance(executionType, true));\n       reqMap.put(capability, remoteRequest);\n     }\n     remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n \n     // Note this down for next interaction with ResourceManager\n     addResourceRequestToAsk(remoteRequest);\n     if (LOG.isDebugEnabled()) {\n       LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n           + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n           + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n           + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability, String nodeLabelExpression,\n      ExecutionType executionType) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setResourceName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n      remoteRequest.setExecutionTypeRequest(\n          ExecutionTypeRequest.newInstance(executionType, true));\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java",
      "extendedDetails": {}
    },
    "ae353ea96993ec664090c5d84f6675c29d9f0f5f": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-6703. Add flag to allow MapReduce AM to request for OPPORTUNISTIC containers. Contributed by Arun Suresh\n",
      "commitDate": "24/05/16 7:47 PM",
      "commitName": "ae353ea96993ec664090c5d84f6675c29d9f0f5f",
      "commitAuthor": "Jian He",
      "diff": "@@ -0,0 +1,39 @@\n+  private void addResourceRequest(Priority priority, String resourceName,\n+      Resource capability, String nodeLabelExpression,\n+      ExecutionType executionType) {\n+    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n+      this.remoteRequestsTable.get(priority);\n+    if (remoteRequests \u003d\u003d null) {\n+      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n+      this.remoteRequestsTable.put(priority, remoteRequests);\n+      if (LOG.isDebugEnabled()) {\n+        LOG.debug(\"Added priority\u003d\" + priority);\n+      }\n+    }\n+    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n+    if (reqMap \u003d\u003d null) {\n+      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n+      remoteRequests.put(resourceName, reqMap);\n+    }\n+    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n+    if (remoteRequest \u003d\u003d null) {\n+      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n+      remoteRequest.setPriority(priority);\n+      remoteRequest.setResourceName(resourceName);\n+      remoteRequest.setCapability(capability);\n+      remoteRequest.setNumContainers(0);\n+      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n+      remoteRequest.setExecutionType(executionType);\n+      reqMap.put(capability, remoteRequest);\n+    }\n+    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n+\n+    // Note this down for next interaction with ResourceManager\n+    addResourceRequestToAsk(remoteRequest);\n+    if (LOG.isDebugEnabled()) {\n+      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n+          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n+          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n+          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void addResourceRequest(Priority priority, String resourceName,\n      Resource capability, String nodeLabelExpression,\n      ExecutionType executionType) {\n    Map\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e remoteRequests \u003d\n      this.remoteRequestsTable.get(priority);\n    if (remoteRequests \u003d\u003d null) {\n      remoteRequests \u003d new HashMap\u003cString, Map\u003cResource, ResourceRequest\u003e\u003e();\n      this.remoteRequestsTable.put(priority, remoteRequests);\n      if (LOG.isDebugEnabled()) {\n        LOG.debug(\"Added priority\u003d\" + priority);\n      }\n    }\n    Map\u003cResource, ResourceRequest\u003e reqMap \u003d remoteRequests.get(resourceName);\n    if (reqMap \u003d\u003d null) {\n      reqMap \u003d new HashMap\u003cResource, ResourceRequest\u003e();\n      remoteRequests.put(resourceName, reqMap);\n    }\n    ResourceRequest remoteRequest \u003d reqMap.get(capability);\n    if (remoteRequest \u003d\u003d null) {\n      remoteRequest \u003d recordFactory.newRecordInstance(ResourceRequest.class);\n      remoteRequest.setPriority(priority);\n      remoteRequest.setResourceName(resourceName);\n      remoteRequest.setCapability(capability);\n      remoteRequest.setNumContainers(0);\n      remoteRequest.setNodeLabelExpression(nodeLabelExpression);\n      remoteRequest.setExecutionType(executionType);\n      reqMap.put(capability, remoteRequest);\n    }\n    remoteRequest.setNumContainers(remoteRequest.getNumContainers() + 1);\n\n    // Note this down for next interaction with ResourceManager\n    addResourceRequestToAsk(remoteRequest);\n    if (LOG.isDebugEnabled()) {\n      LOG.debug(\"addResourceRequest:\" + \" applicationId\u003d\"\n          + applicationId.getId() + \" priority\u003d\" + priority.getPriority()\n          + \" resourceName\u003d\" + resourceName + \" numContainers\u003d\"\n          + remoteRequest.getNumContainers() + \" #asks\u003d\" + ask.size());\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/rm/RMContainerRequestor.java"
    }
  }
}