{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FairCallQueue.java",
  "functionName": "getMetrics",
  "functionId": "getMetrics___collector-MetricsCollector__all-boolean",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java",
  "functionStartLine": 449,
  "functionEndLine": 463,
  "numCommitsSeen": 14,
  "timeTaken": 817,
  "changeHistory": [
    "bf08f4abae43d706a305af3f14e00f01c00dba7c"
  ],
  "changeHistoryShort": {
    "bf08f4abae43d706a305af3f14e00f01c00dba7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "bf08f4abae43d706a305af3f14e00f01c00dba7c": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-15481. Emit FairCallQueue stats as metrics. Contributed by Christopher Gregorian.\n",
      "commitDate": "11/01/19 2:01 PM",
      "commitName": "bf08f4abae43d706a305af3f14e00f01c00dba7c",
      "commitAuthor": "Chen Liang",
      "diff": "@@ -0,0 +1,15 @@\n+    public void getMetrics(MetricsCollector collector, boolean all) {\n+      MetricsRecordBuilder rb \u003d collector.addRecord(\"FairCallQueue\")\n+          .setContext(\"rpc\")\n+          .tag(Interns.info(\"namespace\", \"Namespace\"), namespace);\n+\n+      final int[] currentQueueSizes \u003d getQueueSizes();\n+      final long[] currentOverflowedCalls \u003d getOverflowedCalls();\n+\n+      for (int i \u003d 0; i \u003c currentQueueSizes.length; i++) {\n+        rb.addGauge(Interns.info(\"FairCallQueueSize_p\" + i, \"FCQ Queue Size\"),\n+            currentQueueSizes[i]);\n+        rb.addCounter(Interns.info(\"FairCallQueueOverflowedCalls_p\" + i,\n+            \"FCQ Overflowed Calls\"), currentOverflowedCalls[i]);\n+      }\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public void getMetrics(MetricsCollector collector, boolean all) {\n      MetricsRecordBuilder rb \u003d collector.addRecord(\"FairCallQueue\")\n          .setContext(\"rpc\")\n          .tag(Interns.info(\"namespace\", \"Namespace\"), namespace);\n\n      final int[] currentQueueSizes \u003d getQueueSizes();\n      final long[] currentOverflowedCalls \u003d getOverflowedCalls();\n\n      for (int i \u003d 0; i \u003c currentQueueSizes.length; i++) {\n        rb.addGauge(Interns.info(\"FairCallQueueSize_p\" + i, \"FCQ Queue Size\"),\n            currentQueueSizes[i]);\n        rb.addCounter(Interns.info(\"FairCallQueueOverflowedCalls_p\" + i,\n            \"FCQ Overflowed Calls\"), currentOverflowedCalls[i]);\n      }\n    }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/FairCallQueue.java"
    }
  }
}