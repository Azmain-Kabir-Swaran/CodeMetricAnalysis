{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ComponentInstance.java",
  "functionName": "destroy",
  "functionId": "destroy",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
  "functionStartLine": 970,
  "functionEndLine": 1003,
  "numCommitsSeen": 35,
  "timeTaken": 3925,
  "changeHistory": [
    "a33ef4fd311784dc15401eb54c82e78528c4f961",
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
    "4a7369b09547a78f532af66c763c6994a38b5d68",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
    "40ab068eabe50875449d601471619a4e82fff86d",
    "1888318c89776f0bf354c1b13e3ee169e14ff638"
  ],
  "changeHistoryShort": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": "Ybodychange",
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": "Ybodychange",
    "4a7369b09547a78f532af66c763c6994a38b5d68": "Ybodychange",
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": "Ybodychange",
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": "Ybodychange",
    "40ab068eabe50875449d601471619a4e82fff86d": "Yfilerename",
    "1888318c89776f0bf354c1b13e3ee169e14ff638": "Yintroduced"
  },
  "changeHistoryDetails": {
    "a33ef4fd311784dc15401eb54c82e78528c4f961": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8867. Added resource localization status to YARN service status call.\n           Contributed by Chandni Singh\n",
      "commitDate": "24/01/19 3:43 PM",
      "commitName": "a33ef4fd311784dc15401eb54c82e78528c4f961",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "18/01/19 5:23 PM",
      "commitNameOld": "824dfa3b099a09f18db6b0a3285eb4379ab72c2d",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 5.93,
      "commitsBetweenForRepo": 32,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,34 @@\n   public void destroy() {\n     LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n     diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n \n     // update metrics\n     if (getState() \u003d\u003d STARTED) {\n       component.decRunningContainers();\n     }\n     if (getState() \u003d\u003d READY) {\n       component.decContainersReady(true);\n       component.decRunningContainers();\n     }\n     getCompSpec().removeContainer(containerSpec);\n \n     if (container \u003d\u003d null) {\n       LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n           \"destroying\");\n       return;\n     }\n \n     ContainerId containerId \u003d container.getId();\n     scheduler.removeLiveCompInstance(containerId);\n     component.getScheduler().getAmRMClient()\n         .releaseAssignedContainer(containerId);\n \n     if (timelineServiceEnabled) {\n       serviceTimelinePublisher.componentInstanceFinished(containerId,\n           KILLED_BY_APPMASTER, ContainerState.STOPPED, diagnostics.toString());\n     }\n     cancelContainerStatusRetriever();\n     scheduler.executorService.submit(() -\u003e\n         cleanupRegistryAndCompHdfsDir(containerId));\n+    cancelLclRetriever();\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n\n    // update metrics\n    if (getState() \u003d\u003d STARTED) {\n      component.decRunningContainers();\n    }\n    if (getState() \u003d\u003d READY) {\n      component.decContainersReady(true);\n      component.decRunningContainers();\n    }\n    getCompSpec().removeContainer(containerSpec);\n\n    if (container \u003d\u003d null) {\n      LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n          \"destroying\");\n      return;\n    }\n\n    ContainerId containerId \u003d container.getId();\n    scheduler.removeLiveCompInstance(containerId);\n    component.getScheduler().getAmRMClient()\n        .releaseAssignedContainer(containerId);\n\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher.componentInstanceFinished(containerId,\n          KILLED_BY_APPMASTER, ContainerState.STOPPED, diagnostics.toString());\n    }\n    cancelContainerStatusRetriever();\n    scheduler.executorService.submit(() -\u003e\n        cleanupRegistryAndCompHdfsDir(containerId));\n    cancelLclRetriever();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "fd089caf69cf608a91564c9c3d20cbf84e7fd60c": {
      "type": "Ybodychange",
      "commitMessage": "YARN-8488.  Added SUCCEEDED/FAILED states to YARN service.\n            Contributed by Suma Shivaprasad\n",
      "commitDate": "28/08/18 10:55 AM",
      "commitName": "fd089caf69cf608a91564c9c3d20cbf84e7fd60c",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "21/08/18 4:49 PM",
      "commitNameOld": "e557c6bd8de2811a561210f672f47b4d07a9d5c6",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 6.75,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void destroy() {\n     LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n     diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n \n     // update metrics\n     if (getState() \u003d\u003d STARTED) {\n       component.decRunningContainers();\n     }\n     if (getState() \u003d\u003d READY) {\n       component.decContainersReady(true);\n       component.decRunningContainers();\n     }\n     getCompSpec().removeContainer(containerSpec);\n \n     if (container \u003d\u003d null) {\n       LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n           \"destroying\");\n       return;\n     }\n \n     ContainerId containerId \u003d container.getId();\n     scheduler.removeLiveCompInstance(containerId);\n     component.getScheduler().getAmRMClient()\n         .releaseAssignedContainer(containerId);\n \n     if (timelineServiceEnabled) {\n       serviceTimelinePublisher.componentInstanceFinished(containerId,\n-          KILLED_BY_APPMASTER, diagnostics.toString());\n+          KILLED_BY_APPMASTER, ContainerState.STOPPED, diagnostics.toString());\n     }\n     cancelContainerStatusRetriever();\n     scheduler.executorService.submit(() -\u003e\n         cleanupRegistryAndCompHdfsDir(containerId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n\n    // update metrics\n    if (getState() \u003d\u003d STARTED) {\n      component.decRunningContainers();\n    }\n    if (getState() \u003d\u003d READY) {\n      component.decContainersReady(true);\n      component.decRunningContainers();\n    }\n    getCompSpec().removeContainer(containerSpec);\n\n    if (container \u003d\u003d null) {\n      LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n          \"destroying\");\n      return;\n    }\n\n    ContainerId containerId \u003d container.getId();\n    scheduler.removeLiveCompInstance(containerId);\n    component.getScheduler().getAmRMClient()\n        .releaseAssignedContainer(containerId);\n\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher.componentInstanceFinished(containerId,\n          KILLED_BY_APPMASTER, ContainerState.STOPPED, diagnostics.toString());\n    }\n    cancelContainerStatusRetriever();\n    scheduler.executorService.submit(() -\u003e\n        cleanupRegistryAndCompHdfsDir(containerId));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "4a7369b09547a78f532af66c763c6994a38b5d68": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7939.  Added support to upgrade a component instance.\n            Contributed by Chandni Singh\n",
      "commitDate": "26/04/18 1:54 PM",
      "commitName": "4a7369b09547a78f532af66c763c6994a38b5d68",
      "commitAuthor": "Eric Yang",
      "commitDateOld": "16/04/18 11:24 AM",
      "commitNameOld": "2d0662cfd57bd438421f912dc172e79a15835442",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 10.1,
      "commitsBetweenForRepo": 579,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,33 +1,33 @@\n   public void destroy() {\n     LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n     diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n \n     // update metrics\n     if (getState() \u003d\u003d STARTED) {\n       component.decRunningContainers();\n     }\n     if (getState() \u003d\u003d READY) {\n-      component.decContainersReady();\n+      component.decContainersReady(true);\n       component.decRunningContainers();\n     }\n     getCompSpec().removeContainer(containerSpec);\n \n     if (container \u003d\u003d null) {\n       LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n           \"destroying\");\n       return;\n     }\n \n     ContainerId containerId \u003d container.getId();\n     scheduler.removeLiveCompInstance(containerId);\n     component.getScheduler().getAmRMClient()\n         .releaseAssignedContainer(containerId);\n \n     if (timelineServiceEnabled) {\n       serviceTimelinePublisher.componentInstanceFinished(containerId,\n           KILLED_BY_APPMASTER, diagnostics.toString());\n     }\n     cancelContainerStatusRetriever();\n     scheduler.executorService.submit(() -\u003e\n         cleanupRegistryAndCompHdfsDir(containerId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n\n    // update metrics\n    if (getState() \u003d\u003d STARTED) {\n      component.decRunningContainers();\n    }\n    if (getState() \u003d\u003d READY) {\n      component.decContainersReady(true);\n      component.decRunningContainers();\n    }\n    getCompSpec().removeContainer(containerSpec);\n\n    if (container \u003d\u003d null) {\n      LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n          \"destroying\");\n      return;\n    }\n\n    ContainerId containerId \u003d container.getId();\n    scheduler.removeLiveCompInstance(containerId);\n    component.getScheduler().getAmRMClient()\n        .releaseAssignedContainer(containerId);\n\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher.componentInstanceFinished(containerId,\n          KILLED_BY_APPMASTER, diagnostics.toString());\n    }\n    cancelContainerStatusRetriever();\n    scheduler.executorService.submit(() -\u003e\n        cleanupRegistryAndCompHdfsDir(containerId));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "f4d5d20286eb05449f6fd7cd6ff0554228205fe2": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7486. Race condition in service AM that can cause NPE. Contributed by Jian He\n",
      "commitDate": "16/11/17 7:58 AM",
      "commitName": "f4d5d20286eb05449f6fd7cd6ff0554228205fe2",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "a127f7b0fbde3942ca4329d5463bb8fe421daf7b",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 9.77,
      "commitsBetweenForRepo": 61,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,33 @@\n   public void destroy() {\n     LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n     diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n-    if (container !\u003d null) {\n-      scheduler.removeLiveCompInstance(container.getId());\n-      component.getScheduler().getAmRMClient()\n-          .releaseAssignedContainer(container.getId());\n-      getCompSpec().removeContainer(containerSpec);\n-    }\n+\n     // update metrics\n     if (getState() \u003d\u003d STARTED) {\n       component.decRunningContainers();\n     }\n     if (getState() \u003d\u003d READY) {\n       component.decContainersReady();\n       component.decRunningContainers();\n     }\n+    getCompSpec().removeContainer(containerSpec);\n+\n+    if (container \u003d\u003d null) {\n+      LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n+          \"destroying\");\n+      return;\n+    }\n+\n+    ContainerId containerId \u003d container.getId();\n+    scheduler.removeLiveCompInstance(containerId);\n+    component.getScheduler().getAmRMClient()\n+        .releaseAssignedContainer(containerId);\n \n     if (timelineServiceEnabled) {\n-      serviceTimelinePublisher.componentInstanceFinished(this,\n+      serviceTimelinePublisher.componentInstanceFinished(containerId,\n           KILLED_BY_APPMASTER, diagnostics.toString());\n     }\n-    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n+    cancelContainerStatusRetriever();\n+    scheduler.executorService.submit(() -\u003e\n+        cleanupRegistryAndCompHdfsDir(containerId));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n\n    // update metrics\n    if (getState() \u003d\u003d STARTED) {\n      component.decRunningContainers();\n    }\n    if (getState() \u003d\u003d READY) {\n      component.decContainersReady();\n      component.decRunningContainers();\n    }\n    getCompSpec().removeContainer(containerSpec);\n\n    if (container \u003d\u003d null) {\n      LOG.info(getCompInstanceId() + \" no container is assigned when \" +\n          \"destroying\");\n      return;\n    }\n\n    ContainerId containerId \u003d container.getId();\n    scheduler.removeLiveCompInstance(containerId);\n    component.getScheduler().getAmRMClient()\n        .releaseAssignedContainer(containerId);\n\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher.componentInstanceFinished(containerId,\n          KILLED_BY_APPMASTER, diagnostics.toString());\n    }\n    cancelContainerStatusRetriever();\n    scheduler.executorService.submit(() -\u003e\n        cleanupRegistryAndCompHdfsDir(containerId));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6394. Support specifying YARN related params in the service REST API. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "a6c4bd74b636d0715ffb4c1aca9ef4e49201aa02",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "68acd88dcbfe03a0134c60b5398dfaa31ad2b786",
      "commitAuthorOld": "Billie Rinaldi",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 6,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,24 @@\n   public void destroy() {\n     LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n     diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n     if (container !\u003d null) {\n       scheduler.removeLiveCompInstance(container.getId());\n       component.getScheduler().getAmRMClient()\n           .releaseAssignedContainer(container.getId());\n       getCompSpec().removeContainer(containerSpec);\n     }\n+    // update metrics\n+    if (getState() \u003d\u003d STARTED) {\n+      component.decRunningContainers();\n+    }\n+    if (getState() \u003d\u003d READY) {\n+      component.decContainersReady();\n+      component.decRunningContainers();\n+    }\n+\n     if (timelineServiceEnabled) {\n-      serviceTimelinePublisher\n-          .componentInstanceFinished(this, KILLED_BY_APPMASTER, COMPLETE,\n-              diagnostics.toString());\n+      serviceTimelinePublisher.componentInstanceFinished(this,\n+          KILLED_BY_APPMASTER, diagnostics.toString());\n     }\n     scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n    if (container !\u003d null) {\n      scheduler.removeLiveCompInstance(container.getId());\n      component.getScheduler().getAmRMClient()\n          .releaseAssignedContainer(container.getId());\n      getCompSpec().removeContainer(containerSpec);\n    }\n    // update metrics\n    if (getState() \u003d\u003d STARTED) {\n      component.decRunningContainers();\n    }\n    if (getState() \u003d\u003d READY) {\n      component.decContainersReady();\n      component.decRunningContainers();\n    }\n\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher.componentInstanceFinished(this,\n          KILLED_BY_APPMASTER, diagnostics.toString());\n    }\n    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {}
    },
    "40ab068eabe50875449d601471619a4e82fff86d": {
      "type": "Yfilerename",
      "commitMessage": "YARN-7091. Rename application to service in yarn-native-services. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "40ab068eabe50875449d601471619a4e82fff86d",
      "commitAuthor": "Billie Rinaldi",
      "commitDateOld": "06/11/17 1:30 PM",
      "commitNameOld": "2ba38ce8ecb1cf3836fab48cdb2c5ae7e1b5427d",
      "commitAuthorOld": "Gour Saha",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n    if (container !\u003d null) {\n      scheduler.removeLiveCompInstance(container.getId());\n      component.getScheduler().getAmRMClient()\n          .releaseAssignedContainer(container.getId());\n      getCompSpec().removeContainer(containerSpec);\n    }\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher\n          .componentInstanceFinished(this, KILLED_BY_APPMASTER, COMPLETE,\n              diagnostics.toString());\n    }\n    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-services/hadoop-yarn-services-core/src/main/java/org/apache/hadoop/yarn/service/component/instance/ComponentInstance.java"
      }
    },
    "1888318c89776f0bf354c1b13e3ee169e14ff638": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6903. Yarn-native-service framework core rewrite. Contributed by Jian He\n",
      "commitDate": "06/11/17 1:30 PM",
      "commitName": "1888318c89776f0bf354c1b13e3ee169e14ff638",
      "commitAuthor": "Billie Rinaldi",
      "diff": "@@ -0,0 +1,16 @@\n+  public void destroy() {\n+    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n+    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n+    if (container !\u003d null) {\n+      scheduler.removeLiveCompInstance(container.getId());\n+      component.getScheduler().getAmRMClient()\n+          .releaseAssignedContainer(container.getId());\n+      getCompSpec().removeContainer(containerSpec);\n+    }\n+    if (timelineServiceEnabled) {\n+      serviceTimelinePublisher\n+          .componentInstanceFinished(this, KILLED_BY_APPMASTER, COMPLETE,\n+              diagnostics.toString());\n+    }\n+    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void destroy() {\n    LOG.info(getCompInstanceId() + \": Flexed down by user, destroying.\");\n    diagnostics.append(getCompInstanceId() + \": Flexed down by user\");\n    if (container !\u003d null) {\n      scheduler.removeLiveCompInstance(container.getId());\n      component.getScheduler().getAmRMClient()\n          .releaseAssignedContainer(container.getId());\n      getCompSpec().removeContainer(containerSpec);\n    }\n    if (timelineServiceEnabled) {\n      serviceTimelinePublisher\n          .componentInstanceFinished(this, KILLED_BY_APPMASTER, COMPLETE,\n              diagnostics.toString());\n    }\n    scheduler.executorService.submit(this::cleanupRegistryAndCompHdfsDir);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-applications/hadoop-yarn-slider/hadoop-yarn-slider-core/src/main/java/org/apache/hadoop/yarn/service/compinstance/ComponentInstance.java"
    }
  }
}