{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "StorageLocation.java",
  "functionName": "makeBlockPoolDir",
  "functionId": "makeBlockPoolDir___blockPoolID-String__conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
  "functionStartLine": 208,
  "functionEndLine": 232,
  "numCommitsSeen": 79,
  "timeTaken": 8543,
  "changeHistory": [
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
    "b668eb91556b8c85c2b4925808ccb1f769031c20",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "d86f3183d93714ba078416af4f609d26376eadb0",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc"
  ],
  "changeHistoryShort": {
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": "Ybodychange",
    "b668eb91556b8c85c2b4925808ccb1f769031c20": "Ybodychange",
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "d86f3183d93714ba078416af4f609d26376eadb0": "Yfilerename",
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8239e3afb31d3c4485817d4b8b8b195b554acbe7": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12712. [9806] Code style cleanup\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "8239e3afb31d3c4485817d4b8b8b195b554acbe7",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "15/12/17 5:51 PM",
      "commitNameOld": "663b3c08b131ea2db693e1a5d2f5da98242fa854",
      "commitAuthorOld": "Virajith Jalaparti",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 28,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,25 @@\n   public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n \n     if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n     }\n     if (storageType \u003d\u003d StorageType.PROVIDED) {\n-      //skip creation if the storage type is PROVIDED\n+      // skip creation if the storage type is PROVIDED\n+      Storage.LOG.info(\"Skipping creating directory for block pool \"\n+          + blockPoolID + \" for PROVIDED storage location \" + this);\n       return;\n     }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n     File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n     try {\n       DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n     } catch (IOException e) {\n       DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n           \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n    if (storageType \u003d\u003d StorageType.PROVIDED) {\n      // skip creation if the storage type is PROVIDED\n      Storage.LOG.info(\"Skipping creating directory for block pool \"\n          + blockPoolID + \" for PROVIDED storage location \" + this);\n      return;\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "b668eb91556b8c85c2b4925808ccb1f769031c20": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10675. Datanode support to read from external stores.\n",
      "commitDate": "15/12/17 5:51 PM",
      "commitName": "b668eb91556b8c85c2b4925808ccb1f769031c20",
      "commitAuthor": "Virajith Jalaparti",
      "commitDateOld": "11/11/16 3:02 PM",
      "commitNameOld": "3d267177776547ceb32c5b9ed04cd9ec05b3421a",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 399.12,
      "commitsBetweenForRepo": 2535,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n \n     if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n     }\n+    if (storageType \u003d\u003d StorageType.PROVIDED) {\n+      //skip creation if the storage type is PROVIDED\n+      return;\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n     File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n     try {\n       DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n     } catch (IOException e) {\n       DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n           \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n    if (storageType \u003d\u003d StorageType.PROVIDED) {\n      //skip creation if the storage type is PROVIDED\n      return;\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
      "extendedDetails": {}
    },
    "f209e93566b159c22054dcb276e45f23a2b7b7d1": {
      "type": "Ymultichange(Ymovefromfile,Ymodifierchange,Ybodychange,Yrename,Yparameterchange)",
      "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
      "commitDate": "26/10/16 10:32 AM",
      "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
      "commitAuthor": "Lei Xu",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/10/16 8:55 AM",
          "commitNameOld": "1f8490a5bacd98d0d371447ada3b31f93ca40a4e",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+  public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n-    if (conf \u003d\u003d null)\n+\n+    if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n-    for (File data : dataDirs) {\n-      try {\n-        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n-      } catch ( IOException e ) {\n-        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n-            + e.getMessage());\n-      }\n+    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n+    try {\n+      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+    } catch (IOException e) {\n+      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n+          \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {
            "oldPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
            "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
            "oldMethodName": "makeBlockPoolDataDir",
            "newMethodName": "makeBlockPoolDir"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/10/16 8:55 AM",
          "commitNameOld": "1f8490a5bacd98d0d371447ada3b31f93ca40a4e",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+  public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n-    if (conf \u003d\u003d null)\n+\n+    if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n-    for (File data : dataDirs) {\n-      try {\n-        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n-      } catch ( IOException e ) {\n-        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n-            + e.getMessage());\n-      }\n+    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n+    try {\n+      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+    } catch (IOException e) {\n+      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n+          \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {
            "oldValue": "[static]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/10/16 8:55 AM",
          "commitNameOld": "1f8490a5bacd98d0d371447ada3b31f93ca40a4e",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+  public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n-    if (conf \u003d\u003d null)\n+\n+    if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n-    for (File data : dataDirs) {\n-      try {\n-        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n-      } catch ( IOException e ) {\n-        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n-            + e.getMessage());\n-      }\n+    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n+    try {\n+      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+    } catch (IOException e) {\n+      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n+          \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {}
        },
        {
          "type": "Yrename",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/10/16 8:55 AM",
          "commitNameOld": "1f8490a5bacd98d0d371447ada3b31f93ca40a4e",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+  public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n-    if (conf \u003d\u003d null)\n+\n+    if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n-    for (File data : dataDirs) {\n-      try {\n-        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n-      } catch ( IOException e ) {\n-        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n-            + e.getMessage());\n-      }\n+    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n+    try {\n+      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+    } catch (IOException e) {\n+      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n+          \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {
            "oldValue": "makeBlockPoolDataDir",
            "newValue": "makeBlockPoolDir"
          }
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "HDFS-10638. Modifications to remove the assumption that StorageLocation is associated with java.io.File in Datanode. (Virajith Jalaparti via lei)\n",
          "commitDate": "26/10/16 10:32 AM",
          "commitName": "f209e93566b159c22054dcb276e45f23a2b7b7d1",
          "commitAuthor": "Lei Xu",
          "commitDateOld": "26/10/16 8:55 AM",
          "commitNameOld": "1f8490a5bacd98d0d371447ada3b31f93ca40a4e",
          "commitAuthorOld": "Chris Nauroth",
          "daysBetweenCommits": 0.07,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,19 @@\n-  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+  public void makeBlockPoolDir(String blockPoolID,\n       Configuration conf) throws IOException {\n-    if (conf \u003d\u003d null)\n+\n+    if (conf \u003d\u003d null) {\n       conf \u003d new HdfsConfiguration();\n+    }\n \n     LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n     FsPermission permission \u003d new FsPermission(conf.get(\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n         DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n-    for (File data : dataDirs) {\n-      try {\n-        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n-      } catch ( IOException e ) {\n-        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n-            + e.getMessage());\n-      }\n+    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n+    try {\n+      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+    } catch (IOException e) {\n+      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n+          \": \" + e.getMessage());\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public void makeBlockPoolDir(String blockPoolID,\n      Configuration conf) throws IOException {\n\n    if (conf \u003d\u003d null) {\n      conf \u003d new HdfsConfiguration();\n    }\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    File data \u003d new File(getBpURI(blockPoolID, Storage.STORAGE_DIR_CURRENT));\n    try {\n      DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n    } catch (IOException e) {\n      DataStorage.LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() +\n          \": \" + e.getMessage());\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/StorageLocation.java",
          "extendedDetails": {
            "oldValue": "[dataDirs-Collection\u003cFile\u003e, conf-Configuration]",
            "newValue": "[blockPoolID-String, conf-Configuration]"
          }
        }
      ]
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n      Configuration conf) throws IOException {\n    if (conf \u003d\u003d null)\n      conf \u003d new HdfsConfiguration();\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    for (File data : dataDirs) {\n      try {\n        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n      } catch ( IOException e ) {\n        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n            + e.getMessage());\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {
        "oldPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
        "newPath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
      }
    },
    "d86f3183d93714ba078416af4f609d26376eadb0": {
      "type": "Yfilerename",
      "commitMessage": "HDFS-2096. Mavenization of hadoop-hdfs. Contributed by Alejandro Abdelnur.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159702 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/08/11 10:36 AM",
      "commitName": "d86f3183d93714ba078416af4f609d26376eadb0",
      "commitAuthor": "Thomas White",
      "commitDateOld": "19/08/11 10:26 AM",
      "commitNameOld": "6ee5a73e0e91a2ef27753a32c576835e951d8119",
      "commitAuthorOld": "Thomas White",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n      Configuration conf) throws IOException {\n    if (conf \u003d\u003d null)\n      conf \u003d new HdfsConfiguration();\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    for (File data : dataDirs) {\n      try {\n        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n      } catch ( IOException e ) {\n        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n            + e.getMessage());\n      }\n    }\n  }",
      "path": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
      "extendedDetails": {
        "oldPath": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java",
        "newPath": "hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
      }
    },
    "a196766ea07775f18ded69bd9e8d239f8cfd3ccc": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-7106. Reorganize SVN layout to combine HDFS, Common, and MR in a single tree (project unsplit)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1134994 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/06/11 3:00 PM",
      "commitName": "a196766ea07775f18ded69bd9e8d239f8cfd3ccc",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n+      Configuration conf) throws IOException {\n+    if (conf \u003d\u003d null)\n+      conf \u003d new HdfsConfiguration();\n+\n+    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n+    FsPermission permission \u003d new FsPermission(conf.get(\n+        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n+        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n+    for (File data : dataDirs) {\n+      try {\n+        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n+      } catch ( IOException e ) {\n+        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n+            + e.getMessage());\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static void makeBlockPoolDataDir(Collection\u003cFile\u003e dataDirs,\n      Configuration conf) throws IOException {\n    if (conf \u003d\u003d null)\n      conf \u003d new HdfsConfiguration();\n\n    LocalFileSystem localFS \u003d FileSystem.getLocal(conf);\n    FsPermission permission \u003d new FsPermission(conf.get(\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_KEY,\n        DFSConfigKeys.DFS_DATANODE_DATA_DIR_PERMISSION_DEFAULT));\n    for (File data : dataDirs) {\n      try {\n        DiskChecker.checkDir(localFS, new Path(data.toURI()), permission);\n      } catch ( IOException e ) {\n        LOG.warn(\"Invalid directory in: \" + data.getCanonicalPath() + \": \"\n            + e.getMessage());\n      }\n    }\n  }",
      "path": "hdfs/src/java/org/apache/hadoop/hdfs/server/datanode/DataStorage.java"
    }
  }
}