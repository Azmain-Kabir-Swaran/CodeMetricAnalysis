{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "AggregatedLogFormat.java",
  "functionName": "getApplicationAcls",
  "functionId": "getApplicationAcls",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
  "functionStartLine": 630,
  "functionEndLine": 667,
  "numCommitsSeen": 56,
  "timeTaken": 3259,
  "changeHistory": [
    "22de9449f8aa72c5b0bb586b8253390773502189",
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
    "688617d6d7e6377a37682b5676b805cc6e8cf3f0",
    "a83fb61ac07c0468cbc7a38526e92683883dd932",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449"
  ],
  "changeHistoryShort": {
    "22de9449f8aa72c5b0bb586b8253390773502189": "Ybodychange",
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f": "Ybodychange",
    "688617d6d7e6377a37682b5676b805cc6e8cf3f0": "Ybodychange",
    "a83fb61ac07c0468cbc7a38526e92683883dd932": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": "Yfilerename",
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": "Yintroduced"
  },
  "changeHistoryDetails": {
    "22de9449f8aa72c5b0bb586b8253390773502189": {
      "type": "Ybodychange",
      "commitMessage": "YARN-7144. Log Aggregation controller should not swallow the exceptions when it calls closeWriter and closeReader. Contributed by Xuan Gong.\n",
      "commitDate": "06/09/17 2:53 PM",
      "commitName": "22de9449f8aa72c5b0bb586b8253390773502189",
      "commitAuthor": "Junping Du",
      "commitDateOld": "06/09/17 1:19 PM",
      "commitNameOld": "63231a2a3008794c5ebcbc9d3855638fc5f28216",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 0.07,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n         throws IOException {\n       // TODO Seek directly to the key once a comparator is specified.\n       TFile.Reader.Scanner aclScanner \u003d null;\n       try {\n         aclScanner \u003d reader.createScanner();\n         LogKey key \u003d new LogKey();\n         Map\u003cApplicationAccessType, String\u003e acls \u003d\n             new HashMap\u003cApplicationAccessType, String\u003e();\n         while (!aclScanner.atEnd()) {\n           TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n           key.readFields(entry.getKeyStream());\n           if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n             DataInputStream valueStream \u003d entry.getValueStream();\n             while (true) {\n               String appAccessOp \u003d null;\n               String aclString \u003d null;\n               try {\n                 appAccessOp \u003d valueStream.readUTF();\n               } catch (EOFException e) {\n                 // Valid end of stream.\n                 break;\n               }\n               try {\n                 aclString \u003d valueStream.readUTF();\n               } catch (EOFException e) {\n                 throw new YarnRuntimeException(\"Error reading ACLs\", e);\n               }\n               acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n             }\n           }\n           aclScanner.advance();\n         }\n         return acls;\n       } finally {\n-        IOUtils.closeQuietly(aclScanner);\n+        IOUtils.cleanupWithLogger(LOG, aclScanner);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d null;\n      try {\n        aclScanner \u003d reader.createScanner();\n        LogKey key \u003d new LogKey();\n        Map\u003cApplicationAccessType, String\u003e acls \u003d\n            new HashMap\u003cApplicationAccessType, String\u003e();\n        while (!aclScanner.atEnd()) {\n          TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n          key.readFields(entry.getKeyStream());\n          if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n            DataInputStream valueStream \u003d entry.getValueStream();\n            while (true) {\n              String appAccessOp \u003d null;\n              String aclString \u003d null;\n              try {\n                appAccessOp \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                // Valid end of stream.\n                break;\n              }\n              try {\n                aclString \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                throw new YarnRuntimeException(\"Error reading ACLs\", e);\n              }\n              acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n            }\n          }\n          aclScanner.advance();\n        }\n        return acls;\n      } finally {\n        IOUtils.cleanupWithLogger(LOG, aclScanner);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6876. Create an abstract log writer for extendability. Contributed by Xuan Gong.\n",
      "commitDate": "24/08/17 1:36 PM",
      "commitName": "c2cb7ea1ef6532020b69031dbd18b0f9b8369f0f",
      "commitAuthor": "Junping Du",
      "commitDateOld": "18/06/17 7:23 AM",
      "commitNameOld": "7582dedad1c73eabdc3eeece0a3a860e7bb33c1a",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 67.26,
      "commitsBetweenForRepo": 421,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,38 +1,38 @@\n     public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n         throws IOException {\n       // TODO Seek directly to the key once a comparator is specified.\n       TFile.Reader.Scanner aclScanner \u003d null;\n       try {\n         aclScanner \u003d reader.createScanner();\n         LogKey key \u003d new LogKey();\n         Map\u003cApplicationAccessType, String\u003e acls \u003d\n             new HashMap\u003cApplicationAccessType, String\u003e();\n         while (!aclScanner.atEnd()) {\n           TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n           key.readFields(entry.getKeyStream());\n           if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n             DataInputStream valueStream \u003d entry.getValueStream();\n             while (true) {\n               String appAccessOp \u003d null;\n               String aclString \u003d null;\n               try {\n                 appAccessOp \u003d valueStream.readUTF();\n               } catch (EOFException e) {\n                 // Valid end of stream.\n                 break;\n               }\n               try {\n                 aclString \u003d valueStream.readUTF();\n               } catch (EOFException e) {\n                 throw new YarnRuntimeException(\"Error reading ACLs\", e);\n               }\n               acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n             }\n           }\n           aclScanner.advance();\n         }\n         return acls;\n       } finally {\n-        IOUtils.cleanup(LOG, aclScanner);\n+        IOUtils.closeQuietly(aclScanner);\n       }\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d null;\n      try {\n        aclScanner \u003d reader.createScanner();\n        LogKey key \u003d new LogKey();\n        Map\u003cApplicationAccessType, String\u003e acls \u003d\n            new HashMap\u003cApplicationAccessType, String\u003e();\n        while (!aclScanner.atEnd()) {\n          TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n          key.readFields(entry.getKeyStream());\n          if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n            DataInputStream valueStream \u003d entry.getValueStream();\n            while (true) {\n              String appAccessOp \u003d null;\n              String aclString \u003d null;\n              try {\n                appAccessOp \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                // Valid end of stream.\n                break;\n              }\n              try {\n                aclString \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                throw new YarnRuntimeException(\"Error reading ACLs\", e);\n              }\n              acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n            }\n          }\n          aclScanner.advance();\n        }\n        return acls;\n      } finally {\n        IOUtils.closeQuietly(aclScanner);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "688617d6d7e6377a37682b5676b805cc6e8cf3f0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3882. AggregatedLogFormat should close aclScanner and ownerScanner\nafter create them. Contributed by zhihai xu\n",
      "commitDate": "04/07/15 9:51 PM",
      "commitName": "688617d6d7e6377a37682b5676b805cc6e8cf3f0",
      "commitAuthor": "Xuan",
      "commitDateOld": "13/04/15 5:29 PM",
      "commitNameOld": "a77d628339afaf2f5a085c73fd81a805b18348c9",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 82.18,
      "commitsBetweenForRepo": 709,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,38 @@\n     public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n         throws IOException {\n       // TODO Seek directly to the key once a comparator is specified.\n-      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n-      LogKey key \u003d new LogKey();\n-      Map\u003cApplicationAccessType, String\u003e acls \u003d\n-          new HashMap\u003cApplicationAccessType, String\u003e();\n-      while (!aclScanner.atEnd()) {\n-        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n-        key.readFields(entry.getKeyStream());\n-        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n-          DataInputStream valueStream \u003d entry.getValueStream();\n-          while (true) {\n-            String appAccessOp \u003d null;\n-            String aclString \u003d null;\n-            try {\n-              appAccessOp \u003d valueStream.readUTF();\n-            } catch (EOFException e) {\n-              // Valid end of stream.\n-              break;\n+      TFile.Reader.Scanner aclScanner \u003d null;\n+      try {\n+        aclScanner \u003d reader.createScanner();\n+        LogKey key \u003d new LogKey();\n+        Map\u003cApplicationAccessType, String\u003e acls \u003d\n+            new HashMap\u003cApplicationAccessType, String\u003e();\n+        while (!aclScanner.atEnd()) {\n+          TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n+          key.readFields(entry.getKeyStream());\n+          if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n+            DataInputStream valueStream \u003d entry.getValueStream();\n+            while (true) {\n+              String appAccessOp \u003d null;\n+              String aclString \u003d null;\n+              try {\n+                appAccessOp \u003d valueStream.readUTF();\n+              } catch (EOFException e) {\n+                // Valid end of stream.\n+                break;\n+              }\n+              try {\n+                aclString \u003d valueStream.readUTF();\n+              } catch (EOFException e) {\n+                throw new YarnRuntimeException(\"Error reading ACLs\", e);\n+              }\n+              acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n             }\n-            try {\n-              aclString \u003d valueStream.readUTF();\n-            } catch (EOFException e) {\n-              throw new YarnRuntimeException(\"Error reading ACLs\", e);\n-            }\n-            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n           }\n-\n+          aclScanner.advance();\n         }\n-        aclScanner.advance();\n+        return acls;\n+      } finally {\n+        IOUtils.cleanup(LOG, aclScanner);\n       }\n-      return acls;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d null;\n      try {\n        aclScanner \u003d reader.createScanner();\n        LogKey key \u003d new LogKey();\n        Map\u003cApplicationAccessType, String\u003e acls \u003d\n            new HashMap\u003cApplicationAccessType, String\u003e();\n        while (!aclScanner.atEnd()) {\n          TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n          key.readFields(entry.getKeyStream());\n          if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n            DataInputStream valueStream \u003d entry.getValueStream();\n            while (true) {\n              String appAccessOp \u003d null;\n              String aclString \u003d null;\n              try {\n                appAccessOp \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                // Valid end of stream.\n                break;\n              }\n              try {\n                aclString \u003d valueStream.readUTF();\n              } catch (EOFException e) {\n                throw new YarnRuntimeException(\"Error reading ACLs\", e);\n              }\n              acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n            }\n          }\n          aclScanner.advance();\n        }\n        return acls;\n      } finally {\n        IOUtils.cleanup(LOG, aclScanner);\n      }\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "a83fb61ac07c0468cbc7a38526e92683883dd932": {
      "type": "Ybodychange",
      "commitMessage": "YARN-635. Renamed YarnRemoteException to YarnException. Contributed by Siddharth Seth.\nMAPREDUCE-5301. Updated MR code to work with YARN-635 changes of renaming YarnRemoteException to YarnException. Contributed by Siddharth Seth\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1489283 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/06/13 9:05 PM",
      "commitName": "a83fb61ac07c0468cbc7a38526e92683883dd932",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "29/05/13 4:14 PM",
      "commitNameOld": "5420f287ccc83df69b6725942754c82b89e46b3e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 5.2,
      "commitsBetweenForRepo": 59,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,34 +1,34 @@\n     public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n         throws IOException {\n       // TODO Seek directly to the key once a comparator is specified.\n       TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n       LogKey key \u003d new LogKey();\n       Map\u003cApplicationAccessType, String\u003e acls \u003d\n           new HashMap\u003cApplicationAccessType, String\u003e();\n       while (!aclScanner.atEnd()) {\n         TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n         key.readFields(entry.getKeyStream());\n         if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n           DataInputStream valueStream \u003d entry.getValueStream();\n           while (true) {\n             String appAccessOp \u003d null;\n             String aclString \u003d null;\n             try {\n               appAccessOp \u003d valueStream.readUTF();\n             } catch (EOFException e) {\n               // Valid end of stream.\n               break;\n             }\n             try {\n               aclString \u003d valueStream.readUTF();\n             } catch (EOFException e) {\n-              throw new YarnException(\"Error reading ACLs\", e);\n+              throw new YarnRuntimeException(\"Error reading ACLs\", e);\n             }\n             acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n           }\n \n         }\n         aclScanner.advance();\n       }\n       return acls;\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n      LogKey key \u003d new LogKey();\n      Map\u003cApplicationAccessType, String\u003e acls \u003d\n          new HashMap\u003cApplicationAccessType, String\u003e();\n      while (!aclScanner.atEnd()) {\n        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n        key.readFields(entry.getKeyStream());\n        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n          DataInputStream valueStream \u003d entry.getValueStream();\n          while (true) {\n            String appAccessOp \u003d null;\n            String aclString \u003d null;\n            try {\n              appAccessOp \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              // Valid end of stream.\n              break;\n            }\n            try {\n              aclString \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              throw new YarnRuntimeException(\"Error reading ACLs\", e);\n            }\n            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n          }\n\n        }\n        aclScanner.advance();\n      }\n      return acls;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n      LogKey key \u003d new LogKey();\n      Map\u003cApplicationAccessType, String\u003e acls \u003d\n          new HashMap\u003cApplicationAccessType, String\u003e();\n      while (!aclScanner.atEnd()) {\n        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n        key.readFields(entry.getKeyStream());\n        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n          DataInputStream valueStream \u003d entry.getValueStream();\n          while (true) {\n            String appAccessOp \u003d null;\n            String aclString \u003d null;\n            try {\n              appAccessOp \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              // Valid end of stream.\n              break;\n            }\n            try {\n              aclString \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              throw new YarnException(\"Error reading ACLs\", e);\n            }\n            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n          }\n\n        }\n        aclScanner.advance();\n      }\n      return acls;\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java"
      }
    },
    "c27601fefebd0af887a12d684bfc6f90d9fc0321": {
      "type": "Yfilerename",
      "commitMessage": "MAPREDUCE-3297. Moved log related components into yarn-common so that HistoryServer and clients can use them without depending on the yarn-server-nodemanager module. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1196986 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/11/11 1:02 AM",
      "commitName": "c27601fefebd0af887a12d684bfc6f90d9fc0321",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "03/11/11 12:06 AM",
      "commitNameOld": "0df4878033b797b9313c887ca9d75f8ea104d029",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.04,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n      LogKey key \u003d new LogKey();\n      Map\u003cApplicationAccessType, String\u003e acls \u003d\n          new HashMap\u003cApplicationAccessType, String\u003e();\n      while (!aclScanner.atEnd()) {\n        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n        key.readFields(entry.getKeyStream());\n        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n          DataInputStream valueStream \u003d entry.getValueStream();\n          while (true) {\n            String appAccessOp \u003d null;\n            String aclString \u003d null;\n            try {\n              appAccessOp \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              // Valid end of stream.\n              break;\n            }\n            try {\n              aclString \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              throw new YarnException(\"Error reading ACLs\", e);\n            }\n            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n          }\n\n        }\n        aclScanner.advance();\n      }\n      return acls;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AggregatedLogFormat.java",
        "newPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/logaggregation/AggregatedLogFormat.java"
      }
    },
    "670fa24b48acb407c22fbfdde87ae3123dcbf449": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-2989. Modified JobHistory to link to task and AM logs from the JobHistoryServer. Contributed by Siddharth Seth.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1190174 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 11:45 PM",
      "commitName": "670fa24b48acb407c22fbfdde87ae3123dcbf449",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,34 @@\n+    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n+        throws IOException {\n+      // TODO Seek directly to the key once a comparator is specified.\n+      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n+      LogKey key \u003d new LogKey();\n+      Map\u003cApplicationAccessType, String\u003e acls \u003d\n+          new HashMap\u003cApplicationAccessType, String\u003e();\n+      while (!aclScanner.atEnd()) {\n+        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n+        key.readFields(entry.getKeyStream());\n+        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n+          DataInputStream valueStream \u003d entry.getValueStream();\n+          while (true) {\n+            String appAccessOp \u003d null;\n+            String aclString \u003d null;\n+            try {\n+              appAccessOp \u003d valueStream.readUTF();\n+            } catch (EOFException e) {\n+              // Valid end of stream.\n+              break;\n+            }\n+            try {\n+              aclString \u003d valueStream.readUTF();\n+            } catch (EOFException e) {\n+              throw new YarnException(\"Error reading ACLs\", e);\n+            }\n+            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n+          }\n+\n+        }\n+        aclScanner.advance();\n+      }\n+      return acls;\n+    }\n\\ No newline at end of file\n",
      "actualSource": "    public Map\u003cApplicationAccessType, String\u003e getApplicationAcls()\n        throws IOException {\n      // TODO Seek directly to the key once a comparator is specified.\n      TFile.Reader.Scanner aclScanner \u003d reader.createScanner();\n      LogKey key \u003d new LogKey();\n      Map\u003cApplicationAccessType, String\u003e acls \u003d\n          new HashMap\u003cApplicationAccessType, String\u003e();\n      while (!aclScanner.atEnd()) {\n        TFile.Reader.Scanner.Entry entry \u003d aclScanner.entry();\n        key.readFields(entry.getKeyStream());\n        if (key.toString().equals(APPLICATION_ACL_KEY.toString())) {\n          DataInputStream valueStream \u003d entry.getValueStream();\n          while (true) {\n            String appAccessOp \u003d null;\n            String aclString \u003d null;\n            try {\n              appAccessOp \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              // Valid end of stream.\n              break;\n            }\n            try {\n              aclString \u003d valueStream.readUTF();\n            } catch (EOFException e) {\n              throw new YarnException(\"Error reading ACLs\", e);\n            }\n            acls.put(ApplicationAccessType.valueOf(appAccessOp), aclString);\n          }\n\n        }\n        aclScanner.advance();\n      }\n      return acls;\n    }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/logaggregation/AggregatedLogFormat.java"
    }
  }
}