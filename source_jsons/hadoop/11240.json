{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPOfferService.java",
  "functionName": "toString",
  "functionId": "toString",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
  "functionStartLine": 265,
  "functionEndLine": 287,
  "numCommitsSeen": 87,
  "timeTaken": 2488,
  "changeHistory": [
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
    "8e32e6aff16e99c493c152e97d84ecc7c494ffb9",
    "4551da302d94cffea0313eac79479ab6f9b7cb34",
    "1e346aa829519f8a2aa830e76d9856f914861805",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd"
  ],
  "changeHistoryShort": {
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45": "Ymultichange(Ymodifierchange,Ybodychange)",
    "8e32e6aff16e99c493c152e97d84ecc7c494ffb9": "Ymodifierchange",
    "4551da302d94cffea0313eac79479ab6f9b7cb34": "Ybodychange",
    "1e346aa829519f8a2aa830e76d9856f914861805": "Ybodychange",
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/14 11:56 AM",
      "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
      "commitAuthor": "Andrew Wang",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/14 11:56 AM",
          "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 12:41 AM",
          "commitNameOld": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 10.47,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  public synchronized String toString() {\n-    if (bpNSInfo \u003d\u003d null) {\n-      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n-      // own block pool ID.\n-      // If _none_ of the block pools have connected yet, we don\u0027t even\n-      // know the DatanodeID ID of this DN.\n-      String datanodeUuid \u003d dn.getDatanodeUuid();\n+  public String toString() {\n+    readLock();\n+    try {\n+      if (bpNSInfo \u003d\u003d null) {\n+        // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n+        // own block pool ID.\n+        // If _none_ of the block pools have connected yet, we don\u0027t even\n+        // know the DatanodeID ID of this DN.\n+        String datanodeUuid \u003d dn.getDatanodeUuid();\n \n-      if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n-        datanodeUuid \u003d \"unassigned\";\n+        if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n+          datanodeUuid \u003d \"unassigned\";\n+        }\n+        return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n+      } else {\n+        return \"Block pool \" + getBlockPoolId() +\n+            \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n+            \")\";\n       }\n-      return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n-    } else {\n-      return \"Block pool \" + getBlockPoolId() +\n-          \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n-          \")\";\n+    } finally {\n+      readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    readLock();\n    try {\n      if (bpNSInfo \u003d\u003d null) {\n        // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n        // own block pool ID.\n        // If _none_ of the block pools have connected yet, we don\u0027t even\n        // know the DatanodeID ID of this DN.\n        String datanodeUuid \u003d dn.getDatanodeUuid();\n\n        if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n          datanodeUuid \u003d \"unassigned\";\n        }\n        return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n      } else {\n        return \"Block pool \" + getBlockPoolId() +\n            \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n            \")\";\n      }\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-6788. Improve synchronization in BPOfferService with read write lock. Contributed by Yongjun Zhang.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1615190 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "01/08/14 11:56 AM",
          "commitName": "07860b1c9ee3e1d77d39a52d41c3243fdcc10c45",
          "commitAuthor": "Andrew Wang",
          "commitDateOld": "22/07/14 12:41 AM",
          "commitNameOld": "25b0e8471ed744578b2d8e3f0debe5477b268e54",
          "commitAuthorOld": "Tsz-wo Sze",
          "daysBetweenCommits": 10.47,
          "commitsBetweenForRepo": 80,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,23 @@\n-  public synchronized String toString() {\n-    if (bpNSInfo \u003d\u003d null) {\n-      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n-      // own block pool ID.\n-      // If _none_ of the block pools have connected yet, we don\u0027t even\n-      // know the DatanodeID ID of this DN.\n-      String datanodeUuid \u003d dn.getDatanodeUuid();\n+  public String toString() {\n+    readLock();\n+    try {\n+      if (bpNSInfo \u003d\u003d null) {\n+        // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n+        // own block pool ID.\n+        // If _none_ of the block pools have connected yet, we don\u0027t even\n+        // know the DatanodeID ID of this DN.\n+        String datanodeUuid \u003d dn.getDatanodeUuid();\n \n-      if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n-        datanodeUuid \u003d \"unassigned\";\n+        if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n+          datanodeUuid \u003d \"unassigned\";\n+        }\n+        return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n+      } else {\n+        return \"Block pool \" + getBlockPoolId() +\n+            \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n+            \")\";\n       }\n-      return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n-    } else {\n-      return \"Block pool \" + getBlockPoolId() +\n-          \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n-          \")\";\n+    } finally {\n+      readUnlock();\n     }\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public String toString() {\n    readLock();\n    try {\n      if (bpNSInfo \u003d\u003d null) {\n        // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n        // own block pool ID.\n        // If _none_ of the block pools have connected yet, we don\u0027t even\n        // know the DatanodeID ID of this DN.\n        String datanodeUuid \u003d dn.getDatanodeUuid();\n\n        if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n          datanodeUuid \u003d \"unassigned\";\n        }\n        return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n      } else {\n        return \"Block pool \" + getBlockPoolId() +\n            \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n            \")\";\n      }\n    } finally {\n      readUnlock();\n    }\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
          "extendedDetails": {}
        }
      ]
    },
    "8e32e6aff16e99c493c152e97d84ecc7c494ffb9": {
      "type": "Ymodifierchange",
      "commitMessage": "HDFS-5666. Fix inconsistent synchronization in BPOfferService (jxiang via cmccabe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551301 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/12/13 10:35 AM",
      "commitName": "8e32e6aff16e99c493c152e97d84ecc7c494ffb9",
      "commitAuthor": "Colin McCabe",
      "commitDateOld": "11/12/13 3:18 PM",
      "commitNameOld": "cd083aa80711092e50365e20f0b507551000f915",
      "commitAuthorOld": "",
      "daysBetweenCommits": 4.8,
      "commitsBetweenForRepo": 24,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n-  public String toString() {\n+  public synchronized String toString() {\n     if (bpNSInfo \u003d\u003d null) {\n       // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n       // own block pool ID.\n       // If _none_ of the block pools have connected yet, we don\u0027t even\n       // know the DatanodeID ID of this DN.\n       String datanodeUuid \u003d dn.getDatanodeUuid();\n \n       if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n         datanodeUuid \u003d \"unassigned\";\n       }\n       return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n     } else {\n       return \"Block pool \" + getBlockPoolId() +\n           \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n           \")\";\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized String toString() {\n    if (bpNSInfo \u003d\u003d null) {\n      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n      // own block pool ID.\n      // If _none_ of the block pools have connected yet, we don\u0027t even\n      // know the DatanodeID ID of this DN.\n      String datanodeUuid \u003d dn.getDatanodeUuid();\n\n      if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n        datanodeUuid \u003d \"unassigned\";\n      }\n      return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n    } else {\n      return \"Block pool \" + getBlockPoolId() +\n          \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n          \")\";\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {
        "oldValue": "[public]",
        "newValue": "[public, synchronized]"
      }
    },
    "4551da302d94cffea0313eac79479ab6f9b7cb34": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5233. Use Datanode UUID to identify Datanodes.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-2832@1525407 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/09/13 11:03 AM",
      "commitName": "4551da302d94cffea0313eac79479ab6f9b7cb34",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "01/04/13 7:05 PM",
      "commitNameOld": "329fb1f4334567fe072de213b1b1f644edbc31e4",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 173.66,
      "commitsBetweenForRepo": 1046,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public String toString() {\n     if (bpNSInfo \u003d\u003d null) {\n       // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n       // own block pool ID.\n       // If _none_ of the block pools have connected yet, we don\u0027t even\n-      // know the storage ID of this DN.\n-      String storageId \u003d dn.getStorageId();\n-      if (storageId \u003d\u003d null || \"\".equals(storageId)) {\n-        storageId \u003d \"unknown\";\n+      // know the DatanodeID ID of this DN.\n+      String datanodeUuid \u003d dn.getDatanodeUuid();\n+\n+      if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n+        datanodeUuid \u003d \"unassigned\";\n       }\n-      return \"Block pool \u003cregistering\u003e (storage id \" + storageId +\n-        \")\";\n+      return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n     } else {\n       return \"Block pool \" + getBlockPoolId() +\n-        \" (storage id \" + dn.getStorageId() +\n-        \")\";\n+          \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n+          \")\";\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    if (bpNSInfo \u003d\u003d null) {\n      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n      // own block pool ID.\n      // If _none_ of the block pools have connected yet, we don\u0027t even\n      // know the DatanodeID ID of this DN.\n      String datanodeUuid \u003d dn.getDatanodeUuid();\n\n      if (datanodeUuid \u003d\u003d null || datanodeUuid.isEmpty()) {\n        datanodeUuid \u003d \"unassigned\";\n      }\n      return \"Block pool \u003cregistering\u003e (Datanode Uuid \" + datanodeUuid + \")\";\n    } else {\n      return \"Block pool \" + getBlockPoolId() +\n          \" (Datanode Uuid \" + dn.getDatanodeUuid() +\n          \")\";\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "1e346aa829519f8a2aa830e76d9856f914861805": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-1971. Send block report from datanode to both active and standby namenodes. (sanjay, todd via suresh)\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-1623@1208925 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/11 5:10 PM",
      "commitName": "1e346aa829519f8a2aa830e76d9856f914861805",
      "commitAuthor": "Suresh Srinivas",
      "commitDateOld": "21/11/11 11:27 AM",
      "commitNameOld": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 9.24,
      "commitsBetweenForRepo": 53,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   public String toString() {\n     if (bpNSInfo \u003d\u003d null) {\n       // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n       // own block pool ID.\n       // If _none_ of the block pools have connected yet, we don\u0027t even\n       // know the storage ID of this DN.\n       String storageId \u003d dn.getStorageId();\n       if (storageId \u003d\u003d null || \"\".equals(storageId)) {\n         storageId \u003d \"unknown\";\n       }\n       return \"Block pool \u003cregistering\u003e (storage id \" + storageId +\n-        \") connecting to \" + nnAddr;\n+        \")\";\n     } else {\n       return \"Block pool \" + getBlockPoolId() +\n         \" (storage id \" + dn.getStorageId() +\n-        \") registered with \" + nnAddr;\n+        \")\";\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    if (bpNSInfo \u003d\u003d null) {\n      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n      // own block pool ID.\n      // If _none_ of the block pools have connected yet, we don\u0027t even\n      // know the storage ID of this DN.\n      String storageId \u003d dn.getStorageId();\n      if (storageId \u003d\u003d null || \"\".equals(storageId)) {\n        storageId \u003d \"unknown\";\n      }\n      return \"Block pool \u003cregistering\u003e (storage id \" + storageId +\n        \")\";\n    } else {\n      return \"Block pool \" + getBlockPoolId() +\n        \" (storage id \" + dn.getStorageId() +\n        \")\";\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    },
    "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2566. Move BPOfferService to be a non-inner class. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1204659 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/11/11 11:27 AM",
      "commitName": "39ce694d05c6d8c428bd87bc1b9c95f94dfdf6fd",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  public String toString() {\n+    if (bpNSInfo \u003d\u003d null) {\n+      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n+      // own block pool ID.\n+      // If _none_ of the block pools have connected yet, we don\u0027t even\n+      // know the storage ID of this DN.\n+      String storageId \u003d dn.getStorageId();\n+      if (storageId \u003d\u003d null || \"\".equals(storageId)) {\n+        storageId \u003d \"unknown\";\n+      }\n+      return \"Block pool \u003cregistering\u003e (storage id \" + storageId +\n+        \") connecting to \" + nnAddr;\n+    } else {\n+      return \"Block pool \" + getBlockPoolId() +\n+        \" (storage id \" + dn.getStorageId() +\n+        \") registered with \" + nnAddr;\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public String toString() {\n    if (bpNSInfo \u003d\u003d null) {\n      // If we haven\u0027t yet connected to our NN, we don\u0027t yet know our\n      // own block pool ID.\n      // If _none_ of the block pools have connected yet, we don\u0027t even\n      // know the storage ID of this DN.\n      String storageId \u003d dn.getStorageId();\n      if (storageId \u003d\u003d null || \"\".equals(storageId)) {\n        storageId \u003d \"unknown\";\n      }\n      return \"Block pool \u003cregistering\u003e (storage id \" + storageId +\n        \") connecting to \" + nnAddr;\n    } else {\n      return \"Block pool \" + getBlockPoolId() +\n        \" (storage id \" + dn.getStorageId() +\n        \") registered with \" + nnAddr;\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java"
    }
  }
}