{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileNameIndexUtils.java",
  "functionName": "encodeJobHistoryFileName",
  "functionId": "encodeJobHistoryFileName___logFileName-String",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java",
  "functionStartLine": 218,
  "functionEndLine": 247,
  "numCommitsSeen": 12,
  "timeTaken": 6761,
  "changeHistory": [
    "047b175aac0c8431d3d1f31665b9f8c4569e6c64",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517"
  ],
  "changeHistoryShort": {
    "047b175aac0c8431d3d1f31665b9f8c4569e6c64": "Ybodychange",
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": "Yfilerename",
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": "Yintroduced"
  },
  "changeHistoryDetails": {
    "047b175aac0c8431d3d1f31665b9f8c4569e6c64": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2802. Ensure JobHistory filenames have jobId. Contributed by Jonathan Eagles.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1180220 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/10/11 1:44 PM",
      "commitName": "047b175aac0c8431d3d1f31665b9f8c4569e6c64",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:14 PM",
      "commitNameOld": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 43.85,
      "commitsBetweenForRepo": 296,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public static String encodeJobHistoryFileName(String logFileName)\n   throws IOException {\n-    String replacementUnderscoreEscape \u003d null;\n+    String replacementDelimiterEscape \u003d null;\n \n-    if (logFileName.contains(UNDERSCORE_ESCAPE)) {\n-      replacementUnderscoreEscape \u003d nonOccursString(logFileName);\n+    // Temporarily protect the escape delimiters from encoding\n+    if (logFileName.contains(DELIMITER_ESCAPE)) {\n+      replacementDelimiterEscape \u003d nonOccursString(logFileName);\n \n-      logFileName \u003d replaceStringInstances\n-        (logFileName, UNDERSCORE_ESCAPE, replacementUnderscoreEscape);\n+      logFileName \u003d logFileName.replaceAll(DELIMITER_ESCAPE, replacementDelimiterEscape);\n     }\n \n     String encodedFileName \u003d null;\n     try {\n       encodedFileName \u003d URLEncoder.encode(logFileName, \"UTF-8\");\n     } catch (UnsupportedEncodingException uee) {\n       IOException ioe \u003d new IOException();\n       ioe.initCause(uee);\n       ioe.setStackTrace(uee.getStackTrace());\n       throw ioe;\n     }\n-    \n-    if (replacementUnderscoreEscape !\u003d null) {\n-      encodedFileName \u003d replaceStringInstances\n-        (encodedFileName, replacementUnderscoreEscape, UNDERSCORE_ESCAPE);\n+\n+    // Restore protected escape delimiters after encoding\n+    if (replacementDelimiterEscape !\u003d null) {\n+      encodedFileName \u003d encodedFileName.replaceAll(replacementDelimiterEscape, DELIMITER_ESCAPE);\n     }\n \n     return encodedFileName;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public static String encodeJobHistoryFileName(String logFileName)\n  throws IOException {\n    String replacementDelimiterEscape \u003d null;\n\n    // Temporarily protect the escape delimiters from encoding\n    if (logFileName.contains(DELIMITER_ESCAPE)) {\n      replacementDelimiterEscape \u003d nonOccursString(logFileName);\n\n      logFileName \u003d logFileName.replaceAll(DELIMITER_ESCAPE, replacementDelimiterEscape);\n    }\n\n    String encodedFileName \u003d null;\n    try {\n      encodedFileName \u003d URLEncoder.encode(logFileName, \"UTF-8\");\n    } catch (UnsupportedEncodingException uee) {\n      IOException ioe \u003d new IOException();\n      ioe.initCause(uee);\n      ioe.setStackTrace(uee.getStackTrace());\n      throw ioe;\n    }\n\n    // Restore protected escape delimiters after encoding\n    if (replacementDelimiterEscape !\u003d null) {\n      encodedFileName \u003d encodedFileName.replaceAll(replacementDelimiterEscape, DELIMITER_ESCAPE);\n    }\n\n    return encodedFileName;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java",
      "extendedDetails": {}
    },
    "cd7157784e5e5ddc4e77144d042e54dd0d04bac1": {
      "type": "Yfilerename",
      "commitMessage": "HADOOP-7560. Change src layout to be heirarchical. Contributed by Alejandro Abdelnur.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1161332 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "24/08/11 5:14 PM",
      "commitName": "cd7157784e5e5ddc4e77144d042e54dd0d04bac1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "24/08/11 5:06 PM",
      "commitNameOld": "bb0005cfec5fd2861600ff5babd259b48ba18b63",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public static String encodeJobHistoryFileName(String logFileName)\n  throws IOException {\n    String replacementUnderscoreEscape \u003d null;\n\n    if (logFileName.contains(UNDERSCORE_ESCAPE)) {\n      replacementUnderscoreEscape \u003d nonOccursString(logFileName);\n\n      logFileName \u003d replaceStringInstances\n        (logFileName, UNDERSCORE_ESCAPE, replacementUnderscoreEscape);\n    }\n\n    String encodedFileName \u003d null;\n    try {\n      encodedFileName \u003d URLEncoder.encode(logFileName, \"UTF-8\");\n    } catch (UnsupportedEncodingException uee) {\n      IOException ioe \u003d new IOException();\n      ioe.initCause(uee);\n      ioe.setStackTrace(uee.getStackTrace());\n      throw ioe;\n    }\n    \n    if (replacementUnderscoreEscape !\u003d null) {\n      encodedFileName \u003d replaceStringInstances\n        (encodedFileName, replacementUnderscoreEscape, UNDERSCORE_ESCAPE);\n    }\n\n    return encodedFileName;\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java",
        "newPath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java"
      }
    },
    "dbecbe5dfe50f834fc3b8401709079e9470cc517": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-279. MapReduce 2.0. Merging MR-279 branch into trunk. Contributed by Arun C Murthy, Christopher Douglas, Devaraj Das, Greg Roelofs, Jeffrey Naisbitt, Josh Wills, Jonathan Eagles, Krishna Ramachandran, Luke Lu, Mahadev Konar, Robert Evans, Sharad Agarwal, Siddharth Seth, Thomas Graves, and Vinod Kumar Vavilapalli.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1159166 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/08/11 4:07 AM",
      "commitName": "dbecbe5dfe50f834fc3b8401709079e9470cc517",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,28 @@\n+  public static String encodeJobHistoryFileName(String logFileName)\n+  throws IOException {\n+    String replacementUnderscoreEscape \u003d null;\n+\n+    if (logFileName.contains(UNDERSCORE_ESCAPE)) {\n+      replacementUnderscoreEscape \u003d nonOccursString(logFileName);\n+\n+      logFileName \u003d replaceStringInstances\n+        (logFileName, UNDERSCORE_ESCAPE, replacementUnderscoreEscape);\n+    }\n+\n+    String encodedFileName \u003d null;\n+    try {\n+      encodedFileName \u003d URLEncoder.encode(logFileName, \"UTF-8\");\n+    } catch (UnsupportedEncodingException uee) {\n+      IOException ioe \u003d new IOException();\n+      ioe.initCause(uee);\n+      ioe.setStackTrace(uee.getStackTrace());\n+      throw ioe;\n+    }\n+    \n+    if (replacementUnderscoreEscape !\u003d null) {\n+      encodedFileName \u003d replaceStringInstances\n+        (encodedFileName, replacementUnderscoreEscape, UNDERSCORE_ESCAPE);\n+    }\n+\n+    return encodedFileName;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public static String encodeJobHistoryFileName(String logFileName)\n  throws IOException {\n    String replacementUnderscoreEscape \u003d null;\n\n    if (logFileName.contains(UNDERSCORE_ESCAPE)) {\n      replacementUnderscoreEscape \u003d nonOccursString(logFileName);\n\n      logFileName \u003d replaceStringInstances\n        (logFileName, UNDERSCORE_ESCAPE, replacementUnderscoreEscape);\n    }\n\n    String encodedFileName \u003d null;\n    try {\n      encodedFileName \u003d URLEncoder.encode(logFileName, \"UTF-8\");\n    } catch (UnsupportedEncodingException uee) {\n      IOException ioe \u003d new IOException();\n      ioe.initCause(uee);\n      ioe.setStackTrace(uee.getStackTrace());\n      throw ioe;\n    }\n    \n    if (replacementUnderscoreEscape !\u003d null) {\n      encodedFileName \u003d replaceStringInstances\n        (encodedFileName, replacementUnderscoreEscape, UNDERSCORE_ESCAPE);\n    }\n\n    return encodedFileName;\n  }",
      "path": "hadoop-mapreduce/hadoop-mr-client/hadoop-mapreduce-client-common/src/main/java/org/apache/hadoop/mapreduce/v2/jobhistory/FileNameIndexUtils.java"
    }
  }
}