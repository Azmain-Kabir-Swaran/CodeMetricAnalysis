{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZookeeperFederationStateStore.java",
  "functionName": "subClusterHeartbeat",
  "functionId": "subClusterHeartbeat___request-SubClusterHeartbeatRequest",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/ZookeeperFederationStateStore.java",
  "functionStartLine": 313,
  "functionEndLine": 334,
  "numCommitsSeen": 4,
  "timeTaken": 749,
  "changeHistory": [
    "de462da04e167a04b89ecf0f40d464cf39dc6549"
  ],
  "changeHistoryShort": {
    "de462da04e167a04b89ecf0f40d464cf39dc6549": "Yintroduced"
  },
  "changeHistoryDetails": {
    "de462da04e167a04b89ecf0f40d464cf39dc6549": {
      "type": "Yintroduced",
      "commitMessage": "YARN-6900. ZooKeeper based implementation of the FederationStateStore. (Íñigo Goiri via Subru).\n",
      "commitDate": "16/08/17 11:43 AM",
      "commitName": "de462da04e167a04b89ecf0f40d464cf39dc6549",
      "commitAuthor": "Subru Krishnan",
      "diff": "@@ -0,0 +1,22 @@\n+  public SubClusterHeartbeatResponse subClusterHeartbeat(\n+      SubClusterHeartbeatRequest request) throws YarnException {\n+\n+    FederationMembershipStateStoreInputValidator.validate(request);\n+    SubClusterId subClusterId \u003d request.getSubClusterId();\n+\n+    SubClusterInfo subClusterInfo \u003d getSubclusterInfo(subClusterId);\n+    if (subClusterInfo \u003d\u003d null) {\n+      String errMsg \u003d \"SubCluster \" + subClusterId\n+          + \" does not exist; cannot heartbeat\";\n+      FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n+    }\n+\n+    long currentTime \u003d getCurrentTime();\n+    subClusterInfo.setLastHeartBeat(currentTime);\n+    subClusterInfo.setState(request.getState());\n+    subClusterInfo.setCapability(request.getCapability());\n+\n+    putSubclusterInfo(subClusterId, subClusterInfo, true);\n+\n+    return SubClusterHeartbeatResponse.newInstance();\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public SubClusterHeartbeatResponse subClusterHeartbeat(\n      SubClusterHeartbeatRequest request) throws YarnException {\n\n    FederationMembershipStateStoreInputValidator.validate(request);\n    SubClusterId subClusterId \u003d request.getSubClusterId();\n\n    SubClusterInfo subClusterInfo \u003d getSubclusterInfo(subClusterId);\n    if (subClusterInfo \u003d\u003d null) {\n      String errMsg \u003d \"SubCluster \" + subClusterId\n          + \" does not exist; cannot heartbeat\";\n      FederationStateStoreUtils.logAndThrowStoreException(LOG, errMsg);\n    }\n\n    long currentTime \u003d getCurrentTime();\n    subClusterInfo.setLastHeartBeat(currentTime);\n    subClusterInfo.setState(request.getState());\n    subClusterInfo.setCapability(request.getCapability());\n\n    putSubclusterInfo(subClusterId, subClusterInfo, true);\n\n    return SubClusterHeartbeatResponse.newInstance();\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-common/src/main/java/org/apache/hadoop/yarn/server/federation/store/impl/ZookeeperFederationStateStore.java"
    }
  }
}