{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSystemAccessService.java",
  "functionName": "createFileSystem",
  "functionId": "createFileSystem___namenodeConf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/hadoop/FileSystemAccessService.java",
  "functionStartLine": 297,
  "functionEndLine": 308,
  "numCommitsSeen": 14,
  "timeTaken": 966,
  "changeHistory": [
    "8a40953058d50d421d62b71067a13b626b3cba1f",
    "fe17d871d0ad4a71aa009d10499ac5d8174e7788",
    "3334306512b5dc932814fded31a89ba1ee97cd9f"
  ],
  "changeHistoryShort": {
    "8a40953058d50d421d62b71067a13b626b3cba1f": "Ybodychange",
    "fe17d871d0ad4a71aa009d10499ac5d8174e7788": "Ybodychange",
    "3334306512b5dc932814fded31a89ba1ee97cd9f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "8a40953058d50d421d62b71067a13b626b3cba1f": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10823. Implement HttpFSFileSystem#listStatusIterator.\n",
      "commitDate": "16/09/16 3:37 PM",
      "commitName": "8a40953058d50d421d62b71067a13b626b3cba1f",
      "commitAuthor": "Andrew Wang",
      "commitDateOld": "02/03/15 9:17 PM",
      "commitNameOld": "d1c6accb6f87b08975175580e15f1ff1fe29ab04",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 563.72,
      "commitsBetweenForRepo": 4253,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,12 @@\n   protected FileSystem createFileSystem(Configuration namenodeConf)\n     throws IOException {\n     String user \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n     CachedFileSystem newCachedFS \u003d new CachedFileSystem(purgeTimeout);\n     CachedFileSystem cachedFS \u003d fsCache.putIfAbsent(user, newCachedFS);\n     if (cachedFS \u003d\u003d null) {\n       cachedFS \u003d newCachedFS;\n     }\n     Configuration conf \u003d new Configuration(namenodeConf);\n     conf.set(HTTPFS_FS_USER, user);\n-    return cachedFS.getFileSytem(conf);\n+    return cachedFS.getFileSystem(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected FileSystem createFileSystem(Configuration namenodeConf)\n    throws IOException {\n    String user \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    CachedFileSystem newCachedFS \u003d new CachedFileSystem(purgeTimeout);\n    CachedFileSystem cachedFS \u003d fsCache.putIfAbsent(user, newCachedFS);\n    if (cachedFS \u003d\u003d null) {\n      cachedFS \u003d newCachedFS;\n    }\n    Configuration conf \u003d new Configuration(namenodeConf);\n    conf.set(HTTPFS_FS_USER, user);\n    return cachedFS.getFileSystem(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/hadoop/FileSystemAccessService.java",
      "extendedDetails": {}
    },
    "fe17d871d0ad4a71aa009d10499ac5d8174e7788": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-3513. HttpFS should cache filesystems. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1368304 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "01/08/12 4:09 PM",
      "commitName": "fe17d871d0ad4a71aa009d10499ac5d8174e7788",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "18/04/12 11:51 AM",
      "commitNameOld": "8bda086d046b12e8efed834f39a775e710ca0962",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 105.18,
      "commitsBetweenForRepo": 575,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,3 +1,12 @@\n-  protected FileSystem createFileSystem(Configuration namenodeConf) throws IOException {\n-    return FileSystem.get(namenodeConf);\n+  protected FileSystem createFileSystem(Configuration namenodeConf)\n+    throws IOException {\n+    String user \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n+    CachedFileSystem newCachedFS \u003d new CachedFileSystem(purgeTimeout);\n+    CachedFileSystem cachedFS \u003d fsCache.putIfAbsent(user, newCachedFS);\n+    if (cachedFS \u003d\u003d null) {\n+      cachedFS \u003d newCachedFS;\n+    }\n+    Configuration conf \u003d new Configuration(namenodeConf);\n+    conf.set(HTTPFS_FS_USER, user);\n+    return cachedFS.getFileSytem(conf);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected FileSystem createFileSystem(Configuration namenodeConf)\n    throws IOException {\n    String user \u003d UserGroupInformation.getCurrentUser().getShortUserName();\n    CachedFileSystem newCachedFS \u003d new CachedFileSystem(purgeTimeout);\n    CachedFileSystem cachedFS \u003d fsCache.putIfAbsent(user, newCachedFS);\n    if (cachedFS \u003d\u003d null) {\n      cachedFS \u003d newCachedFS;\n    }\n    Configuration conf \u003d new Configuration(namenodeConf);\n    conf.set(HTTPFS_FS_USER, user);\n    return cachedFS.getFileSytem(conf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/hadoop/FileSystemAccessService.java",
      "extendedDetails": {}
    },
    "3334306512b5dc932814fded31a89ba1ee97cd9f": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-2178. Contributing Hoop to HDFS, replacement for HDFS proxy with read/write capabilities. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1212060 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/12/11 11:25 AM",
      "commitName": "3334306512b5dc932814fded31a89ba1ee97cd9f",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,3 @@\n+  protected FileSystem createFileSystem(Configuration namenodeConf) throws IOException {\n+    return FileSystem.get(namenodeConf);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected FileSystem createFileSystem(Configuration namenodeConf) throws IOException {\n    return FileSystem.get(namenodeConf);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-httpfs/src/main/java/org/apache/hadoop/lib/service/hadoop/FileSystemAccessService.java"
    }
  }
}