{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "WeightedRoundRobinMultiplexer.java",
  "functionName": "advanceIndex",
  "functionId": "advanceIndex",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer.java",
  "functionStartLine": 121,
  "functionEndLine": 132,
  "numCommitsSeen": 4,
  "timeTaken": 490,
  "changeHistory": [
    "e74d99b81e57262e717d012bdb3ed793eebfb45b"
  ],
  "changeHistoryShort": {
    "e74d99b81e57262e717d012bdb3ed793eebfb45b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e74d99b81e57262e717d012bdb3ed793eebfb45b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10279. Create multiplexer, a requirement for the fair queue. (Contributed by Chris Li)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1604090 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "19/06/14 10:53 PM",
      "commitName": "e74d99b81e57262e717d012bdb3ed793eebfb45b",
      "commitAuthor": "Arpit Agarwal",
      "diff": "@@ -0,0 +1,12 @@\n+  private void advanceIndex() {\n+    // Since we did read, we should decrement\n+    int requestsLeftVal \u003d this.requestsLeft.decrementAndGet();\n+\n+    // Strict compare with zero (instead of inequality) so that if another\n+    // thread decrements requestsLeft, only one thread will be responsible\n+    // for advancing currentQueueIndex\n+    if (requestsLeftVal \u003d\u003d 0) {\n+      // This is guaranteed to be called exactly once per currentQueueIndex\n+      this.moveToNextQueue();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void advanceIndex() {\n    // Since we did read, we should decrement\n    int requestsLeftVal \u003d this.requestsLeft.decrementAndGet();\n\n    // Strict compare with zero (instead of inequality) so that if another\n    // thread decrements requestsLeft, only one thread will be responsible\n    // for advancing currentQueueIndex\n    if (requestsLeftVal \u003d\u003d 0) {\n      // This is guaranteed to be called exactly once per currentQueueIndex\n      this.moveToNextQueue();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ipc/WeightedRoundRobinMultiplexer.java"
    }
  }
}