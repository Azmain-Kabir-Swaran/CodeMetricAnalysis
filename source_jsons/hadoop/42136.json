{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RMStateStore.java",
  "functionName": "notifyStoreOperationFailedInternal",
  "functionId": "notifyStoreOperationFailedInternal___failureCause-Exception",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
  "functionStartLine": 1276,
  "functionEndLine": 1293,
  "numCommitsSeen": 132,
  "timeTaken": 5227,
  "changeHistory": [
    "166be0ee95d5ef976f074342656b289b41a11ccd",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
    "9156fc60c654e9305411686878acb443f3be1e67",
    "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
    "ee98d6354bbbcd0832d3e539ee097f837e5d0e31",
    "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
    "395275af8622c780b9071c243422b0780e096202",
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc"
  ],
  "changeHistoryShort": {
    "166be0ee95d5ef976f074342656b289b41a11ccd": "Ybodychange",
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": "Ybodychange",
    "9156fc60c654e9305411686878acb443f3be1e67": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange)",
    "9b78e6e33d8c117c1e909df414f20d9db56efe4b": "Ybodychange",
    "ee98d6354bbbcd0832d3e539ee097f837e5d0e31": "Ybodychange",
    "52bcefca8bb13d3757009f1f08203e7dca3b1e16": "Ybodychange",
    "395275af8622c780b9071c243422b0780e096202": "Ybodychange",
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0": "Ymodifierchange",
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": "Ybodychange",
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": "Yintroduced"
  },
  "changeHistoryDetails": {
    "166be0ee95d5ef976f074342656b289b41a11ccd": {
      "type": "Ybodychange",
      "commitMessage": "YARN-3742. YARN RM will shut down if ZKClient creation times out. (Daniel Templeton via kasha)\n",
      "commitDate": "09/05/17 2:44 PM",
      "commitName": "166be0ee95d5ef976f074342656b289b41a11ccd",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "14/02/17 1:39 PM",
      "commitNameOld": "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 84.0,
      "commitsBetweenForRepo": 496,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,18 @@\n   private boolean notifyStoreOperationFailedInternal(\n       Exception failureCause) {\n     boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n+\n     if (HAUtil.isHAEnabled(getConfig())) {\n-      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n+      rmDispatcher.getEventHandler().handle(\n+          new RMFatalEvent(RMFatalEventType.STATE_STORE_FENCED,\n+              failureCause));\n       isFenced \u003d true;\n-      resourceManager.handleTransitionToStandByInNewThread();\n-    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n-      LOG.fatal(\"Fail RM now due to state-store error!\");\n+    } else {\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n-    } else {\n-      LOG.warn(\"Skip the state-store error.\");\n     }\n+\n     return isFenced;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n\n    if (HAUtil.isHAEnabled(getConfig())) {\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_FENCED,\n              failureCause));\n      isFenced \u003d true;\n    } else {\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    }\n\n    return isFenced;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6061. Add an UncaughtExceptionHandler for critical threads in RM. (Yufei Gu via kasha)\n",
      "commitDate": "14/02/17 1:39 PM",
      "commitName": "652679aa8ad6f9e61b8ed8e2b04b3e0332025e94",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/01/17 6:41 PM",
      "commitNameOld": "a59df15757fac7f917cb96fc8fcfeb7017475e4f",
      "commitAuthorOld": "Naganarasimha",
      "daysBetweenCommits": 38.79,
      "commitsBetweenForRepo": 181,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,18 @@\n   private boolean notifyStoreOperationFailedInternal(\n       Exception failureCause) {\n     boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n     if (HAUtil.isHAEnabled(getConfig())) {\n       LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n       isFenced \u003d true;\n-      Thread standByTransitionThread \u003d\n-          new Thread(new StandByTransitionThread());\n-      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n-      standByTransitionThread.start();\n+      resourceManager.handleTransitionToStandByInNewThread();\n     } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n       LOG.fatal(\"Fail RM now due to state-store error!\");\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n     } else {\n       LOG.warn(\"Skip the state-store error.\");\n     }\n     return isFenced;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      isFenced \u003d true;\n      resourceManager.handleTransitionToStandByInNewThread();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n    return isFenced;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "9156fc60c654e9305411686878acb443f3be1e67": {
      "type": "Ymultichange(Yrename,Yreturntypechange,Ymodifierchange,Ybodychange)",
      "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
      "commitDate": "06/10/15 9:04 PM",
      "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
      "commitAuthor": "Rohith Sharma K S",
      "subchanges": [
        {
          "type": "Yrename",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  protected void notifyStoreOperationFailed(Exception failureCause) {\n+  private boolean notifyStoreOperationFailedInternal(\n+      Exception failureCause) {\n+    boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n     if (HAUtil.isHAEnabled(getConfig())) {\n       LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n-      updateFencedState();\n+      isFenced \u003d true;\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n       LOG.fatal(\"Fail RM now due to state-store error!\");\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n     } else {\n       LOG.warn(\"Skip the state-store error.\");\n     }\n+    return isFenced;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      isFenced \u003d true;\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n    return isFenced;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {
            "oldValue": "notifyStoreOperationFailed",
            "newValue": "notifyStoreOperationFailedInternal"
          }
        },
        {
          "type": "Yreturntypechange",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  protected void notifyStoreOperationFailed(Exception failureCause) {\n+  private boolean notifyStoreOperationFailedInternal(\n+      Exception failureCause) {\n+    boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n     if (HAUtil.isHAEnabled(getConfig())) {\n       LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n-      updateFencedState();\n+      isFenced \u003d true;\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n       LOG.fatal(\"Fail RM now due to state-store error!\");\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n     } else {\n       LOG.warn(\"Skip the state-store error.\");\n     }\n+    return isFenced;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      isFenced \u003d true;\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n    return isFenced;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {
            "oldValue": "void",
            "newValue": "boolean"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  protected void notifyStoreOperationFailed(Exception failureCause) {\n+  private boolean notifyStoreOperationFailedInternal(\n+      Exception failureCause) {\n+    boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n     if (HAUtil.isHAEnabled(getConfig())) {\n       LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n-      updateFencedState();\n+      isFenced \u003d true;\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n       LOG.fatal(\"Fail RM now due to state-store error!\");\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n     } else {\n       LOG.warn(\"Skip the state-store error.\");\n     }\n+    return isFenced;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      isFenced \u003d true;\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n    return isFenced;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {
            "oldValue": "[protected]",
            "newValue": "[private]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4209. RMStateStore FENCED state doesn’t work due to updateFencedState called by stateMachine.doTransition. (Zhihai Xu via rohithsharmaks)\n",
          "commitDate": "06/10/15 9:04 PM",
          "commitName": "9156fc60c654e9305411686878acb443f3be1e67",
          "commitAuthor": "Rohith Sharma K S",
          "commitDateOld": "07/09/15 5:45 PM",
          "commitNameOld": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
          "commitAuthorOld": "Xuan",
          "daysBetweenCommits": 29.14,
          "commitsBetweenForRepo": 215,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,18 +1,21 @@\n-  protected void notifyStoreOperationFailed(Exception failureCause) {\n+  private boolean notifyStoreOperationFailedInternal(\n+      Exception failureCause) {\n+    boolean isFenced \u003d false;\n     LOG.error(\"State store operation failed \", failureCause);\n     if (HAUtil.isHAEnabled(getConfig())) {\n       LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n-      updateFencedState();\n+      isFenced \u003d true;\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n       LOG.fatal(\"Fail RM now due to state-store error!\");\n       rmDispatcher.getEventHandler().handle(\n           new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n               failureCause));\n     } else {\n       LOG.warn(\"Skip the state-store error.\");\n     }\n+    return isFenced;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  private boolean notifyStoreOperationFailedInternal(\n      Exception failureCause) {\n    boolean isFenced \u003d false;\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      isFenced \u003d true;\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n    return isFenced;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
          "extendedDetails": {}
        }
      ]
    },
    "9b78e6e33d8c117c1e909df414f20d9db56efe4b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4087. Followup fixes after YARN-2019 regarding RM behavior when\nstate-store error occurs. Contributed by Jian He\n",
      "commitDate": "07/09/15 5:45 PM",
      "commitName": "9b78e6e33d8c117c1e909df414f20d9db56efe4b",
      "commitAuthor": "Xuan",
      "commitDateOld": "24/08/15 8:36 PM",
      "commitNameOld": "57c7ae1affb2e1821fbdc3f47738d7e6fd83c7c1",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 13.88,
      "commitsBetweenForRepo": 73,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,16 +1,18 @@\n   protected void notifyStoreOperationFailed(Exception failureCause) {\n     LOG.error(\"State store operation failed \", failureCause);\n-    if (failureCause instanceof StoreFencedException) {\n+    if (HAUtil.isHAEnabled(getConfig())) {\n+      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n       updateFencedState();\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n+    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n+      LOG.fatal(\"Fail RM now due to state-store error!\");\n+      rmDispatcher.getEventHandler().handle(\n+          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n+              failureCause));\n     } else {\n-      if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n-        rmDispatcher.getEventHandler().handle(\n-            new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n-                failureCause));\n-      }\n+      LOG.warn(\"Skip the state-store error.\");\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void notifyStoreOperationFailed(Exception failureCause) {\n    LOG.error(\"State store operation failed \", failureCause);\n    if (HAUtil.isHAEnabled(getConfig())) {\n      LOG.warn(\"State-store fenced ! Transitioning RM to standby\");\n      updateFencedState();\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n      LOG.fatal(\"Fail RM now due to state-store error!\");\n      rmDispatcher.getEventHandler().handle(\n          new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n              failureCause));\n    } else {\n      LOG.warn(\"Skip the state-store error.\");\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "ee98d6354bbbcd0832d3e539ee097f837e5d0e31": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2019. Retrospect on decision of making RM crashed if any exception throw in ZKRMStateStore. Contributed by Jian He.\n",
      "commitDate": "22/07/15 5:52 PM",
      "commitName": "ee98d6354bbbcd0832d3e539ee097f837e5d0e31",
      "commitAuthor": "Junping Du",
      "commitDateOld": "13/07/15 1:52 AM",
      "commitNameOld": "19295b36d90e26616accee73b1f7743aab5df692",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 9.67,
      "commitsBetweenForRepo": 62,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,12 +1,16 @@\n   protected void notifyStoreOperationFailed(Exception failureCause) {\n+    LOG.error(\"State store operation failed \", failureCause);\n     if (failureCause instanceof StoreFencedException) {\n       updateFencedState();\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else {\n-      rmDispatcher.getEventHandler().handle(\n-        new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED, failureCause));\n+      if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n+        rmDispatcher.getEventHandler().handle(\n+            new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n+                failureCause));\n+      }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void notifyStoreOperationFailed(Exception failureCause) {\n    LOG.error(\"State store operation failed \", failureCause);\n    if (failureCause instanceof StoreFencedException) {\n      updateFencedState();\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else {\n      if (YarnConfiguration.shouldRMFailFast(getConfig())) {\n        rmDispatcher.getEventHandler().handle(\n            new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED,\n                failureCause));\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "52bcefca8bb13d3757009f1f08203e7dca3b1e16": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2136. Changed RMStateStore to ignore store opearations when fenced. Contributed by Varun Saxena\n",
      "commitDate": "02/12/14 10:54 AM",
      "commitName": "52bcefca8bb13d3757009f1f08203e7dca3b1e16",
      "commitAuthor": "Jian He",
      "commitDateOld": "25/11/14 12:48 PM",
      "commitNameOld": "5805a81efbc024024d8172489dfdc6cf77879416",
      "commitAuthorOld": "Jian He",
      "daysBetweenCommits": 6.92,
      "commitsBetweenForRepo": 36,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,12 @@\n   protected void notifyStoreOperationFailed(Exception failureCause) {\n     if (failureCause instanceof StoreFencedException) {\n+      updateFencedState();\n       Thread standByTransitionThread \u003d\n           new Thread(new StandByTransitionThread());\n       standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n       standByTransitionThread.start();\n     } else {\n       rmDispatcher.getEventHandler().handle(\n         new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED, failureCause));\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void notifyStoreOperationFailed(Exception failureCause) {\n    if (failureCause instanceof StoreFencedException) {\n      updateFencedState();\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else {\n      rmDispatcher.getEventHandler().handle(\n        new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED, failureCause));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "395275af8622c780b9071c243422b0780e096202": {
      "type": "Ybodychange",
      "commitMessage": "YARN-2579. Fixed a deadlock issue when EmbeddedElectorService and FatalEventDispatcher try to transition RM to StandBy at the same time. Contributed by Rohith Sharmaks\n",
      "commitDate": "05/11/14 4:59 PM",
      "commitName": "395275af8622c780b9071c243422b0780e096202",
      "commitAuthor": "Jian He",
      "commitDateOld": "13/09/14 6:04 PM",
      "commitNameOld": "14e2639fd0d53f7e0b58f2f4744af44983d4e867",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 53.0,
      "commitsBetweenForRepo": 546,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,11 @@\n   protected void notifyStoreOperationFailed(Exception failureCause) {\n-    RMFatalEventType type;\n     if (failureCause instanceof StoreFencedException) {\n-      type \u003d RMFatalEventType.STATE_STORE_FENCED;\n+      Thread standByTransitionThread \u003d\n+          new Thread(new StandByTransitionThread());\n+      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n+      standByTransitionThread.start();\n     } else {\n-      type \u003d RMFatalEventType.STATE_STORE_OP_FAILED;\n+      rmDispatcher.getEventHandler().handle(\n+        new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED, failureCause));\n     }\n-    rmDispatcher.getEventHandler().handle(new RMFatalEvent(type, failureCause));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void notifyStoreOperationFailed(Exception failureCause) {\n    if (failureCause instanceof StoreFencedException) {\n      Thread standByTransitionThread \u003d\n          new Thread(new StandByTransitionThread());\n      standByTransitionThread.setName(\"StandByTransitionThread Handler\");\n      standByTransitionThread.start();\n    } else {\n      rmDispatcher.getEventHandler().handle(\n        new RMFatalEvent(RMFatalEventType.STATE_STORE_OP_FAILED, failureCause));\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "41ec3cce7698c4f6a8156cb6a20e752e25a993a0": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-1641. ZK store should attempt a write periodically to ensure it is still Active. (kasha)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1567628 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/02/14 6:09 AM",
      "commitName": "41ec3cce7698c4f6a8156cb6a20e752e25a993a0",
      "commitAuthor": "Karthik Kambatla",
      "commitDateOld": "06/01/14 5:56 PM",
      "commitNameOld": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 36.51,
      "commitsBetweenForRepo": 230,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,9 +1,9 @@\n-  private void notifyStoreOperationFailed(Exception failureCause) {\n+  protected void notifyStoreOperationFailed(Exception failureCause) {\n     RMFatalEventType type;\n     if (failureCause instanceof StoreFencedException) {\n       type \u003d RMFatalEventType.STATE_STORE_FENCED;\n     } else {\n       type \u003d RMFatalEventType.STATE_STORE_OP_FAILED;\n     }\n     rmDispatcher.getEventHandler().handle(new RMFatalEvent(type, failureCause));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void notifyStoreOperationFailed(Exception failureCause) {\n    RMFatalEventType type;\n    if (failureCause instanceof StoreFencedException) {\n      type \u003d RMFatalEventType.STATE_STORE_FENCED;\n    } else {\n      type \u003d RMFatalEventType.STATE_STORE_OP_FAILED;\n    }\n    rmDispatcher.getEventHandler().handle(new RMFatalEvent(type, failureCause));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[protected]"
      }
    },
    "c3cc855d27470edca7ca0bdc0aa8907b544b636e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1029. Added embedded leader election in the ResourceManager. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1556103 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/01/14 5:56 PM",
      "commitName": "c3cc855d27470edca7ca0bdc0aa8907b544b636e",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "commitDateOld": "18/12/13 6:33 PM",
      "commitNameOld": "93907baa0b033c1431dc7055116746fc9db508cc",
      "commitAuthorOld": "Vinod Kumar Vavilapalli",
      "daysBetweenCommits": 18.97,
      "commitsBetweenForRepo": 60,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,11 +1,9 @@\n   private void notifyStoreOperationFailed(Exception failureCause) {\n-    RMStateStoreOperationFailedEventType type;\n+    RMFatalEventType type;\n     if (failureCause instanceof StoreFencedException) {\n-      type \u003d RMStateStoreOperationFailedEventType.FENCED;\n+      type \u003d RMFatalEventType.STATE_STORE_FENCED;\n     } else {\n-      type \u003d RMStateStoreOperationFailedEventType.FAILED;\n+      type \u003d RMFatalEventType.STATE_STORE_OP_FAILED;\n     }\n-\n-    rmDispatcher.getEventHandler().handle(\n-        new RMStateStoreOperationFailedEvent(type, failureCause));\n+    rmDispatcher.getEventHandler().handle(new RMFatalEvent(type, failureCause));\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void notifyStoreOperationFailed(Exception failureCause) {\n    RMFatalEventType type;\n    if (failureCause instanceof StoreFencedException) {\n      type \u003d RMFatalEventType.STATE_STORE_FENCED;\n    } else {\n      type \u003d RMFatalEventType.STATE_STORE_OP_FAILED;\n    }\n    rmDispatcher.getEventHandler().handle(new RMFatalEvent(type, failureCause));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java",
      "extendedDetails": {}
    },
    "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1222. Make improvements in ZKRMStateStore for fencing (Karthik Kambatla via bikas)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1541995 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "14/11/13 9:53 AM",
      "commitName": "797159bbd4f80c92d8bfe6979b4dd91ce51d0afc",
      "commitAuthor": "Bikas Saha",
      "diff": "@@ -0,0 +1,11 @@\n+  private void notifyStoreOperationFailed(Exception failureCause) {\n+    RMStateStoreOperationFailedEventType type;\n+    if (failureCause instanceof StoreFencedException) {\n+      type \u003d RMStateStoreOperationFailedEventType.FENCED;\n+    } else {\n+      type \u003d RMStateStoreOperationFailedEventType.FAILED;\n+    }\n+\n+    rmDispatcher.getEventHandler().handle(\n+        new RMStateStoreOperationFailedEvent(type, failureCause));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void notifyStoreOperationFailed(Exception failureCause) {\n    RMStateStoreOperationFailedEventType type;\n    if (failureCause instanceof StoreFencedException) {\n      type \u003d RMStateStoreOperationFailedEventType.FENCED;\n    } else {\n      type \u003d RMStateStoreOperationFailedEventType.FAILED;\n    }\n\n    rmDispatcher.getEventHandler().handle(\n        new RMStateStoreOperationFailedEvent(type, failureCause));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/recovery/RMStateStore.java"
    }
  }
}