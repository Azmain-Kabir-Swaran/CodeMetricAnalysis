{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ConfiguredRMFailoverProxyProvider.java",
  "functionName": "init",
  "functionId": "init___configuration-Configuration__rmProxy-RMProxy__T____protocol-Class__T__",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java",
  "functionStartLine": 54,
  "functionEndLine": 72,
  "numCommitsSeen": 5,
  "timeTaken": 670,
  "changeHistory": [
    "ca125153b319a8f5d75585d25cb0f37ae717be01"
  ],
  "changeHistoryShort": {
    "ca125153b319a8f5d75585d25cb0f37ae717be01": "Yintroduced"
  },
  "changeHistoryDetails": {
    "ca125153b319a8f5d75585d25cb0f37ae717be01": {
      "type": "Yintroduced",
      "commitMessage": "YARN-1028. Added FailoverProxyProvider capability to ResourceManager to help with RM failover. Contributed by Karthik Kambatla.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1551739 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "17/12/13 2:32 PM",
      "commitName": "ca125153b319a8f5d75585d25cb0f37ae717be01",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,19 @@\n+  public void init(Configuration configuration, RMProxy\u003cT\u003e rmProxy,\n+                    Class\u003cT\u003e protocol) {\n+    this.rmProxy \u003d rmProxy;\n+    this.protocol \u003d protocol;\n+    this.rmProxy.checkAllowedProtocols(this.protocol);\n+    this.conf \u003d new YarnConfiguration(configuration);\n+    Collection\u003cString\u003e rmIds \u003d HAUtil.getRMHAIds(conf);\n+    this.rmServiceIds \u003d rmIds.toArray(new String[rmIds.size()]);\n+    conf.set(YarnConfiguration.RM_HA_ID, rmServiceIds[currentProxyIndex]);\n+\n+    conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY,\n+        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES,\n+            YarnConfiguration.DEFAULT_CLIENT_FAILOVER_RETRIES));\n+\n+    conf.setInt(CommonConfigurationKeysPublic.\n+        IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SOCKET_TIMEOUTS_KEY,\n+        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES_ON_SOCKET_TIMEOUTS,\n+            YarnConfiguration.DEFAULT_CLIENT_FAILOVER_RETRIES_ON_SOCKET_TIMEOUTS));\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Configuration configuration, RMProxy\u003cT\u003e rmProxy,\n                    Class\u003cT\u003e protocol) {\n    this.rmProxy \u003d rmProxy;\n    this.protocol \u003d protocol;\n    this.rmProxy.checkAllowedProtocols(this.protocol);\n    this.conf \u003d new YarnConfiguration(configuration);\n    Collection\u003cString\u003e rmIds \u003d HAUtil.getRMHAIds(conf);\n    this.rmServiceIds \u003d rmIds.toArray(new String[rmIds.size()]);\n    conf.set(YarnConfiguration.RM_HA_ID, rmServiceIds[currentProxyIndex]);\n\n    conf.setInt(CommonConfigurationKeysPublic.IPC_CLIENT_CONNECT_MAX_RETRIES_KEY,\n        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES,\n            YarnConfiguration.DEFAULT_CLIENT_FAILOVER_RETRIES));\n\n    conf.setInt(CommonConfigurationKeysPublic.\n        IPC_CLIENT_CONNECT_MAX_RETRIES_ON_SOCKET_TIMEOUTS_KEY,\n        conf.getInt(YarnConfiguration.CLIENT_FAILOVER_RETRIES_ON_SOCKET_TIMEOUTS,\n            YarnConfiguration.DEFAULT_CLIENT_FAILOVER_RETRIES_ON_SOCKET_TIMEOUTS));\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-common/src/main/java/org/apache/hadoop/yarn/client/ConfiguredRMFailoverProxyProvider.java"
    }
  }
}