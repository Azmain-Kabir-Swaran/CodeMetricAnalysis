{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ZKFailoverController.java",
  "functionName": "run",
  "functionId": "run___args-String[](modifiers-final)",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
  "functionStartLine": 165,
  "functionEndLine": 191,
  "numCommitsSeen": 35,
  "timeTaken": 2007,
  "changeHistory": [
    "4b00c9a47f94c4d7c673710bbb3b85b5d2807e7b",
    "ccaf036662e22da14583942054898c99fa51dae5",
    "bb9ddef0e7603b60d25250bb53a7ae9f147cd3cd",
    "7b1d347b43cc0c49bdf6e72d377fad5789013e71",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7",
    "578f413778a6f005a35d18d7f015df128aeded5b"
  ],
  "changeHistoryShort": {
    "4b00c9a47f94c4d7c673710bbb3b85b5d2807e7b": "Ybodychange",
    "ccaf036662e22da14583942054898c99fa51dae5": "Ybodychange",
    "bb9ddef0e7603b60d25250bb53a7ae9f147cd3cd": "Ybodychange",
    "7b1d347b43cc0c49bdf6e72d377fad5789013e71": "Ybodychange",
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": "Ybodychange",
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7": "Ybodychange",
    "578f413778a6f005a35d18d7f015df128aeded5b": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4b00c9a47f94c4d7c673710bbb3b85b5d2807e7b": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-12683. DFSZKFailOverController re-order logic for logging Exception. Contributed by Bharat Viswanadham.\n",
      "commitDate": "23/10/17 10:47 AM",
      "commitName": "4b00c9a47f94c4d7c673710bbb3b85b5d2807e7b",
      "commitAuthor": "Arpit Agarwal",
      "commitDateOld": "17/07/17 9:32 PM",
      "commitNameOld": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthorOld": "Akira Ajisaka",
      "daysBetweenCommits": 97.55,
      "commitsBetweenForRepo": 816,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,27 @@\n   public int run(final String[] args) throws Exception {\n     if (!localTarget.isAutoFailoverEnabled()) {\n       LOG.error(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n           \" Please ensure that automatic failover is enabled in the \" +\n           \"configuration before running the ZK failover controller.\");\n       return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n     }\n     loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n           } finally {\n             if (elector !\u003d null) {\n               elector.terminateConnection();\n             }\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n-      LOG.error(\"The failover controller encounters runtime error: \" + rte);\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    if (!localTarget.isAutoFailoverEnabled()) {\n      LOG.error(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n          \" Please ensure that automatic failover is enabled in the \" +\n          \"configuration before running the ZK failover controller.\");\n      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n    }\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          } finally {\n            if (elector !\u003d null) {\n              elector.terminateConnection();\n            }\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "ccaf036662e22da14583942054898c99fa51dae5": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14539. Move commons logging APIs over to slf4j in hadoop-common. Contributed by Wenxin He.\n",
      "commitDate": "17/07/17 9:32 PM",
      "commitName": "ccaf036662e22da14583942054898c99fa51dae5",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "24/03/17 6:06 PM",
      "commitNameOld": "84ddedc0b2d58257d45c16ee5e83b15f94a7ba3a",
      "commitAuthorOld": "Tsuyoshi Ozawa",
      "daysBetweenCommits": 115.14,
      "commitsBetweenForRepo": 594,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,28 +1,28 @@\n   public int run(final String[] args) throws Exception {\n     if (!localTarget.isAutoFailoverEnabled()) {\n-      LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n+      LOG.error(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n           \" Please ensure that automatic failover is enabled in the \" +\n           \"configuration before running the ZK failover controller.\");\n       return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n     }\n     loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n           } finally {\n             if (elector !\u003d null) {\n               elector.terminateConnection();\n             }\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n-      LOG.fatal(\"The failover controller encounters runtime error: \" + rte);\n+      LOG.error(\"The failover controller encounters runtime error: \" + rte);\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    if (!localTarget.isAutoFailoverEnabled()) {\n      LOG.error(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n          \" Please ensure that automatic failover is enabled in the \" +\n          \"configuration before running the ZK failover controller.\");\n      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n    }\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          } finally {\n            if (elector !\u003d null) {\n              elector.terminateConnection();\n            }\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      LOG.error(\"The failover controller encounters runtime error: \" + rte);\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "bb9ddef0e7603b60d25250bb53a7ae9f147cd3cd": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-11328. ZKFailoverController does not log Exception when doRun raises errors. Contributed by Tianyin Xu.\n",
      "commitDate": "04/05/15 1:47 AM",
      "commitName": "bb9ddef0e7603b60d25250bb53a7ae9f147cd3cd",
      "commitAuthor": "Tsuyoshi Ozawa",
      "commitDateOld": "19/01/15 11:28 AM",
      "commitNameOld": "7fc1f2f5cf4312d72aeffb1a9cef497d00c60adb",
      "commitAuthorOld": "cnauroth",
      "daysBetweenCommits": 104.55,
      "commitsBetweenForRepo": 947,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,27 +1,28 @@\n   public int run(final String[] args) throws Exception {\n     if (!localTarget.isAutoFailoverEnabled()) {\n       LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n           \" Please ensure that automatic failover is enabled in the \" +\n           \"configuration before running the ZK failover controller.\");\n       return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n     }\n     loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n           } finally {\n             if (elector !\u003d null) {\n               elector.terminateConnection();\n             }\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n+      LOG.fatal(\"The failover controller encounters runtime error: \" + rte);\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    if (!localTarget.isAutoFailoverEnabled()) {\n      LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n          \" Please ensure that automatic failover is enabled in the \" +\n          \"configuration before running the ZK failover controller.\");\n      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n    }\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          } finally {\n            if (elector !\u003d null) {\n              elector.terminateConnection();\n            }\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      LOG.fatal(\"The failover controller encounters runtime error: \" + rte);\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "7b1d347b43cc0c49bdf6e72d377fad5789013e71": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8405. ZKFC tests leak ZK instances. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1339435 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/05/12 5:38 PM",
      "commitName": "7b1d347b43cc0c49bdf6e72d377fad5789013e71",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "15/05/12 11:16 AM",
      "commitNameOld": "52ecdb751e8b9e37e960ed07e51fdf25b980d2d5",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 1.27,
      "commitsBetweenForRepo": 11,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,27 @@\n   public int run(final String[] args) throws Exception {\n     if (!localTarget.isAutoFailoverEnabled()) {\n       LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n           \" Please ensure that automatic failover is enabled in the \" +\n           \"configuration before running the ZK failover controller.\");\n       return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n     }\n     loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n+          } finally {\n+            if (elector !\u003d null) {\n+              elector.terminateConnection();\n+            }\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    if (!localTarget.isAutoFailoverEnabled()) {\n      LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n          \" Please ensure that automatic failover is enabled in the \" +\n          \"configuration before running the ZK failover controller.\");\n      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n    }\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          } finally {\n            if (elector !\u003d null) {\n              elector.terminateConnection();\n            }\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "41a014c31b3e435354a25d4b7d53f0bd2cede9a1": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8247. Add a config to enable auto-HA, which disables manual FailoverController. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1324566 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "10/04/12 10:40 PM",
      "commitName": "41a014c31b3e435354a25d4b7d53f0bd2cede9a1",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "07/04/12 4:24 PM",
      "commitNameOld": "693ec453d2b8a07dede2b931d698c702e12fc935",
      "commitAuthorOld": "Todd Lipcon",
      "daysBetweenCommits": 3.26,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,17 +1,23 @@\n   public int run(final String[] args) throws Exception {\n+    if (!localTarget.isAutoFailoverEnabled()) {\n+      LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n+          \" Please ensure that automatic failover is enabled in the \" +\n+          \"configuration before running the ZK failover controller.\");\n+      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n+    }\n     loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    if (!localTarget.isAutoFailoverEnabled()) {\n      LOG.fatal(\"Automatic failover is not enabled for \" + localTarget + \".\" +\n          \" Please ensure that automatic failover is enabled in the \" +\n          \"configuration before running the ZK failover controller.\");\n      return ERR_CODE_AUTO_FAILOVER_NOT_ENABLED;\n    }\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "30e1b3bba856b2379a0dc1e7450512427d39c5d7": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-8215. Security support for ZK Failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/branches/HDFS-3042@1309185 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "03/04/12 4:37 PM",
      "commitName": "30e1b3bba856b2379a0dc1e7450512427d39c5d7",
      "commitAuthor": "Todd Lipcon",
      "commitDateOld": "03/04/12 2:48 PM",
      "commitNameOld": "39a5fd5c710f27db34485dcf2071351f47922952",
      "commitAuthorOld": "",
      "daysBetweenCommits": 0.08,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,17 @@\n   public int run(final String[] args) throws Exception {\n-    // TODO: need to hook DFS here to find the NN keytab info, etc,\n-    // similar to what DFSHAAdmin does. Annoying that this is in common.\n+    loginAsFCUser();\n     try {\n       return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n         @Override\n         public Integer run() {\n           try {\n             return doRun(args);\n           } catch (Exception t) {\n             throw new RuntimeException(t);\n           }\n         }\n       });\n     } catch (RuntimeException rte) {\n       throw (Exception)rte.getCause();\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    loginAsFCUser();\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java",
      "extendedDetails": {}
    },
    "578f413778a6f005a35d18d7f015df128aeded5b": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-8206. Common portion of a ZK-based failover controller. Contributed by Todd Lipcon.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1305673 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "26/03/12 4:37 PM",
      "commitName": "578f413778a6f005a35d18d7f015df128aeded5b",
      "commitAuthor": "Todd Lipcon",
      "diff": "@@ -0,0 +1,18 @@\n+  public int run(final String[] args) throws Exception {\n+    // TODO: need to hook DFS here to find the NN keytab info, etc,\n+    // similar to what DFSHAAdmin does. Annoying that this is in common.\n+    try {\n+      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n+        @Override\n+        public Integer run() {\n+          try {\n+            return doRun(args);\n+          } catch (Exception t) {\n+            throw new RuntimeException(t);\n+          }\n+        }\n+      });\n+    } catch (RuntimeException rte) {\n+      throw (Exception)rte.getCause();\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public int run(final String[] args) throws Exception {\n    // TODO: need to hook DFS here to find the NN keytab info, etc,\n    // similar to what DFSHAAdmin does. Annoying that this is in common.\n    try {\n      return SecurityUtil.doAsLoginUserOrFatal(new PrivilegedAction\u003cInteger\u003e() {\n        @Override\n        public Integer run() {\n          try {\n            return doRun(args);\n          } catch (Exception t) {\n            throw new RuntimeException(t);\n          }\n        }\n      });\n    } catch (RuntimeException rte) {\n      throw (Exception)rte.getCause();\n    }\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/ha/ZKFailoverController.java"
    }
  }
}