{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "getActualUgi",
  "functionId": "getActualUgi",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 1164,
  "functionEndLine": 1186,
  "numCommitsSeen": 71,
  "timeTaken": 3069,
  "changeHistory": [
    "51427cbdfb39cb6f5774b7b70009d7ee4388edfc",
    "32f867a6a907c05a312657139d295a92756d98ef",
    "59d78a5088700350a5122c3a3ba5e76cd26d6a80",
    "2034315763cd7b1eb77e96c719918fc14e2dabf6",
    "a46933e8ce4c1715c11e3e3283bf0e8c2b53b837",
    "d0a347984da175948b553a675dc357491df2fd0f"
  ],
  "changeHistoryShort": {
    "51427cbdfb39cb6f5774b7b70009d7ee4388edfc": "Ymodifierchange",
    "32f867a6a907c05a312657139d295a92756d98ef": "Ybodychange",
    "59d78a5088700350a5122c3a3ba5e76cd26d6a80": "Ybodychange",
    "2034315763cd7b1eb77e96c719918fc14e2dabf6": "Ybodychange",
    "a46933e8ce4c1715c11e3e3283bf0e8c2b53b837": "Ybodychange",
    "d0a347984da175948b553a675dc357491df2fd0f": "Yintroduced"
  },
  "changeHistoryDetails": {
    "51427cbdfb39cb6f5774b7b70009d7ee4388edfc": {
      "type": "Ymodifierchange",
      "commitMessage": "HADOOP-15997. KMS client uses wrong UGI after HADOOP-14445. Contributed by Wei-Chiu Chuang.\n",
      "commitDate": "04/01/19 8:19 AM",
      "commitName": "51427cbdfb39cb6f5774b7b70009d7ee4388edfc",
      "commitAuthor": "Sunil G",
      "commitDateOld": "12/10/18 9:35 AM",
      "commitNameOld": "5ec86b445cc492f52c33639efb6a09a0d2f27475",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 83.99,
      "commitsBetweenForRepo": 601,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,23 @@\n-  private UserGroupInformation getActualUgi() throws IOException {\n+  UserGroupInformation getActualUgi() throws IOException {\n     final UserGroupInformation currentUgi \u003d UserGroupInformation\n         .getCurrentUser();\n \n     UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n \n     // Use current user by default\n     UserGroupInformation actualUgi \u003d currentUgi;\n     if (currentUgi.getRealUser() !\u003d null) {\n       // Use real user for proxy user\n       actualUgi \u003d currentUgi.getRealUser();\n     }\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n         !containsKmsDt(actualUgi) \u0026\u0026 !actualUgi.shouldRelogin()) {\n       // Use login user is only necessary when Kerberos is enabled\n       // but the actual user does not have either\n       // Kerberos credential or KMS delegation token for KMS operations\n       LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n           \" does not have either KMS Delegation Token or Kerberos Credentials\");\n       actualUgi \u003d UserGroupInformation.getLoginUser();\n     }\n     return actualUgi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n\n    UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    }\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n        !containsKmsDt(actualUgi) \u0026\u0026 !actualUgi.shouldRelogin()) {\n      // Use login user is only necessary when Kerberos is enabled\n      // but the actual user does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n          \" does not have either KMS Delegation Token or Kerberos Credentials\");\n      actualUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {
        "oldValue": "[private]",
        "newValue": "[]"
      }
    },
    "32f867a6a907c05a312657139d295a92756d98ef": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-13682. Cannot create encryption zone after KMS auth token expires.\n",
      "commitDate": "20/06/18 3:58 PM",
      "commitName": "32f867a6a907c05a312657139d295a92756d98ef",
      "commitAuthor": "Xiao Chen",
      "commitDateOld": "12/05/18 10:19 AM",
      "commitNameOld": "a5449d36312c3de953e05ba8b3b5acf818a0c7e7",
      "commitAuthorOld": "Rushabh Shah",
      "daysBetweenCommits": 39.24,
      "commitsBetweenForRepo": 303,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   private UserGroupInformation getActualUgi() throws IOException {\n     final UserGroupInformation currentUgi \u003d UserGroupInformation\n         .getCurrentUser();\n \n     UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n \n     // Use current user by default\n     UserGroupInformation actualUgi \u003d currentUgi;\n     if (currentUgi.getRealUser() !\u003d null) {\n       // Use real user for proxy user\n       actualUgi \u003d currentUgi.getRealUser();\n     }\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n-        !containsKmsDt(actualUgi) \u0026\u0026\n-        !actualUgi.hasKerberosCredentials()) {\n+        !containsKmsDt(actualUgi) \u0026\u0026 !actualUgi.shouldRelogin()) {\n       // Use login user is only necessary when Kerberos is enabled\n       // but the actual user does not have either\n       // Kerberos credential or KMS delegation token for KMS operations\n       LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n           \" does not have either KMS Delegation Token or Kerberos Credentials\");\n       actualUgi \u003d UserGroupInformation.getLoginUser();\n     }\n     return actualUgi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n\n    UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    }\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n        !containsKmsDt(actualUgi) \u0026\u0026 !actualUgi.shouldRelogin()) {\n      // Use login user is only necessary when Kerberos is enabled\n      // but the actual user does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n          \" does not have either KMS Delegation Token or Kerberos Credentials\");\n      actualUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "59d78a5088700350a5122c3a3ba5e76cd26d6a80": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14987. Improve KMSClientProvider log around delegation token checking. Contributed by Xiaoyu Yao and Xiao Chen.\n",
      "commitDate": "03/11/17 4:10 PM",
      "commitName": "59d78a5088700350a5122c3a3ba5e76cd26d6a80",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "19/10/17 6:02 AM",
      "commitNameOld": "97c70c7ac6881f87eee1575bcbdd28b31ecac231",
      "commitAuthorOld": "Wei-Chiu Chuang",
      "daysBetweenCommits": 15.42,
      "commitsBetweenForRepo": 110,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,24 @@\n   private UserGroupInformation getActualUgi() throws IOException {\n     final UserGroupInformation currentUgi \u003d UserGroupInformation\n         .getCurrentUser();\n-    if (LOG.isDebugEnabled()) {\n-      UserGroupInformation.logAllUserInfo(currentUgi);\n-    }\n+\n+    UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n+\n     // Use current user by default\n     UserGroupInformation actualUgi \u003d currentUgi;\n     if (currentUgi.getRealUser() !\u003d null) {\n       // Use real user for proxy user\n       actualUgi \u003d currentUgi.getRealUser();\n     }\n     if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n         !containsKmsDt(actualUgi) \u0026\u0026\n         !actualUgi.hasKerberosCredentials()) {\n       // Use login user is only necessary when Kerberos is enabled\n       // but the actual user does not have either\n       // Kerberos credential or KMS delegation token for KMS operations\n       LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n           \" does not have either KMS Delegation Token or Kerberos Credentials\");\n       actualUgi \u003d UserGroupInformation.getLoginUser();\n     }\n     return actualUgi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n\n    UserGroupInformation.logAllUserInfo(LOG, currentUgi);\n\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    }\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n        !containsKmsDt(actualUgi) \u0026\u0026\n        !actualUgi.hasKerberosCredentials()) {\n      // Use login user is only necessary when Kerberos is enabled\n      // but the actual user does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n          \" does not have either KMS Delegation Token or Kerberos Credentials\");\n      actualUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "2034315763cd7b1eb77e96c719918fc14e2dabf6": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-14029. Fix KMSClientProvider for non-secure proxyuser use case. Contributed by Xiaoyu Yao.\n",
      "commitDate": "26/01/17 8:34 PM",
      "commitName": "2034315763cd7b1eb77e96c719918fc14e2dabf6",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "25/01/17 1:33 PM",
      "commitNameOld": "a46933e8ce4c1715c11e3e3283bf0e8c2b53b837",
      "commitAuthorOld": "Xiaoyu Yao",
      "daysBetweenCommits": 1.29,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,24 @@\n   private UserGroupInformation getActualUgi() throws IOException {\n     final UserGroupInformation currentUgi \u003d UserGroupInformation\n         .getCurrentUser();\n     if (LOG.isDebugEnabled()) {\n       UserGroupInformation.logAllUserInfo(currentUgi);\n     }\n     // Use current user by default\n     UserGroupInformation actualUgi \u003d currentUgi;\n     if (currentUgi.getRealUser() !\u003d null) {\n       // Use real user for proxy user\n       actualUgi \u003d currentUgi.getRealUser();\n     }\n-\n-    if (!containsKmsDt(actualUgi) \u0026\u0026\n+    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n+        !containsKmsDt(actualUgi) \u0026\u0026\n         !actualUgi.hasKerberosCredentials()) {\n-      // Use login user for user that does not have either\n+      // Use login user is only necessary when Kerberos is enabled\n+      // but the actual user does not have either\n       // Kerberos credential or KMS delegation token for KMS operations\n-      LOG.debug(\"using loginUser no KMS Delegation Token \"\n-          + \"no Kerberos Credentials\");\n+      LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n+          \" does not have either KMS Delegation Token or Kerberos Credentials\");\n       actualUgi \u003d UserGroupInformation.getLoginUser();\n     }\n     return actualUgi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n    if (LOG.isDebugEnabled()) {\n      UserGroupInformation.logAllUserInfo(currentUgi);\n    }\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    }\n    if (UserGroupInformation.isSecurityEnabled() \u0026\u0026\n        !containsKmsDt(actualUgi) \u0026\u0026\n        !actualUgi.hasKerberosCredentials()) {\n      // Use login user is only necessary when Kerberos is enabled\n      // but the actual user does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      LOG.debug(\"Using loginUser when Kerberos is enabled but the actual user\" +\n          \" does not have either KMS Delegation Token or Kerberos Credentials\");\n      actualUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "a46933e8ce4c1715c11e3e3283bf0e8c2b53b837": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-13988. KMSClientProvider does not work with WebHDFS and Apache Knox w/ProxyUser. Contributed by Greg Senia and Xiaoyu Yao.\n",
      "commitDate": "25/01/17 1:33 PM",
      "commitName": "a46933e8ce4c1715c11e3e3283bf0e8c2b53b837",
      "commitAuthor": "Xiaoyu Yao",
      "commitDateOld": "06/12/16 12:04 PM",
      "commitNameOld": "79d90b810c14d5e3abab75235f587663834ce36c",
      "commitAuthorOld": "Xiao Chen",
      "daysBetweenCommits": 50.06,
      "commitsBetweenForRepo": 246,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   private UserGroupInformation getActualUgi() throws IOException {\n     final UserGroupInformation currentUgi \u003d UserGroupInformation\n         .getCurrentUser();\n     if (LOG.isDebugEnabled()) {\n       UserGroupInformation.logAllUserInfo(currentUgi);\n     }\n     // Use current user by default\n     UserGroupInformation actualUgi \u003d currentUgi;\n     if (currentUgi.getRealUser() !\u003d null) {\n       // Use real user for proxy user\n       actualUgi \u003d currentUgi.getRealUser();\n-    } else if (!currentUgiContainsKmsDt() \u0026\u0026\n-        !currentUgi.hasKerberosCredentials()) {\n+    }\n+\n+    if (!containsKmsDt(actualUgi) \u0026\u0026\n+        !actualUgi.hasKerberosCredentials()) {\n       // Use login user for user that does not have either\n       // Kerberos credential or KMS delegation token for KMS operations\n-      actualUgi \u003d currentUgi.getLoginUser();\n+      LOG.debug(\"using loginUser no KMS Delegation Token \"\n+          + \"no Kerberos Credentials\");\n+      actualUgi \u003d UserGroupInformation.getLoginUser();\n     }\n     return actualUgi;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n    if (LOG.isDebugEnabled()) {\n      UserGroupInformation.logAllUserInfo(currentUgi);\n    }\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    }\n\n    if (!containsKmsDt(actualUgi) \u0026\u0026\n        !actualUgi.hasKerberosCredentials()) {\n      // Use login user for user that does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      LOG.debug(\"using loginUser no KMS Delegation Token \"\n          + \"no Kerberos Credentials\");\n      actualUgi \u003d UserGroupInformation.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "d0a347984da175948b553a675dc357491df2fd0f": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13749. KMSClientProvider combined with KeyProviderCache can result in wrong UGI being used. Contributed by Xiaoyu Yao.\n",
      "commitDate": "23/10/16 10:58 AM",
      "commitName": "d0a347984da175948b553a675dc357491df2fd0f",
      "commitAuthor": "Xiaoyu Yao",
      "diff": "@@ -0,0 +1,19 @@\n+  private UserGroupInformation getActualUgi() throws IOException {\n+    final UserGroupInformation currentUgi \u003d UserGroupInformation\n+        .getCurrentUser();\n+    if (LOG.isDebugEnabled()) {\n+      UserGroupInformation.logAllUserInfo(currentUgi);\n+    }\n+    // Use current user by default\n+    UserGroupInformation actualUgi \u003d currentUgi;\n+    if (currentUgi.getRealUser() !\u003d null) {\n+      // Use real user for proxy user\n+      actualUgi \u003d currentUgi.getRealUser();\n+    } else if (!currentUgiContainsKmsDt() \u0026\u0026\n+        !currentUgi.hasKerberosCredentials()) {\n+      // Use login user for user that does not have either\n+      // Kerberos credential or KMS delegation token for KMS operations\n+      actualUgi \u003d currentUgi.getLoginUser();\n+    }\n+    return actualUgi;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private UserGroupInformation getActualUgi() throws IOException {\n    final UserGroupInformation currentUgi \u003d UserGroupInformation\n        .getCurrentUser();\n    if (LOG.isDebugEnabled()) {\n      UserGroupInformation.logAllUserInfo(currentUgi);\n    }\n    // Use current user by default\n    UserGroupInformation actualUgi \u003d currentUgi;\n    if (currentUgi.getRealUser() !\u003d null) {\n      // Use real user for proxy user\n      actualUgi \u003d currentUgi.getRealUser();\n    } else if (!currentUgiContainsKmsDt() \u0026\u0026\n        !currentUgi.hasKerberosCredentials()) {\n      // Use login user for user that does not have either\n      // Kerberos credential or KMS delegation token for KMS operations\n      actualUgi \u003d currentUgi.getLoginUser();\n    }\n    return actualUgi;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}