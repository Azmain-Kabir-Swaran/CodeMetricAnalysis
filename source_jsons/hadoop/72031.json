{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MultiSchemeAuthenticationHandler.java",
  "functionName": "init",
  "functionId": "init___config-Properties",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/MultiSchemeAuthenticationHandler.java",
  "functionStartLine": 110,
  "functionEndLine": 143,
  "numCommitsSeen": 2,
  "timeTaken": 617,
  "changeHistory": [
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492"
  ],
  "changeHistoryShort": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": "Yintroduced"
  },
  "changeHistoryDetails": {
    "4bca385241c0fc8ff168c7b0f2984a7aed2c7492": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-12082 Support multiple authentication schemes via AuthenticationFilter\n",
      "commitDate": "18/10/16 6:32 PM",
      "commitName": "4bca385241c0fc8ff168c7b0f2984a7aed2c7492",
      "commitAuthor": "Benoy Antony",
      "diff": "@@ -0,0 +1,34 @@\n+  public void init(Properties config) throws ServletException {\n+    // Useful for debugging purpose.\n+    for (Map.Entry prop : config.entrySet()) {\n+      logger.info(\"{} : {}\", prop.getKey(), prop.getValue());\n+    }\n+\n+    this.types.clear();\n+\n+    String schemesProperty \u003d\n+        Preconditions.checkNotNull(config.getProperty(SCHEMES_PROPERTY),\n+            \"%s system property is not specified.\", SCHEMES_PROPERTY);\n+    for (String scheme : STR_SPLITTER.split(schemesProperty)) {\n+      scheme \u003d AuthenticationHandlerUtil.checkAuthScheme(scheme);\n+      if (schemeToAuthHandlerMapping.containsKey(scheme)) {\n+        throw new IllegalArgumentException(\"Handler is already specified for \"\n+            + scheme + \" authentication scheme.\");\n+      }\n+\n+      String authHandlerPropName \u003d\n+          String.format(AUTH_HANDLER_PROPERTY, scheme).toLowerCase();\n+      String authHandlerName \u003d config.getProperty(authHandlerPropName);\n+      Preconditions.checkNotNull(authHandlerName,\n+          \"No auth handler configured for scheme %s.\", scheme);\n+\n+      String authHandlerClassName \u003d\n+          AuthenticationHandlerUtil\n+              .getAuthenticationHandlerClassName(authHandlerName);\n+      AuthenticationHandler handler \u003d\n+          initializeAuthHandler(authHandlerClassName, config);\n+      schemeToAuthHandlerMapping.put(scheme, handler);\n+      types.add(handler.getType());\n+    }\n+    logger.info(\"Successfully initialized MultiSchemeAuthenticationHandler\");\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Properties config) throws ServletException {\n    // Useful for debugging purpose.\n    for (Map.Entry prop : config.entrySet()) {\n      logger.info(\"{} : {}\", prop.getKey(), prop.getValue());\n    }\n\n    this.types.clear();\n\n    String schemesProperty \u003d\n        Preconditions.checkNotNull(config.getProperty(SCHEMES_PROPERTY),\n            \"%s system property is not specified.\", SCHEMES_PROPERTY);\n    for (String scheme : STR_SPLITTER.split(schemesProperty)) {\n      scheme \u003d AuthenticationHandlerUtil.checkAuthScheme(scheme);\n      if (schemeToAuthHandlerMapping.containsKey(scheme)) {\n        throw new IllegalArgumentException(\"Handler is already specified for \"\n            + scheme + \" authentication scheme.\");\n      }\n\n      String authHandlerPropName \u003d\n          String.format(AUTH_HANDLER_PROPERTY, scheme).toLowerCase();\n      String authHandlerName \u003d config.getProperty(authHandlerPropName);\n      Preconditions.checkNotNull(authHandlerName,\n          \"No auth handler configured for scheme %s.\", scheme);\n\n      String authHandlerClassName \u003d\n          AuthenticationHandlerUtil\n              .getAuthenticationHandlerClassName(authHandlerName);\n      AuthenticationHandler handler \u003d\n          initializeAuthHandler(authHandlerClassName, config);\n      schemeToAuthHandlerMapping.put(scheme, handler);\n      types.add(handler.getType());\n    }\n    logger.info(\"Successfully initialized MultiSchemeAuthenticationHandler\");\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/server/MultiSchemeAuthenticationHandler.java"
    }
  }
}