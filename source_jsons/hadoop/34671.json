{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainerManagerImpl.java",
  "functionName": "verifyAndGetContainerTokenIdentifier",
  "functionId": "verifyAndGetContainerTokenIdentifier___token-org.apache.hadoop.yarn.api.records.Token__containerTokenIdentifier-ContainerTokenIdentifier",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
  "functionStartLine": 1221,
  "functionEndLine": 1236,
  "numCommitsSeen": 167,
  "timeTaken": 3432,
  "changeHistory": [
    "3ca3137179ef093e42cde06587c9ea785b10f32c",
    "243bcd367ff3130d74676280233041f88aca62a5"
  ],
  "changeHistoryShort": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": "Ymultichange(Yparameterchange,Ybodychange)",
    "243bcd367ff3130d74676280233041f88aca62a5": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3ca3137179ef093e42cde06587c9ea785b10f32c": {
      "type": "Ymultichange(Yparameterchange,Ybodychange)",
      "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/07/13 8:41 PM",
      "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,16 @@\n   protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n-      org.apache.hadoop.yarn.api.records.Token token) throws YarnException,\n+      org.apache.hadoop.yarn.api.records.Token token,\n+      ContainerTokenIdentifier containerTokenIdentifier) throws YarnException,\n       InvalidToken {\n-    ContainerTokenIdentifier containerTokenIdentifier \u003d null;\n-    try {\n-      containerTokenIdentifier \u003d\n-          BuilderUtils.newContainerTokenIdentifier(token);\n-    } catch (IOException e) {\n-      throw RPCUtil.getRemoteException(e);\n-    }\n     byte[] password \u003d\n         context.getContainerTokenSecretManager().retrievePassword(\n           containerTokenIdentifier);\n     byte[] tokenPass \u003d token.getPassword().array();\n     if (password \u003d\u003d null || tokenPass \u003d\u003d null\n         || !Arrays.equals(password, tokenPass)) {\n       throw new InvalidToken(\n         \"Invalid container token used for starting container on : \"\n             + context.getNodeId().toString());\n     }\n     return containerTokenIdentifier;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n      org.apache.hadoop.yarn.api.records.Token token,\n      ContainerTokenIdentifier containerTokenIdentifier) throws YarnException,\n      InvalidToken {\n    byte[] password \u003d\n        context.getContainerTokenSecretManager().retrievePassword(\n          containerTokenIdentifier);\n    byte[] tokenPass \u003d token.getPassword().array();\n    if (password \u003d\u003d null || tokenPass \u003d\u003d null\n        || !Arrays.equals(password, tokenPass)) {\n      throw new InvalidToken(\n        \"Invalid container token used for starting container on : \"\n            + context.getNodeId().toString());\n    }\n    return containerTokenIdentifier;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {
            "oldValue": "[token-org.apache.hadoop.yarn.api.records.Token]",
            "newValue": "[token-org.apache.hadoop.yarn.api.records.Token, containerTokenIdentifier-ContainerTokenIdentifier]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-926. Modified ContainerManagerProtcol APIs to take in requests for multiple containers. Contributed by Jian He.\nMAPREDUCE-5412. Update MR app to use multiple containers API of ContainerManager after YARN-926. Contributed by Jian He.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1506391 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "23/07/13 8:41 PM",
          "commitName": "3ca3137179ef093e42cde06587c9ea785b10f32c",
          "commitAuthor": "Vinod Kumar Vavilapalli",
          "commitDateOld": "17/07/13 12:31 AM",
          "commitNameOld": "c6facfb10db3f7791e35dd02d11990924a89711f",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 6.84,
          "commitsBetweenForRepo": 39,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,22 +1,16 @@\n   protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n-      org.apache.hadoop.yarn.api.records.Token token) throws YarnException,\n+      org.apache.hadoop.yarn.api.records.Token token,\n+      ContainerTokenIdentifier containerTokenIdentifier) throws YarnException,\n       InvalidToken {\n-    ContainerTokenIdentifier containerTokenIdentifier \u003d null;\n-    try {\n-      containerTokenIdentifier \u003d\n-          BuilderUtils.newContainerTokenIdentifier(token);\n-    } catch (IOException e) {\n-      throw RPCUtil.getRemoteException(e);\n-    }\n     byte[] password \u003d\n         context.getContainerTokenSecretManager().retrievePassword(\n           containerTokenIdentifier);\n     byte[] tokenPass \u003d token.getPassword().array();\n     if (password \u003d\u003d null || tokenPass \u003d\u003d null\n         || !Arrays.equals(password, tokenPass)) {\n       throw new InvalidToken(\n         \"Invalid container token used for starting container on : \"\n             + context.getNodeId().toString());\n     }\n     return containerTokenIdentifier;\n   }\n\\ No newline at end of file\n",
          "actualSource": "  protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n      org.apache.hadoop.yarn.api.records.Token token,\n      ContainerTokenIdentifier containerTokenIdentifier) throws YarnException,\n      InvalidToken {\n    byte[] password \u003d\n        context.getContainerTokenSecretManager().retrievePassword(\n          containerTokenIdentifier);\n    byte[] tokenPass \u003d token.getPassword().array();\n    if (password \u003d\u003d null || tokenPass \u003d\u003d null\n        || !Arrays.equals(password, tokenPass)) {\n      throw new InvalidToken(\n        \"Invalid container token used for starting container on : \"\n            + context.getNodeId().toString());\n    }\n    return containerTokenIdentifier;\n  }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java",
          "extendedDetails": {}
        }
      ]
    },
    "243bcd367ff3130d74676280233041f88aca62a5": {
      "type": "Yintroduced",
      "commitMessage": "YARN-694. Starting to use NMTokens to authenticate all communication with NodeManagers. Contributed by Omkar Vinit Joshi.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1494369 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "18/06/13 4:19 PM",
      "commitName": "243bcd367ff3130d74676280233041f88aca62a5",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,22 @@\n+  protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n+      org.apache.hadoop.yarn.api.records.Token token) throws YarnException,\n+      InvalidToken {\n+    ContainerTokenIdentifier containerTokenIdentifier \u003d null;\n+    try {\n+      containerTokenIdentifier \u003d\n+          BuilderUtils.newContainerTokenIdentifier(token);\n+    } catch (IOException e) {\n+      throw RPCUtil.getRemoteException(e);\n+    }\n+    byte[] password \u003d\n+        context.getContainerTokenSecretManager().retrievePassword(\n+          containerTokenIdentifier);\n+    byte[] tokenPass \u003d token.getPassword().array();\n+    if (password \u003d\u003d null || tokenPass \u003d\u003d null\n+        || !Arrays.equals(password, tokenPass)) {\n+      throw new InvalidToken(\n+        \"Invalid container token used for starting container on : \"\n+            + context.getNodeId().toString());\n+    }\n+    return containerTokenIdentifier;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected ContainerTokenIdentifier verifyAndGetContainerTokenIdentifier(\n      org.apache.hadoop.yarn.api.records.Token token) throws YarnException,\n      InvalidToken {\n    ContainerTokenIdentifier containerTokenIdentifier \u003d null;\n    try {\n      containerTokenIdentifier \u003d\n          BuilderUtils.newContainerTokenIdentifier(token);\n    } catch (IOException e) {\n      throw RPCUtil.getRemoteException(e);\n    }\n    byte[] password \u003d\n        context.getContainerTokenSecretManager().retrievePassword(\n          containerTokenIdentifier);\n    byte[] tokenPass \u003d token.getPassword().array();\n    if (password \u003d\u003d null || tokenPass \u003d\u003d null\n        || !Arrays.equals(password, tokenPass)) {\n      throw new InvalidToken(\n        \"Invalid container token used for starting container on : \"\n            + context.getNodeId().toString());\n    }\n    return containerTokenIdentifier;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/ContainerManagerImpl.java"
    }
  }
}