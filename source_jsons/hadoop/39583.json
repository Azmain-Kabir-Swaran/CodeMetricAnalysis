{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ParentQueue.java",
  "functionName": "getMinResourceNormalized",
  "functionId": "getMinResourceNormalized___name-String__effectiveMinRatio-Map__String,Float____minResource-Resource",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
  "functionStartLine": 1038,
  "functionEndLine": 1059,
  "numCommitsSeen": 85,
  "timeTaken": 1710,
  "changeHistory": [
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
    "aa3f62740f71e6e5b2a424a9f4654c1a4ba1dbe6"
  ],
  "changeHistoryShort": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": "Ybodychange",
    "aa3f62740f71e6e5b2a424a9f4654c1a4ba1dbe6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0921b706f7f80c40e061d2c0f8c8b2e4910071e5": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9037. [CSI] Ignore volume resource in resource calculators based on tags. Contributed by Sunil Govindan.\n",
      "commitDate": "07/01/19 10:30 PM",
      "commitName": "0921b706f7f80c40e061d2c0f8c8b2e4910071e5",
      "commitAuthor": "Weiwei Yang",
      "commitDateOld": "07/12/18 10:45 AM",
      "commitNameOld": "cc51607ccdf60f4ebecf7afa3e2056297ca0ac5f",
      "commitAuthorOld": "Jonathan Hung",
      "daysBetweenCommits": 31.49,
      "commitsBetweenForRepo": 185,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,22 +1,22 @@\n   private Resource getMinResourceNormalized(String name, Map\u003cString, Float\u003e effectiveMinRatio,\n       Resource minResource) {\n     Resource ret \u003d Resource.newInstance(minResource);\n-    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n     for (int i \u003d 0; i \u003c maxLength; i++) {\n       ResourceInformation nResourceInformation \u003d minResource\n           .getResourceInformation(i);\n \n       Float ratio \u003d effectiveMinRatio.get(nResourceInformation.getName());\n       if (ratio !\u003d null) {\n         ret.setResourceValue(i,\n             (long) (nResourceInformation.getValue() * ratio.floatValue()));\n         if (LOG.isDebugEnabled()) {\n           LOG.debug(\"Updating min resource for Queue: \" + name + \" as \"\n               + ret.getResourceInformation(i) + \", Actual resource: \"\n               + nResourceInformation.getValue() + \", ratio: \"\n               + ratio.floatValue());\n         }\n       }\n     }\n     return ret;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource getMinResourceNormalized(String name, Map\u003cString, Float\u003e effectiveMinRatio,\n      Resource minResource) {\n    Resource ret \u003d Resource.newInstance(minResource);\n    int maxLength \u003d ResourceUtils.getNumberOfCountableResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      ResourceInformation nResourceInformation \u003d minResource\n          .getResourceInformation(i);\n\n      Float ratio \u003d effectiveMinRatio.get(nResourceInformation.getName());\n      if (ratio !\u003d null) {\n        ret.setResourceValue(i,\n            (long) (nResourceInformation.getValue() * ratio.floatValue()));\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Updating min resource for Queue: \" + name + \" as \"\n              + ret.getResourceInformation(i) + \", Actual resource: \"\n              + nResourceInformation.getValue() + \", ratio: \"\n              + ratio.floatValue());\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java",
      "extendedDetails": {}
    },
    "aa3f62740f71e6e5b2a424a9f4654c1a4ba1dbe6": {
      "type": "Yintroduced",
      "commitMessage": "YARN-7332. Compute effectiveCapacity per each resource vector. (Sunil G via wangda)\n",
      "commitDate": "07/12/17 6:56 PM",
      "commitName": "aa3f62740f71e6e5b2a424a9f4654c1a4ba1dbe6",
      "commitAuthor": "Wangda Tan",
      "diff": "@@ -0,0 +1,22 @@\n+  private Resource getMinResourceNormalized(String name, Map\u003cString, Float\u003e effectiveMinRatio,\n+      Resource minResource) {\n+    Resource ret \u003d Resource.newInstance(minResource);\n+    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n+    for (int i \u003d 0; i \u003c maxLength; i++) {\n+      ResourceInformation nResourceInformation \u003d minResource\n+          .getResourceInformation(i);\n+\n+      Float ratio \u003d effectiveMinRatio.get(nResourceInformation.getName());\n+      if (ratio !\u003d null) {\n+        ret.setResourceValue(i,\n+            (long) (nResourceInformation.getValue() * ratio.floatValue()));\n+        if (LOG.isDebugEnabled()) {\n+          LOG.debug(\"Updating min resource for Queue: \" + name + \" as \"\n+              + ret.getResourceInformation(i) + \", Actual resource: \"\n+              + nResourceInformation.getValue() + \", ratio: \"\n+              + ratio.floatValue());\n+        }\n+      }\n+    }\n+    return ret;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private Resource getMinResourceNormalized(String name, Map\u003cString, Float\u003e effectiveMinRatio,\n      Resource minResource) {\n    Resource ret \u003d Resource.newInstance(minResource);\n    int maxLength \u003d ResourceUtils.getNumberOfKnownResourceTypes();\n    for (int i \u003d 0; i \u003c maxLength; i++) {\n      ResourceInformation nResourceInformation \u003d minResource\n          .getResourceInformation(i);\n\n      Float ratio \u003d effectiveMinRatio.get(nResourceInformation.getName());\n      if (ratio !\u003d null) {\n        ret.setResourceValue(i,\n            (long) (nResourceInformation.getValue() * ratio.floatValue()));\n        if (LOG.isDebugEnabled()) {\n          LOG.debug(\"Updating min resource for Queue: \" + name + \" as \"\n              + ret.getResourceInformation(i) + \", Actual resource: \"\n              + nResourceInformation.getValue() + \", ratio: \"\n              + ratio.floatValue());\n        }\n      }\n    }\n    return ret;\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/capacity/ParentQueue.java"
    }
  }
}