{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MutableRatesWithAggregation.java",
  "functionName": "add",
  "functionId": "add___name-String__elapsed-long",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java",
  "functionStartLine": 99,
  "functionEndLine": 113,
  "numCommitsSeen": 5,
  "timeTaken": 563,
  "changeHistory": [
    "77c13c385774c51766fe505397fa916754ac08d4"
  ],
  "changeHistoryShort": {
    "77c13c385774c51766fe505397fa916754ac08d4": "Yintroduced"
  },
  "changeHistoryDetails": {
    "77c13c385774c51766fe505397fa916754ac08d4": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-13782. Make MutableRates metrics thread-local write, aggregate-on-read. Contributed by Erik Krogen.\n",
      "commitDate": "08/11/16 4:07 PM",
      "commitName": "77c13c385774c51766fe505397fa916754ac08d4",
      "commitAuthor": "Zhe Zhang",
      "diff": "@@ -0,0 +1,15 @@\n+  public void add(String name, long elapsed) {\n+    ConcurrentMap\u003cString, ThreadSafeSampleStat\u003e localStats \u003d\n+        threadLocalMetricsMap.get();\n+    if (localStats \u003d\u003d null) {\n+      localStats \u003d new ConcurrentHashMap\u003c\u003e();\n+      threadLocalMetricsMap.set(localStats);\n+      weakReferenceQueue.add(new WeakReference\u003c\u003e(localStats));\n+    }\n+    ThreadSafeSampleStat stat \u003d localStats.get(name);\n+    if (stat \u003d\u003d null) {\n+      stat \u003d new ThreadSafeSampleStat();\n+      localStats.put(name, stat);\n+    }\n+    stat.add(elapsed);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void add(String name, long elapsed) {\n    ConcurrentMap\u003cString, ThreadSafeSampleStat\u003e localStats \u003d\n        threadLocalMetricsMap.get();\n    if (localStats \u003d\u003d null) {\n      localStats \u003d new ConcurrentHashMap\u003c\u003e();\n      threadLocalMetricsMap.set(localStats);\n      weakReferenceQueue.add(new WeakReference\u003c\u003e(localStats));\n    }\n    ThreadSafeSampleStat stat \u003d localStats.get(name);\n    if (stat \u003d\u003d null) {\n      stat \u003d new ThreadSafeSampleStat();\n      localStats.put(name, stat);\n    }\n    stat.add(elapsed);\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/metrics2/lib/MutableRatesWithAggregation.java"
    }
  }
}