{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "RouterFsck.java",
  "functionName": "remoteFsck",
  "functionId": "remoteFsck___nn-MembershipState",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterFsck.java",
  "functionStartLine": 126,
  "functionEndLine": 143,
  "numCommitsSeen": 2,
  "timeTaken": 442,
  "changeHistory": [
    "0ddb5f0881dee26d9258b3d5f4e0ac3733727820"
  ],
  "changeHistoryShort": {
    "0ddb5f0881dee26d9258b3d5f4e0ac3733727820": "Yintroduced"
  },
  "changeHistoryDetails": {
    "0ddb5f0881dee26d9258b3d5f4e0ac3733727820": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-13989. RBF: Add FSCK to the Router (#1832)\n\n\r\nCo-authored-by: Inigo Goiri \u003cinigoiri@apache.org\u003e",
      "commitDate": "12/02/20 5:06 PM",
      "commitName": "0ddb5f0881dee26d9258b3d5f4e0ac3733727820",
      "commitAuthor": "Akira Ajisaka",
      "diff": "@@ -0,0 +1,18 @@\n+  private void remoteFsck(MembershipState nn) throws IOException {\n+    final String scheme \u003d nn.getWebScheme();\n+    final String webAddress \u003d nn.getWebAddress();\n+    final String args \u003d getURLArguments(pmap);\n+    final URL url \u003d new URL(scheme + \"://\" + webAddress + \"/fsck?\" + args);\n+\n+    // Connect to the Namenode and output\n+    final URLConnection conn \u003d url.openConnection();\n+    try (InputStream is \u003d conn.getInputStream();\n+         InputStreamReader isr \u003d\n+             new InputStreamReader(is, StandardCharsets.UTF_8);\n+         BufferedReader br \u003d new BufferedReader(isr)) {\n+      String line;\n+      while ((line \u003d br.readLine()) !\u003d null) {\n+        out.write(line + \"\\n\");\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void remoteFsck(MembershipState nn) throws IOException {\n    final String scheme \u003d nn.getWebScheme();\n    final String webAddress \u003d nn.getWebAddress();\n    final String args \u003d getURLArguments(pmap);\n    final URL url \u003d new URL(scheme + \"://\" + webAddress + \"/fsck?\" + args);\n\n    // Connect to the Namenode and output\n    final URLConnection conn \u003d url.openConnection();\n    try (InputStream is \u003d conn.getInputStream();\n         InputStreamReader isr \u003d\n             new InputStreamReader(is, StandardCharsets.UTF_8);\n         BufferedReader br \u003d new BufferedReader(isr)) {\n      String line;\n      while ((line \u003d br.readLine()) !\u003d null) {\n        out.write(line + \"\\n\");\n      }\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs-rbf/src/main/java/org/apache/hadoop/hdfs/server/federation/router/RouterFsck.java"
    }
  }
}