{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DefaultContainerExecutor.java",
  "functionName": "writeLocalWrapperScript",
  "functionId": "writeLocalWrapperScript___launchDst-Path__pidFile-Path__pout-PrintStream",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
  "functionStartLine": 553,
  "functionEndLine": 566,
  "numCommitsSeen": 66,
  "timeTaken": 2567,
  "changeHistory": [
    "c2febdcbaa12078db42403fe8fd74180fb58a84b",
    "638801cce16fc1dc3259c541dc30a599faaddda1",
    "9ef3b2eb60b2c773d35896225d051b523e406ae2",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "2fe343f96348e894e6ed16c447c8c77ba1611d11"
  ],
  "changeHistoryShort": {
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": "Ybodychange",
    "638801cce16fc1dc3259c541dc30a599faaddda1": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
    "9ef3b2eb60b2c773d35896225d051b523e406ae2": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "2fe343f96348e894e6ed16c447c8c77ba1611d11": "Yintroduced"
  },
  "changeHistoryDetails": {
    "c2febdcbaa12078db42403fe8fd74180fb58a84b": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1337. Recover containers upon nodemanager restart. (Contributed by Jason Lowe)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1617448 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/08/14 3:56 AM",
      "commitName": "c2febdcbaa12078db42403fe8fd74180fb58a84b",
      "commitAuthor": "Junping Du",
      "commitDateOld": "21/07/14 8:01 PM",
      "commitNameOld": "537c361f5bc888dd74fbe59afe18d08d0746894f",
      "commitAuthorOld": "Junping Du",
      "daysBetweenCommits": 21.33,
      "commitsBetweenForRepo": 155,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,13 +1,14 @@\n     public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n         PrintStream pout) {\n+      // TODO: exit code script for Windows\n \n       // On Windows, the pid is the container ID, so that it can also serve as\n       // the name of the job object created by winutils for task management.\n       // Write to temp file followed by atomic move.\n       String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n       pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n         \".tmp\");\n       pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n         normalizedPidFile);\n       pout.println(\"@call \" + launchDst.toString());\n     }\n\\ No newline at end of file\n",
      "actualSource": "    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n        PrintStream pout) {\n      // TODO: exit code script for Windows\n\n      // On Windows, the pid is the container ID, so that it can also serve as\n      // the name of the job object created by winutils for task management.\n      // Write to temp file followed by atomic move.\n      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n        \".tmp\");\n      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n        normalizedPidFile);\n      pout.println(\"@call \" + launchDst.toString());\n    }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "638801cce16fc1dc3259c541dc30a599faaddda1": {
      "type": "Ymultichange(Yparameterchange,Ymodifierchange,Yexceptionschange,Ybodychange)",
      "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "06/03/13 11:15 AM",
      "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
      "commitAuthor": "Suresh Srinivas",
      "subchanges": [
        {
          "type": "Yparameterchange",
          "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/13 11:15 AM",
          "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/01/13 5:20 AM",
          "commitNameOld": "9385dd50c7f21dae40f0c341e2ca89246604e41a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 57.25,
          "commitsBetweenForRepo": 261,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n-  private void writeLocalWrapperScript(DataOutputStream out,\n-      String launchScriptDst, String pidFilePath) throws IOException {\n-    // We need to do a move as writing to a file is not atomic\n-    // Process reading a file being written to may get garbled data\n-    // hence write pid to tmp file first followed by a mv\n-    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n-    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n-    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n-    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n-    sb.append(\" /bin/bash \");\n-    sb.append(\"\\\"\");\n-    sb.append(launchScriptDst);\n-    sb.append(\"\\\"\\n\");\n-    PrintStream pout \u003d null;\n-    try {\n-      pout \u003d new PrintStream(out);\n-      pout.append(sb);\n-    } finally {\n-      if (out !\u003d null) {\n-        out.close();\n-      }\n-    }\n-  }\n\\ No newline at end of file\n+    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n+        PrintStream pout) {\n+\n+      // On Windows, the pid is the container ID, so that it can also serve as\n+      // the name of the job object created by winutils for task management.\n+      // Write to temp file followed by atomic move.\n+      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n+      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n+        \".tmp\");\n+      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n+        normalizedPidFile);\n+      pout.println(\"@call \" + launchDst.toString());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n        PrintStream pout) {\n\n      // On Windows, the pid is the container ID, so that it can also serve as\n      // the name of the job object created by winutils for task management.\n      // Write to temp file followed by atomic move.\n      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n        \".tmp\");\n      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n        normalizedPidFile);\n      pout.println(\"@call \" + launchDst.toString());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[out-DataOutputStream, launchScriptDst-String, pidFilePath-String]",
            "newValue": "[launchDst-Path, pidFile-Path, pout-PrintStream]"
          }
        },
        {
          "type": "Ymodifierchange",
          "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/13 11:15 AM",
          "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/01/13 5:20 AM",
          "commitNameOld": "9385dd50c7f21dae40f0c341e2ca89246604e41a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 57.25,
          "commitsBetweenForRepo": 261,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n-  private void writeLocalWrapperScript(DataOutputStream out,\n-      String launchScriptDst, String pidFilePath) throws IOException {\n-    // We need to do a move as writing to a file is not atomic\n-    // Process reading a file being written to may get garbled data\n-    // hence write pid to tmp file first followed by a mv\n-    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n-    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n-    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n-    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n-    sb.append(\" /bin/bash \");\n-    sb.append(\"\\\"\");\n-    sb.append(launchScriptDst);\n-    sb.append(\"\\\"\\n\");\n-    PrintStream pout \u003d null;\n-    try {\n-      pout \u003d new PrintStream(out);\n-      pout.append(sb);\n-    } finally {\n-      if (out !\u003d null) {\n-        out.close();\n-      }\n-    }\n-  }\n\\ No newline at end of file\n+    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n+        PrintStream pout) {\n+\n+      // On Windows, the pid is the container ID, so that it can also serve as\n+      // the name of the job object created by winutils for task management.\n+      // Write to temp file followed by atomic move.\n+      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n+      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n+        \".tmp\");\n+      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n+        normalizedPidFile);\n+      pout.println(\"@call \" + launchDst.toString());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n        PrintStream pout) {\n\n      // On Windows, the pid is the container ID, so that it can also serve as\n      // the name of the job object created by winutils for task management.\n      // Write to temp file followed by atomic move.\n      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n        \".tmp\");\n      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n        normalizedPidFile);\n      pout.println(\"@call \" + launchDst.toString());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[private]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Yexceptionschange",
          "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/13 11:15 AM",
          "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/01/13 5:20 AM",
          "commitNameOld": "9385dd50c7f21dae40f0c341e2ca89246604e41a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 57.25,
          "commitsBetweenForRepo": 261,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n-  private void writeLocalWrapperScript(DataOutputStream out,\n-      String launchScriptDst, String pidFilePath) throws IOException {\n-    // We need to do a move as writing to a file is not atomic\n-    // Process reading a file being written to may get garbled data\n-    // hence write pid to tmp file first followed by a mv\n-    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n-    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n-    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n-    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n-    sb.append(\" /bin/bash \");\n-    sb.append(\"\\\"\");\n-    sb.append(launchScriptDst);\n-    sb.append(\"\\\"\\n\");\n-    PrintStream pout \u003d null;\n-    try {\n-      pout \u003d new PrintStream(out);\n-      pout.append(sb);\n-    } finally {\n-      if (out !\u003d null) {\n-        out.close();\n-      }\n-    }\n-  }\n\\ No newline at end of file\n+    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n+        PrintStream pout) {\n+\n+      // On Windows, the pid is the container ID, so that it can also serve as\n+      // the name of the job object created by winutils for task management.\n+      // Write to temp file followed by atomic move.\n+      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n+      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n+        \".tmp\");\n+      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n+        normalizedPidFile);\n+      pout.println(\"@call \" + launchDst.toString());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n        PrintStream pout) {\n\n      // On Windows, the pid is the container ID, so that it can also serve as\n      // the name of the job object created by winutils for task management.\n      // Write to temp file followed by atomic move.\n      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n        \".tmp\");\n      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n        normalizedPidFile);\n      pout.println(\"@call \" + launchDst.toString());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {
            "oldValue": "[IOException]",
            "newValue": "[]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HADOOP-8952. Enhancements to support Hadoop on Windows Server and Windows Azure environments. Contributed by Ivan Mitic, Chuan Liu, Ramya Sunil, Bikas Saha, Kanna Karanam, John Gordon, Brandon Li, Chris Nauroth, David Lao, Sumadhur Reddy Bolli, Arpit Agarwal, Ahmed El Baz, Mike Liddell, Jing Zhao, Thejas Nair, Steve Maine, Ganeshan Iyer, Raja Aluri, Giridharan Kesavan, Ramya Bharathi Nimmagadda.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1453486 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "06/03/13 11:15 AM",
          "commitName": "638801cce16fc1dc3259c541dc30a599faaddda1",
          "commitAuthor": "Suresh Srinivas",
          "commitDateOld": "08/01/13 5:20 AM",
          "commitNameOld": "9385dd50c7f21dae40f0c341e2ca89246604e41a",
          "commitAuthorOld": "Vinod Kumar Vavilapalli",
          "daysBetweenCommits": 57.25,
          "commitsBetweenForRepo": 261,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,23 +1,13 @@\n-  private void writeLocalWrapperScript(DataOutputStream out,\n-      String launchScriptDst, String pidFilePath) throws IOException {\n-    // We need to do a move as writing to a file is not atomic\n-    // Process reading a file being written to may get garbled data\n-    // hence write pid to tmp file first followed by a mv\n-    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n-    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n-    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n-    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n-    sb.append(\" /bin/bash \");\n-    sb.append(\"\\\"\");\n-    sb.append(launchScriptDst);\n-    sb.append(\"\\\"\\n\");\n-    PrintStream pout \u003d null;\n-    try {\n-      pout \u003d new PrintStream(out);\n-      pout.append(sb);\n-    } finally {\n-      if (out !\u003d null) {\n-        out.close();\n-      }\n-    }\n-  }\n\\ No newline at end of file\n+    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n+        PrintStream pout) {\n+\n+      // On Windows, the pid is the container ID, so that it can also serve as\n+      // the name of the job object created by winutils for task management.\n+      // Write to temp file followed by atomic move.\n+      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n+      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n+        \".tmp\");\n+      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n+        normalizedPidFile);\n+      pout.println(\"@call \" + launchDst.toString());\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void writeLocalWrapperScript(Path launchDst, Path pidFile,\n        PrintStream pout) {\n\n      // On Windows, the pid is the container ID, so that it can also serve as\n      // the name of the job object created by winutils for task management.\n      // Write to temp file followed by atomic move.\n      String normalizedPidFile \u003d new File(pidFile.toString()).getPath();\n      pout.println(\"@echo \" + containerIdStr + \" \u003e \" + normalizedPidFile +\n        \".tmp\");\n      pout.println(\"@move /Y \" + normalizedPidFile + \".tmp \" +\n        normalizedPidFile);\n      pout.println(\"@call \" + launchDst.toString());\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
          "extendedDetails": {}
        }
      ]
    },
    "9ef3b2eb60b2c773d35896225d051b523e406ae2": {
      "type": "Ybodychange",
      "commitMessage": "MAPREDUCE-2374. \"Text File Busy\" errors launching MR tasks. Contributed by Andy Isaacson.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1376632 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "23/08/12 11:24 AM",
      "commitName": "9ef3b2eb60b2c773d35896225d051b523e406ae2",
      "commitAuthor": "Aaron Myers",
      "commitDateOld": "07/08/12 10:22 PM",
      "commitNameOld": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthorOld": "Arun Murthy",
      "daysBetweenCommits": 15.54,
      "commitsBetweenForRepo": 98,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,24 +1,23 @@\n   private void writeLocalWrapperScript(DataOutputStream out,\n       String launchScriptDst, String pidFilePath) throws IOException {\n     // We need to do a move as writing to a file is not atomic\n     // Process reading a file being written to may get garbled data\n     // hence write pid to tmp file first followed by a mv\n     StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n     sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n     sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n     sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n     sb.append(\" /bin/bash \");\n-    sb.append(\"-c \");\n     sb.append(\"\\\"\");\n     sb.append(launchScriptDst);\n     sb.append(\"\\\"\\n\");\n     PrintStream pout \u003d null;\n     try {\n       pout \u003d new PrintStream(out);\n       pout.append(sb);\n     } finally {\n       if (out !\u003d null) {\n         out.close();\n       }\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeLocalWrapperScript(DataOutputStream out,\n      String launchScriptDst, String pidFilePath) throws IOException {\n    // We need to do a move as writing to a file is not atomic\n    // Process reading a file being written to may get garbled data\n    // hence write pid to tmp file first followed by a mv\n    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n    sb.append(\" /bin/bash \");\n    sb.append(\"\\\"\");\n    sb.append(launchScriptDst);\n    sb.append(\"\\\"\\n\");\n    PrintStream pout \u003d null;\n    try {\n      pout \u003d new PrintStream(out);\n      pout.append(sb);\n    } finally {\n      if (out !\u003d null) {\n        out.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  private void writeLocalWrapperScript(DataOutputStream out,\n      String launchScriptDst, String pidFilePath) throws IOException {\n    // We need to do a move as writing to a file is not atomic\n    // Process reading a file being written to may get garbled data\n    // hence write pid to tmp file first followed by a mv\n    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n    sb.append(\" /bin/bash \");\n    sb.append(\"-c \");\n    sb.append(\"\\\"\");\n    sb.append(launchScriptDst);\n    sb.append(\"\\\"\\n\");\n    PrintStream pout \u003d null;\n    try {\n      pout \u003d new PrintStream(out);\n      pout.append(sb);\n    } finally {\n      if (out !\u003d null) {\n        out.close();\n      }\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
      }
    },
    "2fe343f96348e894e6ed16c447c8c77ba1611d11": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3240. Fixed NodeManager to be able to forcefully cleanup its containers (process-trees) irrespective of whether the container succeeded, or killed. Contributed by Hitesh Shah.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1189711 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "27/10/11 5:03 AM",
      "commitName": "2fe343f96348e894e6ed16c447c8c77ba1611d11",
      "commitAuthor": "Vinod Kumar Vavilapalli",
      "diff": "@@ -0,0 +1,24 @@\n+  private void writeLocalWrapperScript(DataOutputStream out,\n+      String launchScriptDst, String pidFilePath) throws IOException {\n+    // We need to do a move as writing to a file is not atomic\n+    // Process reading a file being written to may get garbled data\n+    // hence write pid to tmp file first followed by a mv\n+    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n+    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n+    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n+    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n+    sb.append(\" /bin/bash \");\n+    sb.append(\"-c \");\n+    sb.append(\"\\\"\");\n+    sb.append(launchScriptDst);\n+    sb.append(\"\\\"\\n\");\n+    PrintStream pout \u003d null;\n+    try {\n+      pout \u003d new PrintStream(out);\n+      pout.append(sb);\n+    } finally {\n+      if (out !\u003d null) {\n+        out.close();\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private void writeLocalWrapperScript(DataOutputStream out,\n      String launchScriptDst, String pidFilePath) throws IOException {\n    // We need to do a move as writing to a file is not atomic\n    // Process reading a file being written to may get garbled data\n    // hence write pid to tmp file first followed by a mv\n    StringBuilder sb \u003d new StringBuilder(\"#!/bin/bash\\n\\n\");\n    sb.append(\"echo $$ \u003e \" + pidFilePath + \".tmp\\n\");\n    sb.append(\"/bin/mv -f \" + pidFilePath + \".tmp \" + pidFilePath + \"\\n\");\n    sb.append(ContainerExecutor.isSetsidAvailable? \"exec setsid\" : \"exec\");\n    sb.append(\" /bin/bash \");\n    sb.append(\"-c \");\n    sb.append(\"\\\"\");\n    sb.append(launchScriptDst);\n    sb.append(\"\\\"\\n\");\n    PrintStream pout \u003d null;\n    try {\n      pout \u003d new PrintStream(out);\n      pout.append(sb);\n    } finally {\n      if (out !\u003d null) {\n        out.close();\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/DefaultContainerExecutor.java"
    }
  }
}