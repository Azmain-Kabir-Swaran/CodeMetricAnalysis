{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "KMSClientProvider.java",
  "functionName": "createKeySets",
  "functionId": "createKeySets___keyNames-String[]",
  "sourceFilePath": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
  "functionStartLine": 651,
  "functionEndLine": 670,
  "numCommitsSeen": 71,
  "timeTaken": 1661,
  "changeHistory": [
    "021ae471153ce2566924b0f6d29809669074c06d",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6"
  ],
  "changeHistoryShort": {
    "021ae471153ce2566924b0f6d29809669074c06d": "Ybodychange",
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": "Yintroduced"
  },
  "changeHistoryDetails": {
    "021ae471153ce2566924b0f6d29809669074c06d": {
      "type": "Ybodychange",
      "commitMessage": "HADOOP-10862. Miscellaneous trivial corrections to KMS classes. (asuresh via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1616903 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "08/08/14 4:10 PM",
      "commitName": "021ae471153ce2566924b0f6d29809669074c06d",
      "commitAuthor": "Alejandro Abdelnur",
      "commitDateOld": "04/08/14 7:21 PM",
      "commitNameOld": "513dc29ce833f574895a6c40036758ba16823942",
      "commitAuthorOld": "Andrew Wang",
      "daysBetweenCommits": 3.87,
      "commitsBetweenForRepo": 41,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private List\u003cString[]\u003e createKeySets(String[] keyNames) {\n     List\u003cString[]\u003e list \u003d new ArrayList\u003cString[]\u003e();\n     List\u003cString\u003e batch \u003d new ArrayList\u003cString\u003e();\n     int batchLen \u003d 0;\n     for (String name : keyNames) {\n-      int additionalLen \u003d KMSRESTConstants.KEY_OP.length() + 1 + name.length();\n+      int additionalLen \u003d KMSRESTConstants.KEY.length() + 1 + name.length();\n       batchLen +\u003d additionalLen;\n       // topping at 1500 to account for initial URL and encoded names\n       if (batchLen \u003e 1500) {\n         list.add(batch.toArray(new String[batch.size()]));\n         batch \u003d new ArrayList\u003cString\u003e();\n         batchLen \u003d additionalLen;\n       }\n       batch.add(name);\n     }\n     if (!batch.isEmpty()) {\n       list.add(batch.toArray(new String[batch.size()]));\n     }\n     return list;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString[]\u003e createKeySets(String[] keyNames) {\n    List\u003cString[]\u003e list \u003d new ArrayList\u003cString[]\u003e();\n    List\u003cString\u003e batch \u003d new ArrayList\u003cString\u003e();\n    int batchLen \u003d 0;\n    for (String name : keyNames) {\n      int additionalLen \u003d KMSRESTConstants.KEY.length() + 1 + name.length();\n      batchLen +\u003d additionalLen;\n      // topping at 1500 to account for initial URL and encoded names\n      if (batchLen \u003e 1500) {\n        list.add(batch.toArray(new String[batch.size()]));\n        batch \u003d new ArrayList\u003cString\u003e();\n        batchLen \u003d additionalLen;\n      }\n      batch.add(name);\n    }\n    if (!batch.isEmpty()) {\n      list.add(batch.toArray(new String[batch.size()]));\n    }\n    return list;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java",
      "extendedDetails": {}
    },
    "17d4fbbf0af9b93de9502afb274e91533140d1c6": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-10433. Key Management Server based on KeyProvider API. (tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1592637 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/05/14 2:43 PM",
      "commitName": "17d4fbbf0af9b93de9502afb274e91533140d1c6",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,20 @@\n+  private List\u003cString[]\u003e createKeySets(String[] keyNames) {\n+    List\u003cString[]\u003e list \u003d new ArrayList\u003cString[]\u003e();\n+    List\u003cString\u003e batch \u003d new ArrayList\u003cString\u003e();\n+    int batchLen \u003d 0;\n+    for (String name : keyNames) {\n+      int additionalLen \u003d KMSRESTConstants.KEY_OP.length() + 1 + name.length();\n+      batchLen +\u003d additionalLen;\n+      // topping at 1500 to account for initial URL and encoded names\n+      if (batchLen \u003e 1500) {\n+        list.add(batch.toArray(new String[batch.size()]));\n+        batch \u003d new ArrayList\u003cString\u003e();\n+        batchLen \u003d additionalLen;\n+      }\n+      batch.add(name);\n+    }\n+    if (!batch.isEmpty()) {\n+      list.add(batch.toArray(new String[batch.size()]));\n+    }\n+    return list;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  private List\u003cString[]\u003e createKeySets(String[] keyNames) {\n    List\u003cString[]\u003e list \u003d new ArrayList\u003cString[]\u003e();\n    List\u003cString\u003e batch \u003d new ArrayList\u003cString\u003e();\n    int batchLen \u003d 0;\n    for (String name : keyNames) {\n      int additionalLen \u003d KMSRESTConstants.KEY_OP.length() + 1 + name.length();\n      batchLen +\u003d additionalLen;\n      // topping at 1500 to account for initial URL and encoded names\n      if (batchLen \u003e 1500) {\n        list.add(batch.toArray(new String[batch.size()]));\n        batch \u003d new ArrayList\u003cString\u003e();\n        batchLen \u003d additionalLen;\n      }\n      batch.add(name);\n    }\n    if (!batch.isEmpty()) {\n      list.add(batch.toArray(new String[batch.size()]));\n    }\n    return list;\n  }",
      "path": "hadoop-common-project/hadoop-common/src/main/java/org/apache/hadoop/crypto/key/kms/KMSClientProvider.java"
    }
  }
}