{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BPOfferService.java",
  "functionName": "reportBadBlocks",
  "functionId": "reportBadBlocks___block-ExtendedBlock__storageUuid-String__storageType-StorageType",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
  "functionStartLine": 289,
  "functionEndLine": 297,
  "numCommitsSeen": 87,
  "timeTaken": 1528,
  "changeHistory": [
    "38262779bbf38a427bad6d044e91165567f1d206"
  ],
  "changeHistoryShort": {
    "38262779bbf38a427bad6d044e91165567f1d206": "Ybodychange"
  },
  "changeHistoryDetails": {
    "38262779bbf38a427bad6d044e91165567f1d206": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-7704. DN heartbeat to Active NN may be blocked and expire if connection to Standby NN continues to time out. Contributed by Rushabh Shah.\n",
      "commitDate": "12/02/15 7:15 AM",
      "commitName": "38262779bbf38a427bad6d044e91165567f1d206",
      "commitAuthor": "Kihwal Lee",
      "commitDateOld": "21/01/15 7:00 PM",
      "commitNameOld": "6e62a1a6728b1f782f64065424f92b292c3f163a",
      "commitAuthorOld": "Colin Patrick Mccabe",
      "daysBetweenCommits": 21.51,
      "commitsBetweenForRepo": 213,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,7 +1,9 @@\n   void reportBadBlocks(ExtendedBlock block,\n                        String storageUuid, StorageType storageType) {\n     checkBlock(block);\n     for (BPServiceActor actor : bpServices) {\n-      actor.reportBadBlocks(block, storageUuid, storageType);\n+      ReportBadBlockAction rbbAction \u003d new ReportBadBlockAction\n+          (block, storageUuid, storageType);\n+      actor.bpThreadEnqueue(rbbAction);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  void reportBadBlocks(ExtendedBlock block,\n                       String storageUuid, StorageType storageType) {\n    checkBlock(block);\n    for (BPServiceActor actor : bpServices) {\n      ReportBadBlockAction rbbAction \u003d new ReportBadBlockAction\n          (block, storageUuid, storageType);\n      actor.bpThreadEnqueue(rbbAction);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/datanode/BPOfferService.java",
      "extendedDetails": {}
    }
  }
}