{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "TimelineServiceV2Publisher.java",
  "functionName": "handle",
  "functionId": "handle___event-TimelineV2PublishEvent",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
  "functionStartLine": 510,
  "functionEndLine": 521,
  "numCommitsSeen": 53,
  "timeTaken": 3628,
  "changeHistory": [
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
    "f3c661e8dddc80726f1084ff27815d179540889c",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38"
  ],
  "changeHistoryShort": {
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
    "f3c661e8dddc80726f1084ff27815d179540889c": "Ymovefromfile",
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4": {
      "type": "Ymultichange(Ymovefromfile,Ybodychange,Yparameterchange)",
      "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
      "commitAuthor": "Sangjin Lee",
      "subchanges": [
        {
          "type": "Ymovefromfile",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "e3e857866d9fdefb7e353b21ae24eab4401e60b3",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-      public void handle(Event event) {\n-        // Use hashCode (of ApplicationId) to dispatch the event to the child\n-        // dispatcher, such that all the writing events of one application will\n-        // be handled by one thread, the scheduled order of the these events\n-        // will be preserved\n-        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n-        dispatchers.get(index).getEventHandler().handle(event);\n-      }\n\\ No newline at end of file\n+    public void handle(TimelineV2PublishEvent event) {\n+      switch (event.getType()) {\n+      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n+            .stopTimelineCollector();\n+        break;\n+      default:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        break;\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(TimelineV2PublishEvent event) {\n      switch (event.getType()) {\n      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n        putEntity(event.getEntity(), event.getApplicationId());\n        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n            .stopTimelineCollector();\n        break;\n      default:\n        putEntity(event.getEntity(), event.getApplicationId());\n        break;\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/AbstractTimelineServicePublisher.java",
            "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
            "oldMethodName": "handle",
            "newMethodName": "handle"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "e3e857866d9fdefb7e353b21ae24eab4401e60b3",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-      public void handle(Event event) {\n-        // Use hashCode (of ApplicationId) to dispatch the event to the child\n-        // dispatcher, such that all the writing events of one application will\n-        // be handled by one thread, the scheduled order of the these events\n-        // will be preserved\n-        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n-        dispatchers.get(index).getEventHandler().handle(event);\n-      }\n\\ No newline at end of file\n+    public void handle(TimelineV2PublishEvent event) {\n+      switch (event.getType()) {\n+      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n+            .stopTimelineCollector();\n+        break;\n+      default:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        break;\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(TimelineV2PublishEvent event) {\n      switch (event.getType()) {\n      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n        putEntity(event.getEntity(), event.getApplicationId());\n        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n            .stopTimelineCollector();\n        break;\n      default:\n        putEntity(event.getEntity(), event.getApplicationId());\n        break;\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {}
        },
        {
          "type": "Yparameterchange",
          "commitMessage": "YARN-4129. Refactor the SystemMetricPublisher in RM to better support newer events (Naganarasimha G R via sjlee)\n",
          "commitDate": "10/07/16 8:45 AM",
          "commitName": "10ec5586fba20d80dd91d8d0ddb442c66d39a0d4",
          "commitAuthor": "Sangjin Lee",
          "commitDateOld": "10/07/16 8:45 AM",
          "commitNameOld": "e3e857866d9fdefb7e353b21ae24eab4401e60b3",
          "commitAuthorOld": "Sangjin Lee",
          "daysBetweenCommits": 0.0,
          "commitsBetweenForRepo": 1,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,8 +1,12 @@\n-      public void handle(Event event) {\n-        // Use hashCode (of ApplicationId) to dispatch the event to the child\n-        // dispatcher, such that all the writing events of one application will\n-        // be handled by one thread, the scheduled order of the these events\n-        // will be preserved\n-        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n-        dispatchers.get(index).getEventHandler().handle(event);\n-      }\n\\ No newline at end of file\n+    public void handle(TimelineV2PublishEvent event) {\n+      switch (event.getType()) {\n+      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n+            .stopTimelineCollector();\n+        break;\n+      default:\n+        putEntity(event.getEntity(), event.getApplicationId());\n+        break;\n+      }\n+    }\n\\ No newline at end of file\n",
          "actualSource": "    public void handle(TimelineV2PublishEvent event) {\n      switch (event.getType()) {\n      case PUBLISH_APPLICATION_FINISHED_ENTITY:\n        putEntity(event.getEntity(), event.getApplicationId());\n        ((ApplicationFinishPublishEvent) event).getRMAppImpl()\n            .stopTimelineCollector();\n        break;\n      default:\n        putEntity(event.getEntity(), event.getApplicationId());\n        break;\n      }\n    }",
          "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/TimelineServiceV2Publisher.java",
          "extendedDetails": {
            "oldValue": "[event-Event]",
            "newValue": "[event-TimelineV2PublishEvent]"
          }
        }
      ]
    },
    "f3c661e8dddc80726f1084ff27815d179540889c": {
      "type": "Ymovefromfile",
      "commitMessage": "YARN-3044. Made RM write app, attempt and optional container lifecycle events to timeline service v2. Contributed by Naganarasimha G R.\n",
      "commitDate": "10/07/16 8:45 AM",
      "commitName": "f3c661e8dddc80726f1084ff27815d179540889c",
      "commitAuthor": "Zhijie Shen",
      "commitDateOld": "10/07/16 8:45 AM",
      "commitNameOld": "42d7864b84e42fafb529f9920c6633ff59c55217",
      "commitAuthorOld": "Zhijie Shen",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "      public void handle(Event event) {\n        // Use hashCode (of ApplicationId) to dispatch the event to the child\n        // dispatcher, such that all the writing events of one application will\n        // be handled by one thread, the scheduled order of the these events\n        // will be preserved\n        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n        dispatchers.get(index).getEventHandler().handle(event);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/AbstractTimelineServicePublisher.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/AbstractTimelineServicePublisher.java",
        "oldMethodName": "handle",
        "newMethodName": "handle"
      }
    },
    "6b8b1608e64e300e4e1d23c60476febaca29ca38": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2033. Merging generic-history into the Timeline Store (Contributed by Zhijie Shen)\n",
      "commitDate": "11/09/14 7:04 PM",
      "commitName": "6b8b1608e64e300e4e1d23c60476febaca29ca38",
      "commitAuthor": "junping_du",
      "diff": "@@ -0,0 +1,8 @@\n+      public void handle(Event event) {\n+        // Use hashCode (of ApplicationId) to dispatch the event to the child\n+        // dispatcher, such that all the writing events of one application will\n+        // be handled by one thread, the scheduled order of the these events\n+        // will be preserved\n+        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n+        dispatchers.get(index).getEventHandler().handle(event);\n+      }\n\\ No newline at end of file\n",
      "actualSource": "      public void handle(Event event) {\n        // Use hashCode (of ApplicationId) to dispatch the event to the child\n        // dispatcher, such that all the writing events of one application will\n        // be handled by one thread, the scheduled order of the these events\n        // will be preserved\n        int index \u003d (event.hashCode() \u0026 Integer.MAX_VALUE) % dispatchers.size();\n        dispatchers.get(index).getEventHandler().handle(event);\n      }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/metrics/SystemMetricsPublisher.java"
    }
  }
}