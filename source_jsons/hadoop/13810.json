{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "BlockManager.java",
  "functionName": "addToInvalidates",
  "functionId": "addToInvalidates___storedBlock-BlockInfo",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
  "functionStartLine": 1730,
  "functionEndLine": 1752,
  "numCommitsSeen": 477,
  "timeTaken": 9210,
  "changeHistory": [
    "f7dabe3addf3f6eb32ea9b8ec1354fb442ce4222",
    "e418bd1fb0568ce7ae22f588fea2dd9c95567383",
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1"
  ],
  "changeHistoryShort": {
    "f7dabe3addf3f6eb32ea9b8ec1354fb442ce4222": "Ybodychange",
    "e418bd1fb0568ce7ae22f588fea2dd9c95567383": "Ybodychange",
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": "Ybodychange"
  },
  "changeHistoryDetails": {
    "f7dabe3addf3f6eb32ea9b8ec1354fb442ce4222": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-10620. StringBuilder created and appended even if logging is disabled. Contributed by Staffan Friberg.\n",
      "commitDate": "19/07/16 3:13 PM",
      "commitName": "f7dabe3addf3f6eb32ea9b8ec1354fb442ce4222",
      "commitAuthor": "Akira Ajisaka",
      "commitDateOld": "02/06/16 1:14 PM",
      "commitNameOld": "97e244947719d483c3f80521a00fec8e13dcb637",
      "commitAuthorOld": "Arpit Agarwal",
      "daysBetweenCommits": 47.08,
      "commitsBetweenForRepo": 437,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,23 @@\n   private void addToInvalidates(BlockInfo storedBlock) {\n     if (!isPopulatingReplQueues()) {\n       return;\n     }\n-    StringBuilder datanodes \u003d new StringBuilder();\n+    StringBuilder datanodes \u003d blockLog.isDebugEnabled()\n+        ? new StringBuilder() : null;\n     for (DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock)) {\n       if (storage.getState() !\u003d State.NORMAL) {\n         continue;\n       }\n       final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n       final Block b \u003d getBlockOnStorage(storedBlock, storage);\n       if (b !\u003d null) {\n         invalidateBlocks.add(b, node, false);\n-        datanodes.append(node).append(\" \");\n+        if (datanodes !\u003d null) {\n+          datanodes.append(node).append(\" \");\n+        }\n       }\n     }\n-    if (datanodes.length() !\u003d 0) {\n+    if (datanodes !\u003d null \u0026\u0026 datanodes.length() !\u003d 0) {\n       blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addToInvalidates(BlockInfo storedBlock) {\n    if (!isPopulatingReplQueues()) {\n      return;\n    }\n    StringBuilder datanodes \u003d blockLog.isDebugEnabled()\n        ? new StringBuilder() : null;\n    for (DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock)) {\n      if (storage.getState() !\u003d State.NORMAL) {\n        continue;\n      }\n      final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n      final Block b \u003d getBlockOnStorage(storedBlock, storage);\n      if (b !\u003d null) {\n        invalidateBlocks.add(b, node, false);\n        if (datanodes !\u003d null) {\n          datanodes.append(node).append(\" \");\n        }\n      }\n    }\n    if (datanodes !\u003d null \u0026\u0026 datanodes.length() !\u003d 0) {\n      blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "e418bd1fb0568ce7ae22f588fea2dd9c95567383": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9566. Remove expensive \u0027BlocksMap#getStorages(Block b, final DatanodeStorage.State state)\u0027 method (Contributed by Daryn Sharp)\n",
      "commitDate": "31/01/16 11:54 PM",
      "commitName": "e418bd1fb0568ce7ae22f588fea2dd9c95567383",
      "commitAuthor": "Vinayakumar B",
      "commitDateOld": "27/01/16 4:31 PM",
      "commitNameOld": "3a9571308e99cc374681bbc451a517d41a150aa0",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 4.31,
      "commitsBetweenForRepo": 22,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,18 +1,20 @@\n   private void addToInvalidates(BlockInfo storedBlock) {\n     if (!isPopulatingReplQueues()) {\n       return;\n     }\n     StringBuilder datanodes \u003d new StringBuilder();\n-    for(DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock,\n-        State.NORMAL)) {\n+    for (DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock)) {\n+      if (storage.getState() !\u003d State.NORMAL) {\n+        continue;\n+      }\n       final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n       final Block b \u003d getBlockOnStorage(storedBlock, storage);\n       if (b !\u003d null) {\n         invalidateBlocks.add(b, node, false);\n         datanodes.append(node).append(\" \");\n       }\n     }\n     if (datanodes.length() !\u003d 0) {\n       blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addToInvalidates(BlockInfo storedBlock) {\n    if (!isPopulatingReplQueues()) {\n      return;\n    }\n    StringBuilder datanodes \u003d new StringBuilder();\n    for (DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock)) {\n      if (storage.getState() !\u003d State.NORMAL) {\n        continue;\n      }\n      final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n      final Block b \u003d getBlockOnStorage(storedBlock, storage);\n      if (b !\u003d null) {\n        invalidateBlocks.add(b, node, false);\n        datanodes.append(node).append(\" \");\n      }\n    }\n    if (datanodes.length() !\u003d 0) {\n      blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    },
    "796a676d18bd7cd3ed4113d002e0e69cf261d6d1": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-9528. Cleanup namenode audit/log/exception messages. (szetszwo via umamahesh)\n",
      "commitDate": "11/12/15 5:57 PM",
      "commitName": "796a676d18bd7cd3ed4113d002e0e69cf261d6d1",
      "commitAuthor": "Uma Mahesh",
      "commitDateOld": "09/12/15 5:55 PM",
      "commitNameOld": "132478e805ba0f955345217b8ad87c2d17cccb2d",
      "commitAuthorOld": "Tsz-Wo Nicholas Sze",
      "daysBetweenCommits": 2.0,
      "commitsBetweenForRepo": 10,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,18 @@\n   private void addToInvalidates(BlockInfo storedBlock) {\n     if (!isPopulatingReplQueues()) {\n       return;\n     }\n     StringBuilder datanodes \u003d new StringBuilder();\n     for(DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock,\n         State.NORMAL)) {\n       final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n       final Block b \u003d getBlockOnStorage(storedBlock, storage);\n       if (b !\u003d null) {\n         invalidateBlocks.add(b, node, false);\n         datanodes.append(node).append(\" \");\n       }\n     }\n     if (datanodes.length() !\u003d 0) {\n-      blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock,\n-          datanodes.toString());\n+      blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void addToInvalidates(BlockInfo storedBlock) {\n    if (!isPopulatingReplQueues()) {\n      return;\n    }\n    StringBuilder datanodes \u003d new StringBuilder();\n    for(DatanodeStorageInfo storage : blocksMap.getStorages(storedBlock,\n        State.NORMAL)) {\n      final DatanodeDescriptor node \u003d storage.getDatanodeDescriptor();\n      final Block b \u003d getBlockOnStorage(storedBlock, storage);\n      if (b !\u003d null) {\n        invalidateBlocks.add(b, node, false);\n        datanodes.append(node).append(\" \");\n      }\n    }\n    if (datanodes.length() !\u003d 0) {\n      blockLog.debug(\"BLOCK* addToInvalidates: {} {}\", storedBlock, datanodes);\n    }\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/blockmanagement/BlockManager.java",
      "extendedDetails": {}
    }
  }
}