{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "ContainersMonitorImpl.java",
  "functionName": "onChangeMonitoringContainerResource",
  "functionId": "onChangeMonitoringContainerResource___monitoringEvent-ContainersMonitorEvent__containerId-ContainerId",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
  "functionStartLine": 973,
  "functionEndLine": 992,
  "numCommitsSeen": 66,
  "timeTaken": 4519,
  "changeHistory": [
    "1ac967a6b77c262b23e10c6ca68538b7e4ed39b0",
    "221089760910743eae58eb2cbd5ac86c4ee96a17",
    "4d7be1d8575e9254c59d41460960708e3718503a",
    "41ac190dba782a59669bd622f572f452267c808e",
    "9449519a2503c55d9eac8fd7519df28aa0760059",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d"
  ],
  "changeHistoryShort": {
    "1ac967a6b77c262b23e10c6ca68538b7e4ed39b0": "Ybodychange",
    "221089760910743eae58eb2cbd5ac86c4ee96a17": "Ybodychange",
    "4d7be1d8575e9254c59d41460960708e3718503a": "Ybodychange",
    "41ac190dba782a59669bd622f572f452267c808e": "Ybodychange",
    "9449519a2503c55d9eac8fd7519df28aa0760059": "Ymodifierchange",
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": "Ybodychange",
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": "Yintroduced"
  },
  "changeHistoryDetails": {
    "1ac967a6b77c262b23e10c6ca68538b7e4ed39b0": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6055. ContainersMonitorImpl need be adjusted when NM resource changed. Contributed by Inigo Goiri.\n",
      "commitDate": "26/06/19 2:01 PM",
      "commitName": "1ac967a6b77c262b23e10c6ca68538b7e4ed39b0",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "17/06/19 9:23 PM",
      "commitNameOld": "67414a1a80039e70e0afc1de171831a6e981f37a",
      "commitAuthorOld": "Zhankun Tang",
      "daysBetweenCommits": 8.69,
      "commitsBetweenForRepo": 140,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   private void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n     if (containersMonitorEnabled) {\n       ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n       if (processTreeInfo \u003d\u003d null) {\n         LOG.warn(\"Failed to track container {}. It may have already completed.\",\n             containerId);\n         return;\n       }\n       LOG.info(\"Changing resource-monitoring for {}\", containerId);\n       updateContainerMetrics(monitoringEvent);\n-      long pmemLimit \u003d\n-          changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n+      Resource resource \u003d changeEvent.getResource();\n+      long pmemLimit \u003d convertMBytesToBytes(resource.getMemorySize());\n       long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n-      int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n+      int cpuVcores \u003d resource.getVirtualCores();\n       processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    if (containersMonitorEnabled) {\n      ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n      if (processTreeInfo \u003d\u003d null) {\n        LOG.warn(\"Failed to track container {}. It may have already completed.\",\n            containerId);\n        return;\n      }\n      LOG.info(\"Changing resource-monitoring for {}\", containerId);\n      updateContainerMetrics(monitoringEvent);\n      Resource resource \u003d changeEvent.getResource();\n      long pmemLimit \u003d convertMBytesToBytes(resource.getMemorySize());\n      long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n      int cpuVcores \u003d resource.getVirtualCores();\n      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "221089760910743eae58eb2cbd5ac86c4ee96a17": {
      "type": "Ybodychange",
      "commitMessage": "YARN-9592. Use Logger format in ContainersMonitorImpl. Contributed by Inigo Goiri.\n",
      "commitDate": "31/05/19 5:35 PM",
      "commitName": "221089760910743eae58eb2cbd5ac86c4ee96a17",
      "commitAuthor": "Giovanni Matteo Fumarola",
      "commitDateOld": "15/03/19 4:20 PM",
      "commitNameOld": "2064ca015d1584263aac0cc20c60b925a3aff612",
      "commitAuthorOld": "Eric Yang",
      "daysBetweenCommits": 77.05,
      "commitsBetweenForRepo": 469,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,21 +1,20 @@\n   private void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n     if (containersMonitorEnabled) {\n       ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n       if (processTreeInfo \u003d\u003d null) {\n-        LOG.warn(\"Failed to track container \"\n-            + containerId.toString()\n-            + \". It may have already completed.\");\n+        LOG.warn(\"Failed to track container {}. It may have already completed.\",\n+            containerId);\n         return;\n       }\n-      LOG.info(\"Changing resource-monitoring for \" + containerId);\n+      LOG.info(\"Changing resource-monitoring for {}\", containerId);\n       updateContainerMetrics(monitoringEvent);\n       long pmemLimit \u003d\n           changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n       long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n       int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n       processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     }\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    if (containersMonitorEnabled) {\n      ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n      if (processTreeInfo \u003d\u003d null) {\n        LOG.warn(\"Failed to track container {}. It may have already completed.\",\n            containerId);\n        return;\n      }\n      LOG.info(\"Changing resource-monitoring for {}\", containerId);\n      updateContainerMetrics(monitoringEvent);\n      long pmemLimit \u003d\n          changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n      long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n      int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "4d7be1d8575e9254c59d41460960708e3718503a": {
      "type": "Ybodychange",
      "commitMessage": "YARN-5978. ContainerScheduler and ContainerManager changes to support ExecType update. (Kartheek Muthyala via asuresh)\n",
      "commitDate": "14/08/17 7:46 PM",
      "commitName": "4d7be1d8575e9254c59d41460960708e3718503a",
      "commitAuthor": "Arun Suresh",
      "commitDateOld": "19/04/17 10:53 AM",
      "commitNameOld": "41ac190dba782a59669bd622f572f452267c808e",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 117.37,
      "commitsBetweenForRepo": 671,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,23 +1,21 @@\n   private void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n     if (containersMonitorEnabled) {\n       ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n       if (processTreeInfo \u003d\u003d null) {\n         LOG.warn(\"Failed to track container \"\n             + containerId.toString()\n             + \". It may have already completed.\");\n         return;\n       }\n       LOG.info(\"Changing resource-monitoring for \" + containerId);\n       updateContainerMetrics(monitoringEvent);\n       long pmemLimit \u003d\n           changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n       long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n       int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n       processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     }\n-\n-    changeContainerResource(containerId, changeEvent.getResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    if (containersMonitorEnabled) {\n      ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n      if (processTreeInfo \u003d\u003d null) {\n        LOG.warn(\"Failed to track container \"\n            + containerId.toString()\n            + \". It may have already completed.\");\n        return;\n      }\n      LOG.info(\"Changing resource-monitoring for \" + containerId);\n      updateContainerMetrics(monitoringEvent);\n      long pmemLimit \u003d\n          changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n      long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n      int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    }\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "41ac190dba782a59669bd622f572f452267c808e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-6438. Code can be improved in ContainersMonitorImpl.java\n(Contributed by Miklos Szegedi via Daniel Templeton)\n",
      "commitDate": "19/04/17 10:53 AM",
      "commitName": "41ac190dba782a59669bd622f572f452267c808e",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "28/11/16 3:19 PM",
      "commitNameOld": "62b42ef5dd04d516d33bf0890ac5cd49f8184a73",
      "commitAuthorOld": "Daniel Templeton",
      "daysBetweenCommits": 141.77,
      "commitsBetweenForRepo": 766,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,23 @@\n   private void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n-    ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n-    if (processTreeInfo \u003d\u003d null) {\n-      LOG.warn(\"Failed to track container \"\n-          + containerId.toString()\n-          + \". It may have already completed.\");\n-      return;\n+    if (containersMonitorEnabled) {\n+      ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n+      if (processTreeInfo \u003d\u003d null) {\n+        LOG.warn(\"Failed to track container \"\n+            + containerId.toString()\n+            + \". It may have already completed.\");\n+        return;\n+      }\n+      LOG.info(\"Changing resource-monitoring for \" + containerId);\n+      updateContainerMetrics(monitoringEvent);\n+      long pmemLimit \u003d\n+          changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n+      long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n+      int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n+      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     }\n-    LOG.info(\"Changing resource-monitoring for \" + containerId);\n-    updateContainerMetrics(monitoringEvent);\n-    long pmemLimit \u003d changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n-    long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n-    int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n-    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n+\n     changeContainerResource(containerId, changeEvent.getResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    if (containersMonitorEnabled) {\n      ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n      if (processTreeInfo \u003d\u003d null) {\n        LOG.warn(\"Failed to track container \"\n            + containerId.toString()\n            + \". It may have already completed.\");\n        return;\n      }\n      LOG.info(\"Changing resource-monitoring for \" + containerId);\n      updateContainerMetrics(monitoringEvent);\n      long pmemLimit \u003d\n          changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n      long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n      int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n      processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    }\n\n    changeContainerResource(containerId, changeEvent.getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "9449519a2503c55d9eac8fd7519df28aa0760059": {
      "type": "Ymodifierchange",
      "commitMessage": "YARN-5776. Checkstyle: MonitoringThread.Run method length is too long (miklos.szegedi@cloudera.com via rkanter)\n",
      "commitDate": "27/10/16 2:36 PM",
      "commitName": "9449519a2503c55d9eac8fd7519df28aa0760059",
      "commitAuthor": "Robert Kanter",
      "commitDateOld": "28/09/16 2:48 AM",
      "commitNameOld": "bc2656f09f857fdbc39da6b060cee453d2dec4dc",
      "commitAuthorOld": "Varun Vasudev",
      "daysBetweenCommits": 29.49,
      "commitsBetweenForRepo": 249,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n-  protected void onChangeMonitoringContainerResource(\n+  private void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n     ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n     if (processTreeInfo \u003d\u003d null) {\n       LOG.warn(\"Failed to track container \"\n           + containerId.toString()\n           + \". It may have already completed.\");\n       return;\n     }\n     LOG.info(\"Changing resource-monitoring for \" + containerId);\n     updateContainerMetrics(monitoringEvent);\n     long pmemLimit \u003d changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n     long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n     int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n     processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     changeContainerResource(containerId, changeEvent.getResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  private void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n    if (processTreeInfo \u003d\u003d null) {\n      LOG.warn(\"Failed to track container \"\n          + containerId.toString()\n          + \". It may have already completed.\");\n      return;\n    }\n    LOG.info(\"Changing resource-monitoring for \" + containerId);\n    updateContainerMetrics(monitoringEvent);\n    long pmemLimit \u003d changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n    long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n    int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    changeContainerResource(containerId, changeEvent.getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {
        "oldValue": "[protected]",
        "newValue": "[private]"
      }
    },
    "42f90ab885d9693fcc1e52f9637f7de4111110ae": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4844. Add getMemorySize/getVirtualCoresSize to o.a.h.y.api.records.Resource. Contributed by Wangda Tan.\n",
      "commitDate": "29/05/16 8:54 AM",
      "commitName": "42f90ab885d9693fcc1e52f9637f7de4111110ae",
      "commitAuthor": "Varun Vasudev",
      "commitDateOld": "27/05/16 5:49 PM",
      "commitNameOld": "4fc09a897b25914a9b9321cc443f3f3ff3d776d5",
      "commitAuthorOld": "Arun Suresh",
      "daysBetweenCommits": 1.63,
      "commitsBetweenForRepo": 3,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,19 +1,19 @@\n   protected void onChangeMonitoringContainerResource(\n       ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n     ChangeMonitoringContainerResourceEvent changeEvent \u003d\n         (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n     ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n     if (processTreeInfo \u003d\u003d null) {\n       LOG.warn(\"Failed to track container \"\n           + containerId.toString()\n           + \". It may have already completed.\");\n       return;\n     }\n     LOG.info(\"Changing resource-monitoring for \" + containerId);\n     updateContainerMetrics(monitoringEvent);\n-    long pmemLimit \u003d changeEvent.getResource().getMemory() * 1024L * 1024L;\n+    long pmemLimit \u003d changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n     long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n     int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n     processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n     changeContainerResource(containerId, changeEvent.getResource());\n   }\n\\ No newline at end of file\n",
      "actualSource": "  protected void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n    if (processTreeInfo \u003d\u003d null) {\n      LOG.warn(\"Failed to track container \"\n          + containerId.toString()\n          + \". It may have already completed.\");\n      return;\n    }\n    LOG.info(\"Changing resource-monitoring for \" + containerId);\n    updateContainerMetrics(monitoringEvent);\n    long pmemLimit \u003d changeEvent.getResource().getMemorySize() * 1024L * 1024L;\n    long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n    int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    changeContainerResource(containerId, changeEvent.getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java",
      "extendedDetails": {}
    },
    "c8172f5f143d2fefafa5a412899ab7cd081b406d": {
      "type": "Yintroduced",
      "commitMessage": "YARN-2883. Queuing of container requests in the NM. (Konstantinos Karanasos and Arun Suresh via kasha)\n",
      "commitDate": "20/04/16 9:55 AM",
      "commitName": "c8172f5f143d2fefafa5a412899ab7cd081b406d",
      "commitAuthor": "Karthik Kambatla",
      "diff": "@@ -0,0 +1,19 @@\n+  protected void onChangeMonitoringContainerResource(\n+      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n+    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n+        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n+    ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n+    if (processTreeInfo \u003d\u003d null) {\n+      LOG.warn(\"Failed to track container \"\n+          + containerId.toString()\n+          + \". It may have already completed.\");\n+      return;\n+    }\n+    LOG.info(\"Changing resource-monitoring for \" + containerId);\n+    updateContainerMetrics(monitoringEvent);\n+    long pmemLimit \u003d changeEvent.getResource().getMemory() * 1024L * 1024L;\n+    long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n+    int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n+    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n+    changeContainerResource(containerId, changeEvent.getResource());\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  protected void onChangeMonitoringContainerResource(\n      ContainersMonitorEvent monitoringEvent, ContainerId containerId) {\n    ChangeMonitoringContainerResourceEvent changeEvent \u003d\n        (ChangeMonitoringContainerResourceEvent) monitoringEvent;\n    ProcessTreeInfo processTreeInfo \u003d trackingContainers.get(containerId);\n    if (processTreeInfo \u003d\u003d null) {\n      LOG.warn(\"Failed to track container \"\n          + containerId.toString()\n          + \". It may have already completed.\");\n      return;\n    }\n    LOG.info(\"Changing resource-monitoring for \" + containerId);\n    updateContainerMetrics(monitoringEvent);\n    long pmemLimit \u003d changeEvent.getResource().getMemory() * 1024L * 1024L;\n    long vmemLimit \u003d (long) (pmemLimit * vmemRatio);\n    int cpuVcores \u003d changeEvent.getResource().getVirtualCores();\n    processTreeInfo.setResourceLimit(pmemLimit, vmemLimit, cpuVcores);\n    changeContainerResource(containerId, changeEvent.getResource());\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-nodemanager/src/main/java/org/apache/hadoop/yarn/server/nodemanager/containermanager/monitor/ContainersMonitorImpl.java"
    }
  }
}