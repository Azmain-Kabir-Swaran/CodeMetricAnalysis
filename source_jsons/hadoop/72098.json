{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FileSignerSecretProvider.java",
  "functionName": "init",
  "functionId": "init___config-Properties__servletContext-ServletContext__tokenValidity-long",
  "sourceFilePath": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/FileSignerSecretProvider.java",
  "functionStartLine": 40,
  "functionEndLine": 73,
  "numCommitsSeen": 1,
  "timeTaken": 364,
  "changeHistory": [
    "3807884263f859f0aaf6a7cbf0009ffc6543c157"
  ],
  "changeHistoryShort": {
    "3807884263f859f0aaf6a7cbf0009ffc6543c157": "Yintroduced"
  },
  "changeHistoryDetails": {
    "3807884263f859f0aaf6a7cbf0009ffc6543c157": {
      "type": "Yintroduced",
      "commitMessage": "Addendum for HADOOP-10670.\n",
      "commitDate": "25/03/15 12:29 PM",
      "commitName": "3807884263f859f0aaf6a7cbf0009ffc6543c157",
      "commitAuthor": "Haohui Mai",
      "diff": "@@ -0,0 +1,34 @@\n+  public void init(Properties config, ServletContext servletContext,\n+                   long tokenValidity) throws Exception {\n+\n+    String signatureSecretFile \u003d config.getProperty(\n+        AuthenticationFilter.SIGNATURE_SECRET_FILE, null);\n+\n+    Reader reader \u003d null;\n+    if (signatureSecretFile !\u003d null) {\n+      try {\n+        StringBuilder sb \u003d new StringBuilder();\n+        reader \u003d new InputStreamReader(\n+            new FileInputStream(signatureSecretFile), Charsets.UTF_8);\n+        int c \u003d reader.read();\n+        while (c \u003e -1) {\n+          sb.append((char) c);\n+          c \u003d reader.read();\n+        }\n+        secret \u003d sb.toString().getBytes(Charset.forName(\"UTF-8\"));\n+      } catch (IOException ex) {\n+        throw new RuntimeException(\"Could not read signature secret file: \" +\n+            signatureSecretFile);\n+      } finally {\n+        if (reader !\u003d null) {\n+          try {\n+            reader.close();\n+          } catch (IOException e) {\n+            // nothing to do\n+          }\n+        }\n+      }\n+    }\n+\n+    secrets \u003d new byte[][]{secret};\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public void init(Properties config, ServletContext servletContext,\n                   long tokenValidity) throws Exception {\n\n    String signatureSecretFile \u003d config.getProperty(\n        AuthenticationFilter.SIGNATURE_SECRET_FILE, null);\n\n    Reader reader \u003d null;\n    if (signatureSecretFile !\u003d null) {\n      try {\n        StringBuilder sb \u003d new StringBuilder();\n        reader \u003d new InputStreamReader(\n            new FileInputStream(signatureSecretFile), Charsets.UTF_8);\n        int c \u003d reader.read();\n        while (c \u003e -1) {\n          sb.append((char) c);\n          c \u003d reader.read();\n        }\n        secret \u003d sb.toString().getBytes(Charset.forName(\"UTF-8\"));\n      } catch (IOException ex) {\n        throw new RuntimeException(\"Could not read signature secret file: \" +\n            signatureSecretFile);\n      } finally {\n        if (reader !\u003d null) {\n          try {\n            reader.close();\n          } catch (IOException e) {\n            // nothing to do\n          }\n        }\n      }\n    }\n\n    secrets \u003d new byte[][]{secret};\n  }",
      "path": "hadoop-common-project/hadoop-auth/src/main/java/org/apache/hadoop/security/authentication/util/FileSignerSecretProvider.java"
    }
  }
}