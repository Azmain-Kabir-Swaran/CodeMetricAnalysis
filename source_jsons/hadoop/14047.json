{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "DelegationTokenSecretManager.java",
  "functionName": "retrievePassword",
  "functionId": "retrievePassword___identifier-DelegationTokenIdentifier",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java",
  "functionStartLine": 107,
  "functionEndLine": 126,
  "numCommitsSeen": 23,
  "timeTaken": 1447,
  "changeHistory": [
    "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2",
    "52f0259502de42e433588c299339bf5cd4ba1f8e"
  ],
  "changeHistoryShort": {
    "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2": "Ymultichange(Ymodifierchange,Ybodychange)",
    "52f0259502de42e433588c299339bf5cd4ba1f8e": "Yintroduced"
  },
  "changeHistoryDetails": {
    "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2": {
      "type": "Ymultichange(Ymodifierchange,Ybodychange)",
      "commitMessage": "HDFS-5124. DelegationTokenSecretManager#retrievePassword can cause deadlock in NameNode. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516671 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "22/08/13 5:55 PM",
      "commitName": "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2",
      "commitAuthor": "Jing Zhao",
      "subchanges": [
        {
          "type": "Ymodifierchange",
          "commitMessage": "HDFS-5124. DelegationTokenSecretManager#retrievePassword can cause deadlock in NameNode. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516671 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/13 5:55 PM",
          "commitName": "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "16/08/13 3:35 PM",
          "commitNameOld": "52f0259502de42e433588c299339bf5cd4ba1f8e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  public synchronized byte[] retrievePassword(\n+  public byte[] retrievePassword(\n       DelegationTokenIdentifier identifier) throws InvalidToken {\n     try {\n       // this check introduces inconsistency in the authentication to a\n       // HA standby NN.  non-token auths are allowed into the namespace which\n       // decides whether to throw a StandbyException.  tokens are a bit\n       // different in that a standby may be behind and thus not yet know\n       // of all tokens issued by the active NN.  the following check does\n       // not allow ANY token auth, however it should allow known tokens in\n-      checkAvailableForRead();\n+      namesystem.checkOperation(OperationCategory.READ);\n     } catch (StandbyException se) {\n       // FIXME: this is a hack to get around changing method signatures by\n       // tunneling a non-InvalidToken exception as the cause which the\n       // RPC server will unwrap before returning to the client\n       InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n       wrappedStandby.initCause(se);\n       throw wrappedStandby;\n     }\n     return super.retrievePassword(identifier);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] retrievePassword(\n      DelegationTokenIdentifier identifier) throws InvalidToken {\n    try {\n      // this check introduces inconsistency in the authentication to a\n      // HA standby NN.  non-token auths are allowed into the namespace which\n      // decides whether to throw a StandbyException.  tokens are a bit\n      // different in that a standby may be behind and thus not yet know\n      // of all tokens issued by the active NN.  the following check does\n      // not allow ANY token auth, however it should allow known tokens in\n      namesystem.checkOperation(OperationCategory.READ);\n    } catch (StandbyException se) {\n      // FIXME: this is a hack to get around changing method signatures by\n      // tunneling a non-InvalidToken exception as the cause which the\n      // RPC server will unwrap before returning to the client\n      InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n      wrappedStandby.initCause(se);\n      throw wrappedStandby;\n    }\n    return super.retrievePassword(identifier);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java",
          "extendedDetails": {
            "oldValue": "[public, synchronized]",
            "newValue": "[public]"
          }
        },
        {
          "type": "Ybodychange",
          "commitMessage": "HDFS-5124. DelegationTokenSecretManager#retrievePassword can cause deadlock in NameNode. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1516671 13f79535-47bb-0310-9956-ffa450edef68\n",
          "commitDate": "22/08/13 5:55 PM",
          "commitName": "7cfbfe52f1bc33940dc06c861b0847aad87ef1f2",
          "commitAuthor": "Jing Zhao",
          "commitDateOld": "16/08/13 3:35 PM",
          "commitNameOld": "52f0259502de42e433588c299339bf5cd4ba1f8e",
          "commitAuthorOld": "Jing Zhao",
          "daysBetweenCommits": 6.1,
          "commitsBetweenForRepo": 34,
          "commitsBetweenForFile": 1,
          "diff": "@@ -1,20 +1,20 @@\n-  public synchronized byte[] retrievePassword(\n+  public byte[] retrievePassword(\n       DelegationTokenIdentifier identifier) throws InvalidToken {\n     try {\n       // this check introduces inconsistency in the authentication to a\n       // HA standby NN.  non-token auths are allowed into the namespace which\n       // decides whether to throw a StandbyException.  tokens are a bit\n       // different in that a standby may be behind and thus not yet know\n       // of all tokens issued by the active NN.  the following check does\n       // not allow ANY token auth, however it should allow known tokens in\n-      checkAvailableForRead();\n+      namesystem.checkOperation(OperationCategory.READ);\n     } catch (StandbyException se) {\n       // FIXME: this is a hack to get around changing method signatures by\n       // tunneling a non-InvalidToken exception as the cause which the\n       // RPC server will unwrap before returning to the client\n       InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n       wrappedStandby.initCause(se);\n       throw wrappedStandby;\n     }\n     return super.retrievePassword(identifier);\n   }\n\\ No newline at end of file\n",
          "actualSource": "  public byte[] retrievePassword(\n      DelegationTokenIdentifier identifier) throws InvalidToken {\n    try {\n      // this check introduces inconsistency in the authentication to a\n      // HA standby NN.  non-token auths are allowed into the namespace which\n      // decides whether to throw a StandbyException.  tokens are a bit\n      // different in that a standby may be behind and thus not yet know\n      // of all tokens issued by the active NN.  the following check does\n      // not allow ANY token auth, however it should allow known tokens in\n      namesystem.checkOperation(OperationCategory.READ);\n    } catch (StandbyException se) {\n      // FIXME: this is a hack to get around changing method signatures by\n      // tunneling a non-InvalidToken exception as the cause which the\n      // RPC server will unwrap before returning to the client\n      InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n      wrappedStandby.initCause(se);\n      throw wrappedStandby;\n    }\n    return super.retrievePassword(identifier);\n  }",
          "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java",
          "extendedDetails": {}
        }
      ]
    },
    "52f0259502de42e433588c299339bf5cd4ba1f8e": {
      "type": "Yintroduced",
      "commitMessage": "HADOOP-9880. SASL changes from HADOOP-9421 breaks Secure HA NN. Contributed by Daryn Sharp.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1514913 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "16/08/13 3:35 PM",
      "commitName": "52f0259502de42e433588c299339bf5cd4ba1f8e",
      "commitAuthor": "Jing Zhao",
      "diff": "@@ -0,0 +1,20 @@\n+  public synchronized byte[] retrievePassword(\n+      DelegationTokenIdentifier identifier) throws InvalidToken {\n+    try {\n+      // this check introduces inconsistency in the authentication to a\n+      // HA standby NN.  non-token auths are allowed into the namespace which\n+      // decides whether to throw a StandbyException.  tokens are a bit\n+      // different in that a standby may be behind and thus not yet know\n+      // of all tokens issued by the active NN.  the following check does\n+      // not allow ANY token auth, however it should allow known tokens in\n+      checkAvailableForRead();\n+    } catch (StandbyException se) {\n+      // FIXME: this is a hack to get around changing method signatures by\n+      // tunneling a non-InvalidToken exception as the cause which the\n+      // RPC server will unwrap before returning to the client\n+      InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n+      wrappedStandby.initCause(se);\n+      throw wrappedStandby;\n+    }\n+    return super.retrievePassword(identifier);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public synchronized byte[] retrievePassword(\n      DelegationTokenIdentifier identifier) throws InvalidToken {\n    try {\n      // this check introduces inconsistency in the authentication to a\n      // HA standby NN.  non-token auths are allowed into the namespace which\n      // decides whether to throw a StandbyException.  tokens are a bit\n      // different in that a standby may be behind and thus not yet know\n      // of all tokens issued by the active NN.  the following check does\n      // not allow ANY token auth, however it should allow known tokens in\n      checkAvailableForRead();\n    } catch (StandbyException se) {\n      // FIXME: this is a hack to get around changing method signatures by\n      // tunneling a non-InvalidToken exception as the cause which the\n      // RPC server will unwrap before returning to the client\n      InvalidToken wrappedStandby \u003d new InvalidToken(\"StandbyException\");\n      wrappedStandby.initCause(se);\n      throw wrappedStandby;\n    }\n    return super.retrievePassword(identifier);\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/security/token/delegation/DelegationTokenSecretManager.java"
    }
  }
}