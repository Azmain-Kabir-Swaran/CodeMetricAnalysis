{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSLeafQueue.java",
  "functionName": "getQueueUserAclInfo",
  "functionId": "getQueueUserAclInfo___user-UserGroupInformation",
  "sourceFilePath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
  "functionStartLine": 396,
  "functionEndLine": 409,
  "numCommitsSeen": 74,
  "timeTaken": 2209,
  "changeHistory": [
    "10468529a9b858bd945e7ecb063c9c1438efa474",
    "dc523bd18247df232fe814aed7062a116242ab04",
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
    "65bda6d168e47106f5542e15bb7b21522478626e",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
    "933a6d2c1ec8d3b373674e3e74eb472863fc464d",
    "e1fdf62123625e4ba399af02f8aad500637d29d1",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c"
  ],
  "changeHistoryShort": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": "Ybodychange",
    "dc523bd18247df232fe814aed7062a116242ab04": "Ybodychange",
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf": "Ybodychange",
    "65bda6d168e47106f5542e15bb7b21522478626e": "Ybodychange",
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": "Yfilerename",
    "933a6d2c1ec8d3b373674e3e74eb472863fc464d": "Ybodychange",
    "e1fdf62123625e4ba399af02f8aad500637d29d1": "Yfilerename",
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": "Yintroduced"
  },
  "changeHistoryDetails": {
    "10468529a9b858bd945e7ecb063c9c1438efa474": {
      "type": "Ybodychange",
      "commitMessage": "YARN-4752. Improved preemption in FairScheduler. (kasha)\n\nContains:\nYARN-5605. Preempt containers (all on one node) to meet the requirement of starved applications\nYARN-5821. Drop left-over preemption-related code and clean up method visibilities in the Schedulable hierarchy\nYARN-5783. Verify identification of starved applications.\nYARN-5819. Verify fairshare and minshare preemption\nYARN-5885. Cleanup YARN-4752 branch for merge\n\nChange-Id: Iee0962377d019dd64dc69a020725d2eaf360858c\n",
      "commitDate": "23/11/16 9:48 PM",
      "commitName": "10468529a9b858bd945e7ecb063c9c1438efa474",
      "commitAuthor": "Daniel Templeton",
      "commitDateOld": "09/11/16 11:44 PM",
      "commitNameOld": "86ac1ad9fd65c7dd12278372b369de38dc4616db",
      "commitAuthorOld": "Karthik Kambatla",
      "daysBetweenCommits": 13.92,
      "commitsBetweenForRepo": 82,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,14 @@\n   public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n     QueueUserACLInfo userAclInfo \u003d\n       recordFactory.newRecordInstance(QueueUserACLInfo.class);\n-    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n+    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003c\u003e();\n     for (QueueACL operation : QueueACL.values()) {\n       if (hasAccess(operation, user)) {\n         operations.add(operation);\n       }\n     }\n \n     userAclInfo.setQueueName(getQueueName());\n     userAclInfo.setUserAcls(operations);\n     return Collections.singletonList(userAclInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003c\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      if (hasAccess(operation, user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "dc523bd18247df232fe814aed7062a116242ab04": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1288. Make Fair Scheduler ACLs more user friendly (Sandy Ryza)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534315 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:45 AM",
      "commitName": "dc523bd18247df232fe814aed7062a116242ab04",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "21/10/13 11:37 AM",
      "commitNameOld": "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 0.01,
      "commitsBetweenForRepo": 2,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n     QueueUserACLInfo userAclInfo \u003d\n       recordFactory.newRecordInstance(QueueUserACLInfo.class);\n     List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n     for (QueueACL operation : QueueACL.values()) {\n-      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n-      if (acls.get(operation).isUserAllowed(user)) {\n+      if (hasAccess(operation, user)) {\n         operations.add(operation);\n       }\n     }\n \n     userAclInfo.setQueueName(getQueueName());\n     userAclInfo.setUserAcls(operations);\n     return Collections.singletonList(userAclInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      if (hasAccess(operation, user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf": {
      "type": "Ybodychange",
      "commitMessage": "Reverting \"YARN-1258: Move to 2.2.1 in CHANGES.txt\" because it contained unintended changes\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534308 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:37 AM",
      "commitName": "881d1d5c7e2810ed001fe4ca5dfdc375599d37cf",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "21/10/13 11:31 AM",
      "commitNameOld": "65bda6d168e47106f5542e15bb7b21522478626e",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 0.0,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,14 +1,15 @@\n   public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n     QueueUserACLInfo userAclInfo \u003d\n       recordFactory.newRecordInstance(QueueUserACLInfo.class);\n     List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n     for (QueueACL operation : QueueACL.values()) {\n-      if (hasAccess(operation, user)) {\n+      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n+      if (acls.get(operation).isUserAllowed(user)) {\n         operations.add(operation);\n       }\n     }\n \n     userAclInfo.setQueueName(getQueueName());\n     userAclInfo.setUserAcls(operations);\n     return Collections.singletonList(userAclInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n      if (acls.get(operation).isUserAllowed(user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "65bda6d168e47106f5542e15bb7b21522478626e": {
      "type": "Ybodychange",
      "commitMessage": "YARN-1258: Move to 2.2.1 in CHANGES.txt\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1534307 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/10/13 11:31 AM",
      "commitName": "65bda6d168e47106f5542e15bb7b21522478626e",
      "commitAuthor": "Sanford Ryza",
      "commitDateOld": "14/10/13 1:51 AM",
      "commitNameOld": "2caa8998829e368af64dcad8a5b08722d4339d83",
      "commitAuthorOld": "Sanford Ryza",
      "daysBetweenCommits": 7.4,
      "commitsBetweenForRepo": 44,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,14 @@\n   public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n     QueueUserACLInfo userAclInfo \u003d\n       recordFactory.newRecordInstance(QueueUserACLInfo.class);\n     List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n     for (QueueACL operation : QueueACL.values()) {\n-      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n-      if (acls.get(operation).isUserAllowed(user)) {\n+      if (hasAccess(operation, user)) {\n         operations.add(operation);\n       }\n     }\n \n     userAclInfo.setQueueName(getQueueName());\n     userAclInfo.setUserAcls(operations);\n     return Collections.singletonList(userAclInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      if (hasAccess(operation, user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {}
    },
    "ae6f1123f57c09a9cf5eed3e8c4659481417dc21": {
      "type": "Yfilerename",
      "commitMessage": "YARN-187. Add hierarchical queues to the fair scheduler. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1415592 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "30/11/12 4:03 AM",
      "commitName": "ae6f1123f57c09a9cf5eed3e8c4659481417dc21",
      "commitAuthor": "Thomas White",
      "commitDateOld": "29/11/12 6:51 PM",
      "commitNameOld": "6b08d7de5f1aa6ee5347903fa7457ef243c1b7cf",
      "commitAuthorOld": "Tsz-wo Sze",
      "daysBetweenCommits": 0.38,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n      if (acls.get(operation).isUserAllowed(user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java",
      "extendedDetails": {
        "oldPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSLeafQueue.java"
      }
    },
    "933a6d2c1ec8d3b373674e3e74eb472863fc464d": {
      "type": "Ybodychange",
      "commitMessage": "YARN-183. Clean up fair scheduler code. Contributed by Sandy Ryza.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1407433 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "09/11/12 4:38 AM",
      "commitName": "933a6d2c1ec8d3b373674e3e74eb472863fc464d",
      "commitAuthor": "Thomas White",
      "commitDateOld": "04/10/12 4:00 PM",
      "commitNameOld": "b8f81d74c8810c6d2c530880a1d1f4923a5e3591",
      "commitAuthorOld": "Alejandro Abdelnur",
      "daysBetweenCommits": 35.57,
      "commitsBetweenForRepo": 203,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,15 +1,15 @@\n   public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n     QueueUserACLInfo userAclInfo \u003d\n       recordFactory.newRecordInstance(QueueUserACLInfo.class);\n     List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n     for (QueueACL operation : QueueACL.values()) {\n-      Map\u003cQueueACL, AccessControlList\u003e acls \u003d this.queueMgr.getQueueAcls(this.getName());\n+      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n       if (acls.get(operation).isUserAllowed(user)) {\n         operations.add(operation);\n       }\n     }\n \n     userAclInfo.setQueueName(getQueueName());\n     userAclInfo.setUserAcls(operations);\n     return Collections.singletonList(userAclInfo);\n   }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      Map\u003cQueueACL, AccessControlList\u003e acls \u003d queueMgr.getQueueAcls(getName());\n      if (acls.get(operation).isUserAllowed(user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java",
      "extendedDetails": {}
    },
    "e1fdf62123625e4ba399af02f8aad500637d29d1": {
      "type": "Yfilerename",
      "commitMessage": "YARN-1. Promote YARN to be a sub-project of Apache Hadoop.\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1370666 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "07/08/12 10:22 PM",
      "commitName": "e1fdf62123625e4ba399af02f8aad500637d29d1",
      "commitAuthor": "Arun Murthy",
      "commitDateOld": "07/08/12 7:53 PM",
      "commitNameOld": "34554d1e11ee1d5b564d7d9ed3e6d55931d72749",
      "commitAuthorOld": "Aaron Myers",
      "daysBetweenCommits": 0.1,
      "commitsBetweenForRepo": 1,
      "commitsBetweenForFile": 1,
      "diff": "",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      Map\u003cQueueACL, AccessControlList\u003e acls \u003d this.queueMgr.getQueueAcls(this.getName());\n      if (acls.get(operation).isUserAllowed(user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java",
      "extendedDetails": {
        "oldPath": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java",
        "newPath": "hadoop-yarn-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java"
      }
    },
    "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-3451. Port Fair Scheduler to MR2 (pwendell via tucu)\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1361020 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "12/07/12 5:43 PM",
      "commitName": "1ef64e64c05ae5318cd4cb47d03a0494d742fb7c",
      "commitAuthor": "Alejandro Abdelnur",
      "diff": "@@ -0,0 +1,15 @@\n+  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n+    QueueUserACLInfo userAclInfo \u003d\n+      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n+    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n+    for (QueueACL operation : QueueACL.values()) {\n+      Map\u003cQueueACL, AccessControlList\u003e acls \u003d this.queueMgr.getQueueAcls(this.getName());\n+      if (acls.get(operation).isUserAllowed(user)) {\n+        operations.add(operation);\n+      }\n+    }\n+\n+    userAclInfo.setQueueName(getQueueName());\n+    userAclInfo.setUserAcls(operations);\n+    return Collections.singletonList(userAclInfo);\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  public List\u003cQueueUserACLInfo\u003e getQueueUserAclInfo(UserGroupInformation user) {\n    QueueUserACLInfo userAclInfo \u003d\n      recordFactory.newRecordInstance(QueueUserACLInfo.class);\n    List\u003cQueueACL\u003e operations \u003d new ArrayList\u003cQueueACL\u003e();\n    for (QueueACL operation : QueueACL.values()) {\n      Map\u003cQueueACL, AccessControlList\u003e acls \u003d this.queueMgr.getQueueAcls(this.getName());\n      if (acls.get(operation).isUserAllowed(user)) {\n        operations.add(operation);\n      }\n    }\n\n    userAclInfo.setQueueName(getQueueName());\n    userAclInfo.setUserAcls(operations);\n    return Collections.singletonList(userAclInfo);\n  }",
      "path": "hadoop-mapreduce-project/hadoop-yarn/hadoop-yarn-server/hadoop-yarn-server-resourcemanager/src/main/java/org/apache/hadoop/yarn/server/resourcemanager/scheduler/fair/FSQueueSchedulable.java"
    }
  }
}