{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "FSNamesystem.java",
  "functionName": "initRetryCache",
  "functionId": "initRetryCache___conf-Configuration",
  "sourceFilePath": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
  "functionStartLine": 1078,
  "functionEndLine": 1097,
  "numCommitsSeen": 873,
  "timeTaken": 40999,
  "changeHistory": [
    "e1162ebb1f0ee3a3d424e4c5ee3ec69717a520a6",
    "1b531c1dbb452a6192fad411605d2baaa3831bcd"
  ],
  "changeHistoryShort": {
    "e1162ebb1f0ee3a3d424e4c5ee3ec69717a520a6": "Ybodychange",
    "1b531c1dbb452a6192fad411605d2baaa3831bcd": "Yintroduced"
  },
  "changeHistoryDetails": {
    "e1162ebb1f0ee3a3d424e4c5ee3ec69717a520a6": {
      "type": "Ybodychange",
      "commitMessage": "HDFS-5167. Add metrics about the NameNode retry cache. Contributed by Tsuyoshi OZAWA.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1574603 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "05/03/14 10:22 AM",
      "commitName": "e1162ebb1f0ee3a3d424e4c5ee3ec69717a520a6",
      "commitAuthor": "Jing Zhao",
      "commitDateOld": "03/03/14 8:42 PM",
      "commitNameOld": "5d29338017fb8ebe8626002c1ca670842968ca4a",
      "commitAuthorOld": "Jing Zhao",
      "daysBetweenCommits": 1.57,
      "commitsBetweenForRepo": 13,
      "commitsBetweenForFile": 1,
      "diff": "@@ -1,20 +1,20 @@\n   static RetryCache initRetryCache(Configuration conf) {\n     boolean enable \u003d conf.getBoolean(DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY,\n         DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT);\n     LOG.info(\"Retry cache on namenode is \" + (enable ? \"enabled\" : \"disabled\"));\n     if (enable) {\n       float heapPercent \u003d conf.getFloat(\n           DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY,\n           DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT);\n       long entryExpiryMillis \u003d conf.getLong(\n           DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY,\n           DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT);\n       LOG.info(\"Retry cache will use \" + heapPercent\n           + \" of total heap and retry cache entry expiry time is \"\n           + entryExpiryMillis + \" millis\");\n       long entryExpiryNanos \u003d entryExpiryMillis * 1000 * 1000;\n-      return new RetryCache(\"Namenode Retry Cache\", heapPercent,\n+      return new RetryCache(\"NameNodeRetryCache\", heapPercent,\n           entryExpiryNanos);\n     }\n     return null;\n   }\n\\ No newline at end of file\n",
      "actualSource": "  static RetryCache initRetryCache(Configuration conf) {\n    boolean enable \u003d conf.getBoolean(DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY,\n        DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT);\n    LOG.info(\"Retry cache on namenode is \" + (enable ? \"enabled\" : \"disabled\"));\n    if (enable) {\n      float heapPercent \u003d conf.getFloat(\n          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY,\n          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT);\n      long entryExpiryMillis \u003d conf.getLong(\n          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY,\n          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT);\n      LOG.info(\"Retry cache will use \" + heapPercent\n          + \" of total heap and retry cache entry expiry time is \"\n          + entryExpiryMillis + \" millis\");\n      long entryExpiryNanos \u003d entryExpiryMillis * 1000 * 1000;\n      return new RetryCache(\"NameNodeRetryCache\", heapPercent,\n          entryExpiryNanos);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java",
      "extendedDetails": {}
    },
    "1b531c1dbb452a6192fad411605d2baaa3831bcd": {
      "type": "Yintroduced",
      "commitMessage": "HDFS-4979. Implement retry cache on Namenode. Contributed by Suresh Srinivas.\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1507170 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "25/07/13 6:09 PM",
      "commitName": "1b531c1dbb452a6192fad411605d2baaa3831bcd",
      "commitAuthor": "Suresh Srinivas",
      "diff": "@@ -0,0 +1,20 @@\n+  static RetryCache initRetryCache(Configuration conf) {\n+    boolean enable \u003d conf.getBoolean(DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY,\n+        DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT);\n+    LOG.info(\"Retry cache on namenode is \" + (enable ? \"enabled\" : \"disabled\"));\n+    if (enable) {\n+      float heapPercent \u003d conf.getFloat(\n+          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY,\n+          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT);\n+      long entryExpiryMillis \u003d conf.getLong(\n+          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY,\n+          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT);\n+      LOG.info(\"Retry cache will use \" + heapPercent\n+          + \" of total heap and retry cache entry expiry time is \"\n+          + entryExpiryMillis + \" millis\");\n+      long entryExpiryNanos \u003d entryExpiryMillis * 1000 * 1000;\n+      return new RetryCache(\"Namenode Retry Cache\", heapPercent,\n+          entryExpiryNanos);\n+    }\n+    return null;\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  static RetryCache initRetryCache(Configuration conf) {\n    boolean enable \u003d conf.getBoolean(DFS_NAMENODE_ENABLE_RETRY_CACHE_KEY,\n        DFS_NAMENODE_ENABLE_RETRY_CACHE_DEFAULT);\n    LOG.info(\"Retry cache on namenode is \" + (enable ? \"enabled\" : \"disabled\"));\n    if (enable) {\n      float heapPercent \u003d conf.getFloat(\n          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_KEY,\n          DFS_NAMENODE_RETRY_CACHE_HEAP_PERCENT_DEFAULT);\n      long entryExpiryMillis \u003d conf.getLong(\n          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_KEY,\n          DFS_NAMENODE_RETRY_CACHE_EXPIRYTIME_MILLIS_DEFAULT);\n      LOG.info(\"Retry cache will use \" + heapPercent\n          + \" of total heap and retry cache entry expiry time is \"\n          + entryExpiryMillis + \" millis\");\n      long entryExpiryNanos \u003d entryExpiryMillis * 1000 * 1000;\n      return new RetryCache(\"Namenode Retry Cache\", heapPercent,\n          entryExpiryNanos);\n    }\n    return null;\n  }",
      "path": "hadoop-hdfs-project/hadoop-hdfs/src/main/java/org/apache/hadoop/hdfs/server/namenode/FSNamesystem.java"
    }
  }
}