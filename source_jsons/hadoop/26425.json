{
  "origin": "codeshovel",
  "repositoryName": "hadoop",
  "repositoryPath": "/home/shaiful/research/codeshovel/codeshovel-projects/hadoop/.git",
  "startCommitName": "HEAD",
  "sourceFileName": "MRAppMaster.java",
  "functionName": "callWithJobClassLoader",
  "functionId": "callWithJobClassLoader___conf-Configuration__action-Action__T__",
  "sourceFilePath": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java",
  "functionStartLine": 1791,
  "functionEndLine": 1809,
  "numCommitsSeen": 124,
  "timeTaken": 1591,
  "changeHistory": [
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602"
  ],
  "changeHistoryShort": {
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602": "Yintroduced"
  },
  "changeHistoryDetails": {
    "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602": {
      "type": "Yintroduced",
      "commitMessage": "MAPREDUCE-5957. AM throws ClassNotFoundException with job classloader enabled if custom output format/committer is used. Contributed by Sangjin Lee\n\n\ngit-svn-id: https://svn.apache.org/repos/asf/hadoop/common/trunk@1612358 13f79535-47bb-0310-9956-ffa450edef68\n",
      "commitDate": "21/07/14 10:54 AM",
      "commitName": "9e62bcca4e2ee4aaa3844d1d975dc0adc93ab602",
      "commitAuthor": "Jason Darrell Lowe",
      "diff": "@@ -0,0 +1,19 @@\n+  \u003cT\u003e T callWithJobClassLoader(Configuration conf, Action\u003cT\u003e action) {\n+    // if the job classloader is enabled, we may need it to load the (custom)\n+    // classes; we make the job classloader available and unset it once it is\n+    // done\n+    ClassLoader currentClassLoader \u003d conf.getClassLoader();\n+    boolean setJobClassLoader \u003d\n+        jobClassLoader !\u003d null \u0026\u0026 currentClassLoader !\u003d jobClassLoader;\n+    if (setJobClassLoader) {\n+      MRApps.setClassLoader(jobClassLoader, conf);\n+    }\n+    try {\n+      return action.call(conf);\n+    } finally {\n+      if (setJobClassLoader) {\n+        // restore the original classloader\n+        MRApps.setClassLoader(currentClassLoader, conf);\n+      }\n+    }\n+  }\n\\ No newline at end of file\n",
      "actualSource": "  \u003cT\u003e T callWithJobClassLoader(Configuration conf, Action\u003cT\u003e action) {\n    // if the job classloader is enabled, we may need it to load the (custom)\n    // classes; we make the job classloader available and unset it once it is\n    // done\n    ClassLoader currentClassLoader \u003d conf.getClassLoader();\n    boolean setJobClassLoader \u003d\n        jobClassLoader !\u003d null \u0026\u0026 currentClassLoader !\u003d jobClassLoader;\n    if (setJobClassLoader) {\n      MRApps.setClassLoader(jobClassLoader, conf);\n    }\n    try {\n      return action.call(conf);\n    } finally {\n      if (setJobClassLoader) {\n        // restore the original classloader\n        MRApps.setClassLoader(currentClassLoader, conf);\n      }\n    }\n  }",
      "path": "hadoop-mapreduce-project/hadoop-mapreduce-client/hadoop-mapreduce-client-app/src/main/java/org/apache/hadoop/mapreduce/v2/app/MRAppMaster.java"
    }
  }
}